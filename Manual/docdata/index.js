pages=[["3D-formats","3D formats"],["abfaq","AssetBundles FAQ"],["AccessNavigation","Asset Store Access and Navigation"],["AmountVectorMagnitudeInAnotherDirection","The Amount of One Vector's Magnitude that Lies in Another Vector's Direction"],["Analytics","Analytics"],["AnatomyofaMesh","Anatomy of a Mesh"],["android-API","Android Scripting"],["android-bugreporting","Reporting crash bugs under Android"],["android-BuildProcess","Inside the Android Build Process"],["android-GettingStarted","Getting Started with Android Development"],["android-OBBsupport","Support for Split Application Binary (.OBB)"],["android-remote","Android Remote (DEPRECATED)"],["android-sdksetup","Android SDK Setup"],["android-unsupported","Features currently not supported by Unity Android"],["AndroidMobileCustomizeSplashScreen","Customizing an Android Splash Screen"],["AnimationClips","Animation Clips"],["AnimationCurvesOnImportedClips","Animation Curves on Imported Clips"],["AnimationEditorGuide","Animation View Guide"],["AnimationEventsOnImportedClips","Animation Events on Imported Clips"],["AnimationGlossary","A Glossary of Animation and Mecanim terms"],["AnimationLayers","Animation Layers"],["AnimationMaskOnImportedClips","Masking Imported Clips"],["AnimationOverview","Unity's Animation System"],["AnimationParameters","Animation Parameters"],["AnimationRootMotionNodeOnImportedClips","Selecting a Root Motion Node"],["Animations","Legacy animation system"],["AnimationScripting","Animation Scripting (Legacy)"],["AnimationsImport","Animation from External Sources"],["AnimationSoloMute","Solo and Mute functionality"],["AnimationStateMachines","Animation State Machines"],["Animator","Animator and Animator Controller"],["AnimatorControllerCreation","Creating an AnimatorController"],["AnimatorControllers","Animator Controllers"],["animeditor-AnimationCurves","Using Animation Curves"],["animeditor-AnimationEvents","Using Animation Events"],["animeditor-MultipleParts","Objects with Multiple Moving Parts"],["animeditor-UsingAnimationEditor","Using the Animation View"],["Architecture","Architecture"],["AssetBundles4x","Legacy Asset Bundles"],["AssetBundlesIntro","AssetBundles"],["AssetDatabase","AssetDatabase"],["AssetImportandCreation","Asset Import and Creation"],["AssetPreparationandImport","Asset Preparation and Import"],["AssetServer","Asset Server (Pro Only)"],["AssetStore","Asset Store"],["AssetStoreAdmin","Publisher Admin Section Overview"],["AssetStoreFAQ","Asset Store FAQ"],["AssetStoreHOWTO","Asset Store HowTos"],["AssetStorePromotion","How to Promote your Assets (Daily Deals)"],["AssetStorePublisherAdministration","Asset Store Publisher Administration"],["AssetStoreRefunding","Refunding Your Customers."],["AssetStoreRemoving","Removing your Assets from the Store."],["AssetStoreStatus","Viewing the status of your Asset store submissions:"],["AssetStoreSupport","Providing Support"],["AssetWorkflow","Asset Workflow"],["AttachingMonoDevelopDebuggerToAnAndroidDevice","Attaching MonoDevelop Debugger To An Android Device"],["Attributes","Attributes"],["Audio","Audio"],["AudioFiles","Audio Files"],["AudioMixer","Audio Mixer"],["AudioMixerInspectors","AudioGroup Inspector"],["AudioMixerNativeAudioPlugin","Unity Native Audio Plugin SDK"],["AudioMixerOverview","An overview of the concepts and AudioMixer"],["AudioMixerSpecifics","Specifics on the AudioMixer window"],["AudioMixerUsage","Overview of Usage and API"],["AudioOverview","Audio Overview"],["AvatarCreationandSetup","Working with humanoid animations"],["bb10-controller","BlackBerry 10 Controller"],["bb10-debugging","Debugging on Blackberry10"],["bb10-details","Blackberry10 Details"],["bb10-faq","Blackberry10 FAQ"],["bb10-gettingstarted","Getting Started with Blackberry 10 Development"],["bb10-plugins","Plugins for Blackberry 10"],["bb10-setup","Setting up Unity to Build to Your Blackberry10 Device"],["BehindtheScenes","Behind the Scenes"],["binarydata","Storing and loading binary data in an AssetBundle"],["BlenderAndRigify","Using Blender and Rigify"],["BlendShapes","Animation Blend Shapes"],["BlendTree-1DBlending","1D Blending"],["BlendTree-2DBlending","2D Blending"],["BlendTree-AdditionalOptions","Additional Blend Tree Options"],["BuildingAssetBundles","Building AssetBundles in 4.x"],["BuildingAssetBundles5x","BuildingAssetBundles in 5.x"],["BuildingScenes","Building Scenes"],["BuildPlayerPipeline","Build Player Pipeline"],["Built-inShaderGuide","Legacy Shaders"],["CacheServer","Cache Server (Pro Only)"],["CameraRays","Rays from the Camera"],["Cameras","Cameras"],["CamerasOverview","Camera overview"],["CamerasReference","Cameras Reference"],["CameraTricks","Camera Tricks"],["CharacterControllers","Character Controllers"],["class-Animation","Animation"],["class-AnimationClip","Animation Clip"],["class-Animator","Animator Component"],["class-AnimatorController","Animator Controller"],["class-AreaEffector2D","Area Effector 2D"],["class-AudioChorusEffect","Audio Chorus Effect"],["class-AudioChorusFilter","Audio Chorus Filter"],["class-AudioClip","Audio Clip"],["class-AudioCompressor","Audio Compressor Effect"],["class-AudioDelayEffect","Audio Delay Effect"],["class-AudioDistortionEffect","Audio Distortion Effect"],["class-AudioDistortionFilter","Audio Distortion Filter"],["class-AudioEchoEffect","Audio Echo Effect"],["class-AudioEchoFilter","Audio Echo Filter"],["class-AudioEffect","Audio Filters"],["class-AudioEffectMixer","Audio Effects"],["class-AudioFlangeEffect","Audio Flange Effect"],["class-AudioHighPassEffect","Audio High Pass Effect"],["class-AudioHighPassFilter","Audio High Pass Filter"],["class-AudioHighPassSimpleEffect","Audio High Pass Simple Effect"],["class-AudioITEcho","Audio IT Echo Effect"],["class-AudioITLowPassEffect","Audio IT Low Pass Effect"],["class-AudioListener","Audio Listener"],["class-AudioLowPassEffect","Audio Low Pass Effect"],["class-AudioLowPassFilter","Audio Low Pass Filter"],["class-AudioLowPassSimpleEffect","Audio Low Pass Simple Effect"],["class-AudioManager","Audio Manager"],["class-AudioMixer","Audio Mixer"],["class-AudioNormalizeEffect","Audio Normalize Effect"],["class-AudioParamEQEffect","Audio Parametric Equalizer Effect"],["class-AudioPitchShifterEffect","Audio Pitch Shifter Effect"],["class-AudioReverbEffect","Audio SFX Reverb Effect"],["class-AudioReverbFilter","Audio Reverb Filter"],["class-AudioReverbZone","Reverb Zones"],["class-AudioSource","Audio Source"],["class-Avatar","Creating the Avatar"],["class-AvatarMask","Avatar Mask"],["class-BlendTree","Blend Trees"],["class-BoxCollider","Box Collider"],["class-BoxCollider2D","Box Collider 2D"],["class-Camera","Camera"],["class-Canvas","Canvas"],["class-CanvasGroup","Canvas Group"],["class-CanvasRenderer","Canvas Renderer"],["class-CapsuleCollider","Capsule Collider"],["class-CharacterController","Character Controller"],["class-CharacterJoint","Character Joint"],["class-CircleCollider2D","Circle Collider 2D"],["class-Cloth","Cloth"],["class-ConfigurableJoint","Configurable Joint"],["class-ConstantForce","Constant Force"],["class-ConstantForce2D","Constant Force 2D"],["class-Cubemap","Cubemap"],["class-DistanceJoint2D","Distance Joint 2D"],["class-EdgeCollider2D","Edge Collider 2D"],["class-EditorManager","Editor settings"],["class-EllipsoidParticleEmitter","Ellipsoid Particle Emitter (Legacy)"],["class-FBXImporter","Importing models"],["class-FixedJoint","Fixed Joint"],["class-Flare","Flare"],["class-FlareLayer","Flare Layer"],["class-Font","Font"],["class-GameObject","GameObject"],["class-GraphicsSettings","Graphics Settings"],["class-GUILayer","GUI Layer (Legacy)"],["class-GUISkin","GUI Skin (Legacy)"],["class-GUIStyle","GUI Style (Legacy)"],["class-GuiText","GUI Text (Legacy)"],["class-GuiTexture","GUI Texture (Legacy)"],["class-Halo","Halo"],["class-HingeJoint","Hinge Joint"],["class-HingeJoint2D","Hinge Joint 2D"],["class-HumanTemplate","Human Template files"],["class-InputManager","Input Manager"],["class-LensFlare","Lens Flare"],["class-Light","Light"],["class-LightProbeGroup","Light Probe Group"],["class-LineRenderer","Line Renderer"],["class-LODGroup","LOD Group"],["class-Material","Material"],["class-Mesh","Meshes"],["class-MeshCollider","Mesh Collider"],["class-MeshFilter","Mesh Filter"],["class-MeshParticleEmitter","Mesh Particle Emitter (Legacy)"],["class-MeshRenderer","Mesh Renderer"],["class-Microphone","Microphone"],["class-MovieTexture","Movie Texture"],["class-NavMeshAgent","NavMesh Agent"],["class-NavMeshObstacle","NavMesh Obstacle"],["class-NetworkManager","Network Manager"],["class-NetworkView","Network View"],["class-OcclusionArea","Occlusion Area"],["class-OcclusionPortal","Occlusion Portals"],["class-OffMeshLink","Off-Mesh Link"],["class-ParticleAnimator","Particle Animator (Legacy)"],["class-ParticleRenderer","Particle Renderer (Legacy)"],["class-ParticleSystem","Particle system"],["class-Physics2DManager","Physics 2D Manager"],["class-PhysicsManager","Physics Manager"],["class-PhysicsMaterial2D","Physics Material 2D"],["class-PlatformEffector2D","Platform Effector 2D"],["class-PlayerSettings","Player Settings"],["class-PlayerSettingsAndroid","Android Player Settings"],["class-PlayerSettingsiOS","iOS Player Settings"],["class-PlayerSettingsStandalone","Standalone Player Settings"],["class-PlayerSettingsWeb","Webplayer Player Settings"],["class-PlayerSettingsWebGL","WebGL Preview Player Settings"],["class-PluginInspectorStandalone","Standalone Plugin Settings"],["class-PointEffector2D","Point Effector 2D"],["class-PolygonCollider2D","Polygon Collider 2D"],["class-ProceduralMaterial","Procedural Material Assets"],["class-Projector","Projector"],["class-QualitySettings","Quality Settings"],["class-RectTransform","Rect Transform"],["class-ReflectionProbe","Reflection Probe"],["class-RenderTexture","Render Texture"],["class-Rigidbody","Rigidbody"],["class-Rigidbody2D","Rigidbody 2D"],["class-ScriptableObject","ScriptableObject"],["class-ScriptExecution","Script Execution Order Settings"],["class-Shader","Shader Assets"],["class-SkinnedMeshRenderer","Skinned Mesh Renderer"],["class-Skybox","Skybox"],["class-SliderJoint2D","Slider Joint 2D"],["class-SphereCollider","Sphere Collider"],["class-SpringJoint","Spring Joint"],["class-SpringJoint2D","Spring Joint 2D"],["class-SpriteRenderer","Sprite Renderer"],["class-State","Animation States"],["class-SurfaceEffector2D","Surface Effector 2D"],["class-TagManager","Tags and Layers"],["class-TerrainCollider","Terrain Collider"],["class-TextAsset","Text Asset"],["class-TextMesh","Text Mesh"],["class-Texture3D","3D Textures"],["class-TextureImporter","2D Textures"],["class-TextureImporterAndroid","Android 2D Textures Overrides"],["class-TextureImporterIos","iOS 2D Texture Overrides"],["class-TimeManager","Time Manager"],["class-TrailRenderer","Trail Renderer"],["class-Transform","Transform"],["class-Transition","Animation Transitions"],["class-Tree","Tree Creator"],["class-WheelCollider","Wheel Collider"],["class-WheelJoint2D","Wheel Joint 2D"],["class-WindZone","Tree - Wind Zones"],["class-WorldParticleCollider","World Particle Collider (Legacy)"],["ClassIDReference","YAML Class ID Reference"],["ClusterInstallation","Installing the Cluster Renderer"],["ClusterOperation","Operating The Cluster"],["Clusters","Cluster Rendering"],["ClusterSetup","Setting Up A Clustered Scene"],["CollidersOverview","Colliders"],["CommandLineArguments","Command line arguments"],["comp-AnimationGroup","Animation Reference"],["comp-AssetsGroup","Asset Components"],["comp-AudioGroup","Audio Components"],["comp-CanvasComponents","Canvas Components"],["comp-Effects","Visual Effects Reference"],["comp-ImageEffects","Image Effect Reference"],["comp-ManagerGroup","Settings Managers"],["comp-MeshGroup","Mesh Components"],["comp-NetworkGroup","Network Group"],["comp-ParticlesLegacy","Particle Systems (Legacy, prior to release 3.5)"],["comp-RenderingGroup","Rendering Components"],["comp-Textures","Texture Components"],["comp-UIAutoLayout","Auto Layout"],["comp-UIEffects","UI Effect Components"],["comp-UIInteraction","Interaction Components"],["comp-UIVisual","Visual Components"],["comp-UnityGUIGroup","UnityGUI Group (Legacy)"],["ComputeShaders","Compute Shaders"],["ComputingNormalPerpendicularVector","Computing a Normal/Perpendicular vector"],["ConfiguringtheAvatar","Configuring the Avatar"],["Console","Console"],["ContributingApply","Step 4: Apply Modifications to Your Fork"],["ContributingBitbucket","Step 1: Get a Bitbucket Account"],["ContributingClone","Step 3: Clone Your Fork"],["ContributingFAQ","FAQ"],["ContributingFeedback","Step 6: Wait for Feedback"],["ContributingFork","Step 2: Fork the Repository You Want to Contribute To"],["ContributingPullRequest","Step 5: Open a Pull Request on Bitbucket"],["ContributingReading","Further Reading"],["ContributingToUnity","How to contribute to Unity"],["ControllingGameObjectsComponents","Controlling GameObjects Using Components"],["ConventionalGameInput","Conventional Game Input"],["Cookies","Cookies"],["Coroutines","Coroutines"],["CreateDestroyObjects","Creating and Destroying GameObjects"],["CreatingAndUsingScripts","Creating and Using Scripts"],["CreatingGameplay","Creating Gameplay"],["CreatingScenes","Creating Scenes"],["CustomizingtheUnityWebPlayerloadingscreen","Customizing the Unity Web Player loading screen"],["CustomizingYourWorkspace","Customizing Your Workspace"],["DeactivatingGameObjects","Deactivating GameObjects"],["DirectionDistanceFromOneObjectToAnother","Direction and Distance from One Object to Another"],["DirectX11","Using DirectX 11 in Unity"],["DirLightShadows","Directional Light Shadows"],["DollyZoom","Dolly Zoom (AKA the \"Trombone\" Effect)"],["DownloadingAssetBundles","Downloading AssetBundles"],["DrawCallBatching","Draw Call Batching"],["EditingCurves","Editing Curves"],["EditingValueProperties","Editing Properties"],["editor-CustomEditors","Custom Editors"],["editor-EditorWindows","Editor Windows"],["editor-PropertyDrawers","Property Drawers"],["Editor","Editor"],["EditorOverview","Editor Overview"],["EditorReference","Editor Reference"],["EnhancedAssetBundle","Enhanced Asset Bundle Workflow"],["EventFunctions","Event Functions"],["EventSystem","EventSystem"],["Example-CreatingaBillboardPlane","Example - Creating a Billboard Plane"],["ExecutionOrder","Execution Order of Event Functions"],["ExtendingTheEditor","Extending the Editor"],["ExternalVersionControlSystemSupport","Using External Version Control Systems with Unity"],["FBXImporter-Animations","FBX Importer - Animations Tab"],["FBXImporter-Model","Models"],["FBXImporter-Rig","FBX Importer, Rig options"],["FormatDescription","Description of the Format"],["FrameDebugger","Frame Debugger"],["FrustumSizeAtDistance","The Size of the Frustum at a Given Distance from the Camera"],["GameObjects","GameObjects"],["GameView","Game View"],["GeneratingMeshGeometryProcedurally","Procedural Mesh Geometry"],["GenericAnimations","Generic Animations in Mecanim"],["GenericFunctions","Generic Functions"],["GlobalIllumination","Global Illumination Quickstart"],["Graphics","Graphics"],["GraphicsCommandBuffers","Graphics Command Buffers"],["GraphicsEmulation","Graphics Hardware Capabilities and Emulation"],["Graphicshow-tos","Graphics Questions"],["GraphicsOverview","Graphics Overview"],["GraphicsReference","Graphics Reference"],["gui-Basics","GUI Basics (Legacy)"],["gui-Controls","Controls (Legacy)"],["gui-Customization","Customization (Legacy)"],["gui-Extending","Extending GUI (Legacy)"],["gui-Layout","Layout Modes (Legacy)"],["GUIReference","Legacy GUI"],["GUIScriptingGuide","Legacy GUI Scripting Guide"],["HDR","High Dynamic Range Rendering"],["Hierarchy","Hierarchy"],["HOWTO-alphamaps","How do I Import Alpha Textures?"],["HOWTO-ArtAssetBestPracticeGuide","Art Asset Best Practice Guide"],["HOWTO-bumpmap","How do I Use Normal Maps?"],["HOWTO-exportFBX","FBX export guide"],["HOWTO-exportpackage","How do I reuse assets between projects?"],["HOWTO-FixZAxisIsUp","How do I fix the rotation of an imported model?"],["HOWTO-importObject","How do I import Models from my 3D app?"],["HOWTO-ImportObjectBlender","Importing Objects From Blender"],["HOWTO-ImportObjectCheetah3D","Importing Objects From Cheetah3D"],["HOWTO-ImportObjectCinema4D","Importing Objects From Cinema 4D"],["HOWTO-importObjectLightwave","Importing Objects From Lightwave"],["HOWTO-ImportObjectMax","Importing Objects From 3D Studio Max"],["HOWTO-ImportObjectMaya","Importing Objects From Maya"],["HOWTO-ImportObjectModo","Importing Objects From Modo"],["HOWTO-InstallStandardAssets","How do I install or upgrade Standard Assets?"],["HOWTO-LightCookie","How do I make a Spot Light Cookie?"],["HOWTO-MeshParticleEmitter","How do I make a Mesh Particle Emitter? (Legacy Particle System)"],["HOWTO-PortingBetweenPlatforms","Porting a Project Between Platforms"],["HOWTO-PortToAppleMacStore","How to deliver an application to the Apple Mac Store"],["HOWTO-UICreateFromScripting","Creating UI elements from scripting"],["HOWTO-UIFitContentSize","Making UI elements fit the size of their content"],["HOWTO-UIMultiResolution","Designing UI for Multiple Resolutions"],["HOWTO-UIScreenTransition","Creating Screen Transitons"],["HOWTO-UIWorldSpace","Creating a World Space UI"],["HOWTO-UseDetailTexture","How do I use Detail Textures?"],["HOWTO-UseSkybox","How do I Make a Skybox?"],["HOWTO-Water","How do I use Water?"],["HTMLcodetoloadUnityWebPlayercontent","HTML code to load Unity content"],["IMEInput","IME in Unity"],["ImportingAssets","Importing Assets"],["ImpressionOfSize","Creating an Impression of Large or Small Size"],["Input","Input"],["InputModules","InputModules"],["Inspector","Inspector"],["InspectorOptions","Inspector Options"],["InstallingUnity","Installing Unity"],["InstantiatingPrefabs","Instantiating Prefabs at runtime"],["InverseKinematics","Inverse Kinematics"],["iosCustomWWWRequest","Customising WWW Requests on iOS"],["iphone-64bit","Upgrading to 64 bit iOS"],["iphone-accountsetup","Account Setup"],["iphone-API","iOS Scripting"],["iphone-basic","Unity iOS Basics"],["iphone-bugreporting","Reporting crash bugs on iOS"],["iphone-BuildProcess","Inside the iOS build process"],["iphone-Downloadable-Content","Preparing your application for \"In App Purchases\""],["iphone-GettingStarted","Getting Started with iOS Development"],["iphone-Hardware","iOS Hardware Guide"],["iphone-InternalProfiler","Measuring Performance with the Built-in Profiler"],["iphone-iOS-Optimization","iOS Specific Optimizations"],["iphone-joystick","iOS Game Controller support"],["iphone-Optimizing-Physics","Optimizing Physics Performance"],["iphone-performance","Optimizing Performance in iOS."],["iphone-playerSizeOptimization","Optimizing the Size of the Built iOS Player"],["iphone-unsupported","Features currently not supported by Unity iOS"],["Joints","Joints"],["keepingtrackofloadedassetbundles","Keeping Track of loaded AssetBundles"],["LayerBasedCollision","Layer-Based Collision Detection."],["Layers","Layers"],["LearningtheInterface","Learning the Interface"],["LevelOfDetail","Level of Detail"],["Lighting","Lighting Overview"],["LightingOverview","Lighting"],["LightingReference","Lighting Reference"],["LightPerformance","Light Troubleshooting and Performance"],["LightProbes","Light Probes"],["Lights","Lights"],["LinearLighting","Linear Lighting"],["LoadingAssetBundles","Loading and unloading objects from an AssetBundle"],["LoadingResourcesatRuntime","Loading Resources at Runtime"],["LogFiles","Log Files"],["LoopingAnimationClips","Looping animation clips"],["managingassetdependencies","Managing asset dependencies"],["ManagingyourUnity4xLicense","Managing your Unity license"],["ManualActivationGuide","Step-by-Step Guide to Manual Activation of Unity 4.0"],["Materials","Materials and Shaders"],["MecanimFAQ","Mecanim FAQ"],["MecanimPeformanceandOptimization","Performance and Optimization"],["MessagingSystem","Messaging System"],["MobileAdvanced","Advanced Unity Mobile Scripting"],["MobileCrashes","Crashes"],["MobileCustomizeSplashScreen","Customizing an iOS Splash Screen"],["MobileDeveloperChecklist","Mobile Developer Checklist"],["MobileInput","Mobile Device Input"],["MobileKeyboard","Mobile Keyboard"],["MobileNetworking","Networking on Mobile devices."],["MobileOptimisation","Optimizations"],["MobileOptimizationFutureDevices","Future & High End Devices"],["MobileOptimizationGraphicsMethods","Graphics Methods"],["MobileOptimizationPracticalGuide","Practical Guide to Optimization for Mobiles"],["MobileOptimizationPracticalRenderingOptimizations","Rendering Optimizations"],["MobileOptimizationPracticalScriptingOptimizations","Optimizing Scripts"],["MobileOptimizationScriptingMethods","Scripting and Gameplay Methods"],["MobileProfiling","Profiling"],["ModelingOptimizedCharacters","Modeling Characters for Optimal Performance"],["ModifyingSourceAssetsThroughScripting","Modifying Source Assets Through Scripting"],["MonoDevelop","MonoDevelop"],["MultipleCameras","Using more than one camera"],["MuscleDefinitions","Muscle setup"],["Namespaces","Namespaces"],["NativePluginInterface","Low-level Native Plugin Interface"],["NativePlugins","Native Plugins"],["nav-AdditiveLoading","Loading Multiple NavMeshes using Additive Loading"],["nav-AdvancedSettings","Advanced NavMesh Bake Settings"],["nav-AgentPatrol","Making an Agent Patrol Between a Set of Points"],["nav-AreasAndCosts","Navigation Areas and Costs"],["nav-BuildingNavMesh","Building a NavMesh"],["nav-BuildingOffMeshLinksAutomatically","Building Off-Mesh Links Automatically"],["nav-CouplingAnimationAndNavigation","Coupling Animation and Navigation"],["nav-CreateNavMeshAgent","Creating a NavMesh Agent"],["nav-CreateNavMeshObstacle","Creating a NavMesh Obstacle"],["nav-CreateOffMeshLink","Creating an Off-mesh Link"],["nav-HeightMesh","Building Height Mesh for Accurate Character Placement"],["nav-HowTos","Navigation How-Tos"],["nav-InnerWorkings","Inner Workings of the Navigation System"],["nav-MixingComponents","Using NavMesh Agent with Other Components"],["nav-MoveToClickPoint","Moving an Agent to a Position Clicked by the Mouse"],["nav-MoveToDestination","Telling a NavMeshAgent to Move to a Destination"],["nav-NavigationSystem","Navigation System in Unity"],["nav-Overview","Navigation Overview"],["Navigation","Navigation and Pathfinding"],["NestedStateMachines","Sub-State Machines"],["net-HighLevelOverview","High Level Networking Concepts"],["net-MasterServer","Master Server"],["net-MasterServerBuild","Building the Unity Networking Servers on your own"],["net-MinimizingBandwidth","Minimizing Network Bandwidth"],["net-NetworkInstantiate","Network Instantiate"],["net-NetworkLevelLoad","Network Level Loading"],["net-NetworkView","Network Views"],["net-RPCDetails","RPC Details"],["net-SocialAPI","Social API"],["net-StateSynchronization","State Synchronization Details"],["net-UnityNetworkElements","Networking Elements in Unity"],["NetworkEmulation","Network Emulation"],["NetworkReferenceGuide","Network Reference Guide"],["NullReferenceException","What is a Null Reference Exception?"],["ObliqueFrustum","Using an Oblique Frustum"],["OcclusionCulling","Occlusion Culling"],["OnlineActivationGuide","Step-by-Step Guide to Online Activation of Unity 4.0"],["OptimizingGraphicsPerformance","Optimizing Graphics Performance"],["OptimizingShaderLoadTime","Optimizing Shader Load Time"],["OtherViews","Other Views"],["Overview2D","Gameplay in 2D"],["ParticleSystemHowTo","Particle System How-Tos"],["ParticleSystemModules","Particle System Modules"],["ParticleSystems","Particle Systems"],["PartSysCollisionModule","Collision Module"],["PartSysColorBySpeedModule","Color By Speed Module"],["PartSysColorOverLifeModule","Color Over Lifetime Module"],["PartSysEmissionModule","Emission Module"],["PartSysExhaust","Exhaust Smoke from a Vehicle"],["PartSysExplosion","A Simple Explosion"],["PartSysExtForceModule","External Forces Module"],["PartSysForceOverLifeModule","Force Over Lifetime Module"],["PartSysLimitVelOverLifeModule","Limit Velocity Over Lifetime Module"],["PartSysMainModule","Main Module"],["PartSysReference","Particle Systems Reference"],["PartSysRendererModule","Renderer Module"],["PartSysRotBySpeedModule","Rotation By Speed Module"],["PartSysRotOverLifeModule","Rotation Over Lifetime Module"],["PartSysShapeModule","Shape Module"],["PartSysSizeBySpeedModule","Size By Speed Module"],["PartSysSizeOverLifeModule","Size Over Lifetime Module"],["PartSysSubEmitModule","Sub Emitters Module"],["PartSysTexSheetAnimModule","Texture Sheet Animation Module"],["PartSysUsage","Using Particle Systems in Unity"],["PartSysVelOverLifeModule","Velocity Over Lifetime Module"],["PartSysWhatIs","What is a Particle System?"],["perForceIntegration","Perforce Integration"],["Physics2DReference","2D Physics Reference"],["Physics3DReference","3D Physics Reference"],["PhysicsOverview","Physics Overview"],["PhysicsSection","Physics"],["plasticSCMIntegration","Plastic SCM Integration"],["PlatformDependentCompilation","Platform Dependent Compilation"],["PluginInspector","Plugin Inspector"],["Plugins","Plugins"],["PluginsForAndroid","Building Plugins for Android"],["PluginsForDesktop","Building Plugins for Desktop Platforms"],["PluginsForIOS","Building Plugins for iOS"],["PositioningGameObjects","Positioning GameObjects"],["Prefabs","Prefabs"],["Preferences","Preferences"],["Preparingacharacterfromscratch","Preparing your own character"],["PresetLibraries","Preset Libraries"],["PrimitiveObjects","Primitive Objects"],["ProceduralMaterials","Procedural Materials"],["Profiler","Profiler"],["ProfilerAudio","Audio Area"],["ProfilerCPU","CPU Usage Area"],["ProfilerGPU","GPU Area"],["ProfilerMemory","Memory Area"],["ProfilerPhysics","Physics Profiler"],["ProfilerRendering","Rendering Area"],["ProfilerWindow","Profiler window"],["ProjectView","Project Browser"],["protectingcontent","Protecting Content"],["PublishingBuilds","Publishing Builds"],["RagdollStability","Ragdoll Stability"],["RandomNumbers","Adding Random Gameplay Elements"],["Raycasters","Raycasters"],["ReducingFilesize","Reducing the File Size of the Build"],["Rendering-Tech","Rendering Pipeline Details"],["RenderingPaths","Rendering Paths"],["RenderingStatistics","Rendering Statistics Window"],["RenderTech-DeferredLighting","Legacy Deferred Lighting Rendering Path"],["RenderTech-DeferredShading","Deferred Shading Rendering Path"],["RenderTech-ForwardRendering","Forward Rendering Path Details"],["RenderTech-HardwareRequirements","Hardware Requirements for Unity's Graphics Features"],["RenderTech-VertexLit","Vertex Lit Rendering Path Details"],["Retargeting","Retargeting of Humanoid animations"],["RigidbodiesOverview","Rigidbodies"],["RootMotion","Root Motion - how it works"],["RunningEditorCodeOnLaunch","Running Editor Script Code on Launch"],["samsungtv-debugging","Samsung TV Debugging"],["samsungtv-gettingstarted","Getting Started with Samsung TV Development"],["samsungtv-input","Samsung TV Input"],["samsungtv-notsupported","Samsung TV Not Supported"],["samsungtv-restrictions","SamsungTV Restrictions"],["samsungtv-setup","Samsung TV Setup"],["SceneView","Scene View"],["SceneViewNavigation","Scene View Navigation"],["script-Antialiasing","Antialiasing"],["script-AspectRatioFitter","Aspect Ratio Fitter"],["script-Bloom","Bloom"],["script-BloomAndFlares","Bloom and Lens Flares"],["script-BloomOptimized","Bloom (Optimized)"],["script-Blur","Blur"],["script-BlurOptimized","Blur (Optimized)"],["script-Button","Button"],["script-CameraMotionBlur","Camera Motion Blur"],["script-CanvasScaler","Canvas Scaler"],["script-ColorCorrectionCurves","Color Correction Curves"],["script-ColorCorrectionLookup","Color Correction Lookup Texture"],["script-ColorCorrectionRamp","Color Correction Ramp Texture"],["script-ContentSizeFitter","Content Size Fitter"],["script-ContrastEnhance","Contrast Enhance"],["script-ContrastStretch","Contrast Stretch"],["script-CreaseShading","Crease Shading"],["script-DepthOfField","Depth of Field"],["script-DepthOfFieldDeprecated","Depth of Field (Deprecated)"],["script-EdgeDetectEffect","Edge Detection"],["script-EdgeDetectEffectNormals","Edge Detect Effect Normals"],["script-EventSystem","Event System Manager"],["script-Fisheye","Fisheye"],["script-GlobalFog","Global Fog"],["script-GraphicRaycaster","Graphic Raycaster"],["script-Grayscale","Grayscale"],["script-GridLayoutGroup","Grid Layout Group"],["script-HorizontalLayoutGroup","Horizontal Layout Group"],["script-Image","Image"],["script-InputField","Input Field"],["script-LayoutElement","Layout Element"],["script-Mask","Mask"],["script-MotionBlur","Motion Blur"],["script-NoiseAndGrain","Noise And Grain"],["script-NoiseAndScratches","Noise And Scratches"],["script-Outline","Outline"],["script-Physics2DRaycaster","Physics 2D Raycaster"],["script-PhysicsRaycaster","Physics Raycaster"],["script-PositionAsUV1","Position as UV1"],["script-RawImage","Raw Image"],["script-ScreenOverlay","Screen Overlay"],["script-ScreenSpaceAmbientObscurance","Screen Space Ambient Obscurance"],["script-ScreenSpaceAmbientOcclusion","Screen Space Ambient Occlusion"],["script-Scrollbar","Scrollbar"],["script-ScrollRect","Scroll Rect"],["script-Selectable","Selectable Base Class"],["script-SelectableNavigation","Navigation Options"],["script-SelectableTransition","Transition Options"],["script-SepiaTone","Sepia Tone"],["script-Serialization","Script Serialization"],["script-Shadow","Shadow"],["script-Slider","Slider"],["script-StandaloneInputModule","Standalone Input Module"],["script-SunShafts","Sun Shafts"],["script-Terrain","Terrain Engine"],["script-Text","Text"],["script-TiltShiftHdr","Tilt Shift"],["script-Toggle","Toggle"],["script-ToggleGroup","Toggle Group"],["script-Tonemapping","Tonemapping"],["script-TouchInputModule","Touch Input Module"],["script-Twirl","Twirl"],["script-VerticalLayoutGroup","Vertical Layout Group"],["script-VignettingAndChromaticAberration","Vignetting and Chromatic Aberration"],["script-Vortex","Vortex"],["ScriptCompileOrderFolders","Special Folders and Script Compilation Order"],["ScriptingConcepts","Scripting Overview"],["ScriptingImportantClasses","Important Classes"],["ScriptingRootMotion","Tutorial: Scripting Root Motion for \"in-place\" humanoid animations"],["ScriptingSection","Scripting"],["ScriptingTools","Scripting Tools"],["scriptsinassetbundles","Including scripts in AssetBundles"],["Searching","Searching"],["SecuritySandbox","Security Sandbox of the Webplayer"],["SettinguptheAssetServer","Setting up the Asset Server"],["shader-NormalBumpedDiffuse","Bumped Diffuse"],["shader-NormalBumpedSpecular","Bumped Specular"],["shader-NormalDecal","Decal"],["shader-NormalDiffuse","Diffuse"],["shader-NormalDiffuseDetail","Diffuse Detail"],["shader-NormalFamily","Normal Shader Family"],["shader-NormalParallaxDiffuse","Parallax Diffuse"],["shader-NormalParallaxSpecular","Parallax Bumped Specular"],["shader-NormalSpecular","Specular"],["shader-NormalVertexLit","Vertex-Lit"],["shader-Performance","Usage and Performance of Built-in Shaders"],["shader-ReflectiveBumpedDiffuse","Reflective Bumped Diffuse"],["shader-ReflectiveBumpedSpecular","Reflective Bumped Specular"],["shader-ReflectiveBumpedUnlit","Reflective Normal Mapped Unlit"],["shader-ReflectiveBumpedVertexLit","Reflective Normal mapped Vertex-lit"],["shader-ReflectiveDiffuse","Reflective Diffuse"],["shader-ReflectiveFamily","Reflective Shader Family"],["shader-ReflectiveParallaxDiffuse","Reflective Parallax Diffuse"],["shader-ReflectiveParallaxSpecular","Reflective Parallax Specular"],["shader-ReflectiveSpecular","Reflective Specular"],["shader-ReflectiveVertexLit","Reflective Vertex-Lit"],["shader-SelfIllumBumpedDiffuse","Self-Illuminated Normal mapped Diffuse"],["shader-SelfIllumBumpedSpecular","Self-Illuminated Normal mapped Specular"],["shader-SelfIllumDiffuse","Self-Illuminated Diffuse"],["shader-SelfIllumFamily","Self-Illuminated Shader Family"],["shader-SelfIllumParallaxDiffuse","Self-Illuminated Parallax Diffuse"],["shader-SelfIllumParallaxSpecular","Self-Illuminated Parallax Specular"],["shader-SelfIllumSpecular","Self-Illuminated Specular"],["shader-SelfIllumVertexLit","Self-Illuminated Vertex-Lit"],["shader-StandardShader","Standard Shader"],["shader-TransBumpedDiffuse","Transparent Bumped Diffuse"],["shader-TransBumpedSpecular","Transparent Bumped Specular"],["shader-TransCutBumpedDiffuse","Transparent Cutout Bumped Diffuse"],["shader-TransCutBumpedSpecular","Transparent Cutout Bumped Specular"],["shader-TransCutDiffuse","Transparent Cutout Diffuse"],["shader-TransCutSpecular","Transparent Cutout Specular"],["shader-TransCutVertexLit","Transparent Cutout Vertex-Lit"],["shader-TransDiffuse","Transparent Diffuse"],["shader-TransParallaxDiffuse","Transparent Parallax Diffuse"],["shader-TransParallaxSpecular","Transparent Parallax Specular"],["shader-TransparentCutoutFamily","Transparent Cutout Shader Family"],["shader-TransparentFamily","Transparent Shader Family"],["shader-TransSpecular","Transparent Specular"],["shader-TransVertexLit","Transparent Vertex-Lit"],["Shaders","Shaders"],["ShadersOverview","Writing Shaders"],["ShaderTut1","Shaders: ShaderLab & Fixed Function shaders"],["ShaderTut2","Shaders: Vertex and Fragment Programs"],["ShadowOverview","Shadows"],["SL-AdvancedTopics","Advanced ShaderLab topics"],["SL-AlphaTest","ShaderLab: Legacy Alpha Testing"],["SL-BindChannels","ShaderLab: Legacy BindChannels"],["SL-Blend","ShaderLab: Blending"],["SL-BuiltinIncludes","Built-in shader include files"],["SL-BuiltinMacros","Predefined shader preprocessor macros"],["SL-CameraDepthTexture","Camera's Depth Texture"],["SL-CullAndDepth","ShaderLab: Culling & Depth Testing"],["SL-CustomEditor","ShaderLab: CustomEditor"],["SL-CustomShaderGUI","Custom Shader GUI"],["SL-DebuggingD3D11ShadersWithVS","Debugging DirectX 11 shaders with Visual Studio"],["SL-DepthTextures","Using Depth Textures"],["SL-Fallback","ShaderLab: Fallback"],["SL-Fog","ShaderLab: Fog"],["SL-GLSLShaderPrograms","GLSL Shader Programs"],["SL-GrabPass","ShaderLab: GrabPass"],["SL-ImplementingTexGen","Implementing Fixed Function TexGen in Shaders"],["SL-Material","ShaderLab: Legacy Lighting"],["SL-MultipleProgramVariants","Making multiple shader program variants"],["SL-Name","ShaderLab: Name"],["SL-Other","ShaderLab: other commands"],["SL-Pass","ShaderLab: Pass"],["SL-PassTags","ShaderLab: Pass Tags"],["SL-PlatformDifferences","Platform Specific Rendering Differences"],["SL-Properties","ShaderLab: Properties"],["SL-PropertiesInPrograms","Accessing shader properties in Cg/HLSL"],["SL-Reference","Shader Reference"],["SL-RenderPipeline","Unity's Rendering Pipeline"],["SL-SetTexture","ShaderLab: Legacy Texture Combiners"],["SL-Shader","ShaderLab Syntax"],["SL-ShaderLOD","Shader Level of Detail"],["SL-ShaderPerformance","Performance Tips when Writing Shaders"],["SL-ShaderPrograms","Writing vertex and fragment shaders"],["SL-ShaderReplacement","Rendering with Replaced Shaders"],["SL-Stencil","ShaderLab: Stencil"],["SL-SubShader","ShaderLab: SubShader"],["SL-SubshaderTags","ShaderLab: SubShader Tags"],["SL-SurfaceShaderExamples","Surface Shader Examples"],["SL-SurfaceShaderLighting","Custom Lighting models in Surface Shaders"],["SL-SurfaceShaderLightingExamples","Surface Shader Lighting Examples"],["SL-SurfaceShaders","Writing Surface Shaders"],["SL-SurfaceShaderTessellation","Surface Shaders with DX11 Tessellation"],["SL-UnityShaderVariables","Built-in shader variables"],["SL-UsePass","ShaderLab: UsePass"],["SL-VertexFragmentShaderExamples","Vertex and Fragment Shader Examples"],["SL-VertexProgramInputs","Providing vertex data to vertex programs"],["SmartMerge","Smart Merge"],["SparseTextures","Sparse Textures"],["SpecialFolders","Special Folder Names"],["Splittinganimations","Splitting Animations"],["SpriteEditor","Sprite Editor"],["SpritePacker","Sprite Packer"],["Standalone","Standalone"],["StandardShaderContextAndContent","The Context and the Content"],["StandardShaderFundamentals","Standard Shader Fundamentals"],["StandardShaderMakeYourOwn","Make your own"],["StandardShaderMaterialCharts","Material charts"],["StandardShaderMaterialParameters","Material parameters"],["StandardShaderMetallicVsSpecular","Metallic vs Specular Workflow"],["StateMachineBasics","State Machine Basics"],["StateMachineBehaviours","State Machine Behaviours"],["StateMachineTransitions","State Machine Transitions"],["StaticObjects","Static GameObjects"],["StreamingAssets","Streaming Assets"],["StructureOfXcodeProject","Structure of a Unity XCode Project"],["StyledText","Rich Text"],["SupportedEvents","Supported Events"],["Tags","Tags"],["TargetMatching","Target Matching"],["terrain-Grass","Grass and Other Details"],["terrain-Height","Height Tools"],["terrain-OtherSettings","Terrain Settings"],["terrain-Textures","Textures"],["terrain-Trees","Trees"],["terrain-UsingTerrains","Creating and Editing Terrains"],["terrain-WindZones","Wind Zones"],["TextualSceneFormat","Textual Scene File Format"],["Textures","Textures and Videos"],["TheComponent-ScriptRelationship","The Component-Script Relationship"],["TheGameObject-ComponentRelationship","The GameObject-Component Relationship"],["TimeFrameManagement","Time and Framerate Management"],["Toolbar","Toolbar"],["TrackerModules","Tracker Modules"],["Transforms","Transforms"],["tree-Branches","Branch Group Properties"],["tree-FirstTree","Building Your First Tree"],["tree-Leaves","Leaf Group Properties"],["tree-Structure","Tree Creator Basics"],["TroubleShooting","Trouble Shooting"],["TroubleShootingAndroid","Troubleshooting Android development"],["TroubleShootingEditor","Troubleshooting Editor"],["TroubleShootingIPhone","Troubleshooting on iOS devices"],["TroubleShootingWebplayer","Troubleshooting Webplayer"],["UIAnimationIntegration","Animation Integration"],["UIAutoLayout","Auto Layout"],["UIBasicLayout","Basic Layout"],["UICanvas","Canvas"],["UIHowTos","UI How Tos"],["UIInteractionComponents","Interaction Components"],["UIOverview","UI Overview"],["UIReference","UI Reference"],["UISystem","UI"],["UIVisualComponents","Visual Components"],["UnderstandingAutomaticMemoryManagement","Understanding Automatic Memory Management"],["UnderstandingFrustum","Understanding the View Frustum"],["UnderstandingVectorArithmetic","Understanding Vector Arithmetic"],["unity-remote","Unity Remote 3 (DEPRECATED)"],["Unity4xActivation-Overview","Unity 5.0 Activation - Overview"],["UnityBasics","Unity Basics"],["UnityEvents","UnityEvents"],["UnityHotkeys","Unity Hotkeys"],["UnityManualRestructured","Unity Manual"],["UnityOverview","Unity Overview"],["UnityRemote4","Unity Remote 4"],["UnityWebPlayerandbrowsercommunication","Unity Web Player and browser communication"],["UpgradeGuide3540","Upgrade Guide from Unity 3.5 to 4.0"],["UsingComponents","Using Components"],["UsingDLL","Managed Plugins"],["UsingHumanoidChars","Using Humanoid Characters"],["UsingLights","Using Lights"],["UsingTheInspector","Using the Inspector"],["UsingtheMeshClass","Using the Mesh Class"],["UsingTheSceneView","Using the Scene View"],["UsingtheWebPlayerChain-of-Trustsystem","Using the Chain of Trust system in the Web Player"],["UsingWebPlayertemplates","Using Webplayer Templates"],["VariablesAndTheInspector","Variables and the Inspector"],["VectorCookbook","Vector Cookbook"],["VersionCheck","Check For Updates"],["VersionControl","Version Control"],["Versioncontrolintegration","Version control integration (Unity Pro Only)"],["ViewModes","Scene View Control Bar"],["VisualStudioIntegration","Visual Studio C# Integration"],["webgl-building","WebGL: Building & Running"],["webgl-gettingstarted","Getting Started with WebGL Development"],["webgl-interactingwithbrowserscripting","WebGL: Interacting with browser scripting"],["webgl-networking","WebGL Networking"],["webgl-performance","WebGL performance considerations"],["WebPlayerBehaviorTags","Customizing the Unity Web Player's Behavior"],["WebPlayerChannels","Webplayer Release Channels"],["WebPlayerDeployment","Web Player Deployment"],["WebPlayerStreaming","Web Player Streaming"],["windowsstore-appcallbacks","AppCallbacks class"],["windowsstore-assocation-launching","Windows Store Apps: Association launching"],["windowsstore-commandlinearguments","Windows Store Apps: Command line arguments"],["windowsstore-debugging","Windows Store Apps: Debugging"],["windowsstore-deployment","Windows Store Apps: Deployment"],["windowsstore-examples","Windows Store Apps: Examples"],["windowsstore-faq","FAQ"],["windowsstore-gettingstarted","Getting Started"],["windowsstore-missingtypes","Windows Store Apps: Missing .NET Types"],["windowsstore-plugins","Windows Store Apps: Plugins"],["windowsstore-profiler","Windows Store Apps: Profiler"],["windowsstore-projecttypes","Windows Store Apps: Project description"],["windowsstore-scripts","Windows Store Apps: WinRT API in C# scripts"],["WindowsUniversalApps-faq","Windows Universal Applications: FAQ"],["WindowsUniversalApps-gettingstarted","Windows Universal Applications: Getting Started"],["WindowsUniversalApps","Windows Universal Applications"],["wizard-RagdollWizard","Ragdoll Wizard"],["WorkingwithUnityObject","Working with UnityObject2"],["wp8-1-faq","Windows Phone 8.1: FAQ"],["wp8-1-gettingstarted","Windows Phone 8.1: Getting Started"],["WP8-1","Windows Phone 8.1"],["wp8-debugging","Windows Phone 8: Debugging"],["wp8-deployment","Windows Phone 8: Deployment"],["wp8-examples","WP8 Examples"],["wp8-faq","Windows Phone 8: FAQ"],["wp8-gettingstarted","Windows Phone 8: Getting Started"],["wp8-missingtypes","Windows Phone 8: Missing .NET Types"],["wp8-plugins-guide-cplusplus","Windows Phone 8: C++ Plugins"],["wp8-plugins-guide-csharp","Windows Phone 8: C# Plugins"],["wp8-plugins","Windows Phone 8: Plugins"],["wp8-profiler","Windows Phone 8: Profiler"],["wp8-unity-interaction","Interaction between Unity and Windows Phone"],["YAMLSceneExample","An Example of a YAML Scene File"]]
info = [["3D formats",0],["Importing meshes into Unity can be achieved from two main types of files:",0],["Exported 3D file formats, such as .FBX or .OBJ",0],["Proprietary 3D application files, such as .Max and .Blend file formats from 3D Studio Max or Blender for example.",0],["Either should enable you to get your meshes into Unity, but there are considerations as to which type you choose:",0],["Exported 3D files",0],["Unity can read .FBX, .dae (Collada), .3DS, .dxf and .obj files, FBX exporters can be found here and obj or Collada exporters can also be found for many applications",0],["Advantages:",0],["Only export the data you need",0],["Verifiable data (re-import into 3D package before Unity)",0],["Generally smaller files",0],["Encourages modular approach - e.g different components for collision types or interactivity",0],["Supports other 3D packages whose Proprietary formats we don't have direct support for",0],["Disadvantages:",0],["Can be a slower pipeline for prototyping and iterations",0],["Easier to lose track of versions between source(working file) and game data (exported FBX for example)",0],["Proprietary 3D application files",0],["Unity can also import, through conversion: Max, Maya, Blender, Cinema4D, Modo, Lightwave &amp; Cheetah3D files, e.g. .MAX, .MB, .MA etc.",0],["Advantages:",0],["Quick iteration process (save the source file and Unity reimports)",0],["Simple initially",0],["Disadvantages:",0],["A licensed copy of that software must be installed on all machines using the Unity project",0],["Files can become bloated with unnecessary data",0],["Big files can slow Unity updates",0],["Less validation, so it is harder to troubleshoot problems",0],["AssetBundles FAQ",1],["What are AssetBundles?",1],["AssetBundles are a collection of assets, packaged for loading at runtime. With Asset Bundles, you can dynamically load and unload new content into your application. AssetBundles can be used to implement post-release DLC.",1],["What are they used for?",1],["They can be used to reduce the amount of space on disk used by your game, when first deployed. It can also be used to add new content to an already published game.",1],["How do I create an AssetBundle in Unity 5.x?",1],["TODO",1],["How do I create an AssetBundle in Unity 4.x?",1],["To create an AssetBundle you need to use the BuildPipeline editor class. All scripts using Editor classes must be placed in a folder named Editor, anywhere in the Assets folder. Here is an example of such a script in C#:",1],["using UnityEngine;",1],["using UnityEditor;",1],["public class ExportAssetBundles {",1],["[MenuItem(\"Assets/Build AssetBundle\")]",1],["static void ExportResource () {",1],["string path = \"Assets/myAssetBundle.unity3d\";",1],["Object[] selection = Selection.GetFiltered(typeof(Object), SelectionMode.DeepAssets);",1],["BuildPipeline.BuildAssetBundle(Selection.activeObject, selection, path,",1],["BuildAssetBundleOptions.CollectDependencies",1],["BuildAssetBundleOptions.CompleteAssets);",1],["An Editor script does not need to be applied to a GameObject, it is instead used by the Editor. This previous example will create a new item in the “Assets” menu of your editor called “Build AssetBundle”.",1],["To use this example:",1],["Create a C# script file named ExportAssetBundles.cs, inside an folder named Editor, in the Project View.",1],["Select the Asset or Assets in your project folder that you wish to make into an AssetBundle.",1],["Select Build AssetBundle from the Assets menu. Click “Save” to create the AssetBundle.",1],["The first line of the ExportResource function sets the path of your AssetBundle.",1],["The next line sets the selection to be made into an AssetBundle as the objects selected in the Project window.",1],["The BuildAssetBundle function is the line that creates the AssetBundle and saves it to the specified location. The first parameter specifies the mainAsset, which is a special Asset that can be obtained directly with the mainAsset property when loading Assets from the AssetBundle. It is not mandatory to set a main Asset, if this is not going to be used you can use null for the parameter. The second parameter is the array of objects that will make up the AssetBundle. The third parameter is the location on disk that the AssetBundle will be saved to. The final parameter are the build flags or options used when building AssetBundles. The bitwise OR ( ‘ ’ ) combines the options passed to build the AssetBundles. In this example BuildAssetBundleOptions.CollectDependencies sets it to include other Assets referenced by the objects and BuildAssetBundleOptions.CompleteAssets make sure that assets are completely included.",1],["Building AssetBundles should be a pre-publish step which happens only once and with a single function call, for example, with a Menu Item that builds all the AssetBundles. As you develop your application you should write helper scripts that can build all your AssetBundles for a target platform with a single click or in batchmode without user intervention.",1],["There are also other function to create AssetBundles. You can read more about this here.",1],["How do I use an AssetBundle?",1],["There are two main steps involved when working with AssetBundles. The first step is to download the AssetBundle from a server or disk location. This is done with the WWW class. The second step is to load the Assets from the AssetBundle, to be used in the application. Here is an example C# script:",1],["using UnityEngine;",1],["using System.Collections;",1],["public class BundleLoader : MonoBehaviour{",1],["public string url;",1],["public int version;",1],["public IEnumerator LoadBundle(){",1],["using(WWW www = WWW.LoadFromCacheOrDownload(url, version)) {",1],["yield return www;",1],["AssetBundle assetBundle = www.assetBundle;",1],["GameObject gameObject = assetBundle.mainAsset as GameObject;",1],["Instantiate(gameObject);",1],["assetBundle.Unload(false);",1],["void Start(){",1],["StartCoroutine(LoadBundle());",1],["This script is added to a GameObject as Component. The AssetBundle is loaded in the following way:",1],["The url and version values need to be set in the Inspector prior to running this script. The url is the location of the AssetBundle file, usually a server on the Internet. The version number allows the developer to associate a number to the AssetBundle when written to the cache in disk. When downloading an AssetBundle Unity will check if the file already exists in the cache. If it does, it compare the version of the stored asset with the version requested. If it is different then the AssetBundle will be redownloaded. If it’s the same, then it will load the AssetBundle from disk and avoid having to redownload the file. Please refer to the WWW.LoadFromCacheOrDownload function in the scripting reference for more information about these parameters.",1],["When the Start function of this script is called, it will start loading the AssetBundle by calling the function as a Coroutine.The function will yield on the WWW object as it downloads the AssetBundle. By using this, the function will simply stop in that point until the WWW object is done downloading, but it will not block the execution of the rest of the code, it yields until it is done. Only up to one AssetBundle download can finish per frame when they are downloaded with WWW.LoadFromCacheOrDownload.",1],["Once the WWW object has downloaded AssetBundle file, the .assetBundle property is used to retrieve an AssetBundle object. This object is the interface to load objects from the AssetBundle file.",1],["In this example a reference to a prefab in the AssetBundle is retrieved from the AssetBundle using the .mainAsset property. This property is set when building the AssetBundle passing an Object as the first parameter. The main asset in the AssetBundle can be used to store a TextAsset with a list of objects inside the AssetBundle and any other information about them.",1],["Please note that for simplicity the previous example is not doing any safety checks. Please look at the code here for a more complete example.",1],["How do I use AssetBundles in the Editor?",1],["As creating applications is an iterative process, you will very likely modify your Assets many times, which would require rebuilding the AssetBundles after every change to be able to test them. Even though it is possible to load AssetBundles in the Editor, that is not the recommended workflow. Instead, while testing in the Editor you should use the helper function Resources.LoadAssetAtPath to avoid having to use and rebuild AssetBundles. The function lets you load the Asset as if it were being loaded from an AssetBundle, but will skip the building process and your Assets are always up to date.",1],["The following is an example helper script, that you can use to load your Assets depending on if you are running in the Editor or not. Put this code in C# script named AssetBundleLoader.cs:",1],["using UnityEngine;",1],["using System.Collections;",1],["public class AssetBundleLoader {",1],["public Object Obj; // The object retrieved from the AssetBundle",1],["public IEnumerator LoadBundle (string url, int version, string assetName, string assetPath) where T : Object {",1],["Obj = null;",1],["if UNITY_EDITOR",1],["Obj = Resources.LoadAssetAtPath(assetPath, typeof(T));",1],["if (Obj == null)",1],["Debug.LogError (\"Asset not found at path: \" + assetPath);",1],["yield break;",1],["else",1],["WWW download;",1],["if ( Caching.enabled ) {",1],["while (!Caching.ready)",1],["yield return null;",1],["download = WWW.LoadFromCacheOrDownload( url, version );",1],["else {",1],["download = new WWW (url);",1],["yield return download;",1],["if ( download.error != null ) {",1],["Debug.LogError( download.error );",1],["download.Dispose();",1],["yield break;",1],["AssetBundle assetBundle = download.assetBundle;",1],["download.Dispose();",1],["download = null;",1],["if (assetName == \"\"    assetName == null)",1],["Obj = assetBundle.mainAsset;",1],["else",1],["Obj = assetBundle.Load(assetName, typeof(T));",1],["assetBundle.Unload(false);",1],["endif",1],["We can now use the AssetBundleLoader script to load an Asset from an AssetBundle if we are running the built application or load the Asset directly from the Project folder if running in the Editor:",1],["using UnityEngine;",1],["using System.Collections;",1],["public class ExampleLoadingBundle : MonoBehaviour {",1],["public string url = \"http://www.mygame.com/myBundle.unity3d\"; // URL where the AssetBundle is",1],["public int version = 1; // The version of the AssetBundle",1],["public string assetName = \"MyPrefab\"; // Name of the Asset to be loaded from the AssetBundle",1],["public string assetPath; // Path to the Asset in the Project folder",1],["private Object ObjInstance; // Instance of the object",1],["void Start(){",1],["StartCoroutine(Download());",1],["IEnumerator Download () {",1],["AssetBundleLoader assetBundleLoader = new AssetBundleLoader ();",1],["yield return StartCoroutine(assetBundleLoader.LoadBundle  (url, version, assetName, assetPath));",1],["if (assetBundleLoader.Obj != null)",1],["ObjInstance = Instantiate (assetBundleLoader.Obj);",1],["void OnGUI(){",1],["GUILayout.Label (ObjInstance ? ObjInstance.name + \" instantiated\" : \"\");",1],["The previous script should be saved to a file named ExampleLoadingBundle.cs inside the Assets folder. After setting the public variables to their correct values and running it, it will use the AssetBundleLoader class to load an Asset. It is then instantiated and this will be shown by using the GUI.",1],["How do I cache AssetBundles?",1],["You can use WWW.LoadFromCacheOrDownload which automatically takes care of saving your AssetBundles to disk. Be aware that on the Webplayer you are limited to 50MB in total (shared between all webplayers). You can buy a separate caching license for your game if you require more space.",1],["If your AssetBundles are stored in the StreamingAssets folder as Uncompressed AssetBundles, you can use AssetBundle.CreateFromFile to reference the AssetBundle on disk. If the AssetBundles in the StreamingAssets folder are compressed, you will need to use WWW.LoadFromCacheOrDownload to create an uncompressed copy of the AssetBundle in cache.",1],["Are AssetBundles cross-platform?",1],["AssetBundles are compatible between some platforms. Use the following table as a guideline.",1],["",1],["Platform compatibility for AssetBundles     ",1],["Standalone Webplayer iOS Android ",1],["Editor Y Y Y Y ",1],["Standalone Y Y   ",1],["Webplayer Y Y    ",1],["iOS   Y   ",1],["Android    Y  ",1],["For example, a bundle created while the Webplayer build target was active would be compatible with the editor and with standalone builds. However, it would not be compatible with apps built for the iOS or Android platforms.",1],["How are assets in AssetBundles identified?",1],["When you build AssetBundles the assets are identified internally by their filename without the extension. For example a Texture located in your Project folder at \"Assets/Textures/myTexture.jpg\" is identified and loaded using \"myTexture\" if you use the default method. You can have more control over this by supplying your own array of ids (strings) for each object when Building your AssetBundle with BuildPipeline.BuildAssetBundleExplicitAssetNames.",1],["Can I reuse my AssetBundles in another game?",1],["AssetBundles allow you to share content between different games. The requirement is that any Assets which are referenced by GameObjects in your AssetBundle must be included in the AssetBundle. To make sure the referenced Assets are included in the AssetBundle when they are built you can pass the BuildAssetBundleOptions.CollectDependencies option.",1],["Will an AssetBundle built now be usable with future versions of Unity?",1],["AssetBundles can contain a structure called a type tree which allows information about asset types to be understood correctly between different versions of Unity. On desktop platforms, the type tree is included by default but can be disabled by passing the BuildAssetBundleOptions.DisableWriteTypeTree to the BuildAssetBundle function. Webplayers intrinsically rely on the type tree and so it is always included (ie, the DisableWriteTypeTree option has no effect). Type trees are never included for mobile and console asset bundles and so you will need to rebuild these bundles whenever the serialization format changes. This can happen in new versions of Unity. (Except for bugfix releases) It also happens if you add or remove serialized fields in monobehaviour's that are included in the asset bundle. When loading an AssetBundle Unity will give you an error message if the AssetBundle must be rebuilt.",1],["How can I list the objects in an AssetBundle?",1],["You can use AssetBundle.LoadAllAssets to retrieve an array containing all objects from the AssetBundle. It is not possible to get a list of the identifiers directly. A common workaround is to keep a separate TextAsset to hold the names of the assets in the AssetBundle.",1],["Asset Store Access and Navigation",2],["You can open the Asset Store window by selecting Window-&gt;AssetStore from the main menu. On your first visit, you will be prompted to create a free user account which you will use to access the Store subsequently.",2],["The Store provides a browser-like interface which allows you to navigate either by free text search or by browsing packages and categories. To the left of the main tool bar are the familiar browsing buttons for navigating through the history of viewed items:-",2],["To the right of these are buttons for viewing the Download Manager and for viewing the current contents of your shopping cart.",2],["The Download Manager allows you to view the packages you have already bought and also to find and install any updates. Additionally, the standard packages supplied with Unity can be viewed and added to your project with the same interface.",2],["Location of Downloaded Asset Files",2],["You will rarely, if ever, need to access the files downloaded from the Asset Store directly. However, if you do need to, you can find them in",2],["~/Library/Unity/Asset Store",2],["...on the Mac and in",2],["C:\\Users\\accountName\\AppData\\Roaming\\Unity\\Asset Store",2],["...on Windows. These folders contain subfolders that correspond to particular Asset Store vendors - the actual asset files are contained in the appropriate subfolders.",2],["The Amount of One Vector's Magnitude that Lies in Another Vector's Direction",3],["A car's speedometer typically works by measuring the rotational speed of the wheels. The car may not be moving directly forward (it may be skidding sideways, for example) in which case part of the motion will not be in the direction the speedometer can measure. The magnitude of an object's rigidbody.velocity vector will give the speed in its direction of overall motion but to isolate the speed in the forward direction, you should use the dot product:-",3],["var fwdSpeed = Vector3.Dot(rigidbody.velocity, transform.forward);",3],["Naturally, the direction can be anything you like but the direction vector must always be normalized for this calculation. Not only is the result more correct than the magnitude of the velocity, it also avoids the slow square root operation involved in finding the magnitude.",3],["Analytics",4],["The Unity editor is configured to send anonymous usage data back to Unity. This information is used to help improve the features of the editor. The analytics are collected using Google Analytics. Unity makes calls to a URI hosted by Google. The URN part of the URI contains details that describe what editor features or events have been used.",4],["Examples of collected data",4],["The following are examples of data that Unity might collect.",4],["Which menu items have been used. If some menu items are used rarely or not at all we could in the future simplify the menuing system.",4],["Build times. By collecting how long builds take to make we can focus engineering effort on optimizing the correct code.",4],["Lightmap baking. Again, timing and reporting how long it takes for light maps to bake can help us decide how much effort to spend on optimizing this area.",4],["Disabling Analytics",4],["If you do not want to send anonymous data to Unity then the sending of Analytics can be disabled. To do this untick the box in the Unity Preferences General tab.",4],["Anatomy of a Mesh",5],["A mesh consists of triangles arranged in 3D space to create the impression of a solid object. A triangle is defined by its three corner points or vertices. In the Mesh class, the vertices are all stored in a single array and each triangle is specified using three integers that correspond to indices of the vertex array. The triangles are also collected together into a single array of integers; the integers are taken in groups of three from the start of this array, so elements 0, 1 and 2 define the first triangle, 3, 4 and 5 define the second, and so on. Any given vertex can be reused in as many triangles as desired but there are reasons why you may not want to do this, as explained below.",5],["Lighting and Normals",5],["The triangles are enough to define the basic shape of the object but extra information is needed to display the mesh in most cases. To allow the object to be shaded correctly for lighting, a normal vector must be supplied for each vertex. A normal is a vector that points outward, perpendicular to the mesh surface at the position of the vertex it is associated with. During the shading calculation, each vertex normal is compared with the direction of the incoming light, which is also a vector. If the two vectors are perfectly aligned, then the surface is receiving light head-on at that point and the full brightness of the light will be used for shading. A light coming exactly side-on to the normal vector will give no illumination to the surface at that position. Typically, the light will arrive at an angle to the normal and so the shading will be somewhere in between full brightness and complete darkness, depending on the angle.",5],["Since the mesh is made up of triangles, it may seem that the normals at corners will simply be perpendicular to the plane of their triangle. However, normals are actually interpolated across the triangle to give the surface direction of the intermediate positions between the corners. If all three normals are pointing in the same direction then the triangle will be uniformly lit all over. The effect of having separate triangles uniformly shaded is that the edges will be very crisp and distinct. This is exactly what is required for a model of a cube or other sharp-edged solid but the interpolation of the normals can be used to create smooth shading to approximate a curved surface.",5],["To get crisp edges, it is necessary to double up vertices at each edge since both of the two adjacent triangles will need their own separate normals.",5],["For curved surfaces, vertices will usually be shared along edges but a bit of intuition is often required to determine the best direction for the shared normals. A normal might simply be the average of the normals of the planes of the surrounding triangles. However, for an object like a sphere, the normals should just be pointing directly outward from the sphere's centre.",5],["By calling Mesh.RecalculateNormals, you can get Unity to work out the normals' directions for you by making some assumptions about the \"meaning\" of the mesh geometry; it assumes that vertices shared between triangles indicate a smooth surface while doubled-up vertices indicate a crisp edge. While this is not a bad approximation in most cases, RecalculateNormals will be tripped up by some texturing situations where vertices must be doubled even though the surface is smooth.",5],["Texturing",5],["In addition to the lighting, a model will also typically make use of texturing to create fine detail on its surface. A texture is a bit like an image printed on a stretchable sheet of rubber. For each mesh triangle, a triangular area of the texture image is defined and that texture triangle is stretched and \"pinned\" to fit the mesh triangle. To make this work, each vertex needs to store the coordinates of the image position that will be pinned to it. These coordinates are two dimensional and scaled to the 0..1 range (0 means the bottom/left of the image and 1 means the right/top). To avoid confusing these coordinates with the Cartesian coordinates of the 3D world, they are referred to as U and V rather than the more familiar X and Y, and so they are commonly called UV coordinates.",5],["Like normals, texture coordinates are unique to each vertex and so there are situations where you need to double up vertices purely to get different UV values across an edge. An obvious example is where two adjacent triangles use discontinuous parts of the texture image (eyes on a face texture, say). Also, most objects that are fully enclosed volumes will need a \"seam\" where an area of texture wraps around and joins together. The UV values at one side of the seam will be different from those at the other side.",5],["See Also",5],["Using the Mesh Class page.",5],["Mesh scripting class reference.",5],["Android Scripting",6],["Most features of the Android devices are exposed through the Input and Handheld classes. For cross-platform projects, UNITY_ANDROID is defined for conditionally compiling Android-specific C# code.",6],["For further information, see the Input, Mobile Keyboard and Advanced Unity Mobile Scripting pages.",6],["Reporting crash bugs under Android",7],["Before submitting a bug with just \"it crashes\" in the message body, please look through the Troubleshooting Android development page first.",7],["At this point there are no advanced debug tools to investigate on-device app crashes. However you can use adb application (found under Android-SDK/platform-tools) with logcat parameter. It prints status reports from your device. These reports may include information related to the occurred crash.",7],["If you are sure that the crash you're experiencing happens due to a bug in Unity software, please save the adb logcat output, conduct a repro project and use the bugreporter (Help/Report a bug) to inform us about it. We will get back to you as soon as we can.",7],["Inside the Android Build Process",8],["The Android application build process is performed in two steps:",8],["Application package (.apk file) is generated with all the required libraries and serialized assets.",8],["Application package is deployed on the actual device.",8],["When \"Build\" is hit on \"Build settings\" dialog only the first step is accomplished. Hitting \"Build and Run\" performs both steps.",8],["If Cmd+B is hit then the automatic build and run process is invoked and the latest used file is assumed as the build target.",8],["Upon the first attempt to build an Android project, Unity would ask you to locate the Android SDK, that is required to build and install your Android application on the device.",8],["You can change this setting later in Preferences.",8],["When building the app to the Android, be sure that the device has the \"USB Debugging\" and the \"Allow mock locations\" checkboxes checked in the device settings.",8],["You can ensure that the operating system sees your device by running adb devices command found in your Android SDK/platform-tools folder.",8],["This should work both for Mac and Windows.",8],["Unity builds an application archive (.apk file) for you and installs it on the connected device.",8],["In some cases your application cannot autostart like on iPhone, so you need to unlock the screen, and in some rare cases find the newly installed application in the menu.",8],["Texture Compression",8],["Under Build Settings you'll also find the Texture Compression option. By default, Unity uses ETC1/RGBA16 texture format for textures that don't have individual texture format overrides (see Texture 2D / Per-Platform Overrides).",8],["If you want to build an application archive (.apk file) targeting a specific hardware architecture, you can use the Texture Compression option to override this default behavior.",8],["Any texture that is set to not be compressed will be left alone; only textures using a compressed texture format will use the format selected in the Texture Compression option.",8],["To make sure the application is only deployed on devices which support the selected texture compression, Unity will edit the AndroidManifest to include tags matching the particular format selected.",8],["This will enable the Android Market filtering mechanism to only serve the application to devices with the appropriate graphics hardware.",8],["Getting Started with Android Development",9],["Building games for a device running Android OS requires an approach similar to that for iOS development. However, the hardware is not completely standardized across all devices, and this raises issues that don't occur in iOS development. There are some feature differences in the Android version of Unity just as there are with the iOS version.",9],["Setting up your Android Developer environment",9],["You will need to have your Android developer environment set up before you can test your Unity games on the device. This involves downloading and installing the Android SDK with the different Android plaforms and adding your physical device to your system (this is done a bit differently depending on whether you are developing on Windows or Mac). This setup process is explained on the Android developer website, and there may be additional information provided by the manufacturer of your device. Since this is a complex process, we've provided a basic outline of the tasks that must be completed before you can run code on your Android device or in the Android emulator. However, the best thing to do is follow the instructions step-by-step from the Android developer portal.",9],["Access Android Functionality",9],["Unity Android provides scripting APIs to access various input data and settings. You can find out more about the available classes on the Android scripting page.",9],["Exposing Native C, C++ or Java Code to Scripts",9],["Unity Android allows you to call custom functions written in C/C++ directly from C# scripts (Java functions can be called indirectly). To find out how to make functions from native code accessible from Unity, visit the Android plugins page.",9],["Occlusion Culling",9],["Unity includes support for occlusion culling which is a particularly valuable optimization on mobile platforms. More information can be found on the occlusion culling page.",9],["Splash Screen Customization",9],["The splash screen displayed while the game launches can be customized - see this page for further details.",9],["Troubleshooting and Bug Reports",9],["There are many reasons why your application may crash or fail to work as you expected. Our Android troubleshooting guide will help you get to the bottom of bugs as quickly as possible. If, after consulting the guide, you suspect the problem is internal to Unity then you should file a bug report - see this page for details on how to do this.",9],["How Unity Android Differs from Desktop Unity",9],["Strongly Typed JavaScript",9],["For performance reasons, dynamic typing in JavaScript is always turned off in Unity Android, as if #pragma strict were applied automatically to all scripts. This is important to know if you start with a project originally developed for the desktop platforms since you may find you get unexpected compile errors when switching to Android; dynamic typing is the first thing to investigate. These errors are usually easy to fix if you make sure all variables are explicitly typed or use type inference on initialization.",9],["ETC as Recommended Texture Compression",9],["Although Unity Android does support DXT/PVRTC/ATC textures, Unity will decompress the textures into RGB(A) format at runtime if those compression methods are not supported by the particular device in use. This could have an impact on the GPU rendering speed and it is recommended to use the ETC format instead. ETC is the de facto standard compression format on Android, and should be supported on all post 2.0 devices. However, ETC does not support an alpha channel and RGBA 16-bit will sometimes be the best trade-off between size, quality and rendering speed where alpha is required.",9],["It is also possible to create separate android distribution archives (.apk) for each of the DXT/PVRTC/ATC formats, and let the Android Market's filtering system select the correct archives for different devices (see this page for further details).",9],["Movie Playback",9],["Movie textures are not supported on Android, but a full-screen streaming playback is provided via scripting functions. To learn about supported file formats and scripting API, consult the movie page or the Android supported media formats page.",9],["Support for Split Application Binary (.OBB)",10],["Under Player Settings   Publishing Settings you'll find the option to split the application binary (.apk) into expansion files (.apk + .obb).",10],["This mechanism is only necessary when publishing to the Google Play Store, if the application is larger than 50 MB. See http://developer.android.com/guide/google/play/expansion-files.html for further information on APK Expansion Files.",10],["When the Split Application Binary option is enabled the player executable and data will be split up, with a generated .apk (main application binary) consisting only of the executable (Java, Native) code (around 10MB), any and all script / plugin code, and the data for the first scene.",10],["Everything else (all additional scenes, resources, streaming assets ...) will be serialized separately to a APK Expansion File (.obb).",10],["When starting an .apk built with Split Application Binary enabled the application will check to see if it can access the .obb file from it's position on the sdcard (location explained in the Apk Expansion docs from Google).",10],["If the expansion file (.obb) cannot be found, only the first level can accessed (since the rest of the data is in the .obb).",10],["The first level is then required to make the .obb file available on sdcard, before the application can proceed to load subsequent scenes/data.",10],["If the .obb is found the Application.dataPath will switch from .apk path, to instead point to .obb. Downloading the .obb is then not necessary.",10],["The contents of the .obb are never used manually. Always treat the .apk+.obb as a unique bundle, the same way you would treat a single big .apk.",10],["The Split Application Binary option is not the only way to split an .apk into .apk/.obb (other options include 3rd party plugins/asset bundles/etc), but it's the only automatic splitting mechanism officially supported.",10],["Downloading of the expansion file (.OBB)",10],["The expansion file (.obb) may (but it's not required, in its current form at least) to be hosted on the Google Play servers.",10],["If the .obb is published together with the .apk on Google Play, you must also include code to download the .obb. (for those devices that require it, and for scenarios where the .obb is lost)",10],["The asset store has a plugin (adapted from the Google Apk Expansion examples) which does this for you. It will download the .obb and put it in the right place on the sdcard. See http://u3d.as/content/unity-technologies/google-play-obb-downloader/2Qq",10],["When using the asset store plugin you need to call that plugin from the first scene (because of the reasons explained above).",10],["The asset store plugin can also be used to download .obb's created in some other way (single data file, a zip of asset bundles, etc) - it's agnostic to how the .obb was created.",10],["To test the obb downloader, the android device needs to be logged in as correct google account (tester account).",10],["Android Remote (DEPRECATED)",11],["Android Remote is a Android application that makes your device act as a remote control for the project in Unity. This is useful for rapid development when you don't want to compile and deploy your project to device for each change.",11],["DEPRECATED",11],["We are replacing Android Remote with new Unity Remote 4.",11],["How to use Android remote",11],["To use Android Remote, you should firstly make sure that you have the latest Android SDK installed (this is necessary to set up port-forwarding on the device). Then, connect the device to your computer with a USB cable and launch the Android Remote app. When you press Play in the Unity editor, the device will act as a remote control and will pass accelerometer and touch input events to the running game.",11],["Android SDK Setup",12],["There are some steps you must follow before you can build and run any code on your Android device. This is true regardless of whether you use Unity or write Android applications from scratch.",12],["Download the Android SDK",12],["Go to the Android Developer SDK webpage. Download and unpack the latest Android SDK.",12],["Installing the Android SDK",12],["Follow the instructions under Installing the SDK (although you can freely skip the optional parts relating to Eclipse). In step 4 of Installing the SDK be sure to add at least one Android platform with API level equal to or higher than 9 (Platform 2.3 or greater), the Platform Tools, and the USB drivers if you're using Windows.",12],["Get the device recognized by your system",12],["This can be tricky, especially under Windows based systems where drivers tend to be a problem. Also, your device may come with additional information or specific drivers from the manufacturer.",12],["For Windows: If the Android device is automatically recognized by the system you still might need to update the drivers with the ones that came with the Android SDK. This is done through the Windows Device Manager.",12],["---&gt;If the device is not recognized automatically use the drivers from the Android SDK, or any specific drivers provided by the manufacturer.",12],["---&gt;Additional info can be found here: USB Drivers for Windows",12],["For Mac: If you're developing on Mac OSX then no additional drivers are usually required.",12],["Note: Don't forget to turn on \"USB Debugging\" on your device. Go to Settings -&gt; Developer options, then enable USB debugging. As of Android Jelly Bean 4.2 the Developer options are hidden by default. To enable them tap on Settings -&gt; About Phone -&gt; Build Version multiple times. Then you will be able to access the Settings -&gt; Developer options.",12],["If you are unsure whether your device is properly installed on your system, please read the trouble-shooting page for details.",12],["Add the Android SDK path to Unity",12],["The first time you build a project for Android (or if Unity later fails to locate the SDK) you will be asked to locate the folder where you installed the Android SDK (you should select the root folder of the SDK installation). The location of the Android SDK can also be changed in the editor by selecting Unity &gt; Preferences from the menu and then clicking on External Tools in the preferences window.",12],["Features currently not supported by Unity Android",13],["Graphics",13],["Non-square textures are not supported by the ETC format.",13],["Movie Textures are not supported, use a full-screen streaming playback instead. Please see the Movie playback page for more information.",13],["Scripting",13],["Dynamic features like Duck Typing are not supported. Use #pragma strict for your scripts to force the compiler to report dynamic features as errors.",13],["Video streaming via WWW class is not supported.",13],["Customizing an Android Splash Screen",14],["Under Android Basic, a default splash screen will be displayed while your game loads, oriented according to the Default Screen Orientation option in the Player Settings.",14],["Android Pro users can use any texture in the project as a splash screen. You can set the texture from the Splash Image section of the Android Player Settings. You should also select the Splash scaling method from the following options:-",14],["Center (only scale down) will draw your image at its natural size unless it is too large, in which case it will be scaled down to fit.",14],["Scale to fit (letter-boxed) will draw your image so that the longer dimension fits the screen size exactly. Empty space around the sides in the shorter dimension will be filled in black.",14],["Scale to fill (cropped) will scale your image so that the shorter dimension fits the screen size exactly. The image will be cropped in the longer dimension.",14],["Animation Clips",15],["Animation Clips are one of the core elements to Unity's animation system. Unity supports importing animation from external sources, and offers the ability to create animation clips from scratch within the editor using the Animation window.",15],["Animation from External Sources",15],["Animation clips imported from external sources could include:",15],["Humanoid animations captured at a motion capture studio",15],["Animations created from scratch by an artist in an external 3D application (such as 3DS Max or Maya)",15],["Animation sets from 3rd-party libraries (eg, from Unity's asset store)",15],["Multiple clips cut and sliced from a single imported timeline.",15],["Animation Created and Edited Within Unity",15],["Unity's Animation Window also allows you to create and edit animation clips. These clips can animate:",15],["The position, rotation and scale of GameObjects",15],["Component properties such as material colour, the intensity of a light, the volume of a sound",15],["Properties within your own scripts including float, int, Vector and  boolean variables",15],["The timing of calling functions within your own scripts",15],["Animation Curves on Imported Clips",16],["Animation curves can be attached to imported animation clips in the Animations tab of the Animation Import Settings.",16],["These curves allow you to add additional animated data to an imported clip, which can allow you to animate the timings of other items based on the the state of an animator. For example, in a game set in icy conditions, an extra animation curve could be used to control the emission rate of a particle system to show the player's condensing breath in the cold air.",16],["To add a curve to an imported animation, first select the imported animation file in your project view, then in the import settings in the inspector, select the Animations button.",16],["Then scroll all the way to the bottom of the inspector to find the Curves heading, among the four fold-out headings as shown:",16],["Expand the curves heading, and click the plus icon to add a new curve to the current animation clip. If your imported animation file is split into multiple animation clips, each clip can have its own custom curves.",16],["The curve's X-axis represents normalized time and always ranges between 0.0 and 1.0 (corresponding to the beginning and the end of the animation clip respectively, regardless of its duration).",16],["Double-clicking an animation curve will bring up the standard Unity curve editor (see Editing Value Properties for further details) which you can use to add keys to the curve. Keys are points along the curve's timeline where it has a value explicitly set by the animator rather than just using an interpolated value. Keys are very useful for marking important points along the timeline of the animation. For example, with a walking animation, you might use keys to mark the points where the left foot is on the ground, then both feet on the ground, right foot on the ground, etc. Once the keys are set up, you can move conveniently between key frames by pressing the Previous/Next Key Frame buttons. This will move the vertical red line and show the normalized time at the keyframe; the value you enter in the text box will then set the value of the curve at that time.",16],["Animation Curves and Animator Controller parameters",16],["If you have a curve with the same name as one of the parameters in the Animator Controller, then that parameter will take its value from the value of the curve at each point in the timeline. For example, if you make a call to GetFloat from a script, the returned value will be equal to the value of the curve at the time the call is made. Note that at any given point in time, there might be multiple animation clips attempting to set the same parameter from the same controller. In that case, the curve values from the multiple animation clips are blended. If an animation has no curve for a particular parameter then the blending will be done with the default value for that parameter.",16],["Animation View Guide",17],["The Animation View in Unity allows you to create and modify Animation Clips directly inside Unity. It is designed to act as a powerful and straightforward alternative to external 3D animation programs. In addition to animating movement, the editor also allows you to animate variables of materials and components and augment your Animation Clips with Animation Events, functions that are called at specified points along the timeline.",17],["See the pages about Animation import and Animation Scripting for further information about these subjects.",17],["The rest of this section explains the different aspects of the Animation View.",17],["Animation Events on Imported Clips",18],["Animation events can be attached to imported animation clips in the Animations tab of the Animation Import Settings.",18],["These events allow you to add additional data to an imported clip which determines when certain actions should occur in time with the animation. For example, for an animated character you might want to add events to walk and run cycles indicating when the footstep sounds should play.",18],["To add an event to an imported animation, first select the imported animation file in your project view, then in the import settings in the inspector, select the Animations button.",18],["Then scroll all the way to the bottom of the inspector to find the Events heading, among the four fold-out headings as shown:",18],["Expand the events heading to reveal the events timeline for the current imported animation clip. To the left of the timeline is the Add Event button. Click it to add a new event to the timeline.",18],["When adding an event, the event needs a name, which will be the name of the function that is called when the event is triggered. For any Gameobject which uses this animation in its animator, you should make sure the Gameobject has a corresponding script attached that contains a function whose name matches the event name. Below, you can see a footstep event set up to call the \"Footstep\" function in a script attached to the Player Gameobject.",18],["You can optionally choose to specify a parameter which is also sent to the function called by the event. There are four different parameter types you can use, Float, Int, String or Object.",18],["By filling out a value in one of these fields, and implementing your receiver function to accept a parameter of that type, you can have the value specified in the event passed through to your function in the script. For example, you could pass a float value to specify how loud the footstep should be - allowing you to have quiet footstep events on a walking loop and loud footstep events on a running loop. Or you could pass a reference to an effect prefab, allowing your script to instantiate different effects at certain points during your animation.",18],["A Glossary of Animation and Mecanim terms",19],["Animation Clip terms",19],["Term: Definition: ",19],["Animation Clip Animation data that can be used for animated characters or simple animations. It is a simple \"unit\" piece of motion, such as (one specific instance of) \"Idle\", \"Walk\" or \"Run\". ",19],["Animation Curves Curves can be attached to animation clips and controlled by various parameters from the game. ",19],["Avatar Mask A specification for which body parts to include or exclude for a skeleton. Used in Animation Layers and in the importer. ",19],["Avatar terms",19],["Term: Definition: ",19],["Avatar An interface for retargeting one skeleton to another. ",19],["Retargeting Applying animations created for one model to another. ",19],["Rigging The process of building a skeleton hierarchy of bone joints for your mesh. Performed with an external tool, such as Max or Maya. ",19],["Skinning The process of binding bone joints to the character's mesh or 'skin'. Performed with an external tool, such as Max or Maya. ",19],["Muscle Definition A Mecanim concept, which allows you to have a more intuitive control over the character's skeleton. When an Avatar is in place, Mecanim works in muscle space, which is more intuitive than bone space. ",19],["T-pose The pose in which the character has his arms straight out to the sides, forming a \"T\". The required pose for the character to be in, in order to make an Avatar. ",19],["Bind-pose The pose at which the character was modelled. ",19],["Human template A pre-defined bone-mapping. Used for matching bones from FBX files to the Avatar. ",19],["Animator and Animator Controller terms",19],["Term: Definition: ",19],["Animator Component Component on a model that animates that model using the Mecanim animation system. The component has a reference to an Animator Controller asset that controls the animation. ",19],["Root Motion Motion of character's root, whether it's controlled by the animation itself or externally. ",19],["Animator Controller The Animator Controller controls animation through Animation Layers with Animation State Machines and Animation Blend Trees, controlled by Animation Parameters. The same Animator Controller can be referenced by multiple models with Animator components. ",19],["Animator Window The window where the Animator Controller is visualized and edited. ",19],["Animation Layer An Animation Layer contains an Animation State Machine that controls animations of a model or part of it. An example of this is if you have a full-body layer for walking or jumping and a higher layer for upper-body motions such as throwing an object or shooting. The higher layers take precedence for the body parts they control. ",19],["Animation State Machine A graph controlling the interaction of Animation States. Each state references an Animation Blend Tree or a single Animation Clip. ",19],["Animation Blend Tree Used for continuous blending between similar Animation Clips based on float Animation Parameters. ",19],["Animation Parameters Used to communicate between scripting and the Animator Controller. Some parameters can be set in scripting and used by the controller, while other parameters are based on Custom Curves in Animation Clips and can be sampled using the scripting API. ",19],["Inverse Kinematics (IK) The ability to control the character's body parts based on various objects in the world. ",19],["Animation Layers",20],["Unity uses Animation Layers for managing complex state machines for different body parts. An example of this is if you have a lower-body layer for walking-jumping, and an upper-body layer for throwing objects / shooting.",20],["You can manage animation layers from the Layers Widget in the top-left corner of the Animator Controller.",20],["You can add a new layer by pressing the + on the widget. On each layer, you can specify the body mask (the part of the body on which the animation would be applied), and the Blending type. Override means information from other layers will be ignored, while Additive means that the animation will be added on top of previous layers.",20],["The Mask property is there to specify the body mask used on this layer. For example if you want to use upper body throwing animations, while having your character walk or run, you would use an upper body mask, like this:",20],["For more on Avatar Body Masks, you can read this section",20],["Animation Layer syncing",20],["Sometimes it is useful to be able to re-use the same state machine in different layers. For example if you want to simulate \"wounded\" behavior, and have \"wounded\" animations for walk / run / jump instead of the \"healthy\" ones. You can click the Sync checkbox on one of your layers, and then select the layer you want to sync with. The state machine structure will then be the same, but the actual animation clips used by the states will be distinct.",20],["Masking Imported Clips",21],["Masking allows you to discard some of the animation data within a clip, allowing the clip to animate only parts of the object or character rather than the entire thing.  A good example of this would be a character with a throwing animation. If you wanted to be able to use the throwing animation in conjunction with various other body movements such as running, crouching and jumping, you could create a mask for the throwing animation limiting it to just the right arm, upper body and head. This portion of the animation can then be played in a layer over the top of the base running or jumping animations.",21],["Masking can be applied to animation clips either during import time, or at runtime. Masking during import time is preferable, because it allows the discarded animation data to be omitted from your build, making filesize and memory footprint smaller. It also makes for faster processing speed because there is less animation data to be blended at runtime. In some cases, import masking may not be suitable for your purposes, in which case you can apply a mask at runtime by using the layer settings of the Animator Controller. This page relates to masking in the import settings.",21],["To apply a mask to an imported animation clip, first select the imported animation file in your project view, then in the import settings in the inspector, select the Animations button.",21],["Then scroll all the way to the bottom of the inspector to find the Mask heading, among the four fold-out headings as shown:",21],["Expand the Mask heading to reveal the Mask options. When you open the menu, you'll see three options: Definition, Humanoid and Transform.",21],["Definition",21],["Allows you to specify whether you want to create a one-off mask in the inspector specially for this clip, or whether you want to use an existing mask asset from your project.",21],["If you want to create a one-off mask just for this clip, choose / Create From This Model /.",21],["If you are going to set up multiple clips with the same mask, you should select / Copy From Other Mask / and use a mask asset. This allows you to re-use a single mask definition for many clips.",21],["When Copy From Other Mask is selected, the Humanoid and Transform options are unavailable, since these relate to creating a one-off mask within the inspector for this clip.",21],["Humanoid",21],["The Humanoid option gives you a quick way of defining a mask by selecting or deselecting the body parts of a human diagram. These can be used if the animation has been marked as humanoid and has a valid avatar.",21],["Transform",21],["This option allows you to specify a mask based on the individual bones or moving parts of the animation. This gives you finer control over the exact mask definition, and also allows you to apply masks to non-humanoid animation clips.",21],["Unity's Animation System",22],["Unity has a rich and sophisticated animation system called Mecanim. Mecanim provides:",22],["Easy workflow and setup of animations for all elements of Unity including objects, characters, and properties.",22],["Support for imported animation clips and animation created within Unity",22],["Humanoid animation retargeting - the ability to apply animations from one character model onto another.",22],["Simplified workflow for aligning animation clips.",22],["Convenient preview of animation clips, transitions and interactions between them. This allows animators to work more independently of programmers, prototype and preview their animations before gameplay code is hooked in.",22],["Management of complex interactions between animations with a visual programming tool.",22],["Animating different body parts with different logic.",22],["Layering and masking features",22],["Animation workflow",22],["Unity's animation system is based on the concept of Animation Clips, which contain information about how certain objects should change their position, rotation, or other properties over time. Each clip can be thought of as a single linear recording. Animation clips from external sources are created by artists or animators with 3rd party tools such as Max or Maya, or come from motion capture studios or other sources.",22],["Animation Clips are then organised into a structured flowchart-like system called an Animator Controller. The Animator Controller acts as a \"State Machine\" which keeps track of which clip should currently be playing, and when the animations should change or blend together.",22],["A very simple Animator Controller might only contain one or two clips, for example to control a powerup spinning and bouncing, or to animate a door opening and closing at the correct time. A more advanced Animator Controller might contain dozens of humanoid animations for all the main character's actions, and might blend between multiple clips at the same time to provide a fluid motion as the player moves around the scene.",22],["Unity's Animation system also has numerous special features for handling humanoid characters which give you the ability to retarget humanoid animation from any source (Eg. motion capture, the asset store, or some other third-party animation library) to your own character model, as well as adjusting muscle definitions. These special features are enabled by Unity's Avatar system, where humanoid characters are mapped to a common internal format.",22],["Each of these pieces - the Animation Clips, the Animator Controller, and the Avatar, are brought together on a GameObject via the Animator Component. This component has a reference to an Animator Controller, and (if required) the Avatar for this model. The Animator Controller, in turn, contains the references to the Animation Clips it uses.",22],["The above diagram shows the following:",22],["Animation clips are imported from an external source or created within Unity. In this example, they are imported motion captured humanoid animations.",22],["The animation clips are placed and arranged in an Animator Controller. This shows a view of an Animator Controller in the Animator window. The States (which may represent animations or nested sub-state machines) appear as nodes connected by lines. This Animator Controller exists as an asset in the Project window.",22],["The rigged character model (in this case, the astronaut \"Astrella\") has a specific configuration of bones which are mapped to Unity's common Avatar format. This mapping is stored as an Avatar asset as part of the imported character model, and also appears in the Project window as shown.",22],["When animating the character model, it has an Animator component attached. In the Inspector view shown above, you can see the Animator Component which has both the Animator Controller and the Avatar assigned. The animator uses these together to animate the model. The Avatar reference is only necessary when animating a humanoid character. For other types of animation, only an Animator Controller is required.",22],["Unity's animation system (Known as \"Mecanim\") comes with a lot of concepts and terminology. If at any point, you need to find out what something means, go to our Animation Glossary.",22],["Legacy animation system",22],["While Mecanim is recommended for use in most situations, Unity has retained its legacy animation system which existed before Unity 4. You may need to use when working with older content created before Unity 4. For information on the Legacy animation system, see this section",22],["Unity intends to phase out the Legacy animation system over time for all cases by merging the workflows into Mecanim.",22],["Animation Parameters",23],["Animation Parameters are variables that are defined within an Animator Controller that can be accessed and assigned values from scripts. This is how a script can control or affect the flow of the state machine.",23],["For example, the value of a parameter can be updated by an animation curve and then accessed from a script so that, say, the pitch of a sound effect can be varied as if it were a piece of animation. Likewise, a script can set parameter values to be picked up by Mecanim. For example, a script can set a parameter to control a Blend Tree.",23],["Default parameter values can be set up using the Parameters section of the Animator window, selectable in the top right corner of the Animator window. They can be of four basic types:",23],["Int - an integer (whole number)",23],["Float - a number with a fractional part",23],["Bool - true or false value (represented by a checkbox)",23],["Trigger - a boolean parameter that is reset by the controller when consumed by a transition (represented by a circle button)",23],["Parameters can be assigned values from a script using functions in the Animator class: SetFloat, SetInt, SetBool, and SetTrigger.",23],["Here's an example of a script that modifies parameters based on user input and collision detection.",23],["using UnityEngine;",23],["using System.Collections;",23],["public class SimplePlayer : MonoBehaviour {",23],["Animator animator;",23],["// Use this for initialization",23],["void Start () {",23],["animator = GetComponent();",23],["// Update is called once per frame",23],["void Update () {",23],["float h = Input.GetAxis(\"Horizontal\");",23],["float v = Input.GetAxis(\"Vertical\");",23],["bool fire = Input.GetButtonDown(\"Fire1\");",23],["animator.SetFloat(\"Forward\",v);",23],["animator.SetFloat(\"Strafe\",h);",23],["animator.SetBool(\"Fire\", fire);",23],["void OnCollisionEnter(Collision col) {",23],["if (col.gameObject.CompareTag(\"Enemy\"))",23],["animator.SetTrigger(\"Die\");",23],["Selecting a Root Motion Node",24],["When root motion is contained within an imported animation clip, that motion will be used to drive the movement and rotation of the GameObject that is playing the animation. Sometimes however it may be necessary to manually select a different specific node within the hierarchy of your animation file to act as the root motion node.",24],["(example use case required here)",24],["The Motion field within the Animation import settings allows you to use a hierarchical popup menu to select any node (Transform) within the hierarchy of the imported animation and use it as the root motion source. That object's animated position and rotation will control the animated position and rotation of the GameObject playing back the animation.",24],["To select a root motion node for an animation, first select the imported animation file in your project view, then in the import settings in the inspector, select the Animations button.",24],["Then scroll all the way to the bottom of the inspector to find the Motion heading, among the four fold-out headings as shown:",24],["Expand the motion heading to reveal the Root Motion Node menu. When you open the menu, you'll see the options * None *, * Root Transform *, and any objects that are in the root of the imported file's hierarchy. This may be your character's mesh objects, as well as its root bone name, and a submenu for each item that has child objects. Each submenu also contains the child object(s) itself, and further sub-menus if / those / objects have child objects.",24],["Once the Root motion node has been selected, the object's motion will now be driven by the animation from that particular object.",24],["Legacy animation system",25],["Prior to the introduction of Mecanim, Unity used a simpler animation system. For backward compatibility, this system is still available. The main reason for using legacy animation is to continue working with an old project without the work of updating it for Mecanim. However, it is not recommended that you use the legacy system for new projects.",25],["Working with legacy animations",25],["To import a legacy animation, you first need to mark it as such in the Mesh importer's Rig tab:",25],["The Animation tab on the importer will then look something like this:",25],["",25],["Import Animation Selects whether or not animation should be imported at all. ",25],["Wrap Mode The method of handling what happens when the animation comes to an end:- ",25],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Default Uses whatever setting is specified in the animation clip. ",25],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Once Play the clip to the end and then finish. ",25],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Loop Play to the end, then immediately restart from the beginning. ",25],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PingPong Play to the end, then play from the end in reverse, and so on. ",25],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Forever Play to the end, then loop the last frame indefinitely. ",25],["Anim Compression Settings to attempt to remove redundant information from clips. ",25],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Off No compression. ",25],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Keyframe reduction Attempt to remove keyframes where differences are too small to be seen ",25],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Keyframe reduction and compression As for Keyframe reduction, but clip data is also compressed. ",25],["Rotation error Minimum difference in rotation values (in degrees), below which two keyframes are counted as equal. ",25],["Position error Minimum difference in position (as a percentage of coordinate values), below which two keyframes are counted as equal. ",25],["Rotation error Minimum difference in scale (as a percentage of coordinate values), below which two keyframes are counted as equal. ",25],["Below the properties in the inspector is a list of animation clips. When you click on a clip in the list, an additional panel will appear below it in the inspector:-",25],["The Start and End values can be changed to allow you to use just a part of the original clip (see the page on  splitting animations for further details). The Add Loop Frame option adds an extra keyframe to the end of the animation that is exactly the same as the keyframe at the start. This enables the animation to loop smoothly even when the last frame doesn't exactly match up with the first. The Wrap Mode setting is identical to the master setting in the main animation properties but applies only to that specific clip.",25],["Animation Scripting (Legacy)",26],["Unity's Animation System allows you to create beautifully animated skinned characters. The Animation System supports animation blending, mixing, additive animations, walk cycle time synchronization, animation layers, control over all aspects of the animation playback (time, speed, blend-weights), mesh skinning with 1, 2 or 4 bones per vertex as well as supporting physically based rag-dolls and procedural animation. To obtain the best results, it is recommended that you read about the best practices and techniques for creating a rigged character with optimal performance in Unity on the Modeling Optimized Characters page.",26],["Making an animated character involves two things; moving it through the world and animating it accordingly. If you want to learn more about moving characters around, take a look at the Character Controller page. This page focuses on the animation. The actual animating of characters is done through Unity's scripting interface.",26],["You can download example demos showing pre-setup animated characters. Once you have learned the basics on this page you can also see the animation script interface.",26],["Animation Blending",26],["In today's games, animation blending is an essential feature to ensure that characters have smooth animations. Animators create separate animations, for example, a walk cycle, run cycle, idle animation or shoot animation. At any point in time during your game you need to be able to transition from the idle animation into the walk cycle and vice versa. Naturally, you want the transition to be smooth and avoid sudden jerks in the motion.",26],["This is where animation blending comes in. In Unity you can have any number of animations playing on the same character. All animations are blended or added together to generate the final animation.",26],["Our first step will be to make a character blend smoothly between the idle and walk animations. In order to make the scripter's job easier, we will first set the Wrap Mode of the animation to Loop. Then we will turn off Play Automatically to make sure our script is the only one playing animations.",26],["Our first script for animating the character is quite simple; we only need some way to detect how fast our character is moving, and then fade between the walk and idle animations. For this simple test, we will use the standard input axes:-",26],["function Update () {",26],["if (Input.GetAxis(\"Vertical\") > 0.2)",26],["animation.CrossFade (\"walk\");",26],["else",26],["animation.CrossFade (\"idle\");",26],["To use this script in your project:-",26],["Create a Javascript file using Assets &gt; Create &gt; Javascript.",26],["Copy and paste the code into it",26],["Drag the script onto the character (it needs to be attached to the GameObject that has the animation)",26],["When you hit the Play button, the character will start walking in place when you hold the up arrow key and return to the idle pose when you release it.",26],["Animation Layers",26],["Layers are an incredibly useful concept that allow you to group animations and prioritize weighting.",26],["Unity's animation system can blend between as many animation clips as you want. You can assign blend weights manually or simply use animation.CrossFade(), which will animate the weight automatically.",26],["Blend weights are always normalized before being applied",26],["Let's say you have a walk cycle and a run cycle, both having a weight of 1 (100%). When Unity generates the final animation, it will normalize the weights, which means the walk cycle will contribute 50% to the animation and the run cycle will also contribute 50%.",26],["However, you will generally want to prioritize which animation receives most weight when there are two animations playing. It is certainly possible to ensure that the weight sums up to 100% manually, but it is easier just to use layers for this purpose.",26],["Layering Example",26],["As an example, you might have a shoot animation, an idle and a walk cycle. The walk and idle animations would be blended based on the player's speed but when the player shoots, you would want to show only the shoot animation. Thus, the shoot animation essentially has a higher priority.",26],["The easiest way to do this is to simply keep playing the walk and idle animations while shooting. To do this, we need to make sure that the shoot animation is in a higher layer than the idle and walk animations, which means the shoot animation will receive blend weights first. The walk and idle animations will receive weights only if the shoot animation doesn't use all 100% of the blend weighting. So, when CrossFading the shoot animation in, the weight will start out at zero and over a short period become 100%. In the beginning the walk and idle layer will still receive blend weights but when the shoot animation is completely faded in, they will receive no weights at all. This is exactly what we need!",26],["function Start () {",26],["// Set all animations to loop",26],["animation.wrapMode = WrapMode.Loop;",26],["// except shooting",26],["animation[\"shoot\"].wrapMode = WrapMode.Once;",26],["// Put idle and walk into lower layers (The default layer is always 0)",26],["// This will do two things",26],["// - Since shoot and idle/walk are in different layers they will not affect",26],["// each other's playback when calling CrossFade.",26],["// - Since shoot is in a higher layer, the animation will replace idle/walk",26],["// animations when faded in.",26],["animation[\"shoot\"].layer = 1;",26],["// Stop animations that are already playing",26],["//(In case user forgot to disable play automatically)",26],["animation.Stop();",26],["function Update () {",26],["// Based on the key that is pressed,",26],["// play the walk animation or the idle animation",26],["if (Mathf.Abs(Input.GetAxis(\"Vertical\")) > 0.1)",26],["animation.CrossFade(\"walk\");",26],["else",26],["animation.CrossFade(\"idle\");",26],["// Shoot",26],["if (Input.GetButtonDown (\"Fire1\"))",26],["animation.CrossFade(\"shoot\");",26],["By default the animation.Play() and animation.CrossFade() will stop or fade out animations that are in the same layer. This is exactly what we want in most cases. In our shoot, idle, run example, playing idle and run will not affect the shoot animation and vice versa (you can change this behavior with an optional parameter to animation.CrossFade if you like).",26],["Animation Mixing",26],["Animation mixing allow you to cut down on the number of animations you need to create for your game by having some animations apply to part of the body only. This means such animations can be used together with other animations in various combinations.",26],["You add an animation mixing transform to an animation by calling AddMixingTransform() on the given AnimationState.",26],["Mixing Example",26],["An example of mixing might be something like a hand-waving animation. You might want to make the hand wave either when the character is idle or when it is walking. Without animation mixing you would have to create separate hand waving animations for the idle and walking states. However, if you add the shoulder transform as a mixing transform to the hand waving animation, the hand waving animation will have full control only from the shoulder joint to the hand. Since the rest of the body will not be affected by he hand-waving, it will continue playing the idle or walk animation. Consequently, only the one animation is needed to make the hand wave while the rest of the body is using the idle or walk animation.",26],["/// Adds a mixing transform using a Transform variable",26],["var shoulder : Transform;",26],["animation[\"wave_hand\"].AddMixingTransform(shoulder);",26],["Another example using a path.",26],["function Start () {",26],["// Adds a mixing transform using a path instead",26],["var mixTransform : Transform = transform.Find(\"root/upper_body/left_shoulder\");",26],["animation[\"wave_hand\"].AddMixingTransform(mixTransform);",26],["Additive Animations",26],["Additive animations and animation mixing allow you to cut down on the number of animations you have to create for your game, and are important for creating facial animations.",26],["Suppose you want to create a character that leans to the sides as it turns while walking and running. This leads to four combinations (walk-lean-left, walk-lean-right, run-lean-left, run-lean-right), each of which needs an animation. Creating a separate animation for each combination clearly leads to a lot of extra work even in this simple case but the number of combinations increases dramatically with each additional action. Fortunately additive animation and mixing avoids the need to produce separate animations for combinations of simple movements.",26],["Additive Animation Example",26],["Additive animations allow you to overlay the effects of one animation on top of any others that may be playing. When generating additive animations, Unity will calculate the difference between the first frame in the animation clip and the current frame. Then it will apply this difference on top of all other playing animations.",26],["Referring to the previous example, you could make animations to lean right and left and Unity would be able to superimpose these on the walk, idle or run cycle. This could be achieved with code like the following:-",26],["private var leanLeft : AnimationState;",26],["private var leanRight : AnimationState;",26],["function Start () {",26],["leanLeft = animation[\"leanLeft\"];",26],["leanRight = animation[\"leanRight\"];",26],["// Put the leaning animation in a separate layer",26],["// So that other calls to CrossFade won't affect it.",26],["leanLeft.layer = 10;",26],["leanRight.layer = 10;",26],["// Set the lean animation to be additive",26],["leanLeft.blendMode = AnimationBlendMode.Additive;",26],["leanRight.blendMode = AnimationBlendMode.Additive;",26],["// Set the lean animation ClampForever",26],["// With ClampForever animations will not stop",26],["// automatically when reaching the end of the clip",26],["leanLeft.wrapMode = WrapMode.ClampForever;",26],["leanRight.wrapMode = WrapMode.ClampForever;",26],["// Enable the animation and fade it in completely",26],["// We don't use animation.Play here because we manually adjust the time",26],["// in the Update function.",26],["// Instead we just enable the animation and set it to full weight",26],["leanRight.enabled = true;",26],["leanLeft.enabled = true;",26],["leanRight.weight = 1.0;",26],["leanLeft.weight = 1.0;",26],["// For testing just play \"walk\" animation and loop it",26],["animation[\"walk\"].wrapMode = WrapMode.Loop;",26],["animation.Play(\"walk\");",26],["// Every frame just set the normalized time",26],["// based on how much lean we want to apply",26],["function Update () {",26],["var lean = Input.GetAxis(\"Horizontal\");",26],["// normalizedTime is 0 at the first frame and 1 at the last frame in the clip",26],["leanLeft.normalizedTime = -lean;",26],["leanRight.normalizedTime = lean;",26],["Tip: When using Additive animations, it is critical that you also play some other non-additive animation on every transform that is also used in the additive animation, otherwise the animations will add on top of the last frame's result. This is most certainly not what you want.",26],["Animating Characters Procedurally",26],["Sometimes you want to animate the bones of your character procedurally. For example, you might want the head of your character to look at a specific point in 3D space which is best handled by a script that tracks the target point. Fortunately, Unity makes this very easy, since bones are just Transforms which drive the skinned mesh. Thus, you can control the bones of a character from a script just like the Transforms of a GameObject.",26],["One important thing to know is that the animation system updates Transforms after the Update() function and before the LateUpdate() function. Thus if you want to do a LookAt() function you should do that in LateUpdate() to make sure that you are really overriding the animation.",26],["Ragdolls are created in the same way. You simply have to attach Rigidbodies, Character Joints and Capsule Colliders to the different bones. This will then physically animate your skinned character.",26],["Animation Playback and Sampling",26],["This section explains how animations in Unity are sampled when they are played back by the engine.",26],["AnimationClips are typically authored at a fixed frame rate. For example, you may create your animation in 3ds Max or Maya at a frame rate of 60 frames per second (fps). When importing the animation in Unity, this frame rate will be read by the importer, so the data of the imported animation is also sampled at 60 fps.",26],["However, games typically run at a variable frame rate. The frame rate may be higher on some computers than on others, and it may also vary from one second to the next based on the complexity of the view the camera is looking at at any given moment. Basically this means that we can make no assumptions about the exact frame rate the game is running at. What this means is that even if an animation is authored at 60 fps, it may be played back at a different framerate, such as 56.72 fps, or 83.14 fps, or practically any other value.",26],["As a result, Unity must sample an animation at variable framerates, and cannot guarantee the framerate for which it was originally designed. Fortunately, animations for 3D computer graphics do not consist of discrete frames, but rather of continuous curves. These curves can be sampled at any point in time, not just at those points in time that correspond to frames in the original animation. In fact, if the game runs at a higher frame rate than the animation was authored with, the animation will actually look smoother and more fluid in the game than it did in the animation software.",26],["For most practical purposes, you can ignore the fact that Unity samples animations at variable framerates. However, if you have gameplay logic that relies on animations that animate transforms or properties into very specific configurations, then you need to be aware that the re-sampling takes place behind the scenes. For example, if you have an animation that rotates an object from 0 to 180 degrees over 30 frames, and you want to know from your code when it has reached half way there, you should not do it by having a conditional statement in your code that checks if the current rotation is 90 degrees. Because Unity samples the animation according to the variable frame rate of the game, it may sample it when the rotation is just below 90 degrees, and the next time right after it reached 90 degrees. If you need to be notified when a specific point in an animation is reached, you should use an AnimationEvent instead.",26],["Note also that as a consequence of the variable framerate sampling, an animation that is played back using WrapMode.Once may not be sampled at the exact time of the last frame. In one frame of the game the animation may be sampled just before the end of the animation, and in the next frame the time can have exceeded the length of the animation, so it is disabled and not sampled further. If you absolutely need the last frame of the animation to be sampled exactly, you should use WrapMode.ClampForever which will keep sampling the last frame indefinitely until you stop the animation yourself.",26],["Animation from External Sources",27],["Overview of Imported Animation",27],["Animation from external sources is imported into Unity in the same way as regular 3D files. These files, whether they're generic FBX files or native formats from 3D software such as Maya, Cinema 4D, 3D Studio Max, can contain animation data in the form of a linear recording of the movements of objects within the file.",27],["In some situations the object to be animated (eg, a character) and the animations to go with it can be present in the same file. In other cases, the animations may exist in a separate file to the model to be animated.",27],["It may be that animations are specific to a particular model, and cannot be re-used on other models. For example, a giant octopus end-boss in your game might have a unique arrangement of limbs and bones, and its own set of animations.",27],["In other situations, it may be that you have a library of animations which are to be used on various different models in your scene. For example, a number of different humanoid characters might all use the same walk and run animations. In these situations, it's common to have a simple placeholder model in your animation files for the purposes of previewing them. Alternatively, it is possible to use animation files even if they have no geometry at all, just the animation data.",27],["When importing multiple animations, the animations can each exist as separate files within your project folder, or you can exctract multiple animation clips from a single file. You might want to do this if your file contains multiple separate animations arranged on a single timeline. For example, a long motion captured timeline might contain the animation for a few different jump motions, and you may want to cut out certain sections of this to use as individual clips and discard the rest. Unity provides animation cutting tools to achieve this.",27],["Importing Animation Files",27],["Before any animation can be used in Unity, it must first be imported into your project. Unity can import native Maya (.mb or .ma), 3D Studio Max (.max) and Cinema 4D (.c4d) files, and also generic FBX files which can be exported from most animation packages (see this page for further details on exporting).",27],["To import an animation, simply drag the file to the Assets folder of your project. When you select the file in the Project View you can edit the Import Settings in the inspector:",27],["See the FBX importer page for a full description of the available import options.",27],["Solo and Mute functionality",28],["In complex state machines, it is useful to preview the operation of some parts of the machine separately. For this, you can use the Mute / Solo functionality. Muting means a transition will be disabled. Soloed transtions are enabled and with respect to other transitions originating from the same state. You can set up mute and solo states either from the Transition Inspector, or the State Inspector (recommended), where you'll have an overview of all the transitions from that state.",28],["Soloed transitions will be shown in green, while muted transitions in red, like this:",28],["In the example above, if you are in State 0, only transitions to State A and State B will be available.",28],["The basic rule of thumb is that if one Solo is ticked, the rest of the transitions from that state will be muted.",28],["If both Solo and Mute are ticked, then Mute takes precedence.",28],["Known issues:",28],["The controller graph currently doesn't always reflect the internal mute states of the engine.",28],["Animation State Machines",29],["It is common for a character or other animated Game Object to have several different animations that correspond to different actions it can perform in the game. For example, a character may breathe or sway slightly while idle, walk when commanded to and raise its arms in panic as it falls from a platform. A door may have animations for opening, closing, getting jammed, and being broken open. Mecanim uses a visual layout system similar to a flow-chart, to represent a state machine to enable you to control and sequence the animation clips that you want to use on your character or object. This section gives further details about Mecanim's state machines and explains how to use them.",29],["Animator and Animator Controller",30],["When you have an animation clips ready to use, you need to use an Animator Controller to bring them together. An Animator Controller asset is created within Unity and allows you to maintain a set of animations for a character or object. In most situations, it is normal to have multiple animations and switch between them when certain game conditions occur. For example, you could switch from a walk animation to a jump whenever the spacebar is pressed.  However even if you just have a single animation clip you still need to place it into an animator controller to use it on a Game Object.",30],["The controller manages the various animation states and the transitions between them using a so-called State Machine, which could be thought of as a kind of flow-chart, or a simple program written in a visual programming language within Unity. More information about state machines can be found here.",30],["The animator controller is finally applied to an object by attaching an Animator component that references them. See the reference manual pages about the Animator component and Animator Controller for further details about their use.",30],["Creating an AnimatorController",31],["Animator Controller",31],["You can view and set up character behavior from the Animator Controller view (Menu: Window &gt; Animator Controller).",31],["The various ways an Animator Controller can be created:",31],["From the Project View by selecting 'Create &gt; Animator Controller'.",31],["By right-clicking in the Project View and selecting 'Create &gt; Animator Controller'.",31],["From the Assets menu by selecting 'Assets &gt; Create &gt; Animator Controller'.",31],["This creates a .controller asset on disk. In the Project Browser window the icon will look like:",31],["Animator Window",31],["After the state machine setup has been made, you can drop the controller onto the Animator component of any character with an Avatar in the Hierarchy View.",31],["The Animator Controller window contains:",31],["The Animation Layer Widget (top-left corner, see Animation Layers)",31],["The Event Parameters Widget (top-left, see Animation Parameters)",31],["The visualization of the State Machine itself.",31],["Note that the Animator Controller Window will always display the state machine from the most recently selected .controller asset, regardless of what scene is currently loaded.",31],["Animator Controllers",32],["An Animator Controller allows you to arrange and maintain a set of animations for a character or other animated Game Object.",32],["The controller has references to the animation clips used within it, and manages the various animation states and the transitions between them using a so-called State Machine, which could be thought of as a kind of flow-chart, or a simple program written in a visual programming language within Unity.",32],["The following sections cover the main features that Mecanim provides for controlling and sequencing your animations.",32],["Using Animation Curves",33],["The Property List",33],["In an Animation Clip, any animatable property can have an Animation Curve, which means that the Animation Clip controls that property. In the property list area of the Animation View, all animated properties are listed. With the Animation View in Dope Sheet mode, the animated values for each property appear only as linear tracks, however in Curves mode you are able to see the the changing values of properties visualised as a grap view.",33],["In \"Curves\" mode, the Animation Curves have colored curve indicators, each colour representing the values for one of the currently selected properties in the property list. For information on how to add curves to an animation property, see the section on Using the Animation View.",33],["Understanding Curves, Keys and Keyframes",33],["An Animation Curve has multiple keys which are control points that the curve passes through. These are visualized in the Curve Editor as small diamond shapes on the curves. A frame in which one or more of the shown curves have a key is called a keyframe.",33],["If a property has a key in the currently previewed frame, the curve indicator will have a diamond shape.",33],["The Curve Editor will only show curves for the properties that are selected. If multiple properties are selected in the property list, the curves will be shown overlaid together.",33],["Adding and Moving Keyframes",33],["You can add a keyframe at the currently previewed frame by clicking the Keyframe button.",33],["A keyframe can be added at the currently previewed frame by clicking the Keyframe button. This will add a keyframe to all currently selected curves. Alternatively you can add a keyframe to a single curve at any given frame by double-clicking the curve where the new keyframe should be. It is also possible to add a keyframe by right-clicking the Keyframe Line and select Add Keyframe from the context menu. Once placed, keyframes can be dragged around with the mouse. It is also possible to select multiple keyframes to drag at once. Keyframes can be deleted by selecting them and pressing Delete, or by right-clicking on them and selecting Delete Keyframe from the context menu.",33],["Supported Animatable Properties",33],["The Animation View can be used to animate much more than just the position, rotation, and scale of a Game Object. The properties of any Component and Material can be animated - even the public variables of your own scripts components. Making animations with complex visual effects and behaviors is only a matter of adding Animation Curves for the relevant properties.",33],["The following types of properties are supported in the animation system:",33],["Float",33],["Color",33],["Vector2",33],["Vector3",33],["Vector4",33],["Quaternion",33],["Boolean",33],["Arrays are not supported and neither are structs or objects other than the ones listed above.",33],["For boolean properties, a value of 0 equals False while any other value equals True.",33],["Here are a few examples of the many things the Animation View can be used for:",33],["Animate the Color and Intensity of a Light to make it blink, flicker, or pulsate.",33],["Animate the Pitch and Volume of a looping Audio Source to bring life to blowing wind, running engines, or flowing water while keeping the sizes of the sound assets to a minimum.",33],["Animate the Texture Offset of a Material to simulate moving belts or tracks, flowing water, or special effects.",33],["Animate the Emit state and Velocities of multiple Ellipsoid Particle Emitters to create spectacular fireworks or fountain displays.",33],["Animate variables of your own script components to make things behave differently over time.",33],["When using Animation Curves to control game logic, please be aware of the way animations are played back and sampled in Unity.",33],["Rotation Interpolation Types",33],["In Unity rotations are internally represented as Quaternions. Quaternions consist of .x, .y, .z, and .w values that should generally not be modified manually except by people who know exactly what they're doing. Instead, rotations are typically manipulated using Euler Angles which have .x, .y, and .z values representing the rotations around those three respective axes.",33],["When interpolating between two rotations, the interpolation can either be performed on the Quaternion values or on the Euler Angles values. The Animation View lets you choose which form of interpolation to use when animating Transform rotations. However, the rotations are always shown in the form of Euler Angles values no matter which interpolation form is used.",33],["Quaternion Interpolation",33],["Quaternion interpolation always generates nice interpolations along the shortest path between two rotations. This avoids rotation interpolation artifacts such as Gimbal Lock. However, Quaternion interpolation cannot represent rotations larger than 180 degrees, because it is then shorter to go the other way around. If you use Quaternion interpolation and place two keys further apart than 180 degrees, the curve will look discontinuous, even though the actual rotation is still smooth - it simply goes the other way around, because it is shorter. If rotations larger than 180 degrees are desired, additional keys must be placed in between. When using Quaternion interpolation, changing the keys or tangents of one curve may also change the shapes of the other two curves, since all three curves are created from the internal Quaternion representation. When using Quaternion interpolation, keys are always linked, so that creating a key at a specific time for one of the three curves will also create a key at that time for the other two curves.",33],["Euler Angles Interpolation",33],["Euler Angles interpolation is what most people are used to working with. Euler Angles can represent arbitrary large rotations and the .x, .y, and .z curves are independent from each other. Euler Angles interpolation can be subject to artifacts such as Gimbal Lock when rotating around multiple axes at the same time, but are intuitive to work with for simple rotations around one axis at a time. When Euler Angles interpolation is used, Unity internally bakes the curves into the Quaternion representation used internally. This is similar to what happens when importing animation into Unity from external programs. Note that this curve baking may add extra keys in the process and that tangents with the Constant tangent type may not be completely precise at a sub-frame level.",33],["Using Animation Events",34],["The power of animation clips can be increased by using Animation Events, which allow you to call functions in the object's script at specified points in the timeline.",34],["The function called by an animation event can optionally take one parameter. The parameter can be a float, string, int, object reference or an AnimationEvent object. The AnimationEvent object has member variables that allow a float, string, integer and object reference to be passed into the function all at once, along with other information about the event that triggered the function call.",34],["// This C# function can be called by an Animation Event",34],["public void PrintFloat (float theValue) {",34],["Debug.Log (\"PrintFloat is called with a value of \" + theValue);",34],["You can add an animation event to a clip at the current playhead position by clicking the Event button or at any point in the animation by double-clicking the Event Line at the point where you want the event to be triggered. Once added, an event can be repositioned by dragging with the mouse. You can delete an event by selecting it and pressing Delete, or by right-clicking on it and selecting Delete Event from the contextual menu.",34],["When you add an event, a dialog box will appear to prompt you for the name of the function and the value of the parameter you want to pass to it.",34],["The events added to a clip are shown as markers in the event line. Holding the mouse over a marker will show a tooltip with the function name and parameter value.",34],["Objects with Multiple Moving Parts",35],["You may want to animate Game Objects that have multiple moving parts, such as a gun turret with a moving barrel, or a character with many body parts. All the parts can be animated by a single Animation component on the parent, although it is useful to have additional Animation components on the children in some cases.",35],["Animating Child Game Objects",35],["The Game Object hierarchy is shown in the panel to the left of the Animation View.",35],["You can access the children of a Game Object by using the foldout triangle next to the object's name. The properties of child objects can be animated just like those of the parent.",35],["Alternatively you can select just the child Game Object you want to animate from the Hierarchy panel or the scene view, and maniuplate the object or change its properties in the inspector, while in animation recording mode.",35],["Using the Animation View",36],["The Animation View can be used to preview and edit Animation Clips for animated Game Objects in Unity. The Animation View can be opened from the Window-&gt;Animation menu.",36],["Viewing Animations on a GameObject",36],["The Animation View is tightly integrated with the Hierarchy View, the Scene View, and the Inspector. Similar to the Inspector, the Animation View will show the timeline and keyframes of the animation for the currently selected Game Object. You can select a Game Object using the Hierarchy View or the Scene View. (If you select a Prefab in the Project View you can inspect its animation timeline as well, but you have to drag the Prefab into the Scene View in order to be able to edit the animation.)",36],["The Animated Properties List",36],["At the left side of the Animation View is a list of the animated properties. In a newly created clip where no animation has yet been recorded, this list will be empty. When you begin to animate various properties within this clip, the animated properties will appear here. If the animation controls multiple child objects, the list will also include a hierarchical list of each child object's animated properties. In the example above, various parts of the Robot Arm hierarchy are all animated within the same animation clip, and each animated GameObject is shown according to its hierarchical position in relation to the root object which has the Animator component attached.",36],["Each property can be folded and unfolded to reveal the exact values recorded at each keyframe. The value fields will show the interpolated value if the playback head (the red line) is in-between keyframes. These fields can be edited directly. If changes are made when the playback head is over a keyframe, the keyframe's values will be modified. If changes are made when the playback head is between keyframes (and therefore the value shown was an interpolated value), a new keyframe will be created at that point with the new value that you entered.",36],["The Animation Timeline",36],["On the right side of the Animation View is the timeline for the current clip. The keyframes for each animated property appear in this timeline. The timeline view has two modes, \"Dope Sheet\" and \"Curves\". You can toggle between these modes by clicking the respective buttons at the bottom of the animated property list area:",36],["These offer two alternate views of the animation timeline and keyframe data, with each mode having its own benefits.",36],["Dope Sheet Timeline Mode",36],["The Dope Sheet mode offers a more compact view, allowing you to view each property's keyframe seqence in an individual horizontal track. This allows you have a simple overview of the keyframe timing for multiple properties or objects.",36],["Curves Timeline Mode",36],["Curves mode offers a view of how the values for each animated property changes over time in a resizable graph. All selected properties appear overlaid within the same graph view. This mode allows you to have great control over viewing and editing the values, and how they are interpolated between.",36],["When using curves mode to view your animation it's important to understand that sometimes the various ranges for each property may differ greatly. For example, consider a simple animation clip for a spinning bouncing cube. The bouncing Y position value may vary between the range 0 to 2 (meaning the cube bounces 2 units high during the animation), however the rotation value will go from 0 to 360. When viewing these two curves at the same time, the position animation curves will be very difficult to make out because the view will be zoomed out to fit the 0-360 range within the window:",36],["You can click on individual properties in the list to automatically re-scale the curves view to fit the range for that value, or you can manually adjust the zoom of the curves window by using the special drag handles at each end of the view's scrollbar sliders.",36],["Creating a New Animation Clip",36],["To animate Game Objects in Unity, the object or objects need an Animator Component attached. This Animator Component must reference an Animator Controller, which in turn contains references to one or more Animation Clips.",36],["When using the Animation View to begin animating a GameObject in Unity, these items will be automatically created, attached and set-up for you.",36],["To create a new Animation Clip for the selected Game Object, click the selection box at the upper right of the Animation View and select [Create New Clip]. You will then be prompted to save an Animation Clip somewhere in your Assets folder. If the Game Object already has an Animator Component attached, with an Animator Controller assigned, the new clip will be added as a state in the existing Animator Controller.",36],["If the Game Object doesn't have an Animator Component already at this stage, a number of things happen automatically:",36],["A new Animator Controller asset will be will be created",36],["The new clip being created will be added into the Animator Controller as the default state",36],["An Animator Component will be added to the GameObject being animated",36],["The Animator Component will have the new Animator Controller assigned to it",36],["The result of this automatic sequence is that you can begin the animation process of a new object by clicking the record button or selecting [Create New Clip], and all the required elements of the animation system are set up for you.",36],["The diagram below shows how these pieces are assigned, starting from the new animation clip created in the Animation Window:",36],["In the image below, you can see a game object selected that is not animated. We have just a simple cube, with no Animator component. The Animation, Hierarchy, Project and Inspector windows are arranged side-by-side for clarity.",36],["By pressing the record button in the Animation view (left), or choosing \"[Create New Clip]\" from the selection box in the Animation view, a new animation clip is created. Unity will ask to pick the name &amp; location to save this new Animation Clip. Unity also creates an Animator Controller asset with the same name as the selected GameObject, adds an Animator component to the GameObject, and connects the assets up appropriately.",36],["Animating a Game Object",36],["Once you have saved the new animation clip asset, you are ready to begin adding keyframes to the clip. To begin editing an Animation Clip for the selected Game Object, click on the Animation Record button. This will enter Animation Record Mode, where changes to the Game Object are recorded into the Animation Clip.",36],["You can stop the Animation Record Mode at any time by clicking the Animation Mode button again. This will revert the Game Object to the state it was in prior to entering the Animation Mode.",36],["The changes you make to the GameObject will be recorded as keyframes at the current time shown by the red line in the Animation Window.",36],["You can animate any property of the object by manipulating the object while in Animation Record Mode. Moving, Rotating or Scaling the object will add corresponding keyframes for those properties in the animation clip. Adjusting values directly in the object's inspector will also add keyframes while in Record mode. This applies to any property in the inspector, including numeric values, checkboxes, colours, and most other values.",36],["Any animated properties of the GameObject are shown listed in the property list on the left-hand side of the Animation Window. Properties which are not animated are not shown in this window. Any new properties that you animate, including properties on child objects, are added to the property list area as soon as you start animating them.",36],["Transform properties are special in that the .x, .y, and .z properties are linked, so that curves are added three at a time.",36],["You can also browse all animatable properties on the current GameObject (and its children) by clicking the Add Curve button.",36],["Any property can be animated by selecting it from the \"Add Curves\" button popup menu.",36],["When in Animation Mode, a red vertical line will show which frame of the Animation Clip is currently previewed. The Inspector and Scene View will show the Game Object at that frame of the Animation Clip. The values of the animated properties at that frame are also shown in a column to the right of the property names.",36],["In Animation Mode a red vertical line shows the currently previewed frame.",36],["Time Line",36],["You can click anywhere on the Time Line to preview or modify that frame in the Animation Clip. The numbers in the Time Line are shown as seconds and frames, so 1:30 means 1 second and 30 frames.",36],["Frame Navigation",36],["You can also use the following keyboard shortcuts to navigate between frames:",36],["Press Comma (,) to go to the previous frame.",36],["Press Period (.) to go to the next frame.",36],["Hold Alt and press Comma (,) to go to the previous keyframe.",36],["Hold Alt and press Period (.) to go to the next keyframe.",36],["Animation Mode",36],["In Animation Mode you can move, rotate, or scale the Game Object in the Scene View. This will automatically create Animation Curves for the position, rotation, and scale properties of the Animation Clip if they didn't already exist, and keys on those Animation Curves will automatically be created at the currently previewed frame to store the respective Transform values you changed.",36],["You can also use the Inspector to modify any of the animatable properties of the Game Object. This too will create Animation Curves as needed, and create keys on those Animation Curves at the currently previewed frame to store your changed values.",36],["Keyframe Creation",36],["You can manually create a keyframe using the Add Keyframe button. This will create a key for all the properties that are currently selected in the Animation View. This is useful for selectively adding keys to specific properties only.",36],["Playback",36],["The Animation Clip can be played back at anytime by clicking the Play button in the Animation View.",36],["More Information",36],["To learn more about navigating the Curve View, see the section on Using Animation Curves.",36],["Architecture",37],["Discover how to structure projects in Unity, both in hierarchical and scripting terms.",37],["Legacy Asset Bundles",38],["Unity 4.x has a different Asset Bundle system compared to 5.x.  The following pages document the legacy (4.x) asset bundles.",38],["AssetBundles",39],["AssetBundles are files which you can export from Unity to contain assets of your choice. These files use a proprietary compressed format and can be loaded on demand by your application. This allows you to stream in content, such as models, textures, audio clips, or even entire scenes separately from the scene in which they will be used. AssetBundles have been designed to simplify downloading content to your application.",39],["AssetBundles can contain any kind of asset type recognized by Unity, as determined by the filename extension. If you want to include files with custom binary data, they should have the extension \".bytes\". Unity will import these files as TextAssets.",39],["When working with AssetBundles, here's the typical workflow:",39],["During development, the developer prepares AssetBundles and uploads them to a server.",39],["Building AssetBundles. Asset bundles are created in the editor from assets in your scene. The Asset Bundle building process is described in more detail in the section for Building AssetBundles",39],["Uploading AssetBundles to external storage. This step does not include the Unity Editor or any other Unity channels, but we include it for completeness. You can use an FTP client to upload your Asset Bundles to the server of your choice.",39],["At runtime, on the user's machine, the application will load AssetBundles on demand and operate individual assets within each AssetBundle as needed.",39],["Downloading AssetBundles at runtime from your application. This is done from script within a Unity scene, and Asset Bundles are loaded from the server on demand. More on that in Downloading Asset Bundles.",39],["Loading objects from AssetBundles. Once the AssetBundle is downloaded, you might want to access its individual Assets from the Bundle. More on that in Loading Resources from AssetBundles",39],["Please read this section of the documentation thoroughly to familiarize yourself with the workflow for using AssetBundles, discover the different features they provide and learn best practices that can save you time and effort during development.",39],["AssetDatabase",40],["AssetDatabase is an API which allows you to access the assets contained in your project. Among other things, it provides methods to find and load assets and also to create, delete and modify them. The Unity Editor uses the AssetDatabase internally to keep track of asset files and maintain the linkage between assets and objects that reference them. Since Unity needs to keep track of all changes to the project folder, you should always use the AssetDatabase API rather than the filesystem if you want to access or modify asset data.",40],["The AssetDatabase interface is only available in the editor and has no function in the built player. Like all other editor classes, it is only available to scripts placed in the Editor folder (just create a folder named \"Editor\" in the main Assets folder of your project if there isn't one already).",40],["Importing an Asset",40],["Unity normally imports assets automatically when they are dragged into the project but it is also possible to import them under script control. To do this you can use the AssetDatabase.ImportAsset method as in the example below.",40],["using UnityEngine;",40],["using UnityEditor;",40],["public class ImportAsset {",40],["[MenuItem (\"AssetDatabase/ImportExample\")]",40],["static void ImportExample ()",40],["AssetDatabase.ImportAsset(\"Assets/Textures/texture.jpg\", ImportAssetOptions.Default);",40],["You can also pass an extra parameter of type AssetDatabase.ImportAssetOptions to the AssetDatabase.ImportAsset call. The scripting reference page documents the different options and their effects on the function's behaviour.",40],["Loading an Asset",40],["The editor loads assets only as needed, say if they are added to the scene or edited from the Inspector panel. However, you can load and access assets from a script using AssetDatabase.LoadAssetAtPath, AssetDatabase.LoadMainAssetAtPath, AssetDatabase.LoadAllAssetRepresentationsAtPath and AssetDatabase.LoadAllAssetsAtPath. See the scripting documentation for further details.",40],["using UnityEngine;",40],["using UnityEditor;",40],["public class ImportAsset {",40],["[MenuItem (\"AssetDatabase/LoadAssetExample\")]",40],["static void ImportExample ()",40],["Texture2D t = AssetDatabase.LoadAssetAtPath(\"Assets/Textures/texture.jpg\", typeof(Texture2D)) as Texture2D;",40],["File Operations using the AssetDatabase",40],["Since Unity keeps metadata about asset files, you should never create, move or delete them using the filesystem. Instead, you can use AssetDatabase.Contains, AssetDatabase.CreateAsset, AssetDatabase.CreateFolder, AssetDatabase.RenameAsset, AssetDatabase.CopyAsset, AssetDatabase.MoveAsset, AssetDatabase.MoveAssetToTrash and AssetDatabase.DeleteAsset.",40],["public class AssetDatabaseIOExample {",40],["[MenuItem (\"AssetDatabase/FileOperationsExample\")]",40],["static void Example ()",40],["string ret;",40],["// Create",40],["Material material = new Material (Shader.Find(\"Specular\"));",40],["AssetDatabase.CreateAsset(material, \"Assets/MyMaterial.mat\");",40],["if(AssetDatabase.Contains(material))",40],["Debug.Log(\"Material asset created\");",40],["// Rename",40],["ret = AssetDatabase.RenameAsset(\"Assets/MyMaterial.mat\", \"MyMaterialNew\");",40],["if(ret == \"\")",40],["Debug.Log(\"Material asset renamed to MyMaterialNew\");",40],["else",40],["Debug.Log(ret);",40],["// Create a Folder",40],["ret = AssetDatabase.CreateFolder(\"Assets\", \"NewFolder\");",40],["if(AssetDatabase.GUIDToAssetPath(ret) != \"\")",40],["Debug.Log(\"Folder asset created\");",40],["else",40],["Debug.Log(\"Couldn't find the GUID for the path\");",40],["// Move",40],["ret = AssetDatabase.MoveAsset(AssetDatabase.GetAssetPath(material), \"Assets/NewFolder/MyMaterialNew.mat\");",40],["if(ret == \"\")",40],["Debug.Log(\"Material asset moved to NewFolder/MyMaterialNew.mat\");",40],["else",40],["Debug.Log(ret);",40],["// Copy",40],["if(AssetDatabase.CopyAsset(AssetDatabase.GetAssetPath(material), \"Assets/MyMaterialNew.mat\"))",40],["Debug.Log(\"Material asset copied as Assets/MyMaterialNew.mat\");",40],["else",40],["Debug.Log(\"Couldn't copy the material\");",40],["// Manually refresh the Database to inform of a change",40],["AssetDatabase.Refresh();",40],["Material MaterialCopy = AssetDatabase.LoadAssetAtPath(\"Assets/MyMaterialNew.mat\", typeof(Material)) as Material;",40],["// Move to Trash",40],["if(AssetDatabase.MoveAssetToTrash(AssetDatabase.GetAssetPath(MaterialCopy)))",40],["Debug.Log(\"MaterialCopy asset moved to trash\");",40],["// Delete",40],["if(AssetDatabase.DeleteAsset(AssetDatabase.GetAssetPath(material)))",40],["Debug.Log(\"Material asset deleted\");",40],["if(AssetDatabase.DeleteAsset(\"Assets/NewFolder\"))",40],["Debug.Log(\"NewFolder deleted\");",40],["// Refresh the AssetDatabase after all the changes",40],["AssetDatabase.Refresh();",40],["Using AssetDatabase.Refresh",40],["When you have finished modifying assets, you should call AssetDatabase.Refresh to commit your changes to the database and make them visible in the project.",40],["Asset Import and Creation",41],["A large part of making a game is utilizing your asset source files in your GameObjects. This goes for textures, models, sound effects and behaviour scripts. Using the Project View inside Unity, you have quick access to all the files that make up your game:",41],["This view shows the organization of files in your project's Assets folder. Whenever you update one of your asset files, the changes are immediately reflected in your game!",41],["To import an asset file into your project, move the file into (your Project folder)-&gt;Assets in the Finder, and it will automatically be imported into Unity. To apply your assets, simply drag the asset file from the Project View window into the Hierarchy or Scene View. If the asset is meant to be applied to another object, drag the asset over the object.",41],["Hints",41],["It is always a good idea to add labels to your assets when you are working with big projects or when you want to keep organized all your assets, with this you can search for the labels associated to each asset in the search field in the project view.",41],["When backing up a project folder always back up Assets, ProjectSettings and Library folders. The Library folder contains all meta data and all the connections between objects, thus if the Library folder gets lost, you will lose references from scenes to assets. Easiest is just to back up the whole project folder containing the Assets, ProjectSettings and Library folders.",41],["Rename and move files to your heart's content inside Project View; nothing will break.",41],["Never rename or move anything from the Finder or another program; everything will break. In short, Unity stores lots of metadata for each asset (things like import settings, cached versions of compressed textures, etc.) and if you move a file externally, Unity can no longer associate metadata with the moved file.",41],["Asset Preparation and Import",42],["This section explains how to obtain and prepare character assets for use with Mecanim.",42],["Asset Server (Pro Only)",43],["Unity Asset Server Overview",43],["The Unity Asset Server is an asset and version control system with a graphical user interface integrated into Unity. It is meant to be used by team members working together on a project on different computers either in-person or remotely. The Asset Server is highly optimized for handling large binary assets in order to cope with large multi gigabyte project folders. When uploading assets, Import Settings and other meta data about each asset is uploaded to the asset server as well. Renaming and moving files is at the core of the system and well supported.",43],["It is available only for Unity Pro. To purchase Unity Pro, please visit the Unity store at http://unity3d.com/store",43],["New to Source Control?",43],["If you have never used Source Control before, it can be a little unfriendly to get started with any versioning system. Source Control works by storing an entire collection of all your assets - meshes, textures, materials, scripts, and everything else - in a database on some kind of server. That server might be your home computer, the same one that you use to run Unity. It might be a different computer in your local network. It might be a remote machine colocated in a different part of the world. It could even be a virtual machine. There are a lot of options, but the location of the server doesn't matter at all. The important thing is that you can access it somehow over your network, and that it stores your game data.",43],["In a way, the Asset Server functions as a backup of your Project Folder. You do not directly manipulate the contents of the Asset Server while you are developing. You make changes to your Project locally, then when you are done, you Commit Changes to the Project on the Server. This makes your local Project and the Asset Server Project identical.",43],["Now, when your fellow developers make a change, the Asset Server is identical to their Project, but not yours. To synchronize your local Project, you request to Update from Server. Now, whatever changes your team members have made will be downloaded from the server to your local Project.",43],["This is the basic workflow for using the Asset Server. In addition to this basic functionality, the Asset Server allows for rollback to previous versions of assets, detailed file comparison, merging two different scripts, resolving conflicts, and recovering deleted assets.",43],["Setting up the Asset Server",43],["The Asset Server requires a one time server setup and a client configuration for each user. You can read about how to do that in the Asset Server Setup page.",43],["The rest of this guide explains how to deploy, administrate, and regularly use the Asset Server.",43],["Daily use of the Asset Server",43],["This section explains the common tasks, workflow and best practices for using the Asset Server on a day-to-day basis.",43],["Getting Started",43],["If you are joining a team that has a lot of work stored on the Asset Server already, this is the quickest way to get up and running correctly.",43],["Create a new empty Project with no packages imported",43],["Go to Edit-&gt;Project Settings-&gt;Editor and select Asset Server as the version control mode",43],["From the menubar, select Window-&gt;Version Control",43],["Click the Connection button",43],["Enter your user name and password (provided by your Asset Server administrator)",43],["Click Show Projects and select the desired project",43],["Click Connect",43],["Click the Update tab",43],["Click the Update button",43],["If a conflict occurs, discard all local versions",43],["Wait for the update to complete",43],["You are ready to go",43],["Workflow Fundamentals",43],["When using the Asset Server with a multi-person team, it is generally good practice to Update all changed assets from the server when you begin working, and Commit your changes at the end of the day, or whenever you're done working. You should also commit changes when you have made significant progress on something, even if it is in the middle of the day. Committing your changes regularly and frequently is recommended.",43],["Understanding the Server View",43],["The Server View is your window into the Asset Server you're connected to. You can open the Server View by selecting Window-&gt;Version Control.",43],["The Server View is broken into tabs: Overview Update, and Commit. Overview will show you any differences between your local project and the latest version on the server with options to quickly commit local changes or download the latest updates. Update will show you the latest remote changes on the server and allow you to download them to your local project. Commit allows you to create a Changeset and commit it to the server for others to download.",43],["Connecting to the server",43],["Before you can use the asset server, you must connect to it. To do this you click the Connection button, which takes you to the connection screen:",43],["Here you need to fill in:",43],["Server address",43],["Username",43],["Password",43],["By clicking Show projects you can now see the available projects on the asset server, and choose which one to connect to by clicking Connect. Note that the username and password you use can be obtain from your system administrator. Your system administrator created accounts when they installed Asset Server.",43],["Updating from the Server",43],["To download all updates from the server, select the Update tab from the Overview tab and you will see a list of the latest committed Changesets. By selecting one of these you can see what was changed in the project as well as the provided commit message. Click Update and you will begin downloading all Changeset updates.",43],["Committing Changes to the Server",43],["When you have made a change to your local project and you want to store those changes on the server, you use the top Commit tab.",43],["Now you will be able to see all the local changes made to the project since your last update, and will be able to select which changes you wish to upload to the server. You can add changes to the changeset either by manually dragging them into the changeset field, or by using the buttons placed below the commit message field. Remember to type in a commit message which will help you when you compare versions or revert to an earlier version later on, both of which are discussed below.",43],["Resolving conflicts",43],["With multiple people working on the same collection of data, conflicts will inevitably arise. Remember, there is no need to panic! If a conflict exists, you will be presented with the Conflict Resolution dialog when updating your project.",43],["Here, you will be informed of each individual conflict, and be presented with different options to resolve each individual conflict. For any single conflict, you can select Skip Asset (which will not download that asset from the server), Discard My Changes (which will completely overwrite your local version of the asset) or Ignore Server Changes (which will ignore the changes others made to the asset and after this update you will be able to commit your local changes over server ones) for each individual conflict. Additionally, you can select Merge for text assets like scripts to merge the server version with the local version.",43],["Note: If you choose to discard your changes, the asset will be updated to the latest version from the server (i.e., it will incorporate other users' changes that have been made while you were working). If you want to get the asset back as it was when you started working, you should revert to the specific version that you checked out. (See Browsing revision history and reverting assets below.)",43],["If you run into a conflict while you are committing your local changes, Unity will refuse to commit your changes and inform you that a conflict exists. To resolve the conflicts, select Update. Your local changes will not automatically be overwritten. At this point you will see the Conflict Resolution dialog, and can follow the instructions in the above paragraph.",43],["Browsing revision history and reverting assets",43],["The Asset Server retains all uploaded versions of an asset in its database, so you can revert your local version to an earlier version at any time. You can either select to restore the entire project or single files. To revert to an older version of an asset or a project, select the Overview tab then click Show History listed under Asset Server Actions. You will now see a list of all commits and be able to select and restore any file or all project to an older version.",43],["Here, you can see the version number and added comments with each version of the asset or project. This is one reason why descriptive comments are helpful. Select any asset to see its history or Entire Project for all changes made in project. Find revision you need. You can either select whole revision or particular asset in revision. Then click Download Selected File to get your local asset replaced with a copy of the selected revision. Revert All Project will revert entire project to selected revision.",43],["Prior to reverting, if there are any differences between your local version and the selected server version, those changes will be lost when the local version is reverted.",43],["If you only want to abandon the changes made to the local copy, you don't have to revert. You can discard those local modifications by selecting Discard Changes in the main asset server window. This will immediately download the current version of the project from the server to your local Project.",43],["Comparing asset versions",43],["If you're curious to see the differences between two particular versions you can explicitly compare them. To do this, open History window, select revision and asset you want to compare and press Compare to Local Version. If you need to compare two different revisions of an asset - right click on it, in the context menu select Compare to Another Revision then find revision you want to compare to and select it.",43],["Note: this feature requires that you have one of supported file diff/merge tools installed. Supported tools are:",43],["On Windows:",43],["TortoiseMerge: part of TortoiseSVN or a separate download from the project site.",43],["WinMerge.",43],["SourceGear Diff/Merge.",43],["Perforce Merge (p4merge): part of Perforce's visual client suite (P4V).",43],["TkDiff.",43],["On Mac OS X:",43],["SourceGear Diff/Merge.",43],["FileMerge: part of Apple's XCode development tools.",43],["TkDiff.",43],["Perforce Merge (p4merge): part of Perforce's visual client suite (P4V).",43],["Recovering deleted assets",43],["Deleting a local asset and committing the delete to the server will in fact not delete an asset permanently. Just as any previous version of an asset can be restored through History window from the Overview tab.",43],["Expand Deleted Assets item, find and select assets from the list and hit Recover, the selected assets will be downloaded and re-added to the local project. If the folder that the asset was located in before the deletion still exists, the asset will be restored to the original location, otherwise it will be added to the root of the Assets folder in the local project.",43],["Best Practices &amp; Common Issues",43],["This is a compilation of best practices and solutions to problems which will help you when using the Asset Server:",43],["Backup, Backup, Backup",43],["Maintain a backup of your database. It is very important to do this. In the unfortunate case that you have a hardware problem, a virus, a user error, etc you may loose all of your work. Therefore make sure you have a backup system in place. You can find lots of resources online for setting up backup systems.",43],["Stop the server before shutting the machine down",43],["This can prevent \"fast shutdowns\" from being generated in the PostgreSQL (Asset Server) log. If this occurs the Asset Server has to do a recovery due to an improper shut down. This can take a very long time if you have a large project with many commits.",43],["Resetting you password from Console",43],["You can reset your password directly from a shell, console or command line using the following command:",43],["psql -U unitysrv -d template1 -c\"alter role admin with password 'MYPASSWORD'\"",43],["Can't connect to Asset Server",43],["The password may have expired. Try resetting your password.",43],["Also the username is case sensitive: \"Admin\" != \"admin\". Make sure you are using the correct case.",43],["Make sure the server is actually running:",43],["On OS X or Linux you can type on the terminal: ps -aux",43],["On Windows you can use the Task Manager.",43],["Verify that the Asset Server is not running on more than one computer in your Network. You could be connecting to the wrong one.",43],["The Asset Server doesn't work in 64-bit Linux",43],["The asset server can run OK on 64-bit Linux machines if you install 32-bit versions of the required packages. You can use \"dpkg -i --force-architecture\" to do this.",43],["Use the Asset Server logs to get more information",43],["Windows:",43],["ProgramFiles\\Unity\\AssetServer\\log",43],["OS X:",43],["/Library/UnityAssetServer/log",43],["\"The application failed to initialize properly (0xc0000135)\" in Windows XP",43],["In this case Service Pack 2 is required, and you should install .NET 2.0.",43],["Asset Server training complete",43],["You should now be equipped with the knowledge you need to start using the Asset Server effectively. Get to it, and don't forget the good workflow fundamentals. Commit changes often, and don't be afraid of losing anything.",43],["Asset Store",44],["Unity's Asset Store is home to a growing library of free and commercial assets created both by Unity Technologies and also members of the community. A wide variety of assets is available, covering everything from textures, models and animations to whole project examples, tutorials and Editor extensions. The assets are accessed from a simple interface built into the Unity Editor and are downloaded and imported directly into your project.",44],["Publisher Admin Section Overview",45],["The Publisher Administration section is a place where you can manage your presence as a publisher. This section will tell you about each tab within the publisher admin section and how it can help you.",45],["Sales",45],["The Sales tab allows you to view the sales data on all your assets It will show you the Gross amount  and your Net amount for the selected month. You can view the sales figures for different months by changing the month from the drop down box.",45],["",45],["Package: Name of the Asset. ",45],["Price: The cost of the product at the time the information on that row was recorded. ",45],["Qty: The Quantity of purchases on the asset in that row. ",45],["Refunds: The number of Refunds completed on the asset in that row. ",45],["Chargebacks: The number of Refunds completed on the asset in that row. A chargeback is a demand by a credit-card provider for a retailer to make good the loss on a fraudulent or disputed transaction. ",45],["Gross: The gross amount of money taken for the sales on the asset on that row. ",45],["First: The date of the first purchase of the asset on that row for the month selected. ",45],["Last: The date of the last purchase of the asset on that row for the month selected. ",45],["Free Downloads",45],["This page shows you your free assets. It shows you the following:",45],["The names of all the packages you have ever published for free.",45],["The number of downloads on that package.",45],["The date of the first download.",45],["The date of the last download.",45],["Revenue:",45],["The Revenue tab is a place where you can view your revenue earned for each month and also see when your earnings are paid out to your bank or PayPal.",45],["Pending:",45],["The Pending tab allows you to view the status of submitted assets. The table will show you the following:",45],["Package: Displays the name given to the submitted asset.",45],["Size:  Total size of the submitted package.",45],["Status: The status of the asset. Here is an overview of them:",45],["Pending Review: This means the asset has been received and is in the submission queue and is awaiting review from the vetting team. Only contact assetstore@unity3d.com if the asset has not been reviewed within 10 working days of submission.",45],["Uploaded: If an asset is displayed as Uploaded for more than 2 hours then the asset will need resubmitting.",45],["Draft: This will mean that the asset has not been submitted and is currently in pre submission stage.",45],["Verify Invoice:",45],["The Verify Invoice tab allows you to enter the invoice number of an asset store customer to see if the invoice is valid.",45],["It will also display your assets if they are present on the invoice and if they have already been refunded.",45],["Users:",45],["The Users tab allows you to view and add Unity accounts to the publisher admin section. This means that if you have a team, each person can be added if needed.",45],["When you request a refund on behalf of the customer support will check the users to confirm the request has come for a valid e-mail attached to the respective publisher account.",45],["Payout:",45],["The Payout tab allows you to manage the publisher information and payout options for the revenue earned by that publisher account.",45],["Info:",45],["The Info tab allows you to edit the profile of the publisher account. The page is very much self explanatory, however, here is a brief overview of the sections:",45],["Name and Description: For editing your publisher name, description and main webpage.",45],["Customer Support: Allows you to provide a support webpage and/or support e-mail address.",45],["Business Contact: This is used to provide contact information regarding business. This is used for internal use.",45],["Technical Contact: This is used to provide contact information regarding the technical side. This is used for internal use.",45],["Key Images: The key images that are displayed on your publisher page. The small key image is not currently used.",45],["Asset Store FAQ",46],["What date will I receive my monthly or quarterly transfer?",46],["All payouts are scheduled for the 15th of each month",46],["Why haven't I received my payout?",46],["Check your details are correct in the \"Payout\" tab in your Publisher Administration account. If everything looks correct and you still haven't received your funds, please contact: assetstore@unity3d.com",46],["My package has shown as Pending for a while now, what should I do?",46],["Our Vetting Team receive a huge amount of submissions per week, please be patient when waiting for acceptance. If you feel there may be an issue with your submission, please contact assetstore@unity3d.com stating your Publisher and Package details.",46],["Can I merge my account with my co-workers' account or another additional account?",46],["Unfortunately not, once an account has been created and purchases have been made, we cannot swap, merge or edit these purchases to appear in another account.",46],["I can't find my answer here. Can I speak to a human about my issue?",46],["Of course you can, drop us an email at assetstore@unity3d.com. We aim to respond within 24 hours.",46],["Asset Store HowTos",47],["This section describes how to accomplish some common tasks with the Asset Store.",47],["How to Promote your Assets (Daily Deals)",48],["Assets can be submitted into the daily deals at the Asset Store Sales Signup page.",48],["You are able to change the price of your asset for your own promotions; however the promotion must be advertised by your own means such as a forum post. If you decide to change the key images, then this must be discrete and not too over the top.",48],["Asset Store Publisher Administration",49],["Setting up a Publisher account",49],["Open up the Asset Store and download the latest version of \"Asset Store Tools\" from the Asset Store (you'll need to sign in, if you haven't done so already).",49],["Once downloaded and imported to your project, you should see the \"Asset Store Tools\" menu appear in your Toolbar. Scroll down and click the Package Manager button.",49],["Now you have the Package Manager open, you can click the link in the top right-hand corner that reads \"Publisher account\".",49],["This will bring up a window that prompts you to create your Publisher Account. You'll need to fill out your Publisher name, Publisher URL, Publisher description (including an email Support address for your packages) and Key images.",49],["Once you're done, hit Save. Voila, all finished!",49],["Publisher Administration",49],["Once you have your Publisher Account for the Asset Store setup, you'll be able to log into the Publisher Administration portal, here: https://publisher.assetstore.unity3d.com/",49],["You'll see a number of tabs. Below is a summary of each of these:",49],["The \"Sales\" tab allows you to track all purchases made by customers, organised by Package name. Quantity of Sales and Gross Revenue will be shown here, as well as any refunds (if applicable).",49],["\"Free Downloads\" allows you track all packages you have published on the Asset Store, for free, much the same as the Sales tab.",49],["The \"Revenue\" shows your revenue for any given month since you started selling on the Asset Store. Credits, debits, your balance and recent payouts will be shown here.",49],["The \"Pending\" tab will show any outstanding packages you have submitted, that are pending approval from our Vetting Team, before being accepted for sale on the Asset Store.",49],["If and when a customer needs Support for your package, you can verify they have indeed purchased your package using the \"Verify Invoice\" tab.",49],["You can add a number of administrative users (teammates, employees, colleagues) to your master account via the \"Users\" tab.",49],["In the \"Payout\" tab, you will specify how you would like to receive your earnings. You can amend your payout details for the Asset Store at any point.",49],["Payouts",49],["There are three options when receiving payouts from the Asset Store.",49],["Paypal - Free transactions. No minimum transfer. Monthly transfers.",49],["Wire - $20 Transaction fee. Minimum transfer of $250. Quarterly transfers.",49],["Check (US only) - $15 Transaction fee. Minimum transfer of $250. Quarterly transfers.",49],["Simply check the appropriate box in the Payout tab and fill out your details.",49],["Refunding Your Customers.",50],["As you know, you are unable to refund your customers as the purchase was made through the Asset Store. However customers will contact you when they are requesting a refund on your asset.",50],["You should help your customers in any way possible to help resolve their issue to avoid a refund. If a refund is required then you must request it on the customers behalf: this is done by the following process:",50],["Ask the user provide you with the invoice they received on purchase of the asset.",50],["Login to your publisher administration page.",50],["Verify the invoice using the Verify Invoice tab.",50],["Once verified, e-mail assetstore@unity3d.com from any e-mail address attached to your publisher account. You must provide either the invoice as an attachment, or the invoice number.",50],["Here is a template request:",50],["Hi Asset Store Team,",50],["Please refund the following asset(s)",50],["Publisher Name:",50],["\nAsset name(s)\n",50],["Regards",50],["Removing your Assets from the Store.",51],["If you wish to disable any of the assets that you have successfully published to the Asset Store, then you can simply E-mail assetstore@unity3d.com with the following:",51],["Publisher name.",51],["Asset name.",51],["Confirmation that you wish to disable the asset(s) stated.",51],["Remember: The request must be sent from the E-mail address attached to the publisher account of the asset(s) you wish to disable.",51],["Viewing the status of your Asset store submissions:",52],["You can view the status of your asset via the pending tab in your publisher admin page",52],["States",52],["Pending Review This means the asset has been received and is in the submission queue awaiting review from the vetting team. You should only contact assetstore@unity3d.com if the asset has not been reviewed within 10 working days of submission.",52],["Uploaded If an asset is displayed as Uploaded for more than 2 hours then the asset will need resubmitting.",52],["Draft This means that the asset has not been submitted and is currently in pre submission stage.",52],["If the asset does not appear in the pending queue then it has not been created as a package or has been accepted.",52],["You will be notified by e-mail if your asset is removed from the store. This E-mail will be sent to the main e-mail address attached to your publisher account.",52],["Providing Support",53],["As an Asset Store Publishers, you are required to provide support on all your published assets as stated in the Asset store provider agreement.",53],["You will need to ensure that you have an e-mail address for users to contact you. This should be entered into the Info tab of your Publisher Administration account.",53],["Support requests from users need to be handled professionally.",53],["Asset Workflow",54],["Here we'll explain the steps to use a single asset with Unity. These steps are general and are meant only as an overview for basic actions. For the example, we'll talk about using a 3D mesh.",54],["Create Rough Asset",54],["Use any supported 3D modeling package to create a rough version of your asset. Our example will use Maya. Work with the asset until you are ready to save. For a list of applications that are supported by Unity, please see this page.",54],["Import",54],["When you save your asset initially, you should save it normally to the Assets folder in your Project folder. When you open the Unity project, the asset will be detected and imported into the project. When you look in the Project View, you'll see the asset located there, right where you saved it. Please note that Unity uses the FBX exporter provided by your modeling package to convert your models to the FBX file format. You will need to have the FBX exporter of your modeling package available for Unity to use. Alternatively, you can directly export as FBX from your application and save in the Projects folder. For a list of applications that are supported by Unity, please see this page.",54],["Import Settings",54],["If you select the asset in the Project View the import settings for this asset will appear in the Inspector. The options that are displayed will change based on the type of asset that is selected.",54],["Adding Asset to the Scene",54],["Simply click and drag the mesh from the Project View to the Hierarchy or Scene View to add it to the Scene. When you drag a mesh to the scene, you are creating a GameObject that has a Mesh Renderer Component. If you are working with a texture or a sound file, you will have to add it to a GameObject that already exists in the Scene or Project.",54],["Putting Different Assets Together",54],["Here is a brief description of the relationships between the most common assets",54],["A Texture is applied to a Material",54],["A Material is applied to a GameObject (with a Mesh Renderer Component)",54],["An Animation is applied to a GameObject (with an Animation Component)",54],["A sound file is applied to a GameObject (with an Audio Source Component)",54],["Creating a Prefab",54],["A Prefab is a stored collection containing one or more complete GameObjects with components attached and properties set. Prefabs are asset types, so they do not appear in the scene in their own right. However, they can be used to create instances of the stored objects in the scene. Each instance is a copy of the original prefab. For example, you might use a prefab to store a tree object and then create many instances of the tree in a forest scene.",54],["By default, changes made to the prefab are automatically applied to all the instances, and so using prefabs can be a good way to maintain consistency among a set of objects. However, you can also break the link between the instance and the prefab if you want to create special variations on the original. You can also make changes to an instance, and then save those changes to the prefab (menu: GameObject &gt; Apply Changes to Prefab).",54],["You can create a Prefab from a GameObject in your scene, simply by dragging the GameObject from the scene into the project view. When you do this,  the GameObject's name text will be selected to let you rename it as you like.",54],["For further information, see the Prefabs page in the manual.",54],["Updating Assets",54],["You have imported, instantiated, and linked your asset to a Prefab. Now when you want to edit your source asset, just double-click it from the Project View. The appropriate application will launch, and you can make any changes you want. When you're done updating it, just Save it. Then, when you switch back to Unity, the update will be detected, and the asset will be re-imported. The asset's link to the Prefab will also be maintained. So the effect you will see is that your Prefab will update. That's all you have to know to update assets. Just open it and save!",54],["Attaching MonoDevelop Debugger To An Android Device",55],["You can attach the MonoDevelop debugger to an Android device with ADB via TCP/IP. The process is described below.",55],["1) Enable \"USB debugging\" on your device and connect the device to your development machine via USB cable. Ensure your device is on the same subnet mask and gateway as your development machine. Also, make sure there are no other active network connections on the device (i.e. disable data access over mobile/cellular network).",55],["2) On your development machine, open up your terminal/cmd and navigate to the location of the ADB. You can find the ADB tool in &lt;sdk&gt;/platform-tools/",55],["3) Restart host ADB in TCP/IP mode with the following command:",55],["adb tcpip 5555",55],["This should produce the following output:",55],["restarting in TCP mode port: 5555",55],["This will have enabled ADB over TCP/IP using port 5555. If port 5555 is unavailable, you should use a different port.",55],["(See http://developer.android.com/tools/help/adb.html)",55],["4) Find out the IP address of your Android device (Settings -> About -> Status) and input the following command:",55],["adb connect DEVICEIPADDRESS",55],["(DEVICEIPADDRESS is the actual IP address of your Android device)",55],["This should produce the following output:",55],["connected to DEVICEIPADDRESS:5555",55],["5) Ensure that your device is recognised by inputting the following command:",55],["adb devices",55],["This should produce the following output:",55],["List of devices attached",55],["DEVICEIPADDRESS:5555 device",55],["6) Build and run your Unity application to the device. Ensure you build your application with Development Build flag enabled and Script Debugging turned on.",55],["7) The device no longer needs to be connected to your development machine via USB.",55],["8) Finally, while the application is running on your device, open your script in MonoDevelop, add a breakpoint, select \"Run\" -> \"Attach to Process\" and select your device from the list. (Note that it might take a few seconds for the device to appear in the list. It may not appear in the list if the application is not running or if the device's display goes to sleep).",55],["For some more details and for troubleshooting, see the Wireless Usage section in the Android developers guide for the ADB: http://developer.android.com/tools/help/adb.html#wireless",55],["NB:",55],["The device sends multicast messages and the editor and MonoDevelop subscribe/listen for them. For the process to work, your network will need to be setup correctly for Multicasting.",55],["Attributes",56],["Attributes are markers that can be placed above a class, property or function in a script to indicate special behaviour. For example, the HideInInspector attribute can be added above a property declaration to prevent the property being shown in the inspector, even if it is public. In JavaScript, an attribute name begins with an \"@\" sign, whilst in C#, it is contained within square brackets:-",56],["// JS",56],["@HideInInspector",56],["var strength: float;",56],["// C#",56],["[HideInInspector]",56],["public float strength;",56],["Unity provides a number of attributes which are listed in the script reference (select the Editor or Runtime Attributes section from popup menu in the sidebar). There are also attributes defined in the .NET libraries which may sometimes be useful in Unity code.",56],["Note: the ThreadStatic attribute defined in the .NET library should not be used as it will cause a crash if added to a Unity script.",56],["Audio",57],["Audio in Unity, including clips, sources, listeners, importing and sound settings.",57],["Audio Files",58],["As with Meshes or Textures, the workflow for Audio File assets is designed to be smooth and trouble free. Unity can import almost every common file format but there are a few details that are useful to be aware of when working with Audio Files.",58],["Audio in Unity is either Native or Compressed. Unity supports most common formats (see the list below) and will import an audio file when it is added to the project. The default mode is Native, where the audio data from the original file is imported unchanged. However, Unity can also compress the audio data on import, simply by enabling the Compressed option in the importer. (iOS projects can make use of the hardware decoder - see the iOS documentation for further details). The difference between Native and Compressed modes are as follows:-",58],["Native: Use Native (WAV, AIFF) audio for short sound effects. The audio data will be larger but sounds won't need to be decoded at runtime.",58],["Compressed: The audio data will be small but will need to be decompressed at runtime, which entails a processing overhead. Depending on the target, Unity will encode the audio to either Ogg Vorbis (Mac/PC/Consoles) or MP3 (Mobile platforms). For the best sound quality, supply the audio in an uncompressed format such as WAV or AIFF (containing PCM data) and let Unity do the encoding. If you are targeting Mac and PC platforms only (including both standalones and webplayers) then importing an Ogg Vorbis file will not degrade the quality. However, on mobile platforms, Ogg Vorbis and MP3 files will be re-encoded to MP3 on import, which will introduce a slight quality degradation.",58],["Any Audio File imported into Unity is available from scripts as an Audio Clip instance, which is effectively just a container for the audio data. The clips must be used in conjunction with Audio Sources and an Audio Listener in order to actually generate sound. When you attach your clip to an object in the game, it adds an Audio Source component to the object, which has Volume, Pitch and a numerous other properties. While a Source is playing, an Audio Listener can \"hear\" all sources within range, and the combination of those sources gives the sound that will actually be heard through the speakers. There can be only one Audio Listener in your scene, and this is usually attached to the Main Camera.",58],["Supported Formats",58],["Format Compressed as (Mac/PC) Compressed as (Mobile) ",58],["MPEG(1/2/3) Ogg Vorbis MP3 ",58],["Ogg Vorbis Ogg Vorbis MP3 ",58],["WAV Ogg Vorbis MP3 ",58],["AIFF Ogg Vorbis MP3 ",58],["MOD - - ",58],["IT - - ",58],["S3M - - ",58],["XM - - ",58],["See the Audio Overview for more information on using sound in Unity.",58],["Audio Mixer",59],["The Unity Audio Mixer allows you to mix various audio source, apply effects to them, and perform mastering.",59],["Audio Mixer Window",59],["The window displays the Audio Mixer which is basically a tree of Audio Mixer Groups.  An Audio Mixer group is essentially a mix of audio, a signal chain which allows you to apply volume attenuation and pitch correction; it allows you to insert effects that process the audio signal and change the parameters of the effects.  There is also a send and return mechanism to pass the results from one bus to another.",59],["An Audio Mixer is an asset.  You can create one or more Audio Mixer and have more than one active at a any time. An Audio Mixer always contains a master group.  Other groups can then be added to define the structure of the mixer.",59],["How it works",59],["You route the output of an Audio Source to a group within an Audio Mixer.  The effects will then be applied to that signal.",59],["The output of an Audio Mixer can be routed into any other group in any other Audio Mixer in a scene enabling you to chain up a number of Audio Mixers in a scene to produce complex routing, effect processing and snapshot applying.",59],["Snapshots",59],["You can capture the settings of all the parameters in a group as a snapshot.  If you create a list of snapshots you can then transition between them in gameplay to create different moods or themes.",59],["Ducking",59],["Ducking allows you to alter the effect of one group based on what is happening in another group.  An example might be to reduce the background ambient noise while something else is happening.",59],["Views",59],["Different views can be set up.  You can disable the visibility of certain groups within a mixer and set this as a view.  You can then transition between views as required.",59],["AudioGroup Inspector",60],["Selecting an AudioGroup in the AudioGroup Hierarchy, the AudioGroup View or the Project window (as a sub-asset) will show the inspector for that AudioGroup.",60],["The inspector for the AudioGroup consists of a number of elements:",60],["Inspector Header",60],["At the top of the AudioGroup Inspector there is the name of the AudioGroup, along with with the gear dropdown menu common to all Object Inspectors.",60],["The gear menu contains the following functionality:",60],["'Copy all effect settings to all snapshots' - This lets you to copy all of the effect parameter, volume and pitch settings of this AudioGroup to all of the other snapshots present within the AudioMixer. This lets you to quickly make all snapshots 'like this one' for this AudioGroup.",60],["'Toggle CPU usage display' - This toggles CPU performance information for all of the effects present in the AudioGroup inspector. This is used to get an idea of which effects within your DSP setup are consuming the most resources.",60],["Edit in Playmode",60],["When in Playmode within Unity, the Inspector for an AudioGroup includes a button at the top called \"Edit in Playmode\". By default, the parameter values of an AudioMixer are not editable in Playmode and are fully controlled by the current snapshot within the game.",60],["Edit in Playmode allows you to override the snapshot system and start making edits to the current snapshot directly during playmode. This is a great way to mix and master a game while playing it in realtime.",60],["Pitch Slider",60],["At the top of all AudioGroup Inspectors, there is a slider that defines the pitch of playback through that AudioGroup. To change the pitch, either use the slider or enter the pitch manually into the text field to the right.",60],["Attenuation Unit",60],["Every AudioGroup within an AudioMixer has exactly 1 Attenuation Unit.",60],["The Attenuation Unit is where you can apply attenuation / gain to the audio signal passing through the AudioGroup. The attenuation is computed and applied to the signal 'at the unit' (not combined with other attenuation settings and applied at the voice source). This allows very complex and interesting setups to be created when combined with Sends / Receives and non linear DSP effects. Attenuation can be applied to -80dB (silence) and gain can be applied to +20dB.",60],["Every Attenuation Unit has a VU meter in the inspector. This meter shows the audio signal levels at that point in the signal chain (just after attenuation is applied). This means that if you have DSP effects or Receives after the Attenuation Unit, the metering information seen in the AudioGroup strip for that AudioGroup will be different to the metering information at the Attenuation Unit. This is a great way to debug the signal chain of an AudioGroup by dragging the Attenuation Unit up and down the processing chain to see the metering at different points.",60],["The VU meter shows both RMS and peak hold values.",60],["To move the Attenuation Unit (or any effect) up or down the signal chain, click on the Unit's header and drag up or down the inspector to reposition it.",60],["To change the attenuation setting, move the slider above the metering or enter in a value in the text box.",60],["Effect Units",60],["Effect Units are general DSP effects that modify the audio signal being played through the AudioGroup, for example Highpass or Reverb. Effect Units can also process side-chain signal information that is sent to it from a Send Unit. The interface for each Effect Unit is different, but for the most part expose a collection of parameters that you can modify to change how the effect is applied to the signal. For example, a Parameter EQ effect has 3 parameters that modify how the signal is processed:",60],["Unity comes with a collection of in-built effects that you can use within an AudioGroup. There is also the ability to create custom DSP effect plugins that can be used within an AudioMixer.",60],["To add an effect to the AudioGroup, click the 'Add Effect' button at the bottom of the AudioGroup Inspector.",60],["To change the ordering of the effect within the AudioGroup, left click the effect header and drag up or down to place it in a different position.",60],["To remove the effect from the AudioGroup, right click on the effect header and select 'Remove this effect'.",60],["Send Units",60],["Sends allow you to diverge the audio signal flow and send a potentially attenuated copy of the signal to be used as a side-chain within another Effect Unit, for example, a side-chain compressor. You can insert Sends anywhere in the signal chain, allowing divergence of signal at any point.",60],["Initially, when Sends are added to an AudioGroup, they do not send to anything, and the Send Level is set to 80dB. To send to another Effect Unit, you must already have an Effect Unit that can accept side-chain signals in the AudioMixer somewhere. Once the destination Effect Unit has been selected, the user needs to increase the Send Level to send signal to the destination.",60],["To add a Send to an AudioGroup, click the 'Add Effect' button at the bottom of the AudioGroup Inspector and choose 'Send'.",60],["To connect a Send to another Effect Unit (capable of receiving signal), choose the destination from the drop down menu in the Send Unit Inspector.",60],["Set the level of signal sent to the destination with \"Send Level\"",60],["Receive Units",60],["Receives are the signal sinks of Sends, they simply take the audio signal that is sent to them from Sends and mix it with the current signal passing through their AudioGroup. There are no parameters to a Receive.",60],["Duck Volume Units",60],["Duck Volume Units allow you to create side-chain compression from signal sent from Sends. Duck Volume is a great way to control the attenuation of a signal based on audio being played somewhere else in the AudioMixer.",60],["Duck Volume Units can be added like any other Effect Unit and must have signal sent to them from at least one Send to be useful.",60],["Common Options",60],["Each unit within the AudioGroup Inspector has a number of common features.",60],["Gear Options",60],["Allow Wet Mixing - Toggling this option creates a dry channel around the effect. The slider that appears when this is enabled dictates what percentage of the signal is passed into the wet/dry components. Enabling this increases memory usage and CPU overhead. This is only available on certain units.",60],["Bypass - Toggling this will bypass the Effect Unit completely, effectively disabling it in the signal chain.",60],["Copy Effect Settings to all Snapshots - Selecting this will copy all the parameter values within this Effect Unit to all the other Snapshots in the AudioMixer. This is useful when adding a new Effect Unit, making changes to that Effect Unit and wanting those settings to be the same across all Snapshots.",60],["Add Effect Before - Allows the insertion of an Effect Unit before the current Effect Unit in the AudioGroup. Select the desired effect from the menu shown.",60],["Add Effect After - Allows the insertion of an Effect Unit after the current Effect Unit in the AudioGroup. Select the desired effect from the menu shown.",60],["Remove This Effect - Remove this Effect Unit completely from the AudioMixer. Attenuation Units cannot be removed from AudioGroups.",60],["Wet Mixing",60],["Allowing Wet Mixing on a DSP effect allows you to decide how much of the audio signal that is to enter the effect actually is processed by the effect. Enabling Wet Mixing effectively creates a dry channel around the effect. You can then click on the effect slot and drag left and right to increase or decrease the percentage of audio signal that is passed through the DSP effect unit. The rest of the signal is passed through the dry channel. The following diagram illustrates this concept:",60],["Wet mixing is good for when a user wants to control the influence an effect has on the mix and preserve a percentage of the original signal.",60],["Exposed Parameters",60],["Exposed Parameters allow you to bypass the Snapshot system of an AudioMixer and set the value of any parameter within an AudioMixer from script. When an Exposed Parameter is set via script, that parameter is locked to that value and will not change as the the game transitions Snapshots.",60],["Exposing a parameter with an AudioMixer is done in the AudioGroup Inspector. For any parameter shown in the Inspector (including Pitch, Volume, Send Level and Wet Level), you can right click on the name of the Parameter and choose 'Expose X to script'.",60],["Once a parameter is exposed it will show up in the Exposed Parameter drop down in the top right corner of the AudioMixer Window. Clicking on this drop down will reveal all the Exposed Parameters in the AudioMixer.",60],["To rename an Exposed Parameter, right click on the name of the Exposed Parameter and click 'Rename'. This name will be how you reference the parameter from the AudioMixer API.",60],["To delete an Exposed Parameter, right click on the name of the Exposed Parameter and click 'Delete'.",60],["Transition Overrides",60],["When transitioning between Snapshots, by default all transitions are done with linear interpolation from the beginning to target values. In some cases this transition behaviour is not desired however, for example when it it preferable to brick-wall the change at the start or end of the transition.",60],["All of the parameters available within the AudioMixer can have their transition behaviour changed. Transition behaviours are defined per-Snapshot, with the target Snapshot defining the transition behaviour.",60],["To set the transition override for a particular parameter for the current Snapshot, right click on the parameter name and select the required transition type.",60],["Unity Native Audio Plugin SDK",61],["This document describes the built-in native audio plugin interface of Unity 5.0. We will do this by looking at some specific example plugins that grow in complexity as we move along. This way, we start out with very basic concepts and introduce more complex use-cases near the end of the document.",61],["Download",61],["First thing you need to do is to download the newest audio plugin SDK from here.",61],["Overview",61],["The native audio plugin system consists of two parts:",61],["The native DSP (Digital Signal Processing) plugin which has to be implemented as a .dll (Windows) or .dylib (OSX) in C or C++. Unlike scripts and because of the high demands on performance this has to be compiled for any platform that you want to support, possibly with platform-specific optimizations.",61],["The GUI which is developed in C#. Note that the GUI is optional, so you always start out plugin development by creating the basic native DSP plugin, and let Unity show a default slider-based UI for the parameter descriptions that the native plugin exposes. We recommend this approach to bootstrap any project.",61],["Note that you can initially prototype the C# GUI as a .cs file that you just drop into the Assets/Editor folder (just like any other editor script). Later on you can move this into a proper MonoDevelop project as your code starts to grow and need better modularization and better IDE support. This enables you to compile it into a .dll, making it easier for the user to drop into the project and also in order to protect your code.",61],["Also note that both the native DSP and GUI DLLs can contain multiple plugins and that the binding happens only through the names of the effects in the plugins regardless of what the DLL file is called.",61],["What are all these files?",61],["The native side of the plugin SDK actually only consists of one file (AudioPluginInterface.h), but to make it easy to have multiple plugin effects within the same DLL we have added supporting code to handle the effect definition and parameter registration in a simple unified way (AudioPluginUtil.h and AudioPluginUtil.cpp). Note that the NativePluginDemo project contains a number of example plugins to get you started and show a variety of different plugin types that are useful in a game context. We place this code in the public domain, so feel free to use this code as a starting point for your own creations.",61],["Development of a plugin starts with defining which parameters your plugin should have. You don't need to have a detailed master plan of all the parameters that the plugin will have laid out before you start, but it helps to roughly have an idea of how you want the user experience to be and what components you will need.",61],["The example plugins that we provide have a bunch of utility functions that make it easy",61],["Let's take a look at the \"Ring Modulator\" example plugin. This simple plugin multiplies the incoming signal by a sine wave, which gives a nice radio-noise / broken reception like effect, especially if multiple ring modulation effects with different frequencies are chained.",61],["The basic scheme for dealing with parameters in the example plugins is to define them as enum-values that we use as indices into an array of floats for both convenience and brevity.",61],["enum Param",61],["P_FREQ,",61],["P_MIX,",61],["P_NUM",61],["};",61],["int InternalRegisterEffectDefinition(UnityAudioEffectDefinition&amp; definition)",61],["int numparams = P_NUM;",61],["definition.paramdefs = new UnityAudioParameterDefinition [numparams];",61],["RegisterParameter(definition, \"Frequency\", \"Hz\",",61],["0.0f, kMaxSampleRate, 1000.0f,",61],["1.0f, 3.0f,",61],["P_FREQ);",61],["RegisterParameter(definition, \"Mix amount\", \"%\",",61],["0.0f, 1.0f, 0.5f,",61],["100.0f, 1.0f,",61],["P_MIX);",61],["return numparams;",61],["The numbers in the RegisterParameter calls are the minimum, maximum and default values followed by a scaling factor used for display only, i.e. in the case of a percentage-value the actual value goes from 0 to 1 and is scaled by 100 when displayed. There is no custom GUI code for this, but as mentioned earlier, Unity will generate a default GUI from these basic parameter definitions. Note that no checks are performed for undefined parameters, so the AudioPluginUtil system expects that all declared enum values (except P_NUM) are matched up with a corresponding parameter definition.",61],["Behind the scenes the RegisterParameter function fills out an entry in the UnityAudioParameterDefinition array of the UnityAudioEffectDefinition structure that is associated with that plugin (see \"AudioEffectPluginInterface.h\"). The rest that needs to be set up in UnityAudioEffectDefinition is the callbacks to the functions that handle instantiating the plugin (CreateCallback), setting/getting parameters (SetFloatParameterCallback/UnityAudioEffect_GetFloatParameterCallback), doing the actual processing (UnityAudioEffect_ProcessCallback) and eventually destroying the plugin instance when done (UnityAudioEffect_ReleaseCallback).",61],["To make it easy to have multiple plugins in the same DLL, each plugin is residing in its own namespace, and a specific naming convention for the callback functions is used such that the DEFINE_EFFECT and DECLARE_EFFECT macros can fill out the UnityAudioEffectDefinition  structure. Underneath the hood all the effects definitions are stored in an array to which a pointer is returned by the only entry point of the library UnityGetAudioEffectDefinitions.",61],["This is useful to know in case you want to develop bridge plugins that map from other plugin formats such as VST or AudioUnits to or from the Unity audio plugin interface, in which case you need to develop a more dynamic way to set up the parameter descriptions at load time.",61],["Instantiating the plugin",61],["The next thing is the data for the instance of the plugin. In the example plugins, we put all this into the EffectData structure. The allocation of this must happen in the corresponding CreateCallback which is called for each instance of the plugin in the mixer. In this simple example there's only one sine-wave that is multiplied to all channels, other more advanced plugins need allocate additional data per input channel.",61],["struct EffectData",61],["struct Data",61],["float p[P_NUM]; // Parameters",61],["float s;        // Sine output of oscillator",61],["float c;        // Cosine output of oscillator",61],["};",61],["union",61],["Data data;",61],["unsigned char pad[(sizeof(Data) + 15) &amp; ~15];",61],["};",61],["};",61],["Wait a minute! What's all that union and padding stuff about? Well, unless you develop your plugin for the PlayStation 3 you can ignore this and just focus on the members inside the \"Data\" structure, but in case you want to port your plugin to this platform you need to be aware that on PS3 the signal processing is happening on the SPUs and in order to transfer data back and forth between the main CPU and the SPU you need to make sure that the data is aligned to a 16 byte boundary, and thus the \"pad\" array makes sure that the total size of the EffectData structure will be a multiple of 16 even though the actual Data structure where our plugin data lives may not be divisible by 16. This restriction makes the code a little funkier to look at, but in the end the benefit is that there's only one piece of shared code to maintain on all platforms and that it's easy to port your code to the PS3 if you follow the way it's done in the examples.",61],["UNITY_AUDIODSP_RESULT UNITY_AUDIODSP_CALLBACK CreateCallback(UnityAudioEffectState* state)",61],["EffectData* effectdata = new EffectData;",61],["memset(effectdata, 0, sizeof(EffectData));",61],["effectdata->data.c = 1.0f;",61],["state->effectdata = effectdata;",61],["InitParametersFromDefinitions(",61],["InternalRegisterEffectDefinition, effectdata->data.p);",61],["return UNITY_AUDIODSP_OK;",61],["The UnityAudioEffectState contains various data from the host such as the sampling rate, the total number of samples processed (for timing), or whether the plugin is bypassed, and is passed to all callback functions.",61],["And obviously to free the plugin instance there is a corresponding function too:",61],["UNITY_AUDIODSP_RESULT UNITY_AUDIODSP_CALLBACK",61],["ReleaseCallback(UnityAudioEffectState* state)",61],["EffectData::Data* data = &amp;state->GetEffectData()->data;",61],["delete data;",61],["return UNITY_AUDIODSP_OK;",61],["The main processing of audio happens in the ProcessCallback:",61],["UNITY_AUDIODSP_RESULT UNITY_AUDIODSP_CALLBACK ProcessCallback(",61],["UnityAudioEffectState* state,",61],["float* inbuffer, float* outbuffer,",61],["unsigned int length,",61],["int inchannels, int outchannels)",61],["EffectData::Data* data = &amp;state->GetEffectData()->data;",61],["float w = 2.0f * sinf(kPI * data->p[P_FREQ] / state->samplerate);",61],["for(unsigned int n = 0; n &lt; length; n++)",61],["for(int i = 0; i &lt; outchannels; i++)",61],["outbuffer[n * outchannels + i] =",61],["inbuffer[n * outchannels + i] *",61],["(1.0f - data->p[P_MIX] + data->p[P_MIX] * data->s);",61],["data->s += data->c * w; // cheap way to calculate a sine-wave",61],["data->c -= data->s * w;",61],["return UNITY_AUDIODSP_OK;",61],["We've stripped the PS3-specific parts from this function in this listing. The GetEffectData function at the top is just a helper function casting the effectdata field of the state variable to the EffectData::Data in the structure we declared above.",61],["Other simple plugins included are the NoiseBox plugin, which adds and multiplies the input signal by white noise at variable frequencies, or the Lofinator plugin, which does simple downsampling and quantization of the signal. All of these may be used in combination and with game-driven animated parameters to simulate anything from mobile phones to bad radio reception on walkies, broken loudspeakers etc.",61],["The StereoWidener, which decomposes a stereo input signal into mono and side components with variable delay and then recombines these to increase the perceived stereo effect.",61],["Which plugin to load on which platform?",61],["Native audio plugins use the same scheme as other native or managed plugins in that they must be associated with their respective platforms via the plugin importer inspector. You can read more about the subfolders in which to place plugins here. The platform association is necessary so that the system knows which plugins to include on a each build target in the standalone builds, and with the introduction of 64-bit support this even has to be specified within a platform. OSX plugins are special in this regard since the Universal Binary format allows them to contain both 32 and 64 bit variants in the same bundle.",61],["Native plugins in Unity that are called from managed code get loaded via the [DllImport] attribute referencing the function to be imported from the native DLL. However, in the case of native audio plugins things are different. The special problem that arises here is that the audio plugins need to be loaded before Unity starts creating any mixer assets that may need effects from the plugins. In the editor this is no problem, because we can just reload and rebuild the mixers that depend on plugins, but in standalone builds the plugins must be loaded before we create the mixer assets. To solve this, the current convention is to prefix the DLL of the plugin \"audioplugin\" (case insensitive) so that the system can detect this and add it to a list of plugins that will automatically be loaded at start. Remember that it's only the definitions inside the plugin that define the names of the effects that show up inside Unity's mixer, so the DLL can be called anything, but it needs to start with the string \"audioplugin\" to be detected as such.",61],["For platforms such as IOS the plugin code needs to be statically linked into the Unity binary produced by the generated XCode project and there - just like plugin rendering devices - the plugin registration has to be added explicitly to the startup code of the app.",61],["On OSX one bundle can contain both the 32- and 64 bit version of the plugin. You can also split them to save size.",61],["Plugins with custom GUIs",61],["Now let's look at something a little more advanced: Effects for equalization and multiband compression. Such plugins have a much higher number of parameters than the simple plugins presented in the previous section and also there is some physical coupling between parameters that require a better way to visualize the parameters than just a bunch of simple sliders. Consider an equalizer for instance: Each band has 3 different filters that collectively contribute to the final equalization curve and each of these filters has the 3 parameters frequency, Q-factor and gain which are physically linked and define the shape of each filter. So it helps the user a lot, if an equalizer plugin has a nice big display showing the resulting curve, the individual filter contributions and can be operated in such a way that multiple parameters can be set simultaneously by simple dragging operations on the control instead of changing sliders one at a time.",61],["Custom GUI of the Equalizer plugin. Drag the three bands to change the gains and frequencies of the filter curve. Hold shift down while dragging to change the shape of each band.",61],["So once again, the definition, initialization, deinitialization and parameter handling follows the exact same enum-based method that the simple plugins use, and even the ProcessCallback code is rather short. Well, time to stop looking at the native code and open the AudioPluginDemoGUI.sln project in MonoDevelop. Here you will find the associated C# classes for the GUI code. The way it works is simple: Once Unity has loaded the native plugin DLLs and registered the contained audio plugins, it will start looking for corresponding GUIs that match the names of the registered plugins. This happens through the Name property of the EqualizerCustomGUI class which, like all custom plugin GUIs, must inherit from IAudioEffectPluginGUI. There's only one important function inside this class which is the bool OnGUI(IAudioEffectPlugin plugin) function. Via the IAudioEffectPlugin plugin argument this function gets a handle to the native plugin that it can use to read and write the parameters that the native plugin has defined. So to read a parameter it calls:",61],["plugin.GetFloatParameter(\"MasterGain\", out masterGain);",61],["which returns true if the parameter was found, and to set it, it calls:",61],["plugin.SetFloatParameter(\"MasterGain\", masterGain);",61],["which also returns true if the parameter exists. And that's basically the most important binding between GUI and native code. You can also use the function",61],["plugin.GetFloatParameterInfo(\"NAME\", out minVal, out maxVal, out defVal);",61],["to query parameter \"NAME\" for it's minimum, maximum and default values to avoid duplicate definitions of these in the native and UI code. Note that if your OnGUI function return true, the Inspector will show the default UI sliders below the custom GUI. This is again useful to bootstrap your GUI development as you have all the parameters available while developing your custom GUI and have an easy way to check that the right actions performed on it result in the expected parameter changes.",61],["We won't discuss the details about the DSP processing that is going on in the Equalizer and Multiband plugins here, for those interested, the filters are taken from Robert Bristow Johnson's excellent Audio EQ Cookbook and to plot the curves Unity provides some internal API functions to draw antialiased curves for the frequency response.",61],["One more thing to mention though is that both the Equalizer and Multiband plugins do also provide code to overlay the input and output spectra to visualize the effect of the plugins, which brings up an interesting point: The GUI code runs at much lower update rate (the frame rate) than the audio processing and doesn't have access to the audio streams, so how do we read this data? For this, there is a special function for this in the native code:",61],["UNITY_AUDIODSP_RESULT UNITY_AUDIODSP_CALLBACK GetFloatParameterCallback(",61],["UnityAudioEffectState* state,",61],["int index,",61],["float* value,",61],["char *valuestr)",61],["EffectData::Data* data = &amp;state->GetEffectData()->data;",61],["if(index >= P_NUM)",61],["return UNITY_AUDIODSP_ERR_UNSUPPORTED;",61],["if(value != NULL)",61],["value = data->p[index];",61],["if(valuestr != NULL)",61],["valuestr[0] = 0;",61],["return UNITY_AUDIODSP_OK;",61],["It simply enables reading an array of floating-point data from the native plugin. Whatever that data is, the plugin system doesn't care about, as long as the request doesn't massively slow down the UI or the native code. For the Equalizer and Multiband code there is a utility class called FFTAnalyzer which makes it easy to feed in input and output data from the plugin and get a spectrum back. This spectrum data is then resampled by GetFloatBufferCallback and handed to the C# UI code. The reason that the data needs to be resampled is that the FFTAnalyzer runs the analysis at a fixed frequency resolution while GetFloatBufferCallback just returns the number of samples requested, which is determined by the width of the view that is displaying the data. For a very simple plugin that has a minimal amount of DSP code you might also take a look at the CorrelationMeter plugin, which simply plots the amplitude of the left channel against the amplitude of the right channel in order to show \"how stereo\" the signal is.",61],["Left: Custom GUI of the CorrelationMeter plugin.",61],["Right: Equalizer GUI with overlaid spectrum analysis (green curve is source, red is processed).",61],["At this point we would also like to point out that both the Equalizer and Multiband effects are kept intentionally simple and unoptimized, but we think they serve as good examples of more complex UIs that are supported by the plugin system. There's obviously a lot of work still in doing the relevant platform-specific optimizations, tons of parameter tweaking to make it fell really right and respond in the most musical way etc. etc… We might also implement some of these effects as built-in plugins in Unity at some point simply for the convenience of increasing Unity's standard repertoire of plugins, but we sincerely hope that the reader will also take up the challenge to make some really awesome plugins -- and who knows, they might at some point end up as built-in plugins. ;-)",61],["Convolution reverb example plugin. The impulse response is decaying random noise,",61],["defined by the parameters. This is only for demonstration purposes, as a production plugin",61],["should allow the user to load arbitrary recorded impulses, the underlying convolution algorithm",61],["remains the same nevertheless.",61],["Example of a loudness monitoring tool measuring levels at 3 different time scales.",61],["Also just for demonstration purposes, but a good place to start building a monitor tool that",61],["conforms to modern loudness standardizations. The curve rendering code is built into Unity.",61],["Synchronizing to the DSP clock",61],["Time for some fun exercises. Why not use the plugin system to generate sound instead of just processing it? Let's try to do some simple bassline and drum synthesizers that should be familiar to people who listen to acid trance -- some simple clones of some of the main synths that defined this genre. Take a look at Plugin_TeeBee.cpp and Plugin_TeeDee.cpp. These simple synths just generate patterns with random notes and have some parameters for tweaking the filters, envelopes and so forth in the synthesis engine. Again, we won't discuss those details here, but just point out that the state->dsptick parameter is read in the ProcessCallback in order to determine the position in the \"song\". This counter is a global sample position, so we just divide it by the length of each note specified in samples and fire a note event to the synthesis engine whenever this division has a zero remainder. This way, all plugin effects stay in sync to the same sample-based clock, and if you would for instance play a prerecorded piece of music with a known tempo through such an effect, you could use the timing info to apply tempo-synchronized filter effects or delays on the music.",61],["Outlook",61],["This is just the start of an effort to open up parts of the sound system to high performance native code. We have plans to integrate this in other parts of Unity as well to make the effects usable outside of the mixer as well as extending the SDK to support other parameter types than floats with support for better default GUIs as well as storage of binary data.",61],["Have a lot of fun creating your own plugins. Hope to see them on the asset store. ;-)",61],["An overview of the concepts and AudioMixer",62],["The AudioMixer is an Asset that can be referenced by AudioSources to provide more complex routing and mixing of the audio signal generated from AudioSources. It does this category based mixing via the AudioGroup hierarchy that is constructed by the user inside the Asset.",62],["DSP effects and other audio mastering concepts can be applied to the audio signal as it is routed from the AudioSource to the AudioListener.",62],["AudioMixer View",62],["The Asset - Containing all AudioGroups and AudioSnapshots as sub-assets.",62],["The Hierarchy view - This contains the entire mixing hierarchy of AudioGroups within the AudioMixer.",62],["The Mixer Views - This is a list of cached visibility settings of the mixer. Each view only shows a sub-set of the entire hierarchy in the main mixer window.",62],["Snapshots - This is a list of all the AudioSnapshots within the AudioMixer Asset. Snapshots capture the state of all the parameter settings within an AudioMixer, and can be transitioned between at runtime.",62],["The Output AudioMixer - AudioMixers can be routed into AudioGroups of other AudioMixers. This property field allows one to define the output AudioGroup to route this AudioMixer signal into.",62],["AudioGroup Strip View - This shows an overview of an AudioGroup, including the current VU levels, attenuation (volume) settings, Mute, Solo and Effect Bypass settings and the list of DSP effects within the AudioGroup.",62],["Edit In Play Mode - This is a toggle that allows you to edit the AudioMixer during play mode, or prevent edits and allow the game runtime to control the state of the AudioMixer.",62],["Exposed Parameters - This shows a list of Exposed Parameters (any parameter within an AudioMixer can be exposed to script via a string name) and corresponding string names.",62],["AudioMixer Inspector",62],["The Pitch and Ducking settings are present at the top of all AudioGroups.",62],["An example Send Effect, positioned before where the attenuation is applied.",62],["The Attenuation (volume setting) is done here for an AudioGroup. The Attenuation can be applied anywhere in the effect stack. The VU meter here shows the volume levels at that point in the effect stack (different from the VU meters shown in the AudioMixer view which show the levels of the signal as it leaves the AudioGroup.",62],["An example effect with parameters, in this case a Reverb. Parameters can be exposed by right clicking on them and choosing to expose them.",62],["An example plugin effect with a custom UI implemented.",62],["Concepts",62],["Routing and Mixing",62],["Audio routing is the process of taking a number of input audio signals and outputting 1 or more output signals. The term signal here refers to a continuous stream of digital audio data, which can be broken down into digital audio channels (such as stereo or 5.1 (6 channels)).",62],["Internally there is usually some work on these signals being done, such as mixing, applying effects, attenuation etc. For various reasons that will be covered, this is an important aspect of audio processing and this is what the AudioMixer is designed to allow you to do.",62],["With the exception of Sends and Returns (which will be covered later), the AudioMixer contains AudioGroups that allow any number of input signals, mix those signals and have exactly 1 output.",62],["In the land of audio processing, this routing and mixing is usually done ORTHOGONAL to the scene graph hierarchy, as audio behaves and designers interact with audio very differently to objects and concepts shown in the scene.",62],["In previous versions of Unity, the concept of routing and mixing was not available. Users were able to place AudioSources within the scene, and the audio signal that they produced (via AudioClips for example) was routed directly to the AudioListener, where all the audio signals were mixed together at one point. Remember here that this is happening orthogonal to the scene graph and no matter where your AudioSources are in the scene,",62],["AudioMixers now sit between the AudioSource and the AudioListener in the audio signal processing space and allow you to take the output signal from the AudioSource perform whatever routing and mixing operations they wish until finally all audio is output to the AudioListener and is heard from the speakers.",62],["Why do any of this stuff?",62],["Mixing and routing allows you to categorise the audio within their game into whatever concepts they desire. Once sound is mixed together into these categories, effects and other operations can be applied to these categories as a whole. This is powerful not only applying game logic changes to the various sound categories, but also for allowing designers to tweak the various aspects of the mix to perform whats knows as \"Mastering\" of the entire soundscape dynamically at runtime.",62],["Relation to 3D spatial attenuation",62],["Some sound concepts are related to the scene graph and the 3D world. The most obvious of those is the application of attenuation based on 3D distance, relative speed to the AudioListener and environmental Reverb effects.",62],["As these operations are related to the scene and not to the categories of sounds in an AudioMixer, the effects are applied at the AudioSource, before the signal enters an AudioMixer. For example, the attenuation applied to an AudioSource based on its distance from the AudioListener is applied to the signal before it leaves the AudioSource and is routed into an AudioMixer.",62],["Sound Categories",62],["As stated above, AudioMixers allow you to effectively categorise types of sounds and do stuff to these categories. This is an important concept, because without such categorisations, the entire soundscape quickly becomes a mess of indistinguishable noise as every sound is played back equally and without any mixing applied to them. With concepts such as ducking, categories of sounds can also influence each other, adding additional richness to the mix.",62],["Examples of operations that designers might want to do on a category are;",62],["Apply attenuation to a group of ambiences.",62],["Trigger a lowpass filter on all the foley sounds in a game, simulating being underwater.",62],["Attenuate all sounds in the game except the Menu music and interaction sounds.",62],["Reduce the volume of all the gun and explosion sounds in a game to ensure that an NPC talking to you can be heard.",62],["etc...",62],["These categories are really quite game specific and vary between different projects, but an example of such categorisation might be described as follows;",62],["All sounds are routed into the \"Master\" AudioGroup",62],["Into the Master group, there is a category for Music, Menu sounds and all game sounds",62],["The game sounds group is broken down into dialog from NPCs, environmental sounds from ambiences and other foley sounds like gunshots and footsteps",62],["These categories are broken further down as required",62],["The category hierarchy of this layout would look something like this:",62],["Note that the scene graph layout would look nothing like the layout for sound categories.",62],["Moods and Themes of the Mix",62],["Mixing and routing of the games sounds can also be used to create the immersion the designer is looking for. For example, reverb can be applied to all of the game sounds and the music attenuated to create the feeling of being in a cave.",62],["The AudioMixer can be used effectively to create moods within the game. Using concepts such as snapshots (explained later) and other different mixers within a game, the game can transition its mood easily and emote the player into feeling what the designer wishes, which is super powerful in the immersion of the game.",62],["The Global Mix",62],["The AudioMixer is used to control the overall mix of all the sounds within a game. These AudioMixers control the global mix and can be seen as the static singleton mix that sound instances are routed through.",62],["In other worlds, the AudioMixers are always present through the lifetime of a scene, and sound instances are created and destroyed as the game progresses and play through these global AudioMixers.",62],["Snapshots",62],["Snapshots allow you to capture the state of an AudioMixer, and transition between these different states as the game progresses. This is a great way to define moods or themes of the mix and have those moods change as the player progresses through the game.",62],["Snapshots capture the values of all of the parameters within the AudioMixer;",62],["Volume",62],["Pitch",62],["Send Level",62],["Wet Mix Level",62],["Effect Parameters",62],["Combining Snapshots with game logic is a great way to change many aspects of the soundscape.",62],["Side Chaining",62],["Signal Divergence, Sends/Returns/Effects that take a side chain...",62],["Specifics on the AudioMixer window",63],["Mixers Panel",63],["The Mixers Panel shows a complete list of all AudioMixers within the project. AudioMixers can be quickly switched between by selecting them within this panel. Routing one AudioMixer into the AudioGroup of another AudioMixer is also performed within this panel.",63],["You can also create new AudioMixers in the project my clicking the '+' icon in the top right of the panel.",63],["Routing AudioMixers into other AudioMixers",63],["Unity supports having multiple AudioMixers used within a scene at once. By default, each AudioMixer outputs the audio signal directly to the AudioListener.",63],["Developers can also choose to route the audio output of an AudioMixer into an AudioGroup of another AudioMixer. This allows for flexible and dynamic routing hierarchies at game runtime.",63],["Routing an AudioMixer into another AudioGroup can be achieved two ways, firstly in the editor within the Mixers Panel, and the other dynamically at runtime using the AudioMixer API.",63],["To change the output of an AudioMixer within the editor, simply click on an AudioMixer within the Mixers Panel and drag it over the top of another AudioMixer.",63],["You will be presented with a dialog allowing you to select the AudioGroup of the target AudioMixer you would like to route into.",63],["Once you select an output AudioGroup, the panel will show the parenting relationship of the AudioMixers. It will also show the target AudioGroup next to the AudioMixers name.",63],["Hierarchy Panel",63],["The hierarchy view is where you define the sound categories of an AudioMixer and the mixing structure. As described above, it allows you to define your own custom categories that AudioSources can connect to and play through.",63],["Adding and Configuring AudioGroups within the Hierarchy",63],["Adding and modifying the topology of an AudioMixer is done within the AudioGroup Hierarchy Panel.",63],["Adding a new AudioGroup to the hierarchy can be done in 2 ways;",63],["Right clicking on an existing AudioGroup (there must be at least one in an AudioMixer) and selecting 'Add child group' or 'Add sibling group'.",63],["Selecting an AudioGroup that you would like to add a child to and clicking the '+' icon in the top right of the panel. This will add a new group to the AudioMixer under the selected one.",63],["Changing the topology of an AudioMixer can be done by clicking an AudioGroup within the panel and dragging it over the top of another AudioGroup, this will parent the target AudioGroup above the one selected.",63],["Deleting an AudioGroup (including its children) is achieved 2 ways;",63],["By selecting the group you would like to delete and pressing the Delete key.",63],["By right clicking the group you would like to delete and selecting the \"Remove Group (and children)\" option.",63],["To duplicate an AudioGroup (and make it a sibling), right click the AudioGroup you wish to duplicate and select \"Duplicate Group (and children)\". This will duplicate the group and child groups exactly, including effects contained within the groups.",63],["To rename an AudioGroup, right click on the group and select \"Rename\".",63],["AudioGroup View",63],["The AudioGroup View shows a flat arrangement of the AudioGroups in the AudioMixer. This arrangement is organised horizontally within the view. The groups shown within the AudioGroup View are dictated by the current View selection (covered later).",63],["Each AudioGroup within the view is represented as a vertical “strip”. The layout and look and feel of the strip is common to Digital Audio Workstations and other audio editing packages. This layout is chosen to facilitate the transition of Audio Engineers from a music and video background, as well as serve as a parallel for audio hardware integration.",63],["The strip is made up of title bar, followed by a vertical VU meter which represents the current audio levels through that AudioGroup. Beside the VU meter is a volume selector which allows you to input the AudioGroups attenuation along the same scale as the VU meter, which is represented in dB levels.",63],["Below the VU meter are 3 buttons with the following functionality:",63],["Solo - This toggle will enable you to switch between hearing the entire mix or only the AudioSources that are playing into children of the AudioGroup being Soloed.",63],["Mute - This toggle allows you to switch between including the current AudioGroup in the audible mix or excluding it from being heard in the global mix.",63],["Bypass - This toggle allows you to bypass or enable all the effects present within the AudioGroup.",63],["The AudioGroup also contains a list of DSP Effect Units and the Attenuation Unity within the AudioGroup. The attenuation can be applied anywhere within the Effect Unit chain within an AudioGroup and allows you to decide exactly where you would like the volume adjustment to be applied. This is useful for non-linear effects and Send and Receive Units (covered later).",63],["Each Effect Unit slot has the following functionality:",63],["It shows the name of the Effect Unit that is being applied",63],["It shows a circle on the left hand side of the effect that can be toggled to enable or bypass that individual effect.",63],["If you right click the effect and select “Allow Wet Mixing”, the coloured bar on the bottom of the effect slow becomes active, and denotes the amount of wet signal that is being passed through the effect.",63],["Effects can be dragged up and down the AudioGroup to refine their order and also across AudioGroups to move the effect to another AudioGroup.",63],["You can also add new Effect Units by right clicking on an existing effect to add before or after it, or by clicking the “Add..” button at the bottom of the strip.",63],["Snapshot Panel",63],["The Snapshot Panel allows you to create, switch between and tweak different Snapshots within the AudioMixer. There is always at least one snapshot active, and selection of a snapshot within the Snapshot Panel indicates that further edits of the AudioMixer are edits to that snapshot.",63],["Snapshots defined in the Snapshot Panel also show up as sub-assets of the AudioMixer. This allows you to access the snapshots elsewhere in the editor and within scripts.",63],["You also define a 'Start Snapshot' (indicated by the star icon on the right hand side of the snapshot list). The Start Snapshot is the snapshot that the AudioMixer will be initialised to when loaded (for example, when the scene starts)",63],["To create a new Snapshot, click the small '+' icon at the top right of the panel. Enter in a name for the new snapshot.",63],["To define a different Start Snapshot, right click on the desired Snapshot and choose \"Set as Start Snapshot\".",63],["Views Panel",63],["Views allow you to create groups of visible AudioGroups in the AudioMixer. With views, you can create perspectives of interest into the AudioMixer, instead of always being presented with the full hierarchy at all times. Views are purely for workflow optimisation purposes are do not affect runtime setup or performance.",63],["Like the Snapshot Panel, there is always one view selected and currently shown in the AudioGroup View. By default, all AudioGroups are visible in the default view. What is contained within a view is controlled by the Eye Icons in the Hierarchy Panel (see above).",63],["To add a new view to the list of views, click the small '+' icon at the top right of the Views Panel. Enter a name for the new view.",63],["Change the current view by selecting between the list of views in the View Panel.",63],["To remove a view, right click on the view and select 'Delete'",63],["To Duplicate a view (with all of the current view settings, right click on the view and select 'Duplicate'",63],["The 'Eye' Icon of an AudioGroup",63],["Each AudioGroup within the hierarchy panel has a small eye icon to the left of the group. This icon serves 2 purposes;",63],["Clicking on the eye icon toggles this AudioGroup's visibility in the currently selected View.",63],["Right clicking on the eye icon allows you to select from a range of colours to tag this AudioGroup with. Selecting a colour other than \"No Colour\" will give a small colour tag to the left of the eye icon as well as a colour tag under the AudioGroup's name in the AudioGroup view. These colour indicators are a great way to visually group different concepts and collections of AudioGroups within the AudioMixer.",63],["Overview of Usage and API",64],["The AudioMixer is a very self contain asset with a streamlined API.",64],["Using the Snapshot and AudioGroup objects",64],["Transitioning Snapshots",64],["Blending Snapshot states",64],["Finding Groups",64],["Re-routing at Runtime",64],["Example Usages",64],["Audio Overview",65],["A game would be incomplete without some kind of audio, be it background music or sound effects. Unity's audio system is flexible and powerful. It can import most standard audio file formats and has sophisticated features for playing sounds in 3D space, optionally with effects like echo and filtering applied. Unity can also record audio from any available microphone on a user's machine for use during gameplay or for storage and transmission.",65],["Basic Theory",65],["In real life, sounds are emitted by objects and heard by listeners. The way a sound is perceived depends on a number of factors. A listener can tell roughly which direction a sound is coming from and may also get some sense of its distance from its loudness and quality. A fast-moving sound source (like a falling bomb or a passing police car) will change in pitch as it moves as a result of the Doppler Effect. Also, the surroundings will affect the way sound is reflected, so a voice inside a cave will have an echo but the same voice in the open air will not.",65],["To simulate the effects of position, Unity requires sounds to originate from Audio Sources attached to objects. The sounds emitted are then picked up by an Audio Listener attached to another object, most often the main camera. Unity can then simulate the effects of a source's distance and position from the listener object and play them to the user accordingly. The relative speed of the source and listener objects can also be used to simulate the Doppler Effect for added realism.",65],["Unity can't calculate echoes purely from scene geometry but you can simulate them by adding Audio Filters to objects. For example, you could apply the Echo filter to a sound that is supposed to be coming from inside a cave. In situations where objects can move in and out of a place with a strong echo, you can add a Reverb Zone to the scene. For example, your game might involve cars driving through a tunnel. If you place a reverb zone inside the tunnel then the cars' engine sounds will start to echo as they enter and the echo will die down as they emerge from the other side.",65],["The Unity Audio Mixer allows you to mix various audio sources, apply effects to them, and perform mastering.",65],["The manual pages for Audio Source, Audio Listener, Audio Mixer, the audio effects and Reverb Zones give more information about the many options and parameters available for getting effects just right.",65],["Working with Audio Assets",65],["Unity can import audio files in AIFF, WAV, MP3 and Ogg formats in the same way as other assets, simply by dragging the files into the Project panel. Importing an audio file creates an Audio Clip which can then be dragged to an Audio Source or used from a script. The Audio Clip reference page has more details about the import options available for audio files.",65],["For music, Unity also supports tracker modules, which use short audio samples as \"instruments\" that are then arranged to play tunes. Tracker modules can be imported from .xm, .mod, .it, and .s3m files but are otherwise used in much the same way as ordinary audio clips.",65],["Audio Recording",65],["Unity can access the computer's microphones from a script and create Audio Clips by direct recording. The Microphone class provides a straightforward API to find available microphones, query their capabilities and start and end a recording session. The script reference page for Microphone has further information and code samples for audio recording.",65],["Working with humanoid animations",66],["The Mecanim Animation System is particularly well suited for working with animations for humanoid skeletons. Since humanoid skeletons are used extensively in games, Unity provides a specialized workflow, and an extended tool set for humanoid animations.",66],["Because of the similarity in bone structure, it is possible to map animations from one humanoid skeleton to another, allowing retargeting and inverse kinematics.",66],["With rare exceptions, humanoid models can be expected to have the same basic structure, representing the major articulate parts of the body, head and limbs. The Mecanim system makes good use of this idea to simplify the rigging and control of animations. A fundamental step in creating a animation is to set up a mapping between the simplified humanoid bone structure understood by Mecanim and the actual bones present in the skeleton; in Mecanim terminology, this mapping is called an Avatar. The pages in this section explain how to create an Avatar for your model.",66],["BlackBerry 10 Controller",67],["Blackberry 10 supports a variety of bluetooth controllers. The buttons and joysticks they support are mapped to the Input class in the usual manner. For the SteelSeries Free mobile wireless controller the assignment on buttons/axes to KeyCode and axis numbers are shown in the table below.",67],["",67],["No. Button Name KeyCode Axis# Comments ",67],["1 4 JoystickButton0 N/A  ",67],["2 3 JoystickButton1 N/A  ",67],["3 1 JoystickButton2 N/A  ",67],["4 2 JoystickButton3 N/A  ",67],["5 Left Stick JoystickButton8 Axis 1 (X) - Horizontal, Axis 2 (Y) - Vertical Range [-1; 1] ",67],["6 Right Stick JoystickButton9 Axis 4 - Horizontal, Axis 5 - Vertical Range [-1; 1] ",67],["7 Dpad N/A Axis 6 - Horizontal, Axis 7 - Vertical Set{-1;0;1} ",67],["11 A JoystickButton6 N/A  ",67],["12 B JoystickButton7 N/A  ",67],["13 Left Bumper JoystickButton4 N/A  ",67],["14 Right Bumper JoystickButton5 N/A  ",67],["Debugging on Blackberry10",68],["When the game runs on device it will write a log file. This is where your Debug.Log messages will go, together with any asserts, information and error messages from Unity. You can fetch this log from the device from the editor. Use Edit-&gt;Project Settings-&gt;Player-&gt;Publishing Settings-&gt;Get Log. The log can be written to the hard drive of your computer. An example log file is:",68],["Set current directory to /accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc",68],["Found path: /accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc/com.unity.doc.testDev_ProductName5a2477fc",68],["Data folder: /accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc/app/native/Data",68],["Loading in pref's!",68],["Mono path[0] = '/accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc/app/native/Data/Managed'",68],["Mono config path = '/accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc/app/native/Data/Managed'",68],["Renderer: Adreno (TM) 225",68],["Vendor: Qualcomm",68],["Version: OpenGL ES 2.0 2644020",68],["GL_AMD_compressed_ATC_texture GL_AMD_performance_monitor GL_AMD_program_binary_Z400 GL_EXT_robustness GL_EXT_texture_format_BGRA8888",68],["GL_EXT_texture_type_2_10_10_10_REV GL_NV_fence GL_OES_compressed_ETC1_RGB8_texture GL_OES_depth_texture GL_OES_depth24 GL_OES_EGL_image",68],["GL_OES_EGL_image_external GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_fragment_precision_high GL_OES_get_program_binary",68],["GL_OES_packed_depth_stencil GL_OES_rgb8_rgba8 GL_OES_standard_derivatives GL_OES_texture_3D GL_OES_texture_float GL_OES_texture_half_float",68],["GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_half_float GL_OES_vertex_type_10_10_10_2 GL_OES_vertex_array_object",68],["GL_QCOM_alpha_test GL_QCOM_binning_control GL_QCOM_driver_control GL_QCOM_perfmon_global_mode GL_QCOM_extended_get GL_QCOM_extended_get2",68],["GL_QCOM_tiled_rendering GL_QCOM_writeonly_rendering GL_AMD_compressed_3DC_texture GL_EXT_sRGB GL_EXT_texture_filter_anisotropic",68],["GL_ANGLE_framebuffer_multisample GL_ANGLE_framebuffer_blit GL_OES_mapbuffer",68],["Creating OpenGLES2.0 graphics device",68],["Initialize engine version: 4.2.0a1 (20a94a2c4d7f)",68],["Begin MonoManager ReloadAssembly",68],["Platform assembly: /accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc/app/native/Data/Managed/UnityEngine.dll (this message is harmless)",68],["Loading /accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc/app/native/Data/Managed/UnityEngine.dll into Unity Child Domain",68],["Platform assembly: /accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc/app/native/Data/Managed/Assembly-CSharp.dll (this message is harmless)",68],["Loading /accounts/1000/appdata/com.unity.doc.testDev_ProductName5a2477fc/app/native/Data/Managed/Assembly-CSharp.dll into Unity Child Domain",68],["\nCompleted reload, in 0.129 seconds\n",68],["Blackberry10 Details",69],["Player Settings",69],["The BlackBerry tab in the Player Settings (menu: Edit &gt; Project Settings &gt; Player) provides settings which can be configured for your application.",69],["Microphone is NOT enabled on BlackBerry (retained in the UI as it is a common feature among mobile devices).",69],["Touch",69],["On Blackberry10 Touch events are handled just like other mobile platforms. Note however that the touch area on the Z10 is larger than the screen area. This means the returned finger position can be off the edge of the screen, with values negative, and/or greater than the screen width and/or height.",69],["Blackberry10 FAQ",70],["What GPU does the Z10 have?",70],["There are four models of the Z10, one with a PowerVR GPU and three with an Adreno GPU. Note that these have different proprietary texture formats. (See below). The following table shows the models:",70],["Model CPU GPU Nickname ",70],["STL100-1 TI OMAP 4470 PowerVR SGX 544 London ",70],["STL100-2 Qualcomm Snapdragon S4 MSM8960 Adreno 225 Lisben ",70],["STL100-3 Qualcomm Snapdragon S4 MSM8960 Adreno 225 Lisben ",70],["STL100-4 Qualcomm Snapdragon S4 MSM8960 Adreno 225 Lisben ",70],["Note that the CPU and GPU is written to the log that is created when the app runs on the device:",70],["Renderer: Adreno (TM) 225",70],["Vendor: Qualcomm",70],["Note that you can determine the model number using System Settings-&gt;About on the device.",70],["What is the differences between the two 'Build Types' available (Debug and Submission)?",70],["The Debug build type uses BlackBerrys sandbox mode and is the best choice to be used during development. The file created is still protected and requires a debug token provided by you to run but is not signed like a submission bar. The sandbox environment allows for debugging such as accessing logs. Additionally you have expanded write access to the filesystem in this mode. When doing final QA testing a Submission build type should be used. This build actually signs and encrypts the bar which can then be installed on any device. With the exception of limited write access this mode is identical to Debug. Note: As long as you write your files to Application.persistentDataPath you will notice no differences for write access.",70],["If I would like to use each chipsets proprietary textures (ATC and PVRTC) how do I do this but still install on all devices?",70],["In order to use both ATC and PVRTC you will need to create two bar files - each targeting the different texture compression. Once you have the two bar files you will be given the option in App World to specifically select which devices each bar will be available on:",70],["Is the simulator supported?",70],["We have not tested Unity for Blackberry 10 on the simulator.",70],["What can I do to extend battery life?",70],["If you are not using the Gyroscope, consider turning it off using:",70],["Input.gyro.enabled = false;",70],["in your game start-up code.",70],["How can I manually deploy the bar file to the device?",70],["The bar file is the executable that the Unity build system creates for you. You can use build and run to build the bar, transfer to the device, and then launch it for you. If you do not want to use build and run from the editor, you can use build to make the bar only. To transfer the bar to the device you can use a command line tool called blackberry-deploy. This tool can be found in the ../PlaybackEngines/BB10Player/blackberry-tools/bin folder in your Unity installation. Use a command line such as:",70],["./blackberry-deploy -installApp -package YourUnitySignedApp.bar -device IPaddress -password YourPassword",70],["Note that on a PC you use the blackberry-deploy.bat batch file. Full details of this command line tool, and other tools available to you are provided by BlackBerry.",70],["Does Unity Blackberry support Playbook?",70],["No, Playbook cannot be targetted using this product. Blackberry were planning on releasing an OS10.1 for Playbook, at which point it would be compatible with Unity. This OS update has been abandoned, however.",70],["How can I place my completed Unity project for sale on the BlackBerry marketplace?",70],["Full instructions can be found here.",70],["Getting Started with Blackberry 10 Development",71],["The Blackberry 10 Add-on for Unity allows you to build games and interactive media applications for Blackberry 10 devices. These devices include the Z10, Z30, Q10 and Passport products. (Blackberry Playbook does not currently support Blackberry 10 OS.) To configure Unity to build to your Blackberry 10 device read the Setup page.",71],["Plugins for Blackberry 10",72],["Basic steps",72],["Download the Desktop plugin example called 'Simplest Plugin' which you can get from here: SimplestPluginExample-4.0.zip",72],["Unzip the SimplestPluginExample and place the unzipped project somewhere accessible on your hard drive.",72],["Then Download the BlackBerry native SDK and install it by following the on screen prompts,you can find the appropriate version here: http://developer.blackberry.com/native/downloads/",72],["Once you have the SDK installed then you need to locate the file bbndk-env_10_2_0_1155.sh file (or .bat file for windows), this file might have different numbers at the end but that's not a problem.",72],["In order to set up the paths needed to build BlackBerry object and shared libraries open a terminal window and navigate to the folder which contains this file. Type the command:",72],["source bbndk-env_10_2_0_1155.sh (correct the file numbers where necessary).",72],["This will set up the paths needed to build BlackBerry object and shared libraries.",72],["",72],["Applications unity$ cd bbndk/",72],["bbndk unity$ ls",72],["bbndk-env.sh install",72],["bbndk-env_10_1_0_1020.sh licenses",72],["host_10_1_0_132 target_10_1_0_1020",72],["ide",72],["bbndk unity$ source bbndk-env_10_1_0_1020.sh",72],["",72],["Open the “Unity Project Plugin” (the project we unzipped earlier) within Unity and create the following directory path within the project panel: Assets/Plugins/BlackBerry/libs.",72],["Within a terminal window, navigate to the 'EclipsePlugin' directory within SimplestPluginExample, in this directory there should only be Plugin.cpp",72],["",72],["SimplestPluginExample unity$ cd EclipsePlugin/",72],["EclipsePlugin unity$ ls",72],["Plugin.cpp",72],["",72],["Provided you have followed the steps correctly, typing the command: which arm-arm-unknown-nto-qnx8.0.0eabi-g++, shouldn't produce any errors otherwise check you have set the paths up correctly.",72],["To create the object file, perform the following command within this terminal directory:",72],["arm-unknown-nto-qnx8.0.0eabi-g++ -fPIC -marm -shared -c Plugin.cpp",72],["You should now see the Plugin.o file within EclipsePlugin:",72],["",72],["SimplestPluginExample unity$ cd EclipsePlugin/",72],["EclipsePlugin unity$ ls",72],["Plugin.cpp Plugin.o",72],["",72],["N.B. It is important that the filename matches the name used in the dll import line from the C# script, which in this case is 'ASimplePlugin'.",72],["To create the shared library that the project uses, perform the following command:",72],["arm-unknown-nto-qnx8.0.0eabi-g++ -shared -o libASimplePlugin.so Plugin.o",72],["You should now see the libASimplePlugin.so file within EclipsePlugin:",72],["",72],["SimplestPluginExample unity$ cd EclipsePlugin/",72],["EclipsePlugin unity$ ls",72],["Plugin.cpp  Plugin.o libASimplePlugin.so",72],["",72],["Copy and paste the generated libASimplePlugin.so file into our earlier created directory SimplestPluginExample/Unity Project Plugin/Assets/Plugins/BlackBerry/libs, you can also drag the file directly into the Unity editor.",72],["Deploy the project to your BlackBerry device (provided the build and player settings have been setup) and then check the log (you can do this by accessing Player Settings and clicking 'Get Log'). It should have print statements from the C# file in the project.",72],["Setting up Unity to Build to Your Blackberry10 Device",73],["To get your first project running on your Blackberry 10 device you will need to follow these steps. Note that you will need an internet connection since Unity needs to communicate with Blackberry servers.",73],["Register with Blackberry: If you are not already registered with Blackberry you must go to https://www.blackberry.com/SignedKeys/codesigning.html and register.",73],["4.x and prior versions of Unity: Regardless of your BlackBerry SDK level, when using Unity 4.x versions be sure to choose For BlackBerry PlayBook apps or BlackBerry 10 apps developing using a 10.1 or lower SDK or BlackBerry 10 WebWorks SDK below 2.0.  You will receive one or two emails with two .csj files as attachments.",73],["5.x versions of Unity:",73],["The new single-file download process is supported in Unity 5.0. When using this version, select For BlackBerry 10 apps developed using a BlackBerry 10 SDK 10.2 or higher, or BlackBerry 10 WebWorks SDK 2.0 and higher, or any apps repackaged using the BlackBerry repackaging tools for Android version 1.6.1 or higher. These emails may take up to 2 hours to arrive. Part of the registration process involves creating a PIN. You will need this PIN in the next step.",73],["Register Machine: In the Unity editor find Player Settings -&gt; Blackberry -&gt; Publishing and select 'Register'. Fill out the window. Note that the CSJ Pin is the PIN you entered when registering with Blackberry, not the device PIN.",73],["If the log file shows errors, double-check the data you entered. The password you enter (and confirm) can be any password, and is used to control access to the machine settings. (You can use 'Restore' to restore registration from a previous backup if you already have registered in the past. If the particular machine is already registered it should be recognized).",73],["Create a backup: Use the 'Backup' button to create a backup zip file of the registration. If you fail to do this and you ever lose your registration files you will be unable to use that same account in the future.",73],["Create a debug Token: A debug token is required to deploy to any Blackberry devices. In Player Settings-&gt;BlackBerry-&gt;Publishing Settings find Debug Token. Then select Create.  Note that in Unity 5.x, an additional option Add Attached Device is present in the screenshot above.  Simply connect your device via USB, input its IP address, and press the button.  It will autodiscover your device's PIN.",73],["Specify where to save the token and specify one or more PIN(s) to use. The PIN can be found on the device under Settings-&gt;About-&gt;Hardware. Enter the PIN in the text box and then press Add. The PIN is then added to the list of PINs. Next press the Generate Token button. Unity will communicate with the Blackberry servers and then create the bar file.",73],["Enable Development Mode: Make sure the device is in Development mode under Settings -&gt; Security and Privacy -&gt; Development Mode. Take note of the IP address. (This IP address assumes a USB connection between Device and Computer - if you need to use Wifi then you can get the IP from About -&gt; Network. The phone still must be in Development Mode). This IP needs to be filled out in 'Device Address' in the Unity Editor. The 'Device Password' is the same password used to unlock the phone (the phone will force a password set when you enable development mode).",73],["Upload debug token: You can now upload token to device (but you must fill out device IP/Password first). Once the token has been uploaded to the device you are able to build and run in the usual way.",73],["Launching your game: Use File-&gt;Build settings. Switch to the Blackberry platform. Ensure that Build Type is set to Local and Development build is checked. Then click the Build and Run button. Unity will make the game for you, and deploy it to the device. The game should then start up on the device. You've now built and run your first game on your Blackberry10 device.",73],["Behind the Scenes",74],["Unity automatically imports assets and manages various kinds of additional data about them for you. Below is a description of how this process works.",74],["When you place an Asset such as a texture in the Assets folder, Unity will first detect that a new file has been added (the editor frequently checks the contents of the Assets folder against the list of assets it already knows about). Once a unique ID value has been assigned to the asset to enable it to be accessed internally, it will be imported and processed. The asset that you actually see in the Project panel is the result of that processing and its data contents will typically be different to those of the original asset. For example, a texture may be present in the Assets folder as a PNG file but will be converted to an internal format after import and processing.",74],["Using an internal format for assets allows Unity to keep additional data known as metadata which enables the asset data to be handled in a much more flexible way. For example, the Photoshop file format is convenient to work with, but you wouldn't expect it to support game engine features such as mip maps. Unity's internal format, however, can add extra functionality like this to any asset type. All metadata for assets is stored in the Library folder. As as user, you should never have to alter the Library folder manually and attempting to do so may corrupt the project.",74],["Unity allows you to create folders in the Project view to help you organize assets, and those folders will be mirrored in the actual filesystem. However, you must move the files within Unity by dragging and dropping in the Project view. If you attempt to use the filesystem/desktop to move the files then Unity will misinterpret the change (it will appear that the old asset has been deleted and a new one created in its place). This will lose information, such as links between assets and scripts in the project.",74],["When backing up a project, you should always back up the main Unity project folder, containing both the Assets and Library folders. All the information in the subfolders is crucial to the way Unity works.",74],["Storing and loading binary data in an AssetBundle",75],["The first step is to save your binary data file with the \".bytes\" extension. Unity will treat this file as a TextAsset. As a TextAsset the file can be included when you build your AssetBundle. Once you have downloaded the AssetBundle in your application and loaded the TextAsset object, you can use the .bytes property of the TextAsset to retrieve your binary data.",75],["string url = \"http://www.mywebsite.com/mygame/assetbundles/assetbundle1.unity3d\";",75],["IEnumerator Start () {",75],["// Start a download of the given URL",75],["WWW www = WWW.LoadFromCacheOrDownload (url, 1);",75],["// Wait for download to complete",75],["yield return www;",75],["// Load and retrieve the AssetBundle",75],["AssetBundle bundle = www.assetBundle;",75],["// Load the TextAsset object",75],["TextAsset txt = bundle.Load(\"myBinaryAsText\", typeof(TextAsset)) as TextAsset;",75],["// Retrieve the binary data as an array of bytes",75],["byte[] bytes = txt.bytes;",75],["Using Blender and Rigify",76],["Blender now comes with a free add-on called Rigify that provides your models with a biped rig that will work with Mecanim. This will prove very useful for new and casual game developers.",76],["This guide shows you how to get your 3D model rigged with Rigify and imported into Unity's Mecanim. Rigify generates a full rig for your model and by using the armature as a template you will be able to forge it into a nice simple rig for humanoid characters. You should start by enabling Rigify within Blender so you can use its features. From there you will import your 3d model and begin to set up your model and armature correctly to avoid any problems later down the line. Once everything is set-up you can position the bones and generate your main rig. The trickiest part is skinning the mesh to the bones you wish to use and ensuring they are parented correctly, and finally (after some testing and polishing) you can import into it into Unity.",76],["Here is what you will need:",76],["3D Humanoid Model (MakeHuman is very useful if you need help with modelling).",76],["Enable Rigify",76],["First you need to ensure that the Rigify add-on has been installed and enabled within Blender:",76],["Go to File &gt; User preferences.",76],["Select the Addons tab, and then scroll to the bottom and click the check box next to “Rigify”",76],["Click “Save as default”",76],["This activates the add-on and allows you access to the buttons and features needed. Setting it to default will include it with all your future projects.",76],["Setting up your Armature",76],["Grab a basic humanoid rig that Rigify will use as a template. This rig is very basic but it allows Rigify to build itself around the relative bone positions.",76],["Go to Add &gt; Armature (Human)",76],["Ensure both the armature and model are centred at 0,0,0",76],["If you scale or move the model make sure to reset the scale and/or translation values of both the armature and model.",76],["Go into edit mode (Press Tab)",76],["Begin positioning the bones in their respective place on the model",76],["Use “X-Ray” to allow yourself to see the bones through the model",76],["Once this is complete, go back into object mode.",76],["Move the armature to the side so it is out of the way.",76],["(If you are using Make Human, you may want to join the many different meshes into one complete mesh. Do this by selecting all the meshes and pressing CTRL + J)",76],["Generating your Rig",76],["While the armature is selected click the Object data tab on the far right.",76],["Under “Rigify Buttons” click Generate.",76],["Switch to Pose mode and do the following:",76],["Press the (A) key to select the rig and then press the (H) key to hide the unwanted layers.",76],["Shift click on the Armature layer below.",76],["This will reveal the deformation bones, the deformation bones are what you will need to skin and weight paint your mesh to.",76],["Deleting WGT bones",76],["You will notice in the top right corner in the scene's hierarchy you have many WGT-bones.",76],["As these bones will not be skinned to the mesh or used at all, we will need to delete them to avoid having unassigned meshes in our Unity project. Right click on the bone and select \"Delete\". Do this for each WGT-bone in the scene.",76],["Skinning the Rig to the Model",76],["Skin the model to the deformation bones.",76],["Before you start, make sure you are in object mode and select the mesh, then hold shift and select the rig, press Ctrl + P and select Armature deform &gt; With Automatic weights.",76],["This will assign the mesh to the bones creating vertex groups, this is what we will use for the skinning process.",76],["(If you have little or no knowledge of skinning in blender take a look at the tutorial.)",76],["Note that the deformation bones will use two bones for each of the upper and lower limbs. Do not skin to the 2nd bone and ensure they are re-parented so that Mecanim will link them up correctly.",76],["Skin your Shoulders to \"DEF-shoulder.R\" + \"DEF-shoulder.L\" and ensure their parent is \"ORG-ribs\"",76],["Skin your Upper arms to \"DEF-upper_arm.R.01\" + \"DEF-upper_arm.L.01\" and ensure their parent is \"DEF-shoulder.R\" or \"DEF-shoulder.L\" respectively.",76],["Skin your Forearms to \"DEF-forearm.R.01\" + \"DEF-forearm.L.01\" and ensure their parent is \"DEF-upper_arm.R.01\" or \"DEF-upper_arm.L.01\" respectively.",76],["Skin your thighs to DEF-thigh.R.01 + DEF-thigh.L.01 and ensure their parent bone is \"ORG-hips\".",76],["Skin your Shins to DEF-shin.R.01 + DEF-shin.L.01 and ensure their parent is \"DEF-thigh.R.01\" or \"DEF-thigh.L.01\" respectively.",76],["This will provide you with a rig that is skinned to the bones shown without an X through them. The spare bones should not be skinned to anything!",76],["Do the same thing to the hands, just remember Mecanim will only take the hand bone and three bones for each finger and thumb. This means you skin the model's hands to the bones without crosses through them as shown in the picture below.",76],["In the same way the hand must be parented to the correct bones. Skin your Hands to \"DEF-hand.R\" + \"DEF-hand.L\" and ensure their parent is \"DEF-forearm.R.01\" or \"DEF-forearm.L.01\" respectively.",76],["For each finger and thumb you will be using the following (left hand as an example):",76],["Thumb: \"DEF-thumb.01.L.02\", \"DEF-thumb.02.L\", \"DEF-thumb.03.L\"",76],["Index: \"DEF-finger_index.01.L.02\", \"DEF-finger_index.02.L\", \"DEF-finger_index.03.L\"",76],["Middle: \"DEF-finger_middle.01.L.02\", \"DEF-finger_middle.02.L\", \"DEF-finger_middle.03.L\"",76],["Ring: \"DEF-finger_ring.01.L.02\", \"DEF-finger_ring.02.L\", \"DEF-finger_ring.03.L\"",76],["Pinky: \"DEF-finger_pinky.01.L.02\", \"DEF-finger_pinky.02.L\", \"DEF-finger_pinky.03.L\"",76],["Remember that each finger bone should always be parented to the last and the first bone should be parented to the hand, providing a neat link for Mecanim to deal with.",76],["Export and Import",76],["Export the model as a .fbx and place it in a folder separate from your project. file &gt; Export &gt; AutoDesk FBX (.fbx) &gt; Export. Once this is done you can begin to import it into Unity and get it linked up to Mecanim.",76],["Open Unity and create a new project called \"Rigify Test\" once it is open, simply drag and drop your model into the project window.",76],["Select the model's prefab in the project window and click Rig in the inspector. Change Animation Type to Humanoid and click Configure.",76],["All the bones should now link up nicely into Mecanim.",76],["Ensure all bones are in the right places and that there are no errors.",76],["Animation Blend Shapes",77],["Preparing the Artwork",77],["Once you have your Blend Shapes setup in Maya:",77],["Export your selection to fbx ensuring the animation box is checked and blend Shapes under deformed models is checked.",77],["Import your fbx file into Unity (assets->import new assets->[name of file].fbx).",77],["Drag the asset into the hierarchy window. If you select your object in the hierarchy and look in the inspector, you will see your Blend Shapes are listed under the SkinnedMeshRenderer component. Here you can adjust the influence of the blend shape to the default shape, 0 means the blend shape has no influence and 100 means the blend shape has full influence.",77],["Create Animations In Unity",77],["It is also possible to use the Animation window in Unity to create a blend animation, here are the steps:",77],["Open the Animation window under Window->Animation.",77],["On the left of the window click ‘Add Curve’ and add a Blend Shape which will be under Skinned Mesh Renderer.",77],["From here you can manipulate the keyframes and Blend Weights to create the required animation.",77],["Once you are finished editing your animation you can click play in the editor window or the animation window to preview your animation.",77],["Scripting Access",77],["It’s also possible to set the blend weights through code using functions like GetBlendShapeWeight and SetBlendShapeWeight.",77],["You can also check how many blend shapes a Mesh has on it by accessing the blendShapeCount variable along with other useful functions.",77],["Here is an example of code which blends a default shape into two other Blend Shapes over time when attached to a gameobject that has 3 or more blend shapes:",77],["//Using C#",77],["using UnityEngine;",77],["using System.Collections;",77],["public class BlendShapeExample : MonoBehaviour",77],["int blendShapeCount;",77],["SkinnedMeshRenderer skinnedMeshRenderer;",77],["Mesh skinnedMesh;",77],["float blendOne = 0f;",77],["float blendTwo = 0f;",77],["float blendSpeed = 1f;",77],["bool blendOneFinished = false;",77],["void Awake ()",77],["skinnedMeshRenderer = GetComponent ();",77],["skinnedMesh = GetComponent ().sharedMesh;",77],["void Start ()",77],["blendShapeCount = skinnedMesh.blendShapeCount;",77],["void Update ()",77],["if (blendShapeCount > 2) {",77],["if (blendOne &lt; 100f) {",77],["skinnedMeshRenderer.SetBlendShapeWeight (0, blendOne);",77],["blendOne += blendSpeed;",77],["} else {",77],["blendOneFinished = true;",77],["if (blendOneFinished == true &amp;&amp; blendTwo &lt; 100f) {",77],["skinnedMeshRenderer.SetBlendShapeWeight (1, blendTwo);",77],["blendTwo += blendSpeed;",77],["1D Blending",78],["The first option in the Inspector of a Blend Node is the The Blend Type. This drop-down is used to select one of the different blend types that can blend according to one or two parameters. 1D Blending blends the child motions according to a single parameter.",78],["After setting the Blend Type, the first thing you need is to select the Animation Parameter that will control this Blend Tree. In this example, the parameter is direction which varies between -1.0 (left) and +1.0 (right), with 0.0 denoting a straight run without leaning.",78],["Then you can add individual animations by clicking the small \"+\" button and selecting Add Motion Field from the popup menu. When you're done, it should look something like this:",78],["The diagram at the top of the Inspector shows the influence of each of the child motions as the parameter varies between its minimum and maximum values. Each motion is shown as a little blue pyramid (the first and last are only shown in half), and if you click and hold down the left mouse button on one them, the corresponding motion is highlighted in the motion list below. The peak of each pyramid defines the parameter value where the motion has full influence, meaning that its animation weight is 1 and the other animations have a weight of 0. This is also called the threshold of the motion.",78],["The red vertical bar indicates the value of the Parameter. If you press Play in the Preview at the bottom of the Inspector and drag the red bar in the diagram left and right, you can see how the value of the parameter is controlling the blending of the different motions.",78],["Parameter Range",78],["The range of the parameter used by the Blend Tree is shown below the diagram as two numbers to the left and right. Either one of them can be changed by clicking on the number and dragging left or right with the mouse. Note that the values correspond to the threshold of the first and last motion in the motion list.",78],["Thresholds",78],["You can change the threshold value of a motion by clicking on its corresponding blue pyramid in the diagram and dragging it left or right. If the \"Automate Thresholds\" toggle is not enabled, you can also edit the threshold value of a motion in the motion list by typing in a number in the number field in the Threshold column.",78],["Below the motion list is the checkbox Automate Thresholds. Enabling it will distribute the thresholds of the motions evenly across the parameter range. For example, if there are five clips and the parameter ranges from -90 to +90, the thresholds will be set to -90, -45, 0, +45 and +90 in order.",78],["The Compute Thresholds drop-down will set the thresholds from data of your choice obtained from the root motions in the Animation Clips. The data that is available to choose from is speed, velocity x, y, or z, and angular speed in degrees or radians. If your parameter corresponds to one of these properties, you can compute the thresholds using the Compute Thresholds drop-down.",78],["Property: Function: ",78],["Speed Sets the threshold of each motion according to its speed (the magnitude of the velocity). ",78],["Velocity X Sets the threshold of each motion according to its velocity.x. ",78],["Velocity Y Sets the threshold of each motion according to its velocity.y. ",78],["Velocity Z Sets the threshold of each motion according to its velocity.z. ",78],["Angular Speed (Rad) Sets the threshold of each motion according to its angular speed in radians per second. ",78],["Angular Speed (Deg) Sets the threshold of each motion according to its angular speed in degrees per second. ",78],["Say, for example, you had a walk animation that covered 1.5 units per second, a jog at 2.3 units per second, and a run at 4 units per second, choosing the Speed option from the drop-down would set the parameter range and thresholds for the three animations based on these values. So, if you set the speed parameter to 3.0, it would blend the jog and run with a slight bias toward the jog.",78],["2D Blending",79],["The first option in the Inspector of a Blend Node is the Blend Type. This drop-down is used to select one of the different blend types that can blend according to one or two parameters. The 2D blending types blends the child motions according to two parameters.",79],["The different 2D Blend Types have different uses that they are suitable for. They differ in how the influence of each motion is calculated.",79],["2D Simple Directional: Best used when your motions represent different directions, such as \"walk forward\", \"walk backward\", \"walk left\", and \"walk right\", or \"aim up\", \"aim down\", \"aim left\", and \"aim right\". Optionally a single motion at position (0, 0) can be included, such as \"idle\" or \"aim straight\". In the Simple Directional type there should not be multiple motions in the same direction, such as \"walk forward\" and \"run forward\".",79],["2D Freeform Directional: This blend type is also used when your motions represent different directions, however you can have multiple motions in the same direction, for example \"walk forward\" and \"run forward\". In the Freeform Directional type the set of motions should always include a single motion at position (0, 0), such as \"idle\".",79],["2D Freeform Cartesian: Best used when your motions do not represent different directions. With Freeform Cartesian your X parameter and Y parameter can represent different concepts, such as angular speed and linear speed. An example would be motions such as \"walk forward no turn\", \"run forward no turn\", \"walk forward turn right\", \"run forward turn right\" etc.",79],["After setting the Blend Type, the first thing you need is to select the two Animation Parameters that will control this Blend Tree. In this example, the parameters are velocityX (strafing) and velocityZ (forward speed).",79],["Then you can add individual animations by clicking + -&gt; Add Motion Field to add an Animation Clip to the blend tree. When you're done, it should look something like this:",79],["The positions in 2D blending are like the thresholds in 1D blending, except that there are two values instead of one, corresponding to each of the two parameters. Their positions along the horizontal X axis correspond to the first parameter, and their positions along the vertical Y axis correspond to the second parameter. A walking forward animation might have a velocityX of 0 and a velocityZ of 1.5, so those values should be typed into the Pos X and Pos Y number fields for the motion.",79],["The 2D Blending Diagram",79],["The diagram at the top of the Inspector shows the positions of the child motions in the 2D blend space. The motions are shown as blue dots. Motions with no Animation Clip or Blend Tree assigned have no influence on the blend and are shown as gray dots. You can select a motion by clicking on its dot in the diagram. Once selected, the influence of that motion for each point in the blending space is visualized as a blue field. The field is strongest right under the position of the motion, where the motion has full influence, meaning that its animation weight is 1 and the other animations have a weight of 0. Further away the influence decreases as the influence of other motions take over.",79],["The red dot indicates the values of the two Parameters. If you press Play in the Preview at the bottom of the Inspector and drag the red dot in the diagram around, you can see how the values of the parameters are controlling the blending of the different motions. In the diagram you can also see the influence of each motion represented as circles around each motion. You will see that if you move the red dot on top of one of the blue dots representing a motion, the circle for that motion gains its maximum radius and the circles for all other motions shrink down to nothing. At positions that are in between several motions, multiple of the nearby motions will have an influence on the blend. If you select one of the motions in order to see the blue influence field of that motion, you can see that as you move the red dot around, the circle size of the motion corresponds exactly with how strong the influence field is at various positions.",79],["When no motion is selected, the diagram shows a mix of all the influence fields that is more blue where a single motion dominates and less blue where many motions contribute to the blend.",79],["Positions",79],["You can change the positions of a motion by clicking on its corresponding blue dot in the diagram and dragging it around. You can also edit position coordinates of a motion in the motion list by typing in numbers in the number fields in the Pos X and Pos Y columns.",79],["The Compute Positions drop-down will set the positions from data of your choice obtained from the root motions in the Animation Clips. The data that is available to choose from is speed, velocity x, y, or z, and angular speed in degrees or radians. If one or both of your parameters correspond to one of these properties, you can compute the Pos X and/or Pos Y using the Compute Positions drop-down.",79],["Property: Function: ",79],["Velocity XZ Sets the Pos X of each motion according to its velocity.x and the Pos Y according to its velocity.z. ",79],["Speed And Angular Speed Sets the Pos X of each motion according to its angular speed (in radians per second) and the Pos Y according to its speed. ",79],["Furthermore you can mix and match by choosing Compute Position -&gt; X Position From and/or Compute Position -&gt; Y Position From to only auto-compute one of them at a time, leaving the other unchanged.",79],["Property: Function: ",79],["Speed Sets the Pos X or Pos Y of each motion according to its speed (the magnitude of the velocity). ",79],["Velocity X Sets the Pos X or Pos Y of each motion according to its velocity.x. ",79],["Velocity Y Sets the Pos X or Pos Y of each motion according to its velocity.y. ",79],["Velocity Z Sets the Pos X or Pos Y of each motion according to its velocity.z. ",79],["Angular Speed (Rad) Sets the Pos X or Pos Y of each motion according to its angular speed in radians per second. ",79],["Angular Speed (Deg) Sets the Pos X or Pos Y of each motion according to its angular speed in degrees per second. ",79],["Say, for example, that your parameters correspond to sideways velocity and forward velocity, and that you have an idle animation with an average velocity (0, 0, 0), a walk animation with (0, 0, 1.5), and two strafe animations with velocities of (-1.5, 0, 0) and (1.5, 0, 0) respectively. Choosing the Velocity XZ option from the drop-down would set the positions of the motions according to the X and Z coordinates of those velocities.",79],["Additional Blend Tree Options",80],["The options below are common to both 1D and 2D blending.",80],["Time Scale",80],["You can alter the \"natural\" speed of the animation clips using the animation speed number fields (the columns with a clock icon at the top), so you could make the walk twice as fast by using a value of 2.0 as its speed. The Adjust Time Scale &gt; Homogeneous Speed button rescales the speeds of the clips so that they correspond with the chosen minimum and maximum values of the parameter but keep the same relative speeds they initially had.",80],["Note that the Adjust Time Scale drop-down is only available if all the motions are Animation Clips and not child Blend Trees.",80],["Mirroring",80],["You can mirror any humanoid Animation Clip in the motions list by enabling the mirror toggle at the far right. This feature enables you to use the same animation in its original form and in a mirrored version without needing twice the memory and space.",80],["Building AssetBundles in 4.x",81],["This page describes the legacy AssetBundle creation.*",81],["There are three class methods you can use to build AssetBundles:",81],["BuildPipeline.BuildAssetBundle allows you to build AssetBundles of any type of asset.",81],["BuildPipeline.BuildStreamedSceneAssetBundle is used when you want to include only scenes to be streamed and loaded as the data becomes available.",81],["BuildPipeline.BuildAssetBundleExplicitAssetNames is the same as BuildPipeline.BuildAssetBundle but has an extra parameter to specify a custom string identifier (name) for each object.",81],["An example of how to build an AssetBundle",81],["Building asset bundles is done through editor scripting. There is basic example of this in the scripting documentation for BuildPipeline.BuildAssetBundle.",81],["For the sake of this example, copy and paste the script from the link above into a new C# script called ExportAssetBundles. This script should be placed in a folder named Editor, so that it works inside the Unity Editor.",81],["Now in the Assets menu, you should see two new menu options.",81],["Build AssetBundle From Selection - Track dependencies. This will build the current object into an asset bundle and include all of its dependencies. For example if you have a prefab that consists of several hierarchical layers then it will recursively add all the child objects and components to the asset bundle.",81],["Build AssetBundle From Selection - No dependency tracking. This is the opposite of the previous method and will only include the single asset you have selected.",81],["For this example, you should create a new prefab. First create a new Cube by going to GameObject &gt; 3D Object &gt; Cube, which will create a new cube in the Hierarchy View. Then drag the Cube from the Hierarchy View into the Project View, which will create a prefab of that object.",81],["You should then right click the Cube prefab in the project window and select Build AssetBundle From Selection - Track dependencies.",81],["At this point you will be presented with a window to save the \"bundled\" asset. If you created a new folder called \"AssetBundles\" and saved the cube as Cube.unity3d, your project window will now look something like this.",81],["At this point you can move the AssetBundle Cube.unity3d elsewhere on your local storage, or upload it to a server of your choice.",81],["An example of how to change the properties of the assets when building an Asset Bundle",81],["You can use AssetDatabase.ImportAsset to force reimporting the asset right before calling BuildPipeline.BuildAssetBundle, and then use AssetPostprocessor.OnPreprocessTexture to set the required properties. The following example will show you how to set different texture compressions when building the Asset Bundle.",81],["// c# example",81],["// Builds an asset bundle from the selected objects in the project view,",81],["// and changes the texture format using an AssetPostprocessor.",81],["using UnityEngine;",81],["using UnityEditor;",81],["public class ExportAssetBundles {",81],["// Store current texture format for the TextureProcessor.",81],["public static TextureImporterFormat textureFormat;",81],["[MenuItem(\"Assets/Build AssetBundle From Selection - PVRTC_RGB2\")]",81],["static void ExportResourceRGB2 () {",81],["textureFormat = TextureImporterFormat.PVRTC_RGB2;",81],["ExportResource();",81],["[MenuItem(\"Assets/Build AssetBundle From Selection - PVRTC_RGB4\")]",81],["static void ExportResourceRGB4 () {",81],["textureFormat = TextureImporterFormat.PVRTC_RGB4;",81],["ExportResource();",81],["static void ExportResource () {",81],["// Bring up save panel.",81],["string path = EditorUtility.SaveFilePanel (\"Save Resource\", \"\", \"New Resource\", \"unity3d\");",81],["if (path.Length != 0) {",81],["// Build the resource file from the active selection.",81],["Object[] selection = Selection.GetFiltered(typeof(Object), SelectionMode.DeepAssets);",81],["foreach (object asset in selection) {",81],["string assetPath = AssetDatabase.GetAssetPath((UnityEngine.Object) asset);",81],["if (asset is Texture2D) {",81],["// Force reimport thru TextureProcessor.",81],["AssetDatabase.ImportAsset(assetPath);",81],["BuildPipeline.BuildAssetBundle(Selection.activeObject, selection, path, BuildAssetBundleOptions.CollectDependencies   BuildAssetBundleOptions.CompleteAssets);",81],["Selection.objects = selection;",81],["// c# example",81],["// Changes the texture format when building the Asset Bundle.",81],["using UnityEngine;",81],["using UnityEditor;",81],["public class TextureProcessor : AssetPostprocessor",81],["void OnPreprocessTexture() {",81],["TextureImporter importer = assetImporter as TextureImporter;",81],["importer.textureFormat = ExportAssetBundles.textureFormat;",81],["You can also control how the asset is imported using the AssetDatabase.ImportAssetOptions.",81],["In a test environment, you sometimes need to test a change that require AssetBundles to be rebuilt. In these cases, it is advisable to use the option BuildAssetBundleOptions.UncompressedAssetBundle when you build the AssetBundles. This makes it faster to build and load the AssetBundles but they will also be bigger and therefore take longer to download.",81],["Building AssetBundles in a production enviroment",81],["When first using AssetBundles it may seem enough to manually build them as seen in the previous example. But as a project grows in size and the number of assets increases doing this process by hand is not efficient. A better approach is to write a function that builds all of the AssetBundles for a project. You can, for example, use a text file that maps Asset files to AssetBundle files.",81],["BuildingAssetBundles in 5.x",82],["Authoring Asset Bundles",82],["In Unity 4.x asset bundles were created using editor scripts.  To simplify this process Unity 5.x Editor includes asset bundle authoring tools.  Now, if you select an Asset in the editor a drop down will appear at the bottom of the Inspector window inviting you to specify which asset bundle (if any) the asset should be packaged into.  By default the asset bundle option is set to None, meaning the asset will not be written into an asset bundle.  You can create new asset bundles, give them names, and then use these new asset bundle names as the destination for the asset.",82],["In the picture the StateMachine asset has been added to an asset bundle called scene1/animdata.  This asset bundle may contain other assets which have previously been added.",82],["Empty asset bundles can be created by using the \"New...\" menu option.  After you have created a new, empty asset bundle it will appear in the list allowing you to add assets to it.  Asset bundle names are always lower-case.  If you use upper-case characters in the name they will be converted to lower-case.  Using a forward slash in the name of the asset bundle effectively creates folders, and the menu will have sub-menus, as the picture above shows.",82],["If you create asset bundles which have no assets assigned to them, then the \"Remove Unused Names\" option can be used.  This will delete the empty asset bundle.",82],["The meta file belonging to an Asset will have the chosen asset bundle name written into it.",82],["Exporting Asset Bundles",82],["Asset bundles are exported from the editor using script code.  (This is similar to the 4.x approach.)  The following script exports asset bundles:",82],["using UnityEditor;",82],["public class CreateAssetBundles",82],["[MenuItem (\"Assets/Build AssetBundles\")]",82],["static void BuildAllAssetBundles ()",82],["BuildPipeline.BuildAssetBundles (\"AssetBundles\");",82],["This script creates a menu item at the bottom of the Assets menu.  When that menu item is selected the function will be called and the asset bundles will be built.  This will start a build dialog with a progress bar.  The BuildAssetBundles function  will create the asset bundles into an output folder called \"AssetBundles\".  This folder must have been created in the project folder.  Within that folder the asset bundles that have been labelled will be created.",82],["Each asset bundle that is exported will have the name created in the asset bundle menu.  Additionally, each asset bundle will have an associated file with a .manifest extension.  This manifest file is a text file that you can open with any text editor.  It provides information such as the file CRC and asset dependencies.  The asset bundle in the example above has a manifest file that looks like this:",82],["ManifestFileVersion: 0",82],["CRC: 2422268106",82],["Hashes:",82],["AssetFileHash:",82],["serializedVersion: 2",82],["Hash: 8b6db55a2344f068cf8a9be0a662ba15",82],["TypeTreeHash:",82],["serializedVersion: 2",82],["Hash: 37ad974993dbaa77485dd2a0c38f347a",82],["HashAppended: 0",82],["ClassTypes:",82],["\nClass: 91\n",82],["Script: {instanceID: 0}",82],["Assets:",82],["Asset_0: Assets/Mecanim/StateMachine.controller",82],["Dependencies: {}",82],["In addition to these, there are another two files created: another asset bundle and another manifest file.  These two are always created whenever asset bundles are created.  They are created for each folder that asset bundles are created in, thus if you always create asset bundles in the same place, you will only get two extra files.  The additional manifest file - in this example AssetBundles.manifest - can be used in much the same way as other manifest files but will show information on how asset bundles relate and depend on each other.  In this case, since we only have a single asset bundle, it has no other dependencies.",82],["ManifestFileVersion: 0",82],["AssetBundleManifest:",82],["AssetBundleInfos:",82],["Info_0:",82],["Name: scene1assetbundle",82],["Dependencies: {}",82],["Asset Bundle Editor Tools",82],["Getting names of asset bundles",82],["The following editor script can display the names of the asset bundles which the build process can create.",82],["using UnityEditor;",82],["using UnityEngine;",82],["public class GetAssetBundleNames",82],["[MenuItem (\"Assets/Get Asset Bundle names\")]",82],["static void GetNames ()",82],["var names = AssetDatabase.GetAllAssetBundleNames();",82],["foreach (var name in names)",82],["Debug.Log (\"Asset Bundle: \" + name);",82],["Getting told when an asset changes asset bundle",82],["You can use the OnPostprocessAssetbundleNameChanged method from the AssetPostprocessor class, to get a callback when the asset bundle an asset is associated with changes.",82],["using UnityEngine;",82],["using UnityEditor;",82],["public class MyPostprocessor : AssetPostprocessor {",82],["void OnPostprocessAssetbundleNameChanged ( string path,",82],["string previous, string next) {",82],["Debug.Log(\"AB: \" + path + \" old: \" + previous + \" new: \" + next);",82],["Asset Bundle Variants",82],["Asset Bundle Variants is a new 5.0 feature.  This can be used to achieve a result similar to virtual assets.  For example, you can ser AssetBundle a variants like \"MyAssets.hd\" and \"MyAssets.sd\".  Make sure the assets exactly match. The objects in these two variant AssetBundles will have the exactly same internal IDs which is ensured by the Unity build pipeline. So these two variant AssetBundles can be switched out arbitrarily with AssetBundles of different variant extension at runtime.",82],["How to set assetbundle variants:",82],["From the editor use the one extra variant name, to the right of the asset labels GUI.",82],["In code use AssetImporter.assetBundleVariant option.",82],["The full AssetBundle name will be the combination of the AssetBundle name and the variant name. For example, if you want to add “MyAssets.hd” as a variant AssetBundle, you should set the AssetBundle name to “MyAssets” and AssetBundle variant to “hd”. And the final AssetBundle is “MyAssets.hd”.",82],["But if you only set the AssetBundle name like “MyAssets.hd”, then it’s just a normal AssetBundle which is not variant AssetBundle. “MyAssets”+“hd” and “MyAssets.hd”+”” cannot coexist as they lead to the same full AssetBundle name.",82],["Scripting Advice",82],["API to mark the asset into AssetBundle",82],["You can use AssetImporter.assetBundleName to set the AssetBundle name.",82],["Simple APIs",82],["Simple APIs are available to build AssetBundles, BuildPipeline.BuildAssetBundles().These APIs are pretty simple, you only need to provide:",82],["Output path for all the AssetBundles.",82],["BuildAssetBundleOptions which will be described later.",82],["BuildTarget which is same as before.",82],["Also have one overloaded version to provide an array of AssetBundleBuild which contains one map from assets to AsssetBundles. This provides flexibility to you, you can set your mapping information by script and build from it. And this mapping information won’t break/replace the existed one in the asset database.",82],["APIs to manipulate AssetBundle names in the asset database",82],["AssetDatabase.GetAllAssetBundleNames() which returns all the AssetBundle names in the asset database.",82],["AssetDatabase.GetAssetPathsFromAssetBundle to return the asset paths marked in the given AssetBundle.",82],["AssetDatabase.RemoveAssetBundleName() which removes a given AssetBundle name in the asset database.",82],["AssetDatabase.GetUnusedAssetBundleNames() which returns the unused AssetBundle names.",82],["AssetDatabase.RemoveUnusedAssetBundleNames() which removes all the unused AssetBundle names in the asset database.",82],["AssetPostProcessor.OnPostprocessAssetbundleNameChanged callback which will be called if user change the AssetBundle name of an asset.",82],["BuildAssetBundleOptions",82],["CollectDependencies &amp; DeterministicAssetBundle are always enabled.",82],["CompleteAssets is ingored as we always start from assets rather than objects, it should be complete by default.",82],["ForceRebuildAssetBundle is added. Even there is no change to the assets, you can force rebuild the AssetBundles by setting this flag.",82],["IngoreTypeTreeChanges is added. Even type tree changes, you can ignore the type tree changes with this flag.",82],["DisableWriteTypeTree conflicts with IngoreTypeTreeChanges. You can't ignore type tree changes if you disable type tree.",82],["Manifest file",82],["We generate the manifest file for every AssetBundle which contains the following information:",82],["The manifest file is next to the AssetBundle.",82],["CRC",82],["Asset file hash. A single hash for all the assets included in this AssetBundle, only used for incremental build check.",82],["Type tree hash. A single hash for all the types included in this AssetBundle, only used for incremental build check.",82],["Class types. All the class types included in this AssetBundle. These are used to get the new single hash when doing the type tree incremental build check.",82],["Asset names. All the assets explicitly included in this AssetBundle.",82],["Dependent AssetBundle names. All the AssetBundles which this AssetBundle depends on.",82],["This manifest file is only used for incremental build, not necessary for runtime.",82],["Single manifest file",82],["We generate a single manifest file which includes:",82],["All the AssetBundles.",82],["All the AssetBundle dependencies.",82],["Single manifest AssetBundle",82],["It only contains an AssetBundleManifest object which has following APIs:",82],["GetAllAssetBundles() which returns all the AssetBundle names in this build.",82],["GetDirectDependencies() which returns the direct dependent AssetBundle names.",82],["GetAllDependencies() which returns all the dependent AssetBundle names",82],["GetAssetBundleHash(string) which returns the hash for the specified AssetBundle.",82],["GetAllAssetBundlesWithVariant() which returns all the AssetBundles with variant.",82],["AssetBundle loading APIs changed",82],["Now we have:",82],["AssetBundle.GetAllAssetNames(). Return all the asset names in the AssetBundle.",82],["AssetBundle.GetAllScenePaths(). Return all the scene asset paths if it's a streamed scene AssetBundle.",82],["AssetBundle.LoadAsset(). Load asset from AssetBundle.",82],["AssetBundle.LoadAllAssets()",82],["AssetBundle.LoadAssetWithSubAssets()",82],["Asynchronous version also provided",82],["We won’t return component type any more, please load the game object first and then look up the component on the object.",82],["Typetrees",82],["A typetree is written to the AssetBundle by default. The only exception is Metro as it has different serialization solution.",82],["Building Scenes",83],["This section will explain the core elements you will work with to build scenes for complete games.",83],["Build Player Pipeline",84],["When building a player, you sometimes want to modify the built player in some way. For example you might want to add a custom icon, copy some documentation next to the player or build an Installer. You can do this via editor scripting using BuildPipeline.BuildPlayer to run the build and then follow it with whatever postprocessing code you need:-",84],["// JS example.",84],["import System.Diagnostics;",84],["class ScriptBatch {",84],["@MenuItem(\"MyTools/Windows Build With Postprocess\")",84],["static function BuildGame() {",84],["// Get filename.",84],["var path = EditorUtility.SaveFolderPanel(\"Choose Location of Built Game\", \"\", \"\");",84],["var levels : String[] = [\"Assets/Scene1.unity\", \"Assets/Scene2.unity\"];",84],["// Build player.",84],["BuildPipeline.BuildPlayer(levels, path + \"/BuiltGame.exe\", BuildTarget.StandaloneWindows, BuildOptions.None);",84],["// Copy a file from the project folder to the build folder, alongside the built game.",84],["FileUtil.CopyFileOrDirectory(\"Assets/WebPlayerTemplates/Readme.txt\", path + \"Readme.txt\");",84],["// Run the game (Process class from System.Diagnostics).",84],["var proc = new Process();",84],["proc.StartInfo.FileName = path + \"BuiltGame.exe\";",84],["proc.Start();",84],["// C# example.",84],["using UnityEditor;",84],["using System.Diagnostics;",84],["public class ScriptBatch",84],["[MenuItem(\"MyTools/Windows Build With Postprocess\")]",84],["public static void BuildGame ()",84],["// Get filename.",84],["string path = EditorUtility.SaveFolderPanel(\"Choose Location of Built Game\", \"\", \"\");",84],["string[] levels = new string[] {\"Assets/Scene1.unity\", \"Assets/Scene2.unity\"};",84],["// Build player.",84],["BuildPipeline.BuildPlayer(levels, path + \"/BuiltGame.exe\", BuildTarget.StandaloneWindows, BuildOptions.None);",84],["// Copy a file from the project folder to the build folder, alongside the built game.",84],["FileUtil.CopyFileOrDirectory(\"Assets/WebPlayerTemplates/Readme.txt\", path + \"Readme.txt\");",84],["// Run the game (Process class from System.Diagnostics).",84],["Process proc = new Process();",84],["proc.StartInfo.FileName = path + \"BuiltGame.exe\";",84],["proc.Start();",84],["PostProcessBuild Attribute",84],["You can also use the postprocessOrder parameter of the PostProcessBuildAttribute to define the execution order for your build methods, and call your external scripts with the Process class from these methods as shown in the last section. This parameter is used to sort the build methods from lower to higher, and you can assign any negative or positive value to it.",84],["Legacy Shaders",85],["Prior to the introduction of the Physically Based Standard Shader, Unity was supplied with more than eighty built-in shaders which each served different purposes. These shaders are still included and available for use in Unity for backwards compatibility but we recommend you use the Standard Shader wherever possible for new projects.",85],["This section begins by explaining how to use the legacy built-in shaders to maximum effect. The remainder of the section details all the available shaders, grouped into related \"families\".",85],["Cache Server (Pro Only)",86],["Unity has a completely automatic asset pipeline. Whenever a source asset like a .psd or an .fbx file is modified, Unity will detect the change and automatically reimport it. The imported data from the file is subsequently stored by Unity in its own internal format.",86],["This arrangement is designed to make the workflow as efficient and flexible as possible for an individual user. However, when working in a team, you will find that other users might keep making changes to assets, all of which must be imported. Furthermore, assets must be reimported when you switch between desktop and mobile build target platforms. The switch can therefore take a long time for large projects.",86],["The time it takes to import assets can be drastically reduced by caching the imported asset data on the Cache Server.",86],["Each asset import is cached based on",86],["The asset file itself",86],["The import settings",86],["Asset importer version",86],["The current platform.",86],["If any of the above change, the asset gets reimported, otherwise it gets downloaded from the Cache Server.",86],["When you enable the cache server in the preferences, you can even share asset imports across multiple projects (ie, the work of importing is done on one machine and the results are shared with others).",86],["Note that once the cache server is set up, this process is completely automatic, which means there are no additional workflow requirements. It will simply reduce the time it takes to import projects without getting in your way.",86],["How to set up a Cache Server (user)",86],["Setting up the Cache Server couldn't be easier. All you need to do is click Use Cache Server in the preferences and tell the local machine's Unity Editor where the Cache Server is.",86],["This can be found in Unity-&gt;Preferences on the Mac or Edit-&gt;Preferences on the PC.",86],["If you are hosting the Cache Server on your local machine, specify localhost for the server address. However, due to hard drive size limitations, it is recommended you host the Cache Server on separate machine.",86],["How to set up a Cache Server (admin)",86],["Admins need to set up the Cache Server machine that will host the cached assets.",86],["You need to:",86],["Purchase Cache Server (part of Unity Pro) in the Online Store.",86],["Download the Cache Server. Go to the Collaboration page and click on the button to Download the Cache Server.",86],["Unzip the file, after which you should see something like this:",86],["Depending on your operating system, run the appropriate command script.",86],["You will see a terminal window, indicating that the Cache Server is running in the background",86],["The Cache Server needs to be on a reliable machine with very large storage (much larger than the size of the project itself, as there will be multiple versions of imported resources stored). If the hard disk becomes full the Cache Server could perform slowly.",86],["Installing the Cache Server as a service",86],["The provided .sh and .cmd scripts should be set-up as a service on the server.",86],["The cache server can be safely killed and restarted at any time, since it uses atomic file operations.",86],["Cache Server Configuration",86],["If you simply start by double clicking the script, it will launch the legacy Cache Server on port 8125 and the new Cache Server on port 8126. It will also create \"cache\" and \"cache5.0\" directories next to the script, and keep data in there. The cache directories are allowed to grow to up to 50 GB by default. You can configure the size and the location of the data using command line options, like this:",86],["./RunOSX.command --path ~/mycachePath --size 2000000000",86],["or",86],["./RunOSX.command --path ~/mycachePath --port 8199 -nolegacy",86],["You can configure the cache server by using the following command line options:",86],["--port lets you specify the server port, it only applies to the new cache server, the default value is 8126.",86],["--path lets you specify the path of the cache location, it only applies to the new cache server, the default value is ./cache5.0.",86],["--legacypath lets you specify the path of the cache location, it only applies to the legacy cache server, the default value is ./cache.",86],["--size lets you specify the maximum cache size in bytes for both cache servers. Files that have not been used recently will automatically be discarded when the cache size is exceeded.",86],["--nolegacy if specify it will NOT start the legacy cache server, otherwise the legacy cache server is started on port 8125.",86],["Requirements for the machine hosting the Cache Server",86],["For best performance there must be enough RAM to hold an entire imported project folder. In addition, it is best to have a machine with a fast hard drive and fast Ethernet connection. The hard drive should also have sufficient free space. On the other hand, the Cache Server has very low CPU usage.",86],["One of the main distinctions between the Cache Server and version control is that its cached data can always be rebuilt locally. It is simply a tool for improving performance. For this reason it doesn't make sense to use a Cache Server over the Internet. If you have a distributed team, you should place a separate cache server in each location.",86],["The cache server should run on a Linux or Mac OS X machine. The Windows file system is not particularly well optimized for how the Asset Cache Server stores data and problems with file locking on Windows can cause issues that don't occur on Linux or Mac OS X.",86],["Cache Server FAQ",86],["Will the size of my Cache Server database grow indefinitely as more and more resources get imported and stored?",86],["The Cache Server removes assets that have not been used for a period of time automatically (of course if those assets are needed again, they will be re-created during next usage).",86],["Does the cache server work only with the asset server?",86],["The cache server is designed to be transparent to source/version control systems and so you are not restricted to using Unity's asset server.",86],["What changes will cause the imported file to get regenerated?",86],["When Unity is about to import an asset, it generates an MD5 hash of all source data.",86],["For a texture this consists of:",86],["The source asset: \"myTexture.psd\" file",86],["The meta file: \"myTexture.psd.meta\" (Stores all importer settings)",86],["The internal version number of the texture importer",86],["A hash of version numbers of all AssetPostprocessors",86],["If that hash is different from what is stored on the Cache Server, the asset will be reimported, otherwise the cached version will be downloaded. The client Unity editor will only pull assets from the server as they are needed - assets don't get pushed to each project as they change.",86],["How do I work with Asset dependencies?",86],["The Cache Server does not handle dependencies. Unity's asset pipeline does not deal with the concept of dependencies. It is built in such a way as to avoid dependencies between assets. AssetPostprocessors are a common technique used to customize the Asset importer to fit your needs. For example, you might want to add MeshColliders to some GameObjects in an fbx file based on their name or tag.",86],["It is also easy to use AssetPostprocessors to introduce dependencies. For example you might use data from a text file next to the asset to add additional components to the imported game objects. This is not supported in the Cache Server. If you want to use the Cache Server, you will have to remove dependency on other assets in the project folder. Since the Cache Server doesn't know anything about the dependency in your postprocessor, it will not know that anything has changed thus use an old cached version of the asset.",86],["In practice there are plenty of ways you can do asset postprocessing to work well with the cache server.",86],["You can use:",86],["The Path of the imported asset",86],["Any import settings of the asset",86],["The source asset itself or any data generated from it passed to you in the asset postprocessor.",86],["Are there any issues when working with materials?",86],["Modifying materials that already exist might cause trouble. When using the Cache Server, Unity validates that the references to materials are maintained. But since no postprocessing calls will be invoked, the contents of the material can not be changed when a model is imported through the Cache Server. Thus you might get different results when importing with or without Cache Server. It is best to never modify materials that already exist on disk.",86],["Are there any asset types which will not be cached by the server?",86],["There are a few kinds of asset data which the server doesn't cache. There isn't really anything to be gained by caching script files and so the server will ignore them. Also, native files used by 3D modelling software (Maya, 3D Max, etc) are converted to FBX using the application itself. Currently, the asset server caches neither the native file nor the intermediate FBX file generated in the import process. However, it is possible to benefit from the server by exporting files as FBX from the modelling software and adding those to the Unity project.",86],["Rays from the Camera",87],["In the section Understanding the View Frustum, it was explained that any point in the camera's view corresponds to a line in world space. It is sometimes useful to have a mathematical representation of that line and Unity can provide this in the form of a Ray object. The Ray always corresponds to a point in the view, so the Camera class provides the ScreenPointToRay and ViewportPointToRay functions. The difference between the two is that ScreenPointToRay expects the point to be provided as a pixel coordinate, while ViewportPointToRay takes normalized coordinates in the range 0..1 (where 0 represents the bottom or left and 1 represents the top or right of the view). Each of these functions returns a Ray which consists of a point of origin and a vector which shows the direction of the line from that origin. The Ray originates from the near clipping plane rather than the Camera's transform.position point.",87],["Raycasting",87],["The most common use of a Ray from the camera is to perform a raycast out into the scene. A raycast sends an imaginary \"laser beam\" along the ray from its origin until it hits a collider in the scene. Information is then returned about the object and the point that was hit in a RaycastHit object. This is a very useful way to locate an object based on its onscreen image. For example, the object at the mouse position can be determined with the following code:",87],["using UnityEngine;",87],["using System.Collections;",87],["public class ExampleScript : MonoBehaviour {",87],["public Camera camera;",87],["void Start(){",87],["RaycastHit hit;",87],["Ray ray = camera.ScreenPointToRay(Input.mousePosition);",87],["if (Physics.Raycast(ray, hit)) {",87],["Transform objectHit = hit.transform;",87],["// Do something with the object that was hit by the raycast.",87],["C# script example",87],["var hit: RaycastHit;",87],["var ray: Ray = camera.ScreenPointToRay(Input.mousePosition);",87],["if (Physics.Raycast(ray, hit)) {",87],["var objectHit: Transform = hit.transform;",87],["// Do something with the object that was hit by the raycast.",87],["JS script example",87],["Moving the Camera Along a Ray",87],["It is sometimes useful to get a ray corresponding to a screen position and then move the camera along that ray. For example, you may want to allow the user to select an object with the mouse and then zoom in on it while keeping it \"pinned\" to the same screen position under the mouse (this might be useful when the camera is looking at a tactical map, for example). The code to do this is fairly straightforward:",87],["using UnityEngine;",87],["using System.Collections;",87],["public class ExampleScript : MonoBehaviour {",87],["public bool zooming;",87],["public float zoomSpeed;",87],["public Camera camera;",87],["void Update() {",87],["if (zooming) {",87],["Ray ray = camera.ScreenPointToRay(Input.mousePosition);",87],["float zoomDistance = zoomSpeed * Input.GetAxis(\"Vertical\") * Time.deltaTime;",87],["camera.transform.Translate(ray.direction * zoomDistance, Space.World);",87],["C# script example",87],["var zooming: boolean;",87],["var zoomSpeed: float;",87],["if (zooming) {",87],["var ray: Ray = camera.ScreenPointToRay(Input.mousePosition);",87],["zoomDistance = zoomSpeed * Input.GetAxis(\"Vertical\") * Time.deltaTime;",87],["camera.transform.Translate(ray.direction * zoomDistance, Space.World);",87],["JS script example",87],["Cameras",88],["Just as cameras are used in films to display the story to the audience, Cameras in Unity are used to display the game world to the player. You will always have at least one camera in a scene, but you can have more than one. Multiple cameras can give you a two-player splitscreen or create advanced custom effects. You can animate cameras, or control them with physics. Practically anything you can imagine is possible with cameras, and you can use typical or unique cameras to fit your game's style.",88],["For further information, see the Camera Component reference page.",88],["Camera overview",89],["A Unity scene is created by arranging and moving objects in a three-dimensional space. Since the viewer's screen is two-dimensional, there needs to be a way to capture a view and \"flatten\" it for display. This is accomplished using Cameras.",89],["A camera is an object that defines a view in scene space. The object's position defines the viewpoint, while the forward (Z) and upward (Y) axes of the object define the view direction and the top of the screen, respectively. The Camera component also defines the size and shape of the region that falls within the view. With these parameters set up, the camera can display what it currently \"sees\" to the screen. As the camera object moves and rotates, the displayed view will also move and rotate accordingly.",89],["Perspective and orthographic cameras",89],["A camera in the real world, or indeed a human eye, sees the world in a way that makes objects look smaller the farther they are from the point of view. This well-known perspective effect is widely used in art and computer graphics and is important for creating a realistic scene. Naturally, Unity supports perspective cameras, but for some purposes, you want to render the view without this effect. For example, you might want to create a map or information display that is not supposed to appear exactly like a real-world object. A camera that does not diminish the size of objects with distance is referred to as orthographic and Unity cameras also have an option for this. The perspective and orthographic modes of viewing a scene are known as camera projections.",89],["The shape of the viewed region",89],["Both perspective and orthographic cameras have a limit on how far they can \"see\" from their current position. The limit is defined by a plane that is perpendicular to the camera's forward (Z) direction. This is known as the far clipping plane since objects at a greater distance from the camera are \"clipped\" (ie, excluded from rendering). There is also a corresponding near clipping plane close to the camera - the viewable range of distance is that between the two planes.",89],["Without perspective, objects appear the same size regardless of their distance. This means that the viewing volume of an orthographic camera is defined by a rectangular box extending between the two clipping planes.",89],["When perspective is used, objects appear to diminish in size as the distance from camera increases. This means that the width and height of the viewable part of the scene grows with increasing distance. The viewing volume of a perspective camera, then, is not a box but a pyramidal shape with the apex at the camera's position and the base at the far clipping plane. The shape is not exactly a pyramid, however, because the top is cut off by the near clipping plane; this kind of truncated pyramid shape is known as a frustum. Since its height is not constant, the frustum is defined by the ratio of its width to its height (known as the aspect ratio) and the angle between the top and bottom at the apex (known as the field of view of FOV). See the page about understanding the view frustum for a more detailed explanation.",89],["The background to the camera view",89],["For indoor scenes, the camera may always be completely inside some object representing the interior of a building, cave or other structure. When the action takes place outdoors, however, there will be many empty areas in between objects that are filled with nothing at all; these background areas typically represent the sky, space or the murky depths of an underwater scene.",89],["A camera can't leave the background completely undecided and so it must fill in the empty space with something. The simplest option is to clear the background to a flat color before rendering the scene on top of it. You can set this color using the camera's Background property, either from the inspector or from a script. A more sophisticated approach that works well with outdoor scenes is to use a Skybox. As its name suggests, a skybox behaves like a \"box\" lined with images of a sky. The camera is effectively placed at the center of this box and can see the sky from all directions. The camera sees a different area of sky as it rotates but it never moves from the center (so the camera cannot get \"closer\" to the sky). The skybox is rendered behind all objects in the scene and so it represents a view at infinite distance. The most common usage is to represent the sky in a standard outdoor scene but the box actually surrounds the camera completely, even underneath. This means that you can use a skybox to represent parts of the scene (eg, rolling plains that stretch beyond the horizon) or the all-round view of a scene in space or underwater.",89],["You can add a skybox to a scene simply by setting the Skybox property in the Lightmapping window (menu: Window &gt; Lighting). See this page for further details on how to create your own skybox.",89],["Cameras Reference",90],["This section contains more detailed information on Cameras.",90],["Camera Tricks",91],["It is useful to understand how the camera works when designing certain visual effects or interactions with objects in the scene. This section explains the nature of the camera's view and how it can be used to enhance gameplay.",91],["Character Controllers",92],["The character in a first- or third-person game will often need some collision-based physics so that he doesn't fall through the floor or walk through walls. Usually, though, the character's acceleration and movement will not be physically realistic, so he may be able to accelerate, brake and change direction almost instantly without being affected by momentum.",92],["In 3D physics, this type of behaviour can be created using a Character Controller. This component gives the character a simple, capsule-shaped collider that is always upright. The controller has its own special functions to set the object's speed and direction but unlike true colliders, a rigidbody is not needed and the momentum effects are not realistic.",92],["A character controller cannot walk through static colliders in a scene, and so will follow floors and be obstructed by walls. It can push rigidbody objects aside while moving but will not be accelerated by incoming collisions. This means that you can use the standard 3D colliders to create a scene around which the controller will walk but you are not limited by realistic physical behaviour on the character itself.",92],["You can find out more about character controllers on the reference page.",92],["Animation",93],["Properties",93],["Property: Function: ",93],["Animation The default animation that will be played when Play Automatically is enabled. ",93],["Animations A list of animations that can be accessed from scripts. ",93],["Play Automatically Should the animation be played automatically when starting the game? ",93],["Animate Physics Should the animation interact with physics? ",93],["Culling Type Determines when the animation will not be played. ",93],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Always Animate Always animate. ",93],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Based on Renderers Cull based on the default animation pose. ",93],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Based on Clip Bounds Cull based on clip bounds (calculated during import), if the clip bounds are out of view, the animation will not be played. ",93],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Based on User Bounds Cull based on bounds defined by the user, if the user-defined bounds are out of view, the animation will not be played. ",93],["See the Animation View Guide for more information on how to create animations inside Unity. See the Animation Import page on how to import animated characters.",93],["Animation Clip",94],["Animation Clips are the smallest building blocks of animation in Unity. They represent an isolated piece of motion, such as RunLeft, Jump, or Crawl, and can be manipulated and combined in various ways to produce lively end results (see Animation State Machines, Animator Controller, or Blend Trees).",94],["Animation clips can be selected from imported FBX data (see FBXImporter settings for Animations), and when you click on the set of available animation clips you will see the following set of properties:",94],["Property: Function: ",94],["Name The name of the clip. ",94],["Source Take The take in the source file to use as a source for this animation clip. (This option will not show up if there's only one take). This is what defines a set of animation as separated in Motionbuilder, Maya and other 3D packages. Unity can import these takes as individual clips or you can create them from the whole file or a take. ",94],["Start Start frame of the clip. ",94],["End End frame of the clip. ",94],["Loop Time Enable this option to make the animation clip play through and restart when the end is reached. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Loop Pose Enable to make the motion loop seamlessly. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Cycle Offset Offset to the cycle of a looping animation, if we want to start it at a different time. ",94],["Root Transform Rotation  ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bake into Pose Enable to make root rotation be baked into the movement of the bones. Disable to make root rotation be stored as root motion. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Based Upon What the root rotation is based upon. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; - Original Keeps the rotation as it is authored in the source file. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; - Body Orientation Keeps the upper body pointing forward. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Offset Offset to the root rotation (in degrees). ",94],["Root Transform Position (Y)  ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bake into Pose Enable to make vertical root motion be baked into the movement of the bones. Disable to make vertical root motion be stored as root motion. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Based Upon What the vertical root position is based upon. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; - Original Keeps the vertical position as it is authored in the source file. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; - Center of Mass Keeps the center of mass aligned with root transform position. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; - Feet Keeps the feet aligned with the root transform position. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Offset Offset to the vertical root position. ",94],["Root Transform Position (XZ)  ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bake into Pose Enable to make horizontal root motion be baked into the movement of the bones. Disable to make horizontal root motion be stored as root motion. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Based Upon What the horizontal root position is based upon. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; - Original Keeps the horizontal position as it is authored in the source file. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; - Center of Mass Keeps the center of mass aligned with the root transform position. ",94],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Offset Offset to the horizontal root position. ",94],["Mirror Mirror left and right in this clip. ",94],["Mask The Body mask and Transform mask applied to this animation clip (see section on avatar masks). ",94],["Curves Parameter-related curves (see Curves in Mecanim). ",94],["Events Used to create a new Event on a clip (see Using Animation Events). ",94],["Creating clips is essentially defining the start and end points for segments of animation. In order for these clips to loop, they should be trimmed in such a way to match the first and last frame as best as possible for the desired loop. For more on this, see the section on",94],["Animator Component",95],["The Animator component is used to assign animation to a GameObject in your scene. The Animator component requires a reference to an Animator Controller which defines which animation clips to use, and controls when and how to blend and transition between them.",95],["If the GameObject is a humanoid character with an Avatar definition, the Avatar should also be assigned in this component, as seen here:",95],["This diagram shows how the various assets (Animation Clips, an Animator Controller, and an Avatar) are all brought together in an Animator Component on a Game Object:",95],["See Also State Machines, Blend Trees, Avatar, Animator Controller",95],["Properties",95],["Property: Function: ",95],["Controller The animator controller attached to this character. ",95],["Avatar The Avatar for this character. (If the Animator is being used to animate a humanoid character) ",95],["Apply Root Motion Should we control the character's position and rotation from the animation itself or from script. ",95],["Update Mode This allows you to select when the Animator updates, and which timescale it should use. ",95],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Normal The animator is updated in-sync with the Update call, and the animator’s speed matches the current timescale. If the timescale is slowed, animations will slow down to match. ",95],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Animate Physics The animator is updated in-sync with the FixedUpdate call (i.e. in lock-step with the physics system). You should use this mode if you are animating the motion of objects with physics interactions, such as characters which can push rigidbody objects around. ",95],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Unscaled Time The animator is updated in-sync with the Update call, but the animator’s speed ignores the current timescale and animates at 100% speed regardless. This is useful for animating a GUI system at normal speed while using modified timescales for special effects or to pause gameplay. ",95],["Culling Mode Culling mode for animations ",95],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Always animate Always animate, don't do culling ",95],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Based on Renderers When the renderers are invisible, only root motion is animated. All other body parts will remain static while the character is invisible. ",95],["Animation curve information",95],["The information box at the bottom of the Animator component provides you with a breakdown of the data being used in all the clips used by the Animator Controller.",95],["An animation clip contains data in the form of “curves”, which represent how a value changes over time. These curves may describe the position or rotation of an object, the flex of a muscle in the humanoid animation system, or other animated values within the clip such as a changing material colour.",95],["This table explains what each item of data represents:",95],["Label Description ",95],["Clip Count The total number of animation clips used by the animator controller assigned to this Animator. ",95],["Curves (Pos, Rot &amp; Scale) The total number of curves used to animate the position, rotation or scale of objects. These are for animated objects that are not part of a standard humanoid rig. When animating a humanoid avatar, these curves would show up a count for extra non-muscle bones such as a tail, flowing cloth or a dangling pendant. If you have a humanoid animation and you notice unexpected non-muscle animation curves, you mave have unnecessary animation curves in your animation files. ",95],["Muscles The number of muscle animation curves used for humanoid animation by this Animator. These are the curves used to animate the standard humanoid avatar muscles. As well as the standard muscle movements for all the humanoid bones in Unity’s standard avatar, this also includes two “muscle curves” which store the root motion position and rotation animation. ",95],["Generic The number of numeric (float) curves used by the animator to animate other properties such as material colour. ",95],["PPtr The total count of sprite animation curves (used by Unity's 2d system) ",95],["Curves Count The total combined number of animation curves ",95],["Constant The number of animation curves that are optimised as constant (unchanging) values. Unity selects this automatically if your animation files contain curves with unchanging values. ",95],["Dense The number of animation curves that are optimised using the “dense” method of storing data (discrete values which are interpolated between linearly). This method uses less significantly less memory than the “stream” method. ",95],["Stream The number of animation curves using the “stream” method of storing data (values with time and tangent data for curved interpolation). This data occupies significantly more memory than the “dense” method. ",95],["If your animation clips are imported with “Anim Compression” set to “Optimal” in the Animation Import Settings, Unity will use a heuristic algorithm to determine whether it is best to use the dense or stream method to store the data for each curve.",95],["Animator Controller",96],["An Animator Controller asset is created within Unity and allows you to arrange and maintain a set of animations for a character or object. In most situations, it is normal to have multiple animations and switch between them when certain game conditions occur. For example, you could switch from a walk animation to a jump whenever the spacebar is pressed.  However even if you just have a single animation clip you still need to place it into an animator controller to use it on a Game Object.",96],["The controller has references to the animation clips used within it, and manages the various animation states and the transitions between them using a so-called State Machine, which could be thought of as a kind of flow-chart, or a simple program written in a visual programming language within Unity. More information about state machines can be found here.",96],["In some situations, an Animator Controller is automatically created for you, such as in the situation where you begin animating a new GameObject using the Animation Window.",96],["In other cases, you would want to create a new Animator Controller asset yourself and begin to add states to it by dragging in animation clips and creating transitions between them to form a state machine.",96],["Area Effector 2D",97],["The Area Effector 2D applies forces within an area.",97],["When the source Collider2D is a trigger, the effector will apply forces whenever the target Collider2D overlaps the source. When the source Collider isn't a trigger, the effector will apply forces whenever the target Collider2D is in contact with the source only. This effector is designed primarily to work with source Collider2D that are set as triggers so that target Collider2D can overlap the defined area.",97],["Properties",97],["Property: Function: ",97],["Collider Mask The mask used to select specific layers allowed to interact with the effector. ",97],["Force Direction The direction of the force to be applied. ",97],["Force  Magnitude The magnitude of the force to be applied. ",97],["Force Variation The variation of the magnitude of the force to be applied. ",97],["Drag The linear drag to apply to rigid-bodies. ",97],["Angular Drag The angular drag to apply to rigid-bodies. ",97],["Force Target The target for where the effector applies any force. ",97],["Audio Chorus Effect",98],["The Audio Chorus Effect takes an Audio Mixer group output and processes it creating a chorus effect.",98],["Properties",98],["Property: Function: ",98],["Dry mix Volume of original signal to pass to output. 0.0 to 1.0. Default = 0.5. ",98],["Wet mix tap 1 Volume of 1st chorus tap. 0.0 to 1.0. Default = 0.5. ",98],["Wet mix tap 2 Volume of 2nd chorus tap. This tap is 90 degrees out of phase of the first tap. 0.0 to 1.0. Default = 0.5. ",98],["Wet mix tap 3 Volume of 3rd chorus tap. This tap is 90 degrees out of phase of the second tap. 0.0 to 1.0. Default = 0.5. ",98],["Delay The LFO's delay in ms. 0.1 to 100.0. Default = 40.0 ms ",98],["Rate The LFO's modulation rate in Hz. 0.0 to 20.0. Default = 0.8 Hz. ",98],["Depth Chorus modulation depth. 0.0 to 1.0. Default = 0.03. ",98],["Feedback Chorus feedback. Controls how much of the wet signal gets fed back into the filter's buffer. 0.0 to 1.0. Default = 0.0. ",98],["Details",98],["The chorus effect modulates the original sound by a sinusoid low frequency oscillator (LFO). The output sounds like there are multiple sources emitting the same sound with slight variations - resembling a choir.",98],["You can tweak the chorus filter to create a flanger effect by lowering the feedback and decreasing the delay, as the flanger is a variant of the chorus.",98],["Creating a simple, dry echo is done by setting Rate and Depth to 0 and tweaking the mixes and Delay",98],["Audio Chorus Filter",99],["The Audio Chorus Filter takes an Audio Clip and processes it creating a chorus effect.",99],["Properties",99],["Property: Function: ",99],["Dry Mix Volume of original signal to pass to output. 0.0 to 1.0. Default = 0.5. ",99],["Wet Mix 1 Volume of 1st chorus tap. 0.0 to 1.0. Default = 0.5. ",99],["Wet Mix 2 Volume of 2nd chorus tap. This tap is 90 degrees out of phase of the first tap. 0.0 to 1.0. Default = 0.5. ",99],["Wet Mix 3 Volume of 3rd chorus tap. This tap is 90 degrees out of phase of the second tap. 0.0 to 1.0. Default = 0.5. ",99],["Delay The LFO's delay in ms. 0.1 to 100.0. Default = 40.0 ms ",99],["Rate The LFO's modulation rate in Hz. 0.0 to 20.0. Default = 0.8 Hz. ",99],["Depth Chorus modulation depth. 0.0 to 1.0. Default = 0.03. ",99],["Feed Back Chorus feedback. Controls how much of the wet signal gets fed back into the filter's buffer. 0.0 to 1.0. Default = 0.0. ",99],["Details",99],["The chorus effect modulates the original sound by a sinusoid low frequency oscillator (LFO). The output sounds like there are multiple sources emitting the same sound with slight variations - resembling a choir.",99],["You can tweak the chorus filter to create a flanger effect by lowering the feedback and decreasing the delay, as the flanger is a variant of the chorus.",99],["Creating a simple, dry echo is done by setting Rate and Depth to 0 and tweaking the mixes and Delay",99],["Audio Clip",100],["Audio Clips contain the audio data used by Audio Sources. Unity supports mono, stereo and multichannel audio assets (up to eight channels). The audio file formats that Unity can import are .aif, .wav, .mp3, and .ogg. Unity can also import tracker modules in the .xm, .mod, .it, and .s3m formats. The tracker module assets behave the same way as any other audio assets in Unity although no waveform preview is available in the asset import inspector.",100],["Properties",100],["Property:  Function: ",100],["Audio Format  The specific format that will be used for the sound at runtime. ",100],["Native This option offers higher quality at the expense of larger file size and is best for very short sound effects. ",100],["Compressed The compression results in smaller files but with somewhat lower quality compared to native audio. This format is best for medium length sound effects and music. ",100],["3D Sound  If enabled, the sound will play back in 3D space. Both Mono and Stereo sounds can be played in 3D. ",100],["Force to mono  If enabled, the audio clip will be down-mixed to a single channel sound. ",100],["Load Type  The method Unity uses to load audio assets at runtime. ",100],["Decompress on load Audio files will be decompressed as soon as they are loaded. Use this option for smaller compressed sounds to avoid the performance overhead of decompressing on the fly. Be aware that decompressing sounds on load will use about ten times more memory than keeping them compressed, so don't use this option for large files. ",100],["Compressed in memory Keep sounds compressed in memory and decompress while playing. This option has a slight performance overhead (especially for Ogg/Vorbis compressed files) so only use it for bigger files where decompression on load would use a prohibitive amount of memory. Note that, due to technical limitations, this option will silently switch to Stream From Disc (see below) for Ogg Vorbis assets on platforms that use FMOD audio. ",100],["Stream from disc Stream audio data directly from disc. The memory used by this option is typically a small fraction of the file size, so it is very useful for music or other very long tracks. For performance reasons, it is usually advisable to stream only one or two files from disc at a time but the number of streams that can comfortably be handled depends on the hardware. ",100],["Compression  Amount of Compression to be applied to a Compressed clip. Statistics about the file size can be seen under the slider. A good approach to tuning this value is to drag the slider to a place that leaves the playback \"good enough\" while keeping the file small enough for your distribution requirements. ",100],["Hardware Decoding  (iOS only) On iOS devices, Apple's hardware decoder can be used resulting in lower CPU overhead during decompression. Check out platform specific details for more info. ",100],["Gapless looping  (Android/iOS only) Use this when compressing a seamless looping audio source file (in a non-compressed PCM format) to ensure perfect continuity is preserved at the seam. Standard MPEG encoders introduce a short silence at the loop point, which will be audible as a brief \"click\" or \"pop\". ",100],["Preview Window",100],["The Preview window contains three icons.",100],["When Auto Play is on the clips will play as soon as they are selected.",100],["When Loop is on the clips will play in a continual loop.",100],["This will play the clip.",100],["Importing Audio Assets",100],["Unity supports both Compressed and Native Audio. Any type of file (except MP3/Ogg Vorbis) will be initially imported as Native. Compressed audio files must be decompressed by the CPU while the game is running, but have smaller file size. If Stream is checked the audio is decompressed on the fly, otherwise it is decompressed completely as soon as it loads. Native PCM formats (WAV, AIFF) have the benefit of giving higher fidelity without increasing the CPU overhead, but files in these formats are typically much larger than compressed files. Module files (.mod,.it,.s3m..xm) can deliver very high quality with an extremely low footprint.",100],["As a general rule of thumb, Compressed audio (or modules) are best for long files like background music or dialog, while Native is better for short sound effects. You should tweak the amount of Compression using the compression slider. Start with high compression and gradually reduce the setting to the point where the loss of sound quality is perceptible. Then, increase it again slightly until the perceived loss of quality disappears.",100],["Using 3D Audio",100],["If an audio clip is marked as a 3D Sound then it will be played back so as to simulate its position in the game world's 3D space. 3D sounds emulate the distance and location of sounds by attenuating volume and panning across speakers. Both mono and multiple channel sounds can be positioned in 3D. For multiple channel audio, use the spread option on the Audio Source to spread and split out the discrete channels in speaker space. Unity offers a variety of options to control and fine-tune the audio behavior in 3D space - see the Audio Source component reference for further details.",100],["Platform specific details",100],["IOS",100],["On mobile platforms compressed audio is encoded as MP3 to take advantage of hardware decompression.",100],["To improve performance, audio clips can be played back using the Apple hardware codec. To enable this option, check the \"Hardware Decoding\" checkbox in the Audio Importer.",100],["Note that only one hardware audio stream can be decompressed at a time, including the background iPod audio.",100],["If the hardware decoder is not available, the decompression will fall back on the software decoder (on iPhone 3GS or later, Apple's software decoder is used in preference to Unity's own decoder (FMOD)).",100],["Android",100],["On mobile platforms compressed audio is encoded as MP3 to take advantage of hardware decompression.",100],["Hints",100],["Audio streaming from AssetBundles is not supported in Unity 4.x",100],["Audio Compressor Effect",101],["The Audio Compressor Effect reduces the volume of loud sounds or amplifies quiet sounds by narrowing or \"compressing\" an audio signal's dynamic range.",101],["Properties",101],["Property: Function: ",101],["Threshold Threshold level in dB (range 0 to -60dB, default = 0dB). ",101],["Attack The rate the effect is applied in ms. (range 10.0 to 200.0 ms, default = 50.0 ms). ",101],["Release  The rate the effect is released in ms. (range 20.0 to 1000.0 ms, default = 50.0 ms). ",101],["Make up gain Make up gain level in dB (range 0 to 30dB, default = 0dB). ",101],["Audio Delay Effect",102],["The Audio Delay Effect adds a delay to the audio signal.",102],["Properties",102],["Property: Function: ",102],["Delay Ch # The delay that can be set for up to 16 channels (0-15) in ms (range 0 to 10000.0, default = 0 ms). ",102],["Maximum delay The maximum delay that can be applied in ms (range 0 to 10000.0, default = 0 ms). ",102],["Audio Distortion Effect",103],["The Distortion Effect distorts the sound from an AudioMixer group.",103],["Properties",103],["Property: Function: ",103],["Distortion Distortion value. 0.0 to 1.0. Default = 0.5. ",103],["Details",103],["Apply the Distortion Effect to simulate the sound of a low quality radio transmission.",103],["Audio Distortion Filter",104],["The Audio Distortion Filter distorts the sound from an AudioSource or sounds reaching the AudioListener.",104],["Properties",104],["Property: Function: ",104],["Distortion Distortion value. 0.0 to 1.0. Default = 0.5. ",104],["Details",104],["Apply the Audio Distortion Filter to simulate the sound of a low quality radio transmission.",104],["Audio Echo Effect",105],["The Audio Echo Effect repeats a sound after a given Delay, attenuating the repetitions based on the Decay Ratio.",105],["Properties",105],["Property: Function: ",105],["Delay Echo delay in ms. 10 to 5000. Default = 500. ",105],["Decay Echo decay per delay. 0 to 100%. 100% = No decay, 0% = total decay (ie simple 1 line delay). Default = 50%. ",105],["Max channels  ",105],["Drymix Volume of original signal to pass to output. 0 to 100%. Default = 100%. ",105],["Wetmix Volume of echo signal to pass to output. 0 to 100%. Default = 100%. ",105],["Details",105],["The Wetmix value determines the amplitude of the filtered signal, where the Drymix determines the amplitude of the unfiltered sound output.",105],["Hard surfaces reflects the propagation of sound. For example a large canyon can be made more convincing with the Audio Echo Filter.",105],["Audio Echo Filter",106],["The Audio Echo Filter repeats a sound after a given Delay, attenuating the repetitions based on the Decay Ratio.",106],["Properties",106],["Property: Function: ",106],["Delay Echo delay in ms. 10 to 5000. Default = 500. ",106],["Decay Ratio Echo decay per delay. 0 to 1. 1.0 = No decay, 0.0 = total decay (ie simple 1 line delay). Default = 0.5.L ",106],["Wet Mix Volume of echo signal to pass to output. 0.0 to 1.0. Default = 1.0. ",106],["Dry Mix Volume of original signal to pass to output. 0.0 to 1.0. Default = 1.0. ",106],["Details",106],["The Wet Mix value determines the amplitude of the filtered signal, where the Dry Mix determines the amplitude of the unfiltered sound output.",106],["Hard surfaces reflects the propagation of sound. For example a large canyon can be made more convincing with the Audio Echo Filter.",106],["Sound propagates slower than light - we all know that from lightning and thunder. To simulate this, add an Audio Echo Filter to an event sound, set the Wet Mix to 0.0 and modulate the Delay to the distance between AudioSource and AudioListener.",106],["Audio Filters",107],["You can modify the output of Audio Source and Audio Listener components by applying  Audio Effects. These can filter the frequency ranges of the sound or apply reverb and other effects.",107],["The effects are applied by adding effect components to the object with the Audio Source or Audio Listener. The ordering of the components is important, since it reflects the order in which the effects will be applied to the source audio. For example, in the image below, an Audio Listener is modified first by an Audio Low Pass Filter and then an Audio Chorus Filter.",107],["To change the ordering of these and any other components, open a context menu in the inspector and select the Move Up or Move Down commands. Enabling or disabling an effect component determines whether it will be applied or not.",107],["Though highly optimized, some filters are still CPU intensive. Audio CPU usage can monitored in the profiler under the Audio Tab.",107],["See the other pages in this section for further information about the specific filter types available.",107],["Audio Effects",108],["You can modify the output of Audio Mixer components by applying  Audio Effects. These can filter the frequency ranges of the sound or apply reverb and other effects.",108],["The effects are applied by adding effect components to the relevant section of the Audio Mixer. The ordering of the components is important, since it reflects the order in which the effects will be applied to the source audio. For example, in the image below, the Music section of an Audio Mixer is modified first by a Lowpass effect and then a compressor Effect, Flange Effect and so on.",108],["To change the ordering of these and any other components, open a context menu in the inspector and select the Move Up or Move Down commands. Enabling or disabling an effect component determines whether it will be applied or not.",108],["Though highly optimized, some filters are still CPU intensive. Audio CPU usage can monitored in the profiler under the Audio Tab.",108],["See the other pages in this section for further information about the specific effect types available.",108],["Audio Flange Effect",109],["The Audio Flange Effect is used to create the audio effect produced by mixing two identical signals together, one signal delayed by a small and gradually changing period, usually smaller than 20 milliseconds.",109],["Properties",109],["Property: Function: ",109],["Drymix Percentage of original signal to pass to output. 0.0 to 100.0%. Default = 45%. ",109],["Wetmix Percentage of flange signal to pass to output. 0.0 to 100.0%. Default = 55%. ",109],["Depth 0.01 to 1.0. Default = 1.0. ",109],["Rate 0.1 to 20 Hz. Default = 10 Hz. ",109],["Audio High Pass Effect",110],["The Highpass Effect passes high frequencies of an AudioMixer group and cuts off signals with frequencies lower than the Cutoff Frequency.",110],["Properties",110],["Property: Function: ",110],["Cutoff freq Highpass cutoff frequency in Hertz (range 10.0 to 22000.0, default = 5000.0). ",110],["Resonance Highpass resonance quality value (range 1.0 to 10.0, default = 1.0). ",110],["Details",110],["The Resonance (short for Highpass Resonance Quality Factor) determines how much the filter's self-resonance is dampened. Higher highpass resonance quality indicates a lower rate of energy loss, that is the oscillations die out more slowly.",110],["Audio High Pass Filter",111],["The Audio High Pass Filter passes high frequencies of an AudioSource and cuts off signals with frequencies lower than the Cutoff Frequency.",111],["Properties",111],["Property: Function: ",111],["Cutoff Frequency Highpass cutoff frequency in Hertz (range 10.0 to 22000.0, default = 5000.0). ",111],["Highpass Resonance Q Highpass resonance quality value (range 1.0 to 10.0, default = 1.0). ",111],["Details",111],["The Highpass resonance Q (short for Highpass Resonance Quality Factor) determines how much the filter's self-resonance is dampened. Higher highpass resonance quality indicates a lower rate of energy loss, that is the oscillations die out more slowly.",111],["Audio High Pass Simple Effect",112],["The Highpass Simple Effect passes high frequencies of an AudioMixer group and cuts off signals with frequencies lower than the Cutoff Frequency.",112],["Properties",112],["Property: Function: ",112],["Cutoff freq Highpass cutoff frequency in Hertz (range 10.0 to 22000.0, default = 5000.0). ",112],["Details",112],["The Resonance (short for Highpass Resonance Quality Factor) determines how much the filter's self-resonance is dampened. Higher highpass resonance quality indicates a lower rate of energy loss, that is the oscillations die out more slowly.",112],["For additional control over the resonance value of the high pass filter use the Audio High Pass effect.",112],["Audio IT Echo Effect",113],["The Audio IT Echo Effect ...??",113],["Properties",113],["Property: Function: ",113],["WetDryMix (range 0.0 to 100.0, default = 50.0). ",113],["Feedback (range 0 to 100.0%, default = 50%). ",113],["LeftDelay (range 1.0 to 2000.0, default = 500.0 ms). ",113],["RightDelay (range 1.0 to 2000.0, default = 500.0 ms). ",113],["PanDelay (range 0.0 to 1.0, default = 0.0). ",113],["Audio IT Low Pass Effect",114],["The Audio IT Low Pass Effect passes low frequencies of an AudioMixer group while removing frequencies higher than the Cutoff Frequency.",114],["Properties",114],["Property: Function: ",114],["Cutoff freq Lowpass cutoff frequency in Hertz (range 10.0 to 22000.0, default = 5000.0). ",114],["Resonance Lowpass resonance quality value (range 1.0 to 10.0, default = 1.0). ",114],["Details",114],["The Resonance (short for Lowpass Resonance Quality Factor) determines how much the filter's self-resonance is dampened. Higher lowpass resonance quality indicates a lower rate of energy loss, that is the oscillations die out more slowly.",114],["Audio Listener",115],["The Audio Listener acts as a microphone-like device. It receives input from any given Audio Source in the scene and plays sounds through the computer speakers. For most applications it makes the most sense to attach the listener to the Main Camera. If an audio listener is within the boundaries of a Reverb Zone reverberation is applied to all audible sounds in the scene. Furthermore, Audio Effects can be applied to the listener and it will be applied to all audible sounds in the scene.",115],["Properties",115],["The Audio Listener has no properties. It simply must be added to work. It is always added to the Main Camera by default.",115],["Details",115],["The Audio Listener works in conjunction with Audio Sources, allowing you to create the aural experience for your games. When the Audio Listener is attached to a GameObject in your scene, any Sources that are close enough to the Listener will be picked up and output to the computer's speakers. Each scene can only have 1 Audio Listener to work properly.",115],["If the Sources are 3D (see import settings in Audio Clip), the Listener will emulate position, velocity and orientation of the sound in the 3D world (You can tweak attenuation and 3D/2D behavior in great detail in Audio Source) . 2D will ignore any 3D processing. For example, if your character walks off a street into a night club, the night club's music should probably be 2D, while the individual voices of characters in the club should be mono with their realistic positioning being handled by Unity.",115],["You should attach the Audio Listener to either the Main Camera or to the GameObject that represents the player. Try both to find what suits your game best.",115],["Hints",115],["Each scene can only have one Audio Listener.",115],["You access the project-wide audio settings using the Audio Manager, found in the Edit-&gt;Project Settings-&gt;Audio menu.",115],["View the Audio Clip Component page for more information about Mono vs Stereo sounds.",115],["Audio Low Pass Effect",116],["The Audio Low Pass Effect passes low frequencies of an AudioMixer group while removing frequencies higher than the Cutoff Frequency.",116],["Properties",116],["Property: Function: ",116],["Cutoff freq Lowpass cutoff frequency in Hertz (range 10.0 to 22000.0, default = 5000.0). ",116],["Resonance Lowpass resonance quality value (range 1.0 to 10.0, default = 1.0). ",116],["Details",116],["The Resonance (short for Lowpass Resonance Quality Factor) determines how much the filter's self-resonance is dampened. Higher lowpass resonance quality indicates a lower rate of energy loss, that is the oscillations die out more slowly.",116],["Audio Low Pass Filter",117],["The Audio Low Pass Filter passes low frequencies of an AudioSource or all sound reaching an AudioListener while removing frequencies higher than the Cutoff Frequency.",117],["Properties",117],["Property: Function: ",117],["Cutoff Frequency Lowpass cutoff frequency in Hertz (range 10.0 to 22000.0, default = 5000.0). ",117],["Lowpass Resonance Q Lowpass resonance quality value (range 1.0 to 10.0, default = 1.0). ",117],["Details",117],["The Lowpass Resonance Q (short for Lowpass Resonance Quality Factor) determines how much the filter's self-resonance is dampened. Higher lowpass resonance quality indicates a lower rate of energy loss, that is the oscillations die out more slowly.",117],["The Audio Low Pass Filter has a Rolloff curve associated with it, making it possible to set Cutoff Frequency over distance between the AudioSource and the AudioListener.",117],["Sounds propagates very differently given the environment. For example, to compliment a visual fog effect add a subtle low-pass to the Audio Listener. The high frequencies of a sound being emitted from behind a door will be filtered out by the door and so won't reach the listener. To simulate this, simply change the Cutoff Frequency when opening the door.",117],["Audio Low Pass Simple Effect",118],["The Audio Low Pass Simple Effect passes low frequencies of an AudioMixer group while removing frequencies higher than the Cutoff Frequency.",118],["Properties",118],["Property: Function: ",118],["Cutoff freq Lowpass cutoff frequency in Hertz (range 10.0 to 22000.0, default = 5000.0). ",118],["Details",118],["The Resonance (short for Lowpass Resonance Quality Factor) determines how much the filter's self-resonance is dampened. Higher lowpass resonance quality indicates a lower rate of energy loss, that is the oscillations die out more slowly.",118],["For additional control over the resonance value of the low pass filter use the Audio Low Pass effect.",118],["Audio Manager",119],["The Audio Manager allows you to tweak the maximum volume of all sounds playing in the scene.",119],["To see it choose Edit &gt; Project Settings &gt; Audio.",119],["Properties",119],["Property:  Function: ",119],["Volume  The volume of all sounds playing. ",119],["Rolloff Scale  Sets the global attenuation rolloff factor for Logarithmic rolloff based sources (see Audio Source). The higher the value the faster the volume will attenuate, conversely the lower the value, the slower it attenuate (value of 1 will simulate the \"real world\"). ",119],["Doppler Factor  How audible the Doppler effect is. When it is zero it is turned off. 1 means it should be quite audible for fast moving objects. ",119],["Default Speaker Mode  Defines which speaker mode should be the default for your project. Default is 2 for stereo speaker setups (see AudioSpeakerMode in the scripting API reference for a list of modes). ",119],["Sample Rate  Output sample rate. If set to 0, the sample rate of the system will be used. Also note that this only serves as a reference as only certain platforms allow changing this, such as IOS or Android. ",119],["DSP Buffer Size  The size of the DSP buffer can be set to optimise for latency or performance ",119],["Default Default buffer size ",119],["Best Latency Trades off performance in favour of latency ",119],["Good Latency Balance between latency and performance ",119],["Best Performance Trades off latency in favour of performance ",119],["Virtual Voice Count  Number of virtual voices that the audio system manages. This value should always be larger than the number of voices played by the game. If not, warnings will be shown in the console. ",119],["Real Voice Count  Number of real voices that can be played at the same time. Every frame the loudest voices will be picked. ",119],["Disable Audio  Deactivates the audio system in standalone builds. Note that this also affects the audio of MovieTextures. In the editor the audio system is still on and will support previewing audio clips, but AudioSource. Play calls and playOnAwake will not be handled in order to simulate behavior of the standalone build. ",119],["Details",119],["If you want to use Doppler Effect set Doppler Factor to 1. Then tweak both Speed of Sound and Doppler Factor until you are satisfied.",119],["Speaker mode can be changed runtime from your application through scripting. See Audio Settings.",119],["Audio Mixer",120],["Properties",120],["Property: Function: ",120],["S Button Soloing the group. ",120],["M Button Muting the group. ",120],["B Button Bypassing all the effects in the group. ",120],["When you select Add you can select from a list of effects that can be applied to the group.",120],["Audio Normalize Effect",121],["The Audio Normalize Effect applies a constant amount of gain to an audio stream to bring the average or peak amplitude to a target level.",121],["Properties",121],["Property: Function: ",121],["Fade in time Fade in time of the effect in seconds (range 0 to 20000.0, default = 5000.0 seconds). ",121],["Lowest volume (range 0.0 to 1.0, default = 0.10). ",121],["Maximum amp Maximum amplification (range 20.0 to 100000.0, default = 20 x). ",121],["Audio Parametric Equalizer Effect",122],["The Audio Param EQ Effect is used to alter the frequency response of an audio system using linear filters.",122],["Properties",122],["Property: Function: ",122],["Center freq The frequency in Hertz where the gain is applied (range 20.0 to 22000.0, default = 8000.0 Hz). ",122],["Octave Range The number of Octaves over which the gain is applied (Centered on the Center Frequency) (range 0.20 to 5.00, default = 1.0 octave). ",122],["Frequency Gain The gain applied (range 0.05 to 3.00, default = 1.00 - no gain applied). ",122],["Details",122],["The graph shows the effect of the gain to be applied over the frequency range of the audio output.",122],["Audio Pitch Shifter Effect",123],["The Audio Pitch Shifter Effect is used to shift a signal up or down in pitch.",123],["Properties",123],["Property: Function: ",123],["Pitch The pitch multiplier (range 0.5 x to 2.0 x, default 1.0 x). ",123],["FFT Size (range 256.0 to 4096.0, default = 1024.0). ",123],["Overlap (range 1 to 32, default = 4). ",123],["Max channels The maximum number of channels (range 0 to 16, default = 0 channels). ",123],["Audio SFX Reverb Effect",124],["The SFX Reverb Effect takes the output of an Audio Mixer group and distorts it to create a custom reverb effect.",124],["Properties",124],["Property: Function: ",124],["Dry Level Mix level of dry signal in output in mB. Ranges from -10000.0 to 0.0. Default is 0 mB. ",124],["Room Room effect level at low frequencies in mB. Ranges from -10000.0 to 0.0. Default is -10000.0 mB. ",124],["Room HF Room effect high-frequency level in mB. Ranges from -10000.0 to 0.0. Default is 0.0 mB. ",124],["Decay Time Reverberation decay time at low-frequencies in seconds. Ranges from 0.1 to 20.0. Default is 1.0. ",124],["Decay HF Ratio Decay HF Ratio : High-frequency to low-frequency decay time ratio. Ranges from 0.1 to 2.0. Default is 0.5. ",124],["Reflections Early reflections level relative to room effect in mB. Ranges from -10000.0 to 1000.0. Default is -10000.0 mB. ",124],["Reflect Delay Early reflections delay time relative to room effect in mB. Ranges from -10000.0 to 2000.0. Default is 0.02. ",124],["Reverb Late reverberation level relative to room effect in mB. Ranges from -10000.0 to 2000.0. Default is 0.0 mB. ",124],["Reverb Delay Late reverberation delay time relative to first reflection in seconds. Ranges from 0.0 to 0.1. Default is 0.04 s. ",124],["Diffusion Reverberation diffusion (echo density) in percent. Ranges from 0.0 to 100.0. Default is 100.0%. ",124],["Density Reverberation density (modal density) in percent. Ranges from 0.0 to 100.0. Default is 100.0%. ",124],["HFReference Reference high frequency in Hz. Ranges from 20.0 to 20000.0. Default is 5000.0 Hz. ",124],["Room LF Room effect low-frequency level in mB. Ranges from -10000.0 to 0.0. Default is 0.0 mB. ",124],["LFReference Reference low-frequency in Hz. Ranges from 20.0 to 1000.0. Default is 250.0 Hz. ",124],["Audio Reverb Filter",125],["The Audio Reverb Filter takes an Audio Clip and distorts it to create a custom reverb effect.",125],["Properties",125],["Property: Function: ",125],["Reverb Preset Custom reverb presets, select user to create your own customized reverbs. ",125],["Dry Level Mix level of dry signal in output in mB. Ranges from -10000.0 to 0.0. Default is 0. ",125],["Room Room effect level at low frequencies in mB. Ranges from -10000.0 to 0.0. Default is 0.0. ",125],["Room HF Room effect high-frequency level in mB. Ranges from -10000.0 to 0.0. Default is 0.0. ",125],["Room LF Room effect low-frequency level in mB. Ranges from -10000.0 to 0.0. Default is 0.0. ",125],["Decay Time Reverberation decay time at low-frequencies in seconds. Ranges from 0.1 to 20.0. Default is 1.0. ",125],["Decay HFRatio Decay HF Ratio : High-frequency to low-frequency decay time ratio. Ranges from 0.1 to 2.0. Default is 0.5. ",125],["Reflections Level Early reflections level relative to room effect in mB. Ranges from -10000.0 to 1000.0. Default is -10000.0. ",125],["Reflections Delay Early reflections delay time relative to room effect in mB. Ranges from -10000.0 to 2000.0. Default is 0.0. ",125],["Reverb Level Late reverberation level relative to room effect in mB. Ranges from -10000.0 to 2000.0. Default is 0.0. ",125],["Reverb Delay Late reverberation delay time relative to first reflection in seconds. Ranges from 0.0 to 0.1. Default is 0.04. ",125],["HFReference Reference high frequency in Hz. Ranges from 20.0 to 20000.0. Default is 5000.0. ",125],["LFReference Reference low-frequency in Hz. Ranges from 20.0 to 1000.0. Default is 250.0. ",125],["Diffusion Reverberation diffusion (echo density) in percent. Ranges from 0.0 to 100.0. Default is 100.0. ",125],["Density Reverberation density (modal density) in percent. Ranges from 0.0 to 100.0. Default is 100.0. ",125],["Note: These values can only be modified if your Reverb Preset is set to User, else these values will be grayed out and they will have default values for each preset.",125],["Reverb Zones",126],["Reverb Zones take an Audio Clip and distorts it depending where the audio listener is located inside the reverb zone. They are used when you want to gradually change from a point where there is no ambient effect to a place where there is one, for example when you are entering a cavern.",126],["Properties",126],["Property: Function: ",126],["Min Distance Represents the radius of the inner circle in the gizmo, this determines the zone where there is a gradually reverb effect and a full reverb zone. ",126],["Max Distance Represents the radius of the outer circle in the gizmo, this determines the zone where there is no effect and where the reverb starts to get applied gradually. ",126],["Reverb Preset Determines the reverb effect that will be used by the reverb zone. ",126],["This diagram illustrates the properties of the reverb zone.",126],["Hints",126],["You can mix reverb zones to create combined effects.",126],["Audio Source",127],["The Audio Source plays back an Audio Clip in the scene. The clip can be played to an audio listener or through an audio mixer. If the Audio Clip is a 3D clip, the source is played back at a given position and will attenuate over distance. The audio can be spread out between speakers (stereo to 7.1) (Spread) and morphed between 3D and 2D (PanLevel). This can be controlled over distance with falloff curves. Also, if the listener is within one or multiple Reverb Zones, reverberations is applied to the source. Individual filters can be applied to each audio source for an even richer audio experience. See Audio Effects for more details.",127],["Properties",127],["Property: Function: ",127],["Audio Clip Reference to the sound clip file that will be played. ",127],["Output The sound can be output through an audio listener or an audio mixer. ",127],["Mute If enabled the sound will be playing but muted. ",127],["Bypass Effects This is to quickly \"by-pass\" filter effects applied to the audio source. An easy way to turn all effects on/off. ",127],["Bypass Listener Effects This is to quickly turn all Listener effects on/off. ",127],["Bypass Reverb Zones This is to quickly turn all Reverb Zones on/off. ",127],["Play On Awake If enabled, the sound will start playing the moment the scene launches. If disabled, you need to start it using the Play() command from scripting. ",127],["Loop Enable this to make the Audio Clip loop when it reaches the end. ",127],["Priority Determines the priority of this audio source among all the ones that coexist in the scene. (Priority: 0 = most important. 256 = least important. Default = 128.). Use 0 for music tracks to avoid it getting occasionally swapped out. ",127],["Volume How loud the sound is at a distance of one world unit (one meter) from the Audio Listener. ",127],["Pitch Amount of change in pitch due to slowdown/speed up of the Audio Clip. Value 1 is normal playback speed. ",127],["3D Sound Settings Settings that are applied to the audio source if the Audio Clip is a 3D Sound. ",127],["Pan Level Sets how much the 3d engine has an effect on the audio source. ",127],["Spread Sets the spread angle to 3d stereo or multichannel sound in speaker space. ",127],["Doppler Level Determines how much doppler effect will be applied to this audio source (if is set to 0, then no effect is applied). ",127],["Min Distance Within the MinDistance, the sound will stay at loudest possible. Outside MinDistance it will begin to attenuate. Increase the MinDistance of a sound to make it 'louder' in a 3d world, and decrease it to make it 'quieter' in a 3d world. ",127],["Max Distance The distance where the sound stops attenuating at. Beyond this point it will stay at the volume it would be at MaxDistance units from the listener and will not attenuate any more. ",127],["Rolloff Mode How fast the sound fades. The higher the value, the closer the Listener has to be before hearing the sound.(This is determined by a Graph). ",127],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Logarithmic Rolloff The sound is loud when you are close to the audio source, but when you get away from the object it decreases significantly fast. ",127],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Linear Rolloff The further away from the audio source you go, the less you can hear it. ",127],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Custom Rolloff The sound from the audio source behaves accordingly to how you set the graph of roll offs. ",127],["2D Sound Settings Settings that are applied to the audio source if the Audio clip is a 2D Sound. ",127],["Pan 2D Sets how much the engine has an effect on the audio source. ",127],["Types of Rolloff",127],["There are three Rolloff modes: Logarithmic, Linear and Custom Rolloff. The Custom Rolloff can be modified by modifying the volume distance curve as described below. If you try to modify the volume distance function when it is set to Logarithmic or Linear, the type will automatically change to Custom Rolloff.",127],["Distance Functions",127],["There are several properties of the audio that can be modified as a function of the distance between the audio source and the audio listener.",127],["Volume: Amplitude(0.0 - 1.0) over distance.",127],["Pan: Left(-1.0) to Right(1.0) over distance.",127],["Spread: Angle (degrees 0.0 - 360.0) over distance.",127],["Low-Pass (only if LowPassFilter is attached to the AudioSource): Cutoff Frequency (22000.0-10.0) over distance.",127],["To modify the distance functions, you can edit the curves directly. For more information, see the guide to Editing Curves.",127],["Creating Audio Sources",127],["Audio Sources don't do anything without an assigned Audio Clip. The Clip is the actual sound file that will be played back. The Source is like a controller for starting and stopping playback of that clip, and modifying other audio properties.",127],["To create a new Audio Source:",127],["Import your audio files into your Unity Project. These are now Audio Clips.",127],["Go to GameObject-&gt;Create Empty from the menubar.",127],["With the new GameObject selected, select Component-&gt;Audio-&gt;Audio Source.",127],["Assign the Audio Clip property of the Audio Source Component in the Inspector.",127],["Note: If you want to create an Audio Source just for one Audio Clip that you have in the Assets folder then you can just drag that clip to the scene view - a GameObject with an Audio Source component will be created automatically for it. Dragging a clip onto on existing GameObject will attach the clip along with a new Audio Source if there isn't one already there. If the object does already have an Audio Source then the newly dragged clip will replace the one that the source currently uses.",127],["Platform specific details",127],["ios",127],["On mobile platforms compressed audio is encoded as MP3 for speedier decompression. Beware that this compression can remove samples at the end of the clip and potentially break a \"perfect-looping\" clip. Make sure the clip is right on a specific MP3 sample boundary to avoid sample clipping - tools to perform this task are widely available.",127],["For performance reasons audio clips can be played back using the Apple hardware codec. To enable this, check the \"Use Hardware\" checkbox in the import settings. See the Audio Clip documentation for more details.",127],["Android",127],["On mobile platforms compressed audio is encoded as MP3 for speedier decompression. Beware that this compression can remove samples at the end of the clip and potentially break a \"perfect-looping\" clip. Make sure the clip is right on a specific MP3 sample boundary to avoid sample clipping - tools to perform this task are widely available.",127],["Creating the Avatar",128],["After a model file (FBX, COLLADA, etc.) is imported, you can specify what kind of rig it is in the Rig tab of the Model Importer options.",128],["Humanoid animations",128],["For a Humanoid rig, select Humanoid and click Apply. Mecanim will attempt to match up your existing bone structure to the Avatar bone structure. In many cases, it can do this automatically by analysing the connections between bones in the rig.",128],["If the match has succeeded, you will see a check mark next to the Configure menu",128],["Also, in the case of a successful match, an Avatar sub-asset is added to the model asset, which you will be able to see in the project view hierarchy.",128],["Selecting the avatar sub-asset will bring up the inspector.  You can then configure the avatar.",128],["If Mecanim was unable to create the Avatar, you will see a cross next to the Configure button, and no Avatar sub-asset will be added. When this happens, you need to configure the avatar manually.",128],["Non-humanoid animations",128],["Two options for non-humanoid animation are provided: Generic and Legacy. Generic animations are imported using the Mecanim system but don't take advantage of the extra features available for humanoid animations. Legacy animations use the animation system that was provided by Unity before Mecanim. There are some cases where it is still useful to work with legacy animations (most notably with legacy projects that you don't want to update fully) but they are seldom needed for new projects. See this section of the manual for further details on legacy animations.",128],["Avatar Mask",129],["Masking allows you to discard some of the animation data within a clip, allowing the clip to animate only parts of the object or character rather than the entire thing.  For example, you may have a standard walking animation that includes both arm and leg motion, but if a character is carrying a large object with both hands then you wouldn't want his arms to swing by his sides as he walks. However, you could still use the standard walking animation while carrying the object by using a mask to only play the upper body portion of the carrying animation over the top of the walking animation.",129],["Masking can be applied to animation clips either during import time, or at runtime. Masking during import time is preferable, because it allows the discarded animation data to be omitted from your build, making filesize and memory footprint smaller. It also makes for faster processing speed because there is less animation data to be blended at runtime. In some cases, import masking may not be suitable for your purposes, in which case you can apply a mask at runtime by creating an Avatar Mask asset, and using it in the layer settings of your Animator Controller. This page relates to creating an Avatar Mask asset.",129],["There are two ways to define which parts of your animation should be masked. If your animation uses a Humanoid avatar, you have the option of using the humanoid body selection method which allows you to click on a simplified diagram of a humanoid body to select or deselect certain parts to mask.",129],["The body parts included are: Head, Left Arm, Right Arm, Left Hand, Right Hand, Left Leg, Right Leg and Root (which is denoted by the \"shadow\" under the feet).",129],["In the body mask, you can also toggle inverse kinematics (IK) for hands and feet, which will determine whether or not IK curves will be included in animation blending.",129],["Click the avatar section to toggle inclusion or exclusion (green/red)",129],["Double click in empty space surrounding the avatar to toggle all",129],["Alternatively, if your animation does not use a Humanoid avatar, or if you want more detailed control over which individual bones are masked off, you can use the Transform method to select or deselect portions of the model's hierarchy to mask. To do this, you must assign a reference to the avatar whose transform you would like to mask off, then click the \"Import Skeleton\" button. You will then see the hierarchy of the avatar listed in the inspector. Each bone has a checkbox allowing you to select or deselect parts of the hierarchy to use as your mask.",129],["Mask assets can be used in Animator Controllers, when specifying Animation Layers to apply masking at runtime, or in the import settings of of your animation files to apply masking during to the import animation.",129],["A benefit of using Masks is that they tend to reduce memory overheads since body parts that are not active do not need their associated animation curves. Also, the unused curves need not be calculated during playback which will tend to reduce the CPU overhead of the animation.",129],["Blend Trees",130],["A common task in game animation is to blend between two or more similar motions. Perhaps the best known example is the blending of walking and running animations according to the character's speed. Another example is a character leaning to the left or right as he turns during a run.",130],["It is important to distinguish between Transitions and Blend Trees. While both are used for creating smooth animation, they are used for different kinds of situations.",130],["Transitions are used for transitioning smoothly from one Animation State to another over a given amount of time. Transitions are specified as part of an Animation State Machine. A transition from one motion to a completely different motion is usually fine if the transition is quick.",130],["Blend Trees are used for allowing multiple animations to be blended smoothly by incorporating parts of them all to varying degrees. The amount that each of the motions contributes to the final effect is controlled using a blending parameter, which is just one of the numeric animation parameters associated with the Animator Controller. In order for the blended motion to make sense, the motions that are blended must be of similar nature and timing. Blend Trees are a special type of state in an Animation State Machine.",130],["Examples of similar motions could be various walk and run animations. In order for the blend to work well, the movements in the clips must take place at the same points in normalized time. For example, walking and running animations can be aligned so that the moments of contact of foot to the floor take place at the same points in normalized time (e.g. the left foot hits at 0.0 and the right foot at 0.5). Since normalized time is used, it doesn't matter if the clips are of different length.",130],["Using Blend Trees",130],["To start working with a new Blend Tree, you need to:",130],["Right-click on empty space on the Animator Controller Window.",130],["Select Create State &gt; From New Blend Tree from the context menu that appears.",130],["Double-click on the Blend Tree to enter the Blend Tree Graph.",130],["The Animator Window now shows a graph of the entire Blend Tree while the Inspector shows the currently selected node and its immediate children.",130],["This gives a graphical visualization of how the animations are combined as the parameter value changes (as you drag the slider, the arrows from the tree root change their shading to show the dominant animation clip).",130],["You can select any of the nodes in the Blend Tree graph to inspect it in the Inspector. If the selected node is an Animation Clip the Inspector for that Animation Clip will be shown. The settings will be read-only if the animation is imported from a model. If the node is a Blend Node, the Inspector for Blend Nodes will be shown.",130],["You can choose either 1D or 2D blending from the Blend Type menu; the differences between the two types are described on their own pages in this section.",130],["Blend Trees and Root Motion",130],["The blending between animations is handled using linear interpolation (ie, the amount of each animation is an average of the separate animations weighted by the blending parameter). However, you should note that root motion is not interpolated in the same way. See the page about root motion for further details about how this might affect your characters.",130],["Box Collider",131],["The Box Collider is a basic cube-shaped collision primitive.",131],["Properties",131],["Property: Function: ",131],["Is Trigger If enabled, this Collider is used for triggering events, and is ignored by the physics engine. ",131],["Material Reference to the Physics Material that determines how this Collider interacts with others. ",131],["Center The position of the Collider in the object's local space. ",131],["Size The size of the Collider in the X, Y, Z directions. ",131],["Details",131],["Box colliders are obviously useful for anything roughy box-shaped, such as a crate or a chest. However, a thin box can be used as a floor, wall or ramp and the box shape is also a useful element in a compound collider.",131],["Box Collider 2D",132],["The Box Collider 2D component is a collider for use with 2D physics. The collider's shape is a rectangle with a given position, width and height in the local coordinate space of a Sprite. Note that the rectangle is axis-aligned, ie, its edges are parallel to the X or Y axes of local space.",132],["Property: Function: ",132],["Material A physics material that determines properties of collisions, such as friction and bounce. ",132],["Is Trigger Does the collider behave as a trigger? ",132],["Used by Effector Whether the collider is used by an attached effector or not. ",132],["Offset The local offset of the collider geometry. ",132],["Size The size of the box in local space units. ",132],["Camera",133],["Cameras are the devices that capture and display the world to the player. By customizing and manipulating cameras, you can make the presentation of your game truly unique. You can have an unlimited number of cameras in a scene. They can be set to render in any order, at any place on the screen, or only certain parts of the screen.",133],["Properties",133],["Property: Function: ",133],["Clear Flags Determines which parts of the screen will be cleared. This is handy when using multiple Cameras to draw different game elements. ",133],["Background Color applied to the remaining screen after all elements in view have been drawn and there is no skybox. ",133],["Culling Mask Include or omit layers of objects to be rendered by the Camera. Assign layers to your objects in the Inspector. ",133],["Projection Toggles the camera's capability to simulate perspective. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Perspective Camera will render objects with perspective intact. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Orthographic Camera will render objects uniformly, with no sense of perspective. ",133],["Size (when Orthographic is selected) The viewport size of the Camera when set to Orthographic. ",133],["Field of view (when Perspective is selected) Width of the Camera's view angle, measured in degrees along the local Y axis. ",133],["Clipping Planes Distances from the camera to start and stop rendering. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Near The closest point relative to the camera that drawing will occur. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Far The furthest point relative to the camera that drawing will occur. ",133],["Normalized View Port Rect Four values that indicate where on the screen this camera view will be drawn, in Screen Coordinates (values 0-1). ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X The beginning horizontal position that the camera view will be drawn. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y The beginning vertical position that the camera view will be drawn. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;W (Width) Width of the camera output on the screen. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H (Height) Height of the camera output on the screen. ",133],["Depth The camera's position in the draw order. Cameras with a larger value will be drawn on top of cameras with a smaller value. ",133],["Rendering Path Options for defining what rendering methods will be used by the camera. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use Player Settings This camera will use whichever Rendering Path is set in the Player Settings. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Vertex Lit All objects rendered by this camera will be rendered as Vertex-Lit objects. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Forward All objects will be rendered with one pass per material. ",133],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Deferred Lighting All objects will be drawn once without lighting, then lighting of all objects will be rendered together at the end of the render queue. ",133],["Target Texture Reference to a Render Texture that will contain the output of the Camera view. Making this reference will disable this Camera's capability to render to the screen. ",133],["HDR Enables High Dynamic Range rendering for this camera. ",133],["Details",133],["Cameras are essential for displaying your game to the player. They can be customized, scripted, or parented to achieve just about any kind of effect imaginable. For a puzzle game, you might keep the Camera static for a full view of the puzzle. For a first-person shooter, you would parent the Camera to the player character, and place it at the character's eye level. For a racing game, you'd likely want to have the Camera follow your player's vehicle.",133],["You can create multiple Cameras and assign each one to a different Depth. Cameras are drawn from low Depth to high Depth. In other words, a Camera with a Depth of 2 will be drawn on top of a Camera with a depth of 1. You can adjust the values of the Normalized View Port Rectangle property to resize and position the Camera's view onscreen. This can create multiple mini-views like missile cams, map views, rear-view mirrors, etc.",133],["Render Path",133],["Unity supports different Rendering Paths. You should choose which one you use depending on your game content and target platform / hardware. Different rendering paths have different features and performance characteristics that mostly affect Lights and Shadows.",133],["The rendering Path used by your project is chosen in Player Settings. Additionally, you can override it for each Camera.",133],["For more info on rendering paths, check the rendering paths page.",133],["Clear Flags",133],["Each Camera stores color and depth information when it renders its view. The portions of the screen that are not drawn in are empty, and will display the skybox by default. When you are using multiple Cameras, each one stores its own color and depth information in buffers, accumulating more data as each Camera renders. As any particular Camera in your scene renders its view, you can set the Clear Flags to clear different collections of the buffer information. This is done by choosing one of the four options:",133],["Skybox",133],["This is the default setting. Any empty portions of the screen will display the current Camera's skybox. If the current Camera has no skybox set, it will default to the skybox chosen in the Render Settings (found in Edit-&gt;Render Settings). It will then fall back to the Background Color. Alternatively a Skybox component can be added to the camera. If you want to create a new Skybox, you can use this guide.",133],["Solid Color",133],["Any empty portions of the screen will display the current Camera's Background Color.",133],["Depth Only",133],["If you wanted to draw a player's gun without letting it get clipped inside the environment, you would set one Camera at Depth 0 to draw the environment, and another Camera at Depth 1 to draw the weapon alone. The weapon Camera's Clear Flags should be set to to depth only. This will keep the graphical display of the environment on the screen, but discard all information about where each object exists in 3-D space. When the gun is drawn, the opaque parts will completely cover anything drawn, regardless of how close the gun is to the wall.",133],["Don't Clear",133],["This mode does not clear either the color or the depth buffer. The result is that each frame is drawn over the next, resulting in a smear-looking effect. This isn't typically used in games, and would likely be best used with a custom shader.",133],["Clip Planes",133],["The Near and Far Clip Plane properties determine where the Camera's view begins and ends. The planes are laid out perpendicular to the Camera's direction and are measured from the its position. The Near plane is the closest location that will be rendered, and the Far plane is the furthest.",133],["The clipping planes also determine how depth buffer precision is distributed over the scene. In general, to get better precision you should move the Near plane as far as possible.",133],["Note that the near and far clip planes together with the planes defined by the field of view of the camera describe what is popularly known as the camera frustum. Unity ensures that when rendering your objects those which are completely outside of this frustum are not displayed. This is called Frustum Culling. Frustum Culling happens irrespective of whether you use Occlusion Culling in your game.",133],["For performance reasons, you might want to cull small objects earlier. For example, small rocks and debris could be made invisible at much smaller distance than large buildings. To do that, put small objects into a separate layer and setup per-layer cull distances using Camera.layerCullDistances script function.",133],["Culling Mask",133],["The Culling Mask is used for selectively rendering groups of objects using Layers. More information on using layers can be found here.",133],["Commonly, it is good practice to put your User Interface on a different layer, then render it by itself with a separate Camera set to render the UI layer by itself.",133],["In order for the UI to display on top of the other Camera views, you'll also need to set the Clear Flags to Depth only and make sure that the UI Camera's Depth is higher than the other Cameras.",133],["Normalized Viewport Rectangle",133],["Normalized Viewport Rectangles are specifically for defining a certain portion of the screen that the current camera view will be drawn upon. You can put a map view in the lower-right hand corner of the screen, or a missile-tip view in the upper-left corner. With a bit of design work, you can use Viewport Rectangle to create some unique behaviors.",133],["It's easy to create a two-player split screen effect using Normalized Viewport Rectangle. After you have created your two cameras, change both camera H value to be 0.5 then set player one's Y value to 0.5, and player two's Y value to 0. This will make player one's camera display from halfway up the screen to the top, and player two's camera will start at the bottom and stop halfway up the screen.",133],["Orthographic",133],["Marking a Camera as Orthographic removes all perspective from the Camera's view. This is mostly useful for making isometric or 2D games.",133],["Note that fog is rendered uniformly in orthographic camera mode and may therefore not appear as expected. Read more about why in the component reference on Render Settings.",133],["Render Texture",133],["It will place the camera's view onto a Texture that can then be applied to another object. This makes it easy to create sports arena video monitors, surveillance cameras, reflections etc.",133],["Hints",133],["Cameras can be instantiated, parented, and scripted just like any other GameObject.",133],["To increase the sense of speed in a racing game, use a high Field of View.",133],["Cameras can be used in physics simulation if you add a Rigidbody Component.",133],["There is no limit to the number of Cameras you can have in your scenes.",133],["Orthographic cameras are great for making 3D user interfaces",133],["If you are experiencing depth artifacts (surfaces close to each other flickering), try setting Near Plane to as large as possible.",133],["Cameras cannot render to the Game Screen and a Render Texture at the same time, only one or the other.",133],["There's an option of rendering a Camera's view to a texture, called Render-to-Texture, for even more unique effects.",133],["Unity comes with pre-installed Camera scripts, found in Components-&gt;Camera Control. Experiment with them to get a taste of what's possible.",133],["Canvas",134],["The Canvas component represents the abstract space in which the UI is laid out and rendered. All UI elements must be children of a GameObject that has a Canvas component attached. When you create a UI element object from the menu (GameObject > Create UI), a Canvas object will be created automatically if there isn't one in the scene already.",134],["Properties",134],["Property: Function: ",134],["Render Mode The way the UI is rendered to the screen or as an object in 3D space (see below). The options are Screen Space - Overlay, Screen Space - Camera and World Space. ",134],["Pixel Perfect (Screen Space modes only) Should the UI be rendered without antialiasing for precision? ",134],["Render Camera (Screen Space - Camera mode only) The camera to which the UI should be rendered (see below). ",134],["Plane Distance (Screen Space - Camera mode only) The distance at which the UI plane should be placed in front of the camera. ",134],["Event Camera (World Space mode only) The camera that will be used to process UI events. ",134],["Receives Events Are UI events processed by this Canvas? ",134],["Details",134],["A single Canvas for all UI elements is sufficient but multiple Canvases in the scene is possible. It is also possible use nested Canvases, where one Canvas is placed as a child of another for optimization purposes. A nested Canvas uses the same Render Mode as its parent.",134],["Traditionally, UIs are rendered as if they were simple graphic designs drawn directly on the screen. That is to say, they have no concept of a 3D space being viewed by a camera. Unity supports this kind of screen space rendering but also allows UIs to rendered as objects in the scene, depending on the value of the Render Mode property. The modes available are Screen Space - Overlay, Screen Space - Camera and World Space.",134],["Screen Space - Overlay",134],["In this mode, the Canvas is scaled to fit the screen and then rendered directly without reference to the scene or a camera (the UI will be rendered even if there is no camera in the scene at all). If the screen's size or resolution are changed then the UI will automatically rescale to fit. The UI will be drawn over any other graphics such as the camera view.",134],["Screen Space - Camera",134],["In this mode, the Canvas is rendered as if it were drawn on a plane object some distance in front of a given camera. The onscreen size of the UI does not vary with the distance since it is always rescaled to fit exactly within the camera frustum. If the screen's size or resolution or the camera frustum are changed then the UI will automatically rescale to fit. Any 3D objects in the scene that are closer to the camera than the UI plane will be rendered in front of the UI, while objects behind the plane will be obscured.",134],["World Space",134],["This mode renders the UI as if it were a plane object in the scene. Unlike Screen Space - Camera mode, however, the plane need not face the camera and can be oriented however you like. The size of the Canvas can be set using its Rect Transform but its onscreen size will depend on the viewing angle and distance of the camera. Other scene objects can pass behind, through or in front of the Canvas.",134],["Hints",134],["Read more about setting up a World Space Canvas on the Creating a World Space UI page.",134],["For information about making your Canvas and UI scale to different resolutions or aspect ratios, see the Designing UI for Multiple Resolutions page as well as the Canvas Scaler page.",134],["Canvas Group",135],["The Canvas Group can be used to control certain aspects of a whole group of UI elements from one place without needing to handle them each individually. The properties of the Canvas Group affect the GameObject it is on as well as all children.",135],["Properties",135],["Property: Function: ",135],["Alpha The opacity of the UI elements in this group. The value is between 0 and 1 where 0 is fully transparent and 1 is fully opaque. Note that elements retain their own transparency as well, so the Canvas Group alpha and the alpha values of the individual UI elements are multiplied with each other. ",135],["Interactable Determines if this component will accept input.  When it is set to false interaction is disabled. ",135],["Block Raycasts Will this component act as a collider for Raycasts? You will need to call the RayCast function on the graphic raycaster attached to the Canvas.  This does not apply to Physics.Raycast. ",135],["Ignore Parent Groups Will this group also be affected by the settings in Canvas Group components further up in the Game Object hierarchy, or will it ignore those and hence override them? ",135],["Details",135],["Typical uses of Canvas Group are:",135],["Fading in or out a whole window by adding a Canvas Group on the GameObject of the Window and control its Alpha property.",135],["Making a whole set of controls non-interactable (\"grayed out\") by adding a Canvas Group to a parent GameObject and setting its Interactable property to false.",135],["Making one or more UI elements not block mouse events by placing a Canvas Group component on the element or one of its parents and setting its Block Raycasts property to false.",135],["Canvas Renderer",136],["The Canvas Renderer component renders a graphical UI object contained within a Canvas.",136],["Properties",136],["The Canvas Renderer has no properties exposed in the inspector.",136],["Details",136],["The standard UI objects available from the menu (GameObject &gt; Create UI) all have Canvas Renderers attached wherever they are required but you many need to add this component manually for custom UI objects. Although there are no properties exposed in the inspector, a few properties and function can be accessed from scripts - see the CanvasRenderer page in the Script Reference for full details.",136],["Capsule Collider",137],["The Capsule Collider is made of two half-spheres joined together by a cylinder. It is the same shape as the Capsule primitive.",137],["Properties",137],["Property: Function: ",137],["Is Trigger If enabled, this Collider is used for triggering events, and is ignored by the physics engine. ",137],["Material Reference to the Physics Material that determines how this Collider interacts with others. ",137],["Center The position of the Collider in the object's local space. ",137],["Radius The radius of the Collider's local width. ",137],["Height The total height of the Collider. ",137],["Direction The axis of the capsule's lengthwise orientation in the object's local space. ",137],["Details",137],["You can adjust the Capsule Collider's Radius and Height independently of each other. It is used in the Character Controller and works well for poles, or can be combined with other Colliders for unusual shapes.",137],["Character Controller",138],["The Character Controller is mainly used for third-person or first-person player control that does not make use of Rigidbody physics.",138],["Properties",138],["Property: Function: ",138],["Slope Limit Limits the collider to only climb slopes that are less steep (in degrees) than the indicated value. ",138],["Step Offset The character will step up a stair only if it is closer to the ground than the indicated value. This should not be greater than the Character Controller's height or it will generate an error. ",138],["Skin width Two colliders can penetrate each other as deep as their Skin Width. Larger Skin Widths reduce jitter. Low Skin Width can cause the character to get stuck. A good setting is to make this value 10% of the Radius. ",138],["Min Move Distance If the character tries to move below the indicated value, it will not move at all. This can be used to reduce jitter. In most situations this value should be left at 0. ",138],["Center This will offset the Capsule Collider in world space, and won't affect how the Character pivots. ",138],["Radius Length of the Capsule Collider's radius. This is essentially the width of the collider. ",138],["Height The Character's Capsule Collider height. Changing this will scale the collider along the Y axis in both positive and negative directions. ",138],["Details",138],["The traditional Doom-style first person controls are not physically realistic. The character runs 90 miles per hour, comes to a halt immediately and turns on a dime. Because it is so unrealistic, use of Rigidbodies and physics to create this behavior is impractical and will feel wrong. The solution is the specialized Character Controller. It is simply a capsule shaped Collider which can be told to move in some direction from a script. The Controller will then carry out the movement but be constrained by collisions. It will slide along walls, walk up stairs (if they are lower than the Step Offset) and walk on slopes within the Slope Limit.",138],["The Controller does not react to forces on its own and it does not automatically push Rigidbodies away.",138],["If you want to push Rigidbodies or objects with the Character Controller, you can apply forces to any object that it collides with via the OnControllerColliderHit() function through scripting.",138],["On the other hand, if you want your player character to be affected by physics then you might be better off using a Rigidbody instead of the Character Controller.",138],["Fine-tuning your character",138],["You can modify the Height and Radius to fit your Character's mesh. It is recommended to always use around 2 meters for a human-like character. You can also modify the Center of the capsule in case your pivot point is not at the exact center of the Character.",138],["Step Offset can affect this too, make sure that this value is between 0.1 and 0.4 for a 2 meter sized human.",138],["Slope Limit should not be too small. Often using a value of 90 degrees works best. The Character Controller will not be able to climb up walls due to the capsule shape.",138],["Don't get stuck",138],["The Skin Width is one of the most critical properties to get right when tuning your Character Controller.",138],["If your character gets stuck it is most likely because your Skin Width is too small. The Skin Width will let objects slightly penetrate the Controller but it removes jitter and prevents it from getting stuck.",138],["It's good practice to keep your Skin Width at least greater than 0.01 and more than 10% of the Radius.",138],["We recommend keeping Min Move Distance at 0.",138],["See the Character Controller script reference here",138],["You can download an example project showing pre-setup animated and moving character controllers from the Resources area on our website.",138],["Hints",138],["Try adjusting your Skin Width if you find your character getting stuck frequently.",138],["The Character Controller can affect objects using physics if you write your own scripts.",138],["The Character Controller can not be affected by objects through physics.",138],["Note that changing Character Controller properties in the inspector will recreate the controller in the scene, so any existing Trigger contacts will get lost, and you will not get any OnTriggerEntered messages until the controller is moved again.",138],["Character Joint",139],["Character Joints are mainly used for Ragdoll effects. They are an extended ball-socket joint which allows you to limit the joint on each axis.",139],["If you just want to set up a ragdoll read about Ragdoll Wizard.",139],["Properties",139],["Property: Function: ",139],["Connected Body Optional reference to the Rigidbody that the joint is dependent upon. If not set, the joint connects to the world. ",139],["Anchor The point in the GameObject's local space where the joint rotates around. ",139],["Axis The twist axes. Visualized with the orange gizmo cone. ",139],["Auto Configure Connected Anchor If this is enabled, then the Connected Anchor position will be calculated automatically to match the global position of the anchor property. This is the default behavior. If this is disabled, you can configure the position of the connected anchor manually. ",139],["Connected Anchor Manual configuration of the connected anchor position. ",139],["Swing Axis The swing axis. Visualized with the green gizmo cone. ",139],["Low Twist Limit The lower limit of the joint. See below. ",139],["High Twist Limit The higher limit of the joint. See below. ",139],["Swing 1 Limit Lower limit around the defined Swing Axis. See below. ",139],["Swing 2 Limit Upper limit around the defined Swing Axis. See below. ",139],["Break Force The force that needs to be applied for this joint to break. ",139],["Break Torque The torque that needs to be applied for this joint to break. ",139],["Enable Collision When checked, this enables collisions between bodies connected with a joint. ",139],["Details",139],["Character joints give you a lot of possibilities for constraining motion like with a universal joint.",139],["The twist axis (visualized with the orange gizmo) gives you most control over the limits as you can specify a lower and upper limit in degrees (the limit angle is measured relative to the starting position). A value of -30 in Low Twist Limit-&gt;Limit and 60 in High Twist Limit-&gt;Limit limits the rotation around the twist axis (orange gizmo) between -30 and 60 degrees.",139],["The Swing 1 Limit limits the rotation around the swing axis (green axis). The limit angle is symmetric. Thus a value of eg. 30 will limit the rotation between -30 and 30.",139],["The Swing 2 Limit axis doesn't have a gizmo but the axis is orthogonal to the 2 other axes.",139],["Just like the previous axis the limit is symmetric, thus a value of eg. 40 will limit the rotation around that axis between -40 and 40 degrees.",139],["For each of the limits the following values can be set:",139],["Property: Function: ",139],["Bounciness A value of 0 will not bounce. A value of 1 will bounce without any loss of energy. ",139],["Spring The spring force used to keep the two objects together. ",139],["Damper The damper force used to dampen the spring force. ",139],["Contact Distance Within the contact distance from the limit contacts will persist in order to avoid jitter. ",139],["Breaking joints",139],["You can use the Break Force and Break Torque properties to set limits for the joint's strength. If these are less than infinity, and a force/torque greater than these limits are applied to the object, its Fixed Joint will be destroyed and will no longer be confined by its restraints.",139],["Hints",139],["You do not need to assign a Connected Body to your joint for it to work.",139],["Character Joints require your object to have a Rigidbody attached.",139],["For Character Joints made with the Ragdoll wizard, take a note that the setup is made such that the joint's Twist axis corresponds with the limb's largest swing axis, the joint's Swing 1 axis corresponds with limb's smaller swing axis and joint's Swing 2 is for twisting the limb. This naming scheme is for legacy reasons.",139],["Circle Collider 2D",140],["The Circle Collider 2D class is a collider for use with 2D physics. As its name implies, the collider's shape is a circle with a given position and radius in the local coordinate space of a Sprite.",140],["Property: Function: ",140],["Material A physics material that determines properties of collisions, such as friction and bounce. ",140],["Is Trigger Does the collider behave as a trigger? ",140],["Used by Effector Whether the collider is used by an attached effector or not. ",140],["Offset The local offset of the collider geometry. ",140],["Radius Radius of the circle in local space units. ",140],["Cloth",141],["TODO",141],["Configurable Joint",142],["Configurable Joints are extremely customizable. They expose all joint-related properties of PhysX, so they are capable of creating behaviors similar to all other joint types.",142],["Details",142],["There are two primary functions that the Configurable Joint can perform: movement/rotation restriction and movement/rotation acceleration. These functions depend on a number of inter-dependent properties. It may require some experimentation to create the exact behavior you're trying to achieve. We'll now give you an overview of the Joint's functionality to make your experimentation as simple as possible.",142],["Movement/Rotation Restriction",142],["You specify restriction per axis and per motion type. XMotion, YMotion, and ZMotion allow you to define translation along that axis. Angular XMotion, Angular YMotion, and Angular ZMotion allow you to define rotation around that axis. Each one of these properties can be set to Free (unrestricted), Limited (restricted based on limits you can define), or Locked (restricted to zero movement).",142],["Limiting Motion",142],["When you have any of the \"Motion\" properties set to Limited, you can define the limitations of movement for that axis. You do this by changing the values of one of the \"Limit\" properties.",142],["For translation of movement (non-angular), the Linear Limit property will define the maximum distance the object can move from its origin. Translation on any \"Motion\" properties set to Limited will be restricted according to Linear Limit-&gt;Limit. Think of this Limit property as setting a border around the axis for the object.",142],["Bouncyness, Spring, and Damper will define the behavior of the object when it reaches the Limit on any of the Limited \"Motion\" axes. If all of these values are set to 0, the object will instantly stop moving when it reaches the border. Bouncyness will make the object bounce back away from the border. Spring and Damper will use springing forces to pull the object back to the border. This will soften the border, so the object will be able to pass through the border and be pulled back instead of stopping immediately.",142],["Limiting Rotation",142],["Limiting rotation works almost the same as limiting motion. The difference is that the three \"Angular Motion\" properties all correspond to different \"Angular Limit\" properties. Translation restriction along all 3 axes are defined by the Linear Limit property, and rotation restriction along each of the 3 axes is defined by a separate \"Angular Limit\" property per axis.",142],["Angular XMotion limitation is the most robust, as you can define a Low Angular XLimit and a High Angular XLimit. Therefore if you want to define a low rotation limit of -35 degrees and a high rotation limit of 180 degrees, you can do this. For the Y and Z axes, the low and high rotation limits will be identical, set together by the Limit property of Angular YLimit or Angular ZLimit.",142],["The same rules about object behavior at the rotation limits from the Limiting Motion section applies here.",142],["Movement/Rotation Acceleration",142],["You specify object movement or rotation in terms of moving the object toward a particular position/rotation, or velocity/angular velocity. This system works by defining the \"Target\" value you want to move toward, and using a \"Drive\" to provide acceleration which will move the object toward that target. Each \"Drive\" has a Mode, which you use to define which \"Target\" the object is moving toward.",142],["Translation Acceleration",142],["The XDrive, YDrive, and ZDrive properties are what start the object moving along that axis. Each Drive's Mode will define whether the object should be moving toward the Target Position or Target Velocity or both. For example, when XDrive's mode is set to Position, then the object will try to move to the value of Target Position-&gt;X.",142],["When a Drive is using Position in its Mode, its Position Spring value will define how the object is moved toward the Target Position. Similarly, when a Drive is using Velocity in its Mode, its Maximum Force value will define how the object is accelerated to the Target Velocity.",142],["Rotation Acceleration",142],["Rotation acceleration properties: Angular XDrive, Angular YZDrive, and Slerp Drive function the same way as the translation Drives. There is one substantial difference. Slerp Drive behaves differently from the Angular Drive functionality. Therefore you can choose to use either both Angular Drives or Slerp Drive by choosing one from the Rotation Drive Mode. You cannot use both at once.",142],["Properties",142],["Property: Function: ",142],["Anchor The point where the center of the joint is defined. All physics-based simulation will use this point as the center in calculations ",142],["Axis The local axis that will define the object's natural rotation based on physics simulation ",142],["Auto Configure Connected Anchor If this is enabled, then the Connected Anchor position will be calculated automatically to match the global position of the anchor property. This is the default behavior. If this is disabled, you can configure the position of the connected anchor manually. ",142],["Connected Anchor Manual configuration of the connected anchor position. ",142],["Secondary Axis Together, Axis and Secondary Axis define the local coordinate system of the joint. The third axis is set to be orthogonal to the other two. ",142],["XMotion Allow movement along the X axis to be Free, completely Locked, or Limited according to Linear Limit ",142],["YMotion Allow movement along the Y axis to be Free, completely Locked, or Limited according to Linear Limit ",142],["ZMotion Allow movement along the Z axis to be Free, completely Locked, or Limited according to Linear Limit ",142],["Angular XMotion Allow rotation around the X axis to be Free, completely Locked, or Limited according to Low and High Angular XLimit ",142],["Angular YMotion Allow rotation around the Y axis to be Free, completely Locked, or Limited according to Angular YLimit ",142],["Angular ZMotion Allow rotation around the Z axis to be Free, completely Locked, or Limited according to Angular ZLimit ",142],["Linear Limit Boundary defining movement restriction, based on distance from the joint's origin ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Limit The distance in units from the origin to the wall of the boundary ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bouncyness Amount of bounce-back force applied to the object when it reaches the Limit ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Spring Strength of force applied to move the object back to the Limit. Any value other than 0 will implicitly soften the boundary ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Damper Resistance strength against the Spring ",142],["Low Angular XLimit Boundary defining lower rotation restriction, based on delta from original rotation ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Limit The rotation in degrees that the object's rotation should not drop below ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bouncyness Amount of bounce-back torque applied to the object when its rotation reaches the Limit ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Spring Strength of force applied to move the object back to the Limit. Any value other than 0 will implicitly soften the boundary ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Damper Resistance strength against the Spring ",142],["High Angular XLimit Boundary defining upper rotation restriction, based on delta from original rotation. ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Limit The rotation in degrees that the object's rotation should not exceed ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bouncyness Amount of bounce-back torque applied to the object when its rotation reaches the Limit ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Spring Strength of force applied to move the object back to the Limit. Any value other than 0 will implicitly soften the boundary ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Damper Resistance strength against the Spring ",142],["Angular YLimit Boundary defining rotation restriction, based on delta from original rotation ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Limit The rotation in degrees that the object's rotation should not exceed ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bouncyness Amount of bounce-back torque applied to the object when its rotation reaches the Limit ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Spring Strength of torque applied to move the object back to the Limit. Any value other than 0 will implicitly soften the boundary ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Damper Resistance strength against the Spring ",142],["Angular ZLimit Boundary defining rotation restriction, based on delta from original rotation ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Limit The rotation in degrees that the object's rotation should not exceed ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bouncyness Amount of bounce-back torque applied to the object when its rotation reaches the Limit ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Spring Strength of force applied to move the object back to the Limit. Any value other than 0 will implicitly soften the boundary ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Damper Resistance strength against the Spring ",142],["Target Position The desired position that the joint should move into ",142],["Target Velocity The desired velocity that the joint should move along ",142],["XDrive Definition of how the joint's movement will behave along its local X axis ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Mode Set the following properties to be dependent on Target Position, Target Velocity, or both ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Spring Strength of a rubber-band pull toward the defined direction. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Damper Resistance strength against the Position Spring. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Maximum Force Amount of strength applied to push the object toward the defined direction. Only used if Mode includes Velocity ",142],["YDrive Definition of how the joint's movement will behave along its local Y axis ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Mode Set the following properties to be dependent on Target Position, Target Velocity, or both ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Spring Strength of a rubber-band pull toward the defined direction. Only used if Mode includes Position. ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Damper Resistance strength against the Position Spring. Only used if Mode includes Position. ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Maximum Force Amount of strength applied to push the object toward the defined direction. Only used if Mode includes Velocity. ",142],["ZDrive Definition of how the joint's movement will behave along its local Z axis ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Mode Set the following properties to be dependent on Target Position, Target Velocity, or both. ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Spring Strength of a rubber-band pull toward the defined direction. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Damper Resistance strength against the Position Spring. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Maximum Force Amount of strength applied to push the object toward the defined direction. Only used if Mode includes Velocity ",142],["Target Rotation This is a Quaternion. It defines the desired rotation that the joint should rotate into ",142],["Target Angular Velocity This is a Vector3. It defines the desired angular velocity that the joint should rotate into ",142],["Rotation Drive Mode Control the object's rotation with either X &amp; YZ or Slerp Drive by itself ",142],["Angular XDrive Definition of how the joint's rotation will behave around its local X axis. Only used if Rotation Drive Mode is Swing &amp; Twist ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Mode Set the following properties to be dependent on Target Rotation, Target Angular Velocity, or both ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Spring Strength of a rubber-band pull toward the defined direction. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Damper Resistance strength against the Position Spring. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Maximum Force Amount of strength applied to push the object toward the defined direction. Only used if Mode includes Velocity. ",142],["Angular YZDrive Definition of how the joint's rotation will behave around its local Y and Z axes. Only used if Rotation Drive Mode is Swing &amp; Twist ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Mode Set the following properties to be dependent on Target Rotation, Target Angular Velocity, or both ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Spring Strength of a rubber-band pull toward the defined direction. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Damper Resistance strength against the Position Spring. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Maximum Force Amount of strength applied to push the object toward the defined direction. Only used if Mode includes Velocity ",142],["Slerp Drive Definition of how the joint's rotation will behave around all local axes. Only used if Rotation Drive Mode is Slerp Only ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Mode Set the following properties to be dependent on Target Rotation, Target Angular Velocity, or both ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Spring Strength of a rubber-band pull toward the defined direction. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Damper Resistance strength against the Position Spring. Only used if Mode includes Position ",142],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Maximum Force Amount of strength applied to push the object toward the defined direction. Only used if Mode includes Velocity ",142],["Projection Mode Properties to track to snap the object back to its constrained position when it drifts off too much ",142],["Projection Distance Distance from the Connected Body that must be exceeded before the object snaps back to an acceptable position ",142],["Projection Angle Difference in angle from the Connected Body that must be exceeded before the object snaps back to an acceptable position ",142],["Congfigure in World Space If enabled, all Target values will be calculated in World Space instead of the object's Local Space ",142],["Break Force Applied Force values above this number will cause the joint to be destroyed ",142],["Break Torque Applied Torque values above this number will cause the joint to be destroyed ",142],["Enable Collision When checked, this enables collisions between bodies connected with a joint. ",142],["Constant Force",143],["Constant Force is a quick utility for adding constant forces to a Rigidbody. This works great for one shot objects like rockets, if you don't want it to start with a large velocity but instead accelerate.",143],["Properties",143],["Property: Function: ",143],["Force The vector of a force to be applied in world space. ",143],["Relative Force The vector of a force to be applied in the object's local space. ",143],["Torque The vector of a torque, applied in world space. The object will begin spinning around this vector. The longer the vector is, the faster the rotation. ",143],["Relative Torque The vector of a torque, applied in local space. The object will begin spinning around this vector. The longer the vector is, the faster the rotation. ",143],["Details",143],["To make a rocket that accelerates forward set the Relative Force to be along the positive z-axis. Then use the Rigidbody's Drag property to make it not exceed some maximum velocity (the higher the drag the lower the maximum velocity will be). In the Rigidbody, also make sure to turn off gravity so that the rocket will always stay on its path.",143],["Hints",143],["To make an object flow upwards, add a Constant Force with the Force property having a positive Y value.",143],["To make an object fly forwards, add a Constant Force with the Relative Force property having a positive Z value.",143],["Constant Force 2D",144],["Constant Force is a quick utility for adding constant forces to a Rigidbody2D. This works great for one shot objects like rockets, if you don't want it to start with a large velocity but instead accelerate.",144],["It applies both linear and angular (torque) forces continuously to the rigidbody each physics update.",144],["Properties",144],["Property: Function: ",144],["Force The linear force applied to the rigidbody each physics update. ",144],["Relative Force The linear force, relative to the rigid-body coordinate system, applied each physics update. ",144],["Torque The torque applied to the rigidbody each physics update. ",144],["Cubemap",145],["A Cubemap is a collection of six square textures that represent the",145],["reflections on an environment. The six squares form the faces of an imaginary cube that surrounds an",145],["object; each face represents the view along the directions of the world axes",145],["(up, down, left, right, forward and back).",145],["Cubemaps are often used to capture reflections or \"surroundings\" of objects; for example",145],["skyboxes and environment reflections often use cubemaps.",145],["Creating Cubemaps from Textures",145],["Preferred way of creating cubemaps is importing them from specially laid out textures.",145],["Select Cubemap texture import type and Unity should do the rest. Several commonly used cubemap layouts are",145],["supported (and in most cases detected automatically).",145],["Vertical and horizontal cross layouts, as well as column and row of cubemap faces are supported:",145],["Another common layout is LatLong (Latitude-Longitude, sometimes called cylindrical). Panorama images are",145],["often in this layout:",145],["SphereMap (spherical environment map) images can also be found:",145],["By default Unity looks at the aspect ratio of the imported texture to determine the most appopriate layout from",145],["the above. When imported, a cubemap is produced which can be used for skyboxes and reflections:",145],["Selecting Glossy Reflection option is useful for cubemap textures that will be used by",145],["Reflection Probes. It processed cubemap mip levels in a special way",145],["(specular convolution) that can be used to simulate reflections from surfaces of different smoothness:",145],["Legacy Cubemap Assets",145],["Unity also supports creating cubemaps out of six separate textures.",145],["Select Assets &gt; Create &gt; Legacy &gt; Cubemap from the menu,",145],["and drag six textures into empty slots in the inspector.",145],["Property: Function: ",145],["Right..Back Slots Textures for the corresponding cubemap face. ",145],["Face Size Width and Height of each Cubemap face in pixels. The textures will be scaled automatically to fit this size. ",145],["Mipmap Should mipmaps be created? ",145],["Linear Should the cubemap use linear color? ",145],["Readable Should the cubemap allow scripts to access the pixel data? ",145],["Note that it is preferred to create cubemaps using the Cubemap texture import type (see above) - this",145],["way cubemap texture data can be compressed; edge fixups and glossy reflection convolution be performed;",145],["and HDR cubemaps are supported.",145],["Other Techniques",145],["Another useful technique is to generate the cubemap from the contents of a Unity scene using a script.",145],["The Camera.RenderToCubemap function can record the six face",145],["images from any desired position in the scene; the code example on the function's script reference page",145],["adds a menu command to make this task easy.",145],["Distance Joint 2D",146],["The Distance Joint 2D component allows two Sprite objects controlled by rigidbody physics to be attached together to keep them a certain distance apart. Note that unlike the Spring Joint 2D, the Distance Joint applies a hard limit rather than a gradual force to restore the desired distance.",146],["Property: Function: ",146],["Collide Connected Can the two connected objects collide with each other? ",146],["Connected Rigidbody The other Rigidbody2D object that the one with the joint is connected to. If this is null then the othen end of the joint will be fixed at a point in space. ",146],["Anchor Coordinate in local space where the end point of the joint is attached. ",146],["Connected Anchor Coordinate in the other object's local space where its end of the joint is attached. ",146],["Distance The distance that the joint keeps between the two objects. ",146],["Max Distance Only If enabled, the joint will only enforce a maximum distance (ie, the objects can still move closer). If disabled, the distance between the objects will be fixed. ",146],["Details",146],["Both objects connected by the joint must have a Rigidbody 2D component attached (or alternatively, the other end of the joint can be fixed in space by setting Connected Rigidbody to null). The ends of the joint can rotate relative to the objects but the distance between them will be kept constant.",146],["Edge Collider 2D",147],["The Edge Collider 2D component is a collider for use with 2D physics. The collider's shape is defined by a freeform edge made of line segments, so you can adjust it to fit the shape of the Sprite graphic with great precision. Note that this collider's edge need not completely enclose an area (unlike the similar Polygon Collider 2D) and can be as simple as a straight line or an L-shape.",147],["Property: Function: ",147],["Material A physics material that determines properties of collisions, such as friction and bounce. ",147],["Is Trigger Does the collider behave as a trigger? ",147],["Used by Effector Whether the collider is used by an attached effector or not. ",147],["Offset The local offset of the collider geometry. ",147],["Collider Info Non-editable information about the complexity of the generated collider. ",147],["Details",147],["You can edit the polyline directly by holding down the shift key as you move the mouse over an edge or vertex in the Scene view. You can move an existing vertex by shift-dragging when the mouse is over that vertex. If you shift-drag while the mouse is over an edge then a new vertex will be created at the mouse location. You can remove a vertex by holding down the ctrl/cmd key while clicking on it.",147],["Note that you can hide the outline of the 2D move gizmo while editing the collider - just click the foldout arrow on the Sprite Renderer component in the Inspector to collapse it.",147],["Editor settings",148],["The Editor Settings let you choose options that affect the way you work with the editor.",148],["Properties",148],["Property: Function: ",148],["Unity Remote  ",148],["Device The device type you will use for remote testing (Android, iOS or none). ",148],["Compression The type of image compression used when transmitting the game screen to the device. JPEG typically gives higher compression and performance while PNG gives a more accurate representation of the game display. ",148],["Resolution Selects whether the device should show the game display at normal resolution (for graphical accuracy) or downsized (for performance). ",148],["Version Control  ",148],["Mode The version control system that should be used. Different options are available for different systems as described in this section of the manual. ",148],["WWW Security Emulation  ",148],["Host URL For webplayer testing, the editor can \"pretend\" that the game is a webplayer hosted at this URL. ",148],["Asset Serialization  ",148],["Mode To assist with version control merges, Unity can store scene files in a textual format (see the textual scene format pages for further details). If merges will not be performed then Unity can store scenes in a more space efficient binary format or allow both text and binary scene files to exist at the same time. ",148],["Default Behavior Mode  ",148],["Mode Chooses between 2D or 3D editor mode as the default when a new project is created. ",148],["Sprite Packer  ",148],["Mode This chooses whether the Sprite Packer is always enabled, enabled for builds only or completely disabled. ",148],["Ellipsoid Particle Emitter (Legacy)",149],["The Ellipsoid Particle Emitter spawns particles inside a sphere. Use the Ellipsoid property below to scale &amp; stretch the sphere.",149],["Properties",149],["Property: Function: ",149],["Emit If enabled, the emitter will emit particles. ",149],["Min Size The minimum size each particle can be at the time when it is spawned. ",149],["Max Size The maximum size each particle can be at the time when it is spawned. ",149],["Min Energy The minimum lifetime of each particle, measured in seconds. ",149],["Max Energy The maximum lifetime of each particle, measured in seconds. ",149],["Min Emission The minimum number of particles that will be spawned every second. ",149],["Max Emission The maximum number of particles that will be spawned every second. ",149],["World Velocity The starting speed of particles in world space, along X, Y, and Z. ",149],["Local Velocity The starting speed of particles along X, Y, and Z, measured in the object's orientation. ",149],["Rnd Velocity A random speed along X, Y, and Z that is added to the velocity. ",149],["Emitter Velocity Scale The amount of the emitter's speed that the particles inherit. ",149],["Tangent Velocity The starting speed of particles along X, Y, and Z, across the Emitter's surface. ",149],["Angular Velocity The angular velocity of new particles in degrees per second. ",149],["Rnd Angular Velocity A random angular velocity modifier for new particles. ",149],["Rnd Rotation If enabled, the particles will be spawned with random rotations. ",149],["Simulate In World Space If enabled, the particles don't move when the emitter moves. If false, when you move the emitter, the particles follow it around. ",149],["One Shot If enabled, the particle numbers specified by min &amp; max emission is spawned all at once. If disabled, the particles are generated in a long stream. ",149],["Ellipsoid Scale of the sphere along X, Y, and Z that the particles are spawned inside. ",149],["MinEmitterRange Determines an empty area in the center of the sphere - use this to make particles appear on the edge of the sphere. ",149],["Details",149],["Ellipsoid Particle Emitters (EPEs) are the basic emitter, and are included when you choose to add a Particle System to your scene from Components-&gt;Particles-&gt;Particle System. You can define the boundaries for the particles to be spawned, and give the particles an initial velocity. From here, use the Particle Animator to manipulate how your particles will change over time to achieve interesting effects.",149],["Particle Emitters work in conjunction with Particle Animators and Particle Renderers to create, manipulate, and display Particle Systems. All three Components must be present on an object before the particles will behave correctly. When particles are being emitted, all different velocities are added together to create the final velocity.",149],["Spawning Properties",149],["Spawning properties like Size, Energy, Emission, and Velocity will give your particle system distinct personality when trying to achieve different effects. Having a small Size could simulate fireflies or stars in the sky. A large Size could simulate dust clouds in a musky old building.",149],["Energy and Emission will control how long your particles remain onscreen and how many particles can appear at any one time. For example, a rocket might have high Emission to simulate density of smoke, and high Energy to simulate the slow dispersion of smoke into the air.",149],["Velocity will control how your particles move. You might want to change your Velocity in scripting to achieve interesting effects, or if you want to simulate a constant effect like wind, set your X and Z Velocity to make your particles blow away.",149],["Simulate in World Space",149],["If this is disabled, the position of each individual particle will always translate relative to the Position of the emitter. When the emitter moves, the particles will move along with it. If you have Simulate in World Space enabled, particles will not be affected by the translation of the emitter. For example, if you have a fireball that is spurting flames that rise, the flames will be spawned and float up in space as the fireball gets further away. If Simulate in World Space is disabled, those same flames will move across the screen along with the fireball.",149],["Emitter Velocity Scale",149],["This property will only apply if Simulate in World Space is enabled.",149],["If this property is set to 1, the particles will inherit the exact translation of the emitter at the time they are spawned. If it is set to 2, the particles will inherit double the emitter's translation when they are spawned. 3 is triple the translation, etc.",149],["One Shot",149],["One Shot emitters will create all particles within the Emission property all at once, and cease to emit particles over time. Here are some examples of different particle system uses with One Shot Enabled or Disabled:",149],["Enabled:",149],["Explosion",149],["Water splash",149],["Magic spell",149],["Disabled:",149],["Gun barrel smoke",149],["Wind effect",149],["Waterfall",149],["Min Emitter Range",149],["The Min Emitter Range determines the depth within the ellipsoid that particles can be spawned. Setting it to 0 will allow particles to spawn anywhere from the center core of the ellipsoid to the outer-most range. Setting it to 1 will restrict spawn locations to the outer-most range of the ellipsoid.",149],["Hints",149],["Be careful of using many large particles. This can seriously hinder performance on low-level machines. Always try to use the minimum number of particles to attain an effect.",149],["The Emit property works in conjunction with the AutoDestruct property of the Particle Animator. Through scripting, you can cease the emitter from emitting, and then AutoDestruct will automatically destroy the Particle System and the GameObject it is attached to.",149],["Importing models",150],["There are three tabs in the Model Importer - Model, Rig, and Animations.",150],["The Model tab has settings for importing the 3D model.",150],["The Rig tab has settings which will allow this 3D model to support animation.",150],["The Animations tab has settings for importing one or more Animation Clips from this model file.",150],["See Also",150],["3D file formats.",150],["Fixed Joint",151],["Fixed Joints restricts an object's movement to be dependent upon another object. This is somewhat similar to Parenting but is implemented through physics rather than Transform hierarchy. The best scenarios for using them are when you have objects that you want to easily break apart from each other, or connect two object's movement without parenting.",151],["Properties",151],["Property: Function: ",151],["Connected Body Optional reference to the Rigidbody that the joint is dependent upon. If not set, the joint connects to the world. ",151],["Break Force The force that needs to be applied for this joint to break. ",151],["Break Torque The torque that needs to be applied for this joint to break. ",151],["Enable Collision When checked, this enables collisions between bodies connected with a joint. ",151],["Details",151],["There may be scenarios in your game where you want objects to stick together permanently or temporarily. Fixed Joints may be a good Component to use for these scenarios, since you will not have to script a change in your object's hierarchy to achieve the desired effect. The trade-off is that you must use Rigidbodies for any objects that use a Fixed Joint.",151],["For example, if you want to use a \"sticky grenade\", you can write a script that will detect collision with another Rigidbody (like an enemy), and then create a Fixed Joint that will attach itself to that Rigidbody. Then as the enemy moves around, the joint will keep the grenade stuck to them.",151],["Breaking joints",151],["You can use the Break Force and Break Torque properties to set limits for the joint's strength. If these are less than infinity, and a force/torque greater than these limits are applied to the object, its Fixed Joint will be destroyed and will no longer be confined by its restraints.",151],["Hints",151],["You do not need to assign a Connected Body to your joint for it to work.",151],["Fixed Joints require a Rigidbody.",151],["Flare",152],["Flare objects are the source assets that are used by Lens Flare Components. The Flare itself is a combination of a texture file and specific information that determines how the Flare behaves. Then when you want to use the Flare in a Scene, you reference the specific Flare from inside a LensFlare Component attached to a GameObject.",152],["There are some sample Flares in the Standard Assets package. If you want to add one of these to your scene, attach a Lens Flare Component to a GameObject, and drag the Flare you want to use into the Flare property of the Lens Flare, just like assigning a Material to a Mesh Renderer.",152],["Flares work by containing several Flare Elements on a single Texture. Within the Flare, you pick and choose which Elements you want to include from any of the Textures.",152],["Properties",152],["Property: Function: ",152],["Elements The number of Flare images included in the Flare. ",152],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Image Index Which Flare image to use from the Flare Texture for this Element. See the Flare Textures section below for more information. ",152],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position The Element's offset along a line running from the containing GameObject's position through the screen center. 0 = GameObject position, 1 = screen center. ",152],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Size The size of the element. ",152],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Color Color tint of the element. ",152],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use Light Color If the Flare is attached to a Light, enabling this will tint the Flare with the Light's color. ",152],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Rotate If enabled, bottom of the Element will always face the center of the screen, making the Element spin as the Lens Flare moves around on the screen. ",152],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Zoom If enabled, the Element will scale up when it becomes visible and scale down again when it isn't. ",152],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fade If enabled, the Element will fade in to full strength when it becomes visible and fade out when it isn't. ",152],["Flare Texture A texture containing images used by this Flare's Elements. It must be arranged according to one of the TextureLayout options. ",152],["Texture Layout How the individual Flare Element images are laid out inside the Flare Texture (see Texture Layouts below for further details). ",152],["Use Fog If enabled, the Flare will fade away with distance fog. This is used commonly for small Flares. ",152],["Details",152],["A Flare consists of multiple Elements, arranged along a line. The line is calculated by comparing the position of the GameObject containing the Lens Flare to the center of the screen. The line extends beyond the containing GameObject and the screen center. All Flare Elements are strung out on this line.",152],["Flare Textures",152],["For performance reasons, all Elements of one Flare must share the same Texture. This Texture contains a collection of the different images that are available as Elements in a single Flare. The Texture Layout defines how the Elements are laid out in the Flare Texture.",152],["Texture Layouts",152],["These are the options you have for different Flare Texture Layouts. The numbers in the images correspond to the Image Index property for each Element.",152],["1 Large 4 Small",152],["Designed for large sun-style Flares where you need one of the Elements to have a higher fidelity than the others. This is designed to be used with Textures that are twice as high as they are wide.",152],["1 Large 2 Medium 8 Small",152],["Designed for complex flares that require 1 high-definition, 2 medium and 8 small images. This is used in the standard assets \"50mm Zoom Flare\" where the two medium Elements are the rainbow-colored circles. This is designed to be used with textures that are twice as high as they are wide.",152],["1 Texture",152],["A single image.",152],["2x2 grid",152],["A simple 2x2 grid.",152],["3x3 grid",152],["A simple 3x3 grid.",152],["4x4 grid",152],["A simple 4x4 grid.",152],["Hints",152],["If you use many different Flares, using a single Flare Texture that contains all the Elements will give you best rendering performance.",152],["Lens Flares are blocked by Colliders. A Collider in-between the Flare GameObject and the Camera will hide the Flare, even if the Collider does not have a Mesh Renderer.",152],["To override the shader used for Flares copy the Internal-Flare.shader shader from the Built-in shaders into a folder named \"Resources\" in your \"Assets\" folder.",152],["Flare Layer",153],["The Flare Layer Component can be attached to Cameras to make Lens Flares appear in the image. By default, Cameras have a Flare Layer already attached.",153],["Font",154],["Fonts can be created or imported for use in either the GUI Text or the Text Mesh Components.",154],["Importing Font files",154],["To add a font to your project you need to place the font file in your Assets folder. Unity will then automatically import it. Supported Font formats are TrueType Fonts (.ttf files) and OpenType Fonts (.otf files).",154],["To change the Size of the font, highlight it in the Project View and you have a number of options in the Import Settings in the Inspector.",154],["Property: Function: ",154],["Font Size The size of the font, based on the sizes set in any word processor. ",154],["Rendering mode The font rendering mode, which tells Unity how to apply smoothing to the glyphs. ",154],["Character The character set of the font to import into the font texture ",154],["Setting this mode to Dynamic causes Unity to embed the font data itself and render font glyphs at runtime (see below). ",154],["Import Settings specific to dynamic fonts",154],["Property: Function: ",154],["Include Font Data This setting controls the packaging of the font when used with Dynamic font property. When selected the TTF is included in the output of the build. When not selected it is assumed that the end user will have the font already installed on their machine. Note that fonts are subject to copyright and you should only include fonts that you have licensed or created for yourself. ",154],["Font Names A list of fallback fonts to use when fonts or characters are not available (see below). ",154],["After you import the font, you can expand the font in Project View to see that it has auto-generated some assets. Two assets are created during import: \"font material\" and \"font texture\".  Unlike many applications you might be familiar with, fonts in Unity are converted into textures, and the glyphs that you display are rendered using textured quads.  Adjusting the font size effectively changes how many pixels are used for each glyph in this generated texture.  Text Mesh assets are 3d geometry textured with these auto-generated font textures.  You will want to vary the size of the font to make these assets look crisp.",154],["Dynamic fonts",154],["When you set the Characters drop-down in the Import Settings to Dynamic, Unity will not pre-generate a texture with all font characters. Instead, it will use the FreeType font rendering engine to create the texture on the fly. This has the advantage that it can save in download size and texture memory, especially when you are using a font which is commonly included in user systems, so you don't have to include the font data, or when you need to support asian languages or large font sizes (which would make the font textures very large using normal font textures).",154],["When Unity tries to render text with a dynamic font, but it cannot find the font (because Include Font Data was not selected, and the font is not installed on the user machine), or the font does not include the requested glyph (like when trying to render text in east Asian scripts using a latin font), then it will try each of the fonts listed in the Font Names field, to see if it can find a font matching the font name in the project (with font data included) or installed on the user machine which has the requested glyph. If none of the listed fallback fonts are present and have the requested glyph, Unity will fall back to a hard-coded global list of fallback fonts, which contains various international fonts commonly installed on the current runtime platform.",154],["Note that some target platforms (WebGL, some consoles) do not have OS default fonts Unity can access for rendering text. For those platforms, Include Font Data will be ignored, and font data will always be included. All fonts to be used as fallbacks must be included in the project, so if you need to render international text, you need to supply a font which has the required characters, and set up that font in the Font Names list of other fonts.",154],["Custom fonts",154],["To create a custom font select ‘Create->custom font’ from the project window. This will add a custom font asset to your project library.",154],["The Ascii Start Offset field is a decimal that defines the Ascii index you would like to begin your Character Rects index from. For example, if your Ascii Start Offset is set to 0 then the capital letter A will be at index 65 but if the Ascii Start Offset is set to 65 then the letter A will be at index 0. You can consult the Ascii Table here but you should bear in mind that custom font uses the decimal ascii numbering system.",154],["Kerning can be set to define how close each character will be to the next character on the same line and  Line spacing can be set to define how close each line will be to the next.",154],["To create a font material you will need to import your font as a texture then apply that texture to a material, then drag your font material onto the  Default Material section.",154],["The Character Rects section is where each character of your font is defined.",154],["The Size field is for defining how many characters are in your font.",154],["Within each Element there is an index field for the ascii index of the character. This will be an integer that represents the character in this element.",154],["To work out the UV values you need to figure out how your characters are positioned on a scale of 0 to 1. You divide 1 by the number of characters on a dimension. For example if you have a font and the image dimensions on it are 256x128, 4 characters across, 2 down (so 64x64), then UV width will be 0.25 and UV height will be 0.5.",154],["For UV X and Y, it's just a matter of deciding which character you want and multiplying the width or height value times the column/row of the letter.",154],["Vert size is based on the pixel size of the characters e.g. your characters are each 128x128, putting 128 and -128 into the Vert Width and Height will give properly proportioned letters. Vert Y must be negative.",154],["Width will be the width of your character in pixels.",154],["Custom fonts",154],["To create a custom font select ‘Create->custom font’ from the project window. This will add a custom font asset to your project library.",154],["The Ascii Start Offset field is a decimal that defines the Ascii index you would like to begin your Character Rects index from. For example, if your Ascii Start Offset is set to 0 then the capital letter A will be at index 65 but if the Ascii Start Offset is set to 65 then the letter A will be at index 0. You can consult the Ascii Table here but you should bear in mind that custom font uses the decimal ascii numbering system.",154],["Kerning can be set to define how close each character will be to the next character on the same line and  Line spacing can be set to define how close each line will be to the next.",154],["To create a font material you will need to import your font as a texture then apply that texture to a material, then drag your font material onto the  Default Material section.",154],["The Character Rects section is where each character of your font is defined.",154],["The Size field is for defining how many characters are in your font.",154],["Within each Element there is an index field for the ascii index of the character. This will be an integer that represents the character in this element.",154],["To work out the UV values you need to figure out how your characters are positioned on a scale of 0 to 1. You divide 1 by the number of characters on a dimension. For example if you have a font and the image dimensions on it are 256x128; 4 characters across, 2 down (so 64x64) then UV width will be 0.25 and UV height will be 0.5.",154],["For UV X and Y, it's just a matter of deciding which character you want and multiplying the width or height value times the column/row of the letter.",154],["Vert size is based on the pixel size of the characters e.g. your characters are each 128x128, putting 128 and -128 into the Vert Width and Height will give properly proportioned letters. Vert Y must be negative.",154],["Width will be the width of your character in pixels.",154],["Unicode support",154],["Unity has full unicode support. Unicode text allows you to display German, French, Danish or Japanese characters that are usually not supported in an ASCII character set. You can also enter a lot of different special purpose characters like arrow signs or the option key sign, if your font supports it.",154],["To use unicode characters, choose either Unicode or Dynamic from the Characters drop-down in the Import Settings. You can now display unicode characters with this font. If you are using a GUIText or Text Mesh, you can enter unicode characters into the Component's Text field in the Inspector.",154],["You can also use unicode characters if you want to set the displayed text from scripting. The Javascript and C# compilers fully support Unicode based scripts. You have to save your scripts with UTF-16 encoding. Now you can add unicode characters to a string in your script and they will display as expected in UnityGUI, a GUIText, or a Text Mesh.",154],["Changing Font Color",154],["There are different ways to change the color of your displayed font, depending on how the font is used.",154],["GUIText &amp; Text Mesh",154],["If you are using a GUIText or a Text Mesh, you can change its color by using a custom Material for the font. In the Project View, click on Create-&gt;Material, and select and set up the newly created Material in the Inspector. Make sure you assign the texture from the font asset to the material. If you use the built-in GUI/Text Shader shader for the font material, you can choose the color in the Text Color property of the material.",154],["UnityGUI",154],["If you are using UnityGUI scripting to display your font, you have much more control over the font's color under different circumstances. To change the font's color, you create a GUISkin from Assets-&gt;Create-&gt;GUI Skin, and define the color for the specific control state, e.g. Label-&gt;Normal-&gt;Text Color. For more details, please read the GUI Skin page.",154],["Hints",154],["To display an imported font select the font and choose GameObject &gt; Create Other &gt; 3D Text.",154],["Using only lower or upper case characters reduces generated texture size.",154],["The default font that Unity supplies is Arial. This font is always available and does not appear in the Project window.",154],["See also the page on Fonts.",154],["GameObject",155],["GameObjects are the fundamental objects in Unity that represent characters, props and scenery. They do not accomplish much in themselves but they act as containers for Components, which implement the real functionality. For example, a Light object is created by attaching a Light component to a GameObject.",155],["Details",155],["A GameObject always has a Transform component attached (to represent position and orientation) and it is not possible to remove this. The other components that give the object its functionality can be added from the editor's Component menu or from a script. There are also many useful pre-constructed objects (primitive shapes, Cameras, etc) available on the GameObject &gt; 3D Object menu, see Primitive Objects.",155],["Since GameObjects are a very important part of Unity, there is a GameObjects section in the manual with extensive detail about them. You can find out more about controlling GameObjects from scripts on the GameObject scripting reference page.",155],["Graphics Settings",156],["Settings here are mostly for customizing and optimizing graphics-related settings across the project.",156],["Built-in shader settings",156],["These settings allow specifying which shader is used to do lighting pass calculations in deferred shading and legacy deferred lighting rendering paths, respectively.",156],["Default value is to use built-in Unity functionality for this, but you can supply your own compatible shader if you want deep customization of deferred rendering.",156],["You can also specify \"No Support\" if you know you aren't using deferred shading or lighting respectively, and save some space in the built game data files.",156],["Always Included Shaders",156],["Specify a list of Shaders that will always be stored along with the project, even if nothing in your scenes actually uses them. It is important to add shaders used by streamed scenes asset bundles to this list to ensure they can be accessed.",156],["Shader Stripping",156],["By default, Unity looks at your scenes and lightmapping settings to figure our which Fog and Lightmapping modes are used; and skips corresponding shader variants. This saves game build data size, and improves loading times.",156],["However, if you're building asset bundles or will be changing Fog modes from a script at runtime, you might want to manually specify used modes here.",156],["Shader Preloading",156],["Specify a list of shader variant collection assets to preload while loading the game. See Optimizing Shader Load Time page for details.",156],["See Also",156],["Optimizing Shader Load Time.",156],["Optimizing Graphics Performance.",156],["Shaders reference.",156],["GUI Layer (Legacy)",157],["A GUI Layer Component is attached to a Camera to enable rendering of 2D GUIs.",157],["When a GUI Layer is attached to a Camera it will render all GUI Textures and GUI Texts in the scene. GUI Layers do not affect UnityGUI in any way.",157],["You can enable and disable rendering GUI in a single camera by clicking on the check box of the GUI Layer in the Inspector.",157],["GUI Skin (Legacy)",158],["GUISkins are a collection of GUIStyles that can be applied to your GUI. Each Control type has its own Style definition. Skins are intended to allow you to apply style to an entire UI, instead of a single Control by itself.",158],["To create a GUISkin, select Assets-&gt;Create-&gt;GUI Skin from the menubar.",158],["GUISkins are part of the UnityGUI system. For more detailed information about UnityGUI, please take a look at the GUI Scripting Guide.",158],["Properties",158],["All of the properties within a GUI Skin are an individual GUIStyle. Please read the GUIStyle page for more information about how to use Styles.",158],["Property: Function: ",158],["Font The global Font to use for every Control in the GUI ",158],["Box The Style to use for all Boxes ",158],["Button The Style to use for all Buttons ",158],["Toggle The Style to use for all Toggles ",158],["Label The Style to use for all Labels ",158],["Text Field The Style to use for all Text Fields ",158],["Text Area The Style to use for all Text Areas ",158],["Window The Style to use for all Windows ",158],["Horizontal Slider The Style to use for all Horizontal Slider bars ",158],["Horizontal Slider Thumb The Style to use for all Horizontal Slider Thumb Buttons ",158],["Vertical Slider The Style to use for all Vertical Slider bars ",158],["Vertical Slider Thumb The Style to use for all Vertical Slider Thumb Buttons ",158],["Horizontal Scrollbar The Style to use for all Horizontal Scrollbars ",158],["Horizontal Scrollbar Thumb The Style to use for all Horizontal Scrollbar Thumb Buttons ",158],["Horizontal Scrollbar Left Button The Style to use for all Horizontal Scrollbar scroll Left Buttons ",158],["Horizontal Scrollbar Right Button The Style to use for all Horizontal Scrollbar scroll Right Buttons ",158],["Vertical Scrollbar The Style to use for all Vertical Scrollbars ",158],["Vertical Scrollbar Thumb The Style to use for all Vertical Scrollbar Thumb Buttons ",158],["Vertical Scrollbar Up Button The Style to use for all Vertical Scrollbar scroll Up Buttons ",158],["Vertical Scrollbar Down Button The Style to use for all Vertical Scrollbar scroll Down Buttons ",158],["Custom 1-20 Additional custom Styles that can be applied to any Control ",158],["Custom Styles An array of additional custom Styles that can be applied to any Control ",158],["Settings Additional Settings for the entire GUI ",158],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Double Click Selects Word If enabled, double-clicking a word will select it ",158],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Triple Click Selects Line If enabled, triple-clicking a word will select the entire line ",158],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Cursor Color Color of the keyboard cursor ",158],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Cursor Flash Speed The speed at which the text cursor will flash when editing any Text Control ",158],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Selection Color Color of the selected area of Text ",158],["Details",158],["When you are creating an entire GUI for your game, you will likely need to do a lot of customization for every different Control type. In many different game genres, like real-time strategy or role-playing, there is a need for practically every single Control type.",158],["Because each individual Control uses a particular Style, it does not make sense to create a dozen-plus individual Styles and assign them all manually. GUI Skins take care of this problem for you. By creating a GUI Skin, you have a pre-defined collection of Styles for every individual Control. You then apply the Skin with a single line of code, which eliminates the need to manually specify the Style of each individual Control.",158],["Creating GUISkins",158],["GUISkins are asset files. To create a GUI Skin, select Assets-&gt;Create-&gt;GUI Skin from the menubar. This will put a new GUISkin in your Project View.",158],["Editing GUISkins",158],["After you have created a GUISkin, you can edit all of the Styles it contains in the Inspector. For example, the Text Field Style will be applied to all Text Field Controls.",158],["No matter how many Text Fields you create in your script, they will all use this Style. Of course, you have control over changing the styles of one Text Field over the other if you wish. We'll discuss how that is done next.",158],["Applying GUISkins",158],["To apply a GUISkin to your GUI, you must use a simple script to read and apply the Skin to your Controls.",158],["// Create a public variable where we can assign the GUISkin",158],["var customSkin : GUISkin;",158],["// Apply the Skin in our OnGUI() function",158],["function OnGUI () {",158],["GUI.skin = customSkin;",158],["// Now create any Controls you like, and they will be displayed with the custom Skin",158],["GUILayout.Button (\"I am a re-Skinned Button\");",158],["// You can change or remove the skin for some Controls but not others",158],["GUI.skin = null;",158],["// Any Controls created here will use the default Skin and not the custom Skin",158],["GUILayout.Button (\"This Button uses the default UnityGUI Skin\");",158],["In some cases you want to have two of the same Control with different Styles. For this, it does not make sense to create a new Skin and re-assign it. Instead, you use one of the Custom Styles in the skin. Provide a Name for the custom Style, and you can use that name as the last argument of the individual Control.",158],["// One of the custom Styles in this Skin has the name \"MyCustomControl\"",158],["var customSkin : GUISkin;",158],["function OnGUI () {",158],["GUI.skin = customSkin;",158],["// We provide the name of the Style we want to use as the last argument of the Control function",158],["GUILayout.Button (\"I am a custom styled Button\", \"MyCustomControl\");",158],["// We can also ignore the Custom Style, and use the Skin's default Button Style",158],["GUILayout.Button (\"I am the Skin's Button Style\");",158],["For more information about working with GUIStyles, please read the GUIStyle page. For more information about using UnityGUI, please read the GUI Scripting Guide.",158],["GUI Style (Legacy)",159],["GUI Styles are a collection of custom attributes for use with UnityGUI. A single GUI Style defines the appearance of a single UnityGUI Control.",159],["If you want to add style to more than one control, use a GUI Skin instead of a GUI Style. For more information about UnityGUI, please read the GUI Scripting Guide.",159],["Properties",159],["Property: Function: ",159],["Name The text string that can be used to refer to this specific Style ",159],["Normal Background image &amp; Text Color of the Control in default state ",159],["Hover Background image &amp; Text Color when the mouse is positioned over the Control ",159],["Active Background image &amp; Text Color when the mouse is actively clicking the Control ",159],["Focused Background image &amp; Text Color when the Control has keyboard focus ",159],["On Normal Background image &amp; Text Color of the Control in enabled state ",159],["On Hover Background image &amp; Text Color when the mouse is positioned over the enabled Control ",159],["On Active Properties when the mouse is actively clicking the enabled Control ",159],["On Focused Background image &amp; Text Color when the enabled Control has keyboard focus ",159],["Border Number of pixels on each side of the Background image that are not affected by the scale of the Control' shape ",159],["Padding Space in pixels from each edge of the Control to the start of its contents. ",159],["Margin The margins between elements rendered in this style and any other GUI Controls. ",159],["Overflow Extra space to be added to the background image. ",159],["Font The Font used for all text in this style ",159],["Image Position The way the background image and text are combined. ",159],["Alignment Standard text alignment options. ",159],["Word Wrap If enabled, text that reaches the boundaries of the Control will wrap around to the next line ",159],["Text Clipping If Word Wrap is enabled, choose how to handle text that exceeds the boundaries of the Control ",159],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Overflow Any text that exceeds the Control boundaries will continue beyond the boundaries ",159],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Clip Any text that exceeds the Control boundaries will be hidden ",159],["Content Offset Number of pixels along X and Y axes that the Content will be displaced in addition to all other properties ",159],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X Left/Right Offset ",159],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y Up/Down Offset ",159],["Fixed Width Number of pixels for the width of the Control, which will override any provided Rect() value ",159],["Fixed Height Number of pixels for the height of the Control, which will override any provided Rect() value ",159],["Stretch Width If enabled, Controls using this style can be stretched horizontally for a better layout. ",159],["Stretch Height If enabled, Controls using this style can be stretched vertically for a better layout. ",159],["Details",159],["GUIStyles are declared from scripts and modified on a per-instance basis. If you want to use a single or few Controls with a custom Style, you can declare this custom Style in the script and provide the Style as an argument of the Control function. This will make these Controls appear with the Style that you define.",159],["First, you must declare a GUI Style from within a script.",159],["/* Declare a GUI Style */",159],["var customGuiStyle : GUIStyle;",159],["...",159],["When you attach this script to a GameObject, you will see the custom Style available to modify in the Inspector.",159],["Now, when you want to tell a particular Control to use this Style, you provide the name of the Style as the last argument in the Control function.",159],["...",159],["function OnGUI () {",159],["// Provide the name of the Style as the final argument to use it",159],["GUILayout.Button (\"I am a custom-styled Button\", customGuiStyle);",159],["// If you do not want to apply the Style, do not provide the name",159],["GUILayout.Button (\"I am a normal UnityGUI Button without custom style\");",159],["For more information about using UnityGUI, please read the GUI Scripting Guide.",159],["GUI Text (Legacy)",160],["GUI Text displays text of any font you import in screen coordinates.",160],["Please Note: Unity 4.6 introduced UI, a User Interface system. You may prefer creating user interface elements with Unity UI instead of GUITexts. Read more about how to use UnityGUI in the UI Overview.",160],["Properties",160],["Property: Function: ",160],["Text The string to display. ",160],["Anchor The point at which the Text shares the position of the Transform. ",160],["Alignment How multiple lines are aligned within the GUIText. ",160],["Pixel Offset Offset of the text relative to the position of the GUIText in the screen. ",160],["Line Spacing How much space will be in-between lines of Text. ",160],["Tab Size How much space will be inserted for a tab ('\\t') character. As a multiplum of the space character offset. ",160],["Font The Font to use when rendering the text. ",160],["Material Reference to the Material containing the characters to be drawn. If set, this property overrides the one in the Font asset. ",160],["Font Size The font size to use. Set to 0 to use the default font size. Only applicable for dynamic fonts. ",160],["Font Style The font style to use. (Normal, Bold, Italic or Bold and Italic). Only applicable for dynamic fonts. ",160],["Pixel Correct If enabled, all Text characters will be drawn in the size of the imported font texture. If disabled, the characters will be resized based on the Transform's Scale. ",160],["Rich Text If enabled, allows HTML-style tags for text formatting. ",160],["Details",160],["GUI Texts are used to print text onto the screen in 2D. The Camera has to have a GUI Layer attached in order to render the text. Cameras include a GUI Layer by default, so don't remove it if you want to display a GUI Text. GUI Texts are positioned using only the X and Y axes. Rather than being positioned in World Coordinates, GUI Texts are positioned in Screen Coordinates, where (0,0) is the bottom-left and (1,1) is the top-right corner of the screen.  To add a GUIText component in Unity 5.0, first use GameObject->Create Empty to create an empty game object, then use the Component->Rendering->GUIText option to add the GUIText component to the newly created game object.  If the text isn't visible when you press Play, check that the transform has suitable position, typically (0.5, 0.5, 0.0).",160],["To import a font see the Font page.",160],["To use Rich Text see the Rich Text page.",160],["Pixel Correct",160],["By default, GUI Texts are rendered with Pixel Correct enabled. This makes them look crisp and they will stay the same size in pixels independent of the screen resolution.",160],["Hints",160],["When entering text into the Text property, you can create a line break by holding Alt and pressing Return.",160],["If you are scripting the Text property, you can add line breaks by inserting the escape character \"\\n\" in your strings.",160],["You can download free true type fonts from 1001freefonts.com (download the Windows fonts since they contain TrueType fonts).",160],["GUI Texture (Legacy)",161],["GUI Textures are displayed as flat images in 2D. They are made especially for user interface elements, buttons, or decorations. Their positioning and scaling is performed along the x and y axes only, and they are measured in Screen Coordinates, rather than World Coordinates.",161],["Please Note: Unity 4.6 introduced UI, a User Interface system. You may prefer creating user interface elements with Unity UI instead of GUITexts. Read more about how to use UnityGUI in the UI Overview.",161],["Properties",161],["Property: Function: ",161],["Texture Reference to the Texture that will be used as the texture's display. ",161],["Color Color that will tint the Texture drawn on screen. ",161],["Pixel Inset Used for pixel-level control of the scaling and positioning of the GUI Texture. All values are measured relative to the position of the GUI Texture's Transform. ",161],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X Left-most pixel position of the texture. ",161],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y Bottom-most pixel position of the texture. ",161],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Width Right-most pixel position of the texture. ",161],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Height Top-most pixel position of the texture. ",161],["Left Border Number of pixels from the left that are not affected by scale. ",161],["Right Border Number of pixels from the right that are not affected by scale. ",161],["Top Border Number of pixels from the top that are not affected by scale. ",161],["Bottom Border Number of pixels from the bottom that are not affected by scale. ",161],["Details",161],["To create a GUITexture:",161],["Select a Texture in the Project View",161],["Choose GameObject &gt; Create General &gt; GUI Texture from the menu bar",161],["GUI Textures are perfect for presenting game interface backgrounds, buttons, or other elements to the player. Through scripting, you can easily provide visual feedback for different \"states\" of the texture -- when the mouse is hovering over the texture, or is actively clicking it for example. Here is the basic breakdown of how the GUI Texture is calculated:",161],["Borders",161],["The borders are the regions at each edge of the image (specified by pixel widths) that will not scale when the rest of the texture is scaled. As you rarely know the resolution your game runs in, chances are your GUI will get scaled. Some GUI textures have a border at the edge that is meant to be an exact number of pixels. In order for this to work, set the border sizes to match those from the texture.",161],["Pixel Inset",161],["The purpose of the Pixel Inset is to prevent textures from scaling with screen resolution, and keeping them in a fixed pixel size. This allows you to render a texture without any scaling. This means that players who run your game in higher resolutions will see your textures in smaller areas of the screen, allowing them to have more screen real-estate for your gameplay graphics.",161],["To use it effectively, you need to set the scale of the GUI Texture's Transform to (0, 0, 0). Now, the Pixel Inset is in full control of the texture's size and you can set the Pixel Inset values to be the exact pixel size of your Texture.",161],["Hints",161],["The depth of each layered GUI Texture is determined by its individual Z Transform position, not the global Z position.",161],["GUI Textures are great for making menu screens, or pause/escape menu screens.",161],["You should use Pixel Inset on any GUI Textures that you want to be a specific number of pixels for the width and height.",161],["Halo",162],["Halos are light areas around light sources, used to give the impression of small dust particles in the air.",162],["Properties",162],["Halos use the Halo Texture set up in the Render Settings. If none is assigned, it uses a default one. A Light component can be setup to automatically show halo, without a separate Halo component.",162],["Property: Function: ",162],["Color Color of the Halo. ",162],["Size Size of the Halo. ",162],["Hints",162],["To see Halos in the scene view, check Fx button in the Scene View Toolbar.",162],["To override the shader used for Halos copy the Internal-Halo.shader shader from the Built-in shaders into a folder named \"Resources\" in your \"Assets\" folder.",162],["Hinge Joint",163],["The Hinge Joint groups together two Rigidbodies, constraining them to move like they are connected by a hinge. It is perfect for doors, but can also be used to model chains, pendulums, etc.",163],["Properties",163],["Property: Function: ",163],["Connected Body Optional reference to the Rigidbody that the joint is dependent upon. If not set, the joint connects to the world. ",163],["Anchor The position of the axis around which the body swings. The position is defined in local space. ",163],["Axis The direction of the axis around which the body swings. The direction is defined in local space. ",163],["Auto Configure Connected Anchor If this is enabled, then the Connected Anchor position will be calculated automatically to match the global position of the anchor property. This is the default behavior. If this is disabled, you can configure the position of the connected anchor manually. ",163],["Connected Anchor Manual configuration of the connected anchor position. ",163],["Use Spring Spring makes the Rigidbody reach for a specific angle compared to its connected body. ",163],["Spring Properties of the Spring that are used if Use Spring is enabled. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Spring The force the object asserts to move into the position. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Damper The higher this value, the more the object will slow down. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Target Position Target angle of the spring. The spring pulls towards this angle measured in degrees. ",163],["Use Motor The motor makes the object spin around. ",163],["Motor Properties of the Motor that are used if Use Motor is enabled. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Target Velocity The speed the object tries to attain. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Force The force applied in order to attain the speed. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Free Spin If enabled, the motor is never used to brake the spinning, only accelerate it. ",163],["Use Limits If enabled, the angle of the hinge will be restricted within the Min &amp; Max values. ",163],["Limits  Properties of the Limits that are used if Use Limits is enabled. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Min The lowest angle the rotation can go. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Max The highest angle the rotation can go. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Min Bounce How much the object bounces when it hits the minimum stop. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Max Bounce How much the object bounces when it hits the maximum stop. ",163],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Contact Distance Within the contact distance from the limit contacts will persist in order to avoid jitter. ",163],["Break Force The force that needs to be applied for this joint to break. ",163],["Break Torque The torque that needs to be applied for this joint to break. ",163],["Enable Collision When checked, this enables collisions between bodies connected with a joint. ",163],["Details",163],["A single Hinge Joint should be applied to a GameObject. The hinge will rotate at the point specified by the Anchor property, moving around the specified Axis property. You do not need to assign a GameObject to the joint's Connected Body property. You should only assign a GameObject to the Connected Body property if you want the joint's Transform to be dependent on the attached object's Transform.",163],["Think about how the hinge of a door works. The Axis in this case is up, positive along the Y axis. The Anchor is placed somewhere at the intersection between door and wall. You would not need to assign the wall to the Connected Body, because the joint will be connected to the world by default.",163],["Now think about a doggy door hinge. The doggy door's Axis would be sideways, positive along the relative X axis. The main door should be assigned as the Connected Body, so the doggy door's hinge is dependent on the main door's Rigidbody.",163],["Chains",163],["Multiple Hinge Joints can also be strung together to create a chain. Add a joint to each link in the chain, and attach the next link as the Connected Body.",163],["Hints",163],["You do not need to assign a Connected Body to your joint for it to work.",163],["Use Break Force in order to make dynamic damage systems. This is really cool as it allows the player to break a door off its hinge by blasting it with a rocket launcher or running into it with a car.",163],["The Spring, Motor, and Limits properties allow you to fine-tune your joint's behaviors.",163],["Use of Spring, Motor are intended to be mutually exclusive.  Using both at the same time leads to unpredictable results.",163],["Hinge Joint 2D",164],["The Hinge Joint 2D component allows a Sprite object controlled by rigidbody physics to be attached to a point in space around which it can rotate. The rotation can be left to happen passively (in response to a collision, say) or actively powered by a motor torque provided by the joint itself. The hinge can also be set up with limits to prevent it from making a full rotation.",164],["Properties",164],["Property: Function: ",164],["Collide Connected Can the two connected objects collide with each other? ",164],["Connected Rigidbody The other Rigidbody2D object that the one with the joint is connected to. If this is null then the other end of the joint will be fixed at a point in space. ",164],["Anchor Coordinate in local space where the end point of the joint is attached. ",164],["Connected Anchor Coordinate in the other object's local space where its end of the joint is attached. ",164],["Use Motor Should the hinge motor be enabled? ",164],["Motor Speed Target motor speed (degrees/sec). ",164],["Maximum Motor Force The maximum torque the motor can apply while attempting to reach the target speed. ",164],["Use Limits Should the rotation angle be limited? ",164],["Lower Angle The lower end of the rotation arc allowed by the limit. ",164],["Upper Angle The upper end of the rotation arc allowed by the limit. ",164],["Details",164],["The hinge joint's name implies something like a door hinge (and it can certainly be used to implement that) but it refers more generally to anything that rotates around a particular point. It can be used for machine parts, powered wheels, pendulums and many other similar things.",164],["Human Template files",165],["You can save the mapping of bones in your skeleton to the Avatar on disk as a \"human template file\" (extention *.ht), which can be reused by any characters that use this mapping. This is useful, for example, if your animators use a consistent layout and naming convention for all skeleton but Mecanim doesn't know how to interpret it. You can then Load the .ht file for each model, so that manual remapping only needs to be done once.",165],["Input Manager",166],["The Input Manager is where you define all the different input axes and game actions for your project.",166],["To see the Input Manager choose: Edit-&gt;Project Settings-&gt;Input.",166],["Properties",166],["Property: Function: ",166],["Axes Contains all the defined input axes for the current project: Size is the number of different input axes in this project, Element 0, 1, ... are the particular axes to modify. ",166],["Name The string that refers to the axis in the game launcher and through scripting. ",166],["Descriptive Name A detailed definition of the Positive Button function that is displayed in the game launcher. ",166],["Descriptive Negative Name A detailed definition of the Negative Button function that is displayed in the game launcher. ",166],["Negative Button The button that will send a negative value to the axis. ",166],["Positive Button The button that will send a positive value to the axis. ",166],["Alt Negative Button The secondary button that will send a negative value to the axis. ",166],["Alt Positive Button The secondary button that will send a positive value to the axis. ",166],["Gravity How fast will the input recenter. Only used when the Type is key / mouse button. ",166],["Dead Any positive or negative values that are less than this number will register as zero. Useful for joysticks. ",166],["Sensitivity For keyboard input, a larger value will result in faster response time. A lower value will be more smooth. For Mouse delta the value will scale the actual mouse delta. ",166],["Snap If enabled, the axis value will be immediately reset to zero after it receives opposite inputs. Only used when the Type is key / mouse button. ",166],["Invert If enabled, the positive buttons will send negative values to the axis, and vice versa. ",166],["Type Use Key / Mouse Button for any kind of buttons, Mouse Movement for mouse delta and scrollwheels, Joystick Axis for analog joystick axes and Window Movement for when the user shakes the window. ",166],["Axis Axis of input from the device (joystick, mouse, gamepad, etc.) ",166],["Joy Num Which joystick should be used. By default this is set to retrieve the input from all joysticks. This is only used for input axes and not buttons. ",166],["Details",166],["All the axes that you set up in the Input Manager serve two purposes:",166],["They allow you to reference your inputs by axis name in scripting",166],["They allow the players of your game to customize the controls to their liking",166],["All defined axes will be presented to the player in the game launcher, where they will see its name, detailed description, and default buttons. From here, they will have the option to change any of the buttons defined in the axes. Therefore, it is best to write your scripts making use of axes instead of individual buttons, as the player may want to customize the buttons for your game.",166],["See also: Input.",166],["Lens Flare",167],["Lens Flares simulate the effect of lights refracting inside camera lens. They are used to represent really bright lights or, more subtly, just to add a bit more atmosphere to your scene.",167],["The easiest way to setup a Lens Flare is just to assign the Flare property of the Light. Unity contains a couple of pre-configured Flares in the Standard Assets package.",167],["Otherwise, create an empty GameObject with GameObject-&gt;Create Empty from the menu bar and add the Lens Flare Component to it with Component-&gt;Effects-&gt;Lens Flare. Then choose the Flare in the Inspector.",167],["To see the effect of Lens Flare in the Scene View, check the Effect drop-down in the Scene View toolbar and choose the Flares option.",167],["Properties",167],["Property: Function: ",167],["Flare The Flare to render. The flare defines all aspects of the lens flare's appearance. ",167],["Color Some flares can be colorized to better fit in with your scene's mood. ",167],["Brightness How large and bright the Lens Flare is. ",167],["Fade Speed How quickly or slowly the flare will fade. ",167],["Ignore Layers Select masks for layers that shouldn't hide the flare. ",167],["Directional If set, the flare will be oriented along positive Z axis of the game object. It will appear as if it was infinitely far away, and won't track object's position, only the direction of Z axis. ",167],["Details",167],["You can directly set flares as a property of a Light Component, or set them up separately as Lens Flare component. If you attach them to a light, they will automatically track the position and direction of the light. To get more precise control, use this Component.",167],["A Camera has to have a Flare Layer Component attached to make Flares visible (this is true by default, so you don't have to do any set-up).",167],["Hints",167],["Be discrete about your usage of Lens Flares.",167],["If you use a very bright Lens Flare, make sure its direction fits with your scene's primary light source.",167],["To design your own Flares, you need to create some Flare Assets. Start by duplicating some of the ones we provided in the the Lens Flares folder of the Standard Assets, then modify from that.",167],["Lens Flares are blocked by Colliders. A Collider in-between the Flare GameObject and the Camera will hide the Flare, even if the Collider does not have a Mesh Renderer.",167],["Light",168],["Lights are a fundamental part of graphical rendering since they determine the shading of an object and the shadows it casts. See the Lighting section of the manual for further details about lighting concepts in Unity.",168],["Properties",168],["Property: Function: ",168],["Type The current type of light. Possible values are Directional, Point, Spot and Area (see the Lighting Overview for details of these types). ",168],["Range How far light is emitted from the center of the object. Point/Spot light only. ",168],["Spot Angle Determines the angle (in degrees) at the base of a spot light's cone (Spot light only). ",168],["Color The color of the light emitted. ",168],["Intensity Brightness of the light. The default value for a Point, Spot or Area light is 1 but for a Directional light, it is 0.5. ",168],["Cookie The alpha channel of this texture is used as a mask that determines how bright the light is at different places. If the light is a Spot or a Directional light then this must be a 2D texture. If the light is a Point light, it must be a Cubemap. ",168],["Cookie Size Scales the projection of a Cookie (Directional light only). ",168],["Shadow Type Determines whether Hard Shadows  Soft Shadows or no shadows at all will be cast by this light. ",168],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strength The darkness of the shadows. Values are between 0 and 1. ",168],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Resolution Detail level of the shadows. ",168],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bias Offset used when comparing the pixel position in light space with the value from the shadow map. See Shadow Mapping and the Bias Property below ",168],["Draw Halo If checked, a spherical halo of light will be drawn with a radius equal to Range. See also the Halo documentation and the Render Settings documentation for more details. ",168],["Flare Optional reference to the Flare that will be rendered at the light's position. ",168],["Render Mode Importance of this light. This can affect lighting fidelity and performance, see Performance Considerations below. Options include: ",168],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Auto The rendering method is determined at runtime depending on the brightness of nearby lights and current Quality Settings. ",168],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Important This light is always rendered at per-pixel quality. Use this for very important effects only (e.g. headlights of a player's car). ",168],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Not Important This light is always rendered in a faster, vertex/object light mode. ",168],["Culling Mask Use to selectively exclude groups of objects from being affected by the light; see Layers. ",168],["Lightmapping The Lightmapping mode: RealtimeOnly, Auto or BakedOnly; see the Dual Lightmaps description. ",168],["Width (Area lights only) The width of the rectangular light area. ",168],["Height (Area lights only) The height of the rectangular light area. ",168],["Details",168],["You can create a texture that contains an alpha channel and assign it to the Cookie variable of the light. The Cookie will be projected from the light. The Cookie's alpha mask modulates the light amount, creating light and dark spots on surfaces. They are a great way af adding lots of complexity or atmosphere to a scene.",168],["All built-in shaders in Unity seamlessly work with any type of light. However, VertexLit shaders cannot display Cookies or Shadows.",168],["All Lights can optionally cast Shadows. This is done by selecting either Hard Shadows or Soft Shadows for the Shadow Type property of each individual Light. For more information about shadows, please read the Shadows page.",168],["Directional Light Shadows",168],["Shadows from directional lights are explained in depth on this page. Note that shadows are disabled for directional lights with cookies when forward rendering is used. It is, however, possible to write custom shaders to enable shadows in such a case by using the fullforwardshadows tag; see this page for further details.",168],["Hints",168],["Spot lights with cookies can be extremely effective for making light coming in from windows.",168],["Low-intensity point lights are good for providing depth to a scene.",168],["For maximum performance, use a VertexLit shader. This shader only does per-vertex lighting, giving a much higher throughput on low-end cards.",168],["Auto lights can cast dynamic shadows over lightmapped objects without adding extra illumination. For this to work the Auto lights must be active when the Lightmap is baked. Otherwise they render as real time lights.",168],["Light Probe Group",169],["A Light Probe Group adds one or more light probes to a scene.",169],["A new probe can be created by clicking the Add Probe button in the inspector. Once created, the probe can be selected and moved in much the same way as a GameObject and can be deleted by typing Ctrl/Cmd + Backspace.",169],["Line Renderer",170],["The Line Renderer takes an array of two or more points in 3D space and draws a straight line between each one. A single Line Renderer Component can thus be used to draw anything from a simple straight line, to a complex spiral. The line is always continuous; if you need to draw two or more completely separate lines, you should use multiple GameObjects, each with its own Line Renderer.",170],["The Line Renderer does not render one pixel thin lines. It renders billboard lines that have width and can be textured. It uses the same algorithm for line rendering as the Trail Renderer.",170],["Properties",170],["Property: Function: ",170],["Materials The first material from this list is used to render the lines. ",170],["Positions Array of Vector3 points to connect. ",170],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Size The number of segments in this line. ",170],["Parameters List of parameters for each line: ",170],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;StartWidth Width at the first line position. ",170],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EndWidth Width at the last line position. ",170],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Start Color Color at the first line position. ",170],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;End Color Color at the last line position. ",170],["Use World Space If enabled, the object's position is ignored, and the lines are rendered around world origin. ",170],["Details",170],["To create a line renderer:",170],["Choose GameObject-&gt;Create Empty",170],["Choose Component-&gt;Effects-&gt;Line Renderer",170],["Drag a texture or Material on the Line Renderer. It looks best if you use a particle shader in the Material.",170],["Hints",170],["Line Renderers are good to use for effects when you need to lay out all the vertices in one frame.",170],["The lines may seem to rotate as you move the Camera. This is intentional.",170],["The Line Renderer should be the only Renderer on a GameObject.",170],["LOD Group",171],["As your scenes get larger, performance becomes a bigger consideration. One of the ways to manage this is to have meshes with different levels of detail depending on how far the camera is from the object.",171],["This is called Level of Detail (abbreviated as LOD).",171],["LOD Groups are used to manage level of detail (LOD) for GameObjects. Level of Detail is an optimisation technique that uses several meshes for an object; the meshes represent the same object with decreasing detail in the geometry. The idea is that the low-detail meshes are shown when the object is far from the camera and the difference will not be noticed. Since meshes with simpler geometry are less demanding on the hardware, performance can be improved by using LOD judiciously.",171],["Properties",171],["The different LOD levels are visible in the horizontal bar with the camera icon just above it (LOD: 0, LOD: 1, LOD: 2, etc). The percentages in the LOD bars represent the fraction of the bounding box height relative to screen height where that LOD level becomes active. You can change the percentage values by dragging the vertical lines that separate the bars. You can also add and remove LOD levels from the bar by right-clicking it and selecting Insert Before or Delete from the contextual menu. The position of the camera icon along the bar shows the current percentage. The percentages in the LOD bars represent the thresholds at which the corresponding LOD level becomes active, measured by the ratio of the object's screen space height to screen height.  Note that if the LOD Bias is not 1 the camera position is not necessarily the actual position where LOD transits from one to another.",171],["When you click on one of the LOD bars to select it, a Renderers panel will be shown beneath. The \"renderers\" are actually GameObjects that hold the mesh to represent the LOD level; typically, this will be a child of the object that has the LODGroup component. If you click on an empty box (with the word \"Add\") in the Renderers panel, an object browser will appear to let you choose the object for that LOD level. Although you can choose any object for the renderer, you will be asked if you want to parent it to the LODGroup GameObject if it isn't already a child.",171],["From Unity 5, you can choose Fade Mode for each LOD level. The fading is used to \"blend\" two neighboring LODs to achieve a smooth transition effect. However Unity doesn't provide a default built-in technique to blend LOD geometries. You need to implement your own technique according to your game type and asset production pipeline. Unity calculates a \"blend factor\" from the object's screen size and passes it to your shader.",171],["There are two modes for calculating the blend factor:",171],["Percentage: As the object's screen height goes from the current LOD height percentage to next, the blend factor goes from 1 to 0. Only the meshes of the current LOD will be rendered.",171],["Cross-fade: You need to specify a Transition Width value to define a cross-fading zone at the end of the current LOD where it will to transit to the next LOD. In the transition zone, both LOD levels will be rendered. The blend factor goes from 1 to 0 for the current LOD and 0 to 1 for the next LOD.",171],["The blend factor is accessed as the unity_LODFade.x uniform variable in your shader program. Either keyword LOD_FADE_PERCENTAGE or LOD_FADE_CROSSFADE will be chosen for objects rendered with LOD fading.",171],["Look at the example of SpeedTree trees to see how LODGroup is configured and how the SpeedTree shader utilizes the unity_LODFade variable.",171],["At the bottom of the inspector are two Recalculate buttons. The Bounds button will recalculate the bounding volume of the object after a new LOD level is added. The Lightmap Scale button updates the Scale in Lightmap property in the lightmaps based on changed LOD level boundaries.",171],["Material",172],["Materials are used in conjunction with Mesh Renderers, Particle Systems and other rendering components used in Unity. They play an essential part in defining how your object is displayed.",172],["Properties",172],["The properties that a Material's inspector displays are determined by the Shader that the Material uses. A shader is a specialised kind of graphical program that determines how texture and lighting information are combined to generate the pixels of the rendered object onscreen. See the manual section about Shaders for in-depth information about how they are used in a Unity project.",172],["Meshes",173],["Meshes make up a large part of your 3D worlds. Aside from some Asset store plugins, Unity does not include modelling tools. Unity does however have great interactivity with most 3D modelling packages. Unity supports triangulated or Quadrangulated polygon meshes. Nurbs, Nurms, Subdiv surfaces must be converted to polygons.",173],["Here are some guidelines for directly supported 3D applications, others can most often export file type listed above.",173],["Textures",173],["Unity will attempt to find the textures used by a mesh automatically on import by following a specific search plan. First, the importer will look for a sub-folder called Textures within the same folder as the mesh or in any parent folder. If this fails, an exhaustive search of all textures in the project will be carried out. Although slightly slower, the main disadvantage of the exhaustive search is that there could be two or more textures in the project with the same name. In this case, it is not guaranteed that the right one will be found.",173],["Material Generation and Assignment",173],["For each imported material Unity will apply the following rules:-",173],["If material generation is disabled (i.e. Import Materials is unchecked), then it will assign the Default-Diffuse material. If it is enabled then it will do the following:",173],["Unity will pick a name for the Unity material based on the Material Naming setting",173],["Unity will try to find an existing material with that name. The scope of the Material search is defined by the Material Search setting.",173],["If Unity succeeds in finding an existing material then it will use it for the imported scene, otherwise it will generate a new material",173],["Colliders",173],["Unity uses two main types of colliders: Mesh Colliders and Primitive Colliders. Mesh colliders are components that use imported mesh data and can be used for environment collision. When you enable Generate Colliders in the Import Settings, a Mesh collider is automatically added when the mesh is added to the Scene. It will be considered solid as far as the physics system is concerned.",173],["If you are moving the object around (a car for example), you can not use Mesh colliders. Instead, you will have to use Primitive colliders. In this case you should disable the Generate Colliders setting.",173],["Animations",173],["Animations are automatically imported from the scene. For more details about animation import options see the section on asset preparation and import in the Mecanim animation system.",173],["Normal mapping and characters",173],["If you have a character with a normal map that was generated from a high-polygon version of the model, you should import the game-quality version with a Smoothing angle of 180 degrees. This will prevent odd-looking seams in lighting due to tangent splitting. If the seams are still present with these settings, enable Split tangents across UV seams.",173],["If you are converting a greyscale image into a normal map, you don't need to worry about this.",173],["Blendshapes",173],["Unity has support for BlendShapes (also called morph-targets or vertex level animation). Unity can import BlendShapes from .FBX (BlendShapes and controlling aninimation) and .dae (only BlendShapes) exported 3D files. Unity BlendShapes support vertex level animation on vertices, normals and tangents. Mesh can be affected by skin and BlendShapes at the same time. All meshes imported with BlendShapes will use SkinnedMeshRenderer (no mater if it does have skin or not). BlendShape animation is imported as part of regular animation - it simply animates BlendShape weights on SkinnedMeshRenderer.",173],["There are two ways to import BlendShapes with normals:",173],["Set Normals import mode to Calculate, this way same logic will be used for calculating normals on a mesh and BlendShapes.",173],["Export smoothing groups information to the source file. This way, Unity will calculate normals from smoothing groups for mesh and BlendShapes.",173],["If you want tangents on your BlendShapes then set Tangents import mode to Calculate.",173],["Hints",173],["Merge your meshes together as much as possible. Make them share materials and textures. This has a huge performance benefit.",173],["If you need to set up your objects further in Unity (adding physics, scripts or other coolness), save yourself a world of pain and name your objects properly in your 3D application. Working with lots of pCube17 or Box42-like objects is not fun.",173],["Make your meshes be centered on the world origin in your 3D app. This will make them easier to place in Unity.",173],["If a mesh does not have vertex colors, Unity will automatically add an array of all-white vertex colors to the mesh the first time it is rendered.",173],["The Unity Editor shows too many vertices or triangles (compared to what my 3D app says)",173],["This is correct. What you are looking at is the number of vertices/triangles actually being sent to the GPU for rendering. In addition to the case where the material requires them to be sent twice, other things like hard-normals and non-contiguous UVs increase vertex/triangle counts significantly compared to what a modeling app tells you. Triangles need to be contiguous in both 3D and UV space to form a strip, so when you have UV seams, degenerate triangles have to be made to form strips - this bumps up the count.",173],["Mesh Collider",174],["The Mesh Collider takes a Mesh Asset and builds its Collider based on that mesh. It is far more accurate for collision detection than using primitives for complicated meshes. Mesh Colliders that are marked as Convex can collide with other Mesh Colliders.",174],["Properties",174],["Property: Function: ",174],["Is Trigger If enabled, this Collider is used for triggering events, and is ignored by the physics engine. ",174],["Material Reference to the Physics Material that determines how this Collider interacts with others. ",174],["Mesh Reference to the Mesh to use for collisions. ",174],["Convex If enabled, this Mesh Collider will collide with other Mesh Colliders. Convex Mesh Colliders are limited to 255 triangles. ",174],["Details",174],["The Mesh Collider builds its collision representation from the Mesh attached to the GameObject, and reads the properties of the attached Transform to set its position and scale correctly. The benefit of this is that the shape of the collider can be exactly the same as the shape of the visible mesh for the object, resulting in more precise and authentic collisions. However, this precision comes with a higher processing overhead than collisions involving primitive colliders (sphere, box, capsule) and so it is best to use Mesh Colliders sparingly.",174],["Collision meshes use backface culling. If an object collides with a mesh that will be backface culled graphically it will also not collide with it physically.",174],["There are some limitations when using the Mesh Collider. Non-convex Mesh Colliders are only supported on GameObjects without a rigidbody. If you want to use a Mesh Collider on a rigidbody, it needs to be marked as Convex.",174],["Note that versions of Unity before 5.0 had a Smooth Sphere Collisions property for the Mesh Collider in order to improve interactions between meshes and spheres. This property is now obsolete since the smooth interaction is standard behaviour for the physics engine and there is no particular advantage in switching it off.",174],["Mesh Filter",175],["The Mesh Filter takes a mesh from your assets and passes it to the Mesh Renderer for rendering on the screen.",175],["Properties",175],["Property: Function: ",175],["Mesh Reference to a mesh that will be rendered. The Mesh is located inside your Assets Directory. ",175],["Details",175],["When importing mesh assets, Unity automatically creates a Skinned Mesh Renderer if the mesh is skinned, or a Mesh Filter along with a Mesh Renderer, if it is not.",175],["To see the Mesh in your scene, add a Mesh Renderer to the GameObject. It should be added automatically, but you will have to manually re-add it if you remove it from your object. If the Mesh Renderer is not present, the Mesh will still exist in your scene (and computer memory) but it will not be drawn.",175],["Mesh Particle Emitter (Legacy)",176],["The Mesh Particle Emitter emits particles around a mesh. Particles are spawned from the surface of the mesh, which can be necessary when you want to make your particles interact in a complex way with objects.",176],["Properties",176],["Property: Function: ",176],["Emit If enabled, the emitter will emit particles. ",176],["Min Size The minimum size each particle can be at the time when it is spawned. ",176],["Max Size The maximum size each particle can be at the time when it is spawned. ",176],["Min Energy The minimum lifetime of each particle, measured in seconds. ",176],["Max Energy The maximum lifetime of each particle, measured in seconds. ",176],["Min Emission The minimum number of particles that will be spawned every second. ",176],["Max Emission The maximum number of particles that will be spawned every second. ",176],["World Velocity The starting speed of particles in world space, along X, Y, and Z. ",176],["Local Velocity The starting speed of particles along X, Y, and Z, measured in the object's orientation. ",176],["Rnd Velocity A random speed along X, Y, and Z that is added to the velocity. ",176],["Emitter Velocity Scale The amount of the emitter's speed that the particles inherit. ",176],["Tangent Velocity The starting speed of particles along X, Y, and Z, across the Emitter's surface. ",176],["Angular Velocity The angular velocity of new particles in degrees per second. ",176],["Rnd Angular Velocity A random angular velocity modifier for new particles. ",176],["Rnd Rotation If enabled, the particles will be spawned with random rotations. ",176],["Simulate In World Space If enabled, the particles don't move when the emitter moves. If false, when you move the emitter, the particles follow it around. ",176],["One Shot If enabled, the particle numbers specified by min &amp; max emission is spawned all at once. If disabled, the particles are generated in a long stream. ",176],["Interpolate Triangles If enabled, particles are spawned all over the mesh's surface. If disabled, particles are only spawned from the mesh's vertrices. ",176],["Systematic If enabled, particles are spawned in the order of the vertices defined in the mesh. Although you seldom have direct control over vertex order in meshes, most 3D modelling applications have a very systematic setup when using primitives. It is important that the mesh contains no faces in order for this to work. ",176],["Min Normal Velocity Minimum amount that particles are thrown away from the mesh. ",176],["Max Normal Velocity Maximum amount that particles are thrown away from the mesh. ",176],["Details",176],["Mesh Particle Emitters (MPEs) are used when you want more precise control over the spawn position &amp; directions than the simpler Ellipsoid Particle Emitter gives you. They can be used for making advanced effects.",176],["MPEs work by emitting particles at the vertices of the attached mesh. Therefore, the areas of your mesh that are more dense with polygons will be more dense with particle emission.",176],["Particle Emitters work in conjunction with Particle Animators and Particle Renderers to create, manipulate, and display Particle Systems. All three Components must be present on an object before the particles will behave correctly. When particles are being emitted, all different velocities are added together to create the final velocity.",176],["Spawning Properties",176],["Spawning properties like Size, Energy, Emission, and Velocity will give your particle system distinct personality when trying to achieve different effects. Having a small Size could simulate fireflies or stars in the sky. A large Size could simulate dust clouds in a musky old building.",176],["Energy and Emission will control how long your particles remain onscreen and how many particles can appear at any one time. For example, a rocket might have high Emission to simulate density of smoke, and high Energy to simulate the slow dispersion of smoke into the air.",176],["Velocity will control how your particles move. You might want to change your Velocity in scripting to achieve interesting effects, or if you want to simulate a constant effect like wind, set your X and Z Velocity to make your particles blow away.",176],["Simulate in World Space",176],["If this is disabled, the position of each individual particle will always translate relative to the Position of the emitter. When the emitter moves, the particles will move along with it. If you have Simulate in World Space enabled, particles will not be affected by the translation of the emitter. For example, if you have a fireball that is spurting flames that rise, the flames will be spawned and float up in space as the fireball gets further away. If Simulate in World Space is disabled, those same flames will move across the screen along with the fireball.",176],["Emitter Velocity Scale",176],["This property will only apply if Simulate in World Space is enabled.",176],["If this property is set to 1, the particles will inherit the exact translation of the emitter at the time they are spawned. If it is set to 2, the particles will inherit double the emitter's translation when they are spawned. 3 is triple the translation, etc.",176],["One Shot",176],["One Shot emitters will create all particles within the Emission property all at once, and cease to emit particles over time. Here are some examples of different particle system uses with One Shot Enabled or Disabled:",176],["Enabled:",176],["Explosion",176],["Water splash",176],["Magic spell",176],["Disabled:",176],["Gun barrel smoke",176],["Wind effect",176],["Waterfall",176],["Interpolate Triangles",176],["Enabling your emitter to Interpolate Triangles will allow particles to be spawned between the mesh's vertices. This option is off by default, so particles will only be spawned at the vertices.",176],["Enabling this option will spawn particles on and in-between vertices, essentially all over the mesh's surface (seen below).",176],["It bears repeating that even with Interpolate Triangles enabled, particles will still be denser in areas of your mesh that are more dense with polygons.",176],["Systematic",176],["Enabling Systematic will cause your particles to be spawned in your mesh's vertex order. The vertex order is set by your 3D modeling application.",176],["Normal Velocity",176],["Normal Velocity controls the speed at which particles are emitted along the normal from where they are spawned.",176],["For example, create a Mesh Particle System, use a cube mesh as the emitter, enable Interpolate Triangles, and set Normal Velocity Min and Max to 1. You will now see the particles emit from the faces of the cube in a straight line.",176],["See Also",176],["Hints",176],["Be careful of using many large particles. This can seriously hinder performance on low-level machines. Always try to use the minimum number of particles to attain an effect.",176],["The Emit property works in conjunction with the AutoDestruct property of the Particle Animator. Through scripting, you can cease the emitter from emitting, and then AutoDestruct will automatically destroy the Particle System and the GameObject it is attached to.",176],["MPEs can also be used to make glow from a lot of lamps placed in a scene. Simply make a mesh with one vertex in the center of each lamp, and build an MPE from that with a halo material. Great for evil sci-fi worlds.",176],["Mesh Renderer",177],["The Mesh Renderer takes the geometry from the Mesh Filter and renders it at the position defined by the object's Transform component.",177],["Properties",177],["Property: Function: ",177],["Cast Shadows If enabled, the mesh will create shadows when a shadow-casting Light shines on it. ",177],["Receive Shadows If enabled, the mesh will display any shadows being cast upon it. ",177],["Materials A list of Materials to render the model with. ",177],["Use Light Probes Enable probe-based lighting for this mesh. ",177],["Use Reflection Probes Enable probe-based reflections for this mesh. ",177],["Anchor Override A Transform used to determine the interpolation position when the light probe or reflection probe systems are used. ",177],["Details",177],["Meshes imported from 3D packages can use multiple Materials. All the materials used by a Mesh Renderer are held in the Materials list. Each submesh will use one material from the materials list. If there are more materials assigned to the Mesh Renderer than there are submeshes in the mesh, the first submesh will be rendered with each of the remaining materials, one on top of the next. At a cost of performance, this will let you set up multi-pass rendering on that submesh. Fully opaque materials, however, will simply overwrite the previous layers, costing performance for no advantage.",177],["A mesh can receive light from the light probe system and reflections from the reflection probe system depending on the settings of the  Use Light Probes and Use Reflection Probes options. For both types of probe, a single point is used as the mesh's notional position probe interpolation. By default, this is the centre of the mesh's bounding box, but you can change this by dragging a Transform to the Anchor Override property (there is a separate anchor override for both types of probe). It may be useful to set the anchor in cases where an object contains two adjoining meshes; since each mesh has a separate bounding box, the two will be lit discontinuously at the join by default. However, if you set both meshes to use the same anchor point then they will be consistently lit.",177],["Microphone",178],["The Microphone class is useful for capturing input from a built-in (physical) microphone on your PC or mobile device.",178],["With this class, you can start and end a recording from a built-in microphone, get a listing of available audio input devices (microphones), and find out the status of each such input device.",178],["There is no component for the Microphone class but you can access it from a script. See the Microphone page in the Scripting Reference for further information.",178],["Movie Texture",179],["Note: This is a Pro/Advanced feature only.",179],["Movie Textures are animated Textures that are created from a video file. By placing a video file in your project's Assets Folder, you can import the video to be used exactly as you would use a regular Texture.",179],["Video files are imported via Apple QuickTime. Supported file types are what your QuickTime installation can play (usually .mov, .mpg, .mpeg, .mp4, .avi, .asf). On Windows movie importing requires Quicktime to be installed (download here).",179],["Properties",179],["The Movie Texture Inspector is very similar to the regular Texture Inspector.",179],["Property: Function: ",179],["Aniso Level Increases Texture quality when viewing the texture at a steep angle. Good for floor and ground textures ",179],["Filtering Mode Selects how the Texture is filtered when it gets stretched by 3D transformations ",179],["Loop If enabled, the movie will loop when it finishes playing ",179],["Quality Compression of the Ogg Theora video file. A higher value means higher quality, but larger file size ",179],["Details",179],["When a video file is added to your Project, it will automatically be imported and converted to Ogg Theora format. Once your Movie Texture has been imported, you can attach it to any GameObject or Material, just like a regular Texture.",179],["Playing the Movie",179],["Your Movie Texture will not play automatically when the game begins running. You must use a short script to tell it when to play.",179],["// this line of code will make the Movie Texture begin playing",179],["((MovieTexture)GetComponent().material.mainTexture).Play();",179],["Attach the following script to toggle Movie playback when the space bar is pressed:",179],["public class PlayMovieOnSpace : MonoBehaviour {",179],["void Update () {",179],["if (Input.GetButtonDown (\"Jump\")) {",179],["Renderer r = GetComponent();",179],["MovieTexture movie = (MovieTexture)r.material.mainTexture;",179],["if (movie.isPlaying) {",179],["movie.Pause();",179],["else {",179],["movie.Play();",179],["For more information about playing Movie Textures, see the Movie Texture Script Reference page",179],["Movie Audio",179],["When a Movie Texture is imported, the audio track accompanying the visuals are imported as well. This audio appears as an AudioClip child of the Movie Texture.",179],["To play this audio, the Audio Clip must be attached to a GameObject, like any other Audio Clip. Drag the Audio Clip from the Project View onto any GameObject in the Scene or Hierarchy View. Usually, this will be the same GameObject that is showing the Movie. Then use audio.Play() to make the the movie's audio track play along with its video.",179],["iOS",179],["Movie Textures are not supported on iOS. Instead, full-screen streaming playback is provided using Handheld.PlayFullScreenMovie.",179],["You need to keep your videos inside the StreamingAssets folder located in the Assets folder of your project.",179],["Unity iOS supports any movie file types that play correctly on an iOS device, implying files with the extensions .mov, .mp4, .mpv, and .3gp and using one of the following compression standards:",179],["H.264 Baseline Profile Level 3.0 video",179],["MPEG-4 Part 2 video",179],["For more information about supported compression standards, consult the iPhone SDK MPMoviePlayerController Class Reference.",179],["As soon as you call Handheld.PlayFullScreenMovie the screen will fade from your current content to the designated background color. It might take some time before the movie is ready to play but in the meantime, the player will continue displaying the background color and may also display a progress indicator to let the user know the movie is loading. When playback finishes, the screen will fade back to your content.",179],["The video player does not respect switching to mute while playing videos",179],["As written above, video files are played using Apple's embedded player (as of SDK 3.2 and iPhone OS 3.1.2 and earlier). This contains a bug that prevents Unity switching to mute.",179],["The video player does not respect the device's orientation",179],["The Apple video player and iPhone SDK do not provide a way to adjust the orientation of the video. A common approach is to manually create two copies of each movie in landscape and portrait orientations. Then, the orientation of the device can be determined before playback so the right version of the movie can be chosen.",179],["Android",179],["Movie Textures are not supported on Android. Instead, full-screen streaming playback is provided using Handheld.PlayFullScreenMovie.",179],["You need to keep your videos inside the StreamingAssets folder located in the Assets folder of your project.",179],["Unity Android supports any movie file type supported by Android, (ie, files with the extensions .mp4 and .3gp) and using one of the following compression standards:",179],["H.263",179],["H.264 AVC",179],["MPEG-4 SP",179],["However, device vendors are keen on expanding this list, so some Android devices are able to play formats other than those listed, such as HD videos.",179],["For more information about the supported compression standards, consult the Android SDK Core Media Formats documentation.",179],["As soon as you call Handheld.PlayFullScreenMovie the screen will fade from your current content to the designated background color. It might take some time before the movie is ready to play but in the meantime, the player will continue displaying the background color and may also display a progress indicator to let the user know the movie is loading. When playback finishes, the screen will fade back to your content.",179],["NavMesh Agent",180],["NavMeshAgent components help you to create characters which avoid each other while moving towards their goal. Agents reason about the game world using the NavMesh and they know how to avoid each other as well as other moving obstacles. Pathfinding and spatial reasoning are handled using the scripting API of the NavMesh Agent.",180],["Properties",180],["Property Function ",180],["Agent Size  ",180],["Radius Radius of the agent, used to calculate collisions between obstacles and other agents. ",180],["Height The height clearance the agent needs to pass below an obstacle overhead. ",180],["Base offset Offset of the collision cylinder in relation to the transform pivot point. ",180],["Steering  ",180],["Speed Maximum movement speed (in world units per second). ",180],["Angular Speed Maximum speed of rotation (degrees per second). ",180],["Acceleration Maximum acceleration (in world units per second squared). ",180],["Stopping distance The agent will stop when this close to the goal location. ",180],["Auto Braking When enabled, the agent will slow down when reaching the destination. You should disable this for behaviors such patrolling, where the agent should move smoothly between multiple points ",180],["Obstacle Avoidance  ",180],["Quality Obstacle avoidance quality. If you have high number of agents you can save CPU time by reducing the obstacle avoidance quality. Setting avoidance to none, will only resolve collision, but will not try to actively avoid other agents and obstacles. ",180],["Priority Agents of lower priority will be ignored by this agent when performing avoidance. The value should be in the range 0-99 where lower numbers indicate higher priority. ",180],["Path Finding  ",180],["Auto Traverse OffMesh Link Set to true to automatically traverse off-mesh links. You should turn this off when you you want to use animation or some specific way to traverse off-mesh links. ",180],["Auto Repath When enabled the agent will try to find path again when it reaches the end of a partial path. When there is no path to the destination, a partial path is generated to the closest reachable location to the destination. ",180],["Area Mask Area mask describes which area types the agent will consider when finding a path. When you prepare meshes for NavMesh baking, you can set each meshes area type. For example you can mark stairs with special area type, and forbid some character types from using the stairs. ",180],["Details",180],["The agent is defined by an upright cylinder whose size is specified by the Radius and Height properties. The cylinder moves with the object but always remains upright even if the object itself rotates. The shape of the cylinder is used to detect and respond to collisions between other agents and obstacles. When the GameObject's anchor point is not at the base of the cylinder, you can use the Base Offset property to take up the height difference.",180],["The height and radius of the cylinder are actually specified in two different places: the NavMesh bake settings and the properties of the individual agents.",180],["\nNavMesh bake settings describe how all the NavMesh Agents are colliding or avoiding the static world geometry. In order to keep memory on budget and CPU load in check, only one size can be specified in the bake settings.\n",180],["\nNavMesh Agent properties values describe how the agent collides with moving obstacles and other agents.\n",180],["Most often you set the size of the agent the same in both places. But, for example, a heavy soldier may have larger radius, so that other agents will leave more space around him, but otherwise he'll avoid the environment just the same.",180],["Further Reading",180],["\nCreating a NavMesh Agent – workflow on how to create a NavMesh Agent.\n",180],["\nInner Workings of the Navigation System - learn more about how obstacles are used as part of navigation.\n",180],["\nNavMesh Agent scripting reference - full description of the NavMeshAgent scripting API.\n",180],["NavMesh Obstacle",181],["The NavMesh Obstacle component allows you to describe moving obstacles that the agents should avoid while navigating the world. A barrel or a crate controlled by the physics system is a good example of an obstacle. While the obstacle is moving the agents do their best to avoid it, but once the obstacle becomes stationary, it will carve a hole in the NavMesh so that the agents can change their paths to steer around it, or if the stationary obstacle blocked the pathway, the agents can find a different route.",181],["Property Function ",181],["Shape The shape of the obstacle geometry: capsule or box ",181],["For box  ",181],["&#8195;&#8195;&#8195;Center Center of the box relative to the transform position ",181],["&#8195;&#8195;&#8195;Size Size of the box ",181],["For capsule  ",181],["&#8195;&#8195;&#8195;Center Center of the capsule relative to the transform position ",181],["&#8195;&#8195;&#8195;Radius Radius of the capsule ",181],["&#8195;&#8195;&#8195;Height Height of the capsule ",181],["Carve When turned on, the obstacle will carve hole in the NavMesh ",181],["When carving is turned on  ",181],["&#8195;&#8195;&#8195;Move Threshold Threshold distance for updating a moving carved hole. ",181],["&#8195;&#8195;&#8195;Time To Stationary The time to wait until obstacle is treated as stationary. ",181],["&#8195;&#8195;&#8195;Carve Only Stationary When enabled, the obstacle will be carved only when it is stationary. ",181],["Details",181],["NavMesh Obstacles can be used to affect the agent's navigation during the game in two ways:",181],["\nObstructing: when carving is not turned on, the default behavior of the obstacle is a lot like physics collider. The agents will try to avoid collisions with the obstacle, and when close they will collide with the obstacle. Obstacle avoidance is a very local operation, like trying to sense the environment with a stick. The agent may not find a way around in environment cluttered with obstacles. This mode is best used in cases where the obstacle is constantly moving, for example a vehicle, or even player character.\n",181],["\nCarving: when carving is turned on, the obstacle will carve a hole in the NavMesh when stationary, and when moving it will be obstructing. When a hole is carved into the NavMesh, the path finder, which knows about the big picture, is able to navigate the agent around location cluttered with obstacles, or it can find another route if the current path gets blocked by an obstacle. You should turn on carving for obstacle like crates and barrels which generally block navigation, but can be moved by the player or other game events like explosions.\n",181],["Moving Obstacle Logic",181],["When the obstacle moves, the carved hole will also move but to reduce CPU overhead the hole is only recalculated when necessary. The recalculation logic has two options: 1) carve when stationary, 2) carve when moved.",181],["\nCarve when stationary is the default behavior and is used when Carve Only Stationary is turned on. The obstacle is treated as moving when it has moved more than the distance set by Carving Move Threshold. At this time, the carved hole is removed. When the obstacle has stopped moving, and has been stationary more than Carving Time To Stationary seconds, the obstacles is treated stationary and carving is updated again. While the obstacle is moving, the agents will avoid it using the collision avoidance, but will not plan paths around it. This mode is generally the best choice in terms of performance. It is good match when the game object is controlled by physics (for example crates and barrels).\n",181],["\nCarve when moved behavior is used when Carve Only Stationary is turned off. In this mode the carved hole is updated when the obstacle has moved more than the distance set by Carving Move Threshold. This mode is well suited for large slowly moving obstacles, for example a tank that is being avoided by infantry.\n",181],["Further Reading",181],["\nCreating a NavMesh Obstacle – workflow on how to create NavMesh Obstacles.\n",181],["\nInner Workings of the Navigation System - learn more about how obstacles are used as part of navigation.\n",181],["\nNavMesh Obstacle scripting reference - full description of the NavMesh Obstacle scripting API.\n",181],["Network Manager",182],["The Network Manager contains two very important properties for making Networked multiplayer games.",182],["You can access the Network Manager by selecting Edit-&gt;Project Settings-&gt;Network from the menu bar.",182],["Properties",182],["Property: Function: ",182],["Debug Level The level of messages that are printed to the console ",182],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Off Only errors will be printed ",182],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Informational Significant networking events will be printed ",182],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Full All networking events will be printed ",182],["Sendrate Number of times per second that data is sent over the network ",182],["Details",182],["Adjusting the Debug Level can be enormously helpful in fine-tuning or debugging your game's networking behaviors. At first, setting it to Full will allow you to see every single network action that is performed. This will give you an overall sense of how frequently you are using network communication and how much bandwidth you are using as a result.",182],["When you set it to Informational, you will see major events, but not every individual activity. Assigning unique Network IDs and buffering RPC calls will be logged here.",182],["When it is Off, only errors from networking will be printed to the console.",182],["The data that is sent at the Sendrate intervals (1 second / Sendrate = interval) will vary based on the Network View properties of each broadcasting object. If the Network View is using Unreliable, its data will be send at each interval. If the Network View is using Reliable Delta Compressed, Unity will check to see if the Object being watched has changed since the last interval. If it has changed, the data will be sent.",182],["Network View",183],["Network Views are the gateway to creating networked multiplayer games in Unity. They are simple to use, but they are extremely powerful. For this reason, it is recommended that you understand the fundamental concepts behind networking before you start experimenting with Network Views. You can learn and discover the fundamental concepts in the Network Reference Guide.",183],["In order to use any networking capabilities, including State Synchronization or Remote Procedure Calls, your GameObject must have a Network View attached.",183],["Properties",183],["Property: Function: ",183],["State Synchronization The type of State Synchronization used by this Network View ",183],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Off No State Synchronization will be used. This is the best option if you only want to send RPCs ",183],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reliable Delta Compressed The difference between the last state and the current state will be sent, if nothing has changed nothing will be sent. This mode is ordered. In the case of packet loss, the lost packet is re-sent automatically ",183],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Unreliable The complete state will be sent. This uses more bandwidth, but the impact of packet loss is minimized ",183],["Observed The Component data that will be sent across the network ",183],["View ID The unique identifier for this Network View. These values are read-only in the Inspector ",183],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scene ID The number id of the Network View in this particular scene ",183],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Type Either saved to the Scene or Allocated at runtime ",183],["Details",183],["When you add a Network View to a GameObject, you must decide two things",183],["What kind of data you want the Network View to send",183],["How you want to send that data",183],["Choosing data to send",183],["The Observed property of the Network View can contain a single Component. This can be a Transform, an Animation, a RigidBody, or a script. Whatever the Observed Component is, data about it will be sent across the network. You can select a Component from the drop-down, or you can drag any Component header directly to the variable. If you are not directly sending data, just using RPC calls, then you can turn off synchronization (no data directly sent) and nothing needs to be set as the Observed property. RPC calls just need a single network view present so you don't need to add a view specifically for RPC if a view is already present.",183],["How to send the data",183],["You have 2 options to send the data of the Observed Component: State Synchronization and Remote Procedure Calls.",183],["To use State Synchronization, set State Synchronization of the Network View to Reliable Delta Compressed or Unreliable. The data of the Observed Component will now be sent across the network automatically.",183],["Reliable Delta Compressed is ordered. Packets are always received in the order they were sent. If a packet is dropped, that packet will be re-sent. All later packets are queued up until the earlier packet is received. Only the difference between the last transmissions values and the current values are sent and nothing is sent if there is no difference.",183],["If it is observing a Script, you must explicitly Serialize data within the script. You do this within the OnSerializeNetworkView() function.",183],["using UnityEngine;",183],["using UnityEngine.Network;",183],["using System.Collections;",183],["public class ExampleScript : MonoBehaviour {",183],["void OnSerializeNetworkView (BitStream stream, NetworkMessageInfo info) {",183],["float horizontalInput = Input.GetAxis (\"Horizontal\");",183],["stream.Serialize (horizontalInput);",183],["C# script example",183],["function OnSerializeNetworkView (stream : BitStream, info : NetworkMessageInfo) {",183],["var horizontalInput : float = Input.GetAxis (\"Horizontal\");",183],["stream.Serialize (horizontalInput);",183],["JS script example",183],["The above function always writes (an update from the stream) into horizontalInput, when receiving an update and reads from the variable writing into the stream otherwise. If you want to do different things when receiving updates or sending you can use the isWriting attribute of the BitStream class.",183],["using UnityEngine;",183],["using UnityEngine.Network;",183],["using System.Collections;",183],["public class ExampleScript : MonoBehaviour {",183],["void OnSerializeNetworkView (BitStream stream, NetworkMessageInfo info) {",183],["float horizontalInput = 0.0;",183],["if (stream.isWriting) {",183],["// Sending",183],["horizontalInput = Input.GetAxis (\"Horizontal\");",183],["stream.Serialize (horizontalInput);",183],["} else {",183],["// Receiving",183],["stream.Serialize (horizontalInput);",183],["// ... do something meaningful with the received variable",183],["C# script example",183],["function OnSerializeNetworkView (stream : BitStream, info : NetworkMessageInfo) {",183],["var horizontalInput : float = 0.0;",183],["if (stream.isWriting) {",183],["// Sending",183],["horizontalInput = Input.GetAxis (\"Horizontal\");",183],["stream.Serialize (horizontalInput);",183],["} else {",183],["// Receiving",183],["stream.Serialize (horizontalInput);",183],["// ... do something meaningful with the received variable",183],["JS script example",183],["OnSerializeNetworkView is called according to the sendRate specified in the network manager project settings. By default this is 15 times per second.",183],["If you want to use Remote Procedure Calls in your script all you need is a NetworkView component present in the same GameObject the script is attached to. The NetworkView can be used for something else, or in case it's only used for sending RPCs it can have no script observed and state synchronization turned off. The function which is to be callable from the network must have the @RPC attribute. Now, from any script attached to the same GameObject, you call networkView.RPC() to execute the Remote Procedure Call.",183],["using UnityEngine;",183],["using UnityEngine.Network;",183],["using System.Collections;",183],["public class ExampleScript : MonoBehaviour {",183],["GameObject playerBullet;",183],["NetworkView networkView;",183],["void Start () {",183],["networkView = new NetworkView ();",183],["void Update () {",183],["if (Input.GetButtonDown (\"Fire1\")) {",183],["networkView.RPC (\"PlayerFire\", RPCMode.All);",183],["[RPC]",183],["void PlayerFire () {",183],["Instantiate (playerBullet, playerBullet.transform.position, playerBullet.transform.rotation);",183],["C# script example",183],["var playerBullet : GameObject;",183],["function Update () {",183],["if (Input.GetButtonDown (\"Fire1\")) {",183],["networkView.RPC (\"PlayerFire\", RPCMode.All);",183],["@RPC",183],["function PlayerFire () {",183],["Instantiate (playerBullet, playerBullet.transform.position, playerBullet.transform.rotation);",183],["JS script example",183],["RPCs are transmitted reliably and ordered. For more information about RPCs, see the RPC Details page.",183],["Hints",183],["Read through the Network Reference Guide if you're still unclear about how to use Network Views",183],["State Synchronization does not need to be disabled to use Remote Procedure Calls",183],["If you have more than one Network View and want to call an RPC on a specific one, use GetComponents(NetworkView)[i].RPC().",183],["Occlusion Area",184],["To apply occlusion culling to moving objects you have to create an Occlusion Area and then modify its size to fit the space where the moving objects will be located (of course the moving objects cannot be marked as static). You can create Occlusion Areas by adding the Occlusion Area component to an empty game object (Component -&gt; Rendering -&gt; Occlusion Area in the menus).",184],["After creating the Occlusion Area, check the Is Target Volume checkbox to occlude moving objects.",184],["Property: Function: ",184],["Size Defines the size of the Occlusion Area. ",184],["Center Sets the center of the Occlusion Area. By default this is 0,0,0 and is located in the center of the box. ",184],["Is View Volume Defines where the camera can be. Check this in order to occlude static objects that are inside this Occlusion Area. ",184],["Is Target Volume Select this when you want to occlude moving objects. ",184],["Target Resolution Determines how accurate the occlusion culling inside the area will be. This affects the size of the cells in an Occlusion Area. NOTE: This only affects Target Areas. ",184],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Low This takes less time to calculate but is less accurate. ",184],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Medium This gives a balance between accuracy and time taken to process the occlusion culling data. ",184],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;High This takes longer to calculate but has better accuracy. ",184],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Very High Use this value when you want to have more accuracy than high resolutions, be aware it takes more time. ",184],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Extremely High Use this value when you want to have almost exact occlusion culling on your moveable objects. Note: This setting takes a lot of time to calculate. ",184],["After you have added the Occlusion Area, you need to see how it divides the box into cells. To see how the occlusion area will be calculated, select Edit and toggle the View button",184],["in the Occlusion Culling Preview Panel.",184],["Testing the generated occlusion",184],["After your occlusion is set up, you can test it by enabling the Occlusion Culling (in the Occlusion Culling Preview Panel in Visualize mode) and moving the Main Camera around in the scene view.",184],["As you move the Main Camera around (whether or not you are in Play mode), you'll see various objects disable themselves. The thing you are looking for here is any error in the occlusion data. You'll recognize an error if you see objects suddenly popping into view as you move around. If this happens, your options for fixing the error are either to change the resolution (if you are playing with target volumes) or to move objects around to cover up the error. To debug problems with occlusion, you can move the Main Camera to the problematic position for spot-checking.",184],["When the processing is done, you should see some colorful cubes in the View Area. The blue cubes represent the cell divisions for Target Volumes. The white cubes represent cell divisions for View Volumes. If the parameters were set correctly you should see some objects not being rendered. This will be because they are either outside of the view frustum of the camera or else occluded from view by other objects.",184],["After occlusion is completed, if you don't see anything being occluded in your scene then try breaking your objects into smaller pieces so they can be completely contained inside the cells.",184],["Occlusion Portals",185],["In order to create occlusion primitives which are openable and closable at runtime, Unity uses Occlusion Portals.",185],["Property: Function: ",185],["Open Indicates if the portal is open (scriptable). ",185],["Center Sets the center of the Occlusion Area. By default this is 0,0,0 and is located in the center of the box. ",185],["Size Defines the size of the Occlusion Area. ",185],["Off-Mesh Link",186],["OffMeshLink component allows you to incorporate navigation shortcuts which cannot be represented using a walkable surface. For example, jumping over a ditch or a fence, or opening a door before walking through it, can all be described as Off-mesh links.",186],["Properties",186],["Property Function ",186],["Start Object describing the start location of the Off-Mesh Link. ",186],["End Object describing the start location of the Off-Mesh Link. ",186],["Cost Override If value is positive, use it when calculating path cost on processing a path request. Otherwise, the default cost is used (the cost of the area to which this game object belongs). If the Cost Override is set to the value 3.0, moving over the off-mesh link will be three times more expensive than moving the same distance on a default NavMesh area. The cost override becomes useful when you want to make the agents generally favor walking, but use the off-mesh link when the walk distance is clearly longer. ",186],["Bi-Directional If enabled, the link can be traversed in either direction. Otherwise, it can only be traversed from Start to End. ",186],["Activated Specifies if this link will used by the pathfinder (it will just be ignored if this is set to false). ",186],["Auto Update Positions When enabled, the Off-Mesh link will be reconnected to the NavMesh when the end points move. If disabled the link will stay at its start location even if the end points are moved. ",186],["Navigation Area Describes the navigation area type of the link. The area type allows you to apply a common traversal cost to similar area types and prevent certain characters from accessing the Off-Mesh Link based on the agent's Area Mask. ",186],["Details",186],["If the agent does not traverse an Off-Mesh link make sure that both end points are connected correctly. A properly connected end point should show a circle around the access point.",186],["Another common cause is that the Navmesh Agent's Area Mask does not have the Off-Mesh Link's area included.",186],["Further Reading",186],["\nCreating an Off-Mesh Link – workflow for setting up and off-mesh link.\n",186],["\nBuilding Off-Mesh Links Automatically - how to automatically create.\n",186],["\nOff-Mesh Link scripting reference - full description of the Off-Mesh Link scripting API.\n",186],["Particle Animator (Legacy)",187],["Particle Animators move your particles over time, you use them to apply wind, drag &amp; color cycling to your particle systems.",187],["Properties",187],["Property: Function: ",187],["Does Animate Color If enabled, particles cycle their color over their lifetime. ",187],["Color Animation The 5 colors particles go through. All particles cycle over this - if some have a shorter life span than others, they will animate faster. ",187],["World Rotation Axis An optional world-space axis the particles rotate around. Use this to make advanced spell effects or give caustic bubbles some life. ",187],["Local Rotation Axis An optional local-space axis the particles rotate around. Use this to make advanced spell effects or give caustic bubbles some life. ",187],["Size Grow Use this to make particles grow in size over their lifetime. As randomized forces will spread your particles out, it is often nice to make them grow in size so they don't fall apart. Use this to make smoke rise upwards, to simulate wind, etc. ",187],["Rnd Force A random force added to particles every frame. Use this to make smoke become more alive. ",187],["Force The force being applied every frame to the particles, measure relative to the world. ",187],["Damping How much particles are slowed every frame. A value of 1 gives no damping, while less makes them slow down. ",187],["Autodestruct If enabled, the GameObject attached to the Particle Animator will be destroyed when all particles disappear. ",187],["Details",187],["Particle Animators allow your particle systems to be dynamic. They allow you to change the color of your particles, apply forces and rotation, and choose to destroy them when they are finished emitting. For more information about Particle Systems, reference Mesh Particle Emitters, Ellipsoid Particle Emitters, and Particle Renderers.",187],["Animating Color",187],["If you would like your particles to change colors or fade in/out, enable them to Animate Color and specify the colors for the cycle. Any particle system that animates color will cycle through the 5 colors you choose. The speed at which they cycle will be determined by the Emitter's Energy value.",187],["If you want your particles to fade in rather than instantly appear, set your first or last color to have a low Alpha value.",187],["Rotation Axes",187],["Setting values in either the Local or World Rotation Axes will cause all spawned particles to rotate around the indicated axis (with the Transform's position as the center). The greater the value is entered on one of these axes, the faster the rotation will be.",187],["Setting values in the Local Axes will cause the rotating particles to adjust their rotation as the Transform's rotation changes, to match its local axes.",187],["Setting values in the World Axes will cause the particles' rotation to be consistent, regardless of the Transform's rotation.",187],["Forces &amp; Damping",187],["You use force to make particles accelerate in the direction specified by the force.",187],["Damping can be used to decelerate or accelerate without changing their direction:",187],["A value of 1 means no Damping is applied, the particles will not slow down or accelerate.",187],["A value of 0 means particles will stop immediately.",187],["A value of 2 means particles will double their speed every second.",187],["Destroying GameObjects attached to Particles",187],["You can destroy the Particle System and any attached GameObject by enabling the AutoDestruct property. For example, if you have an oil drum, you can attach a Particle System that has Emit disabled and AutoDestruct enabled. On collision, you enable the Particle Emitter. The explosion will occur and after it is over, the Particle System and the oil drum will be destroyed and removed from the scene.",187],["Note that automatic destruction takes effect only after some particles have been emitted. The precise rules for when the object is destroyed when AutoDestruct is on:",187],["If there have been some particles emitted already, but all of them are dead now, or",187],["If the emitter did have Emit on at some point, but now Emit is off.",187],["Hints",187],["Use the Color Animation to make your particles fade in &amp; out over their lifetime - otherwise, you will get nasty-looking pops.",187],["Use the Rotation Axes to make whirlpool-like swirly motions.",187],["Particle Renderer (Legacy)",188],["The Particle Renderer renders the Particle System on screen.",188],["Properties",188],["Property: Function: ",188],["Cast Shadows If enabled, allows object to cast shadows. ",188],["Receive Shadows If enabled, allows object to receive shadows. ",188],["Materials Reference to a list of Materials that will be displayed in the position of each individual particle. ",188],["Use Light Probes If enabled and baked light probes are present in the scene, an interpolated light probe. ",188],["Light Probe Anchor If set, Renderer will use this Transform's position to find the interpolated light probe. ",188],["Camera Velocity Scale The amount of stretching that is applied to the Particles based on Camera movement. ",188],["Stretch Particles Determines how the particles are rendered. ",188],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Billboard The particles are rendered as if facing the camera. ",188],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Stretched The particles are facing the direction they are moving. ",188],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SortedBillboard The particles are sorted by depth. Use this when using a blending material. ",188],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VerticalBillboard All particles are aligned flat along the X/Z axes. ",188],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HorizontalBillboard All particles are aligned flat along the X/Y axes. ",188],["Length Scale If Stretch Particles is set to Stretched, this value determines how long the particles are in their direction of motion. ",188],["Velocity Scale If Stretch Particles is set to Stretched, this value determines the rate at which particles will be stretched, based on their movement speed. ",188],["UV Animation If either of these are set, the UV coordinates of the particles will be generated for use with a tile animated texture. See the section on Animated Textures below. ",188],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X Tile Number of frames located across the X axis. ",188],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y Tile Number of frames located across the Y axis. ",188],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Cycles How many times to loop the animation sequence. ",188],["Details",188],["Particle Renderers are required for any Particle Systems to be displayed on the screen.",188],["Choosing a Material",188],["When setting up a Particle Renderer it is very important to use an appropriate material and shader that renders both sides of the material. Most of the time you want to use a Material with one of the built-in Particle Shaders. There are some premade materials in the Standard Assets-&gt;Particles-&gt;Sources folder that you can use.",188],["Creating a new material is easy:",188],["Select Assets &gt; Create &gt; Material from the menu bar.",188],["The Material has a shader popup, choose one of the shaders in the Particles group. Eg. Particles-&gt;Multiply.",188],["Now assign a Texture. The different shaders use the alpha channel of the textures slightly differently, but most of the time a value of black will make it invisible and white in the alpha channel will display it on screen.",188],["Distorting particles",188],["By default particles are rendered billboarded. That is simple square sprites. This is good for smoke and explosions and most other particle effects.",188],["Particles can be made to either stretch with the velocity. This is useful for sparks, lightning or laser beams. Length Scale and Velocity Scale affects how long the stretched particle will be.",188],["Sorted Billboard can be used to make all particles sort by depth. Sometimes this is necessary, mostly when using Alpha Blended particle shaders. This can be expensive and should only be used if it really makes a quality difference when rendering.",188],["Animated textures",188],["Particle Systems can be rendered with an animated tile texture. To use this feature, make the texture out of a grid of images. As the particles go through their life cycle, they will cycle through the images. This is good for adding more life to your particles, or making small rotating debris pieces.",188],["Hints",188],["Use Particle Shaders with the Particle Renderer.",188],["Particle system",189],["A Particle System component simulates fluid entities such as liquids, clouds and flames by generating and animating large numbers of small 2D images in the scene. For a full introduction to particle systems and their uses, see the manual page.",189],["Properties",189],["The Particle System component has many properties and for convenience, the inspector organises them into collapsible sections or \"modules\" which are described separately in their own pages. Each module can be expanded and collapsed by clicking the bar that shows its name. At the left side of the bar is a checkbox that can be used to enable or disable the functionality of the properties in that section. For example, if you don't want to vary the sizes of particles over their lifetime, you can simply uncheck the Size over lifetime section.",189],["Aside from the module bars, the inspector contains a few other controls. The Open Editor button shows the options in a separate editor window that also allows you to edit multiple systems at once. The Resimulate checkbox determines whether or not property changes should be applied immediately to particles already generated by the system (the alternative is that existing particles are left as they are and only the new particles have the changed properties). The Wireframe button shows the outlines of the mesh objects used to show the particles in the scene.",189],["Physics 2D Manager",190],["The Physics Manager lets you provide global settings for 2D physics (menu: Edit &gt; Project Settings &gt; Physics 2D). There is also a corresponding manager for 3D physics, described here.",190],["Properties",190],["Property: Function: ",190],["Gravity The amount of gravity applied to all Rigidbody2D objects. Generally, gravity is only set for the negative direction of the Y-axis. ",190],["Default Material The default Physics Material 2D that will be used if none has been assigned to an individual collider. ",190],["Velocity iterations The number of iterations made by the physics engine to resolve velocity effects. Higher numbers result in more accurate physics but at the cost of CPU time. ",190],["Position iterations The number of iterations made by the physics engine to resolve position changes. Higher numbers result in more accurate physics but at the cost of CPU time. ",190],["Velocity Threshold Collisions with a relative velocity lower than this value will be treated as inelastic collisions (ie, the colliding objects will not bounce off each other). ",190],["Max Linear Correction The maximum linear position correction used when solving constraints (range, 0.0001 to 1000000). This helps to prevent overshoot. ",190],["Max Angular Correction The maximum angular correction used when solving constraints (range, 0.0001 to 1000000). This helps to prevent overshoot. ",190],["Max Translation Speed The maximum linear speed of a rigidbody object during any physics update. ",190],["Max Rotation Speed The maximum linear speed of a rigidbody object during any physics update. ",190],["Min Penetration For Penalty The minimum contact penetration radius allowed before any separation impulse force is applied. ",190],["Baumgarte Scale Scale factor that determines how fast collision overlaps are resolved. ",190],["Baumgarte Time of Impact Scale Scale factor that determines how fast time-of-impact overlaps are resolved. ",190],["Time to Sleep The time (in seconds) that must pass after a rigidbody stops moving before it goes to sleep. ",190],["Linear Sleep Tolerance The linear speed below which a rigidbody will go to sleep after the \"time to sleep\" elapses. ",190],["Angular Sleep Tolerance The rotational speed below which a rigidbody will go to sleep after the \"time to sleep\" elapses. ",190],["Raycasts Hit Triggers If enabled, any Raycast that intersects with a Collider marked as a Trigger will return a hit.  If disabled, these intersections will not return a hit. ",190],["Raycasts Start In Colliders Whether ray/line casts that start inside a collider detect the collider or not. ",190],["Change Stops Callbacks Whether or not to stop reporting collision callbacks immediately if any of the objects involved in the collision are deleted or moved. ",190],["Layer Collision Matrix Defines how the layer-based collision detection system will behave. ",190],["Details",190],["The settings of the physics manager define limits on the accuracy of the physical simulation. Generally speaking, a more accurate simulation requires more processing overhead, so these settings offer a way to trade off accuracy against performance. See the Physics section of the manual for further information.",190],["Physics Manager",191],["The Physics Manager lets you provide global settings for 3D physics (menu: Edit &gt; Project Settings &gt; Physics). There is also a corresponding manager for 2D physics, described here.",191],["Properties",191],["Property: Function: ",191],["Gravity The amount of gravity applied to all Rigidbodies. Usually gravity acts only on the Y-axis (negative is down). Gravity is world units per second squared. ",191],["Default Material The default Physics Material that will be used if none has been assigned to an individual Collider. ",191],["Bounce Threshold Two colliding objects with a relative velocity below this value will not bounce. This value also reduces jitter so it is not recommended to set it to a very low value. ",191],["Sleep Velocity The default linear velocity, below which objects start going to sleep. ",191],["Max Angular Velocity The default maximimum angular velocity permitted for any Rigidbodies. The angular velocity of Rigidbodies is clamped to stay within Max Angular Velocity to avoid numerical instability with quickly rotating bodies. Because this may prevent intentional fast rotations on objects such as wheels, you can override this value for any Rigidbody by scripting Rigidbody.maxAngularVelocity. ",191],["Min Penetration For Penalty How deep in meters are two objects allowed to penetrate before the collision solver pushes them apart. A higher value will make objects penetrate more but reduces jitter. ",191],["Solver Iteration Count Determines how accurately joints and contacts are resolved. Usually a value of 7 works very well for almost all situations. ",191],["Raycasts Hit Triggers If enabled, any Raycast that intersects with a Collider marked as a Trigger will return a hit. If disabled, these intersections will not return a hit. ",191],["Enable Adaptive Force The \"adaptive force\" affects the way forces are transmitted through a pile or stack of objects with the aim of giving more realistic behaviour. This option enables or disables the adaptive force. Note that from Unity 5.0, this is disabled by default. ",191],["Layer Collision Matrix Defines how the layer-based collision detection system will behave. ",191],["Details",191],["The settings of the physics manager define limits on the accuracy of the physical simulation. Generally speaking, a more accurate simulation requires more processing overhead, so these settings offer a way to trade off accuracy against performance. See the Physics section of the manual for further information.",191],["Physics Material 2D",192],["A Physics Material 2D is used to adjust the friction and bounce that occurs between 2D physics objects when they collide. You can create a Physics Material 2D from the Assets menu (Assets &gt; Create &gt; Physics2D Material ).",192],["Properties",192],["Property: Function: ",192],["Friction Coefficient of friction for this collider. ",192],["Bounciness The degree to which collisions rebound from the surface. A value of 0 indicates no bounce while a value of 1 indicates a perfect bounce with no loss of energy. ",192],["Details",192],["To use a Physics Material 2D, simply drag it onto an object with a 2D collider attached or drag it to the collider component in the inspector. Note that for 3D physics, the equivalent asset is referred to as a Physic Material (ie, no S at the end of physic) - it is important in scripting not to get the two spellings confused.",192],["Platform Effector 2D",193],["The Platform Effector 2D applies \"platform\" behaviour such as one-way collisions etc.",193],["Properties",193],["Property: Function: ",193],["Collider Mask The mask used to select specific layers allowed to interact with the effector. ",193],["One Way Whether to use one-way collision behaviour or not. ",193],["Side Friction Whether friction should be used on the platform sides or not. ",193],["Side Bounce Whether bounce should be used on the platform sides or not. ",193],["Side Angle Variance The angle variance centered on the sides of the platform. Zero angle only matches sides 90-degree to the platform \"top\". ",193],["When the source Collider2D is a trigger, the effector will apply forces whenever the target Collider2D overlaps the source. When the source Collider isn't a trigger, the effector will apply forces whenever the target Collider2D is in contact with the source only.",193],["Player Settings",194],["The Player Settings (menu: Edit > Project Settings > Player) let you set various options for the final game built by Unity. There are a few settings that are the same regardless of the build target but most are platform-specific and divided into the following sections:",194],["Resolution and Presentation: settings for screen resolution and other presentation details such as whether the game should default to fullscreen mode.",194],["Icon: the game icon(s) as shown on the desktop.",194],["Splash Image: the image shown while the game is launching.",194],["Other Settings: any remaining settings specific to the platform.",194],["Publishing Settings: details of how the built application is prepared for delivery from the app store or host webpage.",194],["The general settings are covered below. Settings specific to a platform can be found separately in the platform's own manual section.",194],["General Settings",194],["Property: Function: ",194],["Cross-Platform Properties  ",194],["Company Name The name of your company. This is used to locate the preferences file. ",194],["Product Name The name that will appear on the menu bar when your game is running and is used to locate the preferences file also. ",194],["Default Icon The default icon that the application will have on every platform. You can override this for specific platforms. ",194],["Default Cursor The default cursor that the application will have on every supported platform. ",194],["Cursor Hotspot Cursor hotspot in pixels from the top left of the default cursor. ",194],["Per-Platform Settings",194],["Web-Player",194],["Resolution And Presentation",194],["Property: Function: ",194],["Resolution  ",194],["Default Screen Width Screen Width the player will be generated with. ",194],["Default Screen Height Screen Height the plater will be generated with. ",194],["Run in background Check this if you don't want to stop executing your game if the player loses focus. ",194],["WebPlayer Template For more information you should check the \"Using WebPlayer templates page\", note that for each built-in and custom template there will be an icon in this section. ",194],["Icon",194],["Icons don't have any meaning for webplayer builds (you can set icons for Native Client builds in the Native Client section of the Player Settings).",194],["Other Settings",194],["Property: Function: ",194],["Rendering ",194],["Rendering Path This property is shared between Standalone and WebPlayer content. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Vertex Lit Lowest lighting fidelity, no shadows support. Best used on old machines or limited mobile platforms. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Forward with Shaders Good support for lighting features; limited support for shadows. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Deferred Lighting Best support for lighting and shadowing features, but requires certain level of hardware support. Best used if you have many realtime lights. ",194],["Color Space The color space to be used for rendering ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;GammaSpace Rendering Rendering is gamma-corrected ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Linear Rendering Hardware Sampling Rendering is done in linear space ",194],["Use Direct3D 11 Use Direct3D 11 for rendering. When D3D11 is not available or this flag is off, D3D9 will be used. Changing this flag in Windows Editor will switch it between D3D11 and D3D9. ",194],["Static Batching Set this to use Static batching on your build (Inactive by default in webplayers). ",194],["Dynamic Batching Set this to use Dynamic Batching on your build (Activated by default). ",194],["Streaming  ",194],["First Streamed Level If you are publishing a Streamed Web Player, this is the index of the first level that will have access to all Resources.Load assets. ",194],["Configuration  ",194],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",194],["Optimization  ",194],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",194],["Standalone",194],["Resolution And Presentation",194],["Property: Function: ",194],["Resolution  ",194],["Default Screen Width Screen Width the stand alone game will be using by default. ",194],["Default Screen Height Screen Height the plater will be using by default. ",194],["Run in background Check this if you dont want to stop executing your game if it looses focus. ",194],["Standalone Player Options  ",194],["Default is Full Screen Check this if you want to start your game by default in full screen mode. ",194],["Capture Single Screen If enabled, standalone games in fullscreen mode will not darken the secondary monitor in multi-monitor setups (This is no longer supported on Mac OS X). ",194],["DisplayResolution Dialog  ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Disabled No resolution dialog will appear when starting the game. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Enabled Resolution dialog will always appear when the game is launched. ",194],["Hidden by default The resolution player is possible to be opened only if you have pressed the \"alt\" key when starting the game. ",194],["Use Player Log Write a log file with debugging information. If you plan to submit your application to the Mac App Store you will want to leave this option un-ticked. Ticked is the default. ",194],["Resizable Window Allow user to resize the standalone player window. ",194],["Mac App Store Validation Enable receipt validation for the Mac App Store. ",194],["Mac Fullscreen Mode Options for fullscreen mode on Mac builds ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Capture Display Unity will take over the whole display (ie, GUI from other apps will not appear and the user cannot switch apps until fullscreen mode is exited). ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fullscreen Window Unity runs in a window that covers the whole screen at desktop resolution. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fullscreen Window with Menu Bar and Dock As fullscreen window mode but the standard menu bar and dock will also be shown. ",194],["Supported Aspect Ratios Aspect Ratios selectable in the Resolution Dialog will be monitor-supported resolutions of enabled items from this list. ",194],["Icon",194],["Property: Function: ",194],["Override for Standalone Check if you want to assign a custom icon you would like to be used for your standalone game. Different sizes of the icon should fill in the squares below. ",194],["Splash Image",194],["Property: Function: ",194],["Config Dialog Banner Add your custom splash image that will be displayed when the game is starting. ",194],["Other Settings",194],["Property: Function: ",194],["Rendering ",194],["Rendering Path This property is shared between Standalone and WebPlayer content. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Vertex Lit Lowest lighting fidelity, no shadows support. Best used on old machines or limited mobile platforms. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Forward with Shaders Good support for lighting features; limited support for shadows. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Deferred Lighting Best support for lighting and shadowing features, but requires certain level of hardware support. Best used if you have many realtime lights. ",194],["Color Space The color space to be used for rendering ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;GammaSpace Rendering Rendering is gamma-corrected ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Linear Rendering Hardware Sampling Rendering is done in linear space ",194],["Static Batching Set this to use Static batching on your build (Inactive by default in webplayers). ",194],["Dynamic Batching Set this to use Dynamic Batching on your build (Activated by default). ",194],["Configuration  ",194],["Scripting Backend Mono or il2cpp ",194],["Disable Analytics Prevent built app from reporting usage to Unity servers. ",194],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",194],["Optimization  ",194],["API Compatibility Level See below ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 .Net 2.0 libraries. Maximum .net compatibility, biggest file sizes ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 Subset Subset of full .net compatibility, smaller file sizes ",194],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",194],["API Compatibility Level",194],["You can choose your mono api compatibility level for all targets except the webplayer. Sometimes a 3rd party .net dll will use things that are outside of the .net compatibility level that you would like to use. In order to understand what is going on in such cases, and how to best fix it, get \"Reflector\" on windows.",194],["Drag the .net assemblies for the api compatilibity level in question into reflector. You can find these in Frameworks/Mono/lib/mono/YOURSUBSET/",194],["Also drag in your 3rd party assembly.",194],["Right click your 3rd party assembly, and select \"Analyze\".",194],["In the analysis report, inspect the \"Depends on\" section. Anything that the 3rd party assembly depends on, but is not available in the .net compatibility level of your choice will be highlighted in red there.",194],["iOS",194],["Resolution And Presentation",194],["Property: Function: ",194],["Resolution  ",194],["Default Orientation (This setting is shared between iOS and Android devices) ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Portrait The device is in portrait mode, with the device held upright and the home button at the bottom. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Portrait Upside Down The device is in portrait mode but upside down, with the device held upright and the home button at the top. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Landscape Right The device is in landscape mode, with the device held upright and the home button on the left side. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Landscape Left The device is in landscape mode, with the device held upright and the home button on the right side. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Auto Rotation The screen orientation is automatically set based on the physical device orientation. ",194],["Auto Rotation settings  ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use Animated Autorotation When checked, orientation change is animated. This only applies when Default orientation is set to Auto Rotation. ",194],["Allowed Orientations for Auto Rotation  ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Portrait When checked, portrait orientation is allowed. This only applies when Default orientation is set to Auto Rotation. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Portrait Upside Down When checked, portrait upside down orientation is allowed. This only applies when Default orientation is set to Auto Rotation. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Landscape Right When checked, landscape right (home button on the left side) orientation is allowed. This only applies when Default orientation is set to Auto Rotation. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Landscape Left When checked, landscape left (home button is on the right side) orientation is allowed. This only applies when Default orientation is set to Auto Rotation. ",194],["Status Bar  ",194],["Status Bar Hidden Specifies whether the status bar is initially hidden when the application launches. ",194],["Status Bar Style Specifies the style of the status bar as the application launches ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Default  ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Black Translucent  ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Black Opaque  ",194],["Use 32-bit Display Buffer Specifies if Display Buffer should be created to hold 32-bit color values (16-bit by default). Use it if you see banding, or need alpha in your ImageEffects, as they will create RTs in same format as Display Buffer. ",194],["Show Loading Indicator Options for the loading indicator ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Don't Show No indicator ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;White Large Indicator shown large and in white ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;White Indicator shown at normal size in white ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Gray Indicator shown at normal size in gray ",194],["Icon",194],["Property: Function: ",194],["Override for iOS Check if you want to assign a custom icon you would like to be used for your iPhone/iPad game. Different sizes of the icon should fill in the squares below. ",194],["Prerendered icon If unchecked iOS applies sheen and bevel effects to the application icon. ",194],["Splash Image",194],["Property: Function: ",194],["Mobile Splash Screen (Pro-only feature) Specifies texture which should be used for iOS Splash Screen. Standard Splash Screen size is 320x480.(This is shared between Android and iOS) ",194],["iPhone 3.5\\\"/Retina (Pro-only feature) Specifies texture which should be used for iOS 3.5\\\" Retina Splash Screen. Splash Screen size is 640x960. ",194],["iPhone 4\\\"/Retina (Pro-only feature) Specifies texture which should be used for iOS 4\\\" Retina Splash Screen. Splash Screen size is 640x1136. ",194],["iPad Portrait (Pro-only feature) Specifies texture which should be used as iPad Portrait orientation Splash Screen. Standard Splash Screen size is 768x1024. ",194],["High Res. iPad Portrait Specifies texture which should be used as the high res iPad Portrait orientation Splash Screen. Standard Splash Screen size is 1536x2048. ",194],["iPad Landscape (Pro-only feature) Specifies texture which should be used as iPad Landscape orientation Splash Screen. Standard Splash Screen size is 1024x768. ",194],["High res. iPad Landscape (Pro-only feature) Specifies texture which should be used as the high res iPad Landscape orientation Splash Screen. Standard Splash Screen size is 2048x1536. ",194],["Other Settings",194],["Property: Function: ",194],["Rendering  ",194],["Static Batching Set this to use Static batching on your build (Activated by default). ",194],["Dynamic Batching Set this to use Dynamic Batching on your build (Activated by default). ",194],["Identification  ",194],["Bundle Identifier The string used in your provisioning certificate from your Apple Developer Network account(This is shared between iOS and Android) ",194],["Bundle Version Specifies the build version number of the bundle, which identifies an iteration (released or unreleased) of the bundle. The version is specified in the common format of a string containing numbers separated by dots (eg, 4.3.2). ",194],["Configuration ",194],["Target Device Specifies application target device type. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;iPhone Only Application is targeted for iPhone devices only. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;iPad Only Application is targeted for iPad devices only. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;iPhone + iPad Application is targeted for both iPad and iPhone devices. ",194],["Target Resolution Resolution you want to use on your deployed device.(This setting will not have any effect on devices with maximum resolution of 480x320) ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Native(Default Device Resolution) Will use the device native resolution. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Auto (Best Performance) Chooses resolution automatically, favouring performance over graphic quality. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Auto (Best Quality) Chooses resolution automatically, favouring graphic quality over performance. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;320p (iPhone) Pre-Retina iPhone display. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;640p (iPhone Retina Display) iPhone with Retina. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;768p (iPad) iPad display. ",194],["Graphics Level OpenGL version. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;OpenGL ES 1.x OpenGL ES 1.x versions. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;OpenGL ES 2.0 OpenGL ES 2.0. ",194],["Accelerometer Frequency How often the accelerometer is sampled ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Disabled Accelerometer is not sampled ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;15Hz 15 samples per second ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;30Hz 30 samples per second ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;60Hz 60 samples per second ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;100Hz 100 samples per second ",194],["Override iPod Music If selected, the application will silence user's iPod music. Otherwise user's iPod music will continue playing in the background. ",194],["UI Requires Persistent WiFi Specifies whether the application requires a Wi-Fi connection. iOS maintains the active Wi-Fi connection open while the application is running. ",194],["Exit on Suspend Specifies whether the application should quit when suspended to background on iOS versions that support multitasking. ",194],["Submit HW Statistics Specifies whether the application should send anonymous HW data to Unity servers. ",194],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",194],["Optimization  ",194],["Api Compatibility Level Specifies active .NET API profile. See below ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 .Net 2.0 libraries. Maximum .net compatibility, biggest file sizes ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 Subset Subset of full .net compatibility, smaller file sizes ",194],["AOT compilation options Additional AOT compiler options. ",194],["SDK Version Specifies iPhone OS SDK version to use for building in Xcode ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Device SDK SDK to run on actual hardware. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Simulator SDK SDK to run only on the simulator. ",194],["Target iOS Version Specifies lowest iOS version where final application will able to run; ranges from iOS 4.0 to 6.0. ",194],["Stripping Level Options to strip out scripting features to reduce built player size (This setting is shared between iOS and Android Platforms) ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Disabled No reduction is done. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strip Assemblies Level 1 size reduction. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strip ByteCode Level 2 size reduction (includes reductions from Level 1). ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use micro mscorlib Level 3 size reduction (includes reductions from Levels 1 and 2). ",194],["Script Call Optimization Optionally disable exception handling for a speed boost at runtime ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Slow and Safe Full exception handling will occur with some performance impact on the device ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fast but no Exceptions No data provided for exceptions on the device, but the game will run faster ",194],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",194],["Note: If you build for example for iPhone OS 3.2, and then select Simulator 3.2 in Xcode you will get a ton of errors. So you MUST be sure to select a proper Target SDK in Unity Editor.",194],["API Compatibility Level",194],["You can choose your mono api compatibility level for all targets except the webplayer. Sometimes a 3rd party .net dll will use things that are outside of the .net compatibility level that you would like to use. In order to understand what is going on in such cases, and how to best fix it, get \"Reflector\" on windows.",194],["Drag the .net assemblies for the api compatilibity level in question into reflector. You can find these in Frameworks/Mono/lib/mono/YOURSUBSET/",194],["Also drag in your 3rd party assembly.",194],["Right click your 3rd party assembly, and select \"Analyze\".",194],["In the analysis report, inspect the \"Depends on\" section. Anything that the 3rd party assembly depends on, but is not available in the .net compatibility level of your choice will be highlighted in red there.",194],["Android",194],["Resolution And Presentation",194],["Property: Function: ",194],["Resolution  ",194],["Default Orientation (This setting is shared between iOS and Android devices) ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Portrait The device is in portrait mode, with the device held upright and the home button at the bottom. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Portrait Upside Down The device is in portrait mode but upside down, with the device held upright and the home button at the top (only available with Android OS 2.3 and later). ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Landscape Right The device is in landscape mode, with the device held upright and the home button on the left side (only available with Android OS 2.3 and later). ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Landscape Left The device is in landscape mode, with the device held upright and the home button on the right side. ",194],["Use 32-bit Display Buffer Specifies if Display Buffer should be created to hold 32-bit color values (16-bit by default). Use it if you see banding, or need alpha in your ImageEffects, as they will create RTs in same format as Display Buffer. Not supported on devices running pre-Gingerbread OS (will be forced to 16-bit). ",194],["Use 24-bit Depth Buffer If set Depth Buffer will be created to hold (at least) 24-bit depth values. Use it only if you see 'z-fighting' or other artifacts, as it may have performance implications. ",194],["Icon",194],["Property: Function: ",194],["Override for Android Check if you want to assign a custom icon you would like to be used for your Android game. Different sizes of the icon should fill in the squares below. ",194],["Splash Image",194],["Property: Function: ",194],["Mobile Splash Screen (Pro-only feature) Specifies texture which should be used by the Splash Screen. Standard Splash Screen size is 320x480. (This is shared between Android and iOS) ",194],["Splash Scaling Specifies how will be the splash image scaling on the device. ",194],["Other Settings",194],["",194],["Rendering  ",194],["Static Batching Set this to use Static batching on your build (Activated by default). ",194],["Dynamic Batching Set this to use Dynamic Batching on your build (Activated by default). ",194],["Identification  ",194],["Bundle Identifier The string used in your provisioning certificate from your Apple Developer Network account(This is shared between iOS and Android) ",194],["Bundle Version Specifies the build version number of the bundle, which identifies an iteration (released or unreleased) of the bundle. The version is specified in the common format of a string containing numbers separated by dots (eg, 4.3.2). (This is shared between iOS and Android.) ",194],["Bundle Version Code An internal version number. This number is used only to determine whether one version is more recent than another, with higher numbers indicating more recent versions. This is not the version number shown to users; that number is set by the versionName attribute. The value must be set as an integer, such as \"100\". You can define it however you want, as long as each successive version has a higher number. For example, it could be a build number. Or you could translate a version number in \"x.y\" format to an integer by encoding the \"x\" and \"y\" separately in the lower and upper 16 bits. Or you could simply increase the number by one each time a new version is released. ",194],["Minimum API Level Minimum API version required to support the build. ",194],["Configuration ",194],["Graphics Level Select either ES 1.1 ('fixed function') or ES 2.0 ('shader based') Open GL level. When using the AVD (emulator) only ES 1.x is supported. ",194],["Install Location Specifies application install location on the device (for detailed information, please refer to http://developer.android.com/guide/appendix/install-location.html). ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Automatic Let OS decide. User will be able to move the app back and forth. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Prefer External Install app to external storage (SD-Card) if possible. OS does not guarantee that will be possible; if not, the app will be installed to internal memory. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Force Internal Force app to be installed into internal memory. User will be unable to move the app to external storage. ",194],["Internet Access When set to Require, will enable networking permissions even if your scripts are not using this. Automatically enabled for development builds. ",194],["Write Access When set to External (SDCard), will enable write access to external storage such as the SD-Card. Automatically enabled for development builds. ",194],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",194],["Optimization  ",194],["Api Compatibility Level Specifies active .NET API profile. See below. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 .Net 2.0 libraries. Maximum .net compatibility, biggest file sizes ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 Subset Subset of full .net compatibility, smaller file sizes ",194],["Stripping Level Options to strip out scripting features to reduce built player size (This setting is shared between iOS and Android Platforms) ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Disabled No reduction is done. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strip Assemblies Level 1 size reduction. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strip ByteCode (iOS only) Level 2 size reduction (includes reductions from Level 1). ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use micro mscorlib Level 3 size reduction (includes reductions from Levels 1 and 2). ",194],["Enable \"logcat\" profiler Enable this if you want to get feedback from your device while testing your projects. So adb logcat prints logs from the device to the console (only available in development builds). ",194],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",194],["API Compatibility Level",194],["You can choose your mono api compatibility level for all targets except the webplayer. Sometimes a 3rd party .net dll will use things that are outside of the .net compatibility level that you would like to use. In order to understand what is going on in such cases, and how to best fix it, get \"Reflector\" on windows.",194],["Drag the .net assemblies for the api compatilibity level in question into reflector. You can find these in Frameworks/Mono/lib/mono/YOURSUBSET/",194],["Also drag in your 3rd party assembly.",194],["Right click your 3rd party assembly, and select \"Analyze\".",194],["In the analysis report, inspect the \"Depends on\" section. Anything that the 3rd party assembly depends on, but is not available in the .net compatibility level of your choice will be highlighted in red there.",194],["Publishing Settings",194],["Property: Function: ",194],["Keystore  ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use Existing Keystore / Create New Keystore Use this to choose whether to create a new Keystore or use an existing one. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Browse Keystore Lets you select an existing Keystore. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Keystore password Password for the Keystore. ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Confirm password Password confirmation, only enabled if the Create New Keystore option is chosen. ",194],["Key  ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Alias Key alias ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Password Password for key alias ",194],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Split Application Binary Flag to split the application into expansion files. Useful only with Google Play Store when the finished build exceeds 50MB. ",194],["Note that for security reasons, Unity will save neither the keystore password nor the key password. Also, note that the signing must be done from Unity's player settings - using jarsigner will not work. The unsigned debug keystore is located by default at ~/.android/debug.keystore on OS X and %USERPROFILE%\\.android\\debug.keystore on Windows.",194],["Details",194],["The Player Settings window is where many technical preference defaults are set. See also Quality Settings where the different graphics quality levels can be set up.",194],["Publishing a web player",194],["Default Web Screen Width and Default Web Screen Height determine the size used in the html file. You can modify the size in the html file later.",194],["Default Screen Width and Default Screen Height are used by the Web Player when entering fullscreen mode through the context menu in the Web Player at runtime.",194],["Customizing your Resolution Dialog",194],["You have the option of adding a custom banner image to the Screen Resolution Dialog in the Standalone Player. The maximum image size is 432 x 163 pixels. The image will not be scaled up to fit the screen selector. Instead it will be centered and cropped.",194],["Publishing to Mac App Store",194],["Use Player Log enables writing a log file with debugging information. This is useful to find out what happened if there are problems with your game. When publishing games for Apple's Mac App Store, it is recommended to turn this off, because Apple may reject your submission otherwise. See this manual page for further information about log files.",194],["Use Mac App Store Validation enables receipt validation for the Mac App Store. If this is enabled, your game will only run when it contains a valid receipt from the Mac App Store. Use this when submitting games to Apple for publishing on the App Store. This prevents people from running the game on any computer then the one it was purchased on. Note that this feature does not implement any strong copy protection. In particular, any potential crack against one Unity game would work against any other Unity content. For this reason, it is recommended that you implement your own receipt validation code on top of this using Unity's plugin feature. However, since Apple requires plugin validation to initially happen before showing the screen setup dialog, you should still enable this check, or Apple might reject your submission.",194],["iOS",194],["Bundle Identifier",194],["The Bundle Identifier string must match the provisioning profile of the game you are building. The basic structure of the identifier is com.CompanyName.GameName. This structure may vary internationally based on where you live, so always default to the string provided to you by Apple for your Developer Account. Your GameName is set up in your provisioning certificates, that are manageable from the Apple iPhone Developer Center website. Please refer to the Apple iPhone Developer Center website for more information on how this is performed.",194],["Stripping Level",194],["Most games don't use all necessary dlls. With this option, you can strip out unused parts to reduce the size of the built player on iOS devices. If your game is using classes that would normally be stripped out by the option you currently have selected, you'll be presented with a Debug message when you make a build.",194],["Script Call Optimization",194],["A good development practice on iOS is to never rely on exception handling (either internally or through the use of try/catch blocks). When using the default Slow and Safe option, any exceptions that occur on the device will be caught and a stack trace will be provided. When using the Fast but no Exceptions option, any exceptions that occur will crash the game, and no stack trace will be provided. However, the game will run faster since the processor is not diverting power to handle exceptions. When releasing your game to the world, it's best to publish with the Fast but no Exceptions option.",194],["Android",194],["Bundle Identifier",194],["The Bundle Identifier string is the unique name of your application when published to the Android Market and installed on the device. The basic structure of the identifier is com.CompanyName.GameName, and can be chosen arbitrarily. In Unity this field is shared with the iOS Player Settings for convenience.",194],["Stripping Level",194],["Most games don't use all the functionality of the provided dlls. With this option, you can strip out unused parts to reduce the size of the built player on Android devices.",194],["Windows Store Apps",194],["Most of these settings are transferred to Package.appxmanifest when creating Visual Studio solution for the first time.",194],["Note: If you build your project on top of the existing one, Unity won't overwrite Package.appxmanifest file if it's already present, that means if you change something in Player Settings be sure to check Package.appxmanifest, if you want Package.appxmanifest to be regenerated, simply delete it, and rebuild your project from Unity.",194],["To read more about App package manifest, please visit http://msdn.microsoft.com/en-us/library/windows/apps/br211474.aspx.",194],["Settings from Packaging, Application UI, Tile, Splash screen, Capabilities directly transfer to settings in Package.appxmanifest file.",194],["Certificate",194],["Every Windows Store App needs a certificate which identifies a developer, Unity will create a default certificate, if you won't provide your own.",194],["Compilation",194],["As you know, Unity uses Mono when compiling script files, and you can use the API located in .NET 3.5. Compilation Overrides allows you to use .NET for Windows Store Apps (also known as .NET Core) in your C# files, the API is available here.",194],["When Compilation Overrides is set to:",194],["None - C# files are compiled using Mono compiler.",194],["Use .Net Core - C# files are compiled using Microsoft compiler and .NET Core, you can use Windows Runtime API, but classes implemented in C# files aren't accessible from the JS language.",194],["Note: when using API from Windows Runtime, it's advisable to wrap the code with NETFX_CORE define, because the API is only avaible when building to Windows Store Apps, and it's not available in Unity Editor.",194],["Use .Net Core Partially - C# files not located in Plugins, Standard Assets, Pro Standard Assets folders are compiled using Microsoft compiler and .NET Core, all other C# files are compiled using Mono compiler. The advantage is that classes implemented in C# are accessible from the JS language.",194],["Note:  You won't be able to test .NET Core API in Unity Editor, because it doesn't have access to .NET Core, so you'll be able to test the API only when running Windows Store App.",194],["Note:  You cannot use .NET Core API in JS scripts.",194],["Here's a simple example how to use .NET Core API in scripts.",194],["string GetTemporaryFolder()",194],["if NETFX_CORE",194],["return Windows.Storage.ApplicationData.Current.TemporaryFolder.Path;",194],["else",194],["return \"LocalFolder\";",194],["endif",194],["Run In Background",194],["Enabling this option will cause Windows Application Certification to fail.",194],["Misc",194],["Unprocessed Plugins contains a list of plugins which are ignored by Unity's preprocessing tools (like SerializationWeaver, AssemblyPreprocessor, rrw), usually you don't need to modify this list, unless you're getting an error that Unity's failed to preprocess your plugin.",194],["What will happen if you'll add a plugin to this list?",194],["Unity won't inject additional IL code into your assembly used for serialization purposes, but if you're plugin isn't referencing UnityEngine.dll, that's totally fine, because Unity won't serialize any data from your plugin.",194],["Independent Input Source",194],["Let's you enable an option for independent input source, you can read more here. Basically this makes your input more responsive, and usually you want this option to be enabled.",194],["Low Latency Presentation API",194],["Let's you enable Low Latency Presentation API, basically this create D3D11 swapchain with DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT flag, read more here and should increase input responsiveness. This option is disabled by default because on hardware with older GPU drivers, this option makes game laggy, if you enable this option - be sure to profile your game if the performance is still acceptable.",194],["Capabilities",194],["These options are directly copied to Package.appxmanifest.",194],["Note:_ If you're build your game on top of previous package, Package.appxmanifest won't be overwritten.",194],["Android Player Settings",195],["This page details the Player Settings specific to Android. A description of the general Player Settings can be found here.",195],["Resolution And Presentation",195],["Property: Function: ",195],["Resolution  ",195],["Default Orientation The game's screen orientation. The options are Portrait (home button at the bottom), Portrait Upside Down (home button at the top, Android 2.3+), Landscape Left (home button on the right side) and Landscape Right (home button on the left side, Android 2.3+). ",195],["Status Bar  ",195],["Status Bar Hidden Should the status bar be invisible while the game runs? ",195],["Other  ",195],["Use 32-bit Display Buffer Specifies if Display Buffer should be created to hold 32-bit color values (16-bit by default). Use it if you see banding, or need alpha in your ImageEffects, as they will create RTs in same format as Display Buffer. Not supported on devices running pre-Gingerbread OS (will be forced to 16-bit). ",195],["Disable Depth and Stencil Should the depth and stencil buffers be disabled? ",195],["Show Loading Indicator The type of loading progress indicator that should be shown. Options are Don't Show, Large, Inversed Large, Small and Inversed Small. ",195],["Icon",195],["Property: Function: ",195],["Override for Android Check if you want to override the default icon with a custom one for Android. The icon images at various different sizes can be dragged into the appropriate squares. ",195],["Splash Image",195],["Property: Function: ",195],["Mobile Splash Screen (Pro-only feature) Specifies the texture that should be used for the Android splash screen. The standard size for the splash screen image is 320x480. ",195],["Splash Scaling Specifies how the splash image will be scaled to fit the device's screen. The options are Center (only scale down), Scale to Fit (letter-boxed) and Scale to Fill (cropped). ",195],["Other Settings",195],["Property: Function: ",195],["Rendering  ",195],["Rendering Path The rendering path enabled for the game. ",195],["Static Batching Set this to use Static batching on your build (enabled by default). ",195],["Dynamic Batching Set this to use Dynamic Batching on your build (enabled by default). ",195],["GPU Skinning Should DX11/ES3 GPU skinning be enabled? ",195],["Identification  ",195],["Bundle Identifier The string used in your provisioning certificate from your Apple Developer Network account(This is shared between iOS and Android) ",195],["Bundle Version Specifies the build version number of the bundle, which identifies an iteration (released or unreleased) of the bundle. The version is specified in the common format of a string containing numbers separated by dots (eg, 4.3.2). (This is shared between iOS and Android.) ",195],["Bundle Version Code An internal version number. This number is used only to determine whether one version is more recent than another, with higher numbers indicating more recent versions. This is not the version number shown to users; that number is set by the versionName attribute. The value must be set as an integer, such as \"100\". You can define it however you want, as long as each successive version has a higher number. For example, it could be a build number. Or you could translate a version number in \"x.y\" format to an integer by encoding the \"x\" and \"y\" separately in the lower and upper 16 bits. Or you could simply increase the number by one each time a new version is released. ",195],["Minimum API Level Minimum API version required to support the build. ",195],["Configuration ",195],["Graphics Level Select OpenGL ES level to use. ",195],["Device Filter Limit the game to run only on specific CPUs. ",195],["Install Location Specifies application install location on the device (for detailed information, please refer to http://developer.android.com/guide/appendix/install-location.html). ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Automatic Let OS decide. User will be able to move the app back and forth. ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Prefer External Install app to external storage (SD-Card) if possible. OS does not guarantee that will be possible; if not, the app will be installed to internal memory. ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Force Internal Force app to be installed into internal memory. User will be unable to move the app to external storage. ",195],["Internet Access When set to Require, will enable networking permissions even if your scripts are not using this. Automatically enabled for development builds. ",195],["Write Access When set to External (SDCard), will enable write access to external storage such as the SD-Card. Automatically enabled for development builds. ",195],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",195],["Optimization  ",195],["Api Compatibility Level Specifies active .NET API profile. See below. ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 .Net 2.0 libraries. Maximum .net compatibility, biggest file sizes ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 Subset Subset of full .net compatibility, smaller file sizes ",195],["Stripping Level Options to strip out scripting features to reduce built player size (This setting is shared between iOS and Android Platforms) ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Disabled No reduction is done. ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strip Assemblies Level 1 size reduction. ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strip ByteCode (iOS only) Level 2 size reduction (includes reductions from Level 1). ",195],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use micro mscorlib Level 3 size reduction (includes reductions from Levels 1 and 2). ",195],["Enable \"logcat\" profiler Enable this if you want to get feedback from your device while testing your projects. So adb logcat prints logs from the device to the console (only available in development builds). ",195],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",195],["Enable Verbose Memory Stats Allow detailed memory usage information to be recorded (at the expense of performance). ",195],["API Compatibility Level",195],["You can choose your mono api compatibility level for all targets except the webplayer. Sometimes a 3rd party .net dll will use things that are outside of the .net compatibility level that you would like to use. In order to understand what is going on in such cases, and how to best fix it, get \"Reflector\" on windows.",195],["Drag the .net assemblies for the api compatilibity level in question into reflector. You can find these in Frameworks/Mono/lib/mono/YOURSUBSET/",195],["Also drag in your 3rd party assembly.",195],["Right click your 3rd party assembly, and select \"Analyze\".",195],["In the analysis report, inspect the \"Depends on\" section. Anything that the 3rd party assembly depends on, but is not available in the .net compatibility level of your choice will be highlighted in red there.",195],["Publishing Settings",195],["Property: Function: ",195],["Keystore  ",195],["Use Existing Keystore / Create New Keystore Use this to choose whether to create a new Keystore or use an existing one. You can use the Browse Keystore button to select a Keystore from the filesystem. ",195],["Keystore password Password for the Keystore. ",195],["Confirm password Password confirmation (only enabled if the Create New Keystore option is chosen). ",195],["Key  ",195],["Alias Key alias. ",195],["Password Password for key alias. ",195],["Split Application Binary Flag to split the application into expansion files. Useful only with Google Play Store when the finished build exceeds 50MB. ",195],["Note that for security reasons, Unity will save neither the keystore password nor the key password. Also, note that the signing must be done from Unity's player settings - using jarsigner will not work. The unsigned debug keystore is located by default at ~/.android/debug.keystore on OS X and %USERPROFILE%\\.android\\debug.keystore on Windows.",195],["Details",195],["Bundle Identifier",195],["The Bundle Identifier string is the unique name of your application when published to the Android Market and installed on the device. The basic structure of the identifier is com.CompanyName.GameName, and can be chosen arbitrarily. In Unity this field is shared with the iOS Player Settings for convenience.",195],["Stripping Level",195],["Most games don't use all the functionality of the provided dlls. With this option, you can strip out unused parts to reduce the size of the built player on Android devices.",195],["iOS Player Settings",196],["This page details the Player Settings specific to iOS. A description of the general Player Settings can be found here.",196],["Resolution And Presentation",196],["Property: Function: ",196],["Resolution  ",196],["Default Orientation (This setting is shared between iOS and Android devices) ",196],["Default Orientation The game's screen orientation. The options are Portrait (home button at the bottom), Portrait Upside Down (home button at the top), Landscape Left (home button on the right side), Landscape Right (home button on the left side) and Auto Rotation (screen orientation changes with device orientation). ",196],["Use Animated Autorotation Should orientation changes animate the screen rotation rather than just switch? (Only visible when the Default Orientation is set to Auto Rotation.) ",196],["Allowed Orientations for Auto Rotation (Only visible when the Default Orientation is set to Auto Rotation.) ",196],["Portrait Allow portrait orientation. ",196],["Portrait Upside Down Allow portrait upside down orientation. ",196],["Landscape Right Allow landscape right orientation (ie, home button on the left side). ",196],["Landscape Left Allow landscape left orientation (home button is on the right side). ",196],["Status Bar  ",196],["Status Bar Hidden Specifies whether the status bar is initially hidden when the application launches. ",196],["Status Bar Style Specifies the style of the status bar as the application launches. The options are Default, Black Translucent and Black Opaque. ",196],["Use 32-bit Display Buffer Specifies if Display Buffer should be created to hold 32-bit color values (by default, it uses 16-bit values). Use it if you see banding or need alpha in your Image Effects, as they will create RTs in the same format as the Display Buffer. ",196],["Disable Depth and Stencil Should the depth and stencil buffers be disabled? ",196],["Show Loading Indicator How should the loading indicator be displayed? The options are Don't Show, White Large, White and Gray. ",196],["Icon",196],["Property: Function: ",196],["Override for iOS Check if you want to assign a custom icon you would like to be used for your iPhone/iPad game. Different sizes of the icon should fill in the squares below. ",196],["Prerendered icon If unchecked iOS applies sheen and bevel effects to the application icon. ",196],["Splash Image",196],["Property: Function: ",196],["Mobile Splash Screen (Pro-only feature) Specifies texture which should be used for iOS Splash Screen. Standard Splash Screen size is 320x480.(This is shared between Android and iOS) ",196],["iPhone 3.5\\\"/Retina (Pro-only feature) Specifies texture which should be used for iOS 3.5\\\" Retina Splash Screen. Splash Screen size is 640x960. ",196],["iPhone 4\\\"/Retina (Pro-only feature) Specifies texture which should be used for iOS 4\\\" Retina Splash Screen. Splash Screen size is 640x1136. ",196],["iPad Portrait (Pro-only feature) Specifies texture which should be used as iPad Portrait orientation Splash Screen. Standard Splash Screen size is 768x1024. ",196],["High Res. iPad Portrait Specifies texture which should be used as the high res iPad Portrait orientation Splash Screen. Standard Splash Screen size is 1536x2048. ",196],["iPad Landscape (Pro-only feature) Specifies texture which should be used as iPad Landscape orientation Splash Screen. Standard Splash Screen size is 1024x768. ",196],["High res. iPad Landscape (Pro-only feature) Specifies texture which should be used as the high res iPad Landscape orientation Splash Screen. Standard Splash Screen size is 2048x1536. ",196],["Debugging and Crash Reporting",196],["Property: Function: ",196],["Enable Internal Profiler Enables an internal profiler which collects performance data of the application and prints a report to the console. The report contains the number of milliseconds that it took for each Unity subsystem to execute on each frame. The data is averaged across 30 frames. ",196],["On .Net UnhandledException The action taken on .NET unhandled exception. The options are Crash (the application crashes hardly and forces iOS to generate a crash report that can be submitted to iTunes by app users and inspected by developers), Silent Exit (the application exits gracefully). ",196],["Log ObjC uncaught exceptions Enables a custom Objective-C Uncaught Exception handler, which will print exception information to console. ",196],["Enable Crash Report API Enables a custom crash reporter to capture crashes. Crash logs will be available to scripts via CrashReport API. ",196],["Other Settings",196],["Property: Function: ",196],["Rendering  ",196],["Rendering Path The rendering path enabled for the game. ",196],["Static Batching Set this to use Static batching on your build (enabled by default). ",196],["Dynamic Batching Set this to use Dynamic Batching on your build (enabled by default). ",196],["GPU Skinning Should DX11/ES3 GPU skinning be enabled? ",196],["Identification  ",196],["Bundle Identifier The string used in your provisioning certificate from your Apple Developer Network account(This is shared between iOS and Android) ",196],["Bundle Version Specifies the build version number of the bundle, which identifies an iteration (released or unreleased) of the bundle. The version is specified in the common format of a string containing numbers separated by dots (eg, 4.3.2). ",196],["Configuration ",196],["Target Device Which devices are targeted by the game? The options are iPhone Only, iPad Only and iPhone + iPad. ",196],["Target Resolution What resolution should be used for the game? (This setting does not have any effect on devices with a maximum resolution of 480x320.) The options are Native(Default Device Resolution), Auto (Best Performance), Auto (Best Quality), 320p (iPhone), 640p (iPhone Retina Display) and 768p (iPad). ",196],["Graphics Level Select OpenGL ES level to use. ",196],["Accelerometer Frequency How often is the accelerometer sampled? The options are Disabled (ie, no samples are taken), 15Hz, 30Hz, 60Hz and 100Hz. ",196],["Override iPod Music If selected, the application will silence user's iPod music. Otherwise user's iPod music will continue playing in the background. ",196],["Prepare iOS for Recording  ",196],["Requires Persistent WiFi Specifies whether the application requires a Wi-Fi connection. iOS maintains the active Wi-Fi connection while the application is running. ",196],["Exit on Suspend Specifies whether the application should quit when suspended to background on iOS versions that support multitasking. ",196],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",196],["Optimization  ",196],["Api Compatibility Level Specifies active .NET API profile. See below ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 .Net 2.0 libraries. Maximum .net compatibility, biggest file sizes ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 Subset Subset of full .net compatibility, smaller file sizes ",196],["AOT compilation options Additional AOT compiler options. ",196],["SDK Version Specifies iPhone OS SDK version to use for building in Xcode ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Device SDK SDK to run on actual hardware. ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Simulator SDK SDK to run only on the simulator. ",196],["Target iOS Version Specifies lowest iOS version where final application will able to run. The options are 6.0, 7.0 and Unknown. ",196],["Stripping Level Options to strip out scripting features to reduce built player size(This setting is shared between iOS and Android Platforms) ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Disabled No reduction is done. ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strip Assemblies Level 1 size reduction. ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Strip ByteCode Level 2 size reduction (includes reductions from Level 1). ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use micro mscorlib Level 3 size reduction (includes reductions from Levels 1 and 2). ",196],["Script Call Optimization Optionally disable exception handling for a speed boost at runtime ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Slow and Safe Full exception handling will occur with some performance impact on the device ",196],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fast but no Exceptions No data provided for exceptions on the device, but the game will run faster ",196],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",196],["Enable Verbose Memory Stats Allow detailed memory usage information to be recorded (at the expense of performance). ",196],["Note: Be sure to select the correct SDK - if you select Device, say, but then target the Simulator in Xcode then the build will fail with a lot of error messages.",196],["API Compatibility Level",196],["You can choose your mono api compatibility level for all targets except the webplayer. Sometimes a 3rd party .net dll will use things that are outside of the .net compatibility level that you would like to use. In order to understand what is going on in such cases, and how to best fix it, get \"Reflector\" on windows.",196],["Drag the .net assemblies for the api compatilibity level in question into reflector. You can find these in Frameworks/Mono/lib/mono/YOURSUBSET/",196],["Also drag in your 3rd party assembly.",196],["Right click your 3rd party assembly, and select \"Analyze\".",196],["In the analysis report, inspect the \"Depends on\" section. Anything that the 3rd party assembly depends on, but is not available in the .net compatibility level of your choice will be highlighted in red there.",196],["Details",196],["Bundle Identifier",196],["The Bundle Identifier string must match the provisioning profile of the game you are building. The basic structure of the identifier is com.CompanyName.GameName. This structure may vary internationally based on where you live, so always default to the string provided to you by Apple for your Developer Account. Your GameName is set up in your provisioning certificates, that are manageable from the Apple iPhone Developer Center website. Please refer to the Apple iPhone Developer Center website for more information on how this is performed.",196],["Stripping Level",196],["Most games don't use all necessary dlls. With this option, you can strip out unused parts to reduce the size of the built player on iOS devices. If your game is using classes that would normally be stripped out by the option you currently have selected, you'll be presented with a Debug message when you make a build.",196],["Script Call Optimization",196],["A good development practice on iOS is to never rely on exception handling (either internally or through the use of try/catch blocks). When using the default Slow and Safe option, any exceptions that occur on the device will be caught and a stack trace will be provided. When using the Fast but no Exceptions option, any exceptions that occur will crash the game, and no stack trace will be provided. However, the game will run faster since the processor is not diverting power to handle exceptions. When releasing your game to the world, it's best to publish with the Fast but no Exceptions option.",196],["Standalone Player Settings",197],["This page details the Player Settings specific to standalone platforms (Mac OSX, Windows and Linux). A description of the general Player Settings can be found here.",197],["Resolution And Presentation",197],["Property: Function: ",197],["Resolution  ",197],["Default is Full Screen Should the game start in fullscreen mode by default? ",197],["Default Screen Width Default width of the game screen in pixels. ",197],["Default Screen Height Default height of the game screen in pixels. ",197],["Run in background Should the game keep running (rather than pausing) if the app loses focus? ",197],["Standalone Player Options  ",197],["Capture Single Screen If enabled, standalone games in fullscreen mode will not darken the secondary monitor in multi-monitor setups (no longer supported on Mac OS X). ",197],["Display Resolution Dialog Should the game start with a dialog to let the user choose the screen resolution? The options are Disabled, Enabled and Hidden by Default (ie, the dialog only appears if the alt key is held down at startup). ",197],["Use Player Log Write a log file with debugging information. If you plan to submit your application to the Mac App Store you will want to leave this option un-ticked. Ticked is the default. ",197],["Resizable Window Allow user to resize the standalone player window. ",197],["Mac App Store Validation Enable receipt validation for the Mac App Store. ",197],["Mac Fullscreen Mode How should fullscreen mode operate on MacOSX? The options are Capture Display (ie, Unity takes over the whole display and the user cannot switch apps until fullscreen mode is exited), Fullscreen Window and Fullscreen Window with Menu Bar and Dock. ",197],["Supported Aspect Ratios The aspect ratios that will appear in the Resolution Dialog at startup (as long as they are supported by the user's monitor). ",197],["Icon",197],["Property: Function: ",197],["Override for Standalone Check if you want to assign a custom icon you would like to be used for your standalone game. Different sizes of the icon should fill in the squares below. ",197],["Splash Image",197],["Property: Function: ",197],["Config Dialog Banner Add your custom splash image that will be displayed when the game is starting. ",197],["Other Settings",197],["Property: Function: ",197],["Rendering ",197],["Rendering Path This property is shared between Standalone and WebPlayer content. ",197],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Vertex Lit Lowest lighting fidelity, no shadows support. Best used on old machines or limited mobile platforms. ",197],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Forward with Shaders Good support for lighting features; limited support for shadows. ",197],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Deferred Lighting Best support for lighting and shadowing features, but requires certain level of hardware support. Best used if you have many realtime lights. ",197],["Color Space Which color space should be used for rendering? The options are Gamma and Linear. ",197],["Use Direct3D 11 Use Direct3D 11 for rendering. When D3D11 is not available or this flag is off, D3D9 will be used. ",197],["Static Batching Set this to use Static batching (inactive by default in webplayers). ",197],["Dynamic Batching Set this to use Dynamic Batching on your build (activated by default). ",197],["GPU Skinning Should DX11/ES3 GPU skinning be enabled? ",197],["Stereoscopic Rendering Should stereoscopic rendering be enabled? ",197],["Configuration  ",197],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",197],["Optimization  ",197],["API Compatibility Level See below ",197],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 .Net 2.0 libraries. Maximum .net compatibility, biggest file sizes ",197],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 Subset Subset of full .net compatibility, smaller file sizes ",197],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",197],["Enable Verbose Memory Stats Allow detailed memory usage information to be recorded (at the expense of performance). ",197],["API Compatibility Level",197],["You can choose your mono api compatibility level for all targets except the webplayer. Sometimes a 3rd party .net dll will use things that are outside of the .net compatibility level that you would like to use. In order to understand what is going on in such cases, and how to best fix it, get \"Reflector\" on windows.",197],["Drag the .net assemblies for the api compatilibity level in question into reflector. You can find these in Frameworks/Mono/lib/mono/YOURSUBSET/",197],["Also drag in your 3rd party assembly.",197],["Right click your 3rd party assembly, and select \"Analyze\".",197],["In the analysis report, inspect the \"Depends on\" section. Anything that the 3rd party assembly depends on, but is not available in the .net compatibility level of your choice will be highlighted in red there.",197],["Details",197],["Customizing your Resolution Dialog",197],["You have the option of adding a custom banner image to the Screen Resolution Dialog in the Standalone Player. The maximum image size is 432 x 163 pixels. The image will not be scaled up to fit the screen selector. Instead it will be centered and cropped.",197],["Publishing to the Mac App Store",197],["Use Player Log enables writing a log file with debugging information. This is useful to find out what happened if there are problems with your game. When publishing games for Apple's Mac App Store, it is recommended to turn this off, because Apple may reject your submission otherwise. See this manual page for further information about log files.",197],["Use Mac App Store Validation enables receipt validation for the Mac App Store. If this is enabled, your game will only run when it contains a valid receipt from the Mac App Store. Use this when submitting games to Apple for publishing on the App Store. This prevents people from running the game on any computer then the one it was purchased on. Note that this feature does not implement any strong copy protection. In particular, any potential crack against one Unity game would work against any other Unity content. For this reason, it is recommended that you implement your own receipt validation code on top of this using Unity's plugin feature. However, since Apple requires plugin validation to initially happen before showing the screen setup dialog, you should still enable this check, or Apple might reject your submission.",197],["Windows Store Apps",197],["Most of these settings are transferred to Package.appxmanifest when creating Visual Studio solution for the first time.",197],["Note: If you build your project on top of the existing one, Unity won't overwrite Package.appxmanifest file if it's already present, that means if you change something in Player Settings be sure to check Package.appxmanifest, if you want Package.appxmanifest to be regenerated, simply delete it, and rebuild your project from Unity.",197],["To read more about App package manifest, please visit http://msdn.microsoft.com/en-us/library/windows/apps/br211474.aspx.",197],["Settings from Packaging, Application UI, Tile, Splash screen, Capabilities directly transfer to settings in Package.appxmanifest file.",197],["Certificate",197],["Every Windows Store App needs a certificate which identifies a developer, Unity will create a default certificate, if you won't provide your own.",197],["Compilation",197],["As you know, Unity uses Mono when compiling script files, and you can use the API located in .NET 3.5. Compilation Overrides allows you to use .NET for Windows Store Apps (also known as .NET Core) in your C# files, the API is available here.",197],["When Compilation Overrides is set to:",197],["None - C# files are compiled using Mono compiler.",197],["Use .Net Core - C# files are compiled using Microsoft compiler and .NET Core, you can use Windows Runtime API, but classes implemented in C# files aren't accessible from JS.",197],["Note: when using API from Windows Runtime, it's advisable to wrap the code with NETFX_CORE define, because the API is only avaible when building to Windows Store Apps, and it's not available in Unity Editor.",197],["Use .Net Core Partially - C# files not located in Plugins, Standard Assets, Pro Standard Assets folders are compiled using Microsoft compiler and .NET Core, all other C# files are compiled using Mono compiler. The advantage is that classes implemented in C# are accessible from JS.",197],["Note:  You won't be able to test .NET Core API in Unity Editor, because it doesn't have access to .NET Core, so you'll be able to test the API only when running Windows Store App.",197],["Note:  You cannot use .NET Core API in JS.",197],["Here's a simple example how to use .NET Core API in scripts.",197],["string GetTemporaryFolder()",197],["if NETFX_CORE",197],["return Windows.Storage.ApplicationData.Current.TemporaryFolder.Path;",197],["else",197],["return \"LocalFolder\";",197],["endif",197],["Plugins",197],["Unprocessed Plugins contains a list of plugins which are ignored by Unity's preprocessing tools (like SerializationWeaver, AssemblyPreprocessor, rrw), usually you don't need to modify this list, unless you're getting an error that Unity's failed to preprocess your plugin.",197],["What will happen if you'll add a plugin to this list?",197],["Unity won't inject additional IL code into your assembly used for serialization purposes, but if you're plugin isn't referencing UnityEngine.dll, that's totally fine, because Unity won't serialize any data from your plugin.",197],["Independent Input Source",197],["Let's you enable an option for independent input source, you can read more here. Basically this makes your input more responsive, and usually you want this option to be enabled.",197],["Low Latency Presentation API",197],["Let's you enable Low Latency Presentation API, basically this create D3D11 swapchain with DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT flag, read more here and should increase input responsiveness. This option is disabled by default because on hardware with older GPU drivers, this option makes game laggy, if you enable this option - be sure to profile your game if the performance is still acceptable.",197],["Capabilities",197],["These options are directly copied to Package.appxmanifest.",197],["Note: If you're build your game on top of previous package, Package.appxmanifest won't be overwritten.",197],["Webplayer Player Settings",198],["This page details the Player Settings specific to webplayers. A description of the general Player Settings can be found here.",198],["Resolution And Presentation",198],["Property: Function: ",198],["Resolution  ",198],["Default Screen Width Screen Width the player will be generated with. ",198],["Default Screen Height Screen Height the plater will be generated with. ",198],["Run in background Check this if you don't want to stop executing your game if the player loses focus. ",198],["WebPlayer Template Custom host pages and other files for webplayer deployment. See the page about using WebPlayer templates for further details. ",198],["Other Settings",198],["Property: Function: ",198],["Rendering ",198],["Rendering Path This property is shared between Standalone and WebPlayer content. ",198],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Vertex Lit Lowest lighting fidelity, no shadows support. Best used on old machines or limited mobile platforms. ",198],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Forward with Shaders Good support for lighting features; limited support for shadows. ",198],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Deferred Lighting Best support for lighting and shadowing features, but requires certain level of hardware support. Best used if you have many realtime lights. ",198],["Color Space Which color space should be used for rendering? The options are Gamma and Linear. ",198],["Use Direct3D 11 Use Direct3D 11 for rendering. When D3D11 is not available or this flag is off, D3D9 will be used. ",198],["Static Batching Set this to use Static batching on your build (Inactive by default in webplayers). ",198],["Dynamic Batching Set this to use Dynamic Batching on your build (Activated by default). ",198],["GPU Skinning Should DX11/ES3 GPU skinning be enabled? ",198],["Streaming  ",198],["First Streamed Level If you are publishing a Streamed Web Player, this is the index of the first level that will have access to all Resources.Load assets. ",198],["Configuration  ",198],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",198],["Optimization  ",198],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",198],["Enable Verbose Memory Stats Allow detailed memory usage information to be recorded (at the expense of performance). ",198],["Details",198],["The Default Screen Width and Default Screen Height are added to the generated HTML file to specify the width and height of the player content. For custom templates, these values can be accessed via the UNITY_WIDTH and UNITY_HEIGHT template tags (see Using WebPlayer Templates for more information). In the default template, the values are used in the embedded JavaScript and CSS. The easiest way to locate them is usually to search for the numeric values in the generated HTML text.",198],["WebGL Preview Player Settings",199],["This page details the Player Settings specific to the WebGL Preview. A description of the general Player Settings can be found here.",199],["Other Settings",199],["Property: Function: ",199],["Rendering  ",199],["Static Batching Should static batching be enabled? ",199],["Dynamic Batching Should dynamic batching be enabled? ",199],["Configuration  ",199],["Scripting Backend  ",199],["Disable Analytics  ",199],["Scripting Define Symbols Custom compilation flags (see the platform dependent compilation page for details). ",199],["Optimization  ",199],["Api Compatibility Level Specifies active .NET API profile. See below. ",199],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 .Net 2.0 libraries. Maximum .net compatibility, biggest file sizes ",199],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Net 2.0 Subset Subset of full .net compatibility, smaller file sizes ",199],["Prebake Collision Meshes Enable collision mesh baking during the build. ",199],["Preload Shaders Enable shader preloading. ",199],["Preload Assets Enable asset preloading. Specify the size of assets to preload. ",199],["Stripping Level Enable code stripping for WebGL. Note that WebGL does not differentiate between different stripping levels, it is either enabled or not. If you enable Stripping, Unity will not include code for any classes you don’t use - so if you don’t use any physics components or methods for instance, the whole physics engine will be stripped from your build. ",199],["Optimize Mesh Data Remove any data from meshes that is not required by the material applied to them (tangents, normals, colors, UV). ",199],["API Compatibility Level",199],["You can choose your mono api compatibility level for all targets except the webplayer. Sometimes a 3rd party .net dll will use things that are outside of the .net compatibility level that you would like to use. In order to understand what is going on in such cases, and how to best fix it, get \"Reflector\" on windows.",199],["Drag the .net assemblies for the api compatilibity level in question into reflector. You can find these in Frameworks/Mono/lib/mono/YOURSUBSET/",199],["Also drag in your 3rd party assembly.",199],["Right click your 3rd party assembly, and select \"Analyze\".",199],["In the analysis report, inspect the \"Depends on\" section. Anything that the 3rd party assembly depends on, but is not available in the .net compatibility level of your choice will be highlighted in red there.",199],["Publishing Settings",199],["Property: Function: ",199],["WebGL Memory Size Sets the memory available to the WebGL runtime, given in megabytes. ",199],["Enable Exceptions Enable exception support ",199],["Data caching  ",199],["WebGL Template Custom host pages and other files for webplayer deployment. ",199],["Further information about WebGL Publishing Settings can be found in the WebGL Building and Running page.",199],["Standalone Plugin Settings",200],["These settings are available if you have Any Platform or Standalone selected in Platforms tab.",200],["Note: These checbkoxes affect CPU values only, that's why [[PluginImporter.GetCompatibleWithPlatform]] won't reflect any changes when clicking on the checkboxes, instead use [[PluginImporter.GetPlatformData]], pass CPU for key. You can also check *.meta file to see exactly how values are setup, for ex., if your plugin is named as Plugin.dll, search for Plugin.dll.meta.",200],["There are two types of plugins:",200],["CPU specific plugins, for ex., native plugins which can be used only for specific process architecture - 32 bit or 64 bit.",200],["Plugins working with any process architecture, for ex., managed plugins.",200],["Examples",200],["Native x86 dll file",200],["because native dll files are only usable on Windows, you only need to weak Windows settings",200],["x86 dll files cannot be used in x64 process",200],["keeping above thing in mind, check Windows x86 checkbox, leave others unchecked",200],["Managed dll file, also know as assembly file",200],["if assembly was compiled with Any Cpu option and targets .NET 3.5, all platforms (Windows, Linux, OSX) can use it",200],["check all the checkboxes, and select Any CPU for universal targets",200],["Bundle folder, containing x86 library",200],["bundles are used by OSX platform",200],["check OSX x86 checkbox, and pick x86 of Universal",200],["Bundle folder, containing x86 and x64 libraries",200],["check OSX x86 and x64 checkboxes, and pick Any CPU of Universal",200],["Point Effector 2D",201],["Point Effector 2D applies forces to attract/repulse against a point.",201],["When the source Collider2D is a trigger, the effector will apply forces whenever the target Collider2D overlaps the source. When the source Collider isn't a trigger, the effector will apply forces whenever the target Collider2D is in contact with the source only. This effector is designed primarily to work with source Collider2D that are set as triggers so that target Collider2D can overlap the defined area.",201],["Properties",201],["Property: Function: ",201],["Collider Mask The mask used to select specific layers allowed to interact with the effector. ",201],["Force  Magnitude The magnitude of the force to be applied. ",201],["Force Variation The variation of the magnitude of the force to be applied. ",201],["Distance Scale The scale applied to the distance between the source and target. ",201],["Drag The linear drag to apply to RigidBodies. ",201],["Angular Drag The angular drag to apply to RigidBodies. ",201],["Force Source The source which is used to calculate the centroid point of the effector. The distance from the target is defined from this point. ",201],["Force Target The target for where the effector applies any force. ",201],["Force Mode The mode used to apply the effector force. ",201],["Polygon Collider 2D",202],["The Polygon Collider 2D component is a collider for use with 2D physics. The collider's shape is defined by a freeform edge made of line segments, so you can adjust it to fit the shape of the Sprite graphic with great precision. Note that this collider's edge must completely enclose an area (unlike the similar Edge Collider 2D).",202],["Property: Function: ",202],["Material A physics material that determines properties of collisions, such as friction and bounce. ",202],["Is Trigger Does the collider behave as a trigger? ",202],["Used by Effector Whether the collider is used by an attached effector or not. ",202],["Offset The local offset of the collider geometry. ",202],["Collider Info Non-editable information about the complexity of the generated collider. ",202],["Details",202],["The collider can be edited manually but it is often more convenient to let Unity determine the shape automatically. You can do this by dragging a sprite asset from the Project view onto the Polygon Collider 2D component in the inspector.",202],["You can edit the polygon's shape by pressing the Edit Collider button in the Inspector. You can exit collider edit mode by pressing the Edit Collider button again. While in edit mode, you can move an existing vertex by dragging when the mouse is over that vertex. If you shift-drag while the mouse is over an edge then a new vertex will be created at the mouse location. You can remove a vertex by holding down the ctrl/cmd key while clicking on it.",202],["Note that you can hide the outline of the 2D move gizmo while editing the collider - just click the foldout arrow on the Sprite Renderer component in the Inspector to collapse it.",202],["Procedural Material Assets",203],["Procedural Material Assets are textures that are generated for you at run-time. See",203],["Procedural Materials in the User Guide for more information.",203],["A Procedural Material asset can contain one or more procedural materials.",203],["These can be viewed in the Inspector just like regular materials. Note however that often",203],["procedural materials have many tweakable parameters. As with Material assets the Inspector",203],["shows a preview of the Procedural Material at the bottom of the window.",203],["The Inspector window has 4 main panes.",203],["Substance Archive Manager.",203],["Properties.",203],["Generated Textures.",203],["Preview.",203],["Substance Archive Manager",203],["The archive view shows you all the procedural materials that the Procedural Material asset contains.",203],["Select the procedural material you are interested in from the row of previews. Procedural Materials",203],["can be Added and Deleted to the Procedural Material Asset archive using the plus and minus buttons.",203],["Adding a procedural material will create a new material using the prototype encoded in the archive.",203],["The third, Duplicate button will create a new procedural material that is a copy of the currently",203],["selected one, including all its settings. Procedural materials can be renamed by typing in a new",203],["name in the material header name field.",203],["Properties",203],["Material Properties",203],["These are the regular properties of the material, which are dependent on which shader is chosen.",203],["They work the same as for regular materials.",203],["Procedural Properties",203],["The properties of any Procedural Material will change according to how the procedural material was created.",203],["Property: Function: ",203],["Generate at Load Generate the substance when the scene loads. If disabled, it will only be generated when prompted from scripting. ",203],["Random Seed Procedural materials often need some randomness. The Random Seed can be used to vary the generated appearance. Often this will be zero. Just click the Randomize button to get a different seed and observe how the material changes. ",203],["Generated Textures",203],["This area allows you to visualize textures that the procedural material generates.",203],["The dropdown below each of the generated textures allows you to choose which texture map should",203],["supply the alpha channel for that texture. You could, for example, specify that the base alpha",203],["comes from the Transparency image, or from the Specular image. The screen-shot below shows the",203],["base alpha channel coming from the Specular image.",203],["Per-Platform Overrides",203],["When you are building for different platforms, you have to think on the resolution of your textures",203],["for the target platform, the size and the quality. You can override these options and assign specific",203],["values depending on the platform you are deploying to. Note that if you don't select any value to",203],["override, the Editor will pick the default values when building your project.",203],["",203],["Target Size ",203],["textures are designed to be resolution independent and will respect the chosen target size, but in rare",203],["cases they will use a fixed size instead, or have the possible sizes limited to within a certain range.",203],["The actual size of the generated textures can be read in the preview at the bottom of the Inspector.  ",203],["Texture Format What internal representation is used for the texture in memory, once it is generated. This is a tradeoff between size and quality: ",203],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Compressed Compressed RGB texture. This will result in considerably less memory used. ",203],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RAW Uncompressed truecolor, this is the highest quality. At 256 KB for a 256x256 texture. ",203],["Preview",203],["The procedural material preview operates in an identical manner to the material preview.",203],["However, unlike the regular material preview it shows the pixel dimensions of the generated textures.",203],["Projector",204],["A Projector allows you to project a Material onto all objects that intersect its frustum. The material must use a special type of shader for the projection effect to work correctly - see the projector prefabs in Unity's standard assets for examples of how to use the supplied Projector/Light and Projector/Multiply shaders.",204],["Properties",204],["Property: Function: ",204],["Near Clip Plane Objects in front of the near clip plane will not be projected upon. ",204],["Far Clip Plane Objects beyond this distance will not be affected. ",204],["Field Of View The field of view in degrees. This is only used if the Projector is not Ortho Graphic. ",204],["Aspect Ratio The Aspect Ratio of the Projector. This allows you to tune the height vs width of the Projector. ",204],["Is Ortho Graphic If enabled, the Projector will be Ortho Graphic instead of perspective. ",204],["Ortho Graphic Size The Ortho Graphic size of the Projection. this is only used if Is Ortho Graphic is turned on. ",204],["Material The Material that will be Projected onto Objects. ",204],["Ignore Layers Objects that are in one of the Ignore Layers will not be affected. By default, Ignore Layers is none so all geometry that intersects the Projector frustum will be affected. ",204],["Details",204],["With a projector you can:",204],["Create shadows.",204],["Make a real world projector on a tripod with another Camera that films some other part of the world using a Render Texture.",204],["Create bullet marks.",204],["Funky lighting effects.",204],["If you want to create a simple shadow effect, simply drag the StandardAssets-&gt;Blob-Shadow-&gt;Blob shadow projector Prefab into your scene. You can modify the Material to use a different Blob shadow texture.",204],["Note: When creating a projector, always be sure to set the wrap mode of the texture's material of the projector to clamp. else the projector's texture will be seen repeated and you will not achieve the desired effect of shadow over your character.",204],["Hints",204],["Projector Blob shadows can create very impressive Splinter Cell-like lighting effects if used to shadow the environment properly.",204],["When no Falloff Texture is used in the projector's Material, it can project both forward and backward, creating \"double projection\". To fix this, use an alpha-only Falloff texture that has a black leftmost pixel column.",204],["Quality Settings",205],["Unity allows you to set the level of graphical quality it will attempt to render. Generally speaking, quality comes at the expense of framerate and so it may be best not to aim for the highest quality on mobile devices or older hardware since it will have a detrimental effect on gameplay. The Quality Settings inspector (menu: Edit &gt; Project Settings &gt; Quality) is used to select the quality level in the editor for the chosen device. It is split into two main areas - at the top, there is the following matrix:",205],["Unity lets you assign a name to a given combination of quality options for easy reference. The rows of the matrix let you choose which of the different platforms each quality level will apply to. The Default row at the bottom of the matrix is not a quality level in itself but rather sets the default quality level used for each platform (a green checkbox in a column denotes the level currently chosen for that platform). Unity comes with six quality levels pre-enabled but you can add your own levels using the button below the matrix. You can use the trashcan icon (the rightmost column) to delete an unwanted quality level.",205],["You can click on the name of a quality level to select it for editing, which is done in the panel below the settings matrix:",205],["The quality options you can choose for a quality level are as follows:",205],["Property: Function: ",205],["Name The name that will be used to refer to this quality level ",205],["Rendering  ",205],["Pixel Light Count The maximum number of pixel lights when Forward Rendering is used. ",205],["Texture Quality This lets you choose whether to display textures at maximum resolution or at a fraction of this (lower resolution has less processing overhead). The options are Full Res, Half Res, Quarter Res and Eighth Res. ",205],["Anisotropic Textures This enables if and how anisotropic textures will be used. The options are Disabled, Per Texture and Forced On (ie, always enabled). ",205],["AntiAliasing This sets the level of antialiasing that will be used. The options are 2x, 4x and 8x multi-sampling. ",205],["Soft Particles Should soft blending be used for particles? ",205],["Realtime Reflection Probes Should reflection probes be updated during gameplay? ",205],["Shadows  ",205],["Shadows This determines which type of shadows should be used. The available options are Hard and Soft Shadows, Hard Shadows Only and Disable Shadows. ",205],["Shadow resolution Shadows can be rendered at several different resolutions: Low, Medium, High and Very High. The higher the resolution, the greater the processing overhead. ",205],["Shadow Projection There are two different methods for projecting shadows from a directional light. Close Fit renders higher resolution shadows but they can sometimes wobble slightly if the camera moves. Stable Fit renders lower resolution shadows but they don't wobble with camera movements. ",205],["Shadow Cascades The number of shadow cascades can be set to zero, two or four. A higher number of cascades gives better quality but at the expense of processing overhead (see the Directional Shadows page for further details). ",205],["Shadow Distance The maximum distance from camera at which shadows will be visible. Shadows that fall beyond this distance will not be rendered. ",205],["Other  ",205],["Blend Weights The number of bones that can affect a given vertex during an animation. The available options are one, two or four bones. ",205],["VSync Count Rendering can be synchronised with the refresh rate of the display device to avoid \"tearing\" artifacts (see below). You can choose to synchronise with every vertical blank (VBlank), every second vertical blank or not to synchronise at all. ",205],["LOD Bias LOD levels are chosen based on the onscreen size of an object. When the size is between two LOD levels, the choice can be biased toward the less detailed or more detailed of the two models available. This is set as a fraction from 0 to +infinity.  When it is set between 0 and 1 it favors less detail.  A setting of more than 1 favors greater detail. For example, setting LOD Bias to 2 and having it change at 50% distance, LOD actually only changes on 25%. ",205],["Maximum LOD Level The highest LOD that will be used by the game. See note below for more Information. ",205],["Particle Raycast Budget The maximum number of raycasts to use for approximate particle system collisions (those with Medium or Low quality). See Particle System Collision Module. ",205],["MaximumLOD level",205],["Models which have a LOD below the MaximumLOD level will not be used and omitted from the build (which will save storage and memory space). Unity will use the smallest LOD value from all the MaximumLOD values linked with the quality settings for the target platform. If an LOD level is included then models from that LODGroup will be included in the build and always loaded at runtime for that LODGroup, regardless of the quality setting being used. As an example, if LOD level 0 is used in any quality setting then all the LOD levels will be included in the build and all the referenced models loaded at runtime.",205],["Tearing",205],["The picture on the display device is not continuously updated but rather the updates happen at regular intervals much like frame updates in Unity. However, Unity's updates are not necessarily synchronised with those of the display, so it is possible for Unity to issue a new frame while the display is still rendering the previous one. This will result in a visual artifact called \"tearing\" at the position onscreen where the frame change occurs.",205],["It is possible to set Unity to switch frames only during the period where the display device is not updating, the so-called \"vertical blank\". The VSync option on the Quality Settings synchronises frame switches with the device's vertical blank or optionally with every other vertical blank. The latter may be useful if the game requires more than one device update to complete the rendering of a frame.",205],["Anti-aliasing",205],["Anti aliasing improves the appearance of polygon edges, so they are not \"jagged\", but smoothed out on the screen. However, it incurs a performance cost for the graphics card and uses more video memory (there's no cost on the CPU though). The level of anti-aliasing determines how smooth polygon edges are (and how much video memory does it consume).",205],["However, built-in hardware anti-aliasing does not work with Deferred Shading or HDR rendering; for these cases you'll need to use Antialiasing Image Effect.",205],["Soft Particles",205],["Soft Particles fade out near intersections with other scene geometry. This looks much nicer, however it's more expensive to compute (more complex pixel shaders), and only works on platforms that support depth textures. Furthermore, you have to use Deferred Shading or Legacy Deferred Lighting rendering path, or make the camera render depth textures from scripts.",205],["Rect Transform",206],["The Rect Transform component is the 2D layout counterpart of the Transform component. Where Transform represents a single point, Rect Transform represent a rectangle that a UI element can be placed inside. If the parent of a Rect Transform is also a Rect Transform, the child Rect Transform can also specify how it should be positioned and sized relative to the parent rectangle.",206],["Properties",206],["Property: Function: ",206],["Pos (X, Y, Z) Position of the rectangle's pivot point relative to the anchors. ",206],["Width/Height Width and height of the rectangle. ",206],["Left, Top, Right, Bottom Positions of the rectangle's edges relative to their anchors. This can be thought of as padding inside the rectangle defined by the anchors. Shown in place of Pos and Width/Height when the anchors are separated (see below). ",206],["Anchors The anchor points for the lower left corner and the upper right corner of the rectangle. ",206],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Min The anchor point for the lower left corner of the rectangle defined as a fraction of the size of the parent rectangle. 0,0 corresponds to anchoring to the lower left corner of the parent, while 1,1 corresponds to anchoring to the upper right corner of the parent. ",206],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Max The anchor point for the upper right corner of the rectangle defined as a fraction of the size of the parent rectangle. 0,0 corresponds to anchoring to the lower left corner of the parent, while 1,1 corresponds to anchoring to the upper right corner of the parent. ",206],["Pivot Location of the pivot point around which the rectangle rotates, defined as a fraction of the size of the rectangle itself. 0,0 corresponds to the lower left corner while 1,1 corresponds to the upper right corner. ",206],["Rotation Angle of rotation (in degrees) of the object around its pivot point along the X, Y and Z axis. ",206],["Scale Scale factor applied to the object in the X, Y and Z dimensions. ",206],["Details",206],["See the Basic Layout page for a full introduction and overview of how to use the Rect Transform.",206],["Reflection Probe",207],["A Reflection Probe is rather like a camera that captures a spherical view of its surroundings in all directions. The captured image is then stored as a Cubemap that can be used by objects with reflective materials. Several reflection probes can be used in a given scene and objects can be set to use the cubemap produced by the nearest probe. The result is that the reflections on the object can change convincingly according to its environment.",207],["Properties",207],["General",207],["Property: Function: ",207],["Type Selects between Baked, Custom or Realtime types. ",207],["Baked probes**",207],["Generates a static cubemap automatically from objects marked as ReflectionProbeStatic, baking only occurs in Editor. That means objects which are dynamic won't be baked into cubemap.",207],["Custom probes**",207],["Generates a static cubemap manually when Bake button is click in ReflectionProbe inspector, you can also assign your own custom cubemap.",207],["Realtime probes**",207],["Generates a cubemap during runtime, all objects (both static and dynamic) are baked into the cubemap. Because these probes are quite costly, consider when you want to update them, this can be controlled via properties or scripting, see below.",207],["Property: Function: ",207],["Dynamic Objects Forces objects which are not marked as Static to be baked in to the probe . ",207],["Cubemap Sets a custom cubemap for the probe . ",207],["Property:  Function: ",207],["Refresh Mode  Selects how the probe will automatically refresh (re-render) in the Player. ",207],["On Awake Unity will refresh the probe only once and only when it first becomes active ",207],["Every Frame Unity will refresh the probe every frame, optionally using Time Slicing ",207],["Via Scripting Refreshing this probe will be done exclusively via a custom script. Unity will never automatically render the reflection probe. ",207],["Time Slicing  Rendering a probe is a costly operation. First, Unity must render the scene from 6 different viewpoints to update its Cubemap. Then, each mipmap level of this Cubemap goes through a special blurring phase in order to support Glossy Reflections. When a realtime probe's Refresh Mode is set to update Every Frame, this option controls how the rendering can be scheduled over several frames to reduce the impact on the framerate. ",207],["All Faces At Once All faces will be rendered at once, then over the next 6 frames, Unity will blur a face of the first level mipmap. After this, Unity will blur the remaining mipmap levels in one frame, and finally it will copy the result to the target Cubemap. Using this option, updating the probe will take 9 frames ",207],["Individual Faces Same as above, except that Unity will spread the rendering of each face over several frames. Using this option, updating the probe will take 14 frames. This option greatly reduces the impact on framerate, however it may produce incorrect results, especially in scenes where lighting conditions change over these 14 frames ",207],["No Time Slicing Sets the probe to completely render and blur all faces in one frame. This produces probes with perfectly synchronized reflections, but incurs the highest performance hit ",207],["Runtime settings",207],["Property: Function: ",207],["Importance Sets how important (the higher the value, the more important probe is) is the reflection probe for the game objects, if multiple probes are affecting the geometry, more important probes will be always chosen over less important probes. This setting also affects Blending, explained below. ",207],["Intensity Thee intensity modifier that is applied to the texture of reflection probe in the shader. ",207],["Box Projection Turn on/off box projection for reflection UV mappings. ",207],["Size Size of the zone within which objects will receive the probe's cubemap. Also used by Box Projection. ",207],["Probe Origin Center of the zone within which objects will receive the probe's cubemap, this position is also used while baking the probe. Also used by Box Projection. ",207],["Cubemap Capture settings",207],["Property: Function: ",207],["Resolution Resolution of the captured image. ",207],["HDR Should High Dynamic Range rendering be enabled for the cubemap? Depending on this setting, probes are saved to *.exr or *.png format. ",207],["Shadow Distance Shadow drawing distance when rendering the probe. ",207],["Clear Flags Option to specify how empty background areas of the cubemap will be filled. ",207],["Background Background color of the cubemap. ",207],["Culling Mask Selection of layers on which objects will be included in the cubemap. ",207],["Clipping Planes Near and far clipping planes of the probe's \"camera\". ",207],["Baking reflection probes",207],["The reflection probe's cubemap is being generated from game object's (which has ReflectionProbe component attached) position in combination with Probe Origin. There are two options which control which objects are baked in to the probe - Culling Mask and Clipping Planes.",207],["Baked probes",207],["When Continuous Baking is enabled, probes are baked automatically, when it's disabled you'll have to press Build button (in Lighting window) or Bake button in ReflectionProbe inspector.",207],["Baking is done asynchronously, so you can continue to work while it's baking. Only objects marked as ReflectionProbeStatic are baked into the cubemap.",207],["Note: If you move an object marked as Static or change its material during bake process, baking will restart.",207],["Custom probes",207],["Can be generated by either clicking Bake button in ReflectionProbe inspector or you can assign your own custom cubemap.",207],["Unlike Baked probes, you can also force dynamic objects to be baked (which are not marked as ReflectionProbeStatic).",207],["Realtime probes",207],["When working in the Editor, realtime probes behave similarly to Baked probes except that they render much more quickly. To update them automatically when working, Continuous Baking must be enabled. When it's disabled you'll have to press \"Bake Reflection Probes\" option under the Build button (in Lighting window). Realtime probes will reflect dynamic objects, however when working in the Editor changes to dynamic objects do not trigger a refresh of the realtime probes.",207],["Details",207],["To make use of the cubemap, an object must have the Reflection Probes option enabled on its Mesh Renderer and also be using a shader that supports reflection probes. When the object passes within the volume set by the probe's Size and Probe Origin properties, the probe's cubemap will be applied to the object.",207],["You can also manually set which reflection probe to use:",207],["Select the object which should affected by reflection probe",207],["Ensure Use Reflection Probes is checked",207],["Drag the reflection probe on Anchor Override",207],["Note: If three or more reflection probes are affecting the object, the algorithm for choosing which probes to use is as follows:",207],["Compare Importance property, more important probes are chosen over less important probes",207],["Compare intersection volumes (reflection probe vs object)",207],["Interreflections",207],["Controlled by Reflection Bounces setting in Lighting window, interreflections occur when there are two objects reflecting in each other.",207],["In real world scenario (for ex., when mirror is placed in front of the other mirror) this will produce infinite reflections.",207],["By default Reflection Bounces is set to 1, that means when reflection probe is baked and a reflective object is used, on the first pass it will be black, if you'll encounter such scenario simply increase Reflection Bounces.",207],["Note: Increasing Reflection Bounces increases how many time the reflection probe is baked.",207],["Box Projection",207],["It's a feature to calculate cubemap coordinates using reflection probe's bounding volume. Box Projection is enabled on platforms which support shader model 3.0 or better. For ex., if you have a room which you want to reflect, ensure that reflection bounding box's is of similar dimensions, this way you'll get the best results.",207],["Let's take for instance this cubemap and see how it's reflected on the plane with and without box projection.",207],["Box Projection On Box Projection Off ",207],["  ",207],["Blending",207],["It's a feature which allows objects to use two reflection probes at once. It can be used on platforms with shader model 3.0 or better. You can enable it in Mesh Renderer, by choosing Blend Probes or Blend Probes and Skybox.",207],["Let's say two reflection probes (Importance property matches in both reflection probes) are affecting the object, the weights for blending are calculated in the following way, we acquire two intersection bounding boxes:",207],["First reflection bounding box vs object's bounding box",207],["Second reflection bounding box vs object's bounding box",207],["We then calculate two volumes, by using these values we determine how much the reflection probe is affecting the object.",207],["For ex., if the first volume is 1.0 and the second is 2.0, then first probe's influence will be 1.0 / (1.0 + 2.0) = 0.33, the second probe's influence will be 2.0 / (1.0 + 2.0) = 0.67",207],["A special case is applied if one probe is inside the other probe, the blending values are then calculated in the following way:",207],["If object is inside the smaller probe (at the same time the object is inside the bigger probe as well), the influence value for that probe will be 1.0, while the second probe it will be 0.0",207],["When the object is leaving the bounding box of the smaller probe, the influence value for the smaller probe is calculated, intersection volume (small probe vs object) / object volume. For ex., if intersection volume is 1.0 and object is volume 2.0, then influence for the first probe will 1.0 / 2.0 = 0.5, the influence for the second probe will be 1.0 - 1.0 / 2.0 = 0.5.",207],["This ensures that reflections are gradually fade from first probe to the second probe",207],["If object is affected by two reflection probes with different Importance value, the blending values are calculated the same way as described above. This ensures that object will try to use reflections from more important probe as much as possible.",207],["Blend Probes and Blend Probes And Skybox",207],["Blend Probes should be used for interior objects, that way you'll ensure that object won't accidentally use reflections from skybox (a.k.a default reflection).",207],["Blend Probes And Skybox should be used for exterior objects, that way when object leaves the bounding box of reflection probe, it will gradually switch reflections from reflection probe to skybox.",207],["Quickstart",207],["Create a reflection probe:",207],["Create an empty game object",207],["Add a component Rendering-&gt;Reflection Probe",207],["Create an object which will receive reflections:",207],["Create a sphere",207],["Create a material, set Standard shader, and assign it to the sphere",207],["Select the material:",207],["Set Metallic to 1.0",207],["Set Smoothness to 1.0",207],["(Optional)* Select the sphere, in the Mesh Renderer component drag reflection probe object on to Anchor Override, this way you'll force the sphere to use the reflection probe even it's outside reflection probe's bounding volume",207],["FAQ",207],["Can I rotate the reflection probe?",207],["No",207],["Can I set different Reflection Bounces for different reflection probes?",207],["No",207],["Can blending be done on per-pixel level?",207],["No, this was not implemented due performance reasons",207],["Whenever I change a static object, it takes forever to bake reflection probe, because lightmapping is baking, how can I improve it?",207],["Disable Continuous Baking in Lighting window. Whenever you want to update the reflection probe, click Bake button in reflection probe inspector. You can also temporarily switch probe type to Custom and click Bake then, this ensures that reflection probe will never wait for the lightmapping to finish.",207],["How can I set skybox reflections?",207],["Go to Lighting window, choose Custom in Reflection Source, and select a custom cubemap.",207],["Changing a dynamic object does not refresh realtime probes in Continuous Baking mode.",207],["This is a current limitation. To force update of realtime probes, press the Bake Reflection Probes option under the Bake button in the lighting window.",207],["Using several Realtime probes in my scene causes the framerate to drop significantly.",207],["Reduce the size of the Cubemap used by your probes.",207],["Use Time Slicing on some of the \"less important\" probes.",207],["Set the probe's RefreshMode to ViaScripting and create your own probe scheduling logic using a script and only refresh the probe when you need to.",207],["Render Texture",208],["Render Textures are special types of Textures that are created and updated at runtime. To use them, you first create a new Render Texture and designate one of your Cameras to render into it. Then you can use the Render Texture in a Material just like a regular Texture. The Water prefabs in Unity Standard Assets are an example of real-world use of Render Textures for making real-time reflections and refractions.",208],["Properties",208],["The Render Texture Inspector is different from most Inspectors, but very similar to the Texture Inspector.",208],["The Render Texture inspector displays the current contents of Render Texture in realtime and can be an invaluable debugging tool for effects that use render textures.",208],["Property: Function: ",208],["Size The size of the Render Texture in pixels. Observe that only power-of-two values sizes can be chosen. ",208],["Anti-Aliasing The amount of anti-aliasing to be applied. None, two, four or eight samples. ",208],["Depth Buffer The type of the depth buffer. None, 16 bit or 24 bit. ",208],["Wrap Mode Selects how the Texture behaves when tiled: ",208],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Repeat The Texture repeats (tiles) itself ",208],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Clamp The Texture's edges get stretched ",208],["Filter Mode Selects how the Texture is filtered when it gets stretched by 3D transformations: ",208],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;No Filtering The Texture becomes blocky up close ",208],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bilinear The Texture becomes blurry up close ",208],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Trilinear Like Bilinear, but the Texture also blurs between the different mip levels ",208],["Aniso Level Increases Texture quality when viewing the texture at a steep angle. Good for floor and ground textures ",208],["Example",208],["A very quick way to make a live arena-camera in your game:",208],["Create a new Render Texture asset using Assets-&gt;Create-&gt;Render Texture.",208],["Create a new Camera using GameObject &gt; Create General &gt; Camera.",208],["Assign the Render Texture to the Target Texture of the new Camera.",208],["Create a wide, tall and thin box",208],["Drag the Render Texture onto it to create a Material that uses the render texture.",208],["Enter Play Mode, and observe that the box's texture is updated in real-time based on the new Camera's output.",208],["Rigidbody",209],["Rigidbodies enable your GameObjects to act under the control of physics. The Rigidbody can receive forces and torque to make your objects move in a realistic way. Any GameObject must contain a Rigidbody to be influenced by gravity, act under added forces via scripting, or interact with other objects through the NVIDIA PhysX physics engine.",209],["Properties",209],["Property: Function: ",209],["Mass The mass of the object (arbitrary units). You should not make masses more or less than 100 times that of other Rigidbodies. ",209],["Drag How much air resistance affects the object when moving from forces. 0 means no air resistance, and infinity makes the object stop moving immediately. ",209],["Angular Drag How much air resistance affects the object when rotating from torque. 0 means no air resistance. Note that you cannot make the object stop rotating just by setting its Angular Drag to infinity. ",209],["Use Gravity If enabled, the object is affected by gravity. ",209],["Is Kinematic If enabled, the object will not be driven by the physics engine, and can only be manipulated by its Transform. This is useful for moving platforms or if you want to animate a Rigidbody that has a HingeJoint attached. ",209],["Interpolate Try one of the options only if you are seeing jerkiness in your Rigidbody's movement. ",209],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;None No Interpolation is applied. ",209],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Interpolate Transform is smoothed based on the Transform of the previous frame. ",209],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Extrapolate Transform is smoothed based on the estimated Transform of the next frame. ",209],["Collision Detection Used to prevent fast moving objects from passing through other objects without detecting collisions. ",209],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Discrete Use Discreet collision detection against all other colliders in the scene. Other colliders will use Discreet collision detection when testing for collision against it. Used for normal collisions (This is the default value). ",209],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Continuous Use Discrete collision detection against dynamic colliders (with a rigidbody) and continuous collision detection against static MeshColliders (without a rigidbody). Rigidbodies set to Continuous Dynamic will use continuous collision detection when testing for collision against this rigidbody. Other rigidbodies will use Discreet Collision detection. Used for objects which the Continuous Dynamic detection needs to collide with. (This has a big impact on physics performance, leave it set to Discrete, if you don't have issues with collisions of fast objects) ",209],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Continuous Dynamic Use continuous collision detection against objects set to Continuous and Continuous Dynamic Collision. It will also use continuous collision detection against static MeshColliders (without a rigidbody). For all other colliders it uses discreet collision detection. Used for fast moving objects. ",209],["Constraints Restrictions on the Rigidbody's motion:- ",209],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Freeze Position Stops the Rigidbody moving in the world X, Y and Z axes selectively. ",209],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Freeze Rotation Stops the Rigidbody rotating around the world X, Y and Z axes selectively. ",209],["Details",209],["Rigidbodies allow your GameObjects to act under control of the physics engine. This opens the gateway to realistic collisions, varied types of joints, and other very cool behaviors. Manipulating your GameObjects by adding forces to a Rigidbody creates a very different feel and look than adjusting the Transform Component directly. Generally, you shouldn't manipulate the Rigidbody and the Transform of the same GameObject - only one or the other.",209],["The biggest difference between manipulating the Transform versus the Rigidbody is the use of forces. Rigidbodies can receive forces and torque, but Transforms cannot. Transforms can be translated and rotated, but this is not the same as using physics. You'll notice the distinct difference when you try it for yourself. Adding forces/torque to the Rigidbody will actually change the object's position and rotation of the Transform component. This is why you should only be using one or the other. Changing the Transform while using physics could cause problems with collisions and other calculations.",209],["Rigidbodies must be explicitly added to your GameObject before they will be affected by the physics engine. You can add a Rigidbody to your selected object from Components-&gt;Physics-&gt;Rigidbody in the menubar. Now your object is physics-ready; it will fall under gravity and can receive forces via scripting, but you may need to add a Collider or a Joint to get it to behave exactly how you want.",209],["Parenting",209],["When an object is under physics control, it moves semi-independently of the way its transform parents move. If you move any parents, they will pull the Rigidbody child along with them. However, the Rigidbodies will still fall down due to gravity and react to collision events.",209],["Scripting",209],["To control your Rigidbodies, you will primarily use scripts to add forces or torque. You do this by calling AddForce() and AddTorque() on the object's Rigidbody. Remember that you shouldn't be directly altering the object's Transform when you are using physics.",209],["Animation",209],["For some situations, mainly creating ragdoll effects, it is neccessary to switch control of the object between animations and physics. For this purpose Rigidbodies can be marked isKinematic. While the Rigidbody is marked isKinematic, it will not be affected by collisions, forces, or any other part of physX. This means that you will have to control the object by manipulating the Transform component directly. Kinematic Rigidbodies will affect other objects, but they themselves will not be affected by physics. For example, Joints which are attached to Kinematic objects will constrain any other Rigidbodies attached to them and Kinematic Rigidbodies will affect other Rigidbodies through collisions.",209],["Colliders",209],["Colliders are another kind of component that must be added alongside the Rigidbody in order to allow collisions to occur. If two Rigidbodies bump into each other, the physics engine will not calculate a collision unless both objects also have a Collider attached. Collider-less Rigidbodies will simply pass through each other during physics simulation.",209],["Add a Collider with the Component-&gt;Physics menu. View the Component Reference page of any individual Collider for more specific information:",209],["Box Collider - primitive shape of a cube",209],["Sphere Collider - primitive shape of a sphere",209],["Capsule Collider - primitive shape of a capsule",209],["Mesh Collider - creates a collider from the object's mesh, cannot collide with another Mesh Collider",209],["Wheel Collider - specifically for creating cars or other moving vehicles",209],["Compound Colliders",209],["Compound Colliders are combinations of primitive Colliders, collectively acting as a single Collider. They come in handy when you have a complex mesh to use in collisions but cannot use a Mesh Collider. To create a Compound Collider, create child objects of your colliding object, then add a primitive Collider to each child object. This allows you to position, rotate, and scale each Collider easily and independently of one another.",209],["In the above picture, the Gun Model GameObject has a Rigidbody attached, and multiple primitive Colliders as child GameObjects. When the Rigidbody parent is moved around by forces, the child Colliders move along with it. The primitive Colliders will collide with the environment's Mesh Collider, and the parent Rigidbody will alter the way it moves based on forces being applied to it and how its child Colliders interact with other Colliders in the Scene.",209],["Mesh Colliders can't normally collide with each other. If a Mesh Collider is marked as Convex, then it can collide with another Mesh Collider. The typical solution is to use primitive Colliders for any objects that move, and Mesh Colliders for static background objects.",209],["Continuous Collision Detection",209],["Continuous collision detection is a feature to prevent fast-moving colliders from passing each other. This may happen when using normal (Discrete) collision detection, when an object is one side of a collider in one frame, and already passed the collider in the next frame. To solve this, you can enable continuous collision detection on the rigidbody of the fast-moving object. Set the collision detection mode to Continuous to prevent the rigidbody from passing through any static (ie, non-rigidbody) MeshColliders. Set it to Continuous Dynamic to also prevent the rigidbody from passing through any other supported rigidbodies with collision detection mode set to Continuous or Continuous Dynamic.",209],["Continuous collision detection is supported for Box-, Sphere- and CapsuleColliders. Note that continuous collision detection is intended as a safety net to catch collisions in cases where objects would otherwise pass through each other, but will not deliver physically accurate collision results, so you might still consider decreasing the fixed Time step value in the TimeManager inspector to make the simulation more precise, if you run into problems with fast moving objects.",209],["Use the right size",209],["The size of the your GameObject's mesh is much more important than the mass of the Rigidbody. If you find that your Rigidbody is not behaving exactly how you expect - it moves slowly, floats, or doesn't collide correctly - consider adjusting the scale of your mesh asset. Unity's default unit scale is 1 unit = 1 meter, so the scale of your imported mesh is maintained, and applied to physics calculations. For example, a crumbling skyscraper is going to fall apart very differently than a tower made of toy blocks, so objects of different sizes should be modeled to accurate scale.",209],["If you are modeling a human make sure he is around 2 meters tall in Unity. To check if your object has the right size compare it to the default cube. You can create a cube using GameObject &gt; 3D Object &gt; Cube. The cube's height will be exactly 1 meter, so your human should be twice as tall.",209],["If you aren't able to adjust the mesh itself, you can change the uniform scale of a particular mesh asset by selecting it in Project View and choosing Assets-&gt;Import Settings... from the menubar. Here, you can change the scale and re-import your mesh.",209],["If your game requires that your GameObject needs to be instantiated at different scales, it is okay to adjust the values of your Transform's scale axes. The downside is that the physics simulation must do more work at the time the object is instantiated, and could cause a performance drop in your game. This isn't a terrible loss, but it is not as efficient as finalizing your scale with the other two options. Also keep in mind that non-uniform scales can create undesirable behaviors when Parenting is used. For these reasons it is always optimal to create your object at the correct scale in your modeling application.",209],["Hints",209],["The relative Mass of two Rigidbodies determines how they react when they collide with each other.",209],["Making one Rigidbody have greater Mass than another does not make it fall faster in free fall. Use Drag for that.",209],["A low Drag value makes an object seem heavy. A high one makes it seem light. Typical values for Drag are between .001 (solid block of metal) and 10 (feather).",209],["If you are directly manipulating the Transform component of your object but still want physics, attach a Rigidbody and make it Kinematic.",209],["If you are moving a GameObject through its Transform component but you want to receive Collision/Trigger messages, you must attach a Rigidbody to the object that is moving.",209],["You cannot make an object stop rotating just by setting its Angular Drag to infinity.",209],["Rigidbody 2D",210],["A Rigidbody 2D component places an object under the control of the physics engine. Many concepts familiar from the standard Rigidbody component carry over to Rigidbody 2D, with the difference that in 2D, objects can only move in the XY plane and can only rotate on an axis perpendicular to that plane.",210],["Property: Function: ",210],["Mass Mass of the rigidbody. ",210],["Linear Drag Drag coefficient affecting positional movement. ",210],["Angular Drag Drag coefficient affecting rotational movement. ",210],["Gravity Scale Degree to which the object is affected by gravity. ",210],["Fixed Angle Can the rigidbody rotate when forces are applied? ",210],["Is Kinematic Is the rigidbody moved by forces and collisions? ",210],["Interpolate How the object's movement is interpolated between physics updates (useful when motion tends to be jerky). ",210],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;None No movement smoothing is applied. ",210],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Interpolate Movement is smoothed based on the object's positions in previous frames. ",210],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Extrapolate Movement is smoothed based on an estimate of its position in the next frame. ",210],["Sleeping Mode How the object \"sleeps\" to save processor time when it is at rest. ",210],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Never Sleep Sleeping is disabled. ",210],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Start Awake Object is initially awake. ",210],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Start Asleep Object is initially asleep but can be woken by collisions. ",210],["Collision Detection How collisions with other objects are detected. ",210],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Discrete A collision is registered only if the object's collider is in contact with another during a physics update. ",210],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Continuous A collision is registered if the object's collider appears to have contacted another between updates. ",210],["Details",210],["Adding a Rigidbody 2D allows a sprite to be moved in a physically convincing way by applying forces from the scripting API. When the appropriate collider component is also attached to the sprite object, it will be affected by collisions with other moving objects. Using physics simplifies many common gameplay mechanics and allows for realistic, emergent behaviour with minimal coding.",210],["Colliders",210],["Colliders define an approximate shape for an object that will be used by the physics engine to determine collisions with other objects. The collider types that can be used with Rigidbody 2D are the Circle Collider 2D, Box Collider 2D, Edge Collider 2D and Polygon Collider 2D - see the pages for these component for further details.",210],["Kinematic Rigidbodies",210],["The Is Kinematic setting switches off the physical behaviour of the Rigidbody 2D so that it will not react to gravity and collisions. This is typically used to keep an object under non-physical script control most of the time but then switch to physics in a particular situation. For example, a player might normally move by walking (better handled without physics) but then get catapulted into the air by an explosion or strike. Physics can be used to create the catapulting effect if you switch off ''Is Kinematic\" just before applying a large force to the object.",210],["ScriptableObject",211],["ScriptableObject is a class that allows you to store large quantities of shared data independent from script instances. Do not confuse this class with the similarly named SerializableObject, which is an editor class and fills a different purpose. Consider for example that you have made a prefab with a script which has an array of a million integers. The array occupies 4MB of memory and is owned by the prefab. Each time you instantiate that prefab, you will get a copy of that array. If you created 10 game objects, then you would end up with 40MB of array data for the 10 instances.",211],["Unity serializes all primitive types, strings, arrays, lists, types specific to Unity such as Vector3 and your custom classes with the Serializable attribute as copies belonging to the object they were declared in. This means that if you created a ScriptableObject and stored the million integers in an array it declares then the array will be stored with that instance. The instances are thought to own their individual data. ScriptableObject fields, or any UnityEngine.Object fields, such as MonoBehaviour, Mesh, GameObject and so on, are stored by reference as opposed to by value. If you have a script with a reference to the ScriptableObject with the million integers, Unity will only store a reference to the ScriptableObject in the script data. The ScriptableObject in turn stores the array. 10 instances of a prefab that has a reference to a ScriptableObject, that holds 4MB data, would total to roughly 4MB and not 40MB as discussed in the other example.",211],["The intended use case for using ScriptableObject is to reduce memory usage by avoiding copies of values, but you could also use it to define pluggable data sets. An example of this would be to imagine a NPC shop in a RPG game. You could create multiple assets of your custom ShopContents ScriptableObject, each defining a set of items that are available for purchase. In a scenario where the game has three zones, each zone could offer different tier items. Your shop script would reference a ShopContents object that defines what items are available. Please see the scripting reference for examples.",211],["Tip: When working with ScriptableObject references in the inspector, you can double click the reference field to open the inspector for your ScriptableObject. You can also create a custom Editor to define the look of the inspector for your type to help manage the data that it represents.",211],["Script Execution Order Settings",212],["By default, the Awake, OnEnable and Update functions of different scripts are called in the order the scripts are loaded (which is arbitrary). However, it is possible to modify this order using the Script Execution Order settings (menu: Edit &gt; Project Settings &gt; Script Execution Order).",212],["Scripts can be added to the inspector using the Plus \"+\" button and dragged to change their relative order. Note that it is possible to drag a script either above or below the Default Time bar; those above will execute ahead of the default time while those below will execute after. The ordering of scripts in the dialog from top to bottom determines their execution order. All scripts not in the dialog execute in the default time slot in arbitrary order.",212],["The numbers shown for each script are the values the scripts are actually ordered by. When a script is dragged to a new position, the number for the script is automatically changed accordingly. When a number is changed, either manually or automatically, it changes the meta file for that script. For this reason it's best if as few of the numbers as possible change when the order is changed. This is why, when possible, only the script that is dragged has its number changed, rather than assigning new numbers to all the scripts.",212],["Shader Assets",213],["Shaders are assets that contain code and instructions for the graphics card to execute.",213],["Materials reference shaders, and setup their parameters (textures, colors and so on).",213],["Unity contains some built-in shaders that are always available in your project (for example,",213],["the Standard shader). Image Effects package also",213],["has many shaders for image post-processing. You can also write your own shaders.",213],["Creating a New Shader",213],["To create a new Shader, use Assets-&gt;Create-&gt;Shader from the",213],["main menu or the Project View context menu. A shader is a text file",213],["similar to a C# script, and is written in a combination of Cg/HLSL and ShaderLab languages",213],["(see writing shaders page for details).",213],["Shader Import Settings",213],["This inspector section allows specifying default textures for a shader. Whenever a new",213],["Material will be created with this shader, these textures will get",213],["automatically assigned.",213],["Shader Inspector",213],["Shader inspector displays basic information about the shader (mostly shader tags),",213],["and allows compiling and inspecting low-level compiled code.",213],["For Surface Shaders, the \"Show generated code\"",213],["button displays all the code that Unity generates to handle lighting &amp; shadowing. If you really want",213],["to customize the generated code, you can just copy &amp; paste all of it back to your original shader file",213],["and start tweaking.",213],["Popup menu of the \"Compile and show code\" button allows inspecting final",213],["compiled shader code (e.g. assembly on Direct3D9, or low-level optimized GLSL for OpenGL ES) for selected",213],["platforms. This is mostly useful while optimizing shaders for performance; often you do want to know how",213],["many low-level instructions here generated in the end.",213],["The low-level generated code is useful for pasting into GPU shader performance analysis tools (like",213],["or PVRShaderEditor).",213],["Shader Compilation Details",213],["On shader import time, Unity does not compile the whole shader. This is because majority of shaders",213],["have a lot of variants inside, and compiling all of them, for all possible",213],["platforms, would take a very long time. Instead, this is done:",213],["At import time, only do minimal processing of the shader (surface shader generation etc.).",213],["Actually compile the shader variants only when needed.",213],["Instead of typical work of compiling 100-10000 internal shaders at import time, this usually ends up compiling just a handful.",213],["At player build time, all the \"not yet compiled\" shader variants are compiled, so that they are in the game data even if the editor did not happen to use them.",213],["However, this does mean that a shader might have an error in there, which is not detected at shader",213],["import time. For example, you're running editor using Direct3D 11, but a shader has an error if compiled",213],["for OpenGL. Or some variants of the shader does not fit into shader model 2.0",213],["instruction limits, etc. These errors will be shown in the inspector if editor needs them; but it's also a",213],["good practice to manually fully compile the shader for platforms you need, to check for errors. This can be",213],["done using the \"Compile and show code\" popup menu in the shader inspector.",213],["Shader compilation is done using a background process named UnityShaderCompiler that is started by Unity",213],["whenever it needs to compile shaders. Multiple compiler processes can be started (generally one per CPU",213],["core in your machine), so that at player build time shader compilation can be done in parallel. While the",213],["editor is not compiling shaders, the compiler processes do nothing and do not consume computer resources,",213],["so there's no need to worry about them. They are also shut down when Unity editor quits.",213],["Individual shader variant compilation results are cached in the project, under Library/ShaderCache folder.",213],["This means that 100% identical shaders or their snippets will reuse previously compiled results. It also",213],["means that the shader cache folder can become quite large, if you have a lot of shaders that are changed",213],["often. It is always safe to delete it; it will just cause shader variants to be recompiled.",213],["Further reading",213],["Material assets.",213],["Writing Shaders overview.",213],["Shader reference.",213],["Skinned Mesh Renderer",214],["Unity uses the Skinned Mesh Renderer component to render Bone animations, where the shape of the mesh is deformed by predefined animation sequences. This technique is useful for characters and other objects whose joints bend (as opposed to a machine where joints are more like hinges).",214],["A Skinned Mesh Renderer is automatically added to any mesh that needs it at import time.",214],["Properties",214],["Property: Function: ",214],["Cast Shadows If enabled, Mesh will cast shadows when a suitable Light shines on it. ",214],["Receive Shadows If enabled, the Mesh will show  shadows that are cast upon it by other objects. ",214],["Materials The list of Materials the model will be rendered with. ",214],["Use Light Probes Does the mesh take Light Probes into account? ",214],["Quality The maximum number of bones that can affect any given vertex. ",214],["Update When Offscreen If enabled, the Skinned Mesh will be updated even when it can't be seen by any camera. If disabled, the animations themselves will also stop running when the object is offscreen. ",214],["Mesh Mesh used by this renderer. ",214],["Root Bone The bone that is the \"root\" of the animation (ie, the bone relative to which all the others move). ",214],["Bounds The bounding volume that is used to determine when the mesh is offscreen.  The bounds are precalculated on import from the Mesh and animations in the model file and are displayed as a wireframe around the model in the Scene View. ",214],["Details",214],["Bones are invisible objects inside a skinned mesh that affect the way the mesh is deformed during animation. The basic idea is that the bones are joined together to form a hierarchical \"skeleton\" and the animation is defined by rotating the joints of the skeleton to make it move. Each bone is attached to some of the vertices of the surrounding mesh. When the animation is played, the vertices move with the bone(s) they are connected to, so the \"skin\" follows the movement of the skeleton. At a simple joint (an elbow, say), the mesh vertices are affected by both of the bones that meet there, and the mesh will stretch and rotate realistically as the joint bends. In more complex situations, more than two bones will affect a particular area of mesh, resulting in more subtle movements.",214],["Although a skinned mesh is most commonly used with predefined animations, it is also possible to attach Rigidbodies to each bone in a skeleton to put it under the control of the physics engine. This is typically used to create the \"ragdoll\" effect, where a character's limbs flail after being thrown or struck by an explosion.",214],["Quality",214],["Unity can skin every vertex with one, two or four bones. Using four bones gives the best results but this comes with a higher processing overhead. Games commonly use two bone weights, which is a good compromise between visual quality and performance.",214],["If the Quality is set to Automatic, the Blend Weights value from the Quality Settings will be used. This allows end-users to choose the quality setting themselves and get the desired balance of animation quality and framerate.",214],["Update When Offscreen",214],["By default, skinned meshes that are not visible to any camera are not updated, since this avoids wasting CPU time. The skinning is not updated until the mesh comes back on screen.",214],["The object's visibility is determined from the Mesh's Bounds (ie, the entire bounding volume must be outside the view frustum of any active camera). However, the true bounding volume of an animated mesh can change as the animation plays (eg, the volume will get tall if the character raises his hand in the air). Unity takes into account all attached animations when calculating the maximum bounding volume but there are cases when the bounds can't be calculated to anticipate every possible use case. Each of following situations, for example, become a problem when they push bones or vertices out of the precalculated bounding volume:",214],["animations added at run-time;",214],["additive animations;",214],["procedurally changing the positions of bones from a script;",214],["using vertex shaders which can push vertices outside the precalculated bounds;",214],["using ragdolls.",214],["In those cases there are two solutions:",214],["modify the Bounds to match potential bounding volume of your mesh;",214],["enable Update When Offscreen to skin and render the skinned mesh all the time.",214],["You should usually use the first option since it has better performance. However, the second option is preferable if performance is not a major concern or if you can't predict the size of your bounding volume (when using ragdolls, say).",214],["In order to make Skinned Meshes work better with ragdolls, Unity will automatically remap the Skinned Mesh Renderer to the root bone on import. However Unity only does this if there is a single Skinned Mesh Renderer in the model file. This means that if there is some reason why you can't attach all Skinned Mesh Renderers to the root bone or a child and you use ragdolls, you should turn off this optimization.",214],["Importing Skinned Meshes",214],["Currently, skinned meshes can be imported from:",214],["Maya",214],["Cinema4D",214],["3D Studio Max",214],["Blender",214],["Cheetah 3D",214],["XSI",214],["Any other tool that supports the FBX format",214],["On mobiles, Unity handles skinning on the CPU with hand-coded neon/vfp assembly. A caveat is that normals/tangents are not normalized, so if you are writing your own shaders, you should take handle the normalization youself. If you are using surface shaders, however, the normalization is handled automatically by Unity.",214],["Note. Optimized meshes sort bones differently from non-Optimized meshes, resulting in potentially significant animation problems. This is because non-Optimized meshes rely on bone order to animate, while  Optimized meshes use the bone names and are order-independent.",214],["If you simply import the FBX file and use it, Unity will take care of the order of the transforms.",214],["BUT for advanced users, if you want to change SkinnedMeshRenderer.sharedMesh:",214],["In 'non-optimized' mode, you need to make sure that, the SkinnedMeshRenderer.bones match SkinnedMeshRenderer.sharedMesh in a strict way: the referenced Transforms should be there in the correct order.",214],["In 'optimized' mode, it's much simpler. As long as the avatar has the referenced bones, the rendering will be fine. In this case SkinnedMeshRenderer.bones is always empty.",214],["Skybox",215],["Skyboxes are a wrapper around your entire scene that display the vast beyond of your world.",215],["Properties",215],["Property: Function: ",215],["Tint Color The tint color ",215],["Material The Material used to render the Skybox, which contains 6 Textures. This Material should use the Skybox Shader, and each of the textures should be assigned to the proper global direction. ",215],["Details",215],["Skyboxes are rendered before anything else in the scene in order to give the impression of complex scenery at the horizon. They are a box of 6 textures, one for each primary direction (+/-X, +/-Y, +/-Z).  (Cube maps and procedural techniques can also be used.)",215],["To implement a Skybox create a skybox material. Then add it to the scene by using the Window->Lighting menu item and specifying your skybox material as the Skybox Environment Lighting setting.",215],["Adding the Skybox Component to a Camera is useful if you want to override the default Skybox. E.g. You might have a split screen game using two Cameras, and want the Second camera to use a different Skybox. To add a Skybox Component to a Camera, click to highlight the Camera and go to Component-&gt;Rendering-&gt;Skybox.",215],["If you want to create a new Skybox, use this guide.",215],["Hints",215],["If you have a Skybox assigned to a Camera, make sure to set the Camera's Clear mode to Skybox.",215],["It's a good idea to match your Fog color to the skybox's color. Fog color can be set in the Lighting manager.",215],["Slider Joint 2D",216],["The Slider Joint 2D component allows a Sprite object controlled by rigidbody physics to slide along a line in space. The object can optionally be left free to move anywhere along the line in response to collisions or forces. It can also be moved along by a motor force and have limits applied to keep its position within a certain section of the line.",216],["Property: Function: ",216],["Collide Connected Can the two connected objects collide with each other? ",216],["Connected Rigidbody The other Rigidbody2D object that the one with the joint is connected to. If this is null then the othen end of the joint will be fixed at a point in space. ",216],["Anchor Coordinate in local space where the end point of the joint is attached. ",216],["Connected Anchor Coordinate in the other object's local space where its end of the joint is attached. ",216],["Angle The angle of the line relative to the other rigidbody (or world space). ",216],["Use Motor Should the sliding motor be enabled? ",216],["Motor Speed Target motor speed (units/sec). ",216],["Maximum Motor Force The maximum force the motor can apply while attempting to reach the target speed. ",216],["Use Limits Should the angle be limited? ",216],["Lower Translation The minimum distance the rigidbody object can be from the connected anchor point. ",216],["Upper Translation The maximum distance the rigidbody object can be from the connected anchor point. ",216],["Details",216],["The Slider Joint can be used for sliding objects such as doors but also for any objects that follow a simple, straight path. Such objects might include simple characters, obstacles that rise or fall from their surroundings, projectiles and many other common game elements.",216],["Sphere Collider",217],["The Sphere Collider is a basic sphere-shaped collision primitive.",217],["Properties",217],["Property: Function: ",217],["Is Trigger If enabled, this Collider is used for triggering events, and is ignored by the physics engine. ",217],["Material Reference to the Physics Material that determines how this Collider interacts with others. ",217],["Center The position of the Collider in the object's local space. ",217],["Radius The size of the Collider. ",217],["Details",217],["The collider can be resized via the Radius property but cannot be scaled along the three axes independently (ie, you can't flatten the sphere into an ellipse). As well as the obvious use for spherical objects like tennis balls, etc, the sphere also works well for falling boulders and other objects that need to roll and tumble.",217],["Spring Joint",218],["The Spring Joint joins two Rigidbodies together but allows the distance between them to change as though they were connected by a spring.",218],["Properties",218],["Property: Function: ",218],["Connected Body The Rigidbody object that the object with the spring joint is connected to. If no object is assigned then the spring will be connected to a fixed point in space. ",218],["Anchor The point in the object's local space at which the joint is attached. ",218],["Auto Configure Connected Anchor Should Unity calculate the position of the connected anchor point automatically? ",218],["Connected Anchor The point in the connected object's local space at which the joint is attached. ",218],["Spring Strength of the spring. ",218],["Damper Amount that the spring is reduced when active. ",218],["Min Distance Lower limit of the distance range over which the spring will not apply any force. ",218],["Max Distance Upper limit of the distance range over which the spring will not apply any force. ",218],["Break Force The force that needs to be applied for this joint to break. ",218],["Break Torque The torque that needs to be applied for this joint to break. ",218],["Enable Collision Should the two connected objects register collisions with each other? ",218],["Details",218],["The spring acts like a piece of elastic that tries to pull the two anchor points together to the exact same position. The strength of the pull is proportional to the current distance between the points with the force per unit of distance set by the Spring property. To prevent the spring from oscillating endlessly you can set a Damper value that reduces the spring force in proportion to the relative speed between the two objects. The higher the value, the more quickly the oscillation will die down.",218],["You can set the anchor points manually but if you enable Auto Configure Connected Anchor, Unity will set the connected anchor so as to maintain the initial distance between them (ie, the distance you set in the scene view while positioning the objects).",218],["The Min Distance and Max Distance values allow you to set a distance range over which the spring will not apply any force. You could use this, for example, to allow the objects a small amount of independent movement but then pull them together when the distance between them gets too great.",218],["Spring Joint 2D",219],["The Spring Joint 2D component allows two Sprite objects controlled by rigidbody physics to be attached together as if by a spring. The spring will apply a force along its axis between the two objects, attempting to keep them a certain distance apart.",219],["Property: Function: ",219],["Collide Connected Can the two connected objects collide with each other? ",219],["Connected Rigidbody The other Rigidbody2D object that the one with the joint is connected to. If this is null then the othen end of the spring will be fixed at a point in space. ",219],["Anchor Coordinate in local space where the end point of the spring is attached. ",219],["Connected Anchor Coordinate in the other object's local space where its end of the spring is attached. ",219],["Distance The distance that the spring should attempt to maintain between the two objects. ",219],["Damping Ratio The degree to which spring oscillation is suppressed. ",219],["Frequency The frequency at which the spring oscillates while the rigidbodies are approaching the desired separation distance (cycles per sec). ",219],["Details",219],["Both objects connected by the spring must have a Rigidbody 2D component attached (or alternatively, the other end of the spring can be fixed in space by setting Connected Rigidbody to null). When the spring applies its force between the objects, it will tend to overshoot the desired distance between them and then rebound repeatedly, resulting in a continuous oscillation. The damping parameter determines how quickly the oscillation will reduce and bring the objects to rest. The frequency is the rate at which the oscillates either side of the target distance; the higher the frequency, the stiffer the spring.",219],["Sprite Renderer",220],["The Sprite Renderer component lets you display images as Sprites for use in both 2D and 3D scenes.",220],["Property: Function: ",220],["Sprite The Sprite object to render. Sprite objects can  be generated from textures by using the Sprite setting on the Texture importer. ",220],["Color Vertex color of the rendered mesh. ",220],["Material Material used to render the sprite. ",220],["Sorting Layer The layer used to define this sprite's overlay priority during rendering. ",220],["Order In Layer The overlay priority of this sprite within its layer. Lower numbers are rendered first and subsequent numbers overlay those below. ",220],["Details",220],["In 3D graphics, an object's appearance will vary according to lighting and the position from which it is viewed. In 2D, by contrast, an image is simply displayed onscreen with no transformations other than basic position, scale and rotation. A sprite's position is given by a 2D coordinate, so there is no concept of \"depth\" or distance from camera when rendering.",220],["However, it is still very important to have some way to determine the overlay priority of different sprites (ie, which sprites will obscure others when they cross paths). For example, in a driving game, a car should be seen to pass over flat objects on the road surface. Unity uses the concept of sorting layers to allow you to divide sprites into groups for overlay priority. Sprites with a sorting layer lower in the order will be overlaid by those in a higher sorting layer.",220],["Sometimes, two or more objects in the same sorting layer can overlap (eg, two player characters in a side scrolling game). The order in layer property can be used to apply consistent priorities to sprites in the same layer. As with sorting layers, the rule is that lower numbers are rendered first and can be obscured by the higher numbers rendered later. See the layer manager page for details of editing sorting layers. If sorting layers are not used, standard depth-based sorting can be used.",220],["Rendering",220],["A Sprite Renderer uses the texture supplied in the Sprite property but uses the shader and other properties from the Material property (this is actually accomplished using a MaterialPropertyBlock behind the scenes). This means that you can use the same material to render different sprites without worrying about which texture is assigned on the material.",220],["The sprite is rendered on a mesh that uses position, color and UV at each vertex but no normal vector. If your material requires normal vectors then you can calculate them using a vertex shader (see the Surface Shader Examples page for further details).",220],["The default shaders used for sprites are:",220],["Sprites/Default - a simple alpha blended shader that does not interact with lights in the scene.",220],["Sprites/Diffuse - a simple alpha-blended surface shader that does interact with  lights. This generates a front-facing normal vector (0,0,-1).",220],["Animation States",221],["Animation States are the basic building blocks of an Animation State Machine. Each state contains an individual animation sequence (or blend tree) which will play while the character is in that state. When an event in the game triggers a state transition, the character will be left in a new state whose animation sequence will then take over.",221],["When you select a state in the Animator Controller, you will see the properties for that state in the inspector:-",221],["Property: Function: ",221],["Speed The default speed of the animation ",221],["Motion The animation clip assigned to this state ",221],["Foot IK Should Foot IK be respected for this state ",221],["Write Defaults ToDo ",221],["Mirror ToDo ",221],["Transitions The list of transitions originating from this state ",221],["The default state, displayed in brown, is the state that the machine will be in when it is first activated. You can change the default state, if necessary, by right-clicking on another state and selecting Set As Default from the context menu. The solo and mute checkboxes on each transition are used to control the behaviour of animation previews - see this page for further details.",221],["A new state can be added by right-clicking on an empty space in the Animator Controller Window and selecting Create State-&gt;Empty from the context menu. Alternatively, you can drag an animation into the Animator Controller Window to create a state containing that animation. (Note that you can only drag Mecanim animations into the Controller - non-Mecanim animations will be rejected.) States can also contain Blend Trees.",221],["Any State",221],["Any State is a special state which is always present. It exists for the situation where you want to go to a specific state regardless of which state you are currently in. This is a shorthand way of adding the same outward transition to all states in your machine. Note that the special meaning of Any State implies that it cannot be the end point of a transition (ie, jumping to \"any state\" cannot be used as a way to pick a random state to enter next).",221],["Surface Effector 2D",222],["The Surface Effector 2D applies tangent forces along the surfaces of colliders.",222],["When the source Collider2D is a trigger, the effector will apply forces whenever the target Collider2D overlaps the source. When the source Collider isn't a trigger, the effector will apply forces whenever the target Collider2D is in contact with the source only. This effector can be used to create constant speed elevators and moving surfaces.",222],["Properties",222],["Property: Function: ",222],["Collider Mask The mask used to select specific layers allowed to interact with the effector. ",222],["Speed The speed to be maintained along the surface. ",222],["Speed Variation A random increase in the speed (anywhere between 0 and the Speed Variation value) will be applied to the speed. If a negative number is entered here, a random reduction in the speed will be applied. ",222],["Tags and Layers",223],["The Tags and Layers Manager allows you to set up Layers, Tags and Sorting Layers. To view the manager, select Edit &gt; Project Settings &gt; Tags and Layers.",223],["Details",223],["Tags are marker values that can be used to identify objects in your project (see this page for further details). New tags can be added by typing in the empty element at the bottom of the list of tags or by increasing the Size value. Decreasing the size will remove tags from the end of the list.",223],["Sorting Layers are used in conjunction with sprite graphics in the 2D system. The \"sorting\" refers to the overlay order of different sprites. You can add and remove sorting layers using the +/- buttons at the bottom-left of the list and change their order by dragging the handle at the left of each layer item.",223],["Layers are used throughout Unity as a way to create groups of objects that share particular characteristics (see this page for further details). Layers are primarily used to restrict operations such as raycasting or rendering so that they are only applied to the groups of objects that are relevant. In the manager, the first eight layers are defaults used by Unity and are not editable. However, layers from 8 to 31 can be given custom names just by typing in the appropriate text box. Note that unlike tags, the number of layers cannot be increased.",223],["Terrain Collider",224],["The Terrain Collider implements a collision surface with the same shape as the Terrain object it is attached to.",224],["Properties",224],["Property: Function: ",224],["Material Reference to the Physics Material that determines how this Collider interacts with others. ",224],["Terrain Data The terrain data. ",224],["Enable Tree Colliders When selected Tree Colliders will be enabled. ",224],["Details",224],["You should note that versions of Unity before 5.0 had a Smooth Sphere Collisions property for the Terrain Collider in order to improve interactions between terrains and spheres. This property is now obsolete since the smooth interaction is standard behaviour for the physics engine and there is no particular advantage in switching it off.",224],["Text Asset",225],["Text Assets are a format for imported text files. When you drop a text file into your Project Folder, it will be converted to a Text Asset. The supported text formats are:",225],[".txt",225],[".html",225],[".htm",225],[".xml",225],[".bytes",225],[".json",225],[".csv",225],[".yaml",225],[".fnt",225],["Properties",225],["Property: Function: ",225],["Text The full text of the asset as a single string. ",225],["Details",225],["The Text Asset is a very specialized use case. It is extremely useful for getting text from different text files into your game while you are building it. You can write up a simple .txt file and bring the text into your game very easily. It is not intended for text file generation at runtime. For that you will need to use traditional Input/Output programming techniques to read and write external files.",225],["Consider the following scenario. You are making a traditional text-heavy adventure game. For production simplicity, you want to break up all the text in the game into the different rooms. In this case you would make one text file that contains all the text that will be used in one room. From there it is easy to make a reference to the correct Text Asset for the room you enter. Then with some customized parsing logic, you can manage a large amount of text very easily.",225],["Binary data",225],["A special feature of the text asset is that it can be used to store binary data. By giving a file the extension .bytes it can be loaded as a text asset and the data can be accessed through the bytes property.",225],["For example put a jpeg file into the Resources folder and change the extension to .bytes, then use the following script code to read the data at runtime:",225],["//Load texture from disk",225],["TextAsset bindata= Resources.Load(\"Texture\") as TextAsset;",225],["Texture2D tex = new Texture2D(1,1);",225],["tex.LoadImage(bindata.bytes);",225],["Hints",225],["Text Assets are serialized like all other assets in a build. There is no physical text file included when you publish your game.",225],["Text Assets are not intended to be used for text file generation at runtime.",225],["Text Mesh",226],["The Text Mesh generates 3D geometry that displays text strings.",226],["You can create a new Text Mesh from Component &gt; Mesh &gt; Text Mesh.",226],["Properties",226],["Property: Function: ",226],["Text The text that will be rendered ",226],["Offset Z How far should the text be offset from the transform.position.z when drawing ",226],["Character Size The size of each character (This scales the whole text.) ",226],["Line Spacing How much space will be in-between lines of text. ",226],["Anchor Which point of the text shares the position of the Transform. ",226],["Alignment How lines of text are aligned (Left, Right, Center). ",226],["Tab Size How much space will be inserted for a tab '\\t' character. This is a multiplum of the 'spacebar' character offset. ",226],["Font Size The size of the font. This can override the size of a dynamic font. ",226],["Font Style The rendering style of the font. The font needs to be marked as dynamic. ",226],["Rich Text When selected this will enable tag processing when the text is rendered. ",226],["Font The TrueType Font to use when rendering the text. ",226],["Color The global color to use when rendering the text. ",226],["Details",226],["Text Meshes can be used for rendering road signs, graffiti etc. The Text Mesh places text in the 3D scene. To make generic 2D text for GUIs, use a GUI Text component instead.",226],["Follow these steps to create a Text Mesh with a custom Font:",226],["Import a font by dragging a TrueType Font - a .ttf file - from the Explorer (Windows) or Finder (OS X) into the Project View.",226],["Select the imported font in the Project View.",226],["Choose GameObject &gt; Create Other &gt; 3D Text.",226],["You have now created a text mesh with your custom TrueType Font. You can scale the text and move it around using the Scene View's Transform controls.",226],["Note: If you want to change the font for a Text Mesh, need to set the component's font property and also set the texture of the font material to the correct font texture. This texture can be located using the font asset's foldout. If you forget to set the texture then the text in the mesh will appear blocky and misaligned.",226],["Hints",226],["When entering text into the Text property, you can create a line break by holding Alt and pressing Return.",226],["You can download free TrueType Fonts from 1001freefonts.com (download the Windows fonts since they contain TrueType Fonts).",226],["If you are scripting the Text property, you can add line breaks by inserting the escape character \"\\n\" in your strings.",226],["Text meshes can be styled using simple mark-up. See the Styled Text page for more details.",226],["Fonts in Unity are rendered by first rendering the font glyphs to a texture map.  If the font size is set too small, these font textures will appear blocky.  Since TextMesh assets are rendered using quads, it's possible that if the size of the TextMesh and font texture differ the TextMesh will look wrong.",226],["3D Textures",227],["Unity supports 3D Texture use and creation from shader and script. While use cases of 3D Textures might not seem as straightforward at first, they can be an integral part of implementing specific kinds of effects such as 3D Color Correction.",227],["Currently, 3D Textures can only be created from script. The following snippet creates a \"neutral\" 3D texture where, if used as a lookup texture in 3D Color Correction, the performed correction will be the identity.",227],["function CreateIdentityLut (dim : int, tex3D : Texture3D)",227],["var newC : Color[] = new Color[dim * dim * dim];",227],["var oneOverDim : float = 1.0f / (1.0f * dim - 1.0f);",227],["for(var i : int = 0; i &lt; dim; i++) {",227],["for(var j : int = 0; j &lt; dim; j++) {",227],["for(var k : int = 0; k &lt; dim; k++) {",227],["newC[i + (j*dim) + (k*dim*dim)] = new Color((i*1.0f)oneOverDim, (j1.0f)oneOverDim, (k1.0f)*oneOverDim, 1.0f);",227],["tex3D.SetPixels (newC);",227],["tex3D.Apply ();",227],["2D Textures",228],["Textures bring your Meshes, Particles, and interfaces to life! They are image or movie files that you lay over or wrap around your objects. As they are so important, they have a lot of properties.",228],["The shaders you use for your objects put specific requirements on which textures you need, but the basic principle is that you can put any image file inside your project. If it meets the size requirements (specified below), it will get imported and optimized for game use. This extends to multi-layer Photoshop or TIFF files - they are flattened on import, so there is no size penalty for your game. Note that this flattening happens internally to Unity, and is optional, so you can continue to save and import your PSD files with layers intact. The PSD file is not flattened, in other words.",228],["Properties",228],["The Texture Inspector looks a bit different from most others:",228],["The inspector is split into two sections, the Texture Importer and the texture preview.",228],["Texture Importer",228],["Textures all come from image files in your Project Folder. How they are imported is specified by the Texture Importer. You change these by selecting the file texture in the Project View and modifying the Texture Importer in the Inspector.",228],["The topmost item in the inspector is the Texture Type menu that allows you to select the type of texture you want to create from the source image file.",228],["Property: Function: ",228],["Texture Type Select this to set basic parameters depending on the purpose of your texture. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Texture This is the most common setting used for all the textures in general. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Normal Map Select this to turn the color channels into a format suitable for real-time normal mapping. See the Details section at the end of the page.. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;GUI Use this if your texture is going to be used on any HUD/GUI Controls. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Sprite This must be selected if your texture will be used in a 2D game as a Sprite. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Cubemap Cubemap, often used to create reflections. See Cubemap Textures for more info. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Cookie This sets up your texture with the basic parameters used for the Cookies of your lights ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Advanced Select this when you want to have specific parameters on your texture and you want to have total control over your texture. ",228],["",228],["Alpha From Grayscale If enabled, an alpha transparency channel will be generated by the image's existing values of light &amp; dark. ",228],["Wrap Mode Selects how the Texture behaves when tiled: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Repeat The Texture repeats (tiles) itself ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Clamp The Texture's edges get stretched ",228],["Filter Mode Selects how the Texture is filtered when it gets stretched by 3D transformations: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Point The Texture becomes blocky up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bilinear The Texture becomes blurry up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Trilinear Like Bilinear, but the Texture also blurs between the different mip levels ",228],["Aniso Level Increases texture quality when viewing the texture at a steep angle. Good for floor and ground textures. See the Details section at the end of the page. ",228],["",228],["Create from Greyscale If this is enabled then Bumpiness and Filtering options will be shown. ",228],["Bumpiness Control the amount of bumpiness. ",228],["Filtering Determine how the bumpiness is calculated: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Smooth This generates normal maps that are quite smooth. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Sharp Also known as a Sobel filter. this generates normal maps that are sharper than Standard. ",228],["Wrap Mode Selects how the Texture behaves when tiled: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Repeat The Texture repeats (tiles) itself ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Clamp The Texture's edges get stretched ",228],["Filter Mode Selects how the Texture is filtered when it gets stretched by 3D transformations: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Point The Texture becomes blocky up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bilinear The Texture becomes blurry up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Trilinear Like Bilinear, but the Texture also blurs between the different mip levels ",228],["Aniso Level Increases texture quality when viewing the texture at a steep angle. Good for floor and ground textures. See the Details section at the end of the page. ",228],["",228],["Filter Mode Selects how the Texture is filtered when it gets stretched by 3D transformations: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Point The Texture becomes blocky up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bilinear The Texture becomes blurry up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Trilinear Like Bilinear, but the Texture also blurs between the different mip levels ",228],["",228],["Sprite mode Selects how the the sprite graphic will be extracted from the image. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Single The sprite image will be used in isolation. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Multiple Multiple related sprites (eg, animation frames or separate sprite elements that belong to a single game character) will be kept together in the same image. ",228],["Packing Tag The name of an optional sprite atlas into which this texture should be packed. ",228],["Pixels To Units The number of pixels of width/height in the sprite image that will correspond to one distance unit in world space. ",228],["Pivot The point in the image where the sprite's local coordinate system originates (center, top-left, etc). ",228],["Filter Mode Selects how the Texture is filtered when it gets stretched by transformations: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Point The Texture becomes blocky up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bilinear The Texture becomes blurry up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Trilinear Like Bilinear, but the Texture also blurs between the different mip levels ",228],["",228],["Wrap Mode Selects how the Texture behaves when tiled: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Repeat The Texture repeats (tiles) itself ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Clamp The Texture's edges get stretched ",228],["Filter Mode Selects how the Texture is filtered when it gets stretched by 3D transformations: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Point The Texture becomes blocky up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bilinear The Texture becomes blurry up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Trilinear Like Bilinear, but the Texture also blurs between the different mip levels ",228],["See Cubemap Textures page for more information on cubemap import settings.",228],["An interesting way to add a lot of visual detail to your scenes is to use Cookies - greyscale textures you use to control the precise look of in-game lighting. This is fantastic for making moving clouds and giving an impression of dense foliage. The Light page has more info on all this, but the main thing is that for textures to be usable for cookies you just need to set the Texture Type to Cookie.",228],["",228],["Light Type Type of light that the texture will be applied to. (This can be Spotlight, Point or Directional lights). For Directional Lights this texture will tile, so in the texture inspector, you must set the Edge Mode to Repeat; for SpotLights You should keep the edges of your cookie texture solid black in order to get the proper effect. In the Texture Inspector, set the Edge Mode to Clamp. ",228],["Mapping (Point light only) Options for mapping the texture onto the spherical cast of the point light. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Sphere Mapped Maps the texture to a \"sphere like\" cubemap. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Cylindrical Maps the texture to a cylinder, use this when you want to use reflections on objects that are like cylinders. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Simple Sphere Maps the texture to a simple sphere, deforming the reflection when you rotate it. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Nice Sphere Maps the texture to a sphere, deforming it when you rotate but you still can see the texture's wrap ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;6 Frames Layout The texture contains six images arranged in one of the standard cubemap layouts, cross or sequence (+x -x +y -y +z -z) and the images can be in either horizontal or vertical orientation. ",228],["Fixup edge seams (Point light only) Removes visual artifacts at the joined edges of the map image(s). ",228],["Alpha from Greyscale If enabled, an alpha transparency channel will be generated by the image's existing values of light &amp; dark. ",228],["",228],["Filter Mode Selects how the Texture is filtered when it gets stretched by 3D transformations: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Point The Texture becomes blocky up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bilinear The Texture becomes blurry up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Trilinear Like Bilinear, but the Texture also blurs between the different mip levels ",228],["Aniso Level Increases texture quality when viewing the texture at a steep angle. Good for floor and ground textures. See the Details section at the end of the page. ",228],["",228],["Non Power of 2 If texture has non-power-of-two size, this will define a scaling behavior at import time. See the Details section at the end of the page. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;None Texture size will be kept as-is. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;To nearest Texture will be scaled to the nearest power-of-two size at import time. For instance 257x511 texture will become 256x512. Note that PVRTC formats require textures to be square (width equal to height), therefore final size will be upscaled to 512x512. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;To larger Texture will be scaled to the next larger power-of-two size at import time. For instance 257x511 texture will become 512x512. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;To smaller Texture will be scaled to the next smaller power-of-two size at import time. For instance 257x511 texture will become 256x256. ",228],["Mapping Should a Cubemap be generated from this texture? See Cubemap Textures page for more information. ",228],["Read/Write Enabled Select this to enable access to the texture data from scripts (GetPixels, SetPixels and other Texture2D functions). Note however that a copy of the texture data will be made, doubling the amount of memory required for texture asset. Use only if absolutely necessary. This is only valid for uncompressed and DTX compressed textures, other types of compressed textures cannot be read from. Disabled by default. ",228],["Import Type The way the image data is interpreted. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Default Standard texture. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Normal Map Texture is treated as a normal map (enables other options) ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Lightmap Texture is treated as a lightmap (disables other options) ",228],["Alpha from grayscale (Default mode only) Generates the alpha channel from the luminance information in the image ",228],["Create from grayscale (Normal map mode only) Creates the map from the luminance information in the image ",228],["Bypass sRGB sampling (Default mode only) Use the exact colour values from the image rather than compensating for gamma (useful when the texture is for GUI or used as a way to encode non-image data) ",228],["Generate Mip Maps Select this to enable mip-map generation. Mip maps are smaller versions of the texture that get used when the texture is very small on screen. See the Details section at the end of the page. ",228],["In Linear Space Generate mipmaps in linear colour space. ",228],["Border Mip Maps Select this to avoid colors seeping out to the edge of the lower Mip levels. Used for light cookies (see below). ",228],["Mip Map Filtering Two ways of mip map filtering are available to optimize image quality: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Box The simplest way to fade out the mipmaps - the mip levels become smoother and smoother as they go down in size. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Kaiser A sharpening Kaiser algorithm is run on the mip maps as they go down in size. If your textures are too blurry in the distance, try this option. ",228],["Fade Out Mipmaps Enable this to make the mipmaps fade to gray as the mip levels progress. This is used for detail maps. The left most scroll is the first mip level to begin fading out at. The rightmost scroll defines the mip level where the texture is completely grayed out ",228],["Wrap Mode Selects how the Texture behaves when tiled: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Repeat The Texture repeats (tiles) itself ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Clamp The Texture's edges get stretched ",228],["Filter Mode Selects how the Texture is filtered when it gets stretched by 3D transformations: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Point The Texture becomes blocky up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bilinear The Texture becomes blurry up close ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Trilinear Like Bilinear, but the Texture also blurs between the different mip levels ",228],["Aniso Level Increases texture quality when viewing the texture at a steep angle. Good for floor and ground textures. See the Details section at the end of the page. ",228],["Per-Platform Overrides",228],["When you are building for different platforms, you have to think about the resolution of your textures for the target platform, the size and the quality. You can set default options and then override the defaults for a specific platform.",228],["The general settings are covered below. Settings specific to a platform can be found separately in the platform's own manual section.",228],["",228],["Max Texture Size The maximum imported texture size. Artists often prefer to work with huge textures - scale the texture down to a suitable size with this. ",228],["Texture Format What internal representation is used for the texture. This is a tradeoff between size and quality. In the examples below we show the final size of a in-game texture of 256 by 256 pixels: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Compressed Compressed RGB texture. This is the most common format for diffuse textures. 4 bits per pixel (32 KB for a 256x256 texture). ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;16 bit Low-quality truecolor. Has 16 levels of red, green, blue and alpha. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Truecolor Truecolor, this is the highest quality. At 256 KB for a 256x256 texture. ",228],["If you have set the Texture Type to Advanced then the Texture Format has different values.",228],["",228],["Texture Format What internal representation is used for the texture. This is a tradeoff between size and quality. In the examples below we show the final size of an in-game texture of 256 by 256 pixels: ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed DXT1 Compressed RGB texture. This is the most common format for diffuse textures. 4 bits per pixel (32 KB for a 256x256 texture). ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA Compressed DXT5 Compressed RGBA texture. This is the main format used for diffuse &amp; specular control textures. 1 byte/pixel (64 KB for a 256x256 texture). ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB 16 bit 65 thousand colors with no alpha. Compressed DXT formats use less memory and usually look better. 128 KB for a 256x256 texture. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB 24 bit Truecolor but without alpha. 192 KB for a 256x256 texture. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Alpha 8 bit High quality alpha channel but without any color. 64 KB for a 256x256 texture. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA 16 bit Low-quality truecolor. Has 16 levels of red, green, blue and alpha. Compressed DXT5 format uses less memory and usually looks better. 128 KB for a 256x256 texture. ",228],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA 32 bit Truecolor with alpha - this is the highest quality. At 256 KB for a 256x256 texture, this one is expensive. Most of the time, DXT5 offers sufficient quality at a much smaller size. The main way this is used is for normal maps, as DXT compression there often carries a visible quality loss. ",228],["Details",228],["Supported Formats",228],["Unity can read the following file formats: PSD, TIFF, JPG, TGA, PNG, GIF, BMP, IFF, PICT. It should be noted that Unity can import multi-layer PSD &amp; TIFF files just fine. They are flattened automatically on import but the layers are maintained in the assets themselves, so you don't lose any of your work when using these file types natively. This is important as it allows you to just have one copy of your textures that you can use from Photoshop, through your 3D modelling app and into Unity.",228],["Texture Sizes",228],["Ideally texture sizes should be powers of two on the sides. These sizes are as follows: 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048 etc. pixels. The textures do not have to be square, i.e. width can be different from height. Note that each platform may impose maximum texture sizes.",228],["It is possible to use other (non power of two - \"NPOT\") texture sizes with Unity. Non power of two texture sizes generally take slightly more memory and might be slower to read by the GPU, so for performance it's best to use power of two sizes whenever you can. If the platform or GPU does not support NPOT texture sizes, then Unity will scale and pad the texture up to next power of two size, which will use even more memory and make loading slower (in practice, this can happen on some older mobile devices). In general you'd want to use non power of two sizes only for GUI purposes.",228],["Non power of two texture assets can be scaled up at import time using the Non Power of 2 option in the advanced texture type in the import settings.",228],["UV Mapping",228],["When mapping a 2D texture onto a 3D model, some sort of wrapping is done. This is called UV mapping and is done in your 3D modelling app. Inside Unity, you can scale and move the texture using Materials. Scaling normal &amp; detail maps is especially useful.",228],["Mip Maps",228],["Mip Maps are a list of progressively smaller versions of an image, used to optimise performance on real-time 3D engines. Objects that are far away from the camera use the smaller texture versions. Using mip maps uses 33% more memory, but not using them can be a huge performance loss. You should always use mipmaps for in-game textures; the only exceptions are textures that will never be minified (e.g. GUI textures).",228],["Normal Maps",228],["Normal maps are used by normal map shaders to make low-polygon models look as if they contain more detail. Unity uses normal maps encoded as RGB images. You also have the option to generate a normal map from a grayscale height map image.",228],["Detail Maps",228],["If you want to make a terrain, you normally use your main texture to show where there are areas of grass, rocks sand, etc... If your terrain has a decent size, it will end up very blurry. Detail textures hide this fact by fading in small details as your main texture gets up close.",228],["When drawing detail textures, a neutral gray is invisible, white makes the main texture twice as bright and black makes the main texture completely black.",228],["Reflections (Cube Maps)",228],["If you want to use texture for reflection maps (e.g. use it in Reflection Probes or a cubemapped Skybox), pick Cubemap import type. See Cubemap Textures page for more information.",228],["Anisotropic filtering",228],["Anisotropic filtering increases texture quality when viewed from a grazing angle, at some expense of rendering cost (the cost is entirely on the graphics card). Increasing anisotropy level is usually a good idea for ground and floor textures. In Quality Settings anisotropic filtering can be forced for all textures or disabled completely.",228],["Android 2D Textures Overrides",229],["When you are building for different platforms, you have to think about the resolution of your textures for the target platform, the size and the quality. You can set default options and then override the defaults for a specific platform.",229],["This page details the Texture Overrides specific to Android. A description of the general Texture Overrides can be found here.",229],["",229],["Texture Format What internal representation is used for the texture. This is a tradeoff between size and quality. In the examples below we show the final size of a in-game texture of 256 by 256 pixels: ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed DXT1 Compressed RGB texture. Supported by Nvidia Tegra. 4 bits per pixel (32 KB for a 256x256 texture). ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA Compressed DXT5 Compressed RGBA texture. Supported by Nvidia Tegra. 6 bits per pixel (64 KB for a 256x256 texture). ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed ETC 4 bits Compressed RGB texture. This is the default texture format for Android projects. ETC1 is part of OpenGL ES 2.0 and is supported by all OpenGL ES 2.0 GPUs. It does not support alpha. 4 bits per pixel (32 KB for a 256x256 texture) ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed PVRTC 2 bits Compressed RGB texture. Supported by Imagination PowerVR GPUs. 2 bits per pixel (16 KB for a 256x256 texture) ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA Compressed PVRTC 2 bits Compressed RGBA texture. Supported by Imagination PowerVR GPUs. 2 bits per pixel (16 KB for a 256x256 texture) ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed PVRTC 4 bits Compressed RGB texture. Supported by Imagination PowerVR GPUs. 4 bits per pixel (32 KB for a 256x256 texture) ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA Compressed PVRTC 4 bits Compressed RGBA texture. Supported by Imagination PowerVR GPUs. 4 bits per pixel (32 KB for a 256x256 texture) ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed ATC 4 bits Compressed RGB texture. Supported by Qualcomm Snapdragon. 4 bits per pixel (32 KB for a 256x256 texture). ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA Compressed ATC 8 bits Compressed RGBA texture. Supported by Qualcomm Snapdragon. 6 bits per pixel (64 KB for a 256x256 texture). ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB 16 bit 65 thousand colors with no alpha. Uses more memory than the compressed formats, but could be more suitable for UI or crisp textures without gradients. 128 KB for a 256x256 texture. ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB 24 bit Truecolor but without alpha. 192 KB for a 256x256 texture. ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Alpha 8 bit High quality alpha channel but without any color. 64 KB for a 256x256 texture. ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA 16 bit Low-quality truecolor. The default compression for the textures with alpha channel. 128 KB for a 256x256 texture. ",229],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA 32 bit Truecolor with alpha - this is the highest quality compression for the textures with alpha. 256 KB for a 256x256 texture. ",229],["Compression quality Choose Fast for quickest performance, Best for the best image quality and Normal for a balance between the two. ",229],["Unless you're targeting a specific hardware, like Tegra, we'd recommend using ETC1 compression. If needed you could store an external alpha channel and still benefit from lower texture footprint.",229],["If you absolutely want to store an alpha channel in a texture, RGBA16 bit is the compression supported by all hardware vendors.",229],["Textures can be imported from DDS files but only DXT or uncompressed pixel formats are currently supported.",229],["If your app utilizes an unsupported texture compression, the textures will be uncompressed to RGBA 32 and stored in memory along with the compressed ones.",229],["So in this case you lose time decompressing textures and lose memory storing them twice. It may also have a very negative impact on rendering performance.",229],["iOS 2D Texture Overrides",230],["When you are building for different platforms, you have to think about the resolution of your textures for the target platform, the size and the quality. You can set default options and then override the defaults for a specific platform.",230],["This page details the Texture Overrides specific to iOS. A description of the general Texture Overrides can be found here.",230],["",230],["Texture Format What internal representation is used for the texture. This is a tradeoff between size and quality. In the examples below we show the final size of a in-game texture of 256 by 256 pixels: ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed PVRTC 4 bits Compressed RGB texture. This is the most common format for diffuse textures. 4 bits per pixel (32 KB for a 256x256 texture) ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA Compressed PVRTC 4 bits Compressed RGBA texture. This is the main format used for diffuse &amp; specular control textures or diffuse textures with transparency. 4 bits per pixel (32 KB for a 256x256 texture) ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed PVRTC 2 bits Compressed RGB texture. Lower quality format suitable for diffuse textures. 2 bits per pixel (16 KB for a 256x256 texture) ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA Compressed PVRTC 2 bits Compressed RGBA texture. Lower quality format suitable for diffuse &amp; specular control textures. 2 bits per pixel (16 KB for a 256x256 texture) ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB Compressed DXT1 Compressed RGB texture. This format is not supported on iOS, but kept for backwards compatibility with desktop projects. ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA Compressed DXT5 Compressed RGBA texture. This format is not supported on iOS, but kept for backwards compatibility with desktop projects. ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB 16 bit 65 thousand colors with no alpha. Uses more memory than PVRTC formats, but could be more suitable for UI or crisp textures without gradients. 128 KB for a 256x256 texture. ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGB 24 bit Truecolor but without alpha. 192 KB for a 256x256 texture. ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Alpha 8 bit High quality alpha channel but without any color. 64 KB for a 256x256 texture. ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA 16 bit Low-quality truecolor. Has 16 levels of red, green, blue and alpha. Uses more memory than PVRTC formats, but can be handy if you need exact alpha channel. 128 KB for a 256x256 texture. ",230],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RGBA 32 bit Truecolor with alpha - this is the highest quality. At 256 KB for a 256x256 texture, this one is expensive. Most of the time, PVRTC formats offers sufficient quality at a much smaller size. ",230],["Compression quality Choose Fast for quickest performance, Best for the best image quality and Normal for a balance between the two. ",230],["Time Manager",231],["The Time Manager (menu: Edit &gt; Project Settings &gt; Time) lets you set a number of properties that control timing within your game.",231],["Properties",231],["Property: Function: ",231],["Fixed Timestep A framerate-independent interval that dictates when physics calculations and FixedUpdate() events are performed. ",231],["Maximum Allowed Timestep A framerate-independent interval that caps the worst case scenario when frame-rate is low. Physics calculations and FixedUpdate() events will not be performed for longer time than specified. ",231],["Time Scale The speed at which time progress. Change this value to simulate bullet-time effects. A value of 1 means real-time. A value of .5 means half speed; a value of 2 is double speed. ",231],["Details",231],["The Time Manager lets you set properties globally but it is often useful to set them from a script during gameplay (for example, setting Time Scale to zero is a useful way to pause the game). See the page on Time and Framerate Management for full details of how time can be managed in Unity.",231],["Trail Renderer",232],["The Trail Renderer is used to make trails behind objects in the scene as they move about.",232],["Properties",232],["Property: Function: ",232],["Materials An array of materials used for rendering the trail. Particle shaders work the best for trails. ",232],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Size The total number of elements in the Material array. ",232],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Element 0 Reference to the Material used to render the trail. The total number of elements is determined by the Size property. ",232],["Time Length of the trail, measured in seconds. ",232],["Start Width Width of the trail at the object's position. ",232],["End Width Width of the trail at the end. ",232],["Colors Array of colors to use over the length of the trail. You can also set alpha transparency with the colors. ",232],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Color0 to Color4 The trail's colors, initial to final. ",232],["Min Vertex Distance The minimum distance between anchor points of the trail. ",232],["AutoDestruct Enable this to make the object be destroyed when the object has been idle for Time seconds. ",232],["Details",232],["The Trail Renderer is great for a trail behind a projectile, or contrails from the tip of a plane's wings. It is good when trying to add a general feeling of speed.",232],["When using a Trail Renderer, no other renderers on the GameObject are used. It is best to create an empty GameObject, and attach a Trail Renderer as the only renderer. You can then parent the Trail Renderer to whatever object you would like it to follow.",232],["Materials",232],["Trail Renderers should use a material that has a Particle Shader. The Texture used for the Material should be of square dimensions (e.g. 256x256 or 512x512).",232],["Trail Width",232],["By setting the Trail's Start and End Width, along with the Time property, you can tune the way it is displayed and behaves. For example, you could create the wake behind a boat by setting the Start Width to 1, and the End Width to 2. These values would probably need to be fine-tuned for your game.",232],["Trail Colors",232],["You can cycle your trail through 5 different color/opacity combinations. Using colors could make a bright green plasma trail gradually dim down to a dull grey dissipation, or cycle through the other colors of the rainbow. If you don't want to change the color, it can be very effective to change only the opacity of each color to make your trail fade in and out at the head and/or tail.",232],["Min Vertex Distance",232],["The Min Vertex Distance value determines how far the object that contains the trail must travel before a segment of the trail is solidified. Low values like 0.1 will create trail segments more often, creating smoother trails. Higher values like 1.5 will create segments that are more jagged in appearance. There is a slight performance trade off when using lower values/smoother trails, so try to use the largest possible value to achieve the effect you are trying to create.",232],["Hints",232],["Use Particle Materials with the Trail Renderer.",232],["Trail Renderers must be laid out over a sequence of frames, they can't appear instantaneously.",232],["Trail Renderers rotate to display the face toward the camera, similar to other Particle Systems.",232],["Transform",233],["The Transform component determines the Position, Rotation, and Scale of each object in the scene. Every GameObject has a Transform.",233],["Properties",233],["Property: Function: ",233],["Position Position of the Transform in X, Y, and Z coordinates. ",233],["Rotation Rotation of the Transform around the X, Y, and Z axes, measured in degrees. ",233],["Scale Scale of the Transform along X, Y, and Z axes. Value \"1\" is the original size (size at which the object was imported). ",233],["The position, rotation and scale values of a Transform are measured relative to the Transform's parent. If the Transform has no parent, the properties are measured in world space.",233],["Animation Transitions",234],["Animation Transitions define what happens when you switch from one Animation State to another. There can be only one transition active at any given time.",234],["Property: Function: ",234],["Atomic Is this transition atomic? (cannot be interrupted) ",234],["Conditions Here we decide when transitions get triggered. ",234],["A condition consists of:",234],["An event parameter or an Exit Time, specifying a number which represents the normalized time of the source state (e.g. 0.95 means the transition will trigger, when we've played the source clip 95% through).",234],["A conditional predicate, if needed (for example Less/Greater for floats).",234],["A parameter value (if needed).",234],["You can adjust the transition between the two animation clips by dragging the start and end values of the overlap.",234],["See also Transition solo / mute.",234],["Tree Creator",235],["Unity comes with a few trees in the standard assets (menu: Assets > Import Package > Terrain Assets) and can import trees created with standard 3D modelling software. However, Unity also provides a Tree Creator tool that lets you design trees directly within the editor. This is very useful when you want to create detailed forests and jungles with different tree types and variations.",235],["This section of the manual explains how to use the tree creator. Since many projects do not require trees, the tree creator is supplied as a optional package that you must import before using it (menu: Assets > Import Package > Tree Creator).",235],["Wheel Collider",236],["The Wheel Collider is a special collider for grounded vehicles. It has built-in collision detection, wheel physics, and a slip-based tire friction model. It can be used for objects other than wheels, but it is specifically designed for vehicles with wheels.",236],["Properties",236],["Property: Function: ",236],["Mass The Mass of the wheel. ",236],["Radius Radius of the wheel. ",236],["Wheel Damping Rate This is a value of damping applied to a wheel. ",236],["Suspension Distance Maximum extension distance of wheel suspension, measured in local space. Suspension always extends downwards through the local Y-axis. ",236],["Force App Point Distance This parameter defines the point where the wheel forces will applied. This is expected to be in metres from the base of the wheel at rest position along the suspension travel direction. When forceAppPointDistance = 0 the forces will be applied at the wheel base at rest. A better vehicle would have forces applied slightly below the vehicle centre of mass. ",236],["Center Center of the wheel in object local space. ",236],["Suspension Spring The suspension attempts to reach a Target Position by adding spring and damping forces. ",236],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Spring Spring force attempts to reach the Target Position. A larger value makes the suspension reach the Target Position faster. ",236],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Damper Dampens the suspension velocity. A larger value makes the Suspension Spring move slower. ",236],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Target Position The suspension's rest distance along Suspension Distance. 0 maps to fully extended suspension, and 1 maps to fully compressed suspension. Default value is zero, which matches the behavior of a regular car's suspension. ",236],["Forward/Sideways Friction Properties of tire friction when the wheel is rolling forward and sideways. See the Wheel Friction Curves section below. ",236],["Details",236],["The wheel's collision detection is performed by casting a ray from Center downwards through the local Y-axis. The wheel has a Radius and can extend downwards according to the Suspension Distance. The vehicle is controlled from scripting using different properties: motorTorque, brakeTorque and steerAngle. See the Wheel Collider scripting reference for more information.",236],["The Wheel Collider computes friction separately from the rest of physics engine, using a slip-based friction model. This allows for more realistic behaviour but also causes Wheel Colliders to ignore standard Physic Material settings.",236],["Wheel collider setup",236],["You do not turn or roll WheelCollider objects to control the car - the objects that have the WheelCollider attached should always be fixed relative to the car itself. However, you might want to turn and roll the graphical wheel representations. The best way to do this is to setup separate objects for Wheel Colliders and visible wheels:",236],["If you want to update the position of the graphical wheel representations according to the suspension position you can use the example for WheelCollider.GetGroundHit in the Scripting Reference. Note that the gizmo graphic for the WheelCollider's position is not updated in playmode:",236],["Collision geometry",236],["Because cars can achieve large velocities, getting race track collision geometry right is very important. Specifically, the collision mesh should not have small bumps or dents that make up the visible models (e.g. fence poles). Usually a collision mesh for the race track is made separately from the visible mesh, making the collision mesh as smooth as possible. It also should not have thin objects - if you have a thin track border, make it wider in a collision mesh (or completely remove the other side if the car can never go there).",236],["Wheel Friction Curves",236],["Tire friction can be described by the Wheel Friction Curve shown below. There are separate curves for the wheel's forward (rolling) direction and sideways direction. In both directions it is first determined how much the tire is slipping (based on the speed difference between the tire's rubber and the road). Then this slip value is used to find out tire force exerted on the contact point.",236],["The curve takes a measure of tire slip as an input and gives a force as output. The curve is approximated by a two-piece spline. The first section goes from (0 , 0) to (ExtremumSlip , ExtremumValue), at which point the curve's tangent is zero. The second section goes from (ExtremumSlip , ExtremumValue) to (AsymptoteSlip , AsymptoteValue), where curve's tangent is again zero:",236],["The property of real tires is that for low slip they can exert high forces, since the rubber compensates for the slip by stretching. Later when the slip gets really high, the forces are reduced as the tire starts to slide or spin. Thus, tire friction curves have a shape like in the image above.",236],["Property: Function: ",236],["Extremum Slip/Value Curve's extremum point. ",236],["Asymptote Slip/Value Curve's asymptote point. ",236],["Stiffness Multiplier for the Extremum Value and Asymptote Value (default is 1). Changes the stiffness of the friction. Setting this to zero will completely disable all friction from the wheel. Usually you modify stiffness at runtime to simulate various ground materials from scripting. ",236],["Hints",236],["You might want to decrease physics timestep length in Time Manager to get more stable car physics, especially if it's a racing car that can achieve high velocities.",236],["To keep a car from flipping over too easily you can lower its Rigidbody center of mass a bit from script, and apply \"down pressure\" force that depends on car velocity.",236],["Wheel Joint 2D",237],["A Wheel Joint 2D is used to simulate a rolling wheel on which an object can move, optionally with motor power applied. The wheel uses a suspension \"spring\" to maintain its distance from the main body of the vehicle.",237],["Properties",237],["Property: Function: ",237],["Collide Connected Should the Rigidbody collide with the one it is connected to by the joint? ",237],["Connected Rigidbody The Rigidbody object that the wheel object is connected to. ",237],["Anchor Coordinate in local space where the end point of the joint is attached. ",237],["Connected Anchor Coordinate in the other object's local space where its end of the joint is attached. ",237],["Suspension  ",237],["Damping Ratio Fraction of the suspension force that is reduced in proportion to the movement speed of the suspension. ",237],["Frequency Frequency of oscillation of the suspension spring as it comes to rest. ",237],["Angle The world movement angle for the suspension. ",237],["Use Motor Should a motor force be applied to the wheel? ",237],["Motor  ",237],["Motor Speed Target speed (degrees per second) for the motor to reach. ",237],["Maximum Motor Force Maximum force applied to the Rigidbody to attain the desired speed. ",237],["Details",237],["Unlike the Wheel Collider used with 3D physics, the Wheel Joint 2D  uses a separate Rigidbody object for the wheel, which actually rotates when the force is applied. (The Wheel Collider, by contrast, simulates the suspension using a raycast and the wheel's rotation is purely a graphical effect). The wheel object will typically be a Circle Collider 2D with a Physics Material 2D that gives the right amount of traction for your gameplay.",237],["To simulate a car or other vehicle, you will usually want to set the Motor Speed property to zero in the inspector and then vary it from your script according to the player's input. You might also change the value of Maximum Motor Force to simulate the effect of gear changes and power-ups.",237],["Tree - Wind Zones",238],["Wind Zones add realism to the trees you create by making them wave their branches and leaves as if blown by the wind.",238],["Properties",238],["Property: Function: ",238],["Mode  ",238],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Spherical Wind zone only has an effect inside the radius, and has a falloff from the center towards the edge. ",238],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Directional Wind zone affects the entire scene in one direction. ",238],["Radius Radius of the Spherical Wind Zone (only active if the mode is set to Spherical). ",238],["Wind Main The primary wind force. Produces a softly changing wind pressure. ",238],["Turbulence The turbulence wind force. Produces a rapidly changing wind pressure. ",238],["Pulse Magnitude Defines how much the wind changes over time. ",238],["Pulse Frequency Defines the frequency of the wind changes. ",238],["Details",238],["Wind Zones are used only by the tree creator for animating leaves and branches. This can help your scenes appear more natural and allows forces (such as explosions) within the game to look like they are interacting with the trees.",238],["For more information about how a tree works, just visit the tree class page.",238],["Using Wind Zones in Unity.",238],["Using Wind Zones in Unity is really simple.",238],["First of all, to create a new wind zone just click on Game Object &gt; Create General &gt; Wind Zone.",238],["Place the wind zone (depending on the type) near the trees created with the tree creator and watch it interact with your trees!.",238],["Note: If the wind zone is Spherical you should place it so that the trees you want to blow are within the sphere's radius. If the wind zone is directional it doesn't matter where in the scene you place it.",238],["Hints",238],["To produce a softly changing general wind:",238],["Create a directional wind zone.",238],["Set Wind Main to 1.0 or less, depending on how powerful the wind should be.",238],["Set Turbulence to 0.1.",238],["Set Pulse Magnitude to 1.0 or more.",238],["Set Pulse Frequency to 0.25.",238],["To create the effect of a helicopter passing by:",238],["Create a spherical wind zone.",238],["Set Radius to something that fits the size of your helicopter",238],["Set Wind Main to 3.0",238],["Set Turbulence to 5.0",238],["Set Pulse Magnitude to 0.1",238],["Set Pulse Frequency to 1.0",238],["Attach the wind zone to a GameObject resembling your helicopter.",238],["To create the effect of an explosion:",238],["Do the same as with the helicopter, but fade the Wind Main and Turbulence quickly to make the effect wear off.",238],["World Particle Collider (Legacy)",239],["The World Particle Collider is used to collide particles against other Colliders in the scene.",239],["Properties",239],["Property: Function: ",239],["Bounce Factor Particles can be accelerated or slowed down when they collide against other objects. This factor is similar to the Particle Animator's Damping property. ",239],["Collision Energy Loss Amount of energy (in seconds) a particle should lose when colliding. If the energy goes below 0, the particle is killed. ",239],["Min Kill Velocity If a particle's Velocity drops below Min Kill Velocity because of a collision, it will be eliminated. ",239],["Collides with Which Layers the particle will collide against. ",239],["Send Collision Message If enabled, every particle sends out a collision message that you can catch through scripting. ",239],["Details",239],["To create a Particle System with Particle Collider:",239],["Create a Particle System using GameObject &gt; Create General &gt; Particle System",239],["Add the Particle Collider using Component &gt; Particles &gt; World Particle Collider",239],["Messaging",239],["If Send Collision Message is enabled, any particles that are in a collision will send the message OnParticleCollision() to both the particle's GameObject and the GameObject the particle collided with.",239],["Hints",239],["Send Collision Message can be used to simulate bullets and apply damage on impact.",239],["Particle Collision Detection is slow when used with a lot of particles. Use Particle Collision Detection wisely.",239],["Message sending introduces a large overhead and shouldn't be used for normal Particle Systems.",239],["YAML Class ID Reference",240],["A reference of common class ID numbers used by the YAML file format is given below, both in numerical order of class IDs and alphabetical order of class names. Note that some ranges of numbers are intentionally omitted from the sequence - these may represent classes that have been removed from the API or may be reserved for future use. Classes defined from scripts will always have class ID 114 (MonoBehaviour).",240],["Classes Ordered by ID Number",240],["ID  Class  ",240],["1  GameObject  ",240],["2  Component  ",240],["3  LevelGameManager  ",240],["4  Transform  ",240],["5  TimeManager  ",240],["6  GlobalGameManager  ",240],["8  Behaviour  ",240],["9  GameManager  ",240],["11  AudioManager  ",240],["12  ParticleAnimator  ",240],["13  InputManager  ",240],["15  EllipsoidParticleEmitter  ",240],["17  Pipeline  ",240],["18  EditorExtension  ",240],["19  Physics2DSettings  ",240],["20  Camera  ",240],["21  Material  ",240],["23  MeshRenderer  ",240],["25  Renderer  ",240],["26  ParticleRenderer  ",240],["27  Texture  ",240],["28  Texture2D  ",240],["29  SceneSettings  ",240],["30  GraphicsSettings  ",240],["33  MeshFilter  ",240],["41  OcclusionPortal  ",240],["43  Mesh  ",240],["45  Skybox  ",240],["47  QualitySettings  ",240],["48  Shader  ",240],["49  TextAsset  ",240],["50  Rigidbody2D  ",240],["51  Physics2DManager  ",240],["53  Collider2D  ",240],["54  Rigidbody  ",240],["55  PhysicsManager  ",240],["56  Collider  ",240],["57  Joint  ",240],["58  CircleCollider2D  ",240],["59  HingeJoint  ",240],["60  PolygonCollider2D  ",240],["61  BoxCollider2D  ",240],["62  PhysicsMaterial2D  ",240],["64  MeshCollider  ",240],["65  BoxCollider  ",240],["66  SpriteCollider2D  ",240],["68  EdgeCollider2D  ",240],["72  ComputeShader  ",240],["74  AnimationClip  ",240],["75  ConstantForce  ",240],["76  WorldParticleCollider  ",240],["78  TagManager  ",240],["81  AudioListener  ",240],["82  AudioSource  ",240],["83  AudioClip  ",240],["84  RenderTexture  ",240],["87  MeshParticleEmitter  ",240],["88  ParticleEmitter  ",240],["89  Cubemap  ",240],["90  Avatar  ",240],["91  AnimatorController  ",240],["92  GUILayer  ",240],["93  RuntimeAnimatorController  ",240],["94  ScriptMapper  ",240],["95  Animator  ",240],["96  TrailRenderer  ",240],["98  DelayedCallManager  ",240],["102  TextMesh  ",240],["104  RenderSettings  ",240],["108  Light  ",240],["109  CGProgram  ",240],["110  BaseAnimationTrack  ",240],["111  Animation  ",240],["114  MonoBehaviour  ",240],["115  MonoScript  ",240],["116  MonoManager  ",240],["117  Texture3D  ",240],["118  NewAnimationTrack  ",240],["119  Projector  ",240],["120  LineRenderer  ",240],["121  Flare  ",240],["122  Halo  ",240],["123  LensFlare  ",240],["124  FlareLayer  ",240],["125  HaloLayer  ",240],["126  NavMeshAreas  ",240],["127  HaloManager  ",240],["128  Font  ",240],["129  PlayerSettings  ",240],["130  NamedObject  ",240],["131  GUITexture  ",240],["132  GUIText  ",240],["133  GUIElement  ",240],["134  PhysicMaterial  ",240],["135  SphereCollider  ",240],["136  CapsuleCollider  ",240],["137  SkinnedMeshRenderer  ",240],["138  FixedJoint  ",240],["140  RaycastCollider  ",240],["141  BuildSettings  ",240],["142  AssetBundle  ",240],["143  CharacterController  ",240],["144  CharacterJoint  ",240],["145  SpringJoint  ",240],["146  WheelCollider  ",240],["147  ResourceManager  ",240],["148  NetworkView  ",240],["149  NetworkManager  ",240],["150  PreloadData  ",240],["152  MovieTexture  ",240],["153  ConfigurableJoint  ",240],["154  TerrainCollider  ",240],["155  MasterServerInterface  ",240],["156  TerrainData  ",240],["157  LightmapSettings  ",240],["158  WebCamTexture  ",240],["159  EditorSettings  ",240],["160  InteractiveCloth  ",240],["161  ClothRenderer  ",240],["162  EditorUserSettings  ",240],["163  SkinnedCloth  ",240],["164  AudioReverbFilter  ",240],["165  AudioHighPassFilter  ",240],["166  AudioChorusFilter  ",240],["167  AudioReverbZone  ",240],["168  AudioEchoFilter  ",240],["169  AudioLowPassFilter  ",240],["170  AudioDistortionFilter  ",240],["171  SparseTexture  ",240],["180  AudioBehaviour  ",240],["181  AudioFilter  ",240],["182  WindZone  ",240],["183  Cloth  ",240],["184  SubstanceArchive  ",240],["185  ProceduralMaterial  ",240],["186  ProceduralTexture  ",240],["191  OffMeshLink  ",240],["192  OcclusionArea  ",240],["193  Tree  ",240],["194  NavMeshObsolete  ",240],["195  NavMeshAgent  ",240],["196  NavMeshSettings  ",240],["197  LightProbesLegacy  ",240],["198  ParticleSystem  ",240],["199  ParticleSystemRenderer  ",240],["200  ShaderVariantCollection  ",240],["205  LODGroup  ",240],["206  BlendTree  ",240],["207  Motion  ",240],["208  NavMeshObstacle  ",240],["210  TerrainInstance  ",240],["212  SpriteRenderer  ",240],["213  Sprite  ",240],["214  CachedSpriteAtlas  ",240],["215  ReflectionProbe  ",240],["216  ReflectionProbes  ",240],["220  LightProbeGroup  ",240],["221  AnimatorOverrideController  ",240],["222  CanvasRenderer  ",240],["223  Canvas  ",240],["224  RectTransform  ",240],["225  CanvasGroup  ",240],["226  BillboardAsset  ",240],["227  BillboardRenderer  ",240],["228  SpeedTreeWindAsset  ",240],["229  AnchoredJoint2D  ",240],["230  Joint2D  ",240],["231  SpringJoint2D  ",240],["232  DistanceJoint2D  ",240],["233  HingeJoint2D  ",240],["234  SliderJoint2D  ",240],["235  WheelJoint2D  ",240],["238  NavMeshData  ",240],["240  AudioMixer  ",240],["241  AudioMixerController  ",240],["243  AudioMixerGroupController  ",240],["244  AudioMixerEffectController  ",240],["245  AudioMixerSnapshotController  ",240],["246  PhysicsUpdateBehaviour2D  ",240],["247  ConstantForce2D  ",240],["248  Effector2D  ",240],["249  AreaEffector2D  ",240],["250  PointEffector2D  ",240],["251  PlatformEffector2D  ",240],["252  SurfaceEffector2D  ",240],["258  LightProbes  ",240],["271  SampleClip  ",240],["272  AudioMixerSnapshot  ",240],["273  AudioMixerGroup  ",240],["290  AssetBundleManifest  ",240],["1001  Prefab  ",240],["1002  EditorExtensionImpl  ",240],["1003  AssetImporter  ",240],["1004  AssetDatabase  ",240],["1005  Mesh3DSImporter  ",240],["1006  TextureImporter  ",240],["1007  ShaderImporter  ",240],["1008  ComputeShaderImporter  ",240],["1011  AvatarMask  ",240],["1020  AudioImporter  ",240],["1026  HierarchyState  ",240],["1027  GUIDSerializer  ",240],["1028  AssetMetaData  ",240],["1029  DefaultAsset  ",240],["1030  DefaultImporter  ",240],["1031  TextScriptImporter  ",240],["1032  SceneAsset  ",240],["1034  NativeFormatImporter  ",240],["1035  MonoImporter  ",240],["1037  AssetServerCache  ",240],["1038  LibraryAssetImporter  ",240],["1040  ModelImporter  ",240],["1041  FBXImporter  ",240],["1042  TrueTypeFontImporter  ",240],["1044  MovieImporter  ",240],["1045  EditorBuildSettings  ",240],["1046  DDSImporter  ",240],["1048  InspectorExpandedState  ",240],["1049  AnnotationManager  ",240],["1050  PluginImporter  ",240],["1051  EditorUserBuildSettings  ",240],["1052  PVRImporter  ",240],["1053  ASTCImporter  ",240],["1054  KTXImporter  ",240],["1101  AnimatorStateTransition  ",240],["1102  AnimatorState  ",240],["1105  HumanTemplate  ",240],["1107  AnimatorStateMachine  ",240],["1108  PreviewAssetType  ",240],["1109  AnimatorTransition  ",240],["1110  SpeedTreeImporter  ",240],["1111  AnimatorTransitionBase  ",240],["1112  SubstanceImporter  ",240],["1113  LightmapParameters  ",240],["1120  LightmapSnapshot  ",240],["Classes Ordered Alphabetically",240],["Class  ID  ",240],["ASTCImporter  1053  ",240],["AnchoredJoint2D  229  ",240],["Animation  111  ",240],["AnimationClip  74  ",240],["Animator  95  ",240],["AnimatorController  91  ",240],["AnimatorOverrideController  221  ",240],["AnimatorState  1102  ",240],["AnimatorStateMachine  1107  ",240],["AnimatorStateTransition  1101  ",240],["AnimatorTransitionBase  1111  ",240],["AnimatorTransition  1109  ",240],["AnnotationManager  1049  ",240],["AreaEffector2D  249  ",240],["AssetBundle  142  ",240],["AssetBundleManifest  290  ",240],["AssetDatabase  1004  ",240],["AssetImporter  1003  ",240],["AssetMetaData  1028  ",240],["AssetServerCache  1037  ",240],["AudioBehaviour  180  ",240],["AudioChorusFilter  166  ",240],["AudioClip  83  ",240],["AudioDistortionFilter  170  ",240],["AudioEchoFilter  168  ",240],["AudioFilter  181  ",240],["AudioHighPassFilter  165  ",240],["AudioImporter  1020  ",240],["AudioListener  81  ",240],["AudioLowPassFilter  169  ",240],["AudioManager  11  ",240],["AudioMixer  240  ",240],["AudioMixerController  241  ",240],["AudioMixerEffectController  244  ",240],["AudioMixerGroup  273  ",240],["AudioMixerGroupController  243  ",240],["AudioMixerSnapshot  272  ",240],["AudioMixerSnapshotController  245  ",240],["AudioReverbFilter  164  ",240],["AudioReverbZone  167  ",240],["AudioSource  82  ",240],["Avatar  90  ",240],["AvatarMask  1011  ",240],["BaseAnimationTrack  110  ",240],["Behaviour  8  ",240],["BillboardAsset  226  ",240],["BillboardRenderer  227  ",240],["BlendTree  206  ",240],["BoxCollider  65  ",240],["BoxCollider2D  61  ",240],["BuildSettings  141  ",240],["CachedSpriteAtlas  214  ",240],["Camera  20  ",240],["Canvas  223  ",240],["CanvasGroup  225  ",240],["CanvasRenderer  222  ",240],["CapsuleCollider  136  ",240],["CGProgram  109  ",240],["CharacterController  143  ",240],["CharacterJoint  144  ",240],["CircleCollider2D  58  ",240],["Cloth  183  ",240],["ClothRenderer  161  ",240],["Collider  56  ",240],["Collider2D  53  ",240],["Component  2  ",240],["ComputeShader  72  ",240],["ComputeShaderImporter  1008  ",240],["ConfigurableJoint  153  ",240],["ConstantForce  75  ",240],["ConstantForce2D  247  ",240],["Cubemap  89  ",240],["DDSImporter  1046  ",240],["DefaultAsset  1029  ",240],["DefaultImporter  1030  ",240],["DelayedCallManager  98  ",240],["DistanceJoint2D  232  ",240],["EdgeCollider2D  68  ",240],["EditorBuildSettings  1045  ",240],["EditorExtension  18  ",240],["EditorExtensionImpl  1002  ",240],["EditorSettings  159  ",240],["EditorUserBuildSettings  1051  ",240],["EditorUserSettings  162  ",240],["Effector2D  248  ",240],["EllipsoidParticleEmitter  15  ",240],["FBXImporter  1041  ",240],["FixedJoint  138  ",240],["Flare  121  ",240],["FlareLayer  124  ",240],["Font  128  ",240],["GameManager  9  ",240],["GameObject  1  ",240],["GlobalGameManager  6  ",240],["GraphicsSettings  30  ",240],["GUIDSerializer  1027  ",240],["GUIElement  133  ",240],["GUILayer  92  ",240],["GUIText  132  ",240],["GUITexture  131  ",240],["Halo  122  ",240],["HaloLayer  125  ",240],["HaloManager  127  ",240],["HierarchyState  1026  ",240],["HingeJoint  59  ",240],["HingeJoint2D  233  ",240],["HumanTemplate  1105  ",240],["InputManager  13  ",240],["InspectorExpandedState  1048  ",240],["InteractiveCloth  160  ",240],["Joint  57  ",240],["Joint2D  230  ",240],["KTXImporter  1054  ",240],["LensFlare  123  ",240],["LevelGameManager  3  ",240],["LibraryAssetImporter  1038  ",240],["Light  108  ",240],["LightmapParameters  1113  ",240],["LightmapSettings  157  ",240],["LightmapSnapshot  1120  ",240],["LightProbeGroup  220  ",240],["LightProbes  258  ",240],["LightProbesLegacy  197  ",240],["LineRenderer  120  ",240],["LODGroup  205  ",240],["MasterServerInterface  155  ",240],["Material  21  ",240],["Mesh  43  ",240],["Mesh3DSImporter  1005  ",240],["MeshCollider  64  ",240],["MeshFilter  33  ",240],["MeshParticleEmitter  87  ",240],["MeshRenderer  23  ",240],["ModelImporter  1040  ",240],["MonoBehaviour  114  ",240],["MonoImporter  1035  ",240],["MonoManager  116  ",240],["MonoScript  115  ",240],["Motion  207  ",240],["MovieImporter  1044  ",240],["MovieTexture  152  ",240],["NamedObject  130  ",240],["NativeFormatImporter  1034  ",240],["NavMeshAgent  195  ",240],["NavMeshAreas  126  ",240],["NavMeshData  238  ",240],["NavMeshObsolete  194  ",240],["NavMeshObstacle  208  ",240],["NavMeshSettings  196  ",240],["NetworkManager  149  ",240],["NetworkView  148  ",240],["NewAnimationTrack  118  ",240],["OcclusionArea  192  ",240],["OcclusionPortal  41  ",240],["OffMeshLink  191  ",240],["ParticleAnimator  12  ",240],["ParticleEmitter  88  ",240],["ParticleRenderer  26  ",240],["ParticleSystem  198  ",240],["ParticleSystemRenderer  199  ",240],["PhysicMaterial  134  ",240],["Physics2DManager  51  ",240],["Physics2DSettings  19  ",240],["PhysicsManager  55  ",240],["PhysicsMaterial2D  62  ",240],["PhysicsUpdateBehaviour2D  246  ",240],["Pipeline  17  ",240],["PlatformEffector2D  251  ",240],["PlayerSettings  129  ",240],["PluginImporter  1050  ",240],["PointEffector2D  250  ",240],["PolygonCollider2D  60  ",240],["Prefab  1001  ",240],["PreloadData  150  ",240],["PreviewAssetType  1108  ",240],["ProceduralMaterial  185  ",240],["ProceduralTexture  186  ",240],["Projector  119  ",240],["PVRImporter  1052  ",240],["QualitySettings  47  ",240],["RaycastCollider  140  ",240],["RectTransform  224  ",240],["ReflectionProbe  215  ",240],["ReflectionProbes  216  ",240],["Renderer  25  ",240],["RenderSettings  104  ",240],["RenderTexture  84  ",240],["ResourceManager  147  ",240],["Rigidbody  54  ",240],["Rigidbody2D  50  ",240],["RuntimeAnimatorController  93  ",240],["SampleClip  271  ",240],["SceneAsset  1032  ",240],["SceneSettings  29  ",240],["ScriptMapper  94  ",240],["Shader  48  ",240],["ShaderImporter  1007  ",240],["ShaderVariantCollection  200  ",240],["SkinnedCloth  163  ",240],["SkinnedMeshRenderer  137  ",240],["Skybox  45  ",240],["SliderJoint2D  234  ",240],["SparseTexture  171  ",240],["SphereCollider  135  ",240],["SpringJoint  145  ",240],["SpringJoint2D  231  ",240],["Sprite  213  ",240],["SpriteCollider2D  66  ",240],["SpriteRenderer  212  ",240],["SpeedTreeImporter  1110  ",240],["SpeedTreeWindAsset  228  ",240],["SubstanceArchive  184  ",240],["SubstanceImporter  1112  ",240],["SurfaceEffector2D  252  ",240],["TagManager  78  ",240],["TerrainCollider  154  ",240],["TerrainData  156  ",240],["TerrainInstance  210  ",240],["TextAsset  49  ",240],["TextMesh  102  ",240],["TextScriptImporter  1031  ",240],["Texture  27  ",240],["Texture2D  28  ",240],["Texture3D  117  ",240],["TextureImporter  1006  ",240],["TimeManager  5  ",240],["TrailRenderer  96  ",240],["Transform  4  ",240],["Tree  193  ",240],["TrueTypeFontImporter  1042  ",240],["WebCamTexture  158  ",240],["WheelCollider  146  ",240],["WheelJoint2D  235  ",240],["WindZone  182  ",240],["WorldParticleCollider  76  ",240],["Installing the Cluster Renderer",241],["To use Cluster Rendering the following files need to be installed:",241],["Unity Installer",241],["Editor Tools",241],["Deployment Tools",241],["The build requires a special license. Activating the build with a standard license will disable the cluster rendering feature.",241],["Please contact clusteradmin@unity3d.com to get a license and for details of how to download the files.",241],["Installation",241],["No special steps are required to install the editor - you can just use the installer from the link given.",241],["If you want to install the optional deployment tools (to update and control the nodes) you should follow the procedure given below:-",241],["Master Node",241],["Install Python 2.75.",241],["(Optional) Install and activate virtualenv.",241],["Copy the master folder from deployment.zip to a location of your choice.",241],["From command prompt, execute: python setup.py install",241],["Create the database, follow the instruction to create the admin user: python manage.py syncdb",241],["To run the server, execute: python manage.py runserver 0.0.0.0:8000",241],["Slave Node",241],["Install Python 2.75",241],["(Optional) Install and activate virtualenv",241],["Copy the slave folder from the deployment.zip above to a location of your choice",241],["From command prompt, execute: python setup.py install",241],["To run the slave, execute: python -m execnet.script.loop_socketserver",241],["Operating The Cluster",242],["Skip to the \"Start the Nodes Manually\" section below if you have your own deployment system.",242],["Setting Up the Nodes",242],["With the master node deployment tools running, browse to &lt;ip&gt;:&lt;port&gt;/cluster of the node.",242],["Click on \"Admin\" tab and enter username password from Master Node: Step 5\"",242],["Click \"Add\" on \"Cluster Nodes\"",242],["Fill up the form, the uri must be in this format: socket=&lt;ip&gt;:&lt;port&gt;",242],["Click \"Save\"",242],["Repeat to add all the nodes",242],["Upload A Build",242],["Click on the Upload tab",242],["Compress the build into a zip file. Ensure xxx.exe and xxx_data is at the root of the zip.",242],["Click on the \"Upload\" button, select the zip file and click OK.  The index value refers to which index this node assumes in the rig. It MUST be unique and should be used to determine the camera setup.",242],["Note that a unique id is generated for your build. This id is generated based on the zip file's name. To update your build simply upload a zip file with the same name.",242],["Starting the Cluster",242],["Ensure all slave nodes are turned on. See Slave Node.",242],["On the deploy page, select from the drop down the build you want to push out",242],["The selected build should be synced to all enabled slaves and will be executed together with the master node.",242],["Click StopAll",242],["Starting the Nodes Manually",242],["Master Node - This has to be started first",242],["&lt;exe&gt; -server &lt;num slaves&gt; tcp://:&lt;pubport&gt; tcp://:&lt;ackport&gt;",242],["The master will not proceed if number of slaves connected is less than specified in the command line",242],["ENSURE pubport and ackport is not the same",242],["Slave Node - These must come after Master Node and the order doesn't matter",242],["&lt;exe&gt; -client &lt;index&gt; tcp://&lt;masterip&gt;:&lt;pubport&gt; tcp://&lt;masterip&gt;:&lt;ackport&gt;",242],["DO NOT USE \"localhost\" as master ip. It won't resolve properly.",242],["DO NOT use duplicate index.",242],["For testing, all master and slave instances could be started on the same machine using the command line above.",242],["Cluster Rendering",243],["Unity uses clusters for complex Multi-Screen setups. These would typically be 3-6 screens but could up up to 50 screens, such as:",243],["CAVE systems",243],["Powerwall",243],["Other types of setups (Flight, vehicle simulator with multi screens cockpit)",243],["Multiple instances of slave UnityPlayers render in sync onto multiple displays (one instance to one display) to form a unified image.",243],["The slaves are synchronized (frame locked to) a single master UnityPlayer.",243],["The slaves are connected to the master via LAN network.",243],["Workstation",243],["This is the computer used by the developer to edit the scene. This could be a personal laptop that's not part of the rig. It runs the Unity Editor and controls the cluster (update game data, start, stop).",243],["Master",243],["This is the master node in the rig. It runs the Master UnityPlayer and it is connected to all the Slave UnityPlayers. It publishes its internal states to all the slaves and all the slaves are frame locked to this instance. It does not render to the display matrix; instead it renders to a control screen and it can potentially have extra information and features (observer mode etc). All input is received and processed by the master.",243],["Slave 1..N",243],["Each of the slave nodes runs the Slave UnityPlayer and renders to one of the displays in the matrix.",243],["Camera Rig Editor",243],["This is tool that is available in the Editor to setup and configure all the cameras used in the rig and it provides a preview of what all the cameras will see. The setup is saved and is reusable in other scenes.",243],["It allows the creation of various topologies:",243],["Spherical - to simulate Caves or Domes,",243],["Powerwall - 2D array of displays that combine seamlessly into a large image,",243],["Others.",243],["Deployment &amp; Control",243],["The Cluster Controller can be a tool within Unity Editor or standalone software. It issues commands such as: start, stop, restart, update the cluster. It controls the slaves (enable/disable, assign camera id) and specifies other parameters such as location of data.",243],["The Master Agent accepts commands from the Cluster Controller. It forward commands to all slaves and updates the slaves with the latest data.",243],["The Slave Agent waits for commands from the Master Agent and updates, starts and restarts the local UnityPlayer.",243],["Setting Up A Clustered Scene",244],["Using these tools are optional if you already have a scene that knows which camera configuration to use.",244],["Importing The Editor Tools",244],["Import the clustertools.package into your project. You should see something like this:",244],["Using The Tools To Setup The Cameras",244],["Power Wall",244],["Create a \"Camera Rig\" asset by clicking on Assets&gt;Create&gt;Camera Rig.",244],["Click on the new asset and observe its properties in the Inspector.",244],["Edit the properties as you see fit.",244],["Attach the \"ClusterRenderer.cs\" script to the MainCamera. From the inspector, assign the asset created at step 1 to the \"Rig\" property. For testing purposes ONLY, you may check Override Node Index and manually enter an index. You may render this camera to a RenderTexture to check its view.",244],["Edit the Player Settings from the Build Settings dialog. You can adjust the screen resolution and fullscreen/windowed as desired but you must check \"Run In Background\".",244],["Build the player.",244],["Cave",244],["Use the same steps as for the Power Wall but set the CameraRig's Type property to \"Cave\"",244],["Colliders",245],["Collider components define the shape of an object for the purposes of physical collisions. A collider, which is invisible, need not be the exact same shape as the object's mesh and in fact, a rough approximation is often more efficient and indistinguishable in gameplay. The simplest (and least processor-intensive) colliders and the so-called primitive collider types. In 3D, these are the Box Collider, Sphere Collider and Capsule Collider. In 2D, you can use the Box Collider 2D and Circle Collider 2D. Any number of these can be added to a single object to create compound colliders. With careful positioning and sizing, compound colliders can often approximate the shape of an object quite well while keeping a low processor overhead. Further flexibility can be gained by having additional colliders on child objects (eg, boxes can be rotated relative to the local axes of the parent object). However, you should be sure that there is only one Rigidbody and this should be placed on the root object in the hierarchy. Note, that primitive colliders will not work correctly with shear transforms - that means that if you use a combination of rotations and non-uniform scales in the tranform hierarchy so that the resulting shape would no longer match a primitive shape, the primitive collider will not be able to represent it correctly.",245],["There are some cases, however, where even compound colliders are not accurate enough. In 3D, you can use Mesh Colliders to match the shape of the object's mesh exactly. In 2D, the Polygon Collider 2D will generally not match the shape of the sprite graphic perfectly but you can refine the shape to any level of detail you like. These colliders are much more processor-intensive than primitive types, however, so use them sparingly to maintain good performance. Also, a mesh collider will normally be unable to collide with another mesh collider (ie, nothing will happen when they make contact). You can get around this in some cases by marking the mesh collider as Convex in the inspector. This will generate the collider shape as a \"convex hull\" which is like the original mesh but with any undercuts filled in. The benefit of this is that a convex mesh collider can collide with other mesh colliders so you may be able to use this feature when you have a moving character with a suitable shape. However, a good general rule is to use mesh colliders for scene geometry and approximate the shape of moving objects using compound primitive colliders.",245],["Colliders can be added to an object without a Rigidbody component to create floors, walls and other motionless elements of a scene. These are referred to as static colliders. In general, you should not reposition static colliders by changing the Transform position since this will impact heavily on the performance of the physics engine. Colliders on an object that does have a Rigidbody are known as dynamic colliders. Static colliders can interact with dynamic colliders but since they don't have a Rigidbody, they will not move in response to collisions.",245],["The reference pages for the various collider types linked above have further information about their properties and uses.",245],["Physics materials",245],["When colliders interact, their surfaces need to simulate the properties of the material they are supposed to represent. For example, a sheet of ice will be slippery while a rubber ball will offer a lot of friction and be very bouncy. Although the shape of colliders is not deformed during collisions, their friction and bounce can be configured using Physics Materials. Getting the parameters just right can involve a bit of trial and error but an ice material, for example will have zero (or very low) friction and a rubber material with have high friction and near-perfect bounciness. See the reference pages for Physic Material and Physics Material 2D for further details on the available parameters. Note that for historical reasons, the 3D asset is actually called Physic Material (without the S) but the 2D equivalent is called Physics Material 2D (with the S).",245],["Triggers",245],["The scripting system can detect when collisions occur and initiate actions using the OnCollisionEnter function. However, you can also use the physics engine simply to detect when one collider enters the space of another without creating a collision. A collider configured as a Trigger (using the Is Trigger property) does not behave as a solid object and will simply allow other colliders to pass through. When a collider enters its space, a trigger will call the OnTriggerEnter function on the trigger object's scripts.",245],["Script actions taken on collision",245],["When collisions occur, the physics engine calls functions with specific names on any scripts attached to the objects involved. You can place any code you like in these functions to respond to the collision event. For example, you might play a crash sound effect when a car bumps into an obstacle.",245],["On the first physics update where the collision is detected, the OnCollisionEnter function is called. During updates where contact is maintained, OnCollisionStay is called and finally, OnCollisionExit indicates that contact has been broken. Trigger colliders call the analogous OnTriggerEnter, OnTriggerStay and OnTriggerExit functions. Note that for 2D physics, there are equivalent functions with 2D appended to the name, eg, OnCollisionEnter2D. Full details of these functions and code samples can be found on the Script Reference page for the MonoBehaviour class.",245],["With normal, non-trigger collisions, there is an additional detail that at least one of the objects involved must have a non-kinematic Rigidbody (ie, Is Kinematic must be switched off). If both objects are kinematic Rigidbodies then OnCollisionEnter, etc, will not be called. With trigger collisions, this restriction doesn't apply and so both kinematic and non-kinematic Rigidbodies will prompt a call to OnTriggerEnter when they enter a trigger collider.",245],["Collider interactions",245],["Colliders interact with each other differently depending on how their Rigidbody components are configured. The three important configurations are the Static Collider (ie, no Rigidbody is attached at all), the Rigidbody Collider and the Kinematic Rigidbody Collider.",245],["Static Collider",245],["This is a GameObject that has a Collider but no Rigidbody. Static colliders are used for level geometry which always stays at the same place and never moves around. Incoming rigidbody objects will collide with the static collider but will not move it.",245],["The physics engine assumes that static colliders never move or change and can make useful optimizations based on this assumption. Consequently, static colliders should not be disabled/enabled, moved or scaled during gameplay. If you do change a static collider then this will result in extra internal recomputation by the physics engine which causes a major drop in performance. Worse still, the changes can sometimes leave the collider in an undefined state that produces erroneous physics calculations. For example a raycast against an altered Static Collider could fail to detect it, or detect it at a random position in space. Furthermore, Rigidbodies that are hit by a moving static collider will not necessarily be \"awoken\" and the static collider will not apply any friction. For these reasons, only colliders that are Rigidbodies should be altered. If you want a collider object that is not affected by incoming rigidbodies but can still be moved from a script then you should attach a Kinematic Rigidbody component to it rather than no Rigidbody at all.",245],["Rigidbody Collider",245],["This is a GameObject with a Collider and a normal, non-kinematic Rigidbody attached. Rigidbody colliders are fully simulated by the physics engine and can react to collisions and forces applied from a script. They can collide with other objects (including static colliders) and are the most commonly used Collider configuration in games that use physics.",245],["Kinematic Rigidbody Collider",245],["This is a GameObject with a Collider and a kinematic Rigidbody attached (ie, the IsKinematic property of the Rigidbody is enabled). You can move a kinematic rigidbody object from a script by modifying its Transform Component but it will not respond to collisions and forces like a non-kinematic rigidbody. Kinematic rigidbodies should be used for colliders that can be moved or disabled/enabled occasionally but that should otherwise behave like static colliders. An example of this is a sliding door that should normally act as an immovable physical obstacle but can be opened when necessary. Unlike a static collider, a moving kinematic rigidbody will apply friction to other objects and will \"wake up\" other rigidbodies when they make contact.",245],["Even when immobile, kinematic rigidbody colliders have different behavior to static colliders. For example, if the collider is set to as a trigger then you also need to add a rigidbody to it in order to receive trigger events in your script. If you don't want the trigger to fall under gravity or otherwise be affected by physics then you can set the IsKinematic property on its rigidbody.",245],["A Rigidbody component can be switched between normal and kinematic behavior at any time using the IsKinematic property. A common example of this is the \"ragdoll\" effect where a character normally moves under animation but is thrown physically by an explosion or a heavy collision. The character's limbs can each be given their own Rigidbody component with IsKinematic enabled by default. The limbs will move normallly by animation until IsKinematic is switched off for all of them and they immediately behave as physics objects. At this point, a collision or explosion force will send the character flying with its limbs thrown in a convincing way.",245],["Collision action matrix",245],["When two objects collide, a number of different script events can occur depending on the configurations of the colliding objects' rigidbodies. The charts below give details of which event functions are called based on the components that are attached to the objects. Some of the combinations only cause one of the two objects to be affected by the collision, but the general rule is that physics will not be applied to an object that doesn't have a Rigidbody component attached.",245],["Collision detection occurs and messages are sent upon collision       ",245],["Static Collider Rigidbody Collider Kinematic Rigidbody Collider Static Trigger Collider Rigidbody Trigger Collider Kinematic Rigidbody Trigger Collider ",245],["Static Collider &nbsp; Y &nbsp; &nbsp; &nbsp; &nbsp; ",245],["Rigidbody Collider Y Y Y &nbsp; &nbsp; &nbsp; ",245],["Kinematic Rigidbody Collider &nbsp; Y &nbsp; &nbsp; &nbsp; &nbsp; ",245],["Static Trigger Collider &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ",245],["Rigidbody Trigger Collider &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ",245],["Kinematic Rigidbody Trigger Collider &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ",245],["Trigger messages are sent upon collision       ",245],["Static Collider Rigidbody Collider Kinematic Rigidbody Collider Static Trigger Collider Rigidbody Trigger Collider Kinematic Rigidbody Trigger Collider ",245],["Static Collider &nbsp; &nbsp; &nbsp; &nbsp; Y Y ",245],["Rigidbody Collider &nbsp; &nbsp; &nbsp; Y Y Y ",245],["Kinematic Rigidbody Collider &nbsp; &nbsp; &nbsp; Y Y Y ",245],["Static Trigger Collider &nbsp; Y Y &nbsp; Y Y ",245],["Rigidbody Trigger Collider Y Y Y Y Y Y ",245],["Kinematic Rigidbody Trigger Collider Y Y Y Y Y Y ",245],["Command line arguments",246],["Typically, Unity will be launched by double-clicking its icon from the desktop but it is also possible to run it from the command line (ie, the MacOS Terminal or the Windows Command Prompt). When launched in this way, Unity can receive commands and information on startup, which can be very useful for test suites, automated builds and other production tasks.",246],["Under MacOS, you can launch Unity from the Terminal by typing:-",246],["/Applications/Unity/Unity.app/Contents/MacOS/Unity",246],["...while under Windows, you should type",246],["\"C:\\Program Files (x86)\\Unity\\Editor\\Unity.exe\"",246],["...at the command prompt.",246],["Standalone Unity games can be launched in a similar way.",246],["Options",246],["As mentioned above, the editor and also built games can optionally be supplied with additional commands and information on startup. This is done using the following command line options:-",246],["",246],["-assetServerUpdate &lt;IP[:port] projectName username password [r &lt;revision&gt;]&gt; Force an update of the project in the Asset Server given by IP:port. The port is optional and if not given it is assumed to be the standard one (10733). It is advisable to use this command in conjunction with the -projectPath argument to ensure you are working with the correct project. If no project name is given then the last project opened by Unity is used. If no project exists at the path given by -projectPath then one is created automatically. ",246],["-batchmode Run Unity in batch mode. This should always be used in conjunction with the other command line arguments as it ensures no pop up windows appear and eliminates the need for any human intervention. When an exception occurs during execution of script code, asset server updates fail or other operations fail Unity will immediately exit with return code 1. Note that in batch mode, Unity will send a minimal version of its log output to the console. However, the Log Files still contain the full log information. Note that opening a project in batch mode whilst the Editor has the same project open is not supported. Only a single instance of Unity can run at a time. ",246],["-buildLinux32Player &lt;pathname&gt; Build a 32-bit standalone Linux player (e.g. -buildLinux32Player path/to/your/build). ",246],["-buildLinux64Player &lt;pathname&gt; Build a 64-bit standalone Linux player (e.g. -buildLinux64Player path/to/your/build). ",246],["-buildLinuxUniversalPlayer &lt;pathname&gt; Build a combined 32-bit and 64-bit standalone Linux player (e.g. -buildLinuxUniversalPlayer path/to/your/build). ",246],["-buildOSXPlayer &lt;pathname&gt; Build a 32-bit standalone Mac OSX player (e.g. -buildOSXPlayer path/to/your/build.app). ",246],["-buildOSX64Player &lt;pathname&gt; Build a 64-bit standalone Mac OSX player (e.g. -buildOSX64Player path/to/your/build.app). ",246],["-buildOSXUniversalPlayer &lt;pathname&gt; Build a combined 32-bit and 64-bit standalone Mac OSX player (e.g. -buildOSXUniversalPlayer path/to/your/build.app). ",246],["-buildTarget &lt;name&gt; Allows the selection of an active build target before a project is loaded. Possible options are: win32, win64, osx, osxintel64, osxuniversal, linux, linux64, linuxuniversal, ios, android, web, webstreamed, webgl, xbox360, xboxone, ps3, ps4, psp2, wsa, wp8, bb10, tizen, samsungtv. ",246],["-buildWebPlayer &lt;pathname&gt; Build a WebPlayer (e.g. -buildWebPlayer path/to/your/build). ",246],["-buildWebPlayerStreamed &lt;pathname&gt; Build a streamed WebPlayer (e.g. -buildWebPlayerStreamed path/to/your/build). ",246],["-buildWindowsPlayer &lt;pathname&gt; Build a 32-bit standalone Windows player (e.g. -buildWindowsPlayer path/to/your/build.exe). ",246],["-buildWindows64Player &lt;pathname&gt; Build a 64-bit standalone Windows player (e.g. -buildWindows64Player path/to/your/build.exe). ",246],["-createProject &lt;pathname&gt; Create an empty project at the given path. ",246],["-executeMethod &lt;ClassName.MethodName&gt; Execute the static method as soon as Unity is started, the project is open and after the optional asset server update has been performed. This can be used to do continous integration, perform Unit Tests, make builds, prepare some data, etc. If you want to return an error from the commandline process you can either throw an exception which will cause Unity to exit with 1 or else call EditorApplication.Exit with a non-zero code. If you want to pass parameters you can add them to the command line and retrieve them inside the method using System.Environment.GetCommandLineArgs. To use -executeMethod, you need to place the enclosing script in an Editor folder. The method to be executed must be defined as static. ",246],["-exportPackage &lt;exportAssetPath1 exportAssetPath2 ExportAssetPath3 exportFileName&gt; Exports a package given a path (or set of given paths). exportAssetPath is a folder (relative to to the Unity project root) to export from the Unity project and exportFileName is the package name. Currently, this option can only export whole folders at a time. This command normally needs to be used with the -projectPath argument. ",246],["-force-d3d9 (Windows only) Make the editor use Direct3D 9 for rendering. This is the default, so normally there's no reason to pass it. ",246],["-force-d3d11 (Windows only) Make the editor use Direct3D 11 for rendering. ",246],["-force-opengl (Windows only) Make the editor use OpenGL for rendering, even if Direct3D is available. Normally Direct3D is used but OpenGL is used if Direct3D 9.0c is not available. ",246],["-force-free Make the editor run as if there is a free Unity license on the machine, even if a Unity Pro license is installed. ",246],["-importPackage &lt;pathname&gt; Import the given package. No import dialog is shown. ",246],["-logFile &lt;pathname&gt; Specify where the Editor or Windows/Linux/OSX standalone log file will be written. ",246],["-silent-crashes Don't display crash dialog. ",246],["-nographics (Windows only) When running in batch mode, do not initialize graphics device at all. This makes it possible to run your automated workflows on machines that don't even have a GPU (automated workflows only work, when you have a window in focus, otherwise you can't send simulated input commands). ",246],["-projectPath &lt;pathname&gt; Open the project at the given path. ",246],["-quit Quit the Unity editor after other commands have finished executing. Note that this can cause error messages to be hidden (but they will show up in the Editor.log file). ",246],["-returnlicense Return the currently active license to the license server. Please allow a few seconds before license file is removed, as Unity needs to communicate with the license server. This option is new in Unity 5.0. ",246],["-serial &lt;serial&gt; Activates Unity with the specified serial key. It is recommended to pass \"-batchmode -quit\" arguments as well, in order to quit Unity when done, if using this for automated activation of Unity. Please allow a few seconds before license file is created, as Unity needs to communicate with the license server. Make sure that License file folder exists, and has appropriate permissions before running Unity with this argument. In case activation fails, see the Editor.log for info. This option is new in Unity 5.0. ",246],["Example usage",246],["// C# example",246],["using UnityEditor;",246],["class MyEditorScript",246],["static void PerformBuild ()",246],["string[] scenes = { \"Assets/MyScene.unity\" };",246],["BuildPipeline.BuildPlayer(scenes, ...);",246],["// JavaScript example",246],["static void PerformBuild ()",246],["string[] scenes = { \"Assets/MyScene.unity\" };",246],["BuildPipeline.BuildPlayer(scenes, ...);",246],["The following command executes Unity in batch mode, executes the MyEditorScript.MyMethod method and then quits upon completion.",246],["Windows:",246],["C:\\program files\\Unity\\Editor\\Unity.exe -quit -batchmode -executeMethod MyEditorScript.MyMethod",246],["Mac OS:",246],["/Applications/Unity/Unity.app/Contents/MacOS/Unity -quit -batchmode -executeMethod MyEditorScript.MyMethod",246],["The next command executes Unity in batch mode and updates from the asset server using the supplied project path. The method is executed after all assets have been downloaded and imported from the asset server. After the method has finished execution, Unity automatically quits.",246],["/Applications/Unity/Unity.app/Contents/MacOS/Unity -batchmode -projectPath ~/UnityProjects/AutobuildProject -assetServerUpdate 192.168.1.1 MyGame AutobuildUser l33tpa33 -executeMethod MyEditorScript.PerformBuild -quit",246],["Unity Editor special command line arguments",246],["These should only be used under special circumstances, or when directed by Support.",246],["",246],["-enableIncompatibleAssetDowngrade Use when you have content made by a newer, incompatible version of Unity, that you want to downgrade to work with your current version of Unity. When enabled, Unity will present you with a dialog asking for confirmation of such a downgrade if you attempt to open a project that would require it. This procedure is unsupported and highly risky, and should only be used as a last resort. ",246],["Unity Standalone Player command line arguments",246],["Standalone players built with Unity also understand some command line arguments:",246],["",246],["-adapter N (Windows only) Allows the game to run full-screen on another display. The N maps to a Direct3D display adaptor. In most cases there is a one-to-one relationship between adapters and video cards. On cards that support multi-head (they can drive multiple monitors from a single card) each \"head\" may be its own adapter.  ",246],["-batchmode Run the game in \"headless\" mode. The game will not display anything or accept user input. This is mostly useful for running servers for networked games. ",246],["-force-d3d9 (Windows only)  Make the game use Direct3D 9 for rendering. This is the default, so normally there's no reason to pass it. ",246],["-force-d3d9-ref (Windows only) Make the game run using Direct3D's \"Reference\" software renderer. The DirectX SDK has to be installed for this to work. This is mostly useful for building automated test suites, where you want to ensure rendering is exactly the same no matter what graphics card is being used. ",246],["-force-d3d11 (Windows only)  Make the game use Direct3D 11 for rendering.  ",246],["-force-opengl (Windows only)  Make the game use OpenGL for rendering, even if Direct3D is available. Normally Direct3D is used but OpenGL is used if Direct3D 9.0c is not available. ",246],["-nographics (Linux &amp; Windows only) When running in batch mode, do not initialize graphics device at all. This makes it possible to run your automated workflows on machines that don't even have a GPU. ",246],["-nolog (Linux &amp; Windows only) Do not produce output log. Normally output_log.txt is written in the *_Data folder next to the game executable, where Debug.Log output is printed. ",246],["-popupwindow The window will be created as a a pop-up window (without a frame). ",246],["-screen-fullscreen Overrides the default fullscreen state. This must be 0 or 1. ",246],["-screen-height  Overrides the default screen height. This must be an integer from a supported resolution. ",246],["-screen-width Overrides the default screen width. This must be an integer from a supported resolution. ",246],["-screen-quality  Overrides the default screen quality. Example usage would be: /path/to/myGame -screen-quality Beautiful ",246],["-show-screen-selector  Forces the screen selector dialog to be shown. ",246],["-single-instance (Linux &amp; Windows only) Allow only one instance of the game to run at the time. If another instance is already running then launching it again with -single-instance will just focus the existing one. ",246],["-parentHWND &lt;HWND&gt; (Windows only) Embeds Windows Standalone application into another application, you have to pass parent application's window handle to Windows Standalone application. See this example EmbeddedWindow.zip for more information.  ",246],["Windows Store Command line arguments",246],["Windows Store Apps don't accept command line arguments by default, so to pass them you have to call a special function from App.xaml.cs/cpp or App.cs/cpp. For example,",246],["appCallbacks.AddCommandLineArg(\"-nolog\");",246],["You should call this before the appCallbacks.Initialize*() function.",246],["",246],["-nolog  Don't produce UnityPlayer.log. ",246],["-force-driver-type-warp  Force DirectX 11.0 WARP device (More info http://msdn.microsoft.com/en-us/library/gg615082.aspx) ",246],["-force-gfx-direct  Force single threaded rendering. ",246],["-force-d3d11-no-singlethreaded  Force DirectX 11.0 to be created without D3D11_CREATE_DEVICE_SINGLETHREADED flag. ",246],["-force-feature-level-9-1  Force DirectX 11.0 feature level 9.1. ",246],["-force-feature-level-9-2  Force DirectX 11.0 feature level 9.2. ",246],["-force-feature-level-9-3  Force DirectX 11.0 feature level 9.3. ",246],["-force-feature-level-10-0  Force DirectX 11.0 feature level 10.0. ",246],["-force-feature-level-10-1  Force DirectX 11.0 feature level 10.1. ",246],["-force-feature-level-11-0  Force DirectX 11.0 feature level 11.0. ",246],["Animation Reference",247],["For a detailed explanation of the Mecanim Animation System, please see the Mecanim introduction.",247],["Asset Components",248],["Assets are the models, textures, sounds and all other \"content\" files from which you make your game.",248],["This section describes Components for all asset types. For a general overview of assets, see Assets overview page.",248],["Audio Components",249],["These components implement sound playback and recording in Unity.",249],["Canvas Components",250],["All UI Components are placed within a Canvas.",250],["Visual Effects Reference",251],["The effects group contains components that relate to visual effects.",251],["Image Effect Reference",252],["This group handles all Render Texture-based fullscreen image postprocessing effects. They add a lot to the look and feel of your game without spending much time on artwork.",252],["All image effects make use of Unity's OnRenderImage function which any MonoBehavior attached to a camera can overwrite to accomplish a wide range of custom effects.",252],["Image effects can be executed directly after the opaque pass or after opaque and transparent passes (default). The former behavior can very easily be acquired by adding the attribute ImageEffectOpaque to the OnRenderImage function of the effect in question. For an example of an effect doing this, have a look at the Edge Detection effect.",252],["The scene used in above pages looks like this without any image effects applied:",252],["Multiple image effects can be \"stacked\" on the same camera. Just add them and it will work.",252],["This section describes the available image effects in greater detail.",252],["Settings Managers",253],["Unity's Settings Managers are available from the menu Edit > Project Settings. The settings affect overall aspects of Unity's functionality, such as Graphics, Physics and the details of the published player. The various managers are described in detail in this section.",253],["Mesh Components",254],["3D Meshes are the main graphics primitive of Unity. Various components exist in Unity to render regular or skinned meshes, trails or 3D lines.",254],["Network Group",255],["This group contains all the Components that relate to Networked Multiplayer games.",255],["Particle Systems (Legacy, prior to release 3.5)",256],["Particles are essentially 2D images rendered in 3D space. They are primarily used for effects such as smoke, fire, water droplets, or leaves. A Particle System is made up of three separate Components: Particle Emitter, Particle Animator, and a Particle Renderer. You can use a Particle Emitter and Renderer together if you want static particles. The Particle Animator will move particles in different directions and change colors. You also have access to each individual particle in a particle system via scripting, so you can create your own unique behaviors that way if you choose.",256],["This section describes the various components available in the legacy particle system.",256],["Rendering Components",257],["This group contains all Components that have to do with rendering in-game and user interface elements. Lighting and special effects are also included in this group.",257],["Texture Components",258],["This group contains all Components that have to do with Textures.",258],["Auto Layout",259],["The auto layout system provides ways to place elements in nested layout groups such as horizontal groups, vertical groups, or grids. It also allows elements to automatically be sized according to the contained content.",259],["UI Effect Components",260],["The effects components allow adding simple effects to Text and Image graphics, such as shadow and outline.",260],["Interaction Components",261],["The interaction components in the UI system handle interaction, such as mouse or touch events and interaction using a keyboard or controller.",261],["Visual Components",262],["The visual components allow for ease of creation and GUI specific functionality.",262],["UnityGUI Group (Legacy)",263],["UnityGUI is the GUI creation system built into Unity. It consists of creating different Controls, and defining the content and appearance of those controls.",263],["The Components of UnityGUI allow you to define the appearance of Controls.",263],["For information about using UnityGUI to create Controls and define their content, please read the GUI Scripting Guide.",263],["Compute Shaders",264],["Compute Shaders are programs that run on the graphics card, outside of the normal rendering pipeline. They can be used for massively parallel GPGPU algorithms, or to accelerate parts of game rendering. In order to efficiently use them, often an in-depth knowledge of GPU architectures and parallel algorithms is needed; as well as knowledge of DirectCompute, OpenCL or CUDA.",264],["Compute shaders in Unity are built on top of DirectX 11 DirectCompute technology; and currently require Windows Vista or later and a GPU capable of Shader Model 5.0.",264],["Compute shader assets",264],["Similar to normal shaders, Compute Shaders are asset files in your project, with *.compute file extension. They are written in DirectX 11 style HLSL language, with minimal amount of #pragma compilation directives to indicate which functions to compile as compute shader kernels.",264],["Here's a minimal example of a compute shader file:",264],["// test.compute",264],["pragma kernel FillWithRed",264],["RWTexture2D res;",264],["[numthreads(1,1,1)]",264],["void FillWithRed (uint3 dtid : SV_DispatchThreadID)",264],["res[dtid.xy] = float4(1,0,0,1);",264],["Note that the example above does not do anything remotely interesting, it just fills the output texture with red.",264],["The language is standard DX11 HLSL, with the only exception of a #pragma kernel FillWithRed directive. One compute shader asset file must contain at least one \"compute kernel\" that can be invoked, and that function is indicated by the #pragma directive. There can be more kernels in the file; just add multiple #pragma kernel lines.",264],["The #pragma kernel line can optionally be followed by a number of preprocessor macros to define while compiling that kernel, for example:",264],["pragma kernel KernelOne SOME_DEFINE DEFINE_WITH_VALUE=1337",264],["pragma kernel KernelTwo OTHER_DEFINE",264],["// ...",264],["Invoking compute shaders",264],["In your script, define a variable of ComputeShader type, assign a reference to the asset, and then you can invoke them with ComputeShader.Dispatch function. See scripting reference of ComputeShader class for more details.",264],["Closely related to compute shaders is a ComputeBuffer class, which defines arbitrary data buffer (\"structured buffer\" in DX11 lingo). Render Textures can also be written into from compute shaders, if they have \"random access\" flag set (\"unordered access view\" in DX11), see RenderTexture.enableRandomWrite.",264],["Texture samplers in compute shaders",264],["Textures and samplers aren't separate objects in Unity, so in order to use them in compute shader you have to follow some Unity specific rules:",264],["Either use same as texture name, with \"sampler\" in front (e.g. Texture2D MyTex; SamplerState samplerMyTex). In this case, sampler will be initialized to that texture's filter/wrap/aniso settings.",264],["Or use one of \"predefined\" samplers; name has to have \"Linear\" or \"Point\" (for filter mode) and \"Clamp\" or \"Repeat\" (for wrap mode). For example, \"SamplerState MyLinearClampSampler\" - this will have linear filter and clamp wrap mode.",264],["Computing a Normal/Perpendicular vector",265],["A normal vector (ie, a vector perpendicular to a plane) is required frequently during mesh generation and may also be useful in path following and other situations. Given three points in the plane, say the corner points of a mesh triangle, it is easy to find the normal. Pick any of the three points and then subtract it from each of the two other points separately to give two vectors:-",265],["var a: Vector3;",265],["var b: Vector3;",265],["var c: Vector3;",265],["var side1: Vector3 = b - a;",265],["var side2: Vector3 = c - a;",265],["The cross product of these two vectors will give a third vector which is perpendicular to the surface. The \"left hand rule\" can be used to decide the order in which the two vectors should be passed to the cross product function. As you look down at the top side of the surface (from which the normal will point outwards) the first vector should sweep around clockwise to the second:-",265],["var perp: Vector3 = Vector3.Cross(side1, side2);",265],["The result will point in exactly the opposite direction if the order of the input vectors is reversed.",265],["For meshes, the normal vector must also be normalized. This can be done with the normalized property, but there is another trick which is occasionally useful. You can also normalize the perpendicular vector by dividing it by its magnitude:-",265],["var perpLength = perp.magnitude;",265],["perp /= perpLength;",265],["It turns out that the area of the triangle is equal to perpLength / 2. This is useful if you need to find the surface area of the whole mesh or want to choose triangles randomly with probability based on their relative areas.",265],["Configuring the Avatar",266],["Since the Avatar is such an important aspect of the Mecanim system, it is important that it is configured properly for your model. So, whether the automatic Avatar creation fails or succeeds, you need to go into the Configure Avatar mode to ensure your Avatar is valid and properly set up. It is important that your character's bone structure matches Mecanim's predefined bone structure and that the model is in T-pose.",266],["If the automatic Avatar creation fails, you will see a cross next to the Configure button.",266],["If it succeeds, you will see a check/tick mark:",266],["Here, success simply means all of the required bones have been matched but for better results, you might want to match the optional bones as well and get the model into a proper T-pose.",266],["When you go to the Configure ... menu, the editor will ask you to save your scene. The reason for this is that in Configure mode, the Scene View is used to display bone, muscle and animation information for the selected model alone, without displaying the rest of the scene.",266],["Once you have saved the scene, you will see a new Avatar Configuration inspector, with a bone mapping.",266],["The inspector shows which of the bones are required and which are optional - the optional ones can have their movements interpolated automatically. For Mecanim to produce a valid match, your skeleton needs to have at least the required bones in place. In order to improve your chances for finding a match to the Avatar, name your bones in a way that reflects the body parts they represent (names like \"LeftArm\", \"RightForearm\" are suitable here).",266],["If the model does NOT yield a valid match, you can manually follow a similar process to the one used internally by Mecanim:-",266],["Sample Bind-pose (try to get the model closer to the pose with which it was modelled, a sensible initial pose)",266],["Automap (create a bone-mapping from an initial pose)",266],["Enforce T-pose (force the model closer to T-pose, which is the default pose used by Mecanim animations)",266],["If the auto-mapping (Mapping-&gt;Automap) fails completely or partially, you can assign bones by either draging them from the Scene or from the Hierarchy. If Mecanim thinks a bone fits, it will show up as green in the Avatar Inspector, otherwise it shows up in red.",266],["Finally, if the bone assignment is correct, but the character is not in the correct pose, you will see the message \"Character not in T-Pose\". You can try to fix that with Enforce T-Pose or rotate the remaining bones into T-pose.",266],["Avatar Body Masks",266],["Sometimes it is useful to restrict an animation to specific body parts. For example, an walking animation might involve the character swaying his arms but if he picks up a gun, he should hold it in front of him. You can use an Avatar Body Mask to specify which parts of a character an animation should be restricted to - see this page page for further details.",266],["Console",267],["The Console window (menu: Window &gt; Console) shows errors, warnings and other messages generated by Unity. To aid with debugging, you can also show your own messages in the Console using the Debug.Log, Debug.LogWarning and Debug.LogError functions.",267],["The toolbar of the console window has a number of options that affect how messages are displayed.",267],["The Clear button removes any messages generated from your code but retains compiler errors. You can arrange for the console to be cleared automatically whenever you run the game by enabling the Clear On Play option.",267],["You can also change the way messages are shown and updated in the console. The Collapse option shows only the first instance of an error message that keeps recurring. This is very useful for runtime errors, such as null references, that are sometimes generated identically on each frame update. The Error Pause option will cause playback to be paused whenever Debug.LogError is called from a script (but note that Debug.Log will not pause in this way). This can be handy when you want to freeze playback at a specific point in execution and inspect the scene.",267],["Finally, there are two options for viewing additional information about errors. The Open Player Log and Open Editor Log items on the console tab menu access Unity's log files which record details that may not be shown in the console. See the page about Log Files for further information.",267],["Obsolete API Warnings and Automatic Updates",267],["Among other messages, Unity shows warnings about the usage of obsolete API calls in your code. For example, Unity once had \"shortcuts\" in MonoBehaviour and other classes to access common component types. So, for example, you could access a Rigidbody on the object using code like:",267],["// The \"rigidbody\" variable is part of the class and not declared in the user script.",267],["Vector3 v = rigidbody.velocity;",267],["These shortcuts have been deprecated, so you should now use code like:",267],["// Use GetComponent to access the component.",267],["Rigidbody rb = GetComponent();",267],["Vector3 v = rb.velocity;",267],["When obsolete API calls are detected, Unity will show a warning message about them. When you double-click this message, Unity will attempt to upgrade the deprecated usage to the recommended equivalent automatically.",267],["Step 4: Apply Modifications to Your Fork",268],["Now you should have a local clone.  You'll need to first access the correct version of the source code, then make your modifications (this will usually mean navigating to the correct branch in SourceTree).  In our example, the Unity Test Tools repo is new and has only one commit on the stable branch... but here we demonstrate updating explicitly to that version anyway:",268],["Once you have the correct version of the source code checked out, you can make your modifications as you see fit.  When you go back to SourceTree, it will detect that you have modified files:",268],["You can see them in the Working Copy view, where you can commit these changes:",268],["Then push them.  SourceTree will show you how many changesets you have pending:",268],["And then allow you to push them:",268],["Step 1: Get a Bitbucket Account",269],["Our open-source components are hosted on Bitbucket under the Unity-Technologies team.  You don't need to be logged in to access the repositories and clone the source code, but you will need an account in order to be able to contribute your changes.",269],["To get started, visit Bitbucket's account sign-up page.",269],["If you don't want to make a new account, Bitbucket supports OpenID which will let you log in with your Google, Facebook, Twitter, or even your GitHub account!",269],["Step 3: Clone Your Fork",270],["Next, you should clone your fork locally so you can make your modifications.  If the repository is a Mercurial repository, you'll need to get a Mercurial Client.  If it's a Git repository, you'll need to get a Git client.  Atlassian (the company that owns Bitbucket) maintains an application called SourceTree that runs on both Windows and OS X and works with both Mercurial and Git Repositories.  We use SourceTree heavily within Unity Technologies to interact with our own Mercurial repositories.  You can also use a different client if you wish – explore the download page for Mercurial and Git to see some options.",270],["Once you have your Mercurial or Git client ready, you can clone it via the URL on your fork's page:",270],["This an example of cloning our fork in SourceTree:",270],["FAQ",271],["Here we've compiled some frequently asked questions.",271],["Q: Why BitBucket instead of GitHub or self-hosted?",271],["A: At Unity, we are fans of both BitBucket and GitHub.  We also self-host and use a 3rd-party hosting solution called Kallithea internally.  Ultimately, we chose BitBucket for our open-source components because:",271],["It allows us to let someone else worry about hosting (which lets us focus on what we're good at)",271],["It supports both Mercurial and Git instead of only Git (we are heavy users of Mercurial internally, but also have some Git-based forks of open-source tools we use, so being able to store everything in one place made sense)",271],["Q: What license are Unity's Open-Source components released under?",271],["A: Unity's open-source components are generally released under an MIT/X11 license.  Some projects, like Unity Test Tools, use 3rd-party components that are released under a different license.  You can see the license information for each project by looking at the LICENSE file in the top-level of the source directory.  Information about 3rd-party tools (if any) that are used in the project are described in an acknowlegements.markdown file.",271],["Q: Will Unity accept patches?  What about licensing?",271],["A: We certainly will accept your patches!  The type of patches we will accept depend on the project because different components are in different stages of development by the Unity devleopers.  Bugfixes are great candidates for patches.  As for new features or large refactorings, it will depend largely on the system in question.  Check the documentation for the component you would like to modify for more information.",271],["As mentioned previously, most of our components are licensed under an MIT/X11 license.  You should be aware that we will only accept contributions that are also licensed under an MIT/X11 license.  We will also assume the MIT/X11 license applies to the changes in your pull request unless otherwise stated.",271],["Q: What coding standards does Unity use?  How do I make sure my PR isn't rejected due to bad formatting changes?",271],["A: We're working on getting documentation together for this ASAP.  Watch this space!  For now, just make sure to follow the formatting and conventions that already exist in the code you are modifying.",271],["Step 6: Wait for Feedback",272],["You now need to wait for feedback from the Unity developers who are monitoring the repository you are contributing changes to (they will have been notified automatically of your pull request).  They may have questions, concerns, or other feedback, but will communicate through your pull request – so make sure you're set up to receive notifications from Bitbucket!  When the change is accepted, the Unity developer will take care of merging your changes into the official repository maintained by Unity Technologies.",272],["Step 2: Fork the Repository You Want to Contribute To",273],["In this demonstration, we are going to use the Unity Test Tools Repo: https://Bitbucket.org/Unity-Technologies/unitytesttools",273],["The page for the repository has a sidebar on the left-hand side with an 'Actions' section.",273],["Click the 'Fork' button, fill out the form and you will be redirected to:",273],["When you have finished forking the repo, you'll be taken to the landing page for your new fork:",273],["Step 5: Open a Pull Request on Bitbucket",274],["The final step is to open a pull request on Bitbucket.  Go back to the landing page for our fork and look at the sidebar again. You will see some new options:",274],["This time, click the 'Create Pull Request' link.  You'll be taken to a page that automatically summarises the outgoing changesets and shows you a diff of them.  You can also add a description (a good idea!) and reviewers:",274],["Finally, you'll be redirected to your pull request.  You can share this link with anyone you want, including others on your own team so they can contribute:",274],["Further Reading",275],["Bitbucket, Mercurial, and Git may all be new things to you.  The following external references may be helpful to you:",275],["Bitbucket 101 - Getting Started with Bitbucket",275],["SourceTree FAQ - Frequently Asked Questions related to SourceTree itself",275],["Getting Started with Git and Mercurial - DVCS overview from Atlassian",275],["Hg Init - A tour of some Mercurial basics",275],["Git Getting Started - Getting started with Git",275],["How to contribute to Unity",276],["A guide for Open Source Contributers",276],["With our decision to start open-sourcing components of Unity, it is important to us to engage our customers and users.  This means we want to provide you with all of the securities and flexibilities that having source provides.  We'll also welcome collaborative participation and community development.  It is our expectation with this initiative that our community will be able to extend Unity in ways that were previously not possible.",276],["Open-source is certainly not a new concept, but we recognize that many Unity users may not have participated in an open-source project before.  Therefore, we've put together this guide to help you get started.",276],["We use distributed version control to version our open-source components on BitBucket.  This means you make changes and contribute them back through a process of forking our repository, cloning your fork, pushing your changes to your fork, and opening a pull request for us to review.  This might all be new to you, so we've tried to help you by going through an example in this guide.  We also encourage you to read the various links in the Further Reading section.  Questions about licensing, etc, are addressed in the FAQ section.",276],["Controlling GameObjects Using Components",277],["In the Unity editor, you make changes to Component properties using the Inspector. So, for example, changes to the position values of the Transform Component will result in a change to the GameObject's position. Similarly, you can change the color of a Renderer's material or the mass of a Rigidbody with a corresponding effect on the appearance or behavior of the GameObject. For the most part, scripting is also about modifying Component properties to manipulate GameObjects. The difference, though, is that a script can vary a property's value gradually over time or in response to input from the user. By changing, creating and destroying objects at the right time, any kind of gameplay can be implemented.",277],["Accessing Components",277],["The simplest and most common case is where a script needs access to other Components attached to the same GameObject. As mentioned in the Introduction section, a Component is actually an instance of a class so the first step is to get a reference to the Component instance you want to work with. This is done with the GetComponent function. Typically, you want to assign the Component object to a variable, which is done in C# using the following syntax:",277],["void Start () {",277],["Rigidbody rb = GetComponent();",277],["In UnityScript, the syntax is subtly different:",277],["function Start () {",277],["var rb = GetComponent.();",277],["Once you have a reference to a Component instance, you can set the values of its properties much as you would in the Inspector:",277],["void Start () {",277],["Rigidbody rb = GetComponent();",277],["// Change the mass of the object's Rigidbody.",277],["rb.mass = 10f;",277],["An extra feature that is not available in the Inspector is the possibility of calling functions on Component instances:",277],["void Start () {",277],["Rigidbody rb = GetComponent();",277],["// Add a force to the Rigidbody.",277],["rb.AddForce(Vector3.up * 10f);",277],["Note also that there is no reason why you can't have more than one custom script attached to the same object. If you need to access one script from another, you can use GetComponent as usual and just use the name of the script class (or the filename) to specify the Component type you want.",277],["If you attempt to retrieve a Component that hasn't actually been added to the GameObject then GetComponent will return null; you will get a null reference error at runtime if you try to change any values on a null object.",277],["Accessing Other Objects",277],["Although they sometimes operate in isolation, it is common for scripts to keep track of other objects. For example, a pursuing enemy might need to know the position of the player. Unity provides a number of different ways to retrieve other objects, each appropriate to certain situations.",277],["Linking Objects with Variables",277],["The most straightforward way to find a related GameObject is to add a public GameObject variable to the script:",277],["public class Enemy : MonoBehaviour {",277],["public GameObject player;",277],["// Other variables and functions...",277],["This variable will be visible in the Inspector like any other:",277],["You can now drag an object from the scene or Hierarchy panel onto this variable to assign it. The GetComponent function and Component access variables are available for this object as with any other, so you can use code like the following:",277],["public class Enemy : MonoBehaviour {",277],["public GameObject player;",277],["void Start() {",277],["// Start the enemy ten units behind the player character.",277],["transform.position = player.transform.position - Vector3.forward * 10f;",277],["Additionally, if declare a public variable of a Component type in your script, you can drag any GameObject that has that Component attached onto it. This will access the Component directly rather than the GameObject itself.",277],["public Transform playerTransform;",277],["Linking objects together with variables is most useful when you are dealing with individual objects that have permanent connections. You can use an array variable to link several objects of the same type, but the connections must still be made in the Unity editor rather than at runtime. It is often convenient to locate objects at runtime and Unity provides two basic ways to do this, as described below.",277],["Finding Child Objects",277],["Sometimes, a game scene will make use of a number of objects of the same type, such as enemies, waypoints and obstacles. These may need to be tracked by a particular script that supervises or reacts to them (eg, all waypoints may need to be available to a pathfinding script). Using variables to link these objects is a possibility but it will make the design process tedious if each new waypoint has to be dragged to a variable on a script. Likewise, if a waypoint is deleted then it is a nuisance to have to remove the variable reference to the missing object. In cases like this, it is often better to manage a set of objects by making them all children of one parent object. The child objects can be retreived using the parent's Transform Component (since all GameObjects implicitly have a Transform):",277],["using UnityEngine;",277],["public class WaypointManager : MonoBehaviour {",277],["public Transform[] waypoints;",277],["void Start() {",277],["waypoints = new Transform[transform.childCount];",277],["int i = 0;",277],["foreach (Transform t in transform) {",277],["waypoints[i++] = t;",277],["You can also locate a specific child object by name using the Transform.Find function:",277],["transform.Find(\"Gun\");",277],["This can be useful when an object has a child that can be added and removed during gameplay. A weapon that can be picked up and put down is a good example of this.",277],["Finding Objects by Name or Tag",277],["It is always possible to locate GameObjects anywhere in the scene hierarchy as long as you have some information to identify them. Individual objects can be retrieved by name using the GameObject.Find function:",277],["GameObject player;",277],["void Start() {",277],["player = GameObject.Find(\"MainHeroCharacter\");",277],["An object or a collection of objects can also be located by their tag using the GameObject.FindWithTag and GameObject.FindGameObjectsWithTag functions:-",277],["GameObject player;",277],["GameObject[] enemies;",277],["void Start() {",277],["player = GameObject.FindWithTag(\"Player\");",277],["enemies = GameObject.FindGameObjectsWithTag(\"Enemy\");",277],["Conventional Game Input",278],["Unity supports keyboard, joystick and gamepad input.",278],["Virtual axes and buttons can be created in the Input Manager, and end users can configure Keyboard input in a nice screen configuration dialog.",278],["You can setup joysticks, gamepads, keyboard, and mouse, then access them all through one simple scripting interface.",278],["From scripts, all virtual axes are accessed by their name.",278],["Every project has the following default input axes when it's created:",278],["Horizontal and Vertical are mapped to w, a, s, d and the arrow keys.",278],["Fire1, Fire2, Fire3 are mapped to Control, Option (Alt), and Command, respectively.",278],["Mouse X and Mouse Y are mapped to the delta of mouse movement.",278],["Window Shake X and Window Shake Y is mapped to the movement of the window.",278],["Adding new Input Axes",278],["If you want to add new virtual axes go to the Edit-&gt;Project Settings-&gt;Input menu. Here you can also change the settings of each axis.",278],["You map each axis to two buttons on a joystick, mouse, or keyboard keys.",278],["Property: Function: ",278],["Name The name of the string used to check this axis from a script. ",278],["Descriptive Name Positive value name displayed in the input tab of the Configuration dialog for standalone builds. ",278],["Descriptive Negative Name Negative value name displayed in the Input tab of the Configuration dialog for standalone builds. ",278],["Negative Button The button used to push the axis in the negative direction. ",278],["Positive Button The button used to push the axis in the positive direction. ",278],["Alt Negative Button Alternative button used to push the axis in the negative direction. ",278],["Alt Positive Button Alternative button used to push the axis in the positive direction. ",278],["Gravity Speed in units per second that the axis falls toward neutral when no buttons are pressed. ",278],["Dead Size of the analog dead zone. All analog device values within this range result map to neutral. ",278],["Sensitivity Speed in units per second that the the axis will move toward the target value. This is for digital devices only. ",278],["Snap If enabled, the axis value will reset to zero when pressing a button of the opposite direction. ",278],["Invert If enabled, the Negative Buttons provide a positive value, and vice-versa. ",278],["Type The type of inputs that will control this axis. ",278],["Axis The axis of a connected device that will control this axis. ",278],["Joy Num The connected Joystick that will control this axis. ",278],["Use these settings to fine tune the look and feel of input. They are all documented with tooltips in the Editor as well.",278],["Using Input Axes from Scripts",278],["You can query the current state from a script like this:",278],["value = Input.GetAxis (\"Horizontal\");",278],["An axis has a value between -1 and 1. The neutral position is 0.",278],["This is the case for joystick input and keyboard input.",278],["However, Mouse Delta and Window Shake Delta are how much the mouse or window moved during the last frame. This means it can be larger than 1 or smaller than -1 when the user moves the mouse quickly.",278],["It is possible to create multiple axes with the same name. When getting the input axis, the axis with the largest absolute value will be returned. This makes it possible to assign more than one input device to one axis name. For example, create one axis for keyboard input and one axis for joystick input with the same name. If the user is using the joystick, input will come from the joystick, otherwise input will come from the keyboard. This way you don't have to consider where the input comes from when writing scripts.",278],["Button Names",278],["To map a key to an axis, you have to enter the key's name in the Positive Button or Negative Button property in the Inspector.",278],["The names of keys follow this convention:",278],["Normal keys: \"a\", \"b\", \"c\" ...",278],["Number keys: \"1\", \"2\", \"3\", ...",278],["Arrow keys: \"up\", \"down\", \"left\", \"right\"",278],["Keypad keys: \"[1]\", \"[2]\", \"[3]\", \"[+]\", \"[equals]\"",278],["Modifier keys: \"right shift\", \"left shift\", \"right ctrl\", \"left ctrl\", \"right alt\", \"left alt\", \"right cmd\", \"left cmd\"",278],["Mouse Buttons: \"mouse 0\", \"mouse 1\", \"mouse 2\", ...",278],["Joystick Buttons (from any joystick): \"joystick button 0\", \"joystick button 1\", \"joystick button 2\", ...",278],["Joystick Buttons (from a specific joystick): \"joystick 1 button 0\", \"joystick 1 button 1\", \"joystick 2 button 0\", ...",278],["Special keys: \"backspace\", \"tab\", \"return\", \"escape\", \"space\", \"delete\", \"enter\", \"insert\", \"home\", \"end\", \"page up\", \"page down\"",278],["Function keys: \"f1\", \"f2\", \"f3\", ...",278],["The names used to identify the keys are the same in the scripting interface and the Inspector.",278],["value = Input.GetKey (\"a\");",278],["Cookies",279],["In theatre and film, lighting effects have long been used to create an impression of objects that don't really exist in the set. Jungle explorers may appear to be covered in shadows from an imaginary tree canopy. A prison scene often shows the light coming through the barred window, even though the window and indeed the wall are not really part of the set. Though very atmospheric, the shadows are created very simply by placing a shaped mask in between the light source and the action. The mask is known as a cucoloris or cookie for short. Unity lights allow you to add cookies in the form of textures; these provide an efficient way to add atmosphere to a scene.",279],["Creating a Cookie",279],["A cookie is just an ordinary texture but only the alpha/transparency channel is relevant. When you import a cookie, Unity gives you the option to convert the brightness of the image to alpha so it is often easier to design your cookie as a grayscale texture. You can use any available image editor to create a cookie and save it to your project's Assets folder.",279],["When the cookie is imported into Unity, select it from the Project view and set the Texture Type to Cookie in the inspector. You should also enable Alpha From Grayscale unless you have already designed the image's alpha channel yourself.",279],["The Light Type affects the way the cookie is projected by the light. Since a point light projects in all directions, the cookie texture must be in the form of a Cubemap. A spot light should use a cookie with the type set to Spotlight but a directional light can actually use either the Spotlight or Directional options. A directional light with a directional cookie will repeat the cookie in a tiled pattern all over the scene. When a spotlight cookie is used, the cookie will appear just once in the direct path of the \"beam\" of the light; this is the only case where the position of a directional light is important.",279],["Applying a Cookie to a light",279],["When the texture is imported, drag it to the Light's Cookie property in the inspector to apply it.",279],["The spot light and point light simply scale the cookie according to the size of the cone or sphere. The directional light has an additional option Cookie Size that lets you scale the cookie yourself; the scaling works with both Spotlight and Directional cookie types.",279],["Uses of Cookies",279],["Cookies are often used to change the shape of a light so it matches a detail \"painted\" in the scene. For example, a dark tunnel may have striplights along the ceiling. If you use standard spot lights for illumination then the beams will have an unexpected round shape but you could use cookies to restrict the lights to a thin rectangle. A monitor screen may cast a green glow onto the face of the character using it but the glow should be restricted to a small box shape.",279],["Note that a cookie need not be completely black and white but can also incorporate any grayscale level. This can be useful for simulating dust or dirt in the path of the light. For example, if a game scene takes place in a long abandoned house, you could add atmosphere by using \"dirty\" cookies with noise on the windows and other light sources. Similarly, car headlight glass usually contains ridges that create \"caustic\" patterns of slightly lighter and darker areas in the beam; another good use for a cookie.",279],["Coroutines",280],["When you call a function, it runs to completion before returning. This effectively means that any action taking place in a function must happen within a single frame update; a function call can't be used to contain a procedural animation or a sequence of events over time. As an example, consider the task of gradually reducing an object's alpha (opacity) value until it becomes completely invisible.",280],["void Fade() {",280],["for (float f = 1f; f >= 0; f -= 0.1f) {",280],["Color c = renderer.material.color;",280],["c.a = f;",280],["renderer.material.color = c;",280],["As it stands, the Fade function will not have the effect you might expect. In order for the fading to be visible, the alpha must be reduced over a sequence of frames to show the intermediate values being rendered. However, the function will execute in its entirety within a single frame update. The intermediate values will never be seen and the object will disappear instantly.",280],["It is possible to handle situations like this by adding code to the Update function that executes the fade on a frame-by-frame basis. However, it is often more convenient to use a coroutine for this kind of task.",280],["A coroutine is like a function that has the ability to pause execution and return control to Unity but then to continue where it left off on the following frame. In C#, a coroutine is declared like this:",280],["IEnumerator Fade() {",280],["for (float f = 1f; f >= 0; f -= 0.1f) {",280],["Color c = renderer.material.color;",280],["c.a = f;",280],["renderer.material.color = c;",280],["yield return null;",280],["It is essentially a function declared with a return type of IEnumerator and with the yield return statement included somewhere in the body. The yield return line is the point at which execution will pause and be resumed the following frame. To set a coroutine running, you need to use the StartCoroutine function:",280],["void Update() {",280],["if (Input.GetKeyDown(\"f\")) {",280],["StartCoroutine(\"Fade\");",280],["In UnityScript, things are slightly simpler. Any function that includes the yield statement is understood to be a coroutine and the IEnumerator return type need not be explicitly declared:",280],["function Fade() {",280],["for (var f = 1.0; f >= 0; f -= 0.1) {",280],["var c = renderer.material.color;",280],["c.a = f;",280],["renderer.material.color = c;",280],["yield;",280],["Also, a coroutine can be started in UnityScript by calling it as if it were a normal function:",280],["function Update() {",280],["if (Input.GetKeyDown(\"f\")) {",280],["Fade();",280],["You will notice that the loop counter in the Fade function maintains its correct value over the lifetime of the coroutine. In fact any variable or parameter will be correctly preserved between yields.",280],["By default, a coroutine is resumed on the frame after it yields but it is also possible to introduce a time delay using WaitForSeconds:",280],["IEnumerator Fade() {",280],["for (float f = 1f; f >= 0; f -= 0.1f) {",280],["Color c = renderer.material.color;",280],["c.a = f;",280],["renderer.material.color = c;",280],["yield return new WaitForSeconds(.1f);",280],["...on in UnityScript",280],["function Fade() {",280],["for (var f = 1.0; f >= 0; f -= 0.1) {",280],["var c = renderer.material.color;",280],["c.a = f;",280],["renderer.material.color = c;",280],["yield WaitForSeconds(0.1);",280],["This can be used as a way to spread an effect over a period time but it is also a useful optimization. Many tasks in a game need to be carried out periodically and the most obvious way to do this is to include them in the Update function. However, this function will typically be called many times per second. When a task doesn't need to be repeated quite so frequently, you can put it in a coroutine to get an update regularly but not every single frame. An example of this might be an alarm that warns the player if an enemy is nearby. The code might look something like this:",280],["function ProximityCheck() {",280],["for (int i = 0; i &lt; enemies.Length; i++) {",280],["if (Vector3.Distance(transform.position, enemies[i].transform.position) &lt; dangerDistance) {",280],["return true;",280],["return false;",280],["If there are a lot of enemies then calling this function every frame might introduce a significant overhead. However, you could use a coroutine to call it every tenth of a second:",280],["IEnumerator DoCheck() {",280],["for(;;) {",280],["ProximityCheck;",280],["yield return new WaitForSeconds(.1f);",280],["This would greatly reduce the number of checks carried out without any noticeable effect on gameplay.",280],["Creating and Destroying GameObjects",281],["Some games keep a constant number of objects in the scene, but it is very common for characters, treasures and other object to be created and removed during gameplay. In Unity, a GameObject can be created using the Instantiate function which makes a new copy of an existing object:",281],["public GameObject enemy;",281],["void Start() {",281],["for (int i = 0; i &lt; 5; i++) {",281],["Instantiate(enemy);",281],["Note that the object from which the copy is made doesn't have to be present in the scene. It is more common to use a prefab dragged to a public variable from the Project panel in the editor. Also, instantiating a GameObject will copy all the Components present on the original.",281],["There is also a Destroy function that will destroy an object after the frame update has finished or optionally after a short time delay:",281],["void OnCollisionEnter(Collision otherObj) {",281],["if (otherObj.gameObject.tag == \"Missile\") {",281],["Destroy(gameObject,.5f);",281],["Note that the Destroy function can destroy individual components without affecting the GameObject itself. A common mistake is to write something like:",281],["Destroy(this);",281],["...which will actually just destroy the script component that calls it rather than destroying the GameObject the script is attached to.",281],["Creating and Using Scripts",282],["The behavior of GameObjects is controlled by the Components that are attached to them. Although Unity's built-in Components can be very versatile, you will soon find you need to go beyond what they can provide to implement your own gameplay features. Unity allows you to create your own Components using scripts. These allow you to trigger game events, modify Component properties over time and respond to user input in any way you like.",282],["Unity supports two programming languages natively:",282],["C# (pronounced C-sharp), an industry-standard language similar to Java or C++;",282],["UnityScript, a language designed specifically for use with Unity and modelled after JavaScript;",282],["In addition to these, many other .NET languages can be used with Unity if they can compile a compatible DLL - see here for further details.",282],["Learning the art of programming and the use of these particular languages is beyond the scope of this introduction. However, there are many books, tutorials and other resources for learning how to program with Unity. See the Learning section of our website for further details.",282],["Creating Scripts",282],["Unlike most other assets, scripts are usually created within Unity directly. You can create a new script from the Create menu at the top left of the Project panel or by selecting Assets &gt; Create &gt; C# Script (or JavaScript) from the main menu.",282],["The new script will be created in whichever folder you have selected in the Project panel. The new script file's name will be selected, prompting you to enter a new name.",282],["It is a good idea to enter the name of the new script at this point rather than editing it later. The name that you enter will be used to create the initial text inside the file, as described below.",282],["Anatomy of a Script file",282],["When you double-click a script asset in Unity, it will be opened in a text editor. By default, Unity will use MonoDevelop, but you can select any editor you like from the External Tools panel in Unity's preferences.",282],["The initial contents of the file will look something like this:",282],["using UnityEngine;",282],["using System.Collections;",282],["public class MainPlayer : MonoBehaviour {",282],["// Use this for initialization",282],["void Start () {",282],["// Update is called once per frame",282],["void Update () {",282],["A script makes its connection with the internal workings of Unity by implementing a class which derives from the built-in class called MonoBehaviour. You can think of a class as a kind of blueprint for creating a new Component type that can be attached to GameObjects. Each time you attach a script component to a GameObject, it creates a new instance of the object defined by the blueprint. The name of the class is taken from the name you supplied when the file was created. The class name and file name must be the same to enable the script component to be attached to a GameObject.",282],["The main things to note, however, are the two functions defined inside the class. The Update function is the place to put code that will handle the frame update for the GameObject. This might include movement, triggering actions and responding to user input, basically anything that needs to be handled over time during gameplay. To enable the Update function to do its work, it is often useful to be able to set up variables, read preferences and make connections with other GameObjects before any game action takes place. The Start function will be called by Unity before gameplay begins (ie, before the Update function is called for the first time) and is an ideal place to do any initialization.",282],["Note to experienced programmers: you may be surprised that initialization of an object is not done using a constructor function. This is because the construction of objects is handled by the editor and does not take place at the start of gameplay as you might expect. If you attempt to define a constructor for a script component, it will interfere with the normal operation of Unity and can cause major problems with the project.",282],["A UnityScript script works a bit differently to C# script:",282],["pragma strict",282],["function Start () {",282],["function Update () {",282],["Here, the Start and Update functions have the same meaning but the class is not explicitly declared. The script itself is assumed to define the class; it will implicitly derive from MonoBehaviour and take its name from the filename of the script asset.",282],["Controlling a GameObject",282],["As noted above, a script only defines a blueprint for a Component and so none of its code will be activated until an instance of the script is attached to a GameObject. You can attach a script by dragging the script asset to a GameObject in the hierarchy panel or to the inspector of the GameObject that is currently selected. There is also a Scripts submenu on the Component menu which will contain all the scripts available in the project, including those you have created yourself. The script instance looks much like any other Component in the Inspector:",282],["Once attached, the script will start working when you press Play and run the game. You can check this by adding the following code in the Start function:-",282],["// Use this for initialization",282],["void Start () {",282],["Debug.Log(\"I am alive!\");",282],["Debug.Log is a simple command that just prints a message to Unity's console output. If you press Play now, you should see the message at the bottom of the main Unity editor window and in the Console window (menu: Window &gt; Console).",282],["Creating Gameplay",283],["Unity empowers game designers to make games. What's really special about Unity is that you don't need years of experience with code or a degree in art to make fun games. There are a handful of basic workflow concepts needed to learn Unity. Once understood, you will find yourself making games in no time. With the time you will save getting your games up and running, you will have that much more time to refine, balance, and tweak your game to perfection.",283],["This section will explain the core concepts you need to know for creating unique, amazing, and fun gameplay. The majority of these concepts require you to write Scripts. For an overview of creating and working with Scripts, read the Scripting page.",283],["Creating Scenes",284],["Scenes contain the objects of your game. They can be used to create a main menu, individual levels, and anything else. Think of each unique Scene file as a unique level. In each Scene, you will place your environments, obstacles, and decorations, essentially designing and building your game in pieces.",284],["Instancing Prefabs",284],["Use the method described in the last section to create a Prefab. You can also read more details about Prefabs here. Once you've created a Prefab, you can quickly and easily make copies of the Prefab, called an Instance. To create an instance of any Prefab, drag the Prefab from the Project View to the Hierarchy or Scene View. Now you have a unique instance of your Prefab to position and tweak as you like.",284],["Adding Component &amp; Scripts",284],["When you have a Prefab or any GameObject highlighted, you can add additional functionality to it by using Components. Scripts are a type of Component. To add a Component, just highlight your GameObject and select a Component from the Component menu. You will then see the Component appear in the Inspector of the GameObject. Scripts are also contained in the Component menu by default.",284],["If adding a Component breaks the GameObject's connection to its Prefab, you can always use GameObject-&gt;Apply Changes to Prefab from the menu to re-establish the link.",284],["Placing GameObjects",284],["Once your GameObject is in the scene, you can use the Transform Tools to position it wherever you like. Additionally, you can use the Transform values in the Inspector to fine-tune placement and rotation. Please view the Transform Component page for more information about positioning and rotating GameObjects.",284],["Working with Cameras",284],["Cameras are the eyes of your game. Everything the player will see while playing is through one or more cameras. You can position, rotate, and parent cameras just like any other GameObject. A camera is just a GameObject with a Camera Component attached to it. Therefore it can do anything a regular GameObject can do, and then some camera-specific functions too. There are also some helpful Camera scripts that are installed with the Scripts package. The Scripts package can be included when you create a new project, or you can use the Assets-&gt;Import Package... menu. The scripts that you import can be found in Components-&gt;Camera-Control from the menu. There are some additional aspects to cameras which will be good to understand. To read about cameras, view the Camera component page.",284],["Lights",284],["Except for some very few cases, you will always need to add Lights to your scene. There are three different types of lights, and all of them behave a little differently from each other. The important thing is that they add atmosphere and ambience to your game. Different lighting can completely change the mood of your game, and using lights effectively will be an important subject to learn. To read about the different lights, please view the Light component page.",284],["Customizing the Unity Web Player loading screen",285],["By default the Unity Web Player displays a small Unity logo and a progress bar while loading web player content. It is possible to customize the appearance of that loading screen, including both the logo and progress bar display.",285],["Please note that modifying the loader images is only possible with Unity Pro.",285],["There are six optional parameters that can be passed to UnityObject, which can be used to customize the appearance of the Unity Web Player loading screen. Those optional parameters are:",285],["backgroundcolor: The background color of the web player content display region during loading, the default is white.",285],["bordercolor: The color of the one pixel border drawn around the web player content display region during loading, the default is white.",285],["textcolor: The color of error message text (when data file fails to load for example). The default is black or white, depending on the background color.",285],["logoimage: The path to a custom logo image, the logo image is drawn centered within the web player content display region during loading.",285],["progressbarimage: The path to a custom image used as the progress bar during loading. The progress bar image's width is clipped based on the amount of file loading completed, therefore it starts with a zero pixel width and animates to its original width when the loading is complete. The progress bar is drawn beneath the logo image.",285],["progressframeimage: The path to a custom image used to frame the progress bar during loading.",285],["All color values provided must be 6-digit hexadecimal colors, (eg. FFFFFF, 020F16, etc.). The image paths provided can be either relative or absolute links. All images must be PNG files in RGB format (without transparency) or RGBA format (with transparency) stored at eight bits per channel. Finally, the progressframeimage and the progressbarimage should be the same height.",285],["Here is an example script that customizes the appearance of the Unity Web Player loading screen. The background color is set to light gray (A0A0A0), border color to black (000000), text color to white (FFFFFF) and loader images to MyLogo.png, MyProgressBar.png and MyProgressFrame.png. All parameters are grouped into single params object and passed to UnityObject2 Constructor.",285],["var params = {",285],["backgroundcolor: \"A0A0A0\",",285],["bordercolor: \"000000\",",285],["textcolor: \"FFFFFF\",",285],["logoimage: \"MyLogo.png\",",285],["progressbarimage: \"MyProgressBar.png\",",285],["progressframeimage: \"MyProgressFrame.png\"",285],["};",285],["var u = UnityObject2({ params: params });",285],["u.initPlugin(jQuery(\"#unityPlayer\")[0], \"Example.unity3d\");",285],["See UnityObject2 for more details.",285],["Example using the above snippet:",285],["",285],["",285],["",285],["Unity Web Player   \"Sample\"",285],["",285],["",285],["var unityObjectUrl = \"http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js\";",285],["if (document.location.protocol == 'https:')",285],["unityObjectUrl = unityObjectUrl.replace(\"http://\", \"https://ssl-\");",285],["document.write('&lt;\\/script>');",285],["-->",285],["",285],["",285],["var params = {",285],["backgroundcolor: \"A0A0A0\",",285],["bordercolor: \"000000\",",285],["textcolor: \"FFFFFF\",",285],["logoimage: \"MyLogo.png\",",285],["progressbarimage: \"MyProgressBar.png\",",285],["progressframeimage: \"MyProgressFrame.png\"",285],["};",285],["var u = new UnityObject2({ params: params });",285],["u.observeProgress(function (progress) {",285],["var $missingScreen = jQuery(progress.targetEl).find(\".missing\");",285],["switch(progress.pluginStatus) {",285],["case \"unsupported\":",285],["showUnsupported();",285],["break;",285],["case \"broken\":",285],["alert(\"You will need to restart your browser after installation.\");",285],["break;",285],["case \"missing\":",285],["$missingScreen.find(\"a\").click(function (e) {",285],["e.stopPropagation();",285],["e.preventDefault();",285],["u.installPlugin();",285],["return false;",285],["});",285],["$missingScreen.show();",285],["break;",285],["case \"installed\":",285],["$missingScreen.remove();",285],["break;",285],["case \"first\":",285],["break;",285],["});",285],["jQuery(function(){",285],["u.initPlugin(jQuery(\"#unityPlayer\")[0], \"Example.unity3d\");",285],["});",285],["",285],["",285],["",285],["",285],["Unity Web Player   WebPlayer",285],["",285],["",285],["",285],["",285],["",285],["",285],["",285],["",285],["",285],["",285],["&laquo; created with Unity &raquo;",285],["",285],["Customizing Your Workspace",286],["You can customize your Layout of Views by click-dragging the Tab of any View to one of several locations. Dropping a Tab in the Tab Area of an existing window will add the Tab beside any existing Tabs. Alternatively, dropping a Tab in any Dock Zone will add the View in a new window.",286],["Tabs can also be detached from the Main Editor Window and arranged into their own floating Editor Windows. Floating Windows can contain arrangements of Views and Tabs just like the Main Editor Window.",286],["When you've created a Layout of Editor Windows, you can Save the layout and restore it any time. You do this by expanding the Layout drop-down (found on the Toolbar) and choosing Save Layout.... Name your new layout and save it, then restore it by simply choosing it from the Layout drop-down.",286],["At any time, you can right-click the tab of any view to view additional options like Maximize or add a new tab to the same window.",286],["Deactivating GameObjects",287],["A GameObject can be temporarily removed from the scene by marking it as inactive. This can be done using its activeSelf property from a script or with the activation checkbox in the inspector",287],["A GameObject's activation checkbox",287],["Effect of deactivating a parent GameObject",287],["When a parent object is deactivated, the deactivation also overrides the activeSelf setting on all its child objects, so the whole hierarchy from the parent down is made inactive. Note that this does not change the value of the activeSelf property on the child objects, so they will return to their original state once the parent is reactivated. This means that you can't determine whether or not a child object is currently active in the scene by reading its activeSelf property. Instead, you should use the activeInHierarchy property, which takes the overriding effect of the parent into account.",287],["This overriding behaviour was introduced in Unity 4.0. In earlier versions, there was a function called SetActiveRecursively which could be used to activate or deactivate the children of a given parent object. However, this function worked differently in that the activation setting of each child object was changed - the whole hierarchy could be switched off and on but the child objects had no way to \"remember\" the state they were originally in. To avoid breaking legacy code, SetActiveRecursively has been kept in the API for 4.0 but its use is not recommended and it may be removed in the future. In the unusual case where you actually want the children's activeSelf settings to be changed, you can use code like the following:-",287],["// JavaScript",287],["function DeactivateChildren(g: GameObject, a: boolean) {",287],["g.activeSelf = a;",287],["for (var child: Transform in g.transform) {",287],["DeactivateChildren(child.gameObject, a);",287],["// C#",287],["void DeactivateChildren(GameObject g, bool a) {",287],["g.activeSelf = a;",287],["foreach (Transform child in g.transform) {",287],["DeactivateChildren(child.gameObject, a);",287],["Direction and Distance from One Object to Another",288],["If one point in space is subtracted from another then the result is a vector that \"points\" from one object to the other:",288],["// Gets a vector that points from the player's position to the target's.",288],["var heading = target.position - player.position;",288],["As well as pointing in the direction of the target object, this vector's magnitude is equal to the distance between the two positions. It is common to need a normalized vector giving the direction to the target and also the distance to the target (say for directing a projectile). The distance between the objects is equal to the magnitude of the heading vector and this vector can be normalized by dividing it by its magnitude:-",288],["var distance = heading.magnitude;",288],["var direction = heading / distance; // This is now the normalized direction.",288],["This approach is preferable to using the both the magnitude and normalized properties separately, since they are both quite CPU-hungry (they both involve calculating a square root).",288],["If you only need to use the distance for comparison (for a proximity check, say) then you can avoid the magnitude calculation altogether. The sqrMagnitude property gives the square of the magnitude value, and is calculated like the magnitude but without the time-consuming square root operation. Rather than compare the magnitude against a known distance, you can compare the squared magnitude against the squared distance:-",288],["if (heading.sqrMagnitude &lt; maxRange * maxRange) {",288],["// Target is within range.",288],["This is much more efficient than using the true magnitude in the comparison.",288],["Sometimes, the overground heading to a target is required. For example, imagine a player standing on the ground who needs to approach a target floating in the air. If you subtract the player's position from the target's then the resulting vector will point upwards towards the target. This is not suitable for orienting the player's transform since he will also point upwards; what is really needed is a vector from the player's position to the position on the ground directly below the target. This is easily obtained by taking the result of the subtraction and setting the Y coordinate to zero:-",288],["var heading = target.position - player.position;",288],["heading.y = 0;  // This is the overground heading.",288],["Using DirectX 11 in Unity",289],["Unity has ability to use DirectX 11 graphics API, with all the goodies that you expect from it: compute shaders, tessellation shaders, shader model 5.0 and so on.",289],["Enabling DirectX 11",289],["To enable DirectX 11 for your game builds and the editor, set \"Use DX11\" option in Player Settings. This option is on by default (i.e. on Windows, your games and editor will try to use DX11, and fallback to DX9 when not available).",289],["Note that DX11 requires Windows Vista or later and at least a DX10-level GPU (preferably DX11-level). Unity editor window title has \"&lt;DX11&gt;\" at the end when it is actually running in DX11 mode.",289],["Image Effects that can take advantage of DX11",289],["Compute Shaders",289],["Compute shaders allow using GPU as a massively parallel processor. See Compute Shaders page for mode details.",289],["Tessellation &amp; Geometry Shaders",289],["Surface shaders have support for simple tessellation &amp; displacement, see Surface Shader Tessellation page.",289],["When manually writing shader programs, you can use full set of DX11 shader model 5.0 features, including geometry, hull &amp; domain shaders.",289],["Surface shaders and DX11",289],["Currently some parts of surface shader compilation pipeline do not understand DX11-specific HLSL syntax, so if you're HLSL features like StructuredBuffers, RWTextures and other non-DX9 syntax, you have to wrap it into a DX11-only preprocessor macro. See Platform Specific Differences page for details.",289],["DirectX 11 Examples",289],["The following screenshots show examples of what becomes possible with DirectX 11.",289],["Directional Light Shadows",290],["A directional light typically simulates sunlight and a single light can illuminate the whole of a scene. This means that the shadow map will often cover a large portion of the scene at once and this makes the shadows susceptible to a problem called \"perspective aliasing\". Simply put, perspective aliasing means that shadow map pixels seen close to the camera look enlarged and \"chunky\" compared to those farther away.",290],["Perspective aliasing is less noticeable when you are using soft shadows and a high resolution for the shadow map. However, using these features will increase demands on the graphics hardware and so framerate might suffer.",290],["Shadow Distance",290],["One thing that can massively improve quality of shadows is reducing the Shadow Distance setting in Quality Settings. If you can make it lower, that helps both to increase the look of the shadows and increases performance (since less objects need to be rendered into the shadow maps).",290],["Note: since mobile platforms do not have shadow cascades, making sure shadow distance is as low as possible is very important to get good shadow quality and performance.",290],["Hard versus Soft shadows",290],["Using the same light setup, if we switch Shadow Type to Hard Shadows, then the transition from lit to shadowed regions is \"hard\" - either something is 100% in shadow, or 100% lit. Hard shadows are faster to render but often they look less realistic, and more projection aliasing is visible.",290],["Shadow Cascades",290],["The reason perspective aliasing occurs is that different areas of the shadow map are scaled disproportionately by the camera's perspective. The shadow map from a light needs to cover only the part of the scene visible to the camera, which is defined by the camera's view frustum. If you imagine a simple case where the directional light comes directly from above, you can see the relationship between the frustum and the shadow map.",290],["The distant end of the frustum is covered by 20 pixels of shadow map while the near end is covered by only",290],["4 pixels. However, both ends appear the same size onscreen. The result is that the resolution of the map",290],["is effectively much less for shadow areas that are close to the camera. (Note that in reality, the resolution",290],["is much higher than 20x20 and the map is usually not perfectly square-on to the camera.)",290],["Using a higher resolution for the whole map can reduce the effect of the \"chunky\" areas but this uses up",290],["more memory and bandwidth while rendering. You will notice from the diagram, though, that a large part of",290],["the shadow map is \"wasted\" at the near end of the frustum because it will never be seen; also shadow resolution",290],["far away from the camera is likely to be too high. It is possible to split the frustum area into two zones based",290],["on distance from the camera. The zone at the near end can use a separate shadow map at a reduced size (but with",290],["the same resolution) so that the number of pixels is evened out somewhat.",290],["These staged reductions in shadow map size are known as cascaded shadow maps (sometimes called \"Parallel Split Shadow Maps\"). From the Quality Settings, you can set zero, two or four cascades for a given quality level.",290],["Note: on mobile platforms realtime shadows for directional lights always use no cascades and do not use Soft Shadow blurring.",290],["The more cascades you use, the less your shadows will be affected by perspective aliasing, but increasing the number does come with a rendering overhead. However, this overhead is still less than it would be if you were to use a high resolution map across the whole shadow.",290],["Scene view has a \"Shadow Cascades\" view mode that helps to see which cascade is used where in the scene. This is useful while tweaking shadow distance, cascade count and cascade split ratios.",290],["In the previous example, Low shadow resolution and hard shadows were used, increasing shadow resolution to Medium and using Soft shadows makes them look pretty nice:",290],["Dolly Zoom (AKA the \"Trombone\" Effect)",291],["Dolly Zoom is the well-known visual effect where the camera simultaneously moves towards a target object and zooms out from it. The result is that the object appears roughly the same size but all the other objects in the scene change perspective. Done subtly, dolly zoom has the effect of highlighting the target object, since it is the only thing in the scene that isn't shifting position in the image. Alternatively, the zoom can be deliberately performed quickly to create the impression of disorientation.",291],["An object that just fits within the frustum vertically will occupy the whole height of the view as seen on the screen. This is true whatever the object's distance from the camera and whatever the field of view. For example, you can move the camera closer to the object but then widen the field of view so that the object still just fits inside the frustum's height. That particular object will appear the same size onscreen but everything else will change size as the distance and FOV change. This is the essence of the dolly zoom effect.",291],["Creating the effect in code is a matter of saving the height of the frustum at the object's position at the start of the zoom. Then, as the camera moves, its new distance is found and the FOV adjusted to keep it the same height at the object's position. This can be accomplished with the following code:",291],["using UnityEngine;",291],["using System.Collections;",291],["public class ExampleScript : MonoBehaviour {",291],["public Transform target;",291],["public Camera camera;",291],["private float initHeightAtDist;",291],["private bool dzEnabled;",291],["// Calculate the frustum height at a given distance from the camera.",291],["void FrustumHeightAtDistance(float distance) {",291],["return 2.0f * distance * Mathf.Tan(camera.fieldOfView * 0.5f * Mathf.Deg2Rad);",291],["// Calculate the FOV needed to get a given frustum height at a given distance.",291],["void FOVForHeightAndDistance(float height, float distance) {",291],["return 2.0f * Mathf.Atan(height * 0.5f / distance) * Mathf.Rad2Deg;",291],["// Start the dolly zoom effect.",291],["void StartDZ() {",291],["var distance = Vector3.Distance(transform.position, target.position);",291],["initHeightAtDist = FrustumHeightAtDistance(distance);",291],["dzEnabled = true;",291],["// Turn dolly zoom off.",291],["void StopDZ() {",291],["dzEnabled = false;",291],["void Start() {",291],["StartDZ();",291],["void Update () {",291],["if (dzEnabled) {",291],["// Measure the new distance and readjust the FOV accordingly.",291],["var currDistance = Vector3.Distance(transform.position, target.position);",291],["camera.fieldOfView = FOVForHeightAndDistance(initHeightAtDist, currDistance);",291],["// Simple control to allow the camera to be moved in and out using the up/down arrows.",291],["transform.Translate(Input.GetAxis(\"Vertical\") * Vector3.forward * Time.deltaTime * 5f);",291],["C# script example",291],["var target: Transform;",291],["private var initHeightAtDist: float;",291],["private var dzEnabled: boolean;",291],["// Calculate the frustum height at a given distance from the camera.",291],["function FrustumHeightAtDistance(distance: float) {",291],["return 2.0 * distance * Mathf.Tan(camera.fieldOfView * 0.5 * Mathf.Deg2Rad);",291],["// Calculate the FOV needed to get a given frustum height at a given distance.",291],["function FOVForHeightAndDistance(height: float, distance: float) {",291],["return 2 * Mathf.Atan(height * 0.5 / distance) * Mathf.Rad2Deg;",291],["// Start the dolly zoom effect.",291],["function StartDZ() {",291],["var distance = Vector3.Distance(transform.position, target.position);",291],["initHeightAtDist = FrustumHeightAtDistance(distance);",291],["dzEnabled = true;",291],["// Turn dolly zoom off.",291],["function StopDZ() {",291],["dzEnabled = false;",291],["function Start() {",291],["StartDZ();",291],["function Update () {",291],["if (dzEnabled) {",291],["// Measure the new distance and readjust the FOV accordingly.",291],["var currDistance = Vector3.Distance(transform.position, target.position);",291],["camera.fieldOfView = FOVForHeightAndDistance(initHeightAtDist, currDistance);",291],["// Simple control to allow the camera to be moved in and out using the up/down arrows.",291],["transform.Translate(Input.GetAxis(\"Vertical\") * Vector3.forward * Time.deltaTime * 5);",291],["JS script example",291],["Downloading AssetBundles",292],["This section assumes you already learned how to build asset bundles. If you have not, please see Building AssetBundles",292],["There are two ways to download an AssetBundle",292],["Non-caching: This is done using a creating a new WWW object. The AssetBundles are not cached to Unity's Cache folder in the local storage device.",292],["Caching: This is done using the WWW.LoadFromCacheOrDownload call. The AssetBundles are cached to Unity's Cache folder in the local storage device. The WebPlayer shared cache allows up to 50 MB of cached AssetBundles. PC/Mac Standalone applications and iOS/Android applications have a limit of 4 GB. WebPlayer applications that make use of a dedicated cache are limited to the number of bytes specified in the caching license agreement. Please refer to the scripting documentation for other platforms.",292],["Here's an example of a non-caching download:",292],["using System;",292],["using UnityEngine;",292],["using System.Collections; class NonCachingLoadExample : MonoBehaviour {",292],["public string BundleURL;",292],["public string AssetName;",292],["IEnumerator Start() {",292],["// Download the file from the URL. It will not be saved in the Cache",292],["using (WWW www = new WWW(BundleURL)) {",292],["yield return www;",292],["if (www.error != null)",292],["throw new Exception(\"WWW download had an error:\" + www.error);",292],["AssetBundle bundle = www.assetBundle;",292],["if (AssetName == \"\")",292],["Instantiate(bundle.mainAsset);",292],["else",292],["Instantiate(bundle.LoadAsset(AssetName));",292],["// Unload the AssetBundles compressed contents to conserve memory",292],["bundle.Unload(false);",292],["} // memory is freed from the web stream (www.Dispose() gets called implicitly)",292],["The recommended way to download AssetBundles is to use WWW.LoadFromCacheOrDownload. For example:",292],["using System;",292],["using UnityEngine;",292],["using System.Collections;",292],["public class CachingLoadExample : MonoBehaviour {",292],["public string BundleURL;",292],["public string AssetName;",292],["public int version;",292],["void Start() {",292],["StartCoroutine (DownloadAndCache());",292],["IEnumerator DownloadAndCache (){",292],["// Wait for the Caching system to be ready",292],["while (!Caching.ready)",292],["yield return null;",292],["// Load the AssetBundle file from Cache if it exists with the same version or download and store it in the cache",292],["using(WWW www = WWW.LoadFromCacheOrDownload (BundleURL, version)){",292],["yield return www;",292],["if (www.error != null)",292],["throw new Exception(\"WWW download had an error:\" + www.error);",292],["AssetBundle bundle = www.assetBundle;",292],["if (AssetName == \"\")",292],["Instantiate(bundle.mainAsset);",292],["else",292],["Instantiate(bundle.LoadAsset(AssetName));",292],["// Unload the AssetBundles compressed contents to conserve memory",292],["bundle.Unload(false);",292],["} // memory is freed from the web stream (www.Dispose() gets called implicitly)",292],["When you access the .assetBundle property, the downloaded data is extracted and the AssetBundle object is created. At this point, you are ready to load the objects contained in the bundle. The second parameter passed to LoadFromCacheOrDownload specifies which version of the AssetBundle to download. If the AssetBundle doesn't exist in the cache or has a version lower than requested, LoadFromCacheOrDownload will download the AssetBundle. Otherwise the AssetBundle will be loaded from cache.",292],["Please note that only up to one AssetBundle download can finish per frame when they are downloaded with WWW.LoadFromCacheOrDownload.",292],["Putting it all together",292],["Now that the components are in place you can build a scene that will allow you to load your AssetBundle and display the contents on screen.",292],["Final project structure",292],["First create an empty game object by going to GameObject-&gt;CreateEmpty. Drag the CachingLoadExample script onto the empty game object you just created. Then type the the URL of your AssetBundle in the BundleURL field. As we have placed this in the project directory you can copy the file directory location and add the prefix file://, for example file://C:/UnityProjects/AssetBundlesGuide/Assets/AssetBundles/Cube.unity3d",292],["You can now hit play in the Editor and you should see the Cube prefab being loaded from the AssetBundle.",292],["Loading AssetBundles in the Editor",292],["When working in the Editor requiring AssetBundles to be built and loaded can slow down the development process. For instance, if an Asset from an AssetBundle is modified this will then require the AssetBundle to be rebuilt and in a production environment it is most likely that all AssetBundles are built together and therefore making the process of updating a single AssetBundle a lengthy operation. A better approach is to have a separate code path in the Editor that will load the Asset directly instead of loading it from an AssetBundle. To do this it is possible to use Resources.LoadAssetAtPath (Editor only).",292],["// C# Example",292],["// Loading an Asset from disk instead of loading from an AssetBundle",292],["// when running in the Editor",292],["using System.Collections;",292],["using UnityEngine;",292],["class LoadAssetFromAssetBundle : MonoBehaviour",292],["public Object Obj;",292],["public IEnumerator DownloadAssetBundle(string asset, string url, int version) where T : Object {",292],["Obj = null;",292],["if UNITY_EDITOR",292],["Obj = Resources.LoadAssetAtPath(\"Assets/\" + asset, typeof(T));",292],["yield return null;",292],["else",292],["// Wait for the Caching system to be ready",292],["while (!Caching.ready)",292],["yield return null;",292],["// Start the download",292],["using(WWW www = WWW.LoadFromCacheOrDownload (url, version)){",292],["yield return www;",292],["if (www.error != null)",292],["throw new Exception(\"WWW download:\" + www.error);",292],["AssetBundle assetBundle = www.assetBundle;",292],["Obj = assetBundle.LoadAsset(asset, typeof(T));",292],["// Unload the AssetBundles compressed contents to conserve memory",292],["bundle.Unload(false);",292],["} // memory is freed from the web stream (www.Dispose() gets called implicitly)",292],["endif",292],["Draw Call Batching",293],["To draw an object on the screen, the engine has to issue a draw call to the graphics API (e.g. OpenGL or Direct3D). Draw calls are often seen as expensive, with the graphics API doing significant work for every draw call, causing performance overhead on the CPU side.  However this is not the case. The expensive part is the changing of the resources accessed by the GPU between the draw calls as it triggers a graphics driver validation each time. The emphasis should be on reducing the batch count, rather than the draw call count.",293],["Unity uses static batching to address this. The goal of the static batching is to regroup as many meshes in less buffers to get better performance, rendering giant meshes instead of a lot of small meshes which is inefficient.  Unity will only loop on the same resources to render different ranges of these resources. Effectively it executes a series of fast draw calls for each staticcally batched mesh.",293],["Built-in batching support in Unity has significant benefit over simply combining geometry in the modeling tool (or using the CombineChildren script from the Standard Assets package). In Unity 5.0, there is only one build of the index buffer on start and then a draw call is submitted for each sub mesh of that big mesh for each visible sub mesh.",293],["Materials",293],["Only objects sharing the same material can be batched together. Therefore, if you want to achieve good batching, you need to share as many materials among different objects as possible.",293],["If you have two identical materials which differ only in textures, you can combine those textures into a single big texture - a process often called texture atlasing. Once textures are in the same atlas, you can use a single material instead.",293],["If you need to access shared material properties from the scripts, then it is important to note that modifying Renderer.material will create a copy of the material. Instead, you should use Renderer.sharedMaterial to keep material shared.",293],["Dynamic Batching",293],["Unity can automatically batch moving objects into the same draw call if they share the same material and fulfill other criteria. Dynamic batching is done automatically and does not require any additional effort on your side.",293],["Tips:",293],["Batching dynamic objects has certain overhead per vertex, so batching is applied only to meshes containing less than 900 vertex attributes in total.",293],["If your shader is using Vertex Position, Normal and single UV, then you can batch up to 300 verts; whereas if your shader is using Vertex Position, Normal, UV0, UV1 and Tangent, then only 180 verts.",293],["Please note: attribute count limit might be changed in future",293],["Generally, objects should be using the same transform scale.",293],["The exception is non-uniform scaled objects; if several objects all have different non-uniform scale then they can still be batched.",293],["Using different material instances - even if they are essentially the same - will make objects not batched together.",293],["Objects with lightmaps have additional renderer parameter: lightmap index and offset/scale into the lightmap. So generally dynamic lightmapped objects should point to exactly the same lightmap location to be batched.",293],["Multi-pass shaders will break batching. Almost all unity shaders supports several lights in forward rendering, effectively doing additional pass for them. The draw calls for \"additional per-pixel lights\" will not be batched.",293],["Objects that receive real-time shadows will not be batched.",293],["Static Batching",293],["Static batching, on the other hand, allows the engine to reduce draw calls for geometry of any size (provided it does not move and shares the same material). Static batching is significantly more efficient than dynamic batching. You should choose static batching as it will require less CPU power.",293],["In order to take advantage of static batching, you need explicitly specify that certain objects are static and will not move, rotate or scale in the game. To do so, you can mark objects as static using the Static checkbox in the Inspector:",293],["Using static batching will require additional memory for storing the combined geometry. If several objects shared the same geometry before static batching, then a copy of geometry will be created for each object, either in the Editor or at runtime. This might not always be a good idea - sometimes you will have to sacrifice rendering performance by avoiding static batching for some objects to keep a smaller memory footprint. For example, marking trees as static in a dense forest level can have serious memory impact.",293],["Static batching does not reduce batches instead of draw calls. Their number stays the same, but they are a lot faster with static batching.",293],["Other batching tips",293],["Currently, only Mesh Renderers and Particle Systems are batched. This means that skinned meshes, cloth, trail renderers and other types of rendering components are not batched.",293],["Semitransparent shaders most often require objects to be rendered in back-to-front order for transparency to work. Unity first orders objects in this order, and then tries to batch them - but because the order must be strictly satisfied, this often means less batching can be achieved than with opaque objects.",293],["Some parts of Unity's rendering do not have batching implemented yet; for example rendering shadow casters, camera's depth textures or GUI will not do batching.",293],["Editing Curves",294],["Curves can be used for many different things and there are several different controls in Unity that use curves that can be edited.",294],["The Animation View uses curves to display and edit the values of animated properties over time in an Animation Clip.",294],["Script components can have member variables of type AnimationCurve that can be used for all kinds of things. Clicking on those in the Inspector will open up the Curve Editor.",294],["The Audio Source component uses curves to control rolloff and other properties as a function of distance to the Audio Source.",294],["While these controls have subtle differences, the curves can be edited in exactly the same way in all of them. This page explains how to navigate and edit curves in those controls.",294],["Adding and Moving Keys on a Curve",294],["A key can be added to a curve by double-clicking on the curve at the point where the key should be placed. It is also possible to add a key by right-clicking on a curve and select Add Key from the context menu.",294],["Once placed, keys can be dragged around with the mouse:",294],["Click on a key to select it. Drag the selected key with the mouse.",294],["To snap the key to the grid while dragging it around, hold down Command on Mac / Control on Windows while dragging.",294],["It is also possible to select multiple keys at once:",294],["To select multiple keys at once, hold down Shift while clicking the keys.",294],["To deselect a selected key, click on it again while holding down Shift.",294],["To select all keys within a rectangular area, click on an empty spot and drag to form the rectangle selection.",294],["The rectangle selection can also be added to existing selected keys by holding down Shift.",294],["Keys can be deleted by selecting them and pressing Delete, or by right-clicking on them and selecting Delete Key from the context menu.",294],["Navigating the Curve View",294],["When working with the Animation View you can easily zoom in on details of the curves you want to work with or zoom out to get the full picture.",294],["You can always press F to frame-select the shown curves or selected keys in their entirely.",294],["Zooming",294],["You can zoom the Curve View using the scroll-wheel of your mouse, the zoom functionality of your trackpad, or by holding Alt while right-dragging with your mouse.",294],["You can zoom on only the horizontal or vertical axis:",294],["zoom while holding down Command on Mac / Control on Windows to zoom horizontally.",294],["zoom while holding down Shift to zoom vertically.",294],["Furthermore, you can drag the end caps of the scrollbars to shrink or expand the area shown in the Curve View.",294],["Panning",294],["You can pan the Curve View by middle-dragging with your mouse or by holding Alt while left-dragging with your mouse.",294],["Editing Tangents",294],["A key has two tangents - one on the left for the ingoing slope and one on the right for the outgoing slope. The tangents control the shape of the curve between the keys. The Animation View have multiple tangent types that can be used to easily control the curve shape. The tangent types for a key can be chosen by right-clicking the key.",294],["In order for animated values to change smoothly when passing a key, the left and right tangent must be co-linear. The following tangent types ensure smoothness:",294],["Auto: The tangents are automatically set so make the curve go smoothly through the key.",294],["Free Smooth: The tangents can be freely set by dragging the tangent handles. They are locked to be co-linear to ensure smoothness.",294],["Flat: The tangents are set to be horizontal. (This is a special case of Free Smooth.)",294],["Sometimes smoothness is not desired. The left and right tangent can be set individually when the tangents are Broken. The left and right tangent can each be set to one of the following tangent types:",294],["Free: The tangent can be freely set by dragging the tangent handle.",294],["Linear: The tangent points towards the neighboring key. A linear curve segment can be made by setting the tangents at both ends to be Linear.",294],["Constant: The curve retains a constant value between two keys. The value of the left key determines the value of the curve segment.",294],["Editing Properties",295],["Properties are settings and options for components that can be edited in the inspector.",295],["Properties can be broadly categorized as references (links to other objects and assets) or values (numbers, checkboxes, colors, etc).",295],["References",295],["References can be assigned by dragging and dropping an object or asset of the appropriate type to the property in the inspector. For example, the Mesh Filter component needs to refer to a Mesh asset somewhere in the project. When the component is initially created, the reference is unassigned:",295],["...but you can assign a Mesh to it by dropping a Mesh asset onto it:",295],["You can also use the Object Picker to select an object for a reference property. If you click the small circle icon to the right of the property in the inspector, you will see a window like this:",295],["The object picker lets you search for and select objects within the scene or project assets (the information panel at the bottom of the window can be raised and lowered as desired). Choosing an object for the reference property is simply a matter of double clicking it in the picker.",295],["When a reference property is of a component type (such as Transform), you can drop any object onto it; Unity will locate the first component of that type on the object and assign it to the reference. If the object doesn't have any components of the right type, the assignment will be rejected.",295],["Values",295],["Most values are edited using familiar text boxes, checkboxes and menus, depending on their type (as a convenience, numeric values can also be moved up or down by dragging the mouse over the property name label). However, there are some values of more complex types that have their own specific editors. These are described below.",295],["Colors",295],["Color properties will open the Color Picker when clicked.",295],["Unity uses its own color picker but on Mac OS X you can choose to use the system picker from the Preferences (menu: Unity &gt; Preferences and then Use OS X Color Picker from the General panel).",295],["Gradients",295],["In graphics and animation, it is often useful to be able to blend one colour gradually into another, over space or time. A gradient is a visual representation of a colour progression, which simply shows the main colours (which are called stops) and all the intermediate shades between them:",295],["The upward-pointing arrows along the bottom of the gradient bar denote the stops. You can select a stop by clicking on it; its value will be shown in the Color box which will open the standard colour picker when clicked. A new stop can be created by clicking just underneath the gradient bar. The position of any of the stops can be changed simply by clicking and dragging and a stop can be removed with ctrl/cmd + delete.",295],["The downward-pointing arrows above the gradient bar are also stops but they correspond to the alpha (transparency) of the gradient at that point. By default, there are two stops set to 100% alpha (ie, fully opaque) but any number of stops can be added and edited in much the same way as the colour stops.",295],["Curves",295],["A Curve is a line graph that shows the response (on the Y axis) to the varying value of an input (on the X axis).",295],["Curves are used in a variety of different contexts within Unity, especially in animation, and have a number of different options and tools. These are explained on the Editing Curves page of the manual.",295],["Arrays",295],["When a script exposes an array as a public variable, the inspector will show a value editor that lets you edit both the size of the array and the values or references within it.",295],["When you decrease the Size property, values from the end of the array will be removed. When you increase the size, the current last value will be copied into all the new elements added. This can be useful when setting up an array whose values are mostly the same - you can set the first element and then change the size to copy it to all the other elements.",295],["Editing Several Objects at Once",295],["When you have two or more objects selected, the components they have in common can all be edited together (ie, the values you supply will be copied to all the selected objects).",295],["Where property values are the same for all selected objects, the value will be shown but otherwise, it will be shown as a dash character. Only components that are common to all objects will be visible in the inspector. If any selected object has components that are not present on other objects, the inspector will show a message to say that some components are hidden. The context menu for a property (opened by right-clicking on its name label) also has options to allow you to set its value from any of the selected components.",295],["Note that you can also edit several selected instances of a prefab at once but the usual Select, Revert and Apply buttons will not be available.",295],["Custom Editors",296],["A key to increasing the speed of game creation is to create custom editors for commonly used components. For the sake of example, we'll use this very simple script that always keeps an object looking at a point.",296],["//JS Example",296],["var lookAtPoint = Vector3.zero;",296],["function Update ()",296],["transform.LookAt (lookAtPoint);",296],["//C# Example",296],["public class LookAtPoint : MonoBehaviour {",296],["Vector3 lookAtPoint = Vector3.zero;",296],["void Update ()",296],["transform.LookAt (lookAtPoint);",296],["//C# Example",296],["public class LookAtPoint : MonoBehaviour {",296],["Vector3 lookAtPoint = Vector3.zero;",296],["void Update ()",296],["transform.LookAt (lookAtPoint);",296],["This will keep an object oriented towards a world-space point. Let's make it cool!",296],["The first step to making it work nicely in the editor is to make the script run even when you're not testing the game. We do this by adding an ExecuteInEditMode attribute to it:",296],["@script ExecuteInEditMode()",296],["var lookAtPoint = Vector3.zero;",296],["function Update () {",296],["transform.LookAt (lookAtPoint);",296],["//C# Example",296],["[ExecuteInEditMode]",296],["public class LookAtPoint : MonoBehaviour {",296],["Vector3 lookAtPoint = Vector3.zero;",296],["void Update () {",296],["transform.LookAt (lookAtPoint);",296],["//C# Example",296],["[ExecuteInEditMode]",296],["public class LookAtPoint : MonoBehaviour {",296],["Vector3 lookAtPoint = Vector3.zero;",296],["void Update () {",296],["transform.LookAt (lookAtPoint);",296],["Try adding the script to your main camera and drag it around in the Scene view.",296],["Making a Custom Editor",296],["This is all well and good, but we can make the editor for it a lot nicer by customizing it. To do that we need to create an Editor for it. Create a JavaScript called LookAtPointEditor in a folder called Editor.",296],["@CustomEditor (LookAtPoint)",296],["class LookAtPointEditor extends Editor {",296],["function OnInspectorGUI () {",296],["target.lookAtPoint = EditorGUILayout.Vector3Field (\"Look At Point\", target.lookAtPoint);",296],["if (GUI.changed)",296],["EditorUtility.SetDirty (target);",296],["This class has to derive from Editor. The @CustomEditor attribute informs Unity which component it should act as an editor for.",296],["The code in OnInspectorGUI is executed whenever Unity displays the editor in the Inspector. You can put any GUI code in here - it works just like OnGUI does for games, but is run inside the Inspector. Editor defines the target property that you can use to access the object being inspected.",296],["The EditorUtility.SetDirty code is executed if the user has changed any of the values by checking GUI.changed.",296],["In this case, we make one of the Vector3 fields like is used in the Transform Editor - like so:",296],["There's a lot more that can be done here, but this will do for now - We've got bigger fish to fry...",296],["Scene View Additions",296],["You can add extra code to the Scene View by implementing an OnSceneGUI in your custom editor. In this case, we'll add a second set of position handles, letting users drag the look-at point around in the Scene view.",296],["@CustomEditor (LookAtPoint)",296],["class LookAtPointEditor extends Editor {",296],["function OnInspectorGUI () {",296],["target.lookAtPoint = EditorGUILayout.Vector3Field (\"Look At Point\", target.lookAtPoint);",296],["if (GUI.changed)",296],["EditorUtility.SetDirty (target);",296],["function OnSceneGUI () {",296],["target.lookAtPoint = Handles.PositionHandle (target.lookAtPoint, Quaternion.identity);",296],["if (GUI.changed)",296],["EditorUtility.SetDirty (target);",296],["OnSceneGUI works just like OnInspectorGUI - except it gets run in the scene view. To help you make your editing interface, you can use the functions defined in Handles class. All functions in there are designed for working in 3D Scene views.",296],["If you want to put 2D GUI objects (GUI, EditorGUI and friends), you need to wrap them in calls to Handles.BeginGUI() and Handles.EndGUI().",296],["Editor Windows",297],["You can create any number of custom windows in your app. These behave just like the Inspector, Scene or any other built-in ones. This is a great way to add a user interface to a sub-system for your game.",297],["Making a custom Editor Window involves the following simple steps:",297],["Create a script that derives from EditorWindow.",297],["Use code to trigger the window to display itself.",297],["Implement the GUI code for your tool.",297],["Derive From EditorWindow",297],["In order to make your Editor Window, your script must be stored inside a folder called \"Editor\". Make a class in this script that derives from EditorWindow. Then write your GUI controls in the inner OnGUI function.",297],["//JS Example",297],["class MyWindow extends EditorWindow {",297],["function OnGUI () {",297],["// The actual window code goes here",297],["//C# Example",297],["using UnityEngine;",297],["using UnityEditor;",297],["using System.Collections;",297],["public class Example : EditorWindow",297],["void OnGUI () {",297],["// The actual window code goes here",297],["MyWindow.js - placed in a folder called 'Editor' within your project.",297],["Showing the window",297],["In order to show the window on screen, make a menu item that displays it. This is done by creating a function which is activated by the",297],["MenuItem property.",297],["The default behavior in Unity is to recycle windows (so selecting the menu item again would show existing windows. This is done by using the function EditorWindow.GetWindow Like this:",297],["//JS Example",297],["class MyWindow extends EditorWindow {",297],["@MenuItem (\"Window/My Window\")",297],["static function ShowWindow () {",297],["EditorWindow.GetWindow (MyWindow);",297],["function OnGUI () {",297],["// The actual window code goes here",297],["//C# Example",297],["using UnityEngine;",297],["using UnityEditor;",297],["using System.Collections;",297],["class MyWindow : EditorWindow {",297],["[MenuItem (\"Window/My Window\")]",297],["public static void  ShowWindow () {",297],["EditorWindow.GetWindow(typeof(MyWindow));",297],["void OnGUI () {",297],["// The actual window code goes here",297],["Showing the MyWindow",297],["This will create a standard, dockable editor window that saves its position between invocations, can be used in custom layouts, etc. To have more control over what gets created, you can use GetWindowWithRect",297],["Implementing Your Window's GUI",297],["The actual contents of the window are rendered by implementing the OnGUI function. You can use the same UnityGUI classes you use for your ingame GUI (GUI and GUILayout). In addition we provide some additional GUI controls, located in the editor-only classes EditorGUI and EditorGUILayout. These classes add to the controls already available in the normal classes, so you can mix and match at will.",297],["The following C# code shows how you can add GUI elements to your custom EditorWindow:",297],["//C# Example",297],["using UnityEditor;",297],["using UnityEngine;",297],["public class MyWindow : EditorWindow",297],["string myString = \"Hello World\";",297],["bool groupEnabled;",297],["bool myBool = true;",297],["float myFloat = 1.23f;",297],["// Add menu item named \"My Window\" to the Window menu",297],["[MenuItem(\"Window/My Window\")]",297],["public static void ShowWindow()",297],["//Show existing window instance. If one doesn't exist, make one.",297],["EditorWindow.GetWindow(typeof(MyWindow));",297],["void OnGUI()",297],["GUILayout.Label (\"Base Settings\", EditorStyles.boldLabel);",297],["myString = EditorGUILayout.TextField (\"Text Field\", myString);",297],["groupEnabled = EditorGUILayout.BeginToggleGroup (\"Optional Settings\", groupEnabled);",297],["myBool = EditorGUILayout.Toggle (\"Toggle\", myBool);",297],["myFloat = EditorGUILayout.Slider (\"Slider\", myFloat, -3, 3);",297],["EditorGUILayout.EndToggleGroup ();",297],["This example results in a window which looks like this:",297],["For more info, take a look at the example and documentation on the EditorWindow page.",297],["Property Drawers",298],["Property Drawers can be used to customize the look of certain controls in the Inspector, by using attributes on your scripts, or by controlling how a specific Serializable class should look.",298],["Property Drawers have two uses:",298],["Customize the GUI of every instance of a Serializable class.",298],["Customize the GUI of script members with custom Property Attributes.",298],["Customize the GUI of a Serializable class",298],["If you have a custom Serializable class, you can use a Property Drawer to control how it looks in the Inspector. Consider the Serializable class Ingredient in the script below:",298],["// This is not an editor script",298],["// JS example.",298],["enum IngredientUnit { Spoon, Cup, Bowl, Piece }",298],["// Custom serializable class",298],["class Ingredient extends System.Object {",298],["var name : String;",298],["var amount : int = 1;",298],["var unit : IngredientUnit;",298],["var potionResult : Ingredient;",298],["var potionIngredients : Ingredient[];",298],["function Update () {",298],["// Update logic here...",298],["// C# example.",298],["using UnityEngine;",298],["using System.Collections;",298],["public enum IngredientUnit { Spoon, Cup, Bowl, Piece }",298],["// Custom serializable class",298],["[System.Serializable]",298],["public class Ingredient : System.Object {",298],["string name;",298],["int amount = 1;",298],["IngredientUnit unit;",298],["public class Recipe : MonoBehaviour {",298],["Ingredient potionResult;",298],["Ingredient[] potionIngredients;",298],["void Update() {",298],["// Update logic here...",298],["//C# Example",298],["using UnityEngine;",298],["using System.IO;",298],["//This is not an editor script",298],["class Testing : MonoBehaviour{",298],["enum IngredientUnit { Spoon, Cup, Bowl, Piece }",298],["// Custom serializable class",298],["[System.Serializable]",298],["class Ingredient{",298],["string name;",298],["int amount = 1;",298],["IngredientUnit unit;",298],["Ingredient potionResult;",298],["Ingredient[] potionIngredients;",298],["void Update () {",298],["// Update logic here...",298],["Using a custom Property Drawer, every appearance of the Ingredient class in the Inspector can be changed. Compare the look of the Ingredient properties in the Inspector without and with a custom Property Drawer:",298],["You can attach the Property Drawer to a Serializable class by using the CustomPropertyDrawer attribute and pass in the type of the Serializable class that it's a drawer for.",298],["// JS example.",298],["@CustomPropertyDrawer(Ingredient)",298],["class IngredientDrawer extends PropertyDrawer {",298],["// Draw the property inside the given rect",298],["function OnGUI (position : Rect, property : SerializedProperty, label : GUIContent) {",298],["// Using BeginProperty / EndProperty on the parent property means that",298],["// prefab override logic works on the entire property.",298],["EditorGUI.BeginProperty (position, label, property);",298],["// Draw label",298],["position = EditorGUI.PrefixLabel (position, GUIUtility.GetControlID (FocusType.Passive), label);",298],["// Don't make child fields be indented",298],["var indent = EditorGUI.indentLevel;",298],["EditorGUI.indentLevel = 0;",298],["// Calculate rects",298],["var amountRect = new Rect (position.x, position.y, 30, position.height);",298],["var unitRect = new Rect (position.x+35, position.y, 50, position.height);",298],["var nameRect = new Rect (position.x+90, position.y, position.width-90, position.height);",298],["// Draw fields - passs GUIContent.none to each so they are drawn without labels",298],["EditorGUI.PropertyField (amountRect, property.FindPropertyRelative (\"amount\"), GUIContent.none);",298],["EditorGUI.PropertyField (unitRect, property.FindPropertyRelative (\"unit\"), GUIContent.none);",298],["EditorGUI.PropertyField (nameRect, property.FindPropertyRelative (\"name\"), GUIContent.none);",298],["// Set indent back to what it was",298],["EditorGUI.indentLevel = indent;",298],["EditorGUI.EndProperty ();",298],["// C# example.",298],["using UnityEngine;",298],["using UnityEditor;",298],["using System.Collections;",298],["[CustomPropertyDrawer(typeof(Ingredient))]",298],["public class IngredientDrawer : PropertyDrawer {",298],["// Draw the property inside the given rect",298],["void OnGUI(Rect position, SerializedProperty property, GUIContent label) {",298],["// Using BeginProperty / EndProperty on the parent property means that",298],["// prefab override logic works on the entire property.",298],["EditorGUI.BeginProperty(position, label, property);",298],["// Draw label",298],["position = EditorGUI.PrefixLabel(position, GUIUtility.GetControlID(FocusType.Passive), label);",298],["// Don't make child fields be indented",298],["int indent = EditorGUI.indentLevel;",298],["EditorGUI.indentLevel = 0;",298],["// Calculate rects",298],["Rect amountRect = new Rect(position.x, position.y, 30, position.height);",298],["Rect unitRect = new Rect(position.x+35, position.y, 50, position.height);",298],["Rect nameRect = new Rect(position.x+90, position.y, position.width-90, position.height);",298],["// Draw fields - passs GUIContent.none to each so they are drawn without labels",298],["EditorGUI.PropertyField(amountRect, property.FindPropertyRelative (\"amount\"), GUIContent.none);",298],["EditorGUI.PropertyField(unitRect, property.FindPropertyRelative (\"unit\"), GUIContent.none);",298],["EditorGUI.PropertyField(nameRect, property.FindPropertyRelative (\"name\"), GUIContent.none);",298],["// Set indent back to what it was",298],["EditorGUI.indentLevel = indent;",298],["EditorGUI.EndProperty();",298],["//C# Example",298],["using UnityEngine;",298],["using UnityEditor;",298],["using System.Collections;",298],["[CustomPropertyDrawer (Ingredient)]",298],["class IngredientDrawer : PropertyDrawer {",298],["// Draw the property inside the given rect",298],["void OnGUI (Rect position, SerializedProperty property, GUIContent label) {",298],["// Using BeginProperty / EndProperty on the parent property means that",298],["// prefab override logic works on the entire property.",298],["EditorGUI.BeginProperty (position, label, property);",298],["// Draw label",298],["position = EditorGUI.PrefixLabel (position, GUIUtility.GetControlID (FocusType.Passive), label);",298],["// Don't make child fields be indented",298],["var indent = EditorGUI.indentLevel;",298],["EditorGUI.indentLevel = 0;",298],["// Calculate rects",298],["Rect amountRect = new Rect (position.x, position.y, 30, position.height);",298],["Rect unitRect = new Rect (position.x+35, position.y, 50, position.height);",298],["Rect nameRect = new Rect (position.x+90, position.y, position.width-90, position.height);",298],["// Draw fields - passs GUIContent.none to each so they are drawn without labels",298],["EditorGUI.PropertyField (amountRect, property.FindPropertyRelative (\"amount\"), GUIContent.none);",298],["EditorGUI.PropertyField (unitRect, property.FindPropertyRelative (\"unit\"), GUIContent.none);",298],["EditorGUI.PropertyField (nameRect, property.FindPropertyRelative (\"name\"), GUIContent.none);",298],["// Set indent back to what it was",298],["EditorGUI.indentLevel = indent;",298],["EditorGUI.EndProperty ();",298],["Customize the GUI of script members using Property Attributes",298],["The other use of Property Drawer is to alter the appearance of members in a script that have custom Property Attributes. Say you want to limit floats or integers in your script to a certain range and show them as sliders in the Inspector. Using the built-in PropertyAttribute called RangeAttribute you can do just that:",298],["//JS Example",298],["// Show this float in the Inspector as a slider between 0 and 10",298],["@Range (0.0, 10.0)",298],["var myFloat = 0.0;",298],["//C# example.",298],["[Range(0.0f, 10.0f)]",298],["public float myFloat = 0.0f;",298],["//C# Example",298],["// Show this float in the Inspector as a slider between 0 and 10",298],["[Range(0.0f, 10.0f)]",298],["float myFloat = 0.0f;",298],["You can make your own PropertyAttribute as well. We'll use the code for the RangeAttribute as an example. The attribute must extend the PropertyAttribute class. If you want, your property can take parameters and store them as public member variables.",298],["//JS Example",298],["// This is not an editor script. The property attribute class should be placed in a regular script file.",298],["// JS example.",298],["class RangeAttribute extends PropertyAttribute {",298],["var min : float;",298],["var max : float;",298],["function RangeAttribute (min : float, max : float) {",298],["this.min = min;",298],["this.max = max;",298],["// C# example.",298],["using UnityEngine;",298],["using System.Collections;",298],["public class RangeAttribute : PropertyAttribute {",298],["public float min;",298],["public float max;",298],["public RangeAttribute (float min, float max) {",298],["this.min = min;",298],["this.max = max;",298],["//C# Example",298],["// This is not an editor script. The property attribute class should be placed in a regular script file.",298],["using UnityEngine;",298],["using System.Collections;",298],["public class Testing : PropertyAttribute",298],["float min;",298],["float max;",298],["void RangeAttribute (float min, float max) {",298],["this.min = min;",298],["this.max = max;",298],["Now that you have the attribute, you need to make a Property Drawer that draws properties that have that attribute. The drawer must extend the PropertyDrawer class, and it must have a CustomPropertyDrawer attribute to tell it which attribute it's a drawer for.",298],["// The property drawer class should be placed in an editor script, inside a folder called Editor.",298],["//JS example.",298],["// Tell the RangeDrawer that it is a drawer for properties with the RangeAttribute.",298],["@CustomPropertyDrawer (RangeAttribute)",298],["class RangeDrawer extends PropertyDrawer {",298],["// Draw the property inside the given rect",298],["function OnGUI (position : Rect, property : SerializedProperty, label : GUIContent) {",298],["// First get the attribute since it contains the range for the slider",298],["var range : RangeAttribute = attribute as RangeAttribute;",298],["// Now draw the property as a Slider or an IntSlider based on whether it's a float or integer.",298],["if (property.propertyType == SerializedPropertyType.Float)",298],["EditorGUI.Slider (position, property, range.min, range.max, label);",298],["else if (property.propertyType == SerializedPropertyType.Integer)",298],["EditorGUI.IntSlider (position, property, range.min, range.max, label);",298],["else",298],["EditorGUI.LabelField (position, label.text, \"Use Range with float or int.\");",298],["// C# example.",298],["using UnityEngine;",298],["using UnityEditor;",298],["using System.Collections;",298],["// Tell the RangeDrawer that it is a drawer for properties with the RangeAttribute.",298],["[CustomPropertyDrawer(typeof(RangeAttribute))]",298],["public class RangeDrawer : PropertyDrawer {",298],["// Draw the property inside the given rect",298],["void OnGUI (Rect position, SerializedProperty property, GUIContent label) {",298],["// First get the attribute since it contains the range for the slider",298],["RangeAttribute range  = attribute as RangeAttribute;",298],["// Now draw the property as a Slider or an IntSlider based on whether it's a float or integer.",298],["if (property.propertyType == SerializedPropertyType.Float)",298],["EditorGUI.Slider(position, property, range.min, range.max, label);",298],["else if (property.propertyType == SerializedPropertyType.Integer)",298],["EditorGUI.IntSlider(position, property, (int) range.min, (int) range.max, label);",298],["else",298],["EditorGUI.LabelField(position, label.text, \"Use Range with float or int.\");",298],["//C# Example",298],["using UnityEngine;",298],["using UnityEditor;",298],["using System.Collections;",298],["// Tell the RangeDrawer that it is a drawer for properties with the RangeAttribute.",298],["[CustomPropertyDrawer (RangeAttribute)]",298],["class RangeDrawer : PropertyDrawer {",298],["// Draw the property inside the given rect",298],["void OnGUI ( Rect position, SerializedProperty property, GUIContent label) {",298],["// First get the attribute since it contains the range for the slider",298],["RangeAttribute range = attribute as RangeAttribute;",298],["// Now draw the property as a Slider or an IntSlider based on whether it's a float or integer.",298],["if (property.propertyType == SerializedPropertyType.Float)",298],["EditorGUI.Slider (position, property, range.min, range.max, label);",298],["else if (property.propertyType == SerializedPropertyType.Integer)",298],["EditorGUI.IntSlider (position, property, range.min, range.max, label);",298],["else",298],["EditorGUI.LabelField (position, label.text, \"Use Range with float or int.\");",298],["Note that for performance reasons, EditorGUILayout functions are not usable with Property Drawers.",298],["Editor",299],["Information on more advanced Editor features will be listed under this section. Covering areas such as version control and profiling, both of which are criticial to a professional workflow.",299],["Editor Overview",300],["This section details the tools and settings in the Unity editor that you use to develop your project. For an introduction to the basic operations and workflow of the editor, see the Unity Basics section.",300],["Editor Reference",301],["This section covers the various settings managers in detail as well as information on the network view.",301],["Enhanced Asset Bundle Workflow",302],["Asset Bundles have been a feature of Unity for quite some time but from Unity 5.0, there is a simplified system for creating bundles from the editor. When you have an asset selected in the Project view, you will see an Asset Bundle menu right at the bottom of the inspector under the asset preview.",302],["The menu lets you attach the asset to an asset bundle specified by its name (you can add a new name from the menu or select any bundle name you have previously created in the project). At this stage, the bundle does not exist and there is no icon for it in the project. The name is simply to specify which assets will be collected together when the bundle is eventually built. If you have a folder of assets then you can select a bundle name for it in order to add all the contents of the folder to that bundle.",302],["When you have added all desired assets to the appropriate bundle names, you will need to use the editor API from a script to build the bundles. The BuildPipeline.BuildAssetBundles function will use the selected bundle names to determine which assets belong in which bundles and then build the bundle files themselves. The script that calls this function could be as simple as the following:",302],["@MenuItem(\"Test/Build Asset Bundles\")",302],["static function BuildABs() {",302],["// Put the bundles in a folder called \"ABs\" within the",302],["// Assets folder.",302],["BuildPipeline.BuildAssetBundles(\"Assets/ABs\");",302],["After a successful build, the destination folder will contain bundle files with the names you supplied from the editor. For each bundle, a manifest file will also be created. This is just a text file containing a description of the bundle's contents.",302],["The only parameter required is the project-relative path to the folder where the built bundles should be saved but there are other options you can use to specify how the build should be carried out. See the script reference page for BuildPipeline.BuildAssetBundles for further details. Note that the older functions in the BuildPipeline class for building asset bundles are still available but they don't make use of the asset bundle menu in the editor like BuildAssetBundles does.",302],["Event Functions",303],["A script in Unity is not like the traditional idea of a program where the code runs continuously in a loop until it completes its task. Instead, Unity passes control to a script intermittently by calling certain functions that are declared within it. Once a function has finished executing, control is passed back to Unity. These functions are known as event functions since they are activated by Unity in response to events that occur during gameplay. Unity uses a naming scheme to identify which function to call for a particular event. For example, you will already have seen the Update function (called before a frame update occurs) and the Start function (called just before the object's first frame update). Many more event functions are available in Unity; the full list can be found in the script reference page for the MonoBehaviour class along with details of their usage. The following are some of the most common and important events.",303],["Regular Update Events",303],["A game is rather like an animation where the animation frames are generated on the fly. A key concept in games programming is that of making changes to position, state and behavior of objects in the game just before each frame is rendered. The Update function is the main place for this kind of code in Unity. Update is called before the frame is rendered and also before animations are calculated.",303],["void Update() {",303],["float distance = speed * Time.deltaTime * Input.GetAxis(\"Horizontal\");",303],["transform.Translate(Vector3.right * distance);",303],["The physics engine also updates in discrete time steps in a similar way to the frame rendering. A separate event function called FixedUpdate is called just before each physics update. Since the physics updates and frame updates do not occur with the same frequency, you will get more accurate results from physics code if you place it in the FixedUpdate function rather than Update.",303],["void FixedUpdate() {",303],["Vector3 force = transform.forward * driveForce * Input.GetAxis(\"Vertical\");",303],["rigidbody.AddForce(force);",303],["It is also useful sometimes to be able to make additional changes at a point after the Update and FixedUpdate functions have been called for all objects in the scene and after all animations have been calculated. An example is where a camera should remain trained on a target object; the adjustment to the camera's orientation must be made after the target object has moved. Another example is where the script code should override the effect of an animation (say, to make the character's head look towards a target object in the scene). The LateUpdate function can be used for these kinds of situations.",303],["void LateUpdate() {",303],["Camera.main.transform.LookAt(target.transform);",303],["Initialization Events",303],["It is often useful to be able to call initialization code in advance of any updates that occur during gameplay. The Start function is called before the first frame or physics update on an object. The Awake function is called for each object in the scene at the time when the scene loads. Note that although the various objects' Start and Awake functions are called in arbitrary order, all the Awakes will have finished before the first Start is called. This means that code in a Start function can make use of other initializations previously carried out in the Awake phase.",303],["GUI events",303],["Unity has a system for rendering GUI controls over the main action in the scene and responding to clicks on these controls. This code is handled somewhat differently from the normal frame update and so it should be placed in the OnGUI function, which will be called periodically.",303],["void OnGUI() {",303],["GUI.Label(labelRect, \"Game Over\");",303],["You can also detect mouse events that occur over a GameObject as it appears in the scene. This can be used for targeting weapons or displaying information about the character currently under the mouse pointer. A set of OnMouseXXX event functions (eg, OnMouseOver, OnMouseDown) is available to allow a script to react to user actions with the mouse. For example, if the mouse button is pressed while the pointer is over a particular object then an OnMouseDown function in that object's script will be called if it exists.",303],["Physics events",303],["The physics engine will report collisions against an object by calling event functions on that object's script. The OnCollisionEnter, OnCollisionStay and OnCollisionExit functions will be called as contact is made, held and broken. The corresponding OnTriggerEnter, OnTriggerStay and OnTriggerExit functions will be called when the object's collider is configured as a Trigger (ie, a collider that simply detects when something enters it rather than reacting physically). These functions may be called several times in succession if more than one contact is detected during the physics update and so a parameter is passed to the function giving details of the collision (position, identity of the incoming object, etc).",303],["void OnCollisionEnter(otherObj: Collision) {",303],["if (otherObj.tag == \"Arrow\") {",303],["ApplyDamage(10);",303],["EventSystem",304],["The EventSystem is a way of sending events to objects in the application based on input, be it keyboard, mouse, touch, or custom input. The EventSystem consists of a few components that work together to send events.",304],["Overview",304],["When you add an EventSystem component to a GameObject you will notice that it does not have much functionality exposed, this is because the EventSystem itself is designed as a manager and facilitator of communication between EventSystem modules.",304],["The primary roles of the EventSystem are as follows:",304],["\nManage which GameObject is considered selected\n",304],["\nManage which InputModule is in use\n",304],["\nManage Raycasting (if required)\n",304],["\nUpdating all InputModules as required\n",304],["Input Modules",304],["An input module is where the main logic of how you want the EventSystem to behave lives, they are used for",304],["\nHandling Input\n",304],["\nManaging event state\n",304],["\nSending events to scene objects.\n",304],["Only one InputModule can be active in the EventSystem at a time, and they must be components on the same GameObject as the EventSystem component.",304],["If you wish to write a custom input module it is recommended that you send events supported by existing UI components in Unity, but you are also able to extend and write your own events as detailed in the Messaging System documentation.",304],["Raycasters",304],["Raycasters are used for sending figuring out what the pointer is over, it is common for InputModules to use the Raycasters configured in the scene to calculate what the pointing device is over.",304],["There are 3 provided Raycasters that exist by default:",304],["\nGraphicRaycaster - Used for UI elements\n",304],["\n2DPhysicsRaycaster - Used for 2D physics elements\n",304],["\n3DPhysicsRaycaster - Used for 3D physics elements\n",304],["If you have a 2d / 3d Raycaster configured in your scene it is easily possible to have non UI elements receive messages from the InputModule. Simply attach a script that implements one of the event interfaces.",304],["Example - Creating a Billboard Plane",305],["Unity comes with the Plane and Quad primitive objects to represent flat surfaces (see the Primitive Objects page for further details). However, it is useful to examine how a minimal plane mesh can be constructed, since this is probably the simplest useful example, with just four vertices for the corners and two triangles.",305],["The first thing is to set the vertices array. We'll assume that the plane lies in the X and Y axes and let its width and height be determined by parameter variables. We'll supply the vertices in the order bottom-left, bottom-right, top-left, top-right.",305],["var vertices: Vector3[] = new Vector3[4];",305],["vertices[0] = new Vector3(0, 0, 0);",305],["vertices[1] = new Vector3(width, 0, 0);",305],["vertices[2] = new Vector3(0, height, 0);",305],["vertices[3] = new Vector3(width, height, 0);",305],["mesh.vertices = vertices;",305],["(Since the Mesh data properties execute code behind the scenes, it is much more efficient to set up the data in your own array and then assign this to a property rather than access the property array element by element.)",305],["Next come the triangles. Since we want two triangles, each defined by three integers, the triangles array will have six elements in total. Remembering the clockwise rule for ordering the corners, the lower left triangle will use 0, 2, 1 as its corner indices, while the upper right one will use 2, 3, 1.",305],["var tri: int[] = new int[6];",305],["//  Lower left triangle.",305],["tri[0] = 0;",305],["tri[1] = 2;",305],["tri[2] = 1;",305],["//  Upper right triangle.",305],["tri[3] = 2;",305],["tri[4] = 3;",305],["tri[5] = 1;",305],["mesh.triangles = tri;",305],["A mesh with just the vertices and triangles set up will be visible in the editor but will not look very convincing since it is not correctly shaded without the normals. The normals for the flat plane are very simple - they are all identical and point in the negative Z direction in the plane's local space. With the normals added, the plane will be correctly shaded but remember that you need a light in the scene to see the effect.",305],["var normals: Vector3[] = new Vector3[4];",305],["normals[0] = -Vector3.forward;",305],["normals[1] = -Vector3.forward;",305],["normals[2] = -Vector3.forward;",305],["normals[3] = -Vector3.forward;",305],["mesh.normals = normals;",305],["Finally, adding texture coordinates to the mesh will enable it to display a material correctly. Assuming we want to show the whole image across the plane, the UV values will all be 0 or 1, corresponding to the corners of the texture.",305],["var uv: Vector2[] = new Vector2[4];",305],["uv[0] = new Vector2(0, 0);",305],["uv[1] = new Vector2(1, 0);",305],["uv[2] = new Vector2(0, 1);",305],["uv[3] = new Vector2(1, 1);",305],["mesh.uv = uv;",305],["The complete script might look a bit like this:-",305],["var width: float;",305],["var height: float;",305],["function Start() {",305],["var mf: MeshFilter = GetComponent.();",305],["var mesh = new Mesh();",305],["mf.mesh = mesh;",305],["var vertices: Vector3[] = new Vector3[4];",305],["vertices[0] = new Vector3(0, 0, 0);",305],["vertices[1] = new Vector3(width, 0, 0);",305],["vertices[2] = new Vector3(0, height, 0);",305],["vertices[3] = new Vector3(width, height, 0);",305],["mesh.vertices = vertices;",305],["var tri: int[] = new int[6];",305],["tri[0] = 0;",305],["tri[1] = 2;",305],["tri[2] = 1;",305],["tri[3] = 2;",305],["tri[4] = 3;",305],["tri[5] = 1;",305],["mesh.triangles = tri;",305],["var normals: Vector3[] = new Vector3[4];",305],["normals[0] = -Vector3.forward;",305],["normals[1] = -Vector3.forward;",305],["normals[2] = -Vector3.forward;",305],["normals[3] = -Vector3.forward;",305],["mesh.normals = normals;",305],["var uv: Vector2[] = new Vector2[4];",305],["uv[0] = new Vector2(0, 0);",305],["uv[1] = new Vector2(1, 0);",305],["uv[2] = new Vector2(0, 1);",305],["uv[3] = new Vector2(1, 1);",305],["mesh.uv = uv;",305],["Note that the if the code is executed once in the Start function then the mesh will stay the same throughout the game. However, you can just as easily put the code in the Update function to allow the mesh to be changed each frame (although this will increase the CPU overhead considerably).",305],["Execution Order of Event Functions",306],["In Unity scripting, there are a number of event functions that get executed in a predetermined order as a script executes. This execution order is described below:",306],["Editor",306],["Reset: Reset is called to initialize the script's properties when it is first attached to the object and also when the Reset command is used.",306],["First Scene Load",306],["These functions get called when a scene starts (once for each object in the scene).",306],["Awake: This function is always called before any Start functions and also just after a prefab is instantiated. (If a GameObject is inactive during start up Awake is not called until it is made active, or a function in any script attached to it is called.)",306],["OnEnable: (only called if the Object is active): This function is called just after the object is enabled. This happens when a MonoBehaviour instance is created, such as when a level is loaded or a GameObject with the script component is instantiated.",306],["Note that for objects added to the scene, the Awake and OnEnable functions for all scripts will be called before Start, Update, etc are called for any of them. Naturally, this cannot be enforced when an object is instantiated during gameplay.",306],["Before the first frame update",306],["Start: Start is called before the first frame update only if the script instance is enabled.",306],["For objects added to the scene, the Start function will be called on all scripts before Update, etc are called for any of them. Naturally, this cannot be enforced when an object is instantiated during gameplay.",306],["In between frames",306],["OnApplicationPause: This is called at the end of the frame where the pause is detected, effectively between the normal frame updates. One extra frame will be issued after OnApplicationPause is called to allow the game to show graphics that indicate the paused state.",306],["Update Order",306],["When you're keeping track of game logic and interactions, animations, camera positions, etc., there are a few different events you can use. The common pattern is to perform most tasks inside the Update function, but there are also other functions you can use.",306],["FixedUpdate: FixedUpdate is often called more frequently than Update. It can be called multiple times per frame, if the frame rate is low and it may not be called between frames at all if the frame rate is high. All physics calculations and updates occur immediately after FixedUpdate. When applying movement calculations inside FixedUpdate, you do not need to multiply your values by Time.deltaTime. This is because FixedUpdate is called on a reliable timer, independent of the frame rate.",306],["Update: Update is called once per frame. It is the main workhorse function for frame updates.",306],["LateUpdate: LateUpdate is called once per frame, after Update has finished. Any calculations that are performed in Update will have completed when LateUpdate begins. A common use for LateUpdate would be a following third-person camera. If you make your character move and turn inside Update, you can perform all camera movement and rotation calculations in LateUpdate. This will ensure that the character has moved completely before the camera tracks its position.",306],["Rendering",306],["OnPreCull: Called before the camera culls the scene. Culling determines which objects are visible to the camera. OnPreCull is called just before culling takes place.",306],["OnBecameVisible/OnBecameInvisible: Called when an object becomes visible/invisible to any camera.",306],["OnWillRenderObject: Called once for each camera if the object is visible.",306],["OnPreRender: Called before the camera starts rendering the scene.",306],["OnRenderObject: Called after all regular scene rendering is done. You can use GL class or Graphics.DrawMeshNow to draw custom geometry at this point.",306],["OnPostRender: Called after a camera finishes rendering the scene.",306],["OnRenderImage: Called after scene rendering is complete to allow postprocessing of the screen image.",306],["OnGUI: Called multiple times per frame in response to GUI events. The Layout and Repaint events are processed first, followed by a Layout and keyboard/mouse event for each input event.",306],["OnDrawGizmos Used for drawing Gizmos in the scene view for visualisation purposes.",306],["Coroutines",306],["Normal coroutine updates are run after the Update function returns. A coroutine is a function that can suspend its execution (yield) until the given YieldInstruction finishes.",306],["Different uses of Coroutines:",306],["yield The coroutine will continue after all Update functions have been called on the next frame.",306],["yield WaitForSeconds Continue after a specified time delay, after all Update functions have been called for the frame",306],["yield WaitForFixedUpdate Continue after all FixedUpdate has been called on all scripts",306],["yield WWW Continue after a WWW download has completed.",306],["yield StartCoroutine Chains the coroutine, and will wait for the MyFunc coroutine to complete first.",306],["When the Object is Destroyed",306],["OnDestroy: This function is called after all frame updates for the last frame of the object's existence (the object might be destroyed in response to Object.Destroy or at the closure of a scene).",306],["When Quitting",306],["These functions get called on all the active objects in your scene:",306],["OnApplicationQuit: This function is called on all game objects before the application is quit. In the editor it is called when the user stops playmode. In the web player it is called when the web view is closed.",306],["OnDisable: This function is called when the behaviour becomes disabled or inactive.",306],["Script Lifecycle Flowchart",306],["The following diagram summarises the ordering and repetition of event functions during a script's lifetime.",306],["Extending the Editor",307],["Unity lets you extend the editor with your own custom inspectors and Editor Windows and you can define how properties are displayed in the inspector with custom Property Drawers. This section explains how to use these features.",307],["Using External Version Control Systems with Unity",308],["Unity offers an Asset Server add-on product for easy integrated versioning of your projects and you can also use Perforce and PlasticSCM as external tools (see Version Control Integration for further details). If you for some reason are not able use these systems, it is possible to store your project in any other version control system, such as Subversion or Bazaar. This requires some initial manual setup of your project.",308],["Before checking your project in, you have to tell Unity to modify the project structure slightly to make it compatible with storing assets in an external version control system. This is done by selecting Edit-&gt;Project Settings-&gt;Editor in the application menu and enabling External Version Control support by selecting Visible Meta Files in the dropdown for Version Control. This will show a text file for every asset in the Assets directory containing the necessary bookkeeping information required by Unity. The files will have a .meta file extension with the first part being the full file name of the asset it is associated with. Moving and renaming assets within Unity should also update the relevant .meta files. However, if you move or rename assets from an external tool, make sure to syncronize the relevant .meta files as well.",308],["When checking the project into a version control system, you should add the Assets and the ProjectSettings directories to the system. The Library directory should be completely ignored - when using .meta files, it's only a local cache of imported assets.",308],["When creating new assets, make sure both the asset itself and the associated .meta file is added to version control.",308],["Example: Creating a new project and importing it to a Subversion repository.",308],["First, let's assume that we have a subversion repository at svn://my.svn.server.com/ and want to create a project at svn://my.svn.server.com/MyUnityProject.",308],["Then follow these steps to create the initial import in the system:",308],["Create a new project inside Unity and call it InitialUnityProject. You can add any initial assets here or add them later on.",308],["Enable Visible Meta files in Edit-&gt;Project Settings-&gt;Editor",308],["Quit Unity (this ensures that all the files are saved).",308],["Delete the Library directory inside your project directory.",308],["Import the project directory into Subversion. If you are using the command line client, this is done like this from the directory where your initial project is located:",308],["svn import -m\"Initial project import\" InitialUnityProject svn://my.svn.server.com/MyUnityProject",308],["If successful, the project should now be imported into subversion and you can delete the InitialUnityProject directory if you wish.",308],["Check out the project back from subversion",308],["svn co svn://my.svn.server.com/MyUnityProject",308],["And check that the Assets and ProjectSettings directory are versioned.",308],["Open the checked out project with Unity by launching it while holding down the Option or the left Alt key. Opening the project will recreate the Library directory in step 4 above.",308],["Optional: Set up an ignore filter for the unversioned Library directory:",308],["svn propedit svn:ignore MyUnityProject/",308],["Subversion will open a text editor. Add the Library directory.",308],["Finally commit the changes. The project should now be set up and ready:",308],["svn ci -m\"Finishing project import\" MyUnityProject",308],["FBX Importer - Animations Tab",309],["",309],["",309],["Animations  ",309],["Bake Animations Enable this when using IK or simulation in your animation package. Unity will convert to forward kinematics on import. This option is available only for Maya, 3dsMax and Cinema4D files. ",309],["Anim. Compression The type of compression that will be applied to this mesh's animation(s) ",309],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Off Disables animation compression. This means that Unity doesn't reduce keyframe count on import, which leads to the highest precision animations, but slower performance and bigger file and runtime memory size. It is generally not advisable to use this option - if you need higher precision animation, you should enable keyframe reduction and lower allowed Animation Compression Error values instead. ",309],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Keyframe Reduction Reduces keyframes on import. If selected, the Animation Compression Errors options are displayed. ",309],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Keyframe Reduction and Compression Reduces keyframes on import and compresses keyframes when storing animations in files. This affects only file size - the runtime memory size is the same as Keyframe Reduction. If selected, the Animation Compression Errors options are displayed. ",309],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Optimal Used for generic and humanoid rig. ",309],["Animation Compression Errors These options are available only when keyframe reduction or Optimal compression is enabled. ",309],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Rotation Error Defines how much rotation curves should be reduced. The smaller value you use - the higher precision you get. ",309],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Position Error Defines how much position curves should be reduced. The smaller value you use - the higher precision you get. ",309],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scale Error Defines how much scale curves should be reduced. The smaller value you use - the higher precision you get. ",309],["For properties of AnimationClip, go to the AnimationClip reference page",309],["Models",310],["Model files that are placed in the Assets folder in your Unity project are automatically imported and stored as Unity assets.",310],["A model file may contain a 3D model, such as a character, a building, or a piece of furniture. The model is imported as multiple assets. In the Project view the main imported object is a Model Prefab. Usually there are also up to several Mesh objects that are referenced by the Model Prefab.",310],["A model file may also contain animation data which can be used to animate this model or other models. The animation data is imported as one or more Animation Clips.",310],["Import settings for Meshes",310],["The Import Settings for a model file will be displayed in the Model tab of the FBX importer inspector when the model is selected. These affect the mesh, it's normals and imported materials. Settings are applied per asset on disk so if you need assets with different settings make (and rename accordingly) a duplicate file.",310],["Although defaults can suffice initially, it is worth studying the settings glossary below, as they can determine what you wish to do with the game object.",310],["Some general adjustments to be made for example might be:",310],["Scale - this scale factor is used for compensating difference in units between Unity and 3d modeling tool - it rescales whole file. Normally you can simply set it to 1. Note that Unity's Physics Engine is scaled as 1 unit equals 1 metre. It is important that if you want to have correct physical behaviour you should have the model correctly scaled in the original modeling application. If this cannot be done, or you do not have control over the modification of the mesh, the scale of the model can be adjusted here.",310],["Generate colliders - this will generate a collison mesh to allow your model to collide with other objects.",310],["Material Naming and Search - this will help you automatically setup your materials and locate textures",310],["Property:  Function: ",310],["Meshes   ",310],["Scale Factor  Unity's physics system expects 1 meter in the game world to be 1 unit in the imported file. If you prefer to model at a different scale then you can compensate for it here. Defaults for different 3D packages are as follows .fbx, .max, .jas, .c4d = 0.01, .mb, .ma, .lxo, .dxf, .blend, .dae = 1 .3ds = 0.1 ",310],["Mesh Compression  Increasing this value will reduce the file size of the mesh, but might introduce irregularities. It's best to turn it up as high as possible without the mesh looking too different from the uncompressed version. This is useful for optimizing game size. ",310],["Read/Write Enabled  Enables the mesh to be written at runtime so you can modify the data; it makes a copy in memory. When this option is turned off, it saves memory since Unity can unload a copy of mesh data in the game. However, if you are scaling or instantiating meshes at runtime with a non-uniform scale, you may have to enable \"Read/Write Enabled\" in their import settings. The reason is that non-uniform scaling requires the mesh data to be kept in memory. Normally this is detected at build time, but when meshes are scaled or instantiated at runtime you need to set this manually. Otherwise they might not be rendered in game builds correctly. The same applies if you need to create MeshColliders at runtime. ",310],["Optimize Mesh  This option determines the order in which triangles will be listed in the mesh. ",310],["Import Blendshapes  This option allows BlendShapes to be imported with your mesh. ",310],["Generate Colliders  If this is enabled, your meshes will be imported with Mesh Colliders automatically attached. This is useful for quickly generating a collision mesh for environment geometry, but should be avoided for geometry you will be moving. ",310],["Swap UVs  Use this if lightmapped objects pick up the wrong UV channels. This will swap your primary and secondary UV channels. ",310],["Generate Lightmap UVs  Use this to create the second UV channel to be used for Lightmapping.  See Lightmapping UVs document. ",310],["Normals &amp; Tangents   ",310],["Normals  Defines if and how normals should be calculated. This is useful for optimizing game size. ",310],["Import Default option. Imports normals from the file. ",310],["Calculate Calculates normals based on Smoothing angle. If selected, the Smoothing Angle becomes enabled. ",310],["None Disables normals. Use this option if the mesh is neither normal mapped nor affected by realtime lighting. ",310],["Tangents  Defines if and how tangents and binormals should be calculated. This is useful for optimizing game size. ",310],["Import Imports tangents and binormals from the file. This option is available only for FBX, Maya and 3dsMax files and only when normals are imported from the file. ",310],["Calculate Default option. Calculates tangents and binormals. This option is available only when normals are either imported or calculated. ",310],["None Disables tangents and binormals. The mesh will have no Tangents, so won't work with normal-mapped shaders. ",310],["Smoothing Angle  Sets how sharp an edge has to be in order to be treated as a hard edge. It is also used to split normal map tangents. ",310],["Split Tangents  Enable this if normal map lighting is broken by seams on your mesh. This usually only applies to characters. ",310],["Materials   ",310],["Import Materials  Disable this if you don't want materials to be generated. Default-Diffuse material will be used instead. ",310],["Material Naming  Controls how Unity materials are named: ",310],["By Base Texture Name The name of the diffuse texture of the imported material that will be used to name the material in Unity. When a diffuse texture is not assigned to the material, Unity will use the name of the imported material. ",310],["From Model's Material The name of the imported material will be used for naming the Unity material. ",310],["Model Name + Model's Material The name of the model file in combination with the name of the imported material will be used for naming the Unity material. ",310],["Material Search  Controls where Unity will try to locate existing materials using the name defined by the Material Naming option: ",310],["Local Unity will try to find existing materials only in the \"local\" Materials folder, ie, the Materials subfolder which is the same folder as the model file. ",310],["Recursive-Up Unity will try to find existing materials in all Materials subfolders in all parent folders up to the Assets folder. ",310],["Everywhere Unity will try to find existing materials in all Unity project folders. ",310],["FBX Importer, Rig options",311],["The Rig tab allows you to assign or create an avatar definition to your imported skinned model so that you can animate it - see Asset Preparation and Import",311],["If you have a humanoid character (ie, two legs, two arms and a head) then choose Humanoid and 'Create from this model'. An Avatar will be created to best match the bone hierarchy - see Avatar Creation and Setup or you can pick an alternative avatar Definition that has already been set up.",311],["If you have a non humanoid character e.g. a quadruped, or any animatable entity that you wish to use with Mecanim choose Generic. After choosing you will then need to identify a bone in the drop down to use as the",311],["root node.",311],["Choose legacy if you wish to use the legacy animation system and import and use animations as with 3.x",311],["Property:  Function: ",311],["Animation Type  The type of animation. ",311],["None No animation present ",311],["Legacy Legacy animation system ",311],["Generic Generic Mecanim animation ",311],["Humanoid Humanoid Mecanim animation system ",311],["Avatar Definition  Where to get the Avatar definition ",311],["Create from this model The Avatar should be based on this model ",311],["Copy from other Avatar Point to an Avatar config set up on another model. ",311],["Configure...  Go to the Avatar configuration ",311],["Optimize Game Object  When turned on, the game object transform hierarchy of the imported character will be removed and stored in the Avatar and Animator component. The SkinnedMeshRenderers of the character will then directly use the Mecanim internal skeleton. This option improves the performance of the animated characters. You should turn it on for the final product. In optimized mode skinned mesh matrix extraction is also multithreaded. ",311],["Description of the Format",312],["Unity's scene format is implemented with the YAML data serialization language. While we can't cover YAML in depth here, it is an open format and its specification is available for free at the YAML website. Each object in the scene is written to the file as a separate YAML document, which is introduced in the file by the --- sequence. Note that in this context, the term \"object\" refers to GameObjects, Components and other scene data collectively; each of these items requires its own YAML document in the scene file. The basic structure of a serialized object can be understood from an example:-",312],["--- !u!1 &amp;6",312],["GameObject:",312],["m_ObjectHideFlags: 0",312],["m_PrefabParentObject: {fileID: 0}",312],["m_PrefabInternal: {fileID: 0}",312],["importerVersion: 3",312],["m_Component:",312],["\n4: {fileID: 8}\n",312],["\n33: {fileID: 12}\n",312],["\n65: {fileID: 13}\n",312],["\n23: {fileID: 11}\n",312],["m_Layer: 0",312],["m_Name: Cube",312],["m_TagString: Untagged",312],["m_Icon: {fileID: 0}",312],["m_NavMeshLayer: 0",312],["m_StaticEditorFlags: 0",312],["m_IsActive: 1",312],["The first line contains the string \"!u!1 &amp;6\" after the document marker. The first number after the \"!u!\" part indicates the class of the object (in this case, it is a GameObject). The number following the ampersand is an object ID number which is unique within the file, although the number is assigned to each object arbitrarily. Each of the object's serializable properties is denoted by a line like the following:-",312],["m_Name: Cube",312],["Properties are typically prefixed with \"m_\" but otherwise follow the name of the property as defined in the script reference. A second object, defined further down in the file, might look something like this:-",312],["--- !u!4 &amp;8",312],["Transform:",312],["m_ObjectHideFlags: 0",312],["m_PrefabParentObject: {fileID: 0}",312],["m_PrefabInternal: {fileID: 0}",312],["m_GameObject: {fileID: 6}",312],["m_LocalRotation: {x: 0.000000, y: 0.000000, z: 0.000000, w: 1.000000}",312],["m_LocalPosition: {x: -2.618721, y: 1.028581, z: 1.131627}",312],["m_LocalScale: {x: 1.000000, y: 1.000000, z: 1.000000}",312],["m_Children: []",312],["m_Father: {fileID: 0}",312],["This is a Transform component attached to the GameObject defined by the YAML document above. The attachment is denoted by the line:-",312],["m_GameObject: {fileID: 6}",312],["...since the GameObject's object ID within the file was 6.",312],["Floating point numbers can be represented in a decimal representation or as a hexadecimal number in IEE 754 format (denoted by a 0x prefix). The IEE 754 representation is used for lossless encoding of values, and is used by Unity when writing floating point values which don't have a short decimal representation. When Unity writes numbers in hexadecimal, it will always also write the decimal format in parentheses for debugging purposes, but only the hex is actually parsed when loading the file. If you wish to edit such values manually, simply remove the hex and enter only a decimal number. Here are some valid representations of floating point values (all representing the number one):",312],["myValue: 0x3F800000",312],["myValue: 1",312],["myValue: 1.000",312],["myValue: 0x3f800000(1)",312],["myValue: 0.1e1",312],["Frame Debugger",313],["The Frame Debugger lets you freeze playback for a running game on a particular frame and view the individual draw calls that are used to render that frame. As well as listing the drawcalls, the debugger also lets you step through them one-by-one so you can see in great detail how the scene is constructed from its graphical elements.",313],["Using the Frame Debugger",313],["The Frame Debugger window (menu: Window > Frame Debugger) shows the drawcall information and lets you control the \"playback\" of the frame under construction.",313],["The main list shows the sequence of drawcalls (and other events like framebuffer clear) in the form of a hierarchy that identifies where they originated from. The panel to the right of the list gives further information about the drawcall such as the geometry details and the shader used for rendering.",313],["Clicking on an item from the list will show the scene (in the Game view) as it appears up to and including that drawcall. The left and right arrow buttons in the toolbar move forward and backward in the list by a single step and you can also use the arrow keys to the same effect. Additionally, the slider at the top of the window lets you \"scrub\" rapidly through the drawcalls to locate an item of interest quickly. Where a drawcall corresponds to the geometry of a GameObject, that object will be highlighted in the main Hierarchy panel to assist identification.",313],["If rendering happens into a RenderTexture at the selected draw call, then contents of that render texture are displayed in the Game View. This is useful for inspecting how various off-screen render targets are built up, for example diffuse g-buffer in deferred shading:",313],["Or looking at how the shadow maps are rendered:",313],["Render target display options",313],["At the top of the information panel is a toolbar which lets you isolate the red, green, blue and alpha channels for the current state of the Game view. Similarly, you can isolate areas of the view according to brightness levels using the Levels slider to the right of these channel buttons. These are only enabled when rendering into a RenderTexture.",313],["When rendering into multiple render targets at once you can select which one to display in the game view. Shown here are the diffuse, specular, normals and emission/indirect lighting buffers in 5.0 deferred shading mode, respectively:",313],["Additionally, you can see the depth buffer contents by picking \"Depth\" from the dropdown:",313],["By isolating alpha channel of the render texture, you can see occlusion (stored in RT0 alpha) and smoothness (stored in RT1 alpha) of the deferred g-buffer:",313],["The emission and ambient/indirect lighting in this scene is very dark; we can make it more visible by changing the Levels slider:",313],["Alternative frame debugging techniques",313],["You could also use external tools to debug rendering. Build a standalone player, run it through Visual Studio graphics debugger, Intel GPA, RenderDoc, NVIDIA NSight or AMD GPU PerfStudio, then capture a frame of rendering, and step through the draw calls and other rendering events to see what’s going on.",313],["This is a very powerful approach, since these tools can provide you with a lot of information to really drill down.",313],["The Size of the Frustum at a Given Distance from the Camera",314],["A cross-section of the view frustum at a certain distance from the camera defines a rectangle in world space that frames the visible area. It is sometimes useful to calculate the size of this rectangle at a given distance, or find the distance where the rectangle is a given size. For example, if a moving camera needs to keep an object (such as the player) completely in shot at all times then it must not get so close that part of that object is cut off.",314],["The height of the frustum at a given distance (both in world units) can be obtained with the following formula:",314],["var frustumHeight = 2.0 * distance * Mathf.Tan(camera.fieldOfView * 0.5 * Mathf.Deg2Rad);",314],["...and the process can be reversed to calculate the distance required to give a specified frustum height:",314],["var distance = frustumHeight * 0.5 / Mathf.Tan(camera.fieldOfView * 0.5 * Mathf.Deg2Rad);",314],["It is also possible to calculate the FOV angle when the height and distance are known:",314],["var camera.fieldOfView = 2 * Mathf.Atan(frustumHeight * 0.5 / distance) * Mathf.Rad2Deg;",314],["Each of these calculations involves the height of the frustum but this can be obtained from the width (and vice versa) very easily:",314],["var frustumWidth = frustumHeight * camera.aspect;",314],["var frustumHeight = frustumWidth / camera.aspect;",314],["GameObjects",315],["GameObjects are the most important objects in Unity. It is very important to understand what a GameObject is, and how it can be used. This page will explain all that for you.",315],["What are GameObjects?",315],["Every object in your game is a GameObject. However, GameObjects don't do anything on their own. They need special properties before they can become a character, an environment, or a special effect. But every one of these objects does so many different things. If every object is a GameObject, how do we differentiate an interactive power-up object from a static room? What makes these GameObjects different from each other?",315],["The answer to this question is that GameObjects are containers. They are empty boxes which can hold the different pieces that make up a lightmapped island or a physics-driven car. So to really understand GameObjects, you have to understand these pieces; they are called Components. Depending on what kind of object you want to create, you will add different combinations of Components to the GameObject. Think of a GameObject as an empty cooking pot, and Components as different ingredients that make up your recipe of gameplay. You can also make your own Components using Scripts.",315],["You can read more about GameObjects, Components, and Scripts on the other pages in this section.",315],["Game View",316],["The Game View is rendered from the Camera(s) in your game. It is representative of your final, published game. You will need to use one or more Cameras to control what the player actually sees when they are playing your game. For more information about Cameras, please view the Camera Component page.",316],["Play Mode",316],["Use the buttons in the Toolbar to control the Editor Play Mode and see how your published game will play. While in Play mode, any changes you make are temporary, and will be reset when you exit Play mode. The Editor UI will darken to remind you of this.",316],["Game View Control Bar",316],["The first drop-down on the Game View control bar is the Aspect Drop-down. Here, you can force the aspect ratio of the Game View window to different values. It can be used to test how your game will look on monitors with different aspect ratios.",316],["Further to the right is the Maximize on Play toggle. While enabled, the Game View will maximize itself to 100% of your Editor Window for a nice full-screen preview when you enter Play mode.",316],["Continuing to the right is the Stats button. This shows Rendering Statistics window that is very useful for monitoring the graphics performance of your game (see Optimizing Graphics Performance for further details).",316],["The last button is the Gizmos toggle. While enabled, all Gizmos that appear in Scene View will also be drawn in Game View. This includes Gizmos drawn using any of the Gizmos class functions. The Gizmos button also has a popup menu showing the various different types of Components used in the game.",316],["Next to each Component's name are the settings for the icon and gizmos associated with it. The Icon setting reveals another popup menu which lets you choose from a selection of preset icons or a custom icon defined by a texture.",316],["The Gizmo setting enables you to selectively disable Gizmo drawing for specific components.",316],["The 3D Gizmos setting at the top of the menu refers to the Gizmo icons. With the setting enabled, the icons will show the perspective of the camera (ie, icons for nearby objects will be larger than those for distant objects), otherwise they will be the same size regardless of distance. The slider next to the checkbox allows you to vary the size of the icons, which can be useful for reducing clutter when there are a lot of gizmos visible.",316],["Procedural Mesh Geometry",317],["The Mesh class gives script access to an object's mesh geometry, allowing meshes to be created or modified at runtime. This technique is useful for graphical effects (eg, stretching or squashing an object) but can also be useful in level design and optimisation. The following sections explain the basic details of how a mesh is constructed along with an exploration of the API and an example.",317],["Anatomy of a Mesh.",317],["Using the Mesh Class.",317],["See Also",317],["Mesh scripting class.",317],["Importing Meshes.",317],["Generic Animations in Mecanim",318],["The full power of Mecanim is most evident when you are working with humanoid animations. However, non-humanoid animations are also supported although without the avatar system and other features. In Mecanim terminology, non-humanoid animations are referred to as Generic Animations.",318],["To start working with a generic skeleton, go to the Rig tab in the FBX importer and choose Generic from the Animation Type menu.",318],["Root node in generic animations",318],["While in the case of humanoid animations, we have the knowledge about the center of mass and orientation, in the case of Generic animations, the skeleton can be arbitrary, and we need to specify a reference bone, or the \"root node\". Selecting the root node allows us to establish correspondence between animation clips for a generic model, and blend properly between animations that are not \"in place\". The root node is also essential for separating animation of bones relative to reach other and motion of the root in the world (controlled from OnAnimatorMove).",318],["Generic Functions",319],["Some functions in the script reference (for example, the various GetComponent functions) are listed with",319],["a variant that has a letter T or a type name in angle brackets after the function name:",319],["//C#",319],["void FuncName();",319],["//JS",319],["function FuncName.(): T;",319],["These are known as generic functions. The significance they have for scripting is that you get",319],["to specify the types of parameters and/or the return type when you call the function. In JavaScript, this can",319],["be used to get around the limitations of dynamic typing:-",319],["// The type is correctly inferred since it is defined in the function call.",319],["//In C#",319],["var obj = GetComponent();",319],["//In JS",319],["var obj = GetComponent.();",319],["In C#, it can save a lot of keystrokes and casts:",319],["Rigidbody rb = go.GetComponent();",319],["// ...as compared with:",319],["Rigidbody rb = (Rigidbody) go.GetComponent(typeof(Rigidbody));",319],["Any function that has a generic variant listed on its script reference page will allow this",319],["special calling syntax.",319],["Global Illumination Quickstart",320],["Unity now uses Enlighten real-time global illumination (GI) technology. Enlighten by Geomerics is the industry’s most advanced dynamic lighting technology. It is the only product with proven ability to deliver real-time global illumination on today’s and tomorrow’s consoles and gaming platforms.",320],["Enlighten gives you lightmaps, lightprobes and cubemaps that are updated in real-time during the game. This is achieved by only computing the bounced lighting, and, because this is generally low-frequency (smooth), it can be stored in low resolution lightmaps. When using the dynamic GI features the direct lighting and shadows are computed in real-time using the GPU.",320],["In order to prepare for real-time updates a precompute stage is necessary. This means that the lighting bounces between static geometry only. Dynamic geometry such as characters are lit by using dynamically updated light probes. This means that light bounce from dynamic geometry unto static geometry is not supported.",320],["Enlighten also supports baking static lightmaps at high resolution comprising: direct lighting with shadows, indirect bounced lighting and ambient occlusion. This is similar to the previous lightmapping support (3.x, 4.x).",320],["You can pick and choose when to use the dynamic and/or baked features. This is simply done by marking the sources of the light appropriately. The integration seamlessly blends the dynamic and baked contributions.",320],["Finally, Enlighten supports dynamic GI on mobile devices.",320],["GI workflow",320],["We have moved away from the \"bake button\" mode and will provide workflows that are more interactive. We have the following workflows:",320],["Iterative",320],["In this mode the Editor picks up all the scene changes and updates the precomputed data for dynamic GI and baked data automatically. Any change that will affect either dynamic or baked lighting triggers jobs to \"repair\" the data needed to show the current lighting setup.",320],["Snapshot",320],["Mode that allows freezing the current lightmapping state in the form of a snapshot. The snapshot data will live in the Assets folder and can be versioned.",320],["Prerequisites",320],["Currently the following combinations of shaders and rendering paths work:",320],["Standard shader and Deferred",320],["Surface shaders and:",320],["Legacy Deferred (two pass)",320],["Forward as long as fullforwardshadows surface param is explicitly used (see Writing Surface Shaders)",320],["The Scene View Lighting mode is now serialized per project with the layout. Make sure that it's turned on in the Scene View Control Bar (it's the light icon).",320],["Cookbook",320],["Baked lightmaps",320],["Use the Standard shader in the materials.",320],["Switch to the deferred rendering path in the Camera and/or Player Settings.",320],["Open the Lighting window.",320],["Enable Continuous Baking.",320],["Switch to the Object tab.",320],["Select MeshRenderer's you want to be lightmapped and mark them as Lightmap Static.",320],["Add a Light and enable shadows.",320],["Assign a Texture to the Emission slot in a material using the Standard shader.",320],["Note: currently using the Standard shader doesn't allow to switch to dynamic emission. To try it out you can use surface shaders with legacy deferred rendering path.",320],["Dynamic lightmaps",320],["Change light's Lightmapping mode from the default Static GI and Realtime to Dynamic GI.",320],["Change Sky Light Color and Sky Light Intensity in the Lighting window.",320],["Alternatively assign a skybox material in the slot.",320],["Note: skylight affects just the dynamic lightmaps and dynamic light probes.",320],["Optimizing the precomputation stage",320],["The Enlighten precomputation stage is divided into two main stages: 1) Pre-compute, 2) Baking. The two stages use different texel densities (resolutions).",320],["The precompute resolution needs to be low so it can be updated quickly, usually a texel per meter is sufficient. This is fine as it only contains bounced light, which is low frequency.",320],["The baked resolution needs to be higher as it also contains (shadowed) direct lighting, which is high frequency. However, the indirect component of the baked lightmaps uses an upsampled version of the dynamic output (the low resolution textures). So one of the more important things to get right is the precompute and baked resolutions.",320],["In order for the stages to be fast and lean you need to do the following things:",320],["Set the global Realtime Resolution.",320],["Set the global Baked Resolution.",320],["Set per instance Scale in Lightmap.",320],["Make sure your UVs are laid out nicely with as few charts as possible.",320],["Detail geometry, such as foliage and debris, should not be marked Lightmap Static. Such instances should be lit with light probes instead. In a later release we will add a simpler way to light such props.",320],["A chart is another term for a UV island, so a set of UVs that are connected with edges (directly or indirectly).",320],["Visualisations",320],["Different GI specific visualisations are available via the dropdown in the upper left corner of the scene view.",320],["Textured",320],["Shows the scene fully lit.",320],["Lightmap Resolution",320],["Shows fully lit scene with baking resolution overlaid on top. Note: because of the modes below, this mode is superfluous and will be removed.",320],["GI - Albedo*",320],["Shows the albedo used in the calculation of the dynamic GI.",320],["GI - Emissive*",320],["Shows the emissiveness used in the calculation of the dynamic GI.",320],["GI - Charts*",320],["Shows the optimized UV layout used in the calculation of the dynamic GI. It is automatically generated by the precompute. It is available as soon as the Instance precompute stage is completed.",320],["GI - Irradiance*",320],["Shows the indirect lighting only (the contents of dynamic lightmaps).",320],["GI - Directional*",320],["Shows directional information matching the irradiance. Note: not used in the current Alpha.",320],["GI - Systems*",320],["The precompute stage will automatically subdivide the scene into systems based on proximity and settings. This is mainly done to allow multithreading and optimizations in the precompute. This visualization shows the systems with different colors.",320],["GI - Clustering (Advanced)",320],["The GI algorithm uses a clustering of the geometry in the scene as input to the dynamic indirect lighting calculation. The clustering provides the light environment for all light that is not directly emitted from a light source. Each cluster acts as an indirect emitter emitting a single light intensity and color. Too large clusters will result in light/shadow bleeding and too small clusters slow down the precompute. This visulization shows how the geometry has been clustered by assigning a different color to each cluster.",320],["GI - Lit Clustering (Advanced)",320],["As above but colors the clusters with the lighting they currently emit.",320],["GI - Static Lightmap*",320],["Shows the baked lightmaps only.",320],[") When an object is selected a 2D view showing the respective texture is displayed and a wireframe rendering of the UVs of the selected instance is overlaid on top. It shows the system (see GI - Systems) the object belongs to.",320],["The resolution overlay can be toggled via Show Resolution in the Lightmap Display window (visible when the Lightmapping window is open).",320],["Light probes",320],["The workflow for placing light probes is the same as in Light Probes docs.",320],["Light probes contain only dynamic lighting (lights marked as Dynamic GI, skylight and emissive materials marked dynamic).",320],["Note: baked light probes are in the works.",320],["Light settings",320],["\"Realtime\" with indirect scale set to 0 : all lighting is realtime, same as the old \"Realtime Only\".",320],["\"Realtime\" with indirect scale greater than 0 : direct lighting realtime, indirect in dynamic lightmaps and light probes.",320],["\"Mixed\" : direct lighting and indirect in baked lightmaps, dynamic objects still lit by that light, same as the old \"Auto\".",320],["\"Baked\" : direct lighting and indirect in baked lightmaps, the light skipped early when preparing data for culling, does not affect any dynamic objects and is never available in uniforms holding light data for an object.",320],["Runtime",320],["The Enlighten runtime is running asynchronously and whenever new lighting data is ready it is updated.",320],["Changes to lights marked as \"Dynamic GI\" and skylight changes are picked up automatically. Material updates (such as albedo and emissive changes to materials) can be triggered via the DynamicGI API.",320],["The reason for material changes not being picked up automatically at runtime is that tracking this data is currently expensive. We are looking into ways to make it cheap and automatic.",320],["Known issues",320],["Issues with existing features:",320],["Some combinations of shaders and rendering paths are not functional (see Prerequisites).",320],["Bleeding albedo/emissive.",320],["Library/GiCache is never purged, so might need to be cleared manually.",320],["Scale In Lightmap equal 0 not fully respected (the instance should not get lightmaps, just influence the surroundings).",320],["Emission from the Standard shader is only baked.",320],["Skybox needs to use the RenderFX/Skybox shader and the textures used need to have Read/Write Enabled.",320],["Emissive is clamped at 1.0f.",320],["Limitations",320],["Not yet implemented features:",320],["Terrain support.",320],["Baked probes.",320],["Baked environment lighting.",320],["Baked area lights.",320],["Baked transparency.",320],["Baked cookies.",320],["Dynamic cubemaps.",320],["Skinned Mesh Renderers support.",320],["Additive scene loading.",320],["Cache Server for GI data sharing.",320],["Dynamic visibility for point and spot lights (direct lighting for GI is not shadowed). This limitation does not affect baking.",320],["Graphics",321],["The visual side of Unity including Cameras and Lighting.",321],["Graphics Command Buffers",322],["It is possible to extend Unity's rendering pipeline with so called \"command buffers\".",322],["A command buffer holds list of rendering commands (\"set render target, draw mesh, ...\"), and can be",322],["set to execute at various points during camera rendering.",322],["For example, you could render some additional objects into deferred shading",322],["G-buffer after all regular objects are done.",322],["A high-level overview of how cameras render scene in Unity is shown below. At each point",322],["marked with a green dot, you can add command buffers to execute your commands.",322],["See CommandBuffer scripting class and",322],["CameraEvent enum for more details.",322],["Example Code",322],["Sample project demonstrating some of the techniques possible with command buffers:",322],["RenderingCommandBuffers.zip**.",322],["Blurry Refractions",322],["This scene shows a \"blurry refraction\" technique.",322],["After opaque objects and skybox is rendered, current image is copied into a temporary",322],["render target, blurred and set up a global shader property. Shader on the glass",322],["object then samples that blurred image, with UV coordinates offset based on a normal map",322],["to simulate refraction.",322],["This is similar to what shader GrabPass does does, except",322],["you can do more custom things (in this case, blurring).",322],["Custom Area Lights in Deferred Shading",322],["This scene shows an implementation of \"custom deferred lights\": sphere-shaped lights,",322],["and tube-shaped lights.",322],["After regular deferred shading light pass is done,",322],["a sphere is drawn for each custom light, with a shader that computes illumination",322],["and adds it to the lighting buffer.",322],["Decals in Deferred Shading",322],["This scene shows a basic implementation of \"deferred decals\".",322],["The idea is: after G-buffer is done, draw each \"shape\" of the decal (a box)",322],["and modify the G-buffer contents. This is very similar to how lights are done",322],["in deferred shading, except instead of accumulating the lighting",322],["we modify the G-buffer textures.",322],["Each decal is implemented as a box here, and affects any geometry inside the box",322],["volume.",322],["Graphics Hardware Capabilities and Emulation",323],["The graphics hardware that ultimately renders a scene is controlled by specialised graphic programs called Shaders. The capabilities of the hardware have improved over time in phases and the general set of features that were introduced with each phase is known as a Shader Model. Progressive shader models have added support for longer shader programs, more powerful branching instructions and other features and these improvements have enabled parallel improvements in the graphics of games.",323],["Unity currently supports two shader models in the targeted graphics hardware: Shader Model 2 and Shader Model 3.  The graphics cards that implement each model are listed below.",323],["Shader Model 2",323],["NVIDIA cards since 2003 (GeForce FX)",323],["AMD cards since 2004 (Radeon 9500)",323],["Intel cards since 2005 (GMA 900)",323],["Mobile: OpenGL ES 2.0-3.0",323],["Consoles: Xbox 360, Xbox One, PS3, PS4, Wii U.",323],["Shader Model 3",323],["NVIDIA cards since 2004 (GeForce 6)",323],["AMD cards since 2005 (Radeon X1300)",323],["Intel cards since 2006 (GMA X3000)",323],["Mobile: OpenGL ES 3.0",323],["Consoles: Xbox 360, Xbox One, PS3, PS4, Wii U.",323],["Additionally, some graphic effects used in Unity (in the Image Effects, for example) also require depth textures. Cards with support for depth textures include:-",323],["Shader Model 2",323],["NVIDIA cards since 2004 (GeForce 6)",323],["AMD cards since 2004 (Radeon 9500)",323],["Intel cards since 2006 (GMA X3000)",323],["Mobile: OpenGL ES 2.0-3.0 with depth texture support",323],["Consoles: Xbox 360, Xbox One, PS3, PS4, Wii U.",323],["Shader Model 3",323],["NVIDIA cards since 2004 (GeForce 6)",323],["AMD cards since 2005 (Radeon X1300)",323],["Intel cards since 2006 (GMA X3000)",323],["Mobile: OpenGL ES 2.0-3.0 with depth texture support",323],["Consoles: Xbox 360, Xbox One, PS3, PS4, Wii U.",323],["Shader Model Emulation",323],["Unity allows you to render your game using an inferior shader model to the best that your graphics card offers. This is useful during development to see how the graphics will look on an older machine.",323],["To choose the Graphics emulation level, go to Edit &gt; Graphics Emulation on the menu. Note that the available options change depending on the platform you are currently targeting in the Build Settings. For desktop machines, Shader Model 2 and Shader Model 3 will appear as emulation options, while on mobiles, you can only choose OpenGL ES 2.0. You can restore the full capabilities of your hardware by choosing No Emulation. If your development machine doesn't support a particular shader model then it will be hidden on the Graphics Emulation menu.",323],["Although emulation is a quick way to check out graphics capabilities, you should still test your game on actual hardware. This will reveal real performance and any peculiarities of the specific graphics card, operating system or driver version.",323],["Graphics Questions",324],["The following is a list of common graphics-related questions in Unity and how to accomplish them.",324],["There is an excellent tutorial for creating textures, including color, bump, specular, and reflection mapping here.",324],["Graphics Overview",325],["Understanding graphics is key to adding an element of depth to your game, this section covers the graphical features of Unity such as lighting and rendering.",325],["Graphics Reference",326],["This section goes into more depth about Unity's graphical features.",326],["GUI Basics (Legacy)",327],["This section will explain the bare necessities for scripting Controls with UnityGUI.",327],["Making Controls with UnityGUI",327],["UnityGUI controls make use of a special function called OnGUI(). The OnGUI() function gets called every frame as long as the containing script is enabled - just like the Update() function.",327],["GUI controls themselves are very simple in structure. This structure is evident in the following example.",327],["/* Example level loader */",327],["// JavaScript",327],["function OnGUI () {",327],["// Make a background box",327],["GUI.Box (Rect (10,10,100,90), \"Loader Menu\");",327],["// Make the first button. If it is pressed, Application.Loadlevel (1) will be executed",327],["if (GUI.Button (Rect (20,40,80,20), \"Level 1\")) {",327],["Application.LoadLevel (1);",327],["// Make the second button.",327],["if (GUI.Button (Rect (20,70,80,20), \"Level 2\")) {",327],["Application.LoadLevel (2);",327],["//C#",327],["using UnityEngine;",327],["using System.Collections;",327],["public class GUITest : MonoBehaviour {",327],["void OnGUI () {",327],["// Make a background box",327],["GUI.Box(new Rect(10,10,100,90), \"Loader Menu\");",327],["// Make the first button. If it is pressed, Application.Loadlevel (1) will be executed",327],["if(GUI.Button(new Rect(20,40,80,20), \"Level 1\")) {",327],["Application.LoadLevel(1);",327],["// Make the second button.",327],["if(GUI.Button(new Rect(20,70,80,20), \"Level 2\")) {",327],["Application.LoadLevel(2);",327],["This example is a complete, functional level loader. If you copy/paste this script and attach it a GameObject, you'll see the following menu appear in when you enter Play Mode:",327],["Let's take a look at the details of the example code:",327],["The first GUI line, GUI.Box (Rect (10,10,100,90), \"Loader Menu\"); displays a Box Control with the header text \"Loader Menu\". It follows the typical GUI Control declaration scheme which we'll explore momentarily.",327],["The next GUI line is a Button Control declaration. Notice that it is slightly different from the Box Control declaration. Specifically, the entire Button declaration is placed inside an if statement. When the game is running and the Button is clicked, this if statement returns true and any code inside the if block is executed.",327],["Since the OnGUI() code gets called every frame, you don't need to explicitly create or destroy GUI controls. The line that declares the Control is the same one that creates it. If you need to display Controls at specific times, you can use any kind of scripting logic to do so.",327],["/* Flashing button example */",327],["// JavaScript",327],["function OnGUI () {",327],["if (Time.time % 2 &lt; 1) {",327],["if (GUI.Button (Rect (10,10,200,20), \"Meet the flashing button\")) {",327],["print (\"You clicked me!\");",327],["// C#",327],["using UnityEngine;",327],["using System.Collections;",327],["public class GUITest : MonoBehaviour {",327],["void OnGUI () {",327],["if (Time.time % 2 &lt; 1) {",327],["if (GUI.Button (new Rect (10,10,200,20), \"Meet the flashing button\")) {",327],["print (\"You clicked me!\");",327],["Here, GUI.Button() only gets called every other second, so the button will appear and disappear. Naturally, the user can only click it when the button is visible.",327],["As you can see, you can use any desired logic to control when GUI Controls are displayed and functional. Now we will explore the details of each Control's declaration.",327],["Anatomy of a Control",327],["There are three key pieces of information required when declaring a GUI Control:",327],["Type (Position, Content)",327],["Observe that this structure is a function with two arguments. We'll explore the details of this structure now.",327],["Type",327],["Type is the Control Type, and is declared by calling a function in Unity's GUI class or the GUILayout class, which is discussed at length in the Layout Modes section of the Guide. For example, GUI.Label() will create a non-interactive label. All the different control types are explained later, in the Controls section of the Guide.",327],["Position",327],["The Position is the first argument in any GUI Control function. The argument itself is provided with a Rect() function. Rect() defines four properties: left-most position, top-most position, total width, total height. All of these values are provided in integers, which correspond to pixel values. All UnityGUI controls work in Screen Space, which is the resolution of the published player in pixels.",327],["The coordinate system is top-left based. Rect(10, 20, 300, 100) defines a Rectangle that starts at coordinates: 10,20 and ends at coordinates 310,120. It is worth repeating that the second pair of values in Rect() are total width and height, not the coordinates where the controls end. This is why the example mentioned above ends at 310,120 and not 300,100.",327],["You can use the Screen.width and Screen.height properties to get the total dimensions of the screen space available in the player. The following example may help clarify how this is done:",327],["/* Screen.width &amp; Screen.height example */",327],["// JavaScript",327],["function OnGUI () {",327],["GUI.Box (Rect (0,0,100,50), \"Top-left\");",327],["GUI.Box (Rect (Screen.width - 100,0,100,50), \"Top-right\");",327],["GUI.Box (Rect (0,Screen.height - 50,100,50), \"Bottom-left\");",327],["GUI.Box (Rect (Screen.width - 100,Screen.height - 50,100,50), \"Bottom-right\");",327],["// C#",327],["using UnityEngine;",327],["using System.Collections;",327],["public class GUITest : MonoBehaviour {",327],["void OnGUI(){",327],["GUI.Box (new Rect (0,0,100,50), \"Top-left\");",327],["GUI.Box (new Rect (Screen.width - 100,0,100,50), \"Top-right\");",327],["GUI.Box (new Rect (0,Screen.height - 50,100,50), \"Bottom-left\");",327],["GUI.Box (new Rect (Screen.width - 100,Screen.height - 50,100,50), \"Bottom-right\");",327],["Content",327],["The second argument for a GUI Control is the actual content to be displayed with the Control. Most often you will want to display some text or an image on your Control. To display text, pass a string as the Content argument like this:",327],["/* String Content example */",327],["// JavaScript",327],["function OnGUI () {",327],["GUI.Label (Rect (0,0,100,50), \"This is the text string for a Label Control\");",327],["// C#",327],["using UnityEngine;",327],["using System.Collections;",327],["public class GUITest : MonoBehaviour {",327],["void OnGUI () {",327],["GUI.Label (new Rect (0,0,100,50), \"This is the text string for a Label Control\");",327],["To display an image, declare a Texture2D public variable, and pass the variable name as the content argument like this:",327],["/* Texture2D Content example */",327],["// JavaScript",327],["var controlTexture : Texture2D;",327],["function OnGUI () {",327],["GUI.Label (Rect (0,0,100,50), controlTexture);",327],["// C#",327],["public Texture2D controlTexture;",327],["...",327],["void OnGUI () {",327],["GUI.Label (new Rect (0,0,100,50), controlTexture);",327],["Here is an example closer to a real-world scenario:",327],["/* Button Content examples */",327],["// JavaScript",327],["var icon : Texture2D;",327],["function OnGUI () {",327],["if (GUI.Button (Rect (10,10, 100, 50), icon)) {",327],["print (\"you clicked the icon\");",327],["if (GUI.Button (Rect (10,70, 100, 20), \"This is text\")) {",327],["print (\"you clicked the text button\");",327],["// C#",327],["using UnityEngine;",327],["using System.Collections;",327],["public class GUITest : MonoBehaviour {",327],["public Texture2D icon;",327],["void OnGUI () {",327],["if (GUI.Button (new Rect (10,10, 100, 50), icon)) {",327],["print (\"you clicked the icon\");",327],["if (GUI.Button (new Rect (10,70, 100, 20), \"This is text\")) {",327],["print (\"you clicked the text button\");",327],["There is a third option which allows you to display images and text together in a GUI Control. You can provide a GUIContent object as the Content argument, and define the string and image to be displayed within the GUIContent.",327],["/* Using GUIContent to display an image and a string */",327],["// JavaScript",327],["var icon : Texture2D;",327],["function OnGUI () {",327],["GUI.Box (Rect (10,10,100,50), GUIContent(\"This is text\", icon));",327],["// C#",327],["using UnityEngine;",327],["using System.Collections;",327],["public class GUITest : MonoBehaviour {",327],["public Texture2D icon;",327],["void OnGUI () {",327],["GUI.Box (new Rect (10,10,100,50), new GUIContent(\"This is text\", icon));",327],["You can also define a Tooltip in the GUIContent, and display it elsewhere in the GUI when the mouse hovers over it.",327],["/* Using GUIContent to display a tooltip */",327],["// JavaScript",327],["function OnGUI () {",327],["// This line feeds \"This is the tooltip\" into GUI.tooltip",327],["GUI.Button (Rect (10,10,100,20), GUIContent (\"Click me\", \"This is the tooltip\"));",327],["// This line reads and displays the contents of GUI.tooltip",327],["GUI.Label (Rect (10,40,100,20), GUI.tooltip);",327],["// C#",327],["using UnityEngine;",327],["using System.Collections;",327],["public class GUITest : MonoBehaviour {",327],["void OnGUI () {",327],["// This line feeds \"This is the tooltip\" into GUI.tooltip",327],["GUI.Button (new Rect (10,10,100,20), new GUIContent (\"Click me\", \"This is the tooltip\"));",327],["// This line reads and displays the contents of GUI.tooltip",327],["GUI.Label (new Rect (10,40,100,20), GUI.tooltip);",327],["If you're daring you can also use GUIContent to display a string, an icon, and a tooltip!",327],["/* Using GUIContent to display an image, a string, and a tooltip */",327],["// JavaScript",327],["var icon : Texture2D;",327],["function OnGUI () {",327],["GUI.Button (Rect (10,10,100,20), GUIContent (\"Click me\", icon, \"This is the tooltip\"));",327],["GUI.Label (Rect (10,40,100,20), GUI.tooltip);",327],["// C#",327],["using UnityEngine;",327],["using System.Collections;",327],["public class GUITest : MonoBehaviour {",327],["public Texture2D icon;",327],["void OnGUI () {",327],["GUI.Button (new Rect (10,10,100,20), new GUIContent (\"Click me\", icon, \"This is the tooltip\"));",327],["GUI.Label (new Rect (10,40,100,20), GUI.tooltip);",327],["The script reference page for the GUIContent constructor has some examples of its use.",327],["Controls (Legacy)",328],["Control Types",328],["There are a number of different GUI Controls that you can create. This section lists all of the available display and interactive Controls. There are other GUI functions that affect layout of Controls, which are described in the Layout section of the Guide.",328],["The Label is non-interactive. It is for display only. It cannot be clicked or otherwise moved. It is best for displaying information only.",328],["/* GUI.Label example */",328],["// JavaScript",328],["function OnGUI () {",328],["GUI.Label (Rect (25, 25, 100, 30), \"Label\");",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["void OnGUI () {",328],["GUI.Label (new Rect (25, 25, 100, 30), \"Label\");",328],["The Button is a typical interactive button. It will respond a single time when clicked, no matter how long the mouse remains depressed. The response occurs as soon as the mouse button is released.",328],["Basic Usage",328],["In UnityGUI, Buttons will return true when they are clicked. To execute some code when a Button is clicked, you wrap the the GUI.Button function in an if statement. Inside the if statement is the code that will be executed when the Button is clicked.",328],["/* GUI.Button example */",328],["// JavaScript",328],["function OnGUI () {",328],["if (GUI.Button (Rect (25, 25, 100, 30), \"Button\")) {",328],["// This code is executed when the Button is clicked",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["void OnGUI () {",328],["if (GUI.Button (new Rect (25, 25, 100, 30), \"Button\")) {",328],["// This code is executed when the Button is clicked",328],["RepeatButton is a variation of the regular Button. The difference is, RepeatButton will respond every frame that the mouse button remains depressed. This allows you to create click-and-hold functionality.",328],["Basic Usage",328],["In UnityGUI, RepeatButtons will return true for every frame that they are clicked. To execute some code while the Button is being clicked, you wrap the the GUI.RepeatButton function in an if statement. Inside the if statement is the code that will be executed while the RepeatButton remains clicked.",328],["/* GUI.RepeatButton example */",328],["// JavaScript",328],["function OnGUI () {",328],["if (GUI.RepeatButton (Rect (25, 25, 100, 30), \"RepeatButton\")) {",328],["// This code is executed every frame that the RepeatButton remains clicked",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["void OnGUI () {",328],["if (GUI.RepeatButton (new Rect (25, 25, 100, 30), \"RepeatButton\")) {",328],["// This code is executed every frame that the RepeatButton remains clicked",328],["The TextField Control is an interactive, editable single-line field containing a text string.",328],["Basic Usage",328],["The TextField will always display a string. You must provide the string to be displayed in the TextField. When edits are made to the string, the TextField function will return the edited string.",328],["/* GUI.TextField example */",328],["// JavaScript",328],["var textFieldString = \"text field\";",328],["function OnGUI () {",328],["textFieldString = GUI.TextField (Rect (25, 25, 100, 30), textFieldString);",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private string textFieldString = \"text field\";",328],["void OnGUI () {",328],["textFieldString = GUI.TextField (new Rect (25, 25, 100, 30), textFieldString);",328],["The TextArea Control is an interactive, editable multi-line area containing a text string.",328],["Basic Usage",328],["The TextArea will always display a string. You must provide the string to be displayed in the TextArea. When edits are made to the string, the TextArea function will return the edited string.",328],["/* GUI.TextArea example */",328],["// JavaScript",328],["var textAreaString = \"text area\";",328],["function OnGUI () {",328],["textAreaString = GUI.TextArea (Rect (25, 25, 100, 30), textAreaString);",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private string textAreaString = \"text area\";",328],["void OnGUI () {",328],["textAreaString = GUI.TextArea (new Rect (25, 25, 100, 30), textAreaString);",328],["The Toggle Control creates a checkbox with a persistent on/off state. The user can change the state by clicking on it.",328],["Basic Usage",328],["The Toggle on/off state is represented by a true/false boolean. You must provide the boolean as a parameter to make the Toggle represent the actual state. The Toggle function will return a new boolean value if it is clicked. In order to capture this interactivity, you must assign the boolean to accept the return value of the Toggle function.",328],["/* GUI.Toggle example */",328],["// JavaScript",328],["var toggleBool = true;",328],["function OnGUI () {",328],["toggleBool = GUI.Toggle (Rect (25, 25, 100, 30), toggleBool, \"Toggle\");",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private bool toggleBool = true;",328],["void OnGUI () {",328],["toggleBool = GUI.Toggle (new Rect (25, 25, 100, 30), toggleBool, \"Toggle\");",328],["The Toolbar Control is essentially a row of Buttons. Only one of the Buttons on the Toolbar can be active at a time, and it will remain active until a different Button is clicked. This behavior emulates the behavior of a typical Toolbar. You can define an arbitrary number of Buttons on the Toolbar.",328],["Basic Usage",328],["The active Button in the Toolbar is tracked through an integer. You must provide the integer as an argument in the function. To make the Toolbar interactive, you must assign the integer to the return value of the function. The number of elements in the content array that you provide will determine the number of Buttons that are shown in the Toolbar.",328],["/* GUI.Toolbar example */",328],["// JavaScript",328],["var toolbarInt = 0;",328],["var toolbarStrings : String[] = [\"Toolbar1\", \"Toolbar2\", \"Toolbar3\"];",328],["function OnGUI () {",328],["toolbarInt = GUI.Toolbar (Rect (25, 25, 250, 30), toolbarInt, toolbarStrings);",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private int toolbarInt = 0;",328],["private string[] toolbarStrings = {\"Toolbar1\", \"Toolbar2\", \"Toolbar3\"};",328],["void OnGUI () {",328],["toolbarInt = GUI.Toolbar (new Rect (25, 25, 250, 30), toolbarInt, toolbarStrings);",328],["The SelectionGrid Control is a multi-row Toolbar. You can determine the number of columns and rows in the grid. Only one Button can be active at time.",328],["Basic Usage",328],["The active Button in the SelectionGrid is tracked through an integer. You must provide the integer as an argument in the function. To make the SelectionGrid interactive, you must assign the integer to the return value of the function. The number of elements in the content array that you provide will determine the number of Buttons that are shown in the SelectionGrid. You also can dictate the number of columns through the function arguments.",328],["/* GUI.SelectionGrid example */",328],["// JavaScript",328],["var selectionGridInt : int = 0;",328],["var selectionStrings : String[] = [\"Grid 1\", \"Grid 2\", \"Grid 3\", \"Grid 4\"];",328],["function OnGUI () {",328],["selectionGridInt = GUI.SelectionGrid (Rect (25, 25, 100, 30), selectionGridInt, selectionStrings, 2);",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private int selectionGridInt = 0;",328],["private string[] selectionStrings = {\"Grid 1\", \"Grid 2\", \"Grid 3\", \"Grid 4\"};",328],["void OnGUI () {",328],["selectionGridInt = GUI.SelectionGrid (new Rect (25, 25, 300, 60), selectionGridInt, selectionStrings, 2);",328],["The HorizontalSlider Control is a typical horizontal sliding knob that can be dragged to change a value between predetermined min and max values.",328],["Basic Usage",328],["The position of the Slider knob is stored as a float. To display the position of the knob, you provide that float as one of the arguments in the function. There are two additional values that determine the minimum and maximum values. If you want the slider knob to be adjustable, assign the slider value float to be the return value of the Slider function.",328],["/* Horizontal Slider example */",328],["// JavaScript",328],["var hSliderValue : float = 0.0;",328],["function OnGUI () {",328],["hSliderValue = GUI.HorizontalSlider (Rect (25, 25, 100, 30), hSliderValue, 0.0, 10.0);",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private float hSliderValue = 0.0f;",328],["void OnGUI () {",328],["hSliderValue = GUI.HorizontalSlider (new Rect (25, 25, 100, 30), hSliderValue, 0.0f, 10.0f);",328],["The VerticalSlider Control is a typical vertical sliding knob that can be dragged to change a value between predetermined min and max values.",328],["Basic Usage",328],["The position of the Slider knob is stored as a float. To display the position of the knob, you provide that float as one of the arguments in the function. There are two additional values that determine the minimum and maximum values. If you want the slider knob to be adjustable, assign the slider value float to be the return value of the Slider function.",328],["/* Vertical Slider example */",328],["// JavaScript",328],["var vSliderValue : float = 0.0;",328],["function OnGUI () {",328],["vSliderValue = GUI.VerticalSlider (Rect (25, 25, 100, 30), vSliderValue, 10.0, 0.0);",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private float vSliderValue = 0.0f;",328],["void OnGUI () {",328],["vSliderValue = GUI.VerticalSlider (new Rect (25, 25, 100, 30), vSliderValue, 10.0f, 0.0f);",328],["The HorizontalScrollbar Control is similar to a Slider Control, but visually similar to Scrolling elements for web browsers or word processors. This control is used to navigate the ScrollView Control.",328],["Basic Usage",328],["Horizontal Scrollbars are implemented identically to Horizontal Sliders with one exception: There is an additional argument which controls the width of the Scrollbar knob itself.",328],["/* Horizontal Scrollbar example */",328],["// JavaScript",328],["var hScrollbarValue : float;",328],["function OnGUI () {",328],["hScrollbarValue = GUI.HorizontalScrollbar (Rect (25, 25, 100, 30), hScrollbarValue, 1.0, 0.0, 10.0);",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private float hScrollbarValue;",328],["void OnGUI () {",328],["hScrollbarValue = GUI.HorizontalScrollbar (new Rect (25, 25, 100, 30), hScrollbarValue, 1.0f, 0.0f, 10.0f);",328],["The VerticalScrollbar Control is similar to a Slider Control, but visually similar to Scrolling elements for web browsers or word processors. This control is used to navigate the ScrollView Control.",328],["Basic Usage",328],["Vertical Scrollbars are implemented identically to Vertical Sliders with one exception: There is an additional argument which controls the height of the Scrollbar knob itself.",328],["/* Vertical Scrollbar example */",328],["// JavaScript",328],["var vScrollbarValue : float;",328],["function OnGUI () {",328],["vScrollbarValue = GUI. VerticalScrollbar (Rect (25, 25, 100, 30), vScrollbarValue, 1.0, 10.0, 0.0);",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private float vScrollbarValue;",328],["void OnGUI () {",328],["vScrollbarValue = GUI. VerticalScrollbar (new Rect (25, 25, 100, 30), vScrollbarValue, 1.0f, 10.0f, 0.0f);",328],["ScrollViews are Controls that display a viewable area of a much larger set of Controls.",328],["Basic Usage",328],["ScrollViews require two Rects as arguments. The first Rect defines the location and size of the viewable ScrollView area on the screen. The second Rect defines the size of the space contained inside the viewable area. If the space inside the viewable area is larger than the viewable area, Scrollbars will appear as appropriate. You must also assign and provide a 2D Vector which stores the position of the viewable area that is displayed.",328],["/* ScrollView example */",328],["// JavaScript",328],["var scrollViewVector : Vector2 = Vector2.zero;",328],["var innerText : String = \"I am inside the ScrollView\";",328],["function OnGUI () {",328],["// Begin the ScrollView",328],["scrollViewVector = GUI.BeginScrollView (Rect (25, 25, 100, 100), scrollViewVector, Rect (0, 0, 400, 400));",328],["// Put something inside the ScrollView",328],["innerText = GUI.TextArea (Rect (0, 0, 400, 400), innerText);",328],["// End the ScrollView",328],["GUI.EndScrollView();",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private Vector2 scrollViewVector = Vector2.zero;",328],["private string innerText = \"I am inside the ScrollView\";",328],["void OnGUI () {",328],["// Begin the ScrollView",328],["scrollViewVector = GUI.BeginScrollView (new Rect (25, 25, 100, 100), scrollViewVector, new Rect (0, 0, 400, 400));",328],["// Put something inside the ScrollView",328],["innerText = GUI.TextArea (new Rect (0, 0, 400, 400), innerText);",328],["// End the ScrollView",328],["GUI.EndScrollView();",328],["Windows are drag-able containers of Controls. They can receive and lose focus when clicked. Because of this, they are implemented slightly differently from the other Controls. Each Window has an id number, and its contents are declared inside a separate function that is called when the Window has focus.",328],["Basic Usage",328],["Windows are the only Control that require an additional function to work properly. You must provide an id number and a function name to be executed for the Window. Inside the Window function, you create your actual behaviors or contained Controls.",328],["/* Window example */",328],["// JavaScript",328],["var windowRect : Rect = Rect (20, 20, 120, 50);",328],["function OnGUI () {",328],["windowRect = GUI.Window (0, windowRect, WindowFunction, \"My Window\");",328],["function WindowFunction (windowID : int) {",328],["// Draw any Controls inside the window here",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private Rect windowRect = new Rect (20, 20, 120, 50);",328],["void OnGUI () {",328],["windowRect = GUI.Window (0, windowRect, WindowFunction, \"My Window\");",328],["void WindowFunction (int windowID) {",328],["// Draw any Controls inside the window here",328],["To detect if the user did any action in the GUI (clicked a button, dragged a slider, etc), read the GUI.changed value from your script. This gets set to true when the user has done something, making it easy to validate the user input.",328],["A common scenario would be for a Toolbar, where you want to change a specific value based on which Button in the Toolbar was clicked. You don't want to assign the value in every call to OnGUI(), only when one of the Buttons has been clicked.",328],["/* GUI.changed example */",328],["// JavaScript",328],["private var selectedToolbar : int = 0;",328],["private var toolbarStrings = [\"One\", \"Two\"];",328],["function OnGUI () {",328],["// Determine which button is active, whether it was clicked this frame or not",328],["selectedToolbar = GUI.Toolbar (Rect (50, 10, Screen.width - 100, 30), selectedToolbar, toolbarStrings);",328],["// If the user clicked a new Toolbar button this frame, we'll process their input",328],["if (GUI.changed)",328],["print (\"The toolbar was clicked\");",328],["if (selectedToolbar == 0)",328],["print (\"First button was clicked\");",328],["else",328],["print (\"Second button was clicked\");",328],["// C#",328],["using UnityEngine;",328],["using System.Collections;",328],["public class GUITest : MonoBehaviour {",328],["private int selectedToolbar = 0;",328],["private string[] toolbarStrings = {\"One\", \"Two\"};",328],["void OnGUI () {",328],["// Determine which button is active, whether it was clicked this frame or not",328],["selectedToolbar = GUI.Toolbar (new Rect (50, 10, Screen.width - 100, 30), selectedToolbar, toolbarStrings);",328],["// If the user clicked a new Toolbar button this frame, we'll process their input",328],["if (GUI.changed)",328],["Debug.Log(\"The toolbar was clicked\");",328],["if (0 == selectedToolbar)",328],["Debug.Log(\"First button was clicked\");",328],["else",328],["Debug.Log(\"Second button was clicked\");",328],["GUI.changed will return true if any GUI Control placed before it was manipulated by the user.",328],["Customization (Legacy)",329],["Customizing your GUI Controls",329],["Functional Controls are necessary for your game, and the appearance of those controls is very important for the aesthetics of your game. In UnityGUI, you can fine-tune the appearance of your Controls with many details. Control appearances are dictated with GUIStyles. By default, when you create a Control without defining a GUIStyle, Unity's default GUIStyle is applied. This style is internal in Unity and can be used in published games for quick prototyping, or if you choose not to stylize your Controls.",329],["When you have a large number of different GUIStyles to work with, you can define them all within a single GUISkin. A GUISkin is no more than a collection of GUIStyles.",329],["How Styles change the look of your GUI Controls",329],["GUIStyles are designed to mimic Cascading Style Sheets (CSS) for web browsers. Many different CSS methodologies have been adapted, including differentiation of individual state properties for styling, and separation between the content and the appearance.",329],["Where the Control defines the content, the Style defines the appearance. This allows you to create combinations like a functional Toggle which looks like a normal Button.",329],["The difference between Skins and Styles",329],["As stated earlier, GUISkins are a collection of GUIStyles. Styles define the appearance of a GUI Control. You do not have to use a Skin if you want to use a Style.",329],["A single GUISkin shown in the Inspector - observe that it contains multiple GUIStyles",329],["Working with Styles",329],["All GUI Control functions have an optional last parameter: the GUIStyle to use for displaying the Control. If this is omitted, Unity's default GUIStyle will be used. This works internally by applying the name of the control type as a string, so GUI.Button() uses the \"button\" style, GUI.Toggle() uses the \"toggle\" style, etc. You can override the default GUIStyle for a control by specifying it as the last parameter.",329],["/* Override the default Control Style with a different style in the UnityGUI default Styles */",329],["// JavaScript",329],["function OnGUI () {",329],["// Make a label that uses the \"box\" GUIStyle.",329],["GUI.Label (Rect (0,0,200,100), \"Hi - I'm a label looking like a box\", \"box\");",329],["// Make a button that uses the \"toggle\" GUIStyle",329],["GUI.Button (Rect (10,140,180,20), \"This is a button\", \"toggle\");",329],["// C#",329],["using UnityEngine;",329],["using System.Collections;",329],["public class GUITest : MonoBehaviour {",329],["void OnGUI () {",329],["// Make a label that uses the \"box\" GUIStyle.",329],["GUI.Label (new Rect (0,0,200,100), \"Hi - I'm a label looking like a box\", \"box\");",329],["// Make a button that uses the \"toggle\" GUIStyle",329],["GUI.Button (new Rect (10,140,180,20), \"This is a button\", \"toggle\");",329],["Making a public variable GUIStyle",329],["When you declare a public GUIStyle variable, all elements of the Style will show up in the Inspector. You can edit all of the different values there.",329],["/* Overriding the default Control Style with one you've defined yourself */",329],["// JavaScript",329],["var customButton : GUIStyle;",329],["function OnGUI () {",329],["// Make a button. We pass in the GUIStyle defined above as the style to use",329],["GUI.Button (Rect (10,10,150,20), \"I am a Custom Button\", customButton);",329],["// C#",329],["using UnityEngine;",329],["using System.Collections;",329],["public class GUITest : MonoBehaviour {",329],["public GUIStyle customButton;",329],["void OnGUI () {",329],["// Make a button. We pass in the GUIStyle defined above as the style to use",329],["GUI.Button (new Rect (10,10,150,20), \"I am a Custom Button\", customButton);",329],["Changing the different style elements",329],["When you have declared a GUIStyle, you can modify that style in the Inspector. There are a great number of States you can define, and apply to any type of Control.",329],["Any Control State must be assigned a Background Color before the specified Text Color will be applied.",329],["For more information about individual GUIStyles, please read the GUIStyle Component Reference page.",329],["Working with Skins",329],["For more complicated GUI systems, it makes sense to keep a collection of styles in one place. This is what a GUISkin does. A GUISkin contains multiple different Styles, essentially providing a complete face-lift to all GUI Controls.",329],["Creating a new GUISkin",329],["To create a GUISkin, select Assets-&gt;Create-&gt;GUI Skin from the menu bar. This will create a GUI Skin in your Project Folder. Select it to see all GUIStyles defined by the Skin in the Inspector.",329],["Applying the skin to a GUI",329],["To use a skin you've created, assign it to GUI.skin in your OnGUI() function.",329],["/* Make a property containing a reference to the skin you want to use */",329],["// JavaScript",329],["var mySkin : GUISkin;",329],["function OnGUI () {",329],["// Assign the skin to be the one currently used.",329],["GUI.skin = mySkin;",329],["// Make a button. This will get the default \"button\" style from the skin assigned to mySkin.",329],["GUI.Button (Rect (10,10,150,20), \"Skinned Button\");",329],["// C#",329],["using UnityEngine;",329],["using System.Collections;",329],["public class GUITest : MonoBehaviour {",329],["public GUISkin mySkin;",329],["void OnGUI () {",329],["// Assign the skin to be the one currently used.",329],["GUI.skin = mySkin;",329],["// Make a button. This will get the default \"button\" style from the skin assigned to mySkin.",329],["GUI.Button (new Rect (10,10,150,20), \"Skinned Button\");",329],["You can switch skins as much as you like throughout a single OnGUI() call.",329],["/* Example of switching skins in the same OnGUI() call */",329],["// JavaScript",329],["var mySkin : GUISkin;",329],["var toggle = true;",329],["function OnGUI () {",329],["// Assign the skin to be the one currently used.",329],["GUI.skin = mySkin;",329],["// Make a toggle. This will get the \"button\" style from the skin assigned to mySkin.",329],["toggle = GUI.Toggle (Rect (10,10,150,20), toggle, \"Skinned Button\", \"button\");",329],["// Assign the currently skin to be Unity's default.",329],["GUI.skin = null;",329],["// Make a button. This will get the default \"button\" style from the built-in skin.",329],["GUI.Button (Rect (10,35,150,20), \"Built-in Button\");",329],["// C#",329],["using UnityEngine;",329],["using System.Collections;",329],["public class GUITest : MonoBehaviour {",329],["public GUISkin mySkin;",329],["private bool toggle = true;",329],["void OnGUI () {",329],["// Assign the skin to be the one currently used.",329],["GUI.skin = mySkin;",329],["// Make a toggle. This will get the \"button\" style from the skin assigned to mySkin.",329],["toggle = GUI.Toggle (new Rect (10,10,150,20), toggle, \"Skinned Button\", \"button\");",329],["// Assign the currently skin to be Unity's default.",329],["GUI.skin = null;",329],["// Make a button. This will get the default \"button\" style from the built-in skin.",329],["GUI.Button (new Rect (10,35,150,20), \"Built-in Button\");",329],["Changing GUI Font Size",329],["This example will show you how to dynamically change the font size through code.",329],["First create a new project in Unity. Then make a C# script called Fontsize.cs and paste the following code in:",329],["// C# example",329],["using UnityEngine;",329],["using System.Collections;",329],["public class Fontsize : MonoBehaviour",329],["void OnGUI ()",329],["//Set the GUIStyle style to be label",329],["GUIStyle style = GUI.skin.GetStyle (\"label\");",329],["//Set the style font size to increase and decrease over time",329],["style.fontSize = (int)(20.0f + 10.0f * Mathf.Sin (Time.time));",329],["//Create a label and display with the current settings",329],["GUI.Label (new Rect (10, 10, 200, 80), \"Hello World!\");",329],["Save the script and attach it to an empty GameObject, click play to see the font loop through increasing and decreasing in size over time. You may notice that the font does not smoothly change size, this is becauses there is not an infinite number of font sizes.",329],["This specific example requires that the default font (Arial) is loaded and marked as dynamic. You cannot change the size of any font that is not marked as dynamic.",329],["Extending GUI (Legacy)",330],["There are a number of ways to leverage and extend Unity GUI to meet your needs. Controls can be mixed and created, and you have a lot of leverage into dictating how user input into the GUI is processed.",330],["Compound Controls",330],["There might be situations in your GUI where two types of Controls always appear together. For example, maybe you are creating a Character Creation screen, with several Horizontal Sliders. All of those Sliders need a Label to identify them, so the player knows what they are adjusting. In this case, you could partner every call to GUI.Label() with a call to GUI.HorizontalSlider(), or you could create a Compound Control which includes both a Label and a Slider together.",330],["/* Label and Slider Compound Control */",330],["// JavaScript",330],["var mySlider : float = 1.0;",330],["function OnGUI () {",330],["mySlider = LabelSlider (Rect (10, 100, 100, 20), mySlider, 5.0, \"Label text here\");",330],["function LabelSlider (screenRect : Rect, sliderValue : float, sliderMaxValue : float, labelText : String) : float {",330],["GUI.Label (screenRect, labelText);",330],["screenRect.x += screenRect.width; // &lt;- Push the Slider to the end of the Label",330],["sliderValue = GUI.HorizontalSlider (screenRect, sliderValue, 0.0, sliderMaxValue);",330],["return sliderValue;",330],["// C#",330],["using UnityEngine;",330],["using System.Collections;",330],["public class GUITest : MonoBehaviour {",330],["private float mySlider = 1.0f;",330],["void OnGUI () {",330],["mySlider = LabelSlider (new Rect (10, 100, 100, 20), mySlider, 5.0f, \"Label text here\");",330],["float LabelSlider (Rect screenRect, float sliderValue, float sliderMaxValue, string labelText) {",330],["GUI.Label (screenRect, labelText);",330],["// &lt;- Push the Slider to the end of the Label",330],["screenRect.x += screenRect.width;",330],["sliderValue = GUI.HorizontalSlider (screenRect, sliderValue, 0.0f, sliderMaxValue);",330],["return sliderValue;",330],["In this example, calling LabelSlider() and passing the correct arguments will provide a Label paired with a Horizontal Slider. When writing Compound Controls, you have to remember to return the correct value at the end of the function to make it interactive.",330],["Static Compound Controls",330],["By using Static functions, you can create an entire collection of your own Compound Controls that are self-contained. This way, you do not have to declare your function in the same script you want to use it.",330],["/* This script is called CompoundControls */",330],["// JavaScript",330],["static function LabelSlider (screenRect : Rect, sliderValue : float, sliderMaxValue : float, labelText : String) : float {",330],["GUI.Label (screenRect, labelText);",330],["screenRect.x += screenRect.width; // &lt;- Push the Slider to the end of the Label",330],["sliderValue = GUI.HorizontalSlider (screenRect, sliderValue, 0.0, sliderMaxValue);",330],["return sliderValue;",330],["// C#",330],["using UnityEngine;",330],["using System.Collections;",330],["public class CompoundControls : MonoBehaviour {",330],["public static float LabelSlider (Rect screenRect, float sliderValue, float sliderMaxValue, string labelText) {",330],["GUI.Label (screenRect, labelText);",330],["// &lt;- Push the Slider to the end of the Label",330],["screenRect.x += screenRect.width;",330],["sliderValue = GUI.HorizontalSlider (screenRect, sliderValue, 0.0f, sliderMaxValue);",330],["return sliderValue;",330],["By saving the above example in a script called CompoundControls, you can call the LabelSlider() function from any other script by simply typing CompoundControls.LabelSlider() and providing your arguments.",330],["Elaborate Compound Controls",330],["You can get very creative with Compound Controls. They can be arranged and grouped in any way you like. The following example creates a re-usable RGB Slider.",330],["/* RGB Slider Compound Control */",330],["// JavaScript",330],["var myColor : Color;",330],["function OnGUI () {",330],["myColor = RGBSlider (Rect (10,10,200,10), myColor);",330],["function RGBSlider (screenRect : Rect, rgb : Color) : Color {",330],["rgb.r = GUI.HorizontalSlider (screenRect, rgb.r, 0.0, 1.0);",330],["screenRect.y += 20; // &lt;- Move the next control down a bit to avoid overlapping",330],["rgb.g = GUI.HorizontalSlider (screenRect, rgb.g, 0.0, 1.0);",330],["screenRect.y += 20; // &lt;- Move the next control down a bit to avoid overlapping",330],["rgb.b = GUI.HorizontalSlider (screenRect, rgb.b, 0.0, 1.0);",330],["return rgb;",330],["// C#",330],["using UnityEngine;",330],["using System.Collections;",330],["public class GUITest : MonoBehaviour {",330],["public Color myColor;",330],["void OnGUI () {",330],["myColor = RGBSlider (new Rect (10,10,200,10), myColor);",330],["Color RGBSlider (Rect screenRect, Color rgb) {",330],["rgb.r = GUI.HorizontalSlider (screenRect, rgb.r, 0.0f, 1.0f);",330],["// &lt;- Move the next control down a bit to avoid overlapping",330],["screenRect.y += 20;",330],["rgb.g = GUI.HorizontalSlider (screenRect, rgb.g, 0.0f, 1.0f);",330],["// &lt;- Move the next control down a bit to avoid overlapping",330],["screenRect.y += 20;",330],["rgb.b = GUI.HorizontalSlider (screenRect, rgb.b, 0.0f, 1.0f);",330],["return rgb;",330],["Now let's build Compound Controls on top of each other, in order to demonstrate how Compound Controls can be used within other Compound Controls. To do this, we will create a new RGB Slider like the one above, but we will use the LabelSlider to do so. This way we'll always have a Label telling us which slider corresponds to which color.",330],["/* RGB Label Slider Compound Control */",330],["// JavaScript",330],["var myColor : Color;",330],["function OnGUI () {",330],["myColor = RGBLabelSlider (Rect (10,10,200,20), myColor);",330],["function RGBLabelSlider (screenRect : Rect, rgb : Color) : Color {",330],["rgb.r = CompoundControls.LabelSlider (screenRect, rgb.r, 1.0, \"Red\");",330],["screenRect.y += 20; // &lt;- Move the next control down a bit to avoid overlapping",330],["rgb.g = CompoundControls.LabelSlider (screenRect, rgb.g, 1.0, \"Green\");",330],["screenRect.y += 20; // &lt;- Move the next control down a bit to avoid overlapping",330],["rgb.b = CompoundControls.LabelSlider (screenRect, rgb.b, 1.0, \"Blue\");",330],["return rgb;",330],["// C#",330],["using UnityEngine;",330],["using System.Collections;",330],["public class GUITest : MonoBehaviour {",330],["public Color myColor;",330],["void OnGUI () {",330],["myColor = RGBSlider (new Rect (10,10,200,30), myColor);",330],["Color RGBSlider (Rect screenRect, Color rgb) {",330],["rgb.r = CompoundControls.LabelSlider (screenRect, rgb.r, 1.0f, \"Red\");",330],["// &lt;- Move the next control down a bit to avoid overlapping",330],["screenRect.y += 20;",330],["rgb.g = CompoundControls.LabelSlider (screenRect, rgb.g, 1.0f, \"Green\");",330],["// &lt;- Move the next control down a bit to avoid overlapping",330],["screenRect.y += 20;",330],["rgb.b = CompoundControls.LabelSlider (screenRect, rgb.b, 1.0f, \"Blue\");",330],["return rgb;",330],["Layout Modes (Legacy)",331],["Fixed Layout vs Automatic Layout",331],["There are two different modes you can use to arrange and organize your GUIs: Fixed and Automatic. Up until now, every UnityGUI example provided in this guide has used Fixed Layout. To use Automatic Layout, write GUILayout instead of GUI when calling control functions. You do not have to use one Layout mode over the other, and you can use both modes at once in the same OnGUI() function.",331],["Fixed Layout makes sense to use when you have a pre-designed interface to work from. Automatic Layout makes sense to use when you don't know how many elements you need up front, or don't want to worry about hand-positioning each Control. For example, if you are creating a number of different buttons based on Save Game files, you don't know exactly how many buttons will be drawn. In this case Automatic Layout might make more sense. It is really dependent on the design of your game and how you want to present your interface.",331],["There are two key differences when using Automatic Layout:",331],["GUILayout is used instead of GUI",331],["No Rect() function is required for Automatic Layout Controls",331],["/* Two key differences when using Automatic Layout */",331],["// JavaScript",331],["function OnGUI () {",331],["// Fixed Layout",331],["GUI.Button (Rect (25,25,100,30), \"I am a Fixed Layout Button\");",331],["// Automatic Layout",331],["GUILayout.Button (\"I am an Automatic Layout Button\");",331],["// C#",331],["using UnityEngine;",331],["using System.Collections;",331],["public class GUITest : MonoBehaviour {",331],["void OnGUI () {",331],["// Fixed Layout",331],["GUI.Button (new Rect (25,25,100,30), \"I am a Fixed Layout Button\");",331],["// Automatic Layout",331],["GUILayout.Button (\"I am an Automatic Layout Button\");",331],["Arranging Controls",331],["Depending on which Layout Mode you're using, there are different hooks for controlling where your Controls are positioned and how they are grouped together. In Fixed Layout, you can put different Controls into Groups. In Automatic Layout, you can put different Controls into Areas, Horizontal Groups, and Vertical Groups",331],["Fixed Layout - Groups",331],["Groups are a convention available in Fixed Layout Mode. They allow you to define areas of the screen that contain multiple Controls. You define which Controls are inside a Group by using the GUI.BeginGroup() and GUI.EndGroup() functions. All Controls inside a Group will be positioned based on the Group's top-left corner instead of the screen's top-left corner. This way, if you reposition the group at runtime, the relative positions of all Controls in the group will be maintained.",331],["As an example, it's very easy to center multiple Controls on-screen.",331],["/* Center multiple Controls on the screen using Groups */",331],["// JavaScript",331],["function OnGUI () {",331],["// Make a group on the center of the screen",331],["GUI.BeginGroup (Rect (Screen.width / 2 - 50, Screen.height / 2 - 50, 100, 100));",331],["// All rectangles are now adjusted to the group. (0,0) is the topleft corner of the group.",331],["// We'll make a box so you can see where the group is on-screen.",331],["GUI.Box (Rect (0,0,100,100), \"Group is here\");",331],["GUI.Button (Rect (10,40,80,30), \"Click me\");",331],["// End the group we started above. This is very important to remember!",331],["GUI.EndGroup ();",331],["// C#",331],["using UnityEngine;",331],["using System.Collections;",331],["public class GUITest : MonoBehaviour {",331],["void OnGUI () {",331],["// Make a group on the center of the screen",331],["GUI.BeginGroup (new Rect (Screen.width / 2 - 50, Screen.height / 2 - 50, 100, 100));",331],["// All rectangles are now adjusted to the group. (0,0) is the topleft corner of the group.",331],["// We'll make a box so you can see where the group is on-screen.",331],["GUI.Box (new Rect (0,0,100,100), \"Group is here\");",331],["GUI.Button (new Rect (10,40,80,30), \"Click me\");",331],["// End the group we started above. This is very important to remember!",331],["GUI.EndGroup ();",331],["You can also nest multiple Groups inside each other. When you do this, each group has its contents clipped to its parent's space.",331],["/* Using multiple Groups to clip the displayed Contents */",331],["// JavaScript",331],["var bgImage : Texture2D; // background image that is 256 x 32",331],["var fgImage : Texture2D; // foreground image that is 256 x 32",331],["var playerEnergy = 1.0; // a float between 0.0 and 1.0",331],["function OnGUI () {",331],["// Create one Group to contain both images",331],["// Adjust the first 2 coordinates to place it somewhere else on-screen",331],["GUI.BeginGroup (Rect (0,0,256,32));",331],["// Draw the background image",331],["GUI.Box (Rect (0,0,256,32), bgImage);",331],["// Create a second Group which will be clipped",331],["// We want to clip the image and not scale it, which is why we need the second Group",331],["GUI.BeginGroup (Rect (0,0,playerEnergy * 256, 32));",331],["// Draw the foreground image",331],["GUI.Box (Rect (0,0,256,32), fgImage);",331],["// End both Groups",331],["GUI.EndGroup ();",331],["GUI.EndGroup ();",331],["// C#",331],["using UnityEngine;",331],["using System.Collections;",331],["public class GUITest : MonoBehaviour {",331],["// background image that is 256 x 32",331],["public Texture2D bgImage;",331],["// foreground image that is 256 x 32",331],["public Texture2D fgImage;",331],["// a float between 0.0 and 1.0",331],["public float playerEnergy = 1.0f;",331],["void OnGUI () {",331],["// Create one Group to contain both images",331],["// Adjust the first 2 coordinates to place it somewhere else on-screen",331],["GUI.BeginGroup (new Rect (0,0,256,32));",331],["// Draw the background image",331],["GUI.Box (new Rect (0,0,256,32), bgImage);",331],["// Create a second Group which will be clipped",331],["// We want to clip the image and not scale it, which is why we need the second Group",331],["GUI.BeginGroup (new Rect (0,0,playerEnergy * 256, 32));",331],["// Draw the foreground image",331],["GUI.Box (new Rect (0,0,256,32), fgImage);",331],["// End both Groups",331],["GUI.EndGroup ();",331],["GUI.EndGroup ();",331],["Automatic Layout - Areas",331],["Areas are used in Automatic Layout mode only. They are similar to Fixed Layout Groups in functionality, as they define a finite portion of the screen to contain GUILayout Controls. Because of the nature of Automatic Layout, you will nearly always use Areas.",331],["In Automatic Layout mode, you do not define the area of the screen where the Control will be drawn at the Control level. The Control will automatically be placed at the upper-leftmost point of its containing area. This might be the screen. You can also create manually-positioned Areas. GUILayout Controls inside an area will be placed at the upper-leftmost point of that area.",331],["/* A button placed in no area, and a button placed in an area halfway across the screen. */",331],["// JavaScript",331],["function OnGUI () {",331],["GUILayout.Button (\"I am not inside an Area\");",331],["GUILayout.BeginArea (Rect (Screen.width/2, Screen.height/2, 300, 300));",331],["GUILayout.Button (\"I am completely inside an Area\");",331],["GUILayout.EndArea ();",331],["// C#",331],["using UnityEngine;",331],["using System.Collections;",331],["public class GUITest : MonoBehaviour {",331],["void OnGUI () {",331],["GUILayout.Button (\"I am not inside an Area\");",331],["GUILayout.BeginArea (new Rect (Screen.width/2, Screen.height/2, 300, 300));",331],["GUILayout.Button (\"I am completely inside an Area\");",331],["GUILayout.EndArea ();",331],["Notice that inside an Area, Controls with visible elements like Buttons and Boxes will stretch their width to the full length of the Area.",331],["Automatic Layout - Horizontal and Vertical Groups",331],["When using Automatic Layout, Controls will by default appear one after another from top to bottom. There are plenty of occasions you will want finer level of control over where your Controls are placed and how they are arranged. If you are using the Automatic Layout mode, you have the option of Horizontal and Vertical Groups.",331],["Like the other layout Controls, you call separate functions to start or end these groups. The specific functions are GUILayout.BeginHoriztontal(), GUILayout.EndHorizontal(), GUILayout.BeginVertical(), and GUILayout.EndVertical().",331],["Any Controls inside a Horizontal Group will always be laid out horizontally. Any Controls inside a Vertical Group will always be laid out vertically. This sounds plain until you start nesting groups inside each other. This allows you to arrange any number of controls in any imaginable configuration.",331],["/* Using nested Horizontal and Vertical Groups */",331],["// JavaScript",331],["var sliderValue = 1.0;",331],["var maxSliderValue = 10.0;",331],["function OnGUI()",331],["// Wrap everything in the designated GUI Area",331],["GUILayout.BeginArea (Rect (0,0,200,60));",331],["// Begin the singular Horizontal Group",331],["GUILayout.BeginHorizontal();",331],["// Place a Button normally",331],["if (GUILayout.RepeatButton (\"Increase max\\nSlider Value\"))",331],["maxSliderValue += 3.0 * Time.deltaTime;",331],["// Arrange two more Controls vertically beside the Button",331],["GUILayout.BeginVertical();",331],["GUILayout.Box(\"Slider Value: \" + Mathf.Round(sliderValue));",331],["sliderValue = GUILayout.HorizontalSlider (sliderValue, 0.0, maxSliderValue);",331],["// End the Groups and Area",331],["GUILayout.EndVertical();",331],["GUILayout.EndHorizontal();",331],["GUILayout.EndArea();",331],["// C#",331],["using UnityEngine;",331],["using System.Collections;",331],["public class GUITest : MonoBehaviour {",331],["private float sliderValue = 1.0f;",331],["private float maxSliderValue = 10.0f;",331],["void OnGUI()",331],["// Wrap everything in the designated GUI Area",331],["GUILayout.BeginArea (new Rect (0,0,200,60));",331],["// Begin the singular Horizontal Group",331],["GUILayout.BeginHorizontal();",331],["// Place a Button normally",331],["if (GUILayout.RepeatButton (\"Increase max\\nSlider Value\"))",331],["maxSliderValue += 3.0f * Time.deltaTime;",331],["// Arrange two more Controls vertically beside the Button",331],["GUILayout.BeginVertical();",331],["GUILayout.Box(\"Slider Value: \" + Mathf.Round(sliderValue));",331],["sliderValue = GUILayout.HorizontalSlider (sliderValue, 0.0f, maxSliderValue);",331],["// End the Groups and Area",331],["GUILayout.EndVertical();",331],["GUILayout.EndHorizontal();",331],["GUILayout.EndArea();",331],["Using GUILayoutOptions to define some controls",331],["You can use GUILayoutOptions to override some of the Automatic Layout parameters. You do this by providing the options as the final parameters of the GUILayout Control.",331],["Remember in the Areas example above, where the button stretches its width to 100% of the Area width? We can override that if we want to.",331],["/* Using GUILayoutOptions to override Automatic Layout Control properties */",331],["//JavaScript",331],["function OnGUI () {",331],["GUILayout.BeginArea (Rect (100, 50, Screen.width-200, Screen.height-100));",331],["GUILayout.Button (\"I am a regular Automatic Layout Button\");",331],["GUILayout.Button (\"My width has been overridden\", GUILayout.Width (95));",331],["GUILayout.EndArea ();",331],["// C#",331],["using UnityEngine;",331],["using System.Collections;",331],["public class GUITest : MonoBehaviour {",331],["void OnGUI () {",331],["GUILayout.BeginArea (new Rect (100, 50, Screen.width-200, Screen.height-100));",331],["GUILayout.Button (\"I am a regular Automatic Layout Button\");",331],["GUILayout.Button (\"My width has been overridden\", GUILayout.Width (95));",331],["GUILayout.EndArea ();",331],["For a full list of possible GUILayoutOptions, please read the GUILayoutOption Scripting Reference page.",331],["Legacy GUI",332],["This has now been replaced with the new UI.",332],["Legacy GUI Scripting Guide",333],["The legacy GUI system has been replaced with the new UI System. The legacy GUI is still functional but is not recommended to use in your game or application. The legacy GUI system is still used in Unity's own interface and can be used to create custom editor GUI.",333],["The legacy GUI allows you to create a wide variety of functional GUIs using code. Rather than creating a GUI object, manually positioning it, and then writing a script that handles its functionality, you can do everything at once with just a few lines of code. The code produces GUI controls that are instantiated, positioned and handled with a single function call.",333],["This section explains how to use GUI both in your game and in extensions to the Unity editor.",333],["High Dynamic Range Rendering",334],["In standard rendering, the red, green and blue values for a pixel are each represented by a fraction in the range 0..1, where 0 represents zero intensity and 1 represents the maximum intensity for the display device. While this is straightforward to use, it doesn't accurately reflect the way that lighting works in a real life scene. The human eye tends to adjust to local lighting conditions, so an object that looks white in a dimly lit room may in fact be less bright than an object that looks grey in full daylight. Additionally, the eye is more sensitive to brightness differences at the low end of the range than at the high end.",334],["More convincing visual effects can be achieved if the rendering is adapted to let the ranges of pixel values more accurately reflect the light levels that would be present in a real scene. Although these values will ultimately need to be mapped back to the range available on the display device, any intermediate calculations (such as Unity's image effects) will give more authentic results. Allowing the internal representation of the graphics to use values outside the 0..1 range is the essence of High Dynamic Range (HDR) rendering.",334],["Working with HDR",334],["HDR is enabled separately for each camera using a setting on the Camera component:",334],["When HDR is active, the scene is rendered into an HDR image buffer which can accommodate pixel values outside the 0..1 range. This buffer is then postprocessed using image effects such as HDR bloom. The tonemapping image effect is what converts the HDR image into the standard low dynamic range (LDR) image to be sent for display. The conversion to LDR must be applied at some point in the image effect pipeline but it need not be the final step if LDR-only image effects are to be applied afterwards. For convenience, some image effects can automatically convert to LDR after applying an HDR effect (see Scripting below).",334],["Tonemapping",334],["Tonemapping is the process of mapping HDR values back into the LDR range. There are many different techniques, and what is good for one project may not be the best for another. A variety of tonemapping image effects have been included in Unity. To use them select Assets &gt; Import Package &gt; Effects select the camera in the scene then select Component &gt; Image Effects &gt;ToneMapping a detailed description of the tonemapping types can be found in the image effects documentation.",334],["HDR Bloom and Glow",334],["Using HDR allows for much more control in post processing. LDR bloom has an unfortunate side effect of blurring many areas of a scene even if their pixel intensity is less than 1.0. By using HDR it is possible to only bloom areas where the intensity is greater than one. This leads to a much more desiarable outcome with only super bright elements of a scene bleeding into neighboring pixels. The built in 'Bloom and Lens Flares' image effect now also supports HDR. To attach it to a camera select Assets &gt; Import Package &gt; Effects select the camera in the scene then select Component &gt; Image Effects &gt; Bloom a detailed description of the 'Bloom' effect can be found in the image effects documentation.",334],["Advantages of HDR",334],["Colors not being lost in high intensity areas",334],["Better bloom and glow support",334],["Reduction of banding in low frequency lighting areas",334],["Disadvantages of HDR",334],["Uses Floating Point buffers (rendering is slower and requires more VRAM)",334],["No hardware anti-aliasing support (but you can use Anti-Aliasing image effect to smooth out the edges)",334],["Not supported on all hardware",334],["Usage notes",334],["Forward Rendering",334],["In forward rendering mode HDR is only supported if you have an image effect present. This is due to performance considerations. If you have no image effect present then no tone mapping will exist and intensity truncation will occur. In this situation the scene will be rendered directly to the backbuffer where HDR is not supported.",334],["Deferred Rendering",334],["In HDR mode the light prepass buffer is also allocated as a floating point buffer. This reduces banding in the lighting buffer. HDR is supported in deferred rendering even if no image effects are present.",334],["Scripting",334],["The ImageEffectTransformsToLDR attribute can be added to an image effect script to indicate that the target buffer should be in LDR instead of HDR. Essentially, this means that a script can automatically convert to LDR after applying its HDR image effect.",334],["Hierarchy",335],["The Hierarchy contains every GameObject in the current Scene. Some of these are direct instances of asset files like 3D models, and others are instances of Prefabs, custom objects that will make up much of your game. You can select objects in the Hierarchy and drag one object onto another to make use of Parenting (see below). As objects are added and removed in the scene, they will appear and disappear from the Hierarchy as well.",335],["Parenting",335],["Unity uses a concept called Parenting. To make any GameObject the child of another, drag the desired child onto the desired parent in the Hierarchy. A child will inherit the movement and rotation of its parent. You can use a parent object's foldout arrow to show or hide its children as necessary. Alt-clicking the parent's foldout arrow will show or hide all descendent GameObjects of the parent, in addition to the immediate children.",335],["To learn more about parenting, see the Transform Component page.",335],["How do I Import Alpha Textures?",336],["Unity uses straight alpha blending. Hence, you need to expand the color layers... The alpha channel in Unity will be read from the first alpha channel in the Photoshop file.",336],["Setting Up",336],["Before doing this, install these alpha utility photoshop actions: AlphaUtility.atn.zip",336],["After installing, your Action Palette should contain a folder called AlphaUtility:",336],["Getting Alpha Right",336],["Let's assume you have your alpha texture on a transparent layer inside photoshop. Something like this:",336],["Duplicate the layer",336],["Select the lowest layer. This will be source for the dilation of the background.",336],["Select Layer-&gt;Matting-&gt;Defringe and apply with the default properties",336],["Run the \"Dilate Many\" action a couple of times. This will expand the background into a new layer. ",336],["Select all the dilation layers and merge them with Command-E ",336],["Create a solid color layer at the bottom of your image stack. This should match the general color of your document (in this case, greenish). Note that without this layer Unity will take alpha from merged transparency of all layers.",336],["Now we need to copy the transparency into the alpha layer.",336],["Set the selection to be the contents of your main layer by Command-clicking on it in the Layer Palette.",336],["Switch to the channels palette.",336],["Create a new channel from the transparency.",336],["Save your PSD file - you are now ready to go.",336],["Extra",336],["Note that if your image contains transparency (after merging layers), then Unity will take alpha from merged transparency of all layers and it will ignore Alpha masks. A workaround for that is to create a layer with solid color as described in item 6 under \"Getting Alpha Right\"",336],["Art Asset Best Practice Guide",337],["Unity supports textured 3D models from a variety of programs or sources. This short guide has been put together by games artists with developers at Unity, to help you create assets that work better and more efficiently in your Unity project.",337],["Scale &amp; Units",337],["Set your system and project units for your software to work consistently with Unity e.g. Metric.",337],["Working to scale can be important for both lighting and physics simulation.",337],["Be aware that, for example, the Max system unit default is inches and Maya is centimetres.",337],["Unity has different scaling for FBX and 3D application files on import; check the FBX import scale setting in Inspector.",337],["If in doubt export a metre cube with your scene to match in Unity.",337],["Animation frame rate defaults can be different in packages, is a good idea to set consistently across your pipeline, for example 30fps.",337],["Files &amp; Objects",337],["Name objects in your scene sensibly and uniquely. This can help you locate and troubleshoot specific meshes in your project.",337],["Avoid special characters *()?\"#$ etc.",337],["Use simple but descriptive names for both objects and files (allow for duplication later).",337],["Keep your hierarchies as simple as you can.",337],["With big projects in your 3D application, consider having a working file outside your Unity project directory. This can often save time consuming updates and importing unnecessary data.",337],["Mesh",337],["Build with an efficient topology. Use polygons only where you need them.",337],["Optimise your geometry if it has too many polygons. Many character models need to be intelligently optimised or even rebuilt by an artist especially if sourced/built from:",337],["3D capture data",337],["Poser",337],["Zbrush",337],["Other high density Nurbs/Patch models designed for render",337],["Where you can afford them, evenly spaced polygons in buildings, landscape and architecture will help spread lighting and avoid awkward kinks.",337],["Avoid really long thin triangles.",337],["The method you use to construct objects can have a massive affect on the number of polygons, especially when not optimised. In this digram the same shape mesh has 156 triangles on the right and 726 on the left. 726 may not sound like a great deal of polygons, but if this is used 40 times in a level, you will really start to see the savings. A good rule of thumb is often to start simple and add detail where needed. It's always easier to add polygon than take them away.",337],["Textures",337],["If you author your textures to a power of two (e.g. 512x512 or 256x1024), the textures will be more efficient and won't need rescaling at build time. You can use up to 4096x4096 pixels, (although 2048x2048 is the highest available on many graphics cards/platforms). Search online for expert advice on creating good textures, but some of these guidelines can help you get the most efficient results from your project:",337],["Work with a high-resolution source file outside your unity project (such as a PSD or Gimp file). You can always downsize from source but not the other way round.",337],["Use the texture resolution output you require in your scene (save a copy, for example a 256x256 optimised PNG or a TGA file). You can make a judgement based on where the texture will be seen and where it is mapped.",337],["Store your output texture files together in your Unity project (for example: \\Assets\\textures).",337],["Make sure your 3D working file is referring to the same textures for consistency when you save/export.",337],["Make use of the available space in your texture, but be aware of different materials requiring different parts of the same texture. You can end up using/loading that texture multiple times.",337],["For alpha (cutout) and elements that may require different shaders, separate the textures. For example, the single texture below (left) has been replaced by three smaller textures below (right)",337],["Make use of tiling textures (which seamlessly repeat) then you can use better resolution repeating over space.",337],["Remove easily noticeable repeating elements from your bitmap, and be careful with contrast. If you want to add details use decals and objects to break up the repeats.",337],["Unity takes care of compression for the output platform, so unless your source is already a JPG of the correct resolution it's better to use a lossless format for your textures.",337],["When creating a texture page from photographs, reduce the page to individual modular sections that can repeat. For example, you don't need twelve of the same windows using up texture space. That way you can have more pixel detail for that one window.",337],["Materials",337],["Organise and name the materials in your scene. This way you can find and edit your materials in Unity more easily when they've imported",337],["You can choose to create materials in Unity from either:",337],["&lt;modelname&gt; material name&gt; or:",337],["&lt;texture name&gt; - make sure you are aware of which you want.",337],["Settings for materials in your native package will not all be imported to Unity:",337],["Diffuse Colour, Diffuse texture and Names are usually supported",337],["Shader model, specular, normal, other secondary textures and substance material settings will not be recognised/imported",337],["Import/Export",337],["Unity can use two types of files: Saved 3D application files and Exported 3D formats. Which you decide to use can be quite important:",337],["Saved application files",337],["Unity can import, through conversion: Max, Maya, Blender, Cinema4D, Modo, Lightwave &amp; cheetah3D files, e.g. .MAX, .MB, .MA etc.",337],["see more in Importing Objects.",337],["Advantages:",337],["Quick iteration process (save and Unity updates)",337],["Simple initially",337],["Disadvantages:",337],["A licensed copy of that software must be installed on all machines using the Unity project",337],["Files can become bloated with unnecessary data",337],["Big files can slow Unity updates",337],["Less Validation and harder to troubleshoot problems",337],["Exported 3D formats",337],["Unity can also read FBX, OBJ, 3DS, DAE &amp; DXF files. For a general export guide you can refer to  this section.",337],["Advantages:",337],["Only export the data you need",337],["Verify your data (re-import into 3D package) before Unity",337],["Generally smaller files",337],["Encourages modular approach",337],["Disadvantages:",337],["Can be slower pipeline or prototyping and iterations",337],["Easier to lose track of versions between source (working file) and game data (exported FBX)",337],["How do I Use Normal Maps?",338],["Normal maps are grayscale images that you use as a height map on your objects in order to give an appearance of raised or recessed surfaces. Assuming you have a model that looks like this:",338],["We want to make the light parts of the object appear raised.",338],["Draw a grayscale height map of your texture in Photoshop. White is high, black is low. Something like this:",338],["Save the image next to your main texture.",338],["In Unity, select the image and  enable Generate Normal Map in the Import Settings in the Inspector:",338],["In the Material Inspector of your model, select 'Bumped Diffuse' from the Shader drop-down:",338],["Drag your texture from the Project window to the 'Bumpmap' texture slot:",338],["Your object now has a normal map applied:",338],["Hints",338],["To make the bumps more noticable, either use the Bumpyness slider in the Texture Import Settings or blur the texture in Photoshop. Experiment with both approaches to get a feel for it.",338],["FBX export guide",339],["Unity supports FBX files which can be generated from many popular 3D applications. Use these guidelines to help ensure the most best results.",339],["Select &gt; Prepare &gt; Check Settings &gt; Export &gt; Verify &gt; Import",339],["What do you want to export?",339],["Be aware of export scope e.g. meshes, cameras, lights, animation rigs, etc.",339],["Applications often let you export selected objects or a whole scene",339],["Make sure you are exporting only the objects you want to use from your scene by either exporting selected, or removing unwanted data from your scene.",339],["Good working practice often means keeping a working file with all lights, guides, control rigs etc. but only export the data you need with export selected, an export preset or even a custom scene exporter.",339],["What do you need to include?",339],["Prepare your assets:",339],["Meshes - Remove construction history, Nurbs, Nurms, Subdiv surfaces must be converted to polygons - e.g. triangulate or quadrangulate",339],["Animation - Select the correct rig, check frame rate, animation length etc.",339],["Blend Shapes / Morphing - Make sure your Blendshapes (Maya) or Morph targets (Max) are assigned / set up the export mesh appropriately",339],["Textures - Make sure your textures are sourced already from your Unity project or copied into a folder called \\textures in your project",339],["Smoothing - Check if you want smoothing groups and/or smooth mesh",339],["How do I include those elements?",339],["Check the FBX export settings",339],["Be aware of your settings in the export dialogue so that you know what to expect and can match up the fbx settings In Unity - see figs 1, 2 &amp; 3 below",339],["Check Animation / Deformations / Skins / Morphs as appropriate",339],["Nodes, markers and their transforms can be exported",339],["Cameras and Lights are not currently imported in to Unity",339],["Which version of FBX are you using?",339],["Use the Latest Version of FBX where possible.",339],["Autodesk update their FBX installer regularly and it can provide different results with different versions of their own software and other 3rd party 3D apps",339],["See Advanced Options &gt; FBX file format",339],["If you have any issues you can revert to 2012.2 if necessary",339],["Will it work?",339],["Verify your export",339],["Check your file size - do a sanity check on the file size (e.g. &gt;10kb?)",339],["Re-import your FBX into a new scene in the 3D package you use to generate it - is it what you expected?",339],["Import!",339],["Import into Unity",339],["Check FBX import settings in inspector : texures, animations, smoothing, etc.",339],["See below for Maya FBX dialogue example:",339],["How do I reuse assets between projects?",340],["As you build your game, Unity stores a lot of metadata about your assets (import settings, links to other assets, etc.). If you want to take your assets into a different project, there is a specific way to do that. Here's how to easily move assets between projects and still preserve all this info.",340],["In the Project View, select all the asset files you want to export.",340],["Choose Assets-&gt;Export Package... from the menubar.",340],["Name and save the package anywhere you like.",340],["Open the project you want to bring the assets into.",340],["Choose Assets-&gt;Import Package... from the menubar.",340],["Select your package file saved in step 3.",340],["Hints",340],["When exporting a package Unity can export all dependencies as well. So for example if you select a Scene and export a package with all dependencies, then all models, textures and other assets that appear in the scene will be exported as well. This can be a quick way of exporting a bunch of assets without manually locating them all.",340],["If you store your Exported Package in the Standard Packages folder next to your Unity application, they will appear in the Create New Project dialog.",340],["How do I fix the rotation of an imported model?",341],["Some 3D art packages export their models so that the z-axis faces upward. Most of the standard scripts in Unity assume that the y-axis represents up in your 3D world. It is usually easier to fix the rotation in Unity than to modify the scripts to make things fit.",341],["If at all possible it is recommended that you fix the model in your 3D modelling application to have the y-axis face upwards before exporting.",341],["If this is not possible, you can fix it in Unity by adding an extra parent transform:",341],["Create an empty GameObject using the GameObject-&gt;Create Empty menu",341],["Position the new GameObject so that it is at the center of your mesh or whichever point you want your object to rotate around.",341],["Drag the mesh onto the empty GameObject",341],["You have now made your mesh a Child of an empty GameObject with the correct orientation. Whenever writing scripts that make use of the y-axis as up, attach them to the Parent empty GameObject.",341],["How do I import Models from my 3D app?",342],["To import a 3D model into Unity you can drag a file into the project window.",342],["In the inspector &gt; Model tab",342],["Unity supports importing models from most popular 3D applications.",342],["For pages on importing specifically from 3D packages see these pages:",342],["Textures",342],["Store textures in a folder called Textures next to the exported mesh within your unity project. This will enable Unity to find the Texture and automatically connect the Texture to the generated Material. For more information, see the Textures reference.",342],["See Also",342],["Importing Objects From Blender",343],["Unity natively imports Blender files. This works under the hood by using the Blender FBX exporter, which was added to Blender in version 2.45. For this reason, you must update to Blender 2.45 or later (but see Requirements below).",343],["To get started, save your .blend file in your project's Assets folder. When you switch back into Unity, the file is imported automatically and will show up in the Project View.",343],["To see your model in Unity, drag it from the Project View into the Scene View.",343],["If you modify your .blend file, Unity will automatically update whenever you save.",343],["Unity currently imports",343],["All nodes with position, rotation and scale. Pivot points and Names are also imported.",343],["Meshes with vertices, polygons, triangles, UVs, and normals.",343],["Bones",343],["Skinned Meshes",343],["Animations",343],["See Using Blender and Rigify for more details of how to import animated, boned characters into Unity for use with Mecanim.",343],["Requirements",343],["You need to have Blender version 2.60 or later (in some earlier versions of Blender the FBX export was broken).",343],["Textures and diffuse color are not assigned automatically. Manually assign them by dragging the texture onto the mesh in the Scene View in Unity.",343],["Importing Objects From Cheetah3D",344],["Unity natively imports Cheetah3D files. To get started, simply place your .jas file in your project's Assets folder.",344],["When you switch back into Unity, the scene is imported automatically and will show up in the Project View.",344],["To see your model in Unity, simply drag it from the Project View into the Scene View.",344],["If you modify your .jas file, Unity will automatically update whenever you save.",344],["Unity currently imports from Cheetah3D",344],["All nodes with position, rotation and scale. Pivot points and Names are also imported.",344],["Meshes with vertices, polygons, triangles, UV's and Normals.",344],["Animations.",344],["Materials with diffuse color and textures.",344],["Requirements",344],["You need to have at least Cheetah3D 2.6 installed.",344],["Importing Objects From Cinema 4D",345],["Unity natively imports Cinema 4D files. To get started, simply place your .c4d file in your project's Assets folder.",345],["When you switch back into Unity, the scene is imported automatically and will show up in the Project View.",345],["To see your model in Unity, simply drag it from the Project View into the Scene View.",345],["If you modify your .c4d file, Unity will automatically update whenever you save.",345],["Unity currently imports",345],["All objects with position, rotation and scale. Pivot points and Names are also imported.",345],["Meshes with UVs and normals.",345],["Materials with Texture and diffuse color. Multiple materials per mesh.",345],["Animations FK (IK needs to be manually baked).",345],["Bone-based animations.",345],["Unity does not import Point Level Animations (PLA) at the moment. Use Bone-based animations instead.",345],["Animated Characters using IK",345],["If you are using IK to animate your characters in Cinema 4D, you have to bake the IK before exporting using the Plugins-&gt;Mocca-&gt;Cappucino menu. If you don't bake your IK prior to importing into Unity, you will most likely only get animated locators but no animated bones.",345],["Requirements",345],["You need to have at least Cinema 4D version 8.5 installed to import .c4d files.",345],["If you don't have Cinema 4D installed on your machine but want to import a Cinema 4D file from another machine, you can export to the FBX format, which Unity imports natively:",345],["Open the Cinema 4D file",345],["In Cinema 4D choose File-&gt;Export-&gt;FBX 6.0",345],["Place the exported fbx file in the Unity project's Assets folder. Unity will now automatically import the fbx file.",345],["Hints",345],["To maximize import speed when importing Cinema 4D files: go to the Cinema 4D preferences (Edit-&gt;Preferences) and select the FBX 6.0 preferences. Now uncheck Embed Textures.",345],["Behind the import process (Advanced)",345],["When Unity imports a Cinema 4D file it will automatically install a Cinema 4D plugin and launch Cinema 4D in the background. Unity then communicates with Cinema 4D to convert the .c4d file into a format Unity can read. The first time you import a .c4d file and Cinema 4D is not open yet it will take a short while to launch it but afterwards importing .c4d files will be very quick.",345],["Cinema 4D 10 support",345],["When importing .c4d files directly, Unity behind the scenes lets Cinema 4D convert its files to FBX.",345],["When Maxon shipped Cinema 4D 10.0, the FBX exporter was severly broken. With Cinema 4D 10.1 a lot of the issues have been fixed. Thus we strongly recommend everyone using Cinema 4D 10 to upgrade to 10.1.",345],["Now there are still some issues left in Maxons FBX exporter. It seems that currently there is no reliable way of exporting animated characters that use the Joint's introduced in Cinema 4D 10. However the old bone system available in 9.6 exports perfectly fine. Thus when creating animated characters it is critical that you use the old bone system instead of joints.",345],["Importing Objects From Lightwave",346],["You can import meshes and animations from Lightwave in two different ways:",346],["Using the FBX plugin for Lightwave - Included from version 9.0",346],["Importing lightwave scene files using the Lightwave App Link - Included from version 11.0",346],["Unity currently imports:",346],["All nodes with position, rotation and scale. Pivot points and Names are also imported.",346],["Meshes with up to 2 UV Channels",346],["Normals",346],["Materials with Texture and diffuse color. Multiple materials per mesh.",346],["Animations.",346],["Bone-based animations.",346],["Detailed documentation for this from Lightwave is not available on-line but comes in the PDF manual included with your download",346],["Note:",346],["Lightwave specific materials need to be baked as textures for Unity to read them - use the Node system in Lightwave for a non-destructive pipeline",346],["Unity only understands polygon meshes so convert to polygons before saving/exporting",346],["FBX Export",346],["From Lightwave version 11 onwards the FBX 2012 exporter is now included:",346],["FBX Filename : This file can contain multiple objects, Choose a filename and save to your \\assets directory",346],["Anim Layer : TBC",346],["Type : Choose Binary to reduce filesize or ASCII for a text editable FBX",346],["FBX Version Select 201200 from the drop down to ensure version 2012.1",346],["Export : Select all the elements you wish to include - not cameras and lights are not read into Unity",346],["Mesh type Choose Cage Subdivision if * otherwise choose subdivided to *",346],["Bake Motion EnvelopesTBC",346],["Start frame / End frame",346],["Scale Scene Set a scale for your scene applicable to match Unity",346],["Importing LIghtwave scenes with AppLink",346],["To read a lightwave scene you must use the Applink package provided with your Lightwave installation from version 11 onwards only",346],["Setup",346],["Browse to the \\support\\3rdparty_support\\Unity3D folder in your LightWave3D installation",346],["Copy LightWaveAppLink.unitypackage into \\Unity installation folder within \\Editor\\Standard Packages folder",346],["E.g. Windows C:\\Program Files (x86)\\Unity\\Editor\\Standard Packages (for machines running a 64-bit version of Windows)",346],["or Mac: Applications/Unity/Standard Packages.",346],["Create Unity Project for you lightwave scene",346],["In Unity create a project e.g. UnityProject_name and check the LightWave AppLink package and any others you require for your project",346],["Close Unity",346],["Copy or Move your LightWave_Content folder and it's directory structure into your UnityProject_name\\AssetsSave your LWS file in the \\assets folder",346],["In lightwave make sure your scene file is has it's content directory set to the new location in the unity project",346],["Your folder structure should look like this:",346],["Unity_Project",346],["Assets",346],["LightWave_Content",346],["Images",346],["Objects",346],["Scenes",346],["Save your LWS scene",346],["Open your Unity project",346],["Unity will then convert the LightWave scene to an FBX",346],["Select the FBX of the scene and set your scale to 1.0 and Apply",346],["Add converted FBX scene to your scene hierarchy",346],["Update any Unity materials to set textures and shader types to try and match equivalent Lightwave shaders",346],["Any changes to the FBX (lightwave scene assets) will only be stored in Unity, so this is a Uni-directional pipeline, but Unity will remember any material assignments and properties applied to the FBX scene even if you update from LightWave",346],["Importing Objects From 3D Studio Max",347],["If you make your 3D objects in 3dsMax, you can save your .max files directly into your Project or export them into Unity using the Autodesk .FBX or other genric formats.",347],["Unity imports meshes from 3ds Max. Saving a Max file or exporting a generic 3D file type each has advantages and disadvantages see class-Mesh",347],["All nodes with position, rotation and scale. Pivot points and Names are also imported.",347],["Meshes with vertex colors, normals and one or two UV sets (see below).",347],["Materials with diffuse texture and color. Multiple materials per mesh.",347],["Animations.",347],["Bone based animations (see below).",347],["To manually export to FBX from 3DS Max",347],["Download the latest fbx exporter from Autodesk website and install it.",347],["Export your scene or selected objects (File-&gt;Export or File-&gt;Export Selected) in .fbx format. Using default export options should be okay.",347],["Copy the exported fbx file into your Unity project folder.",347],["When you switch back into Unity, the .fbx file is imported automatically.",347],["Drag the file from the Project View into the Scene View.",347],["Exporter options",347],["Using default FBX exporter options (that basically export everything) you can choose:",347],["Embed textures - this stores the image maps in the file, good for portability, not so good for file size",347],["Default FBX exporter options (for fbx plugin version 2013.3)",347],["Exporting Bone-based Animations",347],["There is a procedure you should follow when you want to export bone-based animations:",347],["Set up the bone structure as you please.",347],["Create the animations you want, using FK and/or IK",347],["Select all bones and/or IK solvers",347],["Go to Motion-&gt;Trajectories and press Collapse. Unity makes a key filter, so the amount of keys you export is irrelevant",347],["\"Export\" or \"Export selected\" as newest FBX format",347],["Drop the FBX file into Assets as usual",347],["In Unity you must reassign the Texture to the Material in the root bone",347],["When exporting a bone hierarchy with mesh and animations from 3ds Max to Unity, the GameObject hierarchy produced will correspond to the hierarchy you can see in \"Schematic view\" in 3ds Max. One difference is Unity will place a GameObject as the new root, containing the animations, and will place the mesh and material information in the root bone.",347],["If you prefer to have animation and mesh information in the same Unity GameObject, go to the Hierarchy view in 3ds Max, and parent the mesh node to a bone in the bone hierarchy.",347],["Exporting morph targets (blend shapes) from Max",347],["Ensure you have the Morpher Modifier applied to the export mesh with appropriate morph targets set up in the Channel List",347],["Animate keyframes on the Export mesh/modifier only if you require animation",347],["Check animation > Deformations, Skins if required and then Morphs in the FBX export dialogue",347],["Exporting Two UV Sets for Lightmapping",347],["3ds Max' Render To Texture and automatic unwrapping functionality can be used to create lightmaps. Note that Unity has built-in lightmapper, but you might prefer using 3dsmax if that fits your workflow better. Usually one UV set is used for main texture and/or normal maps, and another UV set is used for the lightmap texture. For both UV sets to come through properly, the material in 3ds Max has to be Standard and both Diffuse (for main texture) and Self-Illumination (for lightmap) map slots have to be set up:",347],["Note that if object uses a Shell material type, then current Autodesk's FBX exporter will not export UVs correctly.",347],["Alternatively, you can use Multi/Sub Object material type and setup two sub-materials, using the main texture and the lightmap in their diffuse map slots, like shown below. However, if faces in your model use different sub-material IDs, this will result in multiple materials being imported, which is not optimal for performance.",347],["Troubleshooting",347],["If you have any issues with importing some models: ensure that you have the latest FBX plugin installed from Autodesk website or revert to FBX 2012.",347],["Importing Objects From Maya",348],["Unity natively imports Maya files. To get started, simply place your .mb or .ma file in your project's Assets folder.",348],["When you switch back into Unity, the scene is imported automatically and will show up in the Project view.",348],["To see your model in Unity, simply drag it from the Project View into the Scene View or Hierarchy View.",348],["Unity currently imports from Maya:",348],["All nodes with position, rotation and scale. Pivot points and Names are also imported.",348],["Meshes with vertex colors, normals and up to 2 UV sets.",348],["Materials with Texture and diffuse color. Multiple materials per mesh.",348],["Animations FK &amp; IK",348],["Bone-based animations",348],["BlendShapes",348],["Exporting Blend Shapes (morphing) from Maya",348],["Ensure you have the Blendshape applied to the export mesh with its targets in order",348],["Optionally animate keyframes on the blendshape node, if you require Maya animation keyframes",348],["Check animation > Deformations, Skins if required and Morphs in the FBX export dialogue",348],["If you are using IK to animate characters you have to select the imported .mb file in Project View and choose Bake IK &amp; Simulation in the Import Settings dialog in the Inspector.",348],["Requirements",348],["In order to import Maya .mb and .ma files, you need to have Maya installed on the machine you are using Unity to import the .mb/.ma file. Maya 8.0 and up is supported.",348],["If you don't have Maya installed on your machine but want to import a Maya file from another machine, you can export to fbx format, which Unity imports natively. Install the latest version of FBX for best results. For general export guidelines see HOWTO_exportFBX.",348],["Once exported Place the fbx file in the Unity project folder. Unity will now automatically import the fbx file. Check the FBX import setting in the inspector as mentioned in HOWTO_exportFBX",348],["Behind the import process (Advanced)",348],["When Unity imports a Maya file it will launch Maya in the background. Unity then communicates with Maya to convert the .mb file into a format Unity can read. The first time you import a Maya file in Unity, Maya has to launch in a command line process, this can take around 20 seconds, but subsequent imports will be very quick.",348],["Troubleshooting",348],["Keep your scene simple, try and work with a file which only contains the objects you need in Unity",348],["If your meshes cause problems, make sure you have converted any patches, nurbs surface etc into Polygons (Modify &gt; Convert + also Mesh &gt; Quadragulate/Triangulate) Unity only support Polygons.",348],["Maya in some rare cases messes up the node history, which sometimes results in models not exporting correctly. Fortunately you can very easily fix this by selecting Edit-&gt;Delete by Type-&gt;Non-Deformer History.",348],["Unity likes to keep up with the latest FBX where possible so if you have any issues with importing some models, check for the latest FBX exporters from Autodesk website or revert to FBX 2012",348],["Animation baking in Maya is now done with FBX instead of natively, which allows for more complex animations to be baked properly to FBX format. If you are using driven keys, then make sure to set at least one key on your drivers for the animation to bake properly",348],["Importing Objects From Modo",349],["Unity natively imports modo files. This works under the hood by using the modo COLLADA exporter. Modo version 501 and later use this approach. To get started, save your .lxo file in the project's Assets folder. When you switch back into Unity, the file is imported automatically and will show up in the Project View.",349],["For older modo versions prior to 501, simply save your Modo scene as an FBX or COLLADA file into the Unity project folder. When you switch back into Unity, the scene is imported automatically and will show up in the Project View.",349],["To see your model in Unity, drag it from the Project View into the Scene View.",349],["If you modify the lxo file, Unity will automatically update whenever you save.",349],["Unity currently imports",349],["All nodes with position, rotation and scale. Pivot points and names are also imported.",349],["Meshes with vertices, normals and UVs.",349],["Materials with Texture and diffuse color. Multiple materials per mesh.",349],["Animations",349],["Requirements",349],["modo 501 or later is required for native import of *.lxo files.",349],["How do I install or upgrade Standard Assets?",350],["Unity ships with multiple Standard Assets packages. These are collections of assets that are widely used by most Unity customers. When you create a new project from the Project Wizard you can optionally include these asset collections. These assets are copied from the Unity install folder into your new project. This means that if you upgrade Unity to a new version you will not get the new version of these assets and so upgrading them is needed. Also, consider that a newer version of e.g. an effect might behave differently for performance or quality reasons and thus requires retweaking of parameters. It's important to consider this before upgrading if you don't want your game to suddenly look or behave differently. Check with the package contents and Unity's release notes.",350],["Standard Assets contain useful things like a first person controller, skyboxes, lens flares, Water prefabs, Image Effects and so on.",350],["Upgrading",350],["Sometimes you might want to upgrade your Standard Assets, for example because a new version of Unity ships with new Standard Assets:",350],["Open your project.",350],["Choose package you want to update from Assets-&gt;Import Package submenu.",350],["A list of new or replaced assets will be presented, click Import.",350],["Note that the upgrade will replace files for which a newer version is available but it won't remove obsolete files from the previous version of the Standard Assets. To avoid such unwanted files, you might want to remove the old Standard Assets from the project before installing the new version. However, it is wise to keep a backup copy of the old assets just in case your project depends on them in a way you didn't anticipate.",350],["How do I make a Spot Light Cookie?",351],["Unity ships with a few Light Cookies in the Standard Assets. When the Standard Assets are imported to your project, they can be found in Standard Assets-&gt;Light Cookies. This page shows you how to create your own.",351],["A great way to add a lot of visual detail to your scenes is to use cookies - grayscale textures you use to control the precise look of in-game lighting. This is fantastic for making moving clouds and giving an impression of dense foliage. The Light Component Reference page has more info on all this, but the main thing is that for textures to be usable for cookies, the following properties need to be set:",351],["To create a light cookie for a spot light:",351],["Paint a cookie texture in Photoshop. The image should be greyscale. White pixels means full lighting intensity, black pixels mean no lighting. The borders of the texture need to be completely black, otherwise the light will appear to leak outside of the spotlight.",351],["In the Texture Inspector change the Texture Type to Cookie",351],["Enable Alpha From Grayscale (this way you can make a grayscale cookie and Unity converts it to an alpha map automatically)",351],["How do I make a Mesh Particle Emitter? (Legacy Particle System)",352],["Mesh Particle Emitters are generally used when you need high control over where to emit particles.",352],["For example, when you want to create a flaming sword:",352],["Drag a mesh into the scene.",352],["Remove the Mesh Renderer by right-clicking on the Mesh Renderer's Inspector title bar and choose Remove Component.",352],["Choose Mesh Particle Emitter from the Component-&gt;Effects-&gt;Legacy Particles menu.",352],["Choose Particle Animator from the Component-&gt;Effects-&gt;Legacy Particles menu.",352],["Choose Particle Renderer from the Component-&gt;Effects-&gt;Legacy Particles menu.",352],["You should now see particles emitting from the mesh.",352],["Play around with the values in the Mesh Particle Emitter.",352],["Especially enable Interpolate Triangles in the Mesh Particle Emitter Inspector and set Min Normal Velocity and Max Normal Velocity to 1.",352],["To customize the look of the particles that are emitted:",352],["Choose Assets-&gt;Create-&gt;Material from the menu bar.",352],["In the Material Inspector, select Particles-&gt;Additive from the shader drop-down.",352],["Drag &amp; drop a texture from the Project view onto the texture slot in the Material Inspector.",352],["Drag the Material from the Project View onto the Particle System in the Scene View.",352],["You should now see textured particles emitting from the mesh.",352],["See Also",352],["Porting a Project Between Platforms",353],["Most of Unity's API and project structure is identical for all supported platforms and in some cases a project can simply be rebuilt to run on different devices. However, fundamental differences in the hardware and deployment methods mean that some parts of a project may not port between platforms without change. Below are details of some common cross-platform issues and suggestions for solving them.",353],["Input",353],["The most obvious example of different behaviour between platforms is in the input methods offered by the hardware.",353],["Keyboard and joypad",353],["The Input.GetAxis function is very convenient on desktop platforms as a way of consolidating keyboard and joypad input. However, this function doesn't make sense for the mobile platforms which rely on touchscreen input. Likewise, the standard desktop keyboard input doesn't port over to mobiles well for anything other than typed text. It is worthwhile to add a layer of abstraction to your input code if you are considering porting to other platforms in the future. As a simple example, if you were making a driving game then you might create your own input class and wrap the Unity API calls in your own functions:-",353],["// Returns values in the range -1.0 .. +1.0 (== left .. right).",353],["function Steering() {",353],["return Input.GetAxis(\"Horizontal\");",353],["// Returns values in the range -1.0 .. +1.0 (== accel .. brake).",353],["function Acceleration() {",353],["return Input.GetAxis(\"Vertical\");",353],["var currentGear: int;",353],["// Returns an integer corresponding to the selected gear.",353],["function Gears() {",353],["if (Input.GetKeyDown(\"p\"))",353],["currentGear++;",353],["else if (Input.GetKeyDown(\"l\"))",353],["currentGear--;",353],["return currentGear;",353],["One advantage of wrapping the API calls in a class like this is that they are all concentrated in a single source file and are consequently easy to locate and replace. However, the more important idea is that you should design your input functions according to the logical meaning of the inputs in your game. This will help to isolate the rest of the game code from the specific method of input used with a particular platform. For example, the Gears function above could be modified so that the actual input comes from touches on the screen of a mobile device. Using an integer to represent the chosen gear works fine for all platforms, but mixing the platform-specific API calls with the rest of the code would cause problems. You may find it convenient to use platform dependent compilation to combine the different implementation of the input functions in the same source file and avoid manual swaps.",353],["Touches and clicks",353],["The Input.GetMouseButtonXXX functions are designed so that they have a reasonably obvious interpretation on mobile devices even though there is no \"mouse\" as such. A single touch on the screen is reported as a left click and the Input.mousePosition property gives the position of the touch as long as the finger is touching the screen. This means that games with simple mouse interaction can often work transparently between the desktop and mobile platforms. Naturally, though, the conversion is often much less straightforward than this. A desktop game can make use of more than one mouse button and a mobile game can detect multiple touches on the screen at a time.",353],["As with API calls, the problem can be managed partly by representing input with logical values that are then used by the rest of the game code. For example, a pinch gesture to zoom on a mobile device might be replaced by a plus/minus keystroke on the desktop; the input function could simply return a float value specifying the zoom factor. Likewise, it might be possible to use a two-finger tap on a mobile to replace a right button click on the desktop. However, if the properties of the input device are an integral part of the game then it may not be possible to remodel them on a different platform. This may mean that game cannot be ported at all or that the input and/or gameplay need to be modified extensively.",353],["Accelerometer, compass, gyroscope and GPS",353],["These inputs derive from the mobility of handheld devices and so may not have any meaningful equivalent on the desktop. However, some use cases simply mirror standard game controls and can be ported quite easily. For example, a driving game might implement the steering control from the tilt of a mobile device (determined by the accelerometer). In cases like this, the input API calls are usually fairly easy to replace, so the accelerometer input might be replaced by keystrokes, say. However, it may be necessary to recalibrate inputs or even vary the difficulty of the game to take account of the different input method. Tilting a device is slower and eventually more strenuous than pressing keys and may also make it harder to concentrate on the display. This may result in the game's being more difficult to master on a mobile device and so it may be appropriate to slow down gameplay or allow more time per level. This will require the game code to be designed so that these factors can be adjusted easily.",353],["Memory, storage and CPU performance",353],["Mobile devices inevitably have less storage, memory and CPU power available than desktop machines and so a game may be difficult to port simply because its performance is not acceptable on lower powered hardware. Some resource issues can be managed but if you are pushing the limits of the hardware on the desktop then the game is probably not a good candidate for porting to a mobile platform.",353],["Movie playback",353],["Currently, mobile devices are highly reliant on hardware support for movie playback. The result is that playback options are limited and certainly don't give the flexibility that the MovieTexture asset offers on desktop platforms. Movies can be played back fullscreen on mobiles but there isn't any scope for using them to texture objects within the game (so it isn't possible to display a movie on a TV screen within the game, for example). In terms of portability, it is fine to use movies for introductions, cutscenes, instructions and other simple pieces of presentation. However, if movies need to be visible within the game world then you should consider whether the mobile playback options will be adequate.",353],["Storage requirements",353],["Video, audio and even textures can use a lot of storage space and you may need to bear this in mind if you want to port your game. Storage space (which often also corresponds to download time) is typically not an issue on desktop machines but this is not the case with mobiles. Furthermore, mobile app stores often impose a limit on the maximum size of a submitted product. It may require some planning to address these concerns during the development of your game. For example, you may need to provide cut-down versions of assets for mobiles in order to save space. Another possibility is that the game may need to be designed so that large assets can be downloaded on demand rather than being part of the initial download of the application.",353],["Automatic memory management",353],["The recovery of unused memory from \"dead\" objects is handled automatically by Unity and often happens imperceptibly on desktop machines. However, the lower memory and CPU power on mobile devices means that garbage collections can be more frequent and the time they take can impinge more heavily on performance (causing unwanted pauses in gameplay, etc). Even if the game runs in the available memory, it may still be necessary to optimise code to avoid garbage collection pauses. More information can be found on our memory management page.",353],["CPU power",353],["A game that runs well on a desktop machine may suffer from poor framerate on a mobile device simply because the mobile CPU struggles with the game's complexity. Extra attention may therefore need to be paid to code efficiency when a project is ported to a mobile platform. A number of simple steps to improve efficiency are outlined on this page in our manual.",353],["How to deliver an application to the Apple Mac Store",354],["Make sure you have the correct provisioning profiles installed in Organiser. Also check provisioning profile in System Preferences -&gt; Profiles.",354],["Create high res iconset. Make a folder named UnityPlayer.iconset (or whatever your info.plist is setup to show) with the following image names inside. Make sure the folder has the .iconset extension.",354],["icon_16x16.png",354],["icon_16x16@2x.png",354],["icon_32x32.png",354],["icon_32x32@2x.png",354],["icon_128x128.png",354],["icon_128x128@2x.png",354],["icon_256x256.png",354],["icon_256x256@2x.png",354],["icon_512x512.png",354],["icon_512x512@2x.png",354],["Make sure that the @2x images are sized 2X the image the name says. So 512x512@2x is actually a 1024x1024 image with 144 dpi. From the Terminal, navigate to the directory where the .iconset directory is located and perform the command",354],["iconutil -c icns UnityPlayer.iconset",354],["Create an info.plist and an GAMENAME.entitlements file. The easiest way to do this is by using http://jemast.com/unity/entitlements.php to generate them for you. You can also extract the info.plist from the Unity generated .app and modify that one. The most basic GAMENAME.entitlements looks like this, it will make sure your app runs in the Apple sandbox. This one has no iCloud support:",354],["",354],["",354],["",354],["",354],["com.apple.security.app-sandbox ",354],["",354],["",354],["Fix Macbook Pro Retina fullscreen problems (see http://forum.unity3d.com/threads/145534-Mountain-Lion-MacBook-Pro-Retina-gt-problem-for-Unity-games) by adding something like this. It only needs to be called once! It will create a flicker since it goes out and in fullscreen.",354],["if (Screen.fullScreen)",354],["//MacBook Pro Retina 15: width = 2880 , MacBook Pro Retina 13: width = 2496 ?",354],["//could check device model name, but not sure now about retina 13 device model name",354],["//if last resolution is almost retina resolution...",354],["var resolutions : Resolution[] = Screen.resolutions;",354],["if (resolutions.length &amp;&amp; resolutions[resolutions.length - 1].width > 2048)",354],["Screen.fullScreen = false;",354],["yield;",354],["Screen.fullScreen = true;",354],["yield;",354],["Enable UseMacAppStoreValidation toggle in the PlayerSettings",354],["Run Unity and build the .app",354],["Replace the iconset.icns with the created on in Step 2 by right clicking the .app and Show Contents",354],["(Optional) Replace the UnityPlayerIcon in the .app with your own",354],["Replace the info.plist in the .app with the modified one from Step 2.",354],["Fix read permissions on all the content in the .app. In the Terminal type:",354],["chmod -R a+xr \"/path/to/GAMENAME.app\"",354],["Sign the .App with the created entitlements from Step 3. In the Terminal type:",354],["codesign -f -s '3rd Party Mac Developer Application: DEVELOPER NAME' --entitlements \"GAMENAME.entitlements\" \"/AppPath/GAMENAME.app\"",354],["Build the installer/pkg. In the Terminal type:",354],["productbuild --component GAMENAME.app /Applications --sign \"3rd Party Mac Developer Installer: DEVELOPER NAME\" GAMENAME.pkg",354],["Submit using the ApplicationLoader! Make sure your applicationid_ in iTunesConnect is in the waiting for upload state.",354],["Creating UI elements from scripting",355],["If you are creating a dynamic UI where UI elements appear, disappear, or change based on user actions or other actions in the game, you may need to make a script that instantiates new UI elements based on custom logic.",355],["Creating a prefab of the UI element",355],["In order to be able to easily instantiate UI elements dynamically, the first step is to create a prefab for the type of UI element that you want to be able to instantiate. Set up the UI element the way you want it to look in the Scene, and then drag the element into the Project View to make it into a prefab.",355],["For example, a prefab for a button could be a Game Object with a Image component and a Button component, and a child Game Object with a Text component. Your setup might be different depending on your needs.",355],["You might wonder why we don't have a API methods to create the various types of controls, including visuals and everything. The reason is that there are an infinite number of way e.g. a button could be setup. Does it use an image, text, or both? Maybe even multiple images? What is the text font, color, font size, and alignment? What sprite or sprites should the image use? By letting you make a prefab and instantiate that, you can set it up exactly the way you want. And if you later want to change the look and feel of your UI you can just change the prefab and then it will be reflected in your UI, including the dynamically created UI.",355],["Instantiating the UI element",355],["Prefabs of UI elements are instantiated as normal using the Instantiate method. When setting the parent of the instantiated UI element, it's recommended to do it using the Transform.SetParent method with the worldPositionStays parameter set to false.",355],["Positioning the UI element",355],["A UI Element is normally positioned using its Rect Transform. If the UI Element is a child of a Layout Group it will be automatically positioned and the positioning step can be skipped.",355],["When positioning a Rect Transform it's useful to first determine it has or should have any stretching behavior or not. Stretching behavior happens when the anchorMin and anchorMax properties are not identical.",355],["For a non-stretching Rect Transform, the position is set most easily by setting the anchoredPosition and the sizeDelta properties. The anchoredPosition specifies the position of the pivot relative to the anchors. The sizeDelta is just the same as the size when there's no stretching.",355],["For a stretching Rect Transform, it can be simpler to set the position using the offsetMin and offsetMax properties. The offsetMin property specifies the corner of the lower left corner of the rect relative to the lower left anchor. The offsetMax property specifies the corner of the upper right corner of the rect relative to the upper right anchor.",355],["Customizing the UI Element",355],["If you are instantiating multiple UI elements dynamically, it's unlikely that you'll want them all to look the same and do the same. Whether it's buttons in a menu, items in an inventory, or something else, you'll likely want the individual items to have different text or images and to do different things when interacted with.",355],["This is done by getting the various components and changing their properties. See the scripting reference for the Image and Text components, and fow how to work with UnityEvents from scripting.",355],["Making UI elements fit the size of their content",356],["Normally when positioning a UI element with its Rect Transform, its position and size is specified manually (optionally including behavior to stretch with the parent Rect Transform).",356],["However, sometimes you may want the rectangle to be automatically sized to fit the content of the UI element. This can be done by adding a component called Content Size Fitter.",356],["Fit to size of Text",356],["In order to make a Rect Transform with a Text component on it fit the text content, add a Content Size Fitter component to the same Game Object which has the Text component. Then set the Horizontal Fit, the Vertical Fit, ot both to the Preferred setting.",356],["How does it work?",356],["What happens here is that the Text component functions as a Layout Element that can provide information about how big its minimum and preferred size is. In a manual layout this information is not used. A Content Size Fitter is a type of Layout Controller, which listens to layout information provided by Layout Elements and control the size of the Rect Transform according to this.",356],["Remember the pivot",356],["When UI elements are automatically resized to fit their content, you should pay extra attention to the pivot of the Rect Transform. The pivot will stay in place when the element is resized, so by setting the pivot position you can control in which direaction the element will expand or shrink. For example, if the pivot is in the center, then the element will expand equally in all directions, and if the pivot is in the upper left corner, then the element will expand to the right and down.",356],["Fit to size of UI element with child Text",356],["If you have a UI element, such as a Button, that has a background image and a child Game Object with a Text component on it, you probably want the whole UI element to fit the size of the text - maybe with some padding.",356],["In order to do this, first add a Horizontal Layout Group to the UI element, then add a Content Size Fitter too. Set the Horizontal Fit, the Vertical Fit, ot both to the Preferred setting. You can add and tweak padding using the padding property in the Horizontal Layout Group.",356],["Why use a Horizontal Layout Group? Well, it could have been a Vertical Layout Group as well - as long as there is only a single child, they produce the same result.",356],["How does it work?",356],["The Horizontal (or Vertical) Layout Group functions both as a Layout Controller and as a Layout Element. First it listens to the layout information provided by the children in the group - in this case the child Text. Then it determines how large the group must be (at minimum, and preferrably) in order to be able to contain all the children, and it functions as a Layout Element that provides this information about its minimum and preferred size.",356],["The Content Size Fitter listens to layout information provided by any Layout Element on the same Game Object - in this case provided by the Horizontal (or Vertical) Layout Group. Depending on its settings, it then controls the size of the Rect Transform based on this information.",356],["Once the size of the Rect Transform has been set, the Horizontal (or Vertical) Layout Group makes sure to position and size its children according to the available space. See the page about the Horizontal Layout Group for more information about how it controls the positions and sizes of its children.",356],["Make children of a Layout Group fit their respective sizes",356],["If you have a Layout Group (horizontal or vertical) and want each of the UI elements in the group to fit their respective content, what do you do?",356],["You can't put a Content Size Fitter on each child. The reason is that the Content Size Fitter wants control over its own Rect Transform, but the parent Layout Group also wants control over the child Rect Transform. This creates a conflict and the result is undefined behavior.",356],["However, it isn't necessary either. The parent Layout Group can already make each child fit the size of the content. What you need to do is to disable the Child Force Expand toggles on the Layout Group. If the children are themselves Layout Groups too, you may need to disable the Child Force Expand toggles on those too.",356],["Once the children no longer expand with flexible width, their alignment can be specified in the Layout Group using the Child Alignment setting.",356],["What if you want some of the children to expand to fill additional available space, but not the other children? You can easily control this by adding a Layout Element component to the children you want to expand and enabling the Flexible Width or Flexible Height properties on those Layout Elements. The parent Layout Group should still have the Child Force Expand toggles disabled, otherwise all the children will expand flexibly.",356],["How does it work?",356],["A Game Object can have multiple components that each provide layout information about minimum, preferred and flexible sizes. A priority system determines which values take effect over others. The Layout Element component has a higher priority than the Text, Image, and Layout Group components, so it can be used to override any layout information values they provide.",356],["When the Layout Group listens to the layout information provided by the children, it will take the overridden flexible sizes into account. Then, when controlling the sizes of the children, it will not make them any bigger than their preferred sizes. However, if the Layout Group has the Child Force Expand option enabled, it will always make the flexible sizes of all the children be at least 1.",356],["More information",356],["This page has explained solutions to a few common use cases. For a more in depth explanation of the auto layout system, see the UI Auto Layout page.",356],["Designing UI for Multiple Resolutions",357],["Modern games and applications often need to support a wide variety of different screen resolutions and particularly UI layouts need to be able to adapt to that. The UI System in Unity includes a variety of tools for this purpose that can be combined in various ways.",357],["In this how-to we're going to use a simple case study and look at and compare the different tools in the context of that. In our case study we have three buttons in the corners of the screen as shown below, and the goal is to adapt this layout to various resolutions.",357],["For this how-to we're going to consider four screen resolutions: Phone HD in portrait (640 x 960) and landscape (960 x 640) and Phone SD in portrait (320 x 480) and landscape (480 x 320). The layout is initially setup in the Phone HD Portrait resolution.",357],["Using anchors to adapt to different aspect ratios",357],["UI elements are by default anchored to the center of the parent rectangle. This means that they keep a constant offset from the center.",357],["If the resolution is changed to a landscape aspect ratio with this setup, the buttons may not even be inside the rectangle of the screen anymore.",357],["One way to keep the buttons inside the screen is to change the layout such that the locations of the buttons are tied to their respective corners of the screen. The anchors of the top left button can be set to the upper left corner using the Anchors Preset drop down in the Inspector, or by dragging the triangular anchor handles in the Scene View. It's best to do this while the current screen resolution set in the Game View is the one the layout is initially designed for, where the button placement looks correct. (See the UI Basic Layout page for more information on anchors.) Similarly, the anchors for the lower left and lower right buttons can be set to the lower left corner and lower right corner, respectively.",357],["Once the buttons have been anchored to their respective corners, they stick to them when changing the resolution to a different aspect ratio.",357],["When the screen size is changed to a larger or smaller resolution, the buttons will also remain anchored to their respective corners. However, since they keep their original size as specified in pixels, they may take up a larger or smaller proportion of the screen. This may or may not be desirable, depending on how you would like your layout to behave on screens of different resolutions.",357],["In this how-to, we know that the smaller resolutions of Phone SD Portrait and Landscape don't correspond to screens that are physically smaller, but rather just screens with a lower pixel density. On these lower-density screens the buttons shouldn't appear larger than on the high-density screens - they should instead appear with the same size.",357],["This means that the buttons should become smaller by the same percentage as the screen is smaller. In other words, the scale of the buttons should follow the screen size. This is where the Reference Resolution component can help.",357],["Scaling with Screen Size",357],["The Canvas Scaler component can be added to a root Canvas - a Game Object with a Canvas component on it, which all the UI elements are children of. It is also added by default when creating a new Canvas through the GameObject menu.",357],["In the Canvas Scaler component, you can set its UI Scale Mode to Scale With Screen Size. With this scale mode you can specify a resolution to use as reference. If the current screen resolution is smaller or larger than this reference resolution, the scale factor of the Canvas is set accordingly, so all the UI elements are scaled up or down together with the screen resolution.",357],["In our case, we set the Reference Resolution to be the Phone HD landscape resolution of 640 x 960. Now, when setting the screen resolution to the Phone SD portrait resolution of 320 x 480, the entire layout is scaled down so it appears proportionally the same as in full resolution. Everything is scaled down: The button sizes, their distances to the edges of the screen, the button graphics, and the text elements. This means that the layout will appear the same in the Phone SD portrait resolution as in Phone HD portrait; only with a lower pixel density.",357],["One thing to be aware of: After adding a Reference Resolution component, it's important to also check how the layout looks at other aspect ratios. By setting the resolution back to Phone HD landscape, we can see that the buttons now appear bigger than they should (and used to).",357],["The reason for the larger buttons in landscape aspect ratio comes down to how the Reference Resolution setting works. By default it compares the width or the current resolution with the width of the reference resolution and the result is used as the scale factor to scale everything with. Since the current landscape resolution of 960 x 640 has a 1.5 times larger width than the portrait reference resolution of 640 x 960, the layout is scaled up by 1.5.",357],["The component has a property called Match which can be 0 (Width), 1 (Height) or a value in between. By default it's set to 0, which compares the current screen width with the reference resolution width as described.",357],["If the Match property is set to 0.5 instead, it will compare both the current width to the reference width and the current height to the reference height, and choose a scale factor that's in between the two. Since in this case the landscape resolution is 1.5 times wider but also 1.5 times shorter, those two factor even out and produce a final scale factor of 1, which means the buttons keep their original size.",357],["At this point the layout supports all the four screen resolutions using a combination of appropriate anchoring and the Reference Resolution component on the Canvas.",357],["See the Canvas Scaler reference page for more information on different ways to scale UI elements in relation to different screen sizes.",357],["Creating Screen Transitons",358],["It's fairly common the need to transition between multiple UI Screens, we will explore a simple way to create and manage those transitions. We will show how to create transitions using animation and State Machines to drive and control each screen.",358],["Overview",358],["The high-level idea is that each of our Screens will have an Animator Controller with two states (Open and Closed) and a boolean Parameter (Open). To transition between screens you will only need to close the currently open Screen and open the desired one. To make this process easier we will create a small Class ScreenManager that will keep track and take care of closing any already open Screen for us. The button that triggers the transition will only have to ask the ScreenManager to open the desired screen.",358],["Thinking about Navigation",358],["If you plan to support controller/keyboard navigation of UI elements, then it's important to have a few things in mind. It's important to avoid having Selectable elements outside the screen since that would enable players to select offscreen elements, we can do that by deactivating any off-screen hierarchy. We also need to make sure when a new screen is shown we set a element from it as selected, otherwise the player would not be able to navigate to the new screen. We will take care of all that in the ScreenManager class below.",358],["Setting up the Animator Controller",358],["Let's take a look at the most common and minimal setup for the Animation Controller to do a Screen transition. The controller will need a boolean parameter (Open) and two states (Open and Closed), each state should have an animation with only one keyframe, this way we let the State Machine do the transition blending for us.",358],["Now we need to create the transition between both states, let's start with the transition from Open to Closed and let's set the condition properly, we want to go from Open to Closed when the parameter Open is set to false. Now we create the transition from Closed to Open and set the condition to go from Closed to Open when the parameter Open is true.",358],["Managing the Screens",358],["With all the above set up, the only thing missing is for us to set the parameter Open to true on the screens Animator we want to transition to and Open to false on the currently open screens Animator. To do that we will create a small Script that will take care of that for us.",358],["using UnityEngine;",358],["using UnityEngine.UI;",358],["using UnityEngine.EventSystems;",358],["using System.Collections;",358],["using System.Collections.Generic;",358],["public class ScreenManager : MonoBehaviour {",358],["//Screen to open automatically at the start of the Scene",358],["public Animator initiallyOpen;",358],["//Currently Open Screen",358],["private Animator m_Open;",358],["//Hash of the parameter we use to control the transitions.",358],["private int m_OpenParameterId;",358],["//The GameObject Selected before we opened the current Screen.",358],["//Used when closing a Screen, so we can go back to the button that opened it.",358],["private GameObject m_PreviouslySelected;",358],["//Animator State and Transition names we need to check against.",358],["const string k_OpenTransitionName = \"Open\";",358],["const string k_ClosedStateName = \"Closed\";",358],["public void OnEnable()",358],["//We cache the Hash to the \"Open\" Parameter, so we can feed to Animator.SetBool.",358],["m_OpenParameterId = Animator.StringToHash (k_OpenTransitionName);",358],["//If set, open the initial Screen now.",358],["if (initiallyOpen == null)",358],["return;",358],["OpenPanel(initiallyOpen);",358],["//Closes the currently open panel and opens the provided one.",358],["//It also takes care of handling the navigation, setting the new Selected element.",358],["public void OpenPanel (Animator anim)",358],["if (m_Open == anim)",358],["return;",358],["//Activate the new Screen hierarchy so we can animate it.",358],["anim.gameObject.SetActive(true);",358],["//Save the currently selected button that was used to open this Screen. (CloseCurrent will modify it)",358],["var newPreviouslySelected = EventSystem.current.currentSelectedGameObject;",358],["//Move the Screen to front.",358],["anim.transform.SetAsLastSibling();",358],["CloseCurrent();",358],["m_PreviouslySelected = newPreviouslySelected;",358],["//Set the new Screen as then open one.",358],["m_Open = anim;",358],["//Start the open animation",358],["m_Open.SetBool(m_OpenParameterId, true);",358],["//Set an element in the new screen as the new Selected one.",358],["GameObject go = FindFirstEnabledSelectable(anim.gameObject);",358],["SetSelected(go);",358],["//Finds the first Selectable element in the providade hierarchy.",358],["static GameObject FindFirstEnabledSelectable (GameObject gameObject)",358],["GameObject go = null;",358],["var selectables = gameObject.GetComponentsInChildren (true);",358],["foreach (var selectable in selectables) {",358],["if (selectable.IsActive () &amp;&amp; selectable.IsInteractable ()) {",358],["go = selectable.gameObject;",358],["break;",358],["return go;",358],["//Closes the currently open Screen",358],["//It also takes care of navigation.",358],["//Reverting selection to the Selectable used before opening the current screen.",358],["public void CloseCurrent()",358],["if (m_Open == null)",358],["return;",358],["//Start the close animation.",358],["m_Open.SetBool(m_OpenParameterId, false);",358],["//Reverting selection to the Selectable used before opening the current screen.",358],["SetSelected(m_PreviouslySelected);",358],["//Start Coroutine to disable the hierarchy when closing animation finishes.",358],["StartCoroutine(DisablePanelDeleyed(m_Open));",358],["//No screen open.",358],["m_Open = null;",358],["//Coroutine that will detect when the Closing animation is finished and it will deactivate the",358],["//hierarchy.",358],["IEnumerator DisablePanelDeleyed(Animator anim)",358],["bool closedStateReached = false;",358],["bool wantToClose = true;",358],["while (!closedStateReached &amp;&amp; wantToClose)",358],["if (!anim.IsInTransition(0))",358],["closedStateReached = anim.GetCurrentAnimatorStateInfo(0).IsName(k_ClosedStateName);",358],["wantToClose = !anim.GetBool(m_OpenParameterId);",358],["yield return new WaitForEndOfFrame();",358],["if (wantToClose)",358],["anim.gameObject.SetActive(false);",358],["//Make the provided GameObject selected",358],["//When using the mouse/touch we actually want to set it as the previously selected and",358],["//set nothing as selected for now.",358],["private void SetSelected(GameObject go)",358],["//Select the GameObject.",358],["EventSystem.current.SetSelectedGameObject(go);",358],["//If we are using the keyboard right now, that's all we need to do.",358],["var standaloneInputModule = EventSystem.current.currentInputModule as StandaloneInputModule;",358],["if (standaloneInputModule != null &amp;&amp; standaloneInputModule.inputMode == StandaloneInputModule.InputMode.Buttons)",358],["return;",358],["//Since we are using a pointer device, we don't want anything selected.",358],["//But if the user switches to the keyboard, we want to start the navigation from the provided game object.",358],["//So here we set the current Selected to null, so the provided gameObject becomes the Last Selected in the EventSystem.",358],["EventSystem.current.SetSelectedGameObject(null);",358],["Let's hook up this script, we do this by creating a new GameObject, we can rename it \"ScreenManager\" for instance, and add the component above to it. You can assign an initial screen to it, this screen will be open at the start of your scene.",358],["Now for the final part, let's make the UI buttons work. Select the button that should trigger the screen transition and add a new action under the On Click () list in the Inspector. Drag the ScreenManager GameObject we just created to the ObjectField, on the dropdown select ScreenManager-&gt;OpenPanel (Animator) and drag and drop the panel you want to open when the user clicks the button to the las ObjectField.",358],["Notes",358],["This technique has the advantage that the only requirement for it to work is that each screen should have an AnimatorController with an Open parameter and a Closed state. It's completely unconcerned with the details of how your Screen or your State Machine is constructed. And works nicely with nested Screens, you would just need one ScreenManager for each nested level.",358],["The State Machine we setup above had the default state as Closed, so all of the Screens that use this controller would start as closed. That's why on the ScreenManager we provide a initiallyOpen property, so you can specify what is the first screen to be shown.",358],["Creating a World Space UI",359],["The UI system makes it easy to create UI that is positioned in the world among other 2D or 3D objects in the Scene.",359],["Start by creating a UI element (such as an Image) if you don't already have one in your scene by using GameObject > UI > Image. This will also create a Canvas for you.",359],["Set the Canvas to World Space",359],["Select your Canvas and change the Render Mode to World Space.",359],["Now your Canvas is already positioned in the World and can be seen by all cameras if they are pointed at it, but it is probably huge compared to other objects in your Scene. We'll get back to that.",359],["Decide on a resolution",359],["First you need to decide what the resolution of the Canvas should be. If it was an image, what should the pixel resolution of the image be? Something like 800x600 might be a good starting point. You enter the resolution in the Width and Height values of the Rect Transform of the Canvas. It's probably a good idea to set the position to 0,0 at the same time.",359],["Specify the size of the Canvas in the world",359],["Now you should consider how big the Canvas should be in the world. You can use the Scale tool to simply scale it down until it has a size that looks good, or you can decide how big it should be in meters.",359],["If you want it to have a specific width in meters, you can can calculate the needed scale by using meter_size / canvas_width. For example, if you want it to be 2 meters wide and the Canvas width is 800, you would have 2 / 800 = 0.0025. You then set the Scale property of the Rect Transform on the Canvas to 0.0025 for both X, Y, and Z in order to ensure that it's uniformly scaled.",359],["Another way to think of it is that you are controlling the size of one pixel in the Canvas. If the Canvas is scaled by 0.0025, then that is also the size in the world of each pixel in the Canvas.",359],["Position the Canvas",359],["Unlike a Canvas set to Screen Space, a World Space Canvas can be freely positioned and rotated in the Scene. You can put a Canvas on any wall, floor, ceiling, or slanted surface (or hanging freely in the air of course). Just use the normal Translate and Rotate tools in the toolbar.",359],["Create the UI",359],["Now you can begin setting up your UI elements and layouts the same way you would with a Screen Space Canvas.",359],["How do I use Detail Textures?",360],["A Detail texture is a small, fine pattern which is faded in as you approach a surface, for example wood grain, imperfections in stone, or earthly details on a terrain. They are explicitly used with the Diffuse Detail shader.",360],["Detail textures must tile in all directions. Color values from 0-127 makes the object it's applied to darker, 128 doesn't change anything, and lighter colors make the object lighter. It's very important that the image is centered around 128 - otherwise the object it's applied to will get lighter or darker as you approach.",360],["Draw or find a grayscale image of the detail texture.",360],["Save the image next to your main texture.",360],["In Unity, select the image and under \"Generate Mip Maps\", enable Fades Out and set the sliders to something like this in the Import Settings in the Inspector.",360],["The top slider determines how small the texture should before before beginning to fade out, and the bottom determines how far away it is before the detail texture completely disapear.",360],["In the Material Inspector on the right, select Diffuse Detail from the Shader drop-down:",360],["Drag your texture from the Project View to the Detail texture slot.",360],["Set the Tiling values to a high value",360],["How do I Make a Skybox?",361],["A Skybox is a 6-sided cube that is drawn behind all graphics in the game. Here are the steps to create one:",361],["Make 6 textures that correspond to each of the 6 sides of the skybox and put them into your project's Assets folder.",361],["For each texture you need to change the wrap mode from Repeat to Clamp. If you don't do this colors on the edges will not match up:",361],["Create a new Material by choosing Assets-&gt;Create-&gt;Material from the menu bar.",361],["Select the shader drop-down in the top of the Inspector, choose Skybox/6 Sided.",361],["Assign the 6 textures to each texture slot in the material. You can do this by dragging each texture from the Project View onto the corresponding slots.",361],["To Assign the skybox to the scene you're working on:",361],["Choose Window-&gt;Lighting from the menu bar.",361],["In the window that appears select the Scene tab.",361],["Drag the new Skybox Material to the Skybox slot.",361],["How do I use Water?",362],["Note: The content on this page applies to the desktop editor mode only.",362],["Unity includes several water prefabs (including needed shaders, scripts and art assets) within the Standard Assets packages. Separate daylight and nighttime water prefabs are provided.",362],["Water setup",362],["In most cases you just need to place one of the existing Prefabs into your scene (make sure to have the Standard Assets installed):",362],["Simple Daylight Simple Water and Nighttime Simple Water in Standard Assets-&gt;Water.",362],["Fancier water - Daylight Water and Nighttime Water in Pro Standard Assets-&gt;Water (but it needs some assets from Standard Assets-&gt;Water as well). Water mode (Simple, Reflective, Refractive) can be set in the Inspector.",362],["The prefab uses an oval-shaped mesh for the water. If you need to use a different Mesh the easiest way is to simply change it in the Mesh Filter of the water object:",362],["Creating water from scratch (Advanced)",362],["The simple water requires attaching a script to a plane-like mesh and using the water shader:",362],["Have mesh for the water. This should be a flat mesh, oriented horizontally. UV coordinates are not required. The water GameObject should use the Water layer, which you can set in the Inspector.",362],["Attach WaterSimple script (from Standard Assets/Water/Sources) to the object.",362],["Use FX/Water (simple) shader in the material, or tweak one of provided water materials (Daylight Simple Water or Nighttime Simple Water).",362],["The reflective/refractive water requires similar steps to set up from scratch:",362],["Have mesh for the water. This should be a flat mesh, oriented horizontally. UV coordinates are not required. The water GameObject should use the Water layer, which you can set in the Inspector.",362],["Attach Water script (from Pro Standard Assets/Water/Sources) to the object (Water rendering mode can be set in the Inspector: Simple, Reflective or Refractive.)",362],["Use FX/Water shader in the material, or tweak one of provided water materials (Daylight Water or Nighttime Water).",362],["Properties in water materials",362],["These properties are used in Reflective &amp; Refractive water shader. Most of them are used in simple water shader as well.",362],["Property: Function: ",362],["Wave scale Scaling of waves normal map. The smaller the value, the larger water waves. ",362],["Reflection/refraction distort How much reflection/refraction is distorted by the waves normal map. ",362],["Refraction color Additional tint for refraction. ",362],["Environment reflection/refraction Render textures for real-time reflection and refraction. ",362],["Normalmap Defines the shape of the waves. The final waves are produced by combining these two normal maps, each scrolling at different direction, scale and speed. The second normal map is half as large as the first one. ",362],["Wave speed Scrolling speed for first normal map (1st and 2nd numbers) and the second normal map (3rd and 4th numbers). ",362],["Fresnel A texture with alpha channel controlling the Fresnel efffect - how much reflection vs. refraction is visible, based on viewing angle. ",362],["The rest of properties are not used by Reflective &amp; Refractive shader by itself, but need to be set up in case user's video card does not support it and must fallback to the simpler shader:",362],["Property: Function: ",362],["Reflective color/cube and fresnel A texture that defines water color (RGB) and Fresnel effect (A) based on viewing angle. ",362],["Horizon color The color of the water at horizon. (Used only in the simple water shader) ",362],["Fallback texture Texture used to represent the water on really old video cards, if none of better looking shaders can't run on it. ",362],["Hardware support",362],["Reflective + Refractive water works on graphics cards with pixel shader 2.0 support (GeForce FX and up, Radeon 9500 and up, Intel 9xx). On older cards, Reflective water is used.",362],["Reflective water works on graphics cards with pixel shader 1.4 support (GeForce FX and up, Radeon 8500 and up, Intel 9xx). On older cards, Simple water is used.",362],["Simple water works about everywhere, with various levels of detail depending on hardware capabilities.",362],["HTML code to load Unity content",363],["Unity content is loaded in the browser by the Unity Web Player plugin. HTML code usually does not communicate with this plugin directly but via the script called UnityObject2. Its primary task is to make Unity content embedding very simple by shielding the user from various browser- and platform-specific issues. It also enables easy Web Player installation.",363],["The HTML file generated by Unity when building a web player contains all the commonly required functionality. In most cases you don't have to modify the HTML file at all. The rest of the document explains the inner workings of this file.",363],["The UnityObject2 script has to be loaded before it can be used. This is done at the top of the &lt;head&gt; section.",363],["",363],["var unityObjectUrl = \"http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js\";",363],["if (document.location.protocol == 'https:')",363],["unityObjectUrl = unityObjectUrl.replace(\"http://\", \"https://ssl-\");",363],["document.write('');",363],["-->",363],["",363],["You can now instantiate the UnityObject2 class to assist you in various Unity-related tasks, the most important one being embedding Unity content. This is performed by instantiating UnityObject2 and calling initPlugin on the new instance. initPlugin accepts several parameters. The first one specifies the id of the HTML element that will be replaced by Unity content. It could be any HTML element with &lt;div&gt; being the most common. Think of it as a temporary placeholder where Unity should be placed. The second parameter specifies the path to the web player data file to be displayed. See UnityObject2.initPlugin for more info.",363],["var u = new UnityObject2();",363],["u.initPlugin(jQuery(\"#unityPlayer\")[0], \"Example.unity3d\");",363],["Finally, the HTML placeholder is placed inside the &lt;body&gt; section. It could be as simple as &lt;div id=\"unityPlayer\" /&gt;. However for maximum compatibility it's best to place some warning message in case the browser doesn't support JavaScript and the placeholder isn't replaced by UnityObject.",363],["",363],["",363],["",363],["",363],["",363],["",363],["",363],["IME in Unity",364],["What is Input Method Editor (IME)?",364],["An input method is an operating system component or program that allows users to enter characters and symbols not found on their input device. For instance, on the computer, this allows the user of 'Western' keyboards to input Chinese, Japanese, Korean and Indic characters. On many hand-held devices, such as mobile phones, it enables using the numeric keypad to enter Latin alphabet characters.",364],["The term input method generally refers to a particular way to use the keyboard to input a particular language, for example the Cangjie method, the pinyin method, or the use of dead keys.",364],["IME and Unity",364],["Unity provides IME support, which means that you can write non-ASCII characters in all your graphical user interfaces.",364],["This Input Method is fully integrated with the engine so you do not need to do anything to activate it. In order to test it, just change your keyboard language to a non-ASCII language (e.g. Japanese) and just start writing your interface.",364],["For more info and optimization when writting non-ASCII characters, check the character option in the font properties.",364],["Note: IME on Unity is not supported on mac webplayers at the moment.",364],["iOS",364],["This feature is not supported on iOS devices yet.",364],["Android",364],["This feature is not supported on Android devices yet.",364],["Importing Assets",365],["Unity will automatically detect files as they are added to your Project folder's Assets folder. When you put any asset into your Assets folder, you will see the asset appear in your Project View.",365],["When you are organizing your Project View, there is one very important thing to remember:",365],["Never move any assets or organize this folder from the Explorer (Windows) or Finder (OS X). Always use the Project View",365],["There is a lot of meta data stored about relationships between asset files within Unity. This data is all dependent on where Unity expects to find these assets. If you move an asset from within the Project View, these relationships are maintained. If you move them outside of Unity, these relationships are broken. You'll then have to manually re-link lots of dependencies, which is something you probably don't want to do.",365],["So just remember to only save assets to the Assets folder from other applications, and never rename or move files outside of Unity. Always use Project View. You can safely open files for editing from anywhere, of course.",365],["Creating and Updating Assets",365],["When you are building a game and you want to add a new asset of any type, all you have to do is create the asset and save it somewhere in the Assets folder. When you return to Unity or launch it, the added file(s) will be detected and imported.",365],["Additionally, as you update and save your assets, the changes will be detected and the asset will be re-imported in Unity. This allows you to focus on refining your assets without struggling to make them compatible with Unity. Updating and saving your assets normally from its native application provides optimum, hassle-free workflow that feels natural.",365],["Default Values",365],["On some importers it is possible to specify default values for the field references or similar. To specify a default value open the object selector on the field you wish to set a default value for and select an value from the object selector.",365],["Asset Types",365],["There are a handful of basic asset types that will go into your game. The types are:",365],["Mesh Files &amp; Animations",365],["Texture Files",365],["Sound Files",365],["We'll discuss the details of importing each of these file types and how they are used.",365],["Meshes &amp; Animations",365],["Whichever 3D package you are using, Unity will import the meshes and animations from each file. For a list of applications that are supported by Unity, please see this page.",365],["Your mesh file does not need to have an animation to be imported. If you do use animations, you have your choice of importing all animations from a single file, or importing separate files, each with one animation. For more information about importing animations, please see this section of the manual.",365],["Once your mesh is imported into Unity, you can drag it to the Scene or Hierarchy to create an instance of it. You can also add Components to the instance, which will not be attached to mesh file itself.",365],["Meshes will be imported with UVs and a number of default Materials (one material per UV). You can then assign the appropriate texture files to the materials and complete the look of your mesh in Unity's game engine.",365],["Textures",365],["Unity supports all image formats. Even when working with layered Photoshop files, they are imported without disturbing the Photoshop format. This allows you to work with a single texture file for a very care-free and streamlined experience.",365],["You should make your textures in dimensions that are to the power of two (e.g. 32x32, 64x64, 128x128, 256x256, etc.) Simply placing them in your project's Assets folder is sufficient, and they will appear in the Project View.",365],["Once your texture has been imported, you should assign it to a Material. The material can then be applied to a mesh, Particle System, or GUI Texture. Using the Import Settings, it can also be converted to a Cubemap or Normalmap for different types of applications in the game. For more information about importing textures, please read the Texture Component page.",365],["Sounds",365],["Unity features support for two types of audio: Uncompressed Audio or Ogg Vorbis. Any type of audio file you import into your project will be converted to one of these formats.",365],["File Type Conversion",365],["",365],[".AIFF Converted to uncompressed audio on import, best for short sound effects. ",365],[".WAV Converted to uncompressed audio on import, best for short sound effects. ",365],[".MP3 Converted to Ogg Vorbis on import, best for longer music tracks. ",365],[".OGG Compressed audio format, best for longer music tracks. ",365],["Import Settings",365],["If you are importing a file that is not already compressed as Ogg Vorbis, you have a number of options in the Import Settings of the Audio Clip. Select the Audio Clip in the Project View and edit the options in the Audio Importer section of the Inspector. Here, you can compress the Clip into Ogg Vorbis format, force it into Mono or Stereo playback, and tweak other options. There are positives and negatives for both Ogg Vorbis and uncompressed audio. Each has its own ideal usage scenarios, and you generally should not use either one exclusively.",365],["Read more about using Ogg Vorbis or Uncompressed audio on the Audio Clip Component Reference page.",365],["ios",365],["Unity features support for two types of audio: Uncompressed Audio or MP3 Compressed audio. Any type of audio file you import into your project will be converted to one of these formats.",365],["File Type Conversion",365],["",365],[".AIFF Imports as uncompressed audio for short sound effects. Can be compressed in Editor on demand. ",365],[".WAV Imports as uncompressed audio for short sound effects. Can be compressed in Editor on demand. ",365],[".MP3 Imports as Apple Native compressed format for longer music tracks. Can be played on device hardware. ",365],[".OGG OGG compressed audio format, incompatible with the iPhone device. Please use MP3 compressed sounds on the iPhone. ",365],["Import Settings",365],["When you are importing an audio file, you can select its final format and choose to force it to stereo or mono channels. To access the Import Settings, select the Audio Clip in the Project View and find the Audio Importer in the Inspector. Here, you can compress the Clip into Ogg Vorbis format, force it into Mono or Stereo playback, and tweak other options, such as the very important Decompress On Load setting.",365],["Read more about using MP3 Compressed or Uncompressed audio on the Audio Clip Component Reference page.",365],["See also:",365],["Android",365],["Unity features support for two types of audio: Uncompressed Audio or MP3 Compressed audio. Any type of audio file you import into your project will be converted to one of these formats.",365],["File Type Conversion",365],["",365],[".AIFF Imports as uncompressed audio for short sound effects. Can be compressed in Editor on demand. ",365],[".WAV Imports as uncompressed audio for short sound effects. Can be compressed in Editor on demand. ",365],[".MP3 Imports as MP3 compressed format for longer music tracks. ",365],[".OGG Note: the OGG compressed audio format is incompatible with some Android devices, so Unity does not support it for the Android platform. Please use MP3 compressed sounds instead. ",365],["Import Settings",365],["When you are importing an audio file, you can select its final format and choose to force it to stereo or mono channels. To access the Import Settings, select the Audio Clip in the Project View and find the Audio Importer in the Inspector. Here, you can compress the Clip into Ogg Vorbis format, force it into Mono or Stereo playback, and tweak other options, such as the very important Decompress On Load setting.",365],["Read more about using MP3 Compressed or Uncompressed audio on the Audio Clip Component Reference page.",365],["Once sound files are imported, they can be attached to any GameObject. The Audio file will create an Audio Source Component automatically when you drag it onto a GameObject.",365],["Creating an Impression of Large or Small Size",366],["From the graphical point of view, the units of distance in Unity are arbitrary and don't correspond to real world measurements. Although this gives flexibility and convenience for design, it is not always easy to convey the intended size of the object. For example, a toy car looks different to a full size car even though it may be an accurate scale model of the real thing.",366],["A major element in the impression of an object's size is the way the perspective changes over the object's length. For example, if a toy car is viewed from behind then the front of the car will only be a short distance farther away than the back. Since the distance is small, perspective will have relatively little effect and so the front will appear little different in size to the back. With a full size car, however, the front will be several metres farther away from the camera than the back and the effect of perspective will be much more noticeable.",366],["For an object to appear small, the lines of perspective should diverge only very slightly over its depth. You can achieve this by using a narrower field of view than the default 60 degrees and moving the camera farther away to compensate for the increased onscreen size. Conversely, if you want to make an object look big, use a wide FOV and move the camera in close. When these perspective alterations are used with other obvious techniques (like looking down at a \"small\" object from higher-than-normal vantage point) the result can be quite convincing.",366],["Input",367],["Unity supports the conventional types of input device used with games (keyboard, joypad, etc) but also the touchscreens and movement-sensing capabilities of mobile devices. These types of input are covered in this section.",367],["Additionally, Unity can make use of a computer's microphone and webcam to input audio and video data. See the Audio and Graphics sections of the manual for further information.",367],["InputModules",368],["An input module is where the main logic of an event system can be configured and customised. Out of the box there are two provided InputModules, one designed for Standalone, and one designed for Touch input. Each module receives and dispatches events as you would expect on the given configuration.",368],["Input modules are where the 'business logic' of the EventSystem take place. When the EventSystem is enabled it looks at what InputModules are attached and passes update handling to the specific module.",368],["Input modules are designed to be extended or modified based on the input systems that you wish to support. Their purpose is to map hardware specific input (such as touch, joystick, mouse, motion controller) into events that are sent via the messaging system.",368],["The built in Input Modules are designed to support common game configurations such as touch input, controller input, keyboard input, and mouse input. They send a variety of events to controls in the application, if you implement the specific interfaces on your MonoBehaviours. All of the UI components implement the interfaces that make sense for the given component.",368],["Inspector",369],["Games in Unity are made up of multiple GameObjects that contain meshes, scripts, sounds, or other graphical elements like Lights. The Inspector displays detailed information about your currently selected GameObject, including all attached Components and their properties. Here, you modify the functionality of GameObjects in your scene. You can read more about the GameObject-Component relationship, as it is very important to understand.",369],["Any property that is displayed in the Inspector can be directly modified. Even script variables can be changed without modifying the script itself. You can use the Inspector to change variables at runtime to experiment and find the magic gameplay for your game. In a script, if you define a public variable of an object type (like GameObject or Transform), you can drag and drop a GameObject or Prefab into the Inspector to make the assignment.",369],["Click the question mark beside any Component name in the Inspector to load its Component Reference page.",369],["You can click the tiny gear icon (or right-click the Component name) to bring up a context menu for the specific Component.",369],["The Inspector will also show any Import Settings for a selected asset file.",369],["Use the Layer drop-down to assign a rendering Layer to the GameObject. Use the Tag drop-down to assign a Tag to this GameObject.",369],["Prefabs",369],["If you have a Prefab selected, some additional buttons will be available in the Inspector. For more information about Prefabs, please view the Prefab manual page.",369],["Icons",369],["The inspector for all items in Unity is shown with a distinctive icon in the top left corner next to the name. For a GameObject or Prefab, a custom icon can be set to identify the object in the scene. If you click on the icon, a selection menu will appear:-",369],["The large oblong icons at the top of the menu will show the object's name in the Scene View on a panel of the chosen color.",369],["The smaller icons in the lower part of the menu will not show the object's name but simply identify it with a small pip of the chosen shape and color. The Other button at the bottom of the menu lets you select any texture from the project to identify the object.",369],["Labels",369],["Unity allows assets to be marked with Labels to make them easier to locate and categorise. The bottom item on the inspector is the Asset Labels panel.",369],["At the bottom right of this panel is a button titled with an ellipsis (\"...\") character. Clicking this button will bring up a menu of available labels",369],["You can select one or more items from the labels menu to mark the asset with those labels (they will also appear in the Labels panel). If you click a second time on one of the active labels, it will be removed from the asset.",369],["The menu also has a text box that you can use to specify a search filter for the labels in the menu. If you type a label name that does not yet exist and press return/enter, the new label will be added to the list and applied to the selected asset. If you remove a custom label from all assets in the project, it will disappear from the list.",369],["Once you have applied labels to your assets, you can use them to refine searches in the Project Browser (see this page for further details). You can also access an asset's labels from an editor script using the AssetDatabase class.",369],["Inspector Options",370],["The Inspector Lock and the Inspector Debug Mode are two useful options that can help you in your workflow.",370],["Lock",370],["Normally, the inspector shows the details of the currently selected object but it is sometimes useful to keep one object in the inspector while you work with others. To enable this, the inspector has a Lock mode that you can activate with the small padlock icon to the top right of the inspector window.",370],["Note that you can have more than one inspector open at once (menu: Add Tab from the inspector tab menu), so you could keep one locked and have a second one to show the current selection.",370],["Debug/Normal Mode",370],["Another option on the tab menu is the choice between Normal mode and Debug mode. Normally, the inspector shows a custom editor for an asset or component if one is available but sometimes it is handy to see the properties directly. Debug mode shows just the properties rather than a custom editor and for scripts, it also displays private variables (although their values can't be edited like those of public variables).",370],["As with Lock mode, Debug/Normal mode is applied to each inspector individually, so you can have two inspectors open at once to see both views.",370],["Installing Unity",371],["Unity Download Assistant",371],["In Unity 5.0 we have introduced the Unity Download Assistant, a small executable approx. 1 MB in size, which will let you select which components of Unity you want to download and install.",371],["Installing Unity without the Download Assistant",371],["The components downloaded and installed by the Download Assistant are normal installer executables/packages, which can be downloaded and installed separately, e.g. for automated deployment of Unity in an organization.",371],["Installing Unity on Windows from command line",371],["The following options can be used when installing the Unity Editor and other components from command line on Windows. Note that installer command line arguments are case-sensitive.",371],["Unity Editor install",371],["",371],["/S Performs a silent (no questions asked) install. ",371],["/D=PATH Sets the default install directory. Useful when combined with the silent install option. Default folder is C:\\Program Files (x86)\\Unity\\ (32-bit) or C:\\Program Files\\Unity\\ (64-bit) ",371],["Example:**",371],["UnitySetup64.exe /S /D=E:\\Development\\Unity",371],["Install Unity silently to the folder E:\\Development\\Unity, which will be the root of the Unity installation. The Unity editor executable will in this case be installed in E:\\Development\\Unity\\Editor\\Unity.exe. \"/D\" argument must be last and without quotes, even if path contains spaces.",371],["Unity Editor uninstall",371],["Silent uninstall can be performed using the following steps:",371],["Run Uninstall.exe /S e.g. from command line or a script",371],["Note, although the process will finish right away, it takes a few seconds before the files actually have been removed. The reason for this is that the uninstaller is copied to a temporary location, in order to be able to remove itself. Also make sure the working directory is not inside the Unity install location, as it won't be able to remove the folder in that case.",371],["Web Player install",371],["Silently install webplayer (No option to specify install folder):",371],["UnityWebPlayer.exe /S",371],["Standard Assets install",371],["Silently install Standard Assets. If specifying folder, use the Unity \"root\" folder, i.e. the folder containing Editor folder and not where Unity.exe is installed into.",371],["UnityStandardAssetsSetup.exe /S /D=E:\\Development\\Unity",371],["Example Project install",371],["Silently install Example Project. Default folder is C:\\Users\\Public\\Documentation\\Unity Projects\\Standard Assets Example Project",371],["UnityExampleProjectSetup.exe /S /D=E:\\Development\\Unity",371],["Installing Unity on OS X from command line",371],["The individual Unity installers are provided as .pkg files, which can be installed using installer as described below.",371],["Unity Editor install",371],["Installs into folder /Applications/Unity on the specified target volume:",371],["sudo installer [-dumplog] -package Unity.pkg -target /",371],["Web Player install",371],["The Unity Web Player is installed in /Library/Internet Plug-ins/Unity Web Player.plugin on Mac.",371],["sudo installer [-dumplog] -package WebPlayer.pkg -target /",371],["Standard Assets install",371],["Installs into folder /Applications/Unity/Standard Assets on the specified volume:",371],["sudo installer [-dumplog] -package StandardAssets.pkg -target /",371],["Example Project install",371],["Install into folder /Users/Shared/Unity/Standard-Assets on the specified volume:",371],["sudo installer [-dumplog] -package Examples.pkg -target /",371],["Torrent download",371],["Additionally you can also download the individual installers from a torrent near you. Go to http://unity3d.com/download for a torrent download feed link.",371],["Installing several versions at once",371],["You can install as many versions of Unity as you like on the same computer. The installer will always create a folder called \"Unity\" and will overwrite any existing folder with this name. However, if you rename the folder to something else before installing then both versions can happily live on the same computer.",371],["We strongly recommend that you choose the new folder name carefully (eg, add the version number to the end of the name, \"Unity4\", etc). Also, be aware that any existing shortcuts, aliases and links to the offline docs will no longer point to the old version of Unity. This can be particularly confusing with the offline docs; if you suddenly find that browser bookmarks to the offline docs no longer work then check that they have the right folder name in the URL.",371],["Instantiating Prefabs at runtime",372],["By this point you should understand the concept of Prefabs at a fundamental level. They are a collection of predefined GameObjects &amp; Components that are re-usable throughout your game. If you don't know what a Prefab is, we recommend you read the Prefabs page for a more basic introduction.",372],["Prefabs come in very handy when you want to instantiate complicated GameObjects at runtime. The alternative to instantiating Prefabs is to create GameObjects from scratch using code. Instantiating Prefabs has many advantages over the alternative approach:",372],["You can instantiate a Prefab from one line of code, with complete functionality. Creating equivalent GameObjects from code takes an average of five lines of code, but likely more.",372],["You can set up, test, and modify the Prefab quickly and easily in the Scene and Inspector.",372],["You can change the Prefab being instanced without changing the code that instantiates it. A simple rocket might be altered into a super-charged rocket, and no code changes are required.",372],["Common Scenarios",372],["To illustrate the strength of Prefabs, let's consider some basic situations where they would come in handy:",372],["Building a wall out of a single \"brick\" Prefab by creating it several times in different positions.",372],["A rocket launcher instantiates a flying rocket Prefab when fired. The Prefab contains a Mesh, Rigidbody, Collider, and a child GameObject with its own trail Particle System.",372],["A robot exploding to many pieces. The complete, operational robot is destroyed and replaced with a wrecked robot Prefab. This Prefab would consist of the robot split into many parts, all set up with Rigidbodies and Particle Systems of their own. This technique allows you to blow up a robot into many pieces, with just one line of code, replacing one object with a Prefab.",372],["Building a wall",372],["This explanation will illustrate the advantages of using a Prefab vs creating objects from code.",372],["First, lets build a brick wall from code:",372],["// JavaScript",372],["function Start () {",372],["for (var y = 0; y &lt; 5; y++) {",372],["for (var x = 0; x &lt; 5; x++) {",372],["var cube = GameObject.CreatePrimitive(PrimitiveType.Cube);",372],["cube.AddComponent.();",372],["cube.transform.position = Vector3 (x, y, 0);",372],["// C#",372],["public class Instantiation : MonoBehaviour {",372],["void Start() {",372],["for (int y = 0; y &lt; 5; y++) {",372],["for (int x = 0; x &lt; 5; x++) {",372],["GameObject cube = GameObject.CreatePrimitive(PrimitiveType.Cube);",372],["cube.AddComponent();",372],["cube.transform.position = new Vector3(x, y, 0);",372],["To use the above script we simply save the script and drag it onto an empty GameObject.",372],["Create an empty GameObject with GameObject-&gt;Create Empty.",372],["If you execute that code, you will see an entire brick wall is created when you enter Play mode. There are two lines relevant to the functionality of each individual brick: the CreatePrimitive line, and the AddComponent line. Not so bad right now, but each of our bricks is un-textured. Every additional action to want to perform on the brick, like changing the texture, the friction, or the Rigidbody mass, is an extra line.",372],["If you create a Prefab and perform all your setup before-hand, you use one line of code to perform the creation and setup of each brick. This relieves you from maintaining and changing a lot of code when you decide you want to make changes. With a Prefab, you just make your changes and Play. No code alterations required.",372],["If you're using a Prefab for each individual brick, this is the code you need to create the wall.",372],["// JavaScript",372],["var brick : Transform;",372],["function Start () {",372],["for (var y = 0; y &lt; 5; y++) {",372],["for (var x = 0; x &lt; 5; x++) {",372],["Instantiate(brick, Vector3 (x, y, 0), Quaternion.identity);",372],["// C#",372],["public Transform brick;",372],["void Start() {",372],["for (int y = 0; y &lt; 5; y++) {",372],["for (int x = 0; x &lt; 5; x++) {",372],["Instantiate(brick, new Vector3(x, y, 0), Quaternion.identity);",372],["This is not only very clean but also very reusable. There is nothing saying we are instantiating a cube or that it must contain a rigidbody. All of this is defined in the Prefab and can be quickly created in the Editor.",372],["Now we only need to create the Prefab, which we do in the Editor. Here's how:",372],["Choose GameObject &gt; 3D Object &gt; Cube",372],["Choose Component &gt; Physics &gt; Rigidbody",372],["Choose Assets &gt; Create &gt; Prefab",372],["In the Project View, change the name of your new Prefab to \"Brick\"",372],["Drag the cube you created in the Hierarchy onto the \"Brick\" Prefab in the Project View",372],["With the Prefab created, you can safely delete the Cube from the Hierarchy (Delete on Windows, Command-Backspace on Mac)",372],["We've created our Brick Prefab, so now we have to attach it to the brick variable in our script. When you select the empty GameObject that contains the script, the Brick variable will be visible in the inspector.",372],["Now drag the \"Brick\" Prefab from the Project View onto the brick variable in the Inspector. Press Play and you'll see the wall built using the Prefab.",372],["This is a workflow pattern that can be used over and over again in Unity. In the beginning you might wonder why this is so much better, because the script creating the cube from code is only 2 lines longer.",372],["But because you are using a Prefab now, you can adjust the Prefab in seconds. Want to change the mass of all those instances? Adjust the Rigidbody in the Prefab only once. Want to use a different Material for all the instances? Drag the Material onto the Prefab only once. Want to change friction? Use a different Physic Material in the Prefab's collider. Want to add a Particle System to all those boxes? Add a child to the Prefab only once.",372],["Instantiating rockets &amp; explosions",372],["Here's how Prefabs fit into this scenario:",372],["A rocket launcher instantiates a rocket Prefab when the user presses fire. The Prefab contains a mesh, Rigidbody, Collider, and a child GameObject that contains a trail particle system.",372],["The rocket impacts and instantiates an explosion Prefab. The explosion Prefab contains a Particle System, a light that fades out over time, and a script that applies damage to surrounding GameObjects.",372],["While it would be possible to build a rocket GameObject completely from code, adding Components manually and setting properties, it is far easier to instantiate a Prefab. You can instantiate the rocket in just one line of code, no matter how complex the rocket's Prefab is. After instantiating the Prefab you can also modify any properties of the instantiated object (e.g. you can set the velocity of the rocket's Rigidbody).",372],["Aside from being easier to use, you can update the prefab later on. So if you are building a rocket, you don't immediately have to add a Particle trail to it. You can do that later. As soon as you add the trail as a child GameObject to the Prefab, all your instantiated rockets will have particle trails. And lastly, you can quickly tweak the properties of the rocket Prefab in the Inspector, making it far easier to fine-tune your game.",372],["This script shows how to launch a rocket using the Instantiate() function.",372],["// JavaScript",372],["// Require the rocket to be a rigidbody.",372],["// This way we the user can not assign a prefab without rigidbody",372],["var rocket : Rigidbody;",372],["var speed = 10.0;",372],["function FireRocket () {",372],["var rocketClone : Rigidbody = Instantiate(rocket, transform.position, transform.rotation);",372],["rocketClone.velocity = transform.forward * speed;",372],["// You can also acccess other components / scripts of the clone",372],["rocketClone.GetComponent.().DoSomething();",372],["// Calls the fire method when holding down ctrl or mouse",372],["function Update () {",372],["if (Input.GetButtonDown(\"Fire1\")) {",372],["FireRocket();",372],["// C#",372],["// Require the rocket to be a rigidbody.",372],["// This way we the user can not assign a prefab without rigidbody",372],["public Rigidbody rocket;",372],["public float speed = 10f;",372],["void FireRocket () {",372],["Rigidbody rocketClone = (Rigidbody) Instantiate(rocket, transform.position, transform.rotation);",372],["rocketClone.velocity = transform.forward * speed;",372],["// You can also acccess other components / scripts of the clone",372],["rocketClone.GetComponent().DoSomething();",372],["// Calls the fire method when holding down ctrl or mouse",372],["void Update () {",372],["if (Input.GetButtonDown(\"Fire1\")) {",372],["FireRocket();",372],["Replacing a character with a ragdoll or wreck",372],["Let's say you have a fully rigged enemy character and he dies. You could simply play a death animation on the character and disable all scripts that usually handle the enemy logic. You probably have to take care of removing several scripts, adding some custom logic to make sure that no one will continue attacking the dead enemy anymore, and other cleanup tasks.",372],["A far better approach is to immediately delete the entire character and replace it with an instantiated wrecked prefab. This gives you a lot of flexibility. You could use a different material for the dead character, attach completely different scripts, spawn a Prefab containing the object broken into many pieces to simulate a shattered enemy, or simply instantiate a Prefab containing a version of the character.",372],["Any of these options can be achieved with a single call to Instantiate(), you just have to hook it up to the right prefab and you're set!",372],["The important part to remember is that the wreck which you Instantiate() can be made of completely different objects than the original. For example, if you have an airplane, you would model two versions. One where the plane consists of a single GameObject with Mesh Renderer and scripts for airplane physics. By keeping the model in just one GameObject, your game will run faster since you will be able to make the model with less triangles and since it consists of fewer objects it will render faster than using many small parts. Also while your plane is happily flying around there is no reason to have it in separate parts.",372],["To build a wrecked airplane Prefab, the typical steps are:",372],["Model your airplane with lots of different parts in your favorite modeler",372],["Create an empty Scene",372],["Drag the model into the empty Scene",372],["Add Rigidbodies to all parts, by selecting all the parts and choosing Component-&gt;Physics-&gt;Rigidbody",372],["Add Box Colliders to all parts by selecting all the parts and choosing Component-&gt;Physics-&gt;Box Collider",372],["For an extra special effect, add a smoke-like Particle System as a child GameObject to each of the parts",372],["Now you have an airplane with multiple exploded parts, they fall to the ground by physics and will create a Particle trail due to the attached particle system. Hit Play to preview how your model reacts and do any necessary tweaks.",372],["Choose Assets-&gt;Create Prefab",372],["Drag the root GameObject containing all the airplane parts into the Prefab",372],["The following example shows how these steps are modelled in code.",372],["// JavaScript",372],["var wreck : GameObject;",372],["// As an example, we turn the game object into a wreck after 3 seconds automatically",372],["function Start () {",372],["yield WaitForSeconds(3);",372],["KillSelf();",372],["// Calls the fire method when holding down ctrl or mouse",372],["function KillSelf () {",372],["// Instantiate the wreck game object at the same position we are at",372],["var wreckClone = Instantiate(wreck, transform.position, transform.rotation);",372],["// Sometimes we need to carry over some variables from this object",372],["// to the wreck",372],["wreckClone.GetComponent.().someVariable = GetComponent.().someVariable;",372],["// Kill ourselves",372],["Destroy(gameObject);",372],["// C#",372],["public GameObject wreck;",372],["// As an example, we turn the game object into a wreck after 3 seconds automatically",372],["IEnumerator Start() {",372],["yield return new WaitForSeconds(3);",372],["KillSelf();",372],["// Calls the fire method when holding down ctrl or mouse",372],["void KillSelf () {",372],["// Instantiate the wreck game object at the same position we are at",372],["GameObject wreckClone = (GameObject) Instantiate(wreck, transform.position, transform.rotation);",372],["// Sometimes we need to carry over some variables from this object",372],["// to the wreck",372],["wreckClone.GetComponent().someVariable = GetComponent().someVariable;",372],["// Kill ourselves",372],["Destroy(gameObject);",372],["Placing a bunch of objects in a specific pattern",372],["Lets say you want to place a bunch of objects in a grid or circle pattern. Traditionally this would be done by either:",372],["Building an object completely from code. This is tedious! Entering values from a script is both slow, unintuitive and not worth the hassle.",372],["Make the fully rigged object, duplicate it and place it multiple times in the scene. This is tedious, and placing objects accurately in a grid is hard.",372],["So use Instantiate() with a Prefab instead! We think you get the idea of why Prefabs are so useful in these scenarios. Here's the code necessary for these scenarios:",372],["// JavaScript",372],["// Instantiates a prefab in a circle",372],["var prefab : GameObject;",372],["var numberOfObjects = 20;",372],["var radius = 5;",372],["function Start () {",372],["for (var i = 0; i &lt; numberOfObjects; i++) {",372],["var angle = i * Mathf.PI * 2 / numberOfObjects;",372],["var pos = Vector3 (Mathf.Cos(angle), 0, Mathf.Sin(angle)) * radius;",372],["Instantiate(prefab, pos, Quaternion.identity);",372],["// C#",372],["// Instantiates a prefab in a circle",372],["public GameObject prefab;",372],["public int numberOfObjects = 20;",372],["public float radius = 5f;",372],["void Start() {",372],["for (int i = 0; i &lt; numberOfObjects; i++) {",372],["float angle = i * Mathf.PI * 2 / numberOfObjects;",372],["Vector3 pos = new Vector3(Mathf.Cos(angle), 0, Mathf.Sin(angle)) * radius;",372],["Instantiate(prefab, pos, Quaternion.identity);",372],["// JavaScript",372],["// Instantiates a prefab in a grid",372],["var prefab : GameObject;",372],["var gridX = 5;",372],["var gridY = 5;",372],["var spacing = 2.0;",372],["function Start () {",372],["for (var y = 0; y &lt; gridY; y++) {",372],["for (var x=0;x",372],["var pos = Vector3 (x, 0, y) * spacing;",372],["Instantiate(prefab, pos, Quaternion.identity);",372],["// C#",372],["// Instantiates a prefab in a grid",372],["public GameObject prefab;",372],["public float gridX = 5f;",372],["public float gridY = 5f;",372],["public float spacing = 2f;",372],["void Start() {",372],["for (int y = 0; y &lt; gridY; y++) {",372],["for (int x = 0; x &lt; gridX; x++) {",372],["Vector3 pos = new Vector3(x, 0, y) * spacing;",372],["Instantiate(prefab, pos, Quaternion.identity);",372],["Inverse Kinematics",373],["Most animation is produced by rotating the angles of joints in a skeleton to predetermined values. The position of a child joint changes according to the rotation of its parent and so the end point of a chain of joints can be determined from the angles and relative positions of the individual joints it contains. This method of posing a skeleton is known as forward kinematics.",373],["However, it is often useful to look at the task of posing joints from the opposite point of view - given a chosen position in space, work backwards and find a valid way of orienting the joints so that the end point lands at that position. This can be useful when you want a character to touch an object at a point selected by the user or plant its feet convincingly on an uneven surface. This approach is known as Inverse Kinematics (IK) and is supported in Mecanim for any humanoid character with a correctly configured Avatar.",373],["To set up IK for a character, you typically have objects around the scene that a character interacts with, and then set up the IK thru script, in particular, Animator functions like",373],["SetIKPositionWeight,",373],["SetIKRotationWeight,",373],["SetIKPosition,",373],["SetIKRotation,",373],["SetLookAtPosition,",373],["bodyPosition,",373],["In the illustration above, we show a character grabbing a cylindrical object. How do we make this happen?",373],["We start out with a character that has a valid Avatar.",373],["Next create an Animator Controller with containing at least one animation for the character. Then in the Layers pane of the Animator window, click the cog settings icon of the Layer and and check the IK Pass checkbox in the menu which pops up.",373],["Make sure the Animator Controller is assigned to the character's Animator Component:",373],["Next, attach to it a script that actually takes care of the IK, let's call it IKControl. This script sets the IK target for the character's right hand, and its look position to make it look at the object it is holding:",373],["using UnityEngine;",373],["using System;",373],["using System.Collections;",373],["[RequireComponent(typeof(Animator))]",373],["public class IKControl : MonoBehaviour {",373],["protected Animator animator;",373],["public bool ikActive = false;",373],["public Transform rightHandObj = null;",373],["public Transform lookObj = null;",373],["void Start ()",373],["animator = GetComponent();",373],["//a callback for calculating IK",373],["void OnAnimatorIK()",373],["if(animator) {",373],["//if the IK is active, set the position and rotation directly to the goal.",373],["if(ikActive) {",373],["// Set the look target position, if one has been assigned",373],["if(lookObj != null) {",373],["animator.SetLookAtWeight(1);",373],["animator.SetLookAtPosition(lookObj.position);",373],["// Set the right hand target position and rotation, if one has been assigned",373],["if(rightHandObj != null) {",373],["animator.SetIKPositionWeight(AvatarIKGoal.RightHand,1);",373],["animator.SetIKRotationWeight(AvatarIKGoal.RightHand,1);",373],["animator.SetIKPosition(AvatarIKGoal.RightHand,rightHandObj.position);",373],["animator.SetIKRotation(AvatarIKGoal.RightHand,rightHandObj.rotation);",373],["//if the IK is not active, set the position and rotation of the hand and head back to the original position",373],["else {",373],["animator.SetIKPositionWeight(AvatarIKGoal.RightHand,0);",373],["animator.SetIKRotationWeight(AvatarIKGoal.RightHand,0);",373],["animator.SetLookAtWeight(0);",373],["As we do not intend for the character's hand to reach inside the object to its centre (the cylinder's pivot point), we position an empty child object (in this case, named \"Cylinder Grab Handle\") where the hand should be on the cylinder, and rotate it accordingly. The hand then targets this child object.",373],["This \"grab handle\" Game Object should then be assigned as the \"Right Hand Obj\" property of the IKControl script",373],["In this example, we have the look target set to the cylinder itself, so the character looks directly towards the centre of the object even through the handle is near the bottom.",373],["Enter play mode, and you should see the IK come to life. Observe the character grabbing and ungrabbing the object as you click the IKActive checkbox, and try moving the cylinder around in playmode to see the arm and hand follow the object.",373],["Customising WWW Requests on iOS",374],["You can use a plugin to replace the default code that Unity uses when handling requests with the WWW class. You might do this, for example, to change the default caching behaviour, which caches on the basis of the URL alone.",374],["Example",374],["The following code (described in more detail below) disables the default caching method and adds a \"secret\" header field to the request in addition to the headers specified from the game's script code.",374],["// Code placed at Plugins/iOS/CustomConnection.mm within the Assets folder.",374],["include \"Unity/WWWConnection.h\"",374],["@interface UnityWWWCustomRequestProvider : UnityWWWRequestDefaultProvider",374],["\n(NSMutableURLRequest*)allocRequestForHTTPMethod:(NSString*)method url:(NSURL*)url headers:(NSDictionary*)headers;\n",374],["@end",374],["@implementation UnityWWWCustomRequestProvider",374],["\n(NSMutableURLRequest*)allocRequestForHTTPMethod:(NSString*)method url:(NSURL*)url headers:(NSDictionary*)headers\n",374],["NSMutableURLRequest* request = [super allocRequestForHTTPMethod:method url:url headers:headers];",374],["// let's pretend for security reasons we dont want ANY cache nor cookies",374],["request.cachePolicy = NSURLRequestReloadIgnoringLocalCacheData;",374],["[request setHTTPShouldHandleCookies:NO];",374],["// let's pretend we want special secret info in header",374],["[request setValue:@\"123456789\"forHTTPHeaderField:@\"Secret\"];",374],["return request;",374],["@end",374],["@interface UnityWWWCustomConnectionDelegate : UnityWWWConnectionDelegate",374],["@end",374],["@implementation UnityWWWCustomConnectionDelegate",374],["\n(NSCachedURLResponse*)connection:(NSURLConnection*)connection willCacheResponse:(NSCachedURLResponse*)cachedResponse\n",374],["// we dont want caching",374],["return nil;",374],["\n(void)connection:(NSURLConnection*)connection didReceiveResponse:(NSURLResponse*)response\n",374],["// let's just print something here for test",374],["[super connection:connection didReceiveResponse:response];",374],["if([response isMemberOfClass:[NSHTTPURLResponse class]])",374],["::printf_console(\"We've got response with status: %d\\n\", [(NSHTTPURLResponse*)response statusCode]);",374],["@end",374],["IMPL_WWW_DELEGATE_SUBCLASS(UnityWWWCustomConnectionDelegate);",374],["IMPL_WWW_REQUEST_PROVIDER(UnityWWWCustomRequestProvider);",374],["The code breaks down as follows. Firstly, we create a subclass of UnityWWWRequestDefaultProvider to provide a modified NSURLRequest object for the connection. Another option is simply to implement the UnityWWWRequestProvider protocol in the class from scratch. In this case, however, we want to make use of Unity's existing code.",374],["@interface UnityWWWCustomRequestProvider : UnityWWWRequestDefaultProvider",374],["\n(NSMutableURLRequest*)allocRequestForHTTPMethod:(NSString*)method url:(NSURL*)url headers:(NSDictionary*)headers;\n",374],["@end",374],["The \"action\" happens in allocRequestForHTTPMethod which starts by calling the same method on the superclass:",374],["@implementation UnityWWWCustomRequestProvider",374],["\n(NSMutableURLRequest*)allocRequestForHTTPMethod:(NSString*)method url:(NSURL*)url headers:(NSDictionary*)headers\n",374],["NSMutableURLRequest* request = [super allocRequestForHTTPMethod:method url:url headers:headers];",374],["From there, we disable the default data caching done by iOS and also disable cookies:",374],["request.cachePolicy = NSURLRequestReloadIgnoringLocalCacheData;",374],["[request setHTTPShouldHandleCookies:NO];",374],["Next, we add a header field called \"Secret\" that provides some additional data. In a real game, this might be a value checked by the server to verify the source of the connection, say.",374],["[request setValue:@\"123456789\"forHTTPHeaderField:@\"Secret\"];",374],["Having created the custom request handling class, we also need to create a subclass of UnityWWWConnectionDelegate to customise the handling of the connection:",374],["@interface UnityWWWCustomConnectionDelegate : UnityWWWConnectionDelegate",374],["@end",374],["We can disable data caching by returning a nil value from the connection:willCacheResponse: method:",374],["\n(NSCachedURLResponse*)connection:(NSURLConnection*)connection willCacheResponse:(NSCachedURLResponse*)cachedResponse\n",374],["// we dont want caching",374],["return nil;",374],["We can handle the connection itself from connection:didReceiveResponse:, which should call the same method on the superclass to actually get the data. Here, we simply print a message to the console when the connection happens but you could implement anything you like here:",374],["\n(void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response\n",374],["// let's just print something here for test",374],["[super connection:connection didReceiveResponse:response];",374],["if([response isMemberOfClass:[NSHTTPURLResponse class]])",374],["::printf_console(\"We've got response with status: %d\\n\", [(NSHTTPURLResponse*)response statusCode]);",374],["Finally, we register our new connection delegate and request provider with Unity so they will be called whenever a WWW request is issued from a script:",374],["IMPL_WWW_DELEGATE_SUBCLASS(UnityWWWCustomConnectionDelegate);",374],["IMPL_WWW_REQUEST_PROVIDER(UnityWWWCustomRequestProvider);",374],["The custom code is transparent to the use of the WWW class within Unity - no extra code needs to be added to the C#/JS script.",374],["Upgrading to 64 bit iOS",375],["iOS 64 bit support is coming to Unity 4.6 with our new scripting backend called IL2CPP. It runs your C#/UnityScript and Boo code as before, but using a completely new and revamped technology that we have been developing of the course of the last few years.",375],["The IL2CPP runtime combines an ahead of time compiler with a virtual machine to convert assemblies to C++ while leveraging standard platform C++ compilers to produce native binaries. The net result is significantly higher performance, platform compatibility and maintainability.",375],["IL2CPP is the only scripting backend to support deploying to ARM 64-bit on iOS, and is thus mandatory to deploy to the Apple app-store for releasing new apps.",375],["To read more about IL2CPP on our announcement blogpost, and more about iOS 64-bit and IL2CPP in our update blogpost.",375],["How to start using IL2CPP on iOS",375],["Pick it in Scripting Backend dropdown in Player Settings.",375],["By default it will build for Universal architecture (including both ARM64 and ARMv7), if needed you might switch to specific architecture in Player Settings. There is number of things that should be done before your application is up and running in 64 bits:",375],["You need 64 bit capable device to test on. These are all iOS devices with A7 or later chip (currently these are: iPhone 5S, iPad Air, iPad Mini Retina, iPhone 6, iPhone 6 Plus, iPad Mini 3, iPad Air 2).",375],["You need all your native plugins to be compiled with 64 bit support (or be provided as source code). If you are using 3rd party plugin, you should contact your plugin vendor to obtain 64 bit capable and IL2CPP compatible version of that plugin. At the moment all latest Prime31 plugins are known to be good.",375],["If you are the plugin vendor or just have your own native plugins then you need keep couple of things in mind:",375],["IL2CPP is not API-compatible (which is unexposed) with the Mono Runtime API, which means if plugin is using mono_* functions won't link anymore. The best way to resolve this issue is to switch to managed delegate/callback approach and pass your managed callbacks to the native side of plugin and call them back from there when some native data or event arrives.",375],["All plugins that come as precompiled static libraries (.a files) should now include ARM64 slice.",375],["When doing native code/type conversion keep in mind that pointers and longs are now 64 bit wide and ints are still 32 wide.",375],["To minimise generated amount of C++ code IL2CPP is always (even when Stripping level is set to Disabled) doing some sort of managed code stripping. Sometimes you will need to help it. Look for link.xml guide in iOS player size optimization manual.",375],["The UnityEngine.Network* APIs are currently not supported for IL2CPP builds.",375],["Troubleshooting",375],["Q: My code is running slower on IL2CPP than on Mono. Why?",375],["A: Make sure you are testing your code performance in Xcode Release configuration. If issue still remains, please submit a bugreport!",375],["Q: Unity generated Xcode project fails to compile with following or similar error: Method not found: 'Default constructor not found...ctor() of System.ComponentModel.Int64Converter'.",375],["A: Deserializers and serializers often reference some types only via .NET Reflection API and in such cases these methods or even classes might be stripped from project. You can hint managed code stripper that specific class / method is used either via link.xml or via introduction of dummy code that explicitly references it in one of your scripts.",375],["Q: Unity generated Xcode project fails to compile with some other error.",375],["A: Please verify if all your plugins support ARM64 and IL2CPP and if that’s the case please submit a bug report and attach your project (or just scripting part of it) to the bug report. Thanks!",375],["Account Setup",376],["There are some steps you must follow before you can build and run any code (including Unity-built games) on your iOs device. These steps are prerequisite to publishing your own iOS games.",376],["Apply to Apple to become a registered iPhone/iPad developer. You do this through Apple's website: https://developer.apple.com/programs/ios/",376],["Upgrade your operating system and iTunes installation. Please note that these are Apple's requirements as part of using the iPhone SDK, but the requirements can change from time to time.",376],["Download the latest iOS SDK from the iOS dev center and install it. Do not download the beta version of the SDK - you should use only the latest shipping version. Note that downloading and installing the iPhone SDK will also install XCode.",376],["Get your device identifier. Connect your iOS device to the Mac with the USB cable and launch XCode. XCode will detect your phone as a new device and you should register it with the \"Use For Development\" button. This will usually open the Organizer window but if it doesn't then go to Window-&gt;Organizer. You should see your iOS device) in the devices list on the left; select it and note your device's identifier code (which is about 40 characters long).",376],["Add your device. Log in to the iPhone developer center and enter the program portal (button on the right). Go to the Devices page via the link on left side and then click the Add Device button on the right. Enter a name for your device (alphanumeric characters only) and your device's identifier code (noted in step 5 above). Click the Submit button when done.",376],["Create a certificate. From the iPhone Developer Program Portal, click the Certificates link on the left side and click the plus sign to add a new certificate.",376],["Download and install the WWDR intermediate certificate. The download link is in the same \"Certificates\" section (just above the \"Important Notice\" rubric) as WWDR Intermediate Certificate. Once downloaded, double-click the certificate file to install it.",376],["Create a Provisioning File. Provisioning profiles are a bit complex, and need to be set up according to the way you have organized your team. It is difficult to give general instructions for provisioning, so we recommend that you look at the Provisioning How-to section on the Apple Developer website.",376],["iOS Scripting",377],["Most features of the iOS devices are exposed through the Input and Handheld classes. For cross-platform projects, UNITY_IPHONE is defined for conditionally compiling iOS-specific C# code.",377],["Unity iOS Basics",378],["This section covers the most common and important questions that come up when starting to work with iOS.",378],["Prerequisites",378],["I've just received iPhone Developer approval from Apple, but I've never developed for iOS before. What do I do first?",378],["A: Download the SDK, get up and running on the Apple developer site, and set up your team, devices, and provisioning. We've provided a basic list of steps to get you started.",378],["Can Unity-built games run in the iPhone Simulator?",378],["A: No, but Unity iOS can build to iPad Simulator if you're using the latest SDK. However the simulator itself is not very useful for Unity because it does not simulate all inputs from iOS or properly emulate the performance you get on the iPhone/iPad. You should test out gameplay directly inside Unity using the iPhone/iPad as a remote control while it is running the Unity Remote application. Then, when you are ready to test performance and optimize the game, you publish to iOS devices.",378],["Unity Features",378],["How do I work with the touch screen and accelerometer?",378],["A: In the scripting reference inside your Unity iOS installation, you will find classes that provide the hooks into the device's functionality that you will need to build your apps. Consult the Input page for more information.",378],["My existing particle systems seem to run very slowly on iOS. What should I do?",378],["A: iOS has relatively low fillrate. If your particles cover a rather large portion of the screen with multiple layers, it will kill iOS performance even with the simplest shader. We suggest baking your particle effects into a series of textures off-line. Then, at run-time, you can use 1-2 particles to display them via animated textures. You can get fairly decent looking effects with a minimum amount of overdraw this way.",378],["Can I make a game that uses heavy physics?",378],["A: Physics can be expensive on iOS as it requires a lot of floating point number crunching. You should completely avoid MeshColliders if at all possible, but they can be used if they are really necessary. To improve performance, use a low fixed framerate using Edit-&gt;Time-&gt;Fixed Delta Time. A framerate of 10-30 is recommended. Enable rigidbody interpolation to achieve smooth motion while using low physics frame rates. In order to achieve completely fluid framerate without oscillations, it is best to pick fixed deltaTime value based on the average framerate your game is getting on iOS. Either 1:1 or half the frame rate is recommended. For example, if you get 30 fps, you should use 15 or 30 fps for fixed frame rate (0.033 or 0.066)",378],["Can I access the gallery, music library or the native iPod player in Unity iOS?",378],["A: Yes - if you implement it. Unity iPhone supports the native plugin system, where you can add any feature you need -- including access to Gallery, Music library, iPod Player and any other feature that the iOS SDK exposes. Unity iOS does not provide an API for accessing the listed features through Unity scripts.",378],["UnityGUI Considerations",378],["What kind of performance impact will UnityGUI make on my games?",378],["A: UnityGUI is fairly expensive when many controls are used. It is ideal to limit your use of UnityGUI to game menus or very minimal GUI Controls while your game is running. It is important to note that every object with a script containing an OnGUI() call will require additional processor time -- even if it is an empty OnGUI() block. It is best to disable any scripts that have an OnGUI() call if the GUI Controls are not being used. You can do this by marking the script as enabled = false.",378],["Any other tips for using UnityGUI?",378],["A: Try using GUILayout as little as possible. If you are not using GUILayout at all from one OnGUI() call, you can disable all GUILayout rendering using MonoBehaviour.useGUILayout = false; This doubles GUI rendering performance. Finally, use as few GUI elements while rendering 3D scenes as possible.",378],["Reporting crash bugs on iOS",379],["Before submitting a bug report, please check the iOS Troubleshooting page, where you will find solutions to common crashes and other problems.",379],["If your application crashes in the Xcode debugger then you can add valuable information to your bug report as follows:-",379],["Click Continue (Run-&gt;Continue) twice",379],["Open the debugger console (Run-&gt;Console) and enter (in the console): thread apply all bt",379],["Copy all console output and send it together with your bugreport.",379],["If your application crashes on the iOS device then you should retrieve the crash report as described here on Apple's website. Please attach the crash report, your built application and console log to your bug report before submitting.",379],["Inside the iOS build process",380],["The iPhone/iPad application build process is a two step process:",380],["XCode project is generated with all the required libraries, precompiled .NET code and serialized assets.",380],["XCode project is built and deployed on the actual device.",380],["When \"Build\" is hit on \"Build settings\" dialog only the first step is accomplished. Hitting \"Build and Run\" performs both steps.",380],["If in the project save dialog the user selects an already existing folder an alert is displayed. Currently there are two XCode project generation modes to select:",380],["replace - all the files from target folder are removed and the new content is generated",380],["append - the \"Data\", \"Libraries\" and project root folder are cleaned and filled with newly generated content. The XCode project file is updated according to the latest Unity project changes. XCode project \"Classes\" subfolder could be considered as safe place to place custom native code, but making regular backups is recommended. Append mode is supported only for the existing XCode projects generated with the same Unity iOS version.",380],["If Cmd+B is hit then the automatic build and run process is invoked and the latest used folder is assumed as the build target. In this case append mode is assumed as default.",380],["Preparing your application for \"In App Purchases\"",381],["This chapter does not describe how to integrate your game with Apple's StoreKit API. It is assumed that you already have integration with StoreKit via a native code plugin.",381],["The Apple StoreKit documentation defines four kinds of products that can be sold via the In App Purchase process:",381],["Content",381],["Functionality",381],["Services",381],["Subscriptions",381],["This chapter covers the first case only and focuses mainly on the downloadable content concept. AssetBundles are recommended for implementing downloadable content in Unity and both the creation and runtime usage of AssetBundles will be covered here.",381],["Exporting your assets for use on iOS",381],["It is sometimes useful to maintain separate projects for your main application and the downloadable AssetBundles that it will use. However, you should note that all scripts referenced by objects in the AssetBundle must be present in the main game executable. The project you use to create the AssetBundle must have iOS as the selected build target since the content of AssetBundle files is not compatible between iOS and other platforms.",381],["AssetBundles are created using editor scripts - a simple example is given below:-",381],["// C#",381],["using UnityEngine;",381],["using UnityEditor;",381],["public class ExportBundle : MonoBehaviour {",381],["[MenuItem (\"Assets/Build AssetBundle From Selection - Track dependencies\")]",381],["static void DoExport() {",381],["string str = EditorUtility.SaveFilePanel(\"Save Bundle...\", Application.dataPath, Selection.activeObject.name, \"assetbundle\");",381],["if (str.Length != 0) {",381],["BuildPipeline.BuildAssetBundle(Selection.activeObject, Selection.objects, str, BuildAssetBundleOptions.CompleteAssets, BuildTarget.iPhone);",381],["// JS",381],["@MenuItem (\"Assets/Build AssetBundle From Selection - Track dependencies\")",381],["static function ExportBundle() {",381],["var str : String = EditorUtility.SaveFilePanel(\"Save Bundle...\", Application.dataPath, Selection.activeObject.name, \"assetbundle\");",381],["if (str.Length != 0) {",381],["BuildPipeline.BuildAssetBundle(Selection.activeObject, Selection.objects, str, BuildAssetBundleOptions.CompleteAssets, BuildTarget.iPhone);",381],["You should save this code in a file called ExportBundle and place it inside a folder called Editor (you can just create this if it isn't already present in the project). The script will add a menu item entitled \"Build AssetBundle From Selection - Track dependencies\" on the Assets menu in the editor.",381],["The content you want to include in the bundle should be prepared in the form of prefabs. Select a prefab in the Project view and then select Assets &gt; Build AssetBundle From Selection - Track dependencies (ie, the menu item added by the ExportBundle script). This command will bring up a save dialog where you can choose the name and location of your AssetBundle file.",381],["Downloading your assets on iOS",381],["Note: Apple may change the folder locations where you are permitted to write data. Always check the latest Apple documentation to be sure your application will be compliant. The following advice was correct as of early 2013.",381],["AssetBundles can be downloaded using the WWW class and once transfer is complete, the enclosed assets can be accessed. The recommended way to download an AssetBundle is to use LoadFromCacheOrDownload as shown in the following sample:-",381],["// C#",381],["IEnumerator GetAssetBundle() {",381],["WWW download;",381],["string url = \"http://somehost/somepath/someassetbundle.assetbundle\";",381],["download = WWW.LoadFromCacheOrDownload(url, 0);",381],["yield return download;",381],["AssetBundle assetBundle = download.assetBundle;",381],["if (assetBundle != null) {",381],["// Alternatively you can also load an asset by name (assetBundle.Load(\"my asset name\"))",381],["Object go = assetBundle.mainAsset;",381],["if (go != null)",381],["Instantiate(go);",381],["else",381],["Debug.Log(\"Couldn't load resource\");",381],["} else {",381],["Debug.Log(\"Couldn't load resource\");",381],["// JS",381],["function GetAssetBundle() {",381],["var download : WWW;",381],["var url = \"http://somehost/somepath/someassetbundle.assetbundle\";",381],["var download = WWW.LoadFromCacheOrDownload (url, 0);",381],["yield download;",381],["var assetBundle = download.assetBundle;",381],["if (assetBundle != null) {",381],["// Alternatively you can also load an asset by name (assetBundle.Load(\"my asset name\"))",381],["var go : Object = assetBundle.mainAsset;",381],["if (go != null)",381],["Instantiate(go);",381],["else",381],["Debug.Log(\"Couldn't load resource\");",381],["} else {",381],["Debug.Log(\"Couldn't load resource\");",381],["The downloaded asset bundle files are stored in the Library folder of the iOS application sandbox and have the No Backup flag set on them. This means the OS won't delete these files accidentally and these files won't be backed up to iCloud. It is good idea to keep the cache size limit low, to prevent your app from grabbing all the device's disk space.",381],["If you need to choose exactly where the AssetBundle file is stored, you can use a standard WWW download (ie, just use the constructor instead of LoadFromCacheOrDownload) and then save the downloaded data on disk using the .NET file API. You can save required files to the Application.temporaryCachePath folder (stored in Library/Caches which is regularly \"cleaned out\" by the OS) or the Application.persistentDataPath folder (stored in Documents which is not cleaned out by the OS). You should set the No Backup flag on these files with iOS.Device.SetNoBackupFlag to prevent them being backed up to iCloud.",381],["Note: If you don't set the No Backup flag, your app may be rejected when you submit it to the App Store.",381],["You can access saved files by creating a WWW object with a URL in the form file:///pathtoyourapplication/Library/savedassetbundle.assetbundle:-",381],["// C#",381],["string cachedAssetBundle = Application.temporaryCachePath + \"/savedassetbundle.assetbundle\";",381],["System.IO.FileStream cache = new System.IO.FileStream(cachedAssetBundle, System.IO.FileMode.Create);",381],["cache.Write(download.bytes, 0, download.bytes.Length);",381],["cache.Close();",381],["iOS.Device.SetNoBackupFlag(cachedAssetBundle);",381],["Debug.Log(\"Cache saved: \" + cachedAssetBundle);",381],["// JS",381],["private var cachedAssetBundle : String = Application.temporaryCachePath + \"/savedassetbundle.assetbundle\";",381],["var cache = new System.IO.FileStream(cachedAssetBundle, System.IO.FileMode.Create);",381],["cache.Write(download.bytes, 0, download.bytes.Length);",381],["cache.Close();",381],["iOS.Device.SetNoBackupFlag(cachedAssetBundle);",381],["Debug.Log(\"Cache saved: \" + cachedAssetBundle);",381],["Note: You can test the reading of stored files in the Documents folder if you enable file sharing (setting UIFileSharingEnabled to true in your Info.plist allows you to access the Documents folder from iTunes). Note that the contents of the Documents folder are cached to iCloud, so you should not use this location to store AssetBundles in the final build to be shipped. See File System Basics in the Apple iOS documentation for further details.",381],["Getting Started with iOS Development",382],["Building games for devices like the iPhone and iPad requires a different approach than you would use for desktop PC games. Unlike the PC market, your target hardware is standardized and not as fast or powerful as a computer with a dedicated video card. Because of this, you will have to approach the development of your games for these platforms a little differently. Also, the features available in Unity for iOS differ slightly from those for desktop PCs.",382],["Setting Up Your Apple Developer Account",382],["Before you can run Unity iOS games on the actual device, you will need to have your Apple Developer account approved and set up. This includes establishing your team, adding your devices, and finalizing your provisioning profiles. All this setup is performed through Apple's developer website. Since this is a complex process, we have provided a basic outline of the tasks that must be completed before you can run code on your iOS devices. However, the best thing to do is follow the step-by-step instructions at Apple's iPhone Developer portal.",382],["Note: We recommend that you set up your Apple Developer account before proceeding because you will need it to use Unity to its full potential with iOS.",382],["The Unity XCode Project",382],["When you build the Unity iOS game an XCode project is generated. This project is required to sign, compile and prepare your game for distribution. See the Unity XCode project manual page for further information.",382],["Accessing iOS Functionality",382],["Unity provides a number of scripting APIs to access the multi-touch screen, accelerometer, device geographical location system and much more. You can find out more about the script classes on the iOS scripting page.",382],["Exposing Native C, C++ or Objective-C Code to Scripts",382],["Unity allows you to call custom native functions written in C, C++ or Objective-C directly from C# scripts. To find out how to bind native functions, visit the plugins page.",382],["Prepare Your Application for In-App Purchases",382],["The Unity iOS runtime allows you to download new content and you can use this feature to implement in-app purchases. See the downloadable content manual page for further information.",382],["Occlusion Culling",382],["Unity supports occlusion culling which is useful for squeezing high performance out of complex scenes with many objects. See the occlusion culling manual page for further information.",382],["Splash Screen Customization",382],["See the splash screen customization page to find out how to change the image your game shows while launching.",382],["Troubleshooting and Reporting Crashes.",382],["If you are experiencing crashes on the iOS device, please consult the iOS troubleshooting page for a list of common issues and solutions. If you can't find a solution here then please file a bug report for the crash (menu: Help &gt; Report A Bug in the Unity editor).",382],["How Unity's iOS and Desktop Targets Differ",382],["Statically Typed JavaScript",382],["Dynamic typing in JavaScript is always turned off in Unity when targetting iOS (this is equivalent to #pragma strict getting added to all your scripts automatically). Static typing greatly improves performance, which is especially important on iOS devices. When you switch an existing Unity project to the iOS target, you will get compiler errors if you are using dynamic typing. You can easily fix these either by using explicitly declared types for the variables that are causing errors or taking advantage of type inference.",382],["MP3 Instead of Ogg Vorbis Audio Compression",382],["For performance reasons, MP3 compression is favored on iOS devices. If your project contains audio files with Ogg Vorbis compression, they will be re-compressed to MP3 during the build. Consult the audio clip documentation for more information on using compressed audio on the iPhone.",382],["PVRTC Instead of DXT Texture Compression",382],["Unity iOS does not support DXT textures. Instead, PVRTC texture compression is natively supported by iPhone/iPad devices. Consult the texture import settings documentation to learn more about iOS texture formats.",382],["Movie Playback",382],["MovieTextures are not supported on iOS. Instead, full-screen streaming playback is provided via scripting functions. To learn about the supported file formats and scripting API, consult the movie page in the manual.",382],["iOS Hardware Guide",383],["Hardware models",383],["The following list summarizes iOS hardware available in devices of various generations. Current device shader performance can compared on gfxbench which compares different hardware features using benchmarks.",383],["iPhone 3GS",383],["Screen: 320x480 pixels, LCD at 163ppi",383],["ARM Cortex A8, 600 MHz CPU",383],["PowerVR SGX535 graphics processor",383],["256MB of memory",383],["3 megapixel camera with video capture capability",383],["GPS support",383],["Compass support",383],["iPhone 3GS: Shader-capable hardware, per-pixel-lighting (bumpmaps) can only be on small portions of the screen at once.",383],["Requires scripting optimization for complex games. This is the average hardware of the app market as of July 2012",383],["iPhone 4",383],["Screen: 960x640 pixels, LCD at 326 ppi, 800:1 contrast ratio.",383],["Apple A4 1 GHz ARM Cortex-A8 CPU",383],["PowerVR SGX535 GPU",383],["512MB of memory",383],["Rear 5.0 MP backside illuminated CMOS image sensor with 720p HD video at 30 fps and LED flash",383],["Front 0.3 MP (VGA) with geotagging, tap to focus, and 480p SD video at 30 fps",383],["GPS support",383],["Compass Support",383],["iPhone 4S",383],["Screen: 960x640 pixels, LCD at 326 ppi, 800:1 contrast ratio.",383],["Apple A5 Dual-Core 1 GHz ARM Cortex-A9 MPCore CPU",383],["Dual-Core PowerVR SGX543MP2 GPU",383],["512MB of memory",383],["Rear 8.0 MP infra-red cut-off filter, back-illuminated sensor, 1080p HD videos at 30 fps.",383],["Front 0.3 MP (VGA) with geotagging, tap to focus, and 480p SD video at 30 fps",383],["GPS support",383],["Compass Support",383],["The iPhone 4S, with the new A5 chip, is capable of rendering complex shaders throughout the entire screen. Even image effects may be possible. However, optimizing your shaders is still crucial. But if your game isn't trying to push limits of the device, optimizing scripting and gameplay is probably as much of a waste of time on this generation of devices as it is on PC.",383],["iPhone 5",383],["Screen: 1136x640 pixels, LCD at 326 ppi.",383],["Apple A6 Dual-Core 1.3 GHz Apple-designed ARMv7s CPU",383],["Triple-Core PowerVR SGX543MP3 GPU",383],["1GB LPDDR2 of memory",383],["Rear 8.0 MP infra-red cut-off filter, back-illuminated sensor, 1080p HD videos at 30 fps.",383],["Front 1.2 MP tagging, tap to focus, and 720p SD video at 30 fps",383],["GPS support",383],["Compass Support",383],["iPhone 5S",383],["Screen: 4\" 1136x640 pixels, LCD at 326 ppi.",383],["Apple A7 Dual-Core 1.3 GHz Apple-designed ARMv8 64-bit CPU",383],["M7 Motion Coprocessor",383],["Four Cluster PowerVR G643 GPU",383],["1GB LPDDR3 of memory",383],["Rear 8.0 MP infra-red cut-off filter, back-illuminated sensor, 1080p HD videos at 30 fps.",383],["Front 1.2 MP tagging, tap to focus, and 720p SD video at 30 fps",383],["GPS and GLONASS support",383],["Compass Support",383],["Three-axis gyro",383],["Proximity sensor",383],["Ambient light sensor",383],["Touch ID Fingerbringt identity sensor",383],["iPhone 6(+)",383],["Screen iPhone6: 4.7\" 1134x750 pixels, LCD at 326 ppi.",383],["Screen iPhone6+: 5.5\" 1920x1080 pixels, LCD at 401 ppi.",383],["Apple A8 Dual-Core 1.4 GHz Apple-designed ARMv8-A 64-bit CPU",383],["M8 motion coprocessor",383],["Quad-Core PowerVR GX6450 GPU",383],["1GB LPDDR3 of memory",383],["Rear 8.0 MP infra-red cut-off filter, back-illuminated sensor, 1080p HD videos at 60 fps.",383],["Front 1.2 MP tagging, tap to focus, and 720p SD video at 30 fps",383],["GPS and GLONASS support",383],["Compass Support",383],["Three-axis gyro",383],["Proximity sensor",383],["Ambient light sensor",383],["Touch ID Fingerbringt identity sensor",383],["NFC",383],["iPod Touch 3rd generation",383],["Screen: 320x480 pixels, LCD at 163ppi",383],["Samsung S5L8920, 833MHz (underclocked to 600MHz) ARM Cortex-A8 CPU",383],["PowerVR SGX535 graphics processor",383],["256MB DRAM",383],["iPod Touch 3rd gen: Shader-capable hardware, per-pixel-lighting (bumpmaps) can only be on small portions of the screen at once.",383],["Requires scripting optimization for complex games. This is the average hardware of the app market as of July 2012",383],["iPod Touch 4th generation",383],["Screen: 960x640 pixels, LCD at 326 ppi, 800:1 contrast ratio.",383],["Apple A4 1 GHz (underclocked to 800MHz) ARM Cortex-A8 CPU",383],["PowerVR SGX535 GPU",383],["256MB DRAM",383],["Rear 0.7 MP CMOS image sensor with 720p HD video at 30 fps and LED flash",383],["Front 0.3 MP (VGA) with geotagging, tap to focus, and 480p SD video at 30 fps",383],["iPod Touch 5th generation",383],["Screen: 1136x640 pixels, LCD at 326 ppi",383],["Apple A5 Dual-Core 1GHz (underclocked to 800MHz) ARM Cortex-A9 MPCore CPU",383],["Dual-Core PowerVR SGX543MP2 GPU",383],["512MB of memory",383],["Rear 5.0 MP backside illuminated CMOS image sensor with 1080p HD video at 30 fps, face detection and video stabilization.",383],["Front 1.2 MP with geotagging, tap to focus, and 720p HD video at 30 fps",383],["iPad",383],["Screen: 1024x768 pixels, LCD at 132 ppi, LED-backlit.",383],["Apple A4 1 GHz MHz ARM Cortex-A8 CPU",383],["PowerVR SGX535 GPU",383],["256MB DDR Ram",383],["GPS support",383],["Accelerometer, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 2.1 + (3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["iPad: Similar to iPod Touch 4th Generation and iPhone 4.",383],["iPad 2",383],["Screen: 1024x768 pixels, LCD at 132 ppi, LED-backlit.",383],["Apple A5 Dual-Core 1 GHz ARM Cortex-A9 MPCore CPU",383],["Dual-Core PowerVR SGX543MP2 GPU",383],["512MB DDR2 Ram",383],["GPS support",383],["Accelerometer, Three-axis Gyro, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 2.1 + (3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["iPad2: The A5 can do full screen bumpmapping, assuming the shader is simple enough. However, it is likely that your game will perform best with bumpmapping only on crucial objects. Full screen image effects still out of reach. Scripting optimization less important.",383],["iPad (3rd generation)",383],["Screen: 2048x1536 pixels, LCD at 264 ppi, LED-backlit.",383],["Apple A5X",383],["Dual-Core 1 GHz ARM Cortex-A9 MPCore CPU",383],["Quad-Core PowerVR SGX543MP4 GPU",383],["1GB LPDDR2 Ram",383],["GPS and GLONASS support",383],["Accelerometer, Three-axis Gyro, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 4.0 + (LTE, 3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["The iPad 3 has been shown to be capable of render-to-texture effects such as reflective water and fullscreen image effects. However, optimized shaders are still crucial. But if your game isn't trying to push limits of the device, optimizing scripting and gameplay is probably as much of a waste of time on this generation of devices as it is on PC.",383],["iPad (4rd generation)",383],["Screen: 2048x1536 pixels, LCD at 264 ppi, LED-backlit.",383],["Apple A6X Dual-Core 1.4 GHz Apple Swift",383],["Quad-Core PowerVR SGX554MP4 GPU",383],["1GB LPDDR2 Ram",383],["GPS and GLONASS support",383],["Accelerometer, Three-axis Gyro, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 4.0 + (LTE, 3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["iPad Air",383],["Screen: 2048x1536 pixels, LCD at 264 ppi, LED-backlit.",383],["Apple A7 Dual-Core 1.4 GHz Apple Cyclone",383],["Quad-Core PowerVR G6430 GPU",383],["M7 Motion Coprocessor",383],["1GB LPDDR3 Ram",383],["GPS and GLONASS support",383],["Accelerometer, Three-axis Gyro, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 4.0 + (LTE, 3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["iPad Air 2",383],["Screen: 2048x1536 pixels, LCD at 264 ppi, LED-backlit.",383],["Apple A8X 1.5 GHz tripple-core",383],["Hex-Core PowerVR GX6650 GPU",383],["M8 Motion Coprocessor",383],["2GB LPDDR3 Ram",383],["GPS and GLONASS support",383],["Accelerometer, Three-axis Gyro, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 4.0 + (LTE, 3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["iPad Mini",383],["Screen: 1024x768 pixels, LCD at 163 ppi, LED-backlit.",383],["Apple A5 Dual-Core 1 GHz ARM Cortex-A9",383],["Dual-Core PowerVR SGX543MP2 GPU",383],["512MB DDR2 Ram",383],["GPS and GLONASS support",383],["Accelerometer, Three-axis Gyro, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 4.0 + (LTE, 3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["iPad Mini 2",383],["Screen: 2048x1536 pixels, LCD at 326 ppi, LED-backlit.",383],["Apple A7 Dual-Core 1.3 GHz Apple Cyclone",383],["Quad-Core PowerVR G6430 GPU",383],["1GB LPDDR3 Ram",383],["GPS and GLONASS support",383],["Accelerometer, Three-axis Gyro, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 4.0 + (LTE, 3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["iPad Mini 3",383],["Screen: 2048x1536 pixels, LCD at 326 ppi, LED-backlit.",383],["Apple A7 Dual-Core 1.3 GHz Apple Cyclone",383],["Quad-Core PowerVR G6430 GPU",383],["1GB LPDDR3 Ram",383],["GPS and GLONASS support",383],["Accelerometer, Three-axis Gyro, Proximity Sensor, Ambient Light Sensor, Magnetometer",383],["Wifi + Blueooth 4.0 + (LTE, 3G Cellular HSDPA, 2G cellular EDGE on the 3G version)",383],["Mechanical keys: Home, sleep, function switch, volume.",383],["Graphics Processing Unit and Hidden Surface Removal",383],["The iPhone/iPad graphics processing unit (GPU) is a Tile-Based Deferred Renderer. In contrast with most GPUs in desktop computers, the iPhone/iPad GPU focuses on minimizing the work required to render an image as early as possible in the processing of a scene. That way, only the visible pixels will consume processing resources.",383],["The GPU's frame buffer is divided up into tiles and rendering happens tile by tile. First, triangles for the whole frame are gathered and assigned to the tiles. Then, visible fragments of each triangle are chosen. Finally, the selected triangle fragments are passed to the rasterizer (triangle fragments occluded from the camera are rejected at this stage).",383],["In other words, the iPhone/iPad GPU implements a Hidden Surface Removal operation at reduced cost. Such an architecture consumes less memory bandwidth, has lower power consumption and utilizes the texture cache better. Tile-Based Deferred Rendering allows the device to reject occluded fragments before actual rasterization, which helps to keep overdraw low.",383],["For more information see also:-",383],["SGX series",383],["Starting with the iPhone 3GS, newer devices are equipped with the SGX series of GPUs. The SGX series features support for the OpenGL ES2.0 and newer devices support the OpenGL ES3.0 rendering API and vertex and pixel shaders. The Fixed-function pipeline is not supported natively on such GPUs, but instead is emulated by generating vertex and pixel shaders with analogous functionality on the fly.",383],["The SGX series fully supports MultiSample anti-aliasing.",383],["Texture Compression",383],["The only texture compression format supported by iOS is PVRTC. PVRTC provides support for RGB and RGBA (color information plus an alpha channel) texture formats and can compress a single pixel to two or four bits.",383],["The PVRTC format is essential to reduce the memory footprint and to reduce consumption of memory bandwidth (ie, the rate at which data can be read from memory, which is usually very limited on mobile devices).",383],["Vertex Processing Unit",383],["The iPhone/iPad has a dedicated unit responsible for vertex processing which runs calculations in parallel with rasterization. In order to achieve better parallelization, the iPhone/iPad processes vertices one frame ahead of the rasterizer.",383],["Unified Memory Architecture",383],["Both the CPU and GPU on the iPhone/iPad share the same memory. The advantage is that you don't need to worry about running out of video memory for your textures (unless, of course, you run out of main memory too). The disadvantage is that you share the same memory bandwidth for gameplay and graphics. The more memory bandwidth you dedicate to graphics, the less you will have for gameplay and physics.",383],["Multimedia CoProcessing Unit",383],["The iPhone/iPad main CPU is equipped with a powerful SIMD (Single Instruction, Multiple Data) coprocessor supporting either the VFP or the NEON architecture. The Unity iOS run-time takes advantage of these units for multiple tasks such as calculating skinned mesh transformations, geometry batching, audio processing and other calculation-intensive operations.",383],["Measuring Performance with the Built-in Profiler",384],["Unity iOS and Android contain a built in profiler. The built-in profiler emits console messages from the game running on device. These messages are written every 30 seconds and will provide insight into how the game is running. Understanding what these messages mean is not always easy, but as a minimum, you should quickly be able to determine if your game is CPU or GPU bound, and if CPU bound whether it's script code, or perhaps Mono garbage collection that is slowing you down. See later in this page to learn how to configure the built-in profiler.",384],["What the Profiler Tells You",384],["Here's an example of the built-in profiler's output.",384],["iPhone/iPad Unity internal profiler stats:",384],["cpu-player> min: 9.8 max: 24.0 avg: 16.3",384],["cpu-ogles-drv> min: 1.8 max: 8.2 avg: 4.3",384],["cpu-waits-gpu> min: 0.8 max: 1.2 avg: 0.9",384],["cpu-present> min: 1.2 max: 3.9 avg: 1.6",384],["frametime> min: 31.9 max: 37.8 avg: 34.1",384],["draw-call #> min: 4 max: 9 avg: 6   batched: 10",384],["tris #> min: 3590 max: 4561 avg: 3871   batched: 3572",384],["verts #> min: 1940 max: 2487 avg: 2104   batched: 1900",384],["player-detail> physx: 1.2 animation: 1.2 culling: 0.5 skinning: 0.0 batching: 0.2 render: 12.0 fixed-update-count: 1 .. 2",384],["mono-scripts> update: 0.5 fixedUpdate: 0.0 coroutines: 0.0",384],["mono-memory> used heap: 233472 allocated heap: 548864 max number of collections: 1 collection total duration: 5.7",384],["All times are measured in milliseconds per frame. You can see the minimum, maximum and average times over the last thirty frames.",384],["General CPU Activity",384],["",384],["cpu-player Displays the time your game spends executing code inside the Unity engine and executing scripts on the CPU. ",384],["cpu-ogles-drv Displays the time spent executing OpenGL ES driver code on the CPU. Many factors like the number of draw calls, number of internal rendering state changes, the rendering pipeline setup and even the number of processed vertices can have an effect on the driver stats. ",384],["cpu-waits-gpu Displays the time the CPU is idle while waiting for the GPU to finish rendering. If this number exceeds 2-3 milliseconds then your application is most probably fillrate/GPU processing bound. If this value is too small then the profile skips displaying the value. ",384],["msaa-resolve The time taken to apply anti-aliasiing. ",384],["cpu-present The amount of time spent executing the presentRenderbuffer command in OpenGL ES. ",384],["frametime Represents the overall time of a game frame. Note that iOS hardware is always locked at a 60Hz refresh rate, so you will always get multiples times of 16.7ms (1000ms/60Hz = 16.7ms). ",384],["Rendering Statistics",384],["",384],["tris # Total number of triangles sent for rendering. ",384],["verts # Total number of vertices sent for rendering. You should keep this number below 10000 if you use only static geometry but if you have lots of skinned geometry then you should keep it much lower. ",384],["batched Number of draw-calls, triangles and vertices which were automatically batched by the engine. Comparing these numbers with draw-call and triangle totals will give you an idea how well is your scene prepared for batching. Share as many materials as possible among your objects to improve batching. ",384],["Detailed Unity Player Statistics",384],["The player-detail section provides a detailed breakdown of what is happening inside the engine:-",384],["",384],["physx Time spent on physics. ",384],["animation Time spent animating bones. ",384],["culling Time spent culling objects outside the camera frustum. ",384],["skinning Time spent applying animations to skinned meshes. ",384],["batching Time spent batching geometry. Batching dynamic geometry is considerably more expensive than batching static geometry. ",384],["render Time spent rendering visible objects. ",384],["fixed-update-count Minimum and maximum number of FixedUpdates executed during this frame. Too many FixedUpdates will deteriorate performance considerably. ",384],["Detailed Scripts Statistics",384],["The mono-scripts section provides a detailed breakdown of the time spent executing code in the Mono runtime:",384],["",384],["update Total time spent executing all Update() functions in scripts. ",384],["fixedUpdate Total time spent executing all FixedUpdate() functions in scripts. ",384],["coroutines Time spent inside script coroutines. ",384],["Detailed Statistics on Memory Allocated by Scripts",384],["The mono-memory section gives you an idea of how memory is being managed by the Mono garbage collector:",384],["",384],["allocated heap Total amount of memory available for allocations. A garbage collection will be triggered if there is not enough memory left in the heap for a given allocation. If there is still not enough free memory even after the collection then the allocated heap will grow in size. ",384],["used heap The portion of the allocated heap which is currently used up by objects. Every time you create a new class instance (not a struct) this number will grow until the next garbage collection. ",384],["max number of collections Number of garbage collection passes during the last 30 frames. ",384],["collection total duration Total time (in milliseconds) of all garbage collection passes that have happened during the last 30 frames. ",384],["Configuration",384],["On iOS, it's disabled by default so to enable it, you need to open the Unity-generated XCode project, select the iPhone_Profiler.h file and change the line",384],["define ENABLE_INTERNAL_PROFILER 0",384],["to",384],["define ENABLE_INTERNAL_PROFILER 1",384],["Select View &gt; Debug Area &gt; Activate Console in the XCode menu to display the output console (GDB) and then run your project. Unity will output statistics to the console window every thirty frames.",384],["On Android, it is enabled by default. Just make sure Development Build is checked in the player settings when building, and the statistics should show up in logcat when run on the device. To view logcat, you need &lt;span class=\"doc-prop\"&gt;adb&lt;/span&gt; or the Android Debug Bridge. Once you have that, simply run the shell command &lt;span class=\"doc-prop\"&gt;adb logcat&lt;/span&gt;.",384],["iOS Specific Optimizations",385],["This page details optimizations which are unique to iOS deployment.",385],["Script Call Optimization",385],["Most of the functions in the UnityEngine namespace are implemented in C/C++. Calling a C/C++ function from a Mono script involves a performance overhead. You can use iOS Script Call optimization (menu: Edit-&gt;Project Settings-&gt;Player) to save about 1 to 4 milliseconds per frame. The options for this setting are:-",385],["Slow and Safe - the default Mono internal call handling with exception support.",385],["Fast and Exceptions Unsupported - a faster implementation of Mono internal call handling. However, this doesn't support exceptions and so should be used with caution. An app that doesn't explicitly handle exceptions (and doesn't need to deal with them gracefully) is an ideal candidate for this option.",385],["Setting the Desired Framerate",385],["Unity iOS allows you to change the frequency with which your application will try to execute its rendering loop, which is set to 30 frames per second by default. You can lower this number to save battery power but of course this saving will come at the expense of frame updates. Conversely, you can increase the framerate to give the rendering priority over other activities such as touch input and accelerometer processing. You will need to experiment with your choice of framerate to determine how it affects gameplay in your case.",385],["If your application involves heavy computation or rendering and can maintain only 15 frames per second, say, then setting the desired frame rate higher than fifteen wouldn't give any extra performance. The application has to be optimized sufficiently to allow for a higher framerate.",385],["To set the desired framerate, change Application.targetFrameRate.",385],["Tuning Accelerometer Processing Frequency",385],["If accelerometer input is processed too frequently then the overall performance of your game may suffer as a result. By default, a Unity iOS application will sample the accelerometer 60 times per second. You may see some performance benefit by reducing the accelerometer sampling frequency and it can even be set to zero for games that don't use accelerometer input. You can change the accelerometer frequency from the Other Settings panel in the iOS Player Settings.",385],["iOS Game Controller support",386],["Starting with OS 7, a standardized Game Controller Input API is provided by Apple. Unity support for this API comes as part of the standard Unity Input API.",386],["Detecting attached Game Controllers",386],["Calling Input.GetJoystickNames will enumerate the names of all attached controllers. Names follow the pattern: \"[$profile_type,$connection_type] joystick $number by $model\". $profile_type might be either \"basic\" or \"extended\", $connection_type is either \"wired\" or \"wireless\". It could be used to detect the kind of connected controller. It is worth re-checking this list every few seconds to detect if controllers have been attached or detached. Here’s an example how of to do it in C#:",386],["private bool connected = false;",386],["IEnumerator CheckForControllers() {",386],["while (true) {",386],["var controllers = Input.GetJoystickNames();",386],["if (!connected &amp;&amp; controllers.Length > 0) {",386],["connected = true;",386],["Debug.Log(\"Connected\");",386],["} else if (connected &amp;&amp; controllers.Length == 0) {",386],["connected = false;",386],["Debug.Log(\"Disconnected\");",386],["yield return new WaitForSeconds(1f);",386],["void Awake() {",386],["StartCoroutine(CheckForControllers());",386],["When controllers are detected you can either hide on-screen touch controls or amend them to supplement controller input. The next task is to check for Game Controller input.",386],["Handling input",386],["Actual input scheme is highly dependent on the type of game you are developing. But in any case it goes down to reading axes and button states. Take following 2D game stage as simple example:",386],["The player controls the bean character, which can move right or left, jump and fire at the bad guys. By default, the Unity Input \"Horizontal\" axis is mapped to basic profile game controller dpad and the left analog stick on extended profile controllers. So the code used to move the character back and forth is pretty simple:",386],["float h = Input.GetAxis(\"Horizontal\");",386],["if (h * rigidbody2D.velocity.x &lt; maxSpeed)",386],["rigidbody2D.AddForce(Vector2.right * h * moveForce);",386],["You can set up jump and fire actions in Unity's Input Manager.",386],["Access it from the Unity editor menu as follows: Edit > Project Settings > Input.",386],["Pick joystick button \"A\" for the \"Jump\" action and \"X\" for \"Fire\".",386],["Open the following actions in the Unity Input Manager and specify \"joystick button 14\" for \"Jump\" and \"joystick button 15\" for \"Fire\".",386],["The code handling then looks like this:",386],["if (Input.GetButtonDown(\"Jump\") &amp;&amp; grounded) {",386],["rigidbody2D.AddForce(new Vector2(0f, jumpForce));",386],["if (Input.GetButtonDown(\"Fire\")) {",386],["Rigidbody2D bulletInstance = Instantiate(rocket, transform.position, Quaternion.Euler(new Vector3(0,0,0))) as Rigidbody2D;",386],["bulletInstance.velocity = new Vector2(speed, 0);",386],["The following cheatsheet should help you map controller input in the Unity Input Manager:",386],["Name KeyCode Axis ",386],["A joystick button 14 joystick axis 14 ",386],["B joystick button 13 joystick axis 13 ",386],["X joystick button 15 joystick axis 15 ",386],["Y joystick button 12 joystick axis 12 ",386],["Left Stick N/A Axis 1 (X) - Horizontal, Axis 2 (Y) - Vertical ",386],["Right Stick N/A Axis 3 - Horizontal, Axis 4 - Vertical ",386],["Dpad joystick button 4 .. joystick button 7 Basic profile only: Axis 1 (X) - Horizontal, Axis 2 (Y) - Vertical ",386],["Pause joystick button 0 N/A ",386],["L1/R1 joystick button 8/joystick button 9 joystick axis 8/joystick axis 9 ",386],["L2/R2 joystick button 10/joystick button 11 joystick axis 10/joystick axis 11 ",386],["Final notes on Game Controller API support",386],["The Game Controller framework is loaded dynamically by Unity iOS runtime only if it is available. For older iOS versions it will just return an empty list of controllers.",386],["Apple documentation explicitly states that controller input must be optional and your game should be playable without them.",386],["Optimizing Physics Performance",387],["The NVIDIA PhysX physics engine used by Unity is available on iOS but the performance limits of the hardware will be reached more easily on mobile platforms than desktops.",387],["Here are some tips for tuning physics to get better performance on iOS:-",387],["You can adjust the Fixed Timestep setting (in the Time manager) to reduce the time spent on physics updates. Increasing the timestep will reduce the CPU overhead at the expense of the accuracy of the physics. Often, lower accuracy is an acceptable tradeoff for increased speed.",387],["Set the Maximum Allowed Timestep in the Time manager in the 8-10fps range to cap the time spent on physics in the worst case scenario.",387],["Mesh colliders have a much higher performance overhead than primitive colliders, so use them sparingly. It is often possible to approximate the shape of a mesh by using child objects with primitive colliders. The child colliders will be controlled collectively as a single compound collider by the rigidbody on the parent.",387],["While wheel colliders are not strictly colliders in the sense of solid objects, they nonetheless have a high CPU overhead.",387],["The total amount of physics calculation depends on the number of non-sleeping rigid bodies and colliders in the scene and the complexity of the colliders. You can keep track of how many physics objects there are in the scene using the internal profiler.",387],["Optimizing Performance in iOS.",388],["This section covers optimizations which are unique to iOS devices.",388],["Optimizing the Size of the Built iOS Player",389],["The two main ways of reducing the size of the player are by making proper Release build within Xcode and by changing the Stripping Level within Unity.",389],["Building for distribution",389],["It is expected that final release builds are made using Xcode 4.x/5.x command Product -&gt; Archive. Using this command ensures that build is made with release configuration and all the debug symbols are stripped.",389],["After issuing this command latest Xcode switches to Organizer window Archives tab (you can navigate there manually via Window -&gt; Organizer menu). You will find there two very useful functions there: App Store size estimation and Distribution.",389],["Build size estimation function works pretty well, but it is always recommended to have some small extra margin for error when aiming for 3G download limit (which currently is 100MB).",389],["Note: xcodebuild utility currently does not have proper equivalent of \"Archive\" command. If you rely on building for distribution on this tool you might consider passing -Wl,-S,-x extra linker flag to it.",389],["iOS Stripping Level",389],["The size optimizations activated by stripping work in the following way:",389],["Strip assemblies level: the scripts' bytecode is analyzed so that classes and methods that are not referenced from the scripts can be removed from the DLLs and thereby excluded from the AOT compilation phase. This optimization reduces the size of the main binary and accompanying DLLs and is safe as long as no reflection is used.",389],["Strip ByteCode level: any .NET DLLs (stored in the Data folder) are stripped down to metadata only. This is possible because all the code is already precompiled during the AOT phase and linked into the main binary.",389],["Use micro mscorlib level: a special, smaller version of mscorlib is used. Some components are removed from this library, for example, Security, Reflection.Emit, Remoting, non Gregorian calendars, etc. Also, interdependencies between internal components are minimized. This optimization reduces the main binary and mscorlib.dll size but it is not compatible with some System and System.Xml assembly classes, so use it with care.",389],["These levels are cumulative, so level 3 optimization implicitly includes levels 2 and 1, while level 2 optimization includes level 1.",389],["Note that Micro mscorlib is a heavily stripped-down version of the core library. Only those items that are required by the Mono runtime in Unity remain. Best practice for using micro mscorlib is not to use any classes or other features of .NET that are not required by your application. GUIDs are a good example of something you could omit; they can easily be replaced with custom made pseudo GUIDs and doing this would result in better performance and app size.",389],["Tips",389],["How to Deal with Stripping when Using Reflection",389],["Stripping depends highly on static code analysis and sometimes this can't be done effectively, especially when dynamic features like reflection are used. In such cases, it is necessary to give some hints as to which classes shouldn't be touched. Unity supports a per-project custom stripping blacklist. Using the blacklist is a simple matter of creating a link.xml file and placing it into the Assets folder. An example of the contents of the link.xml file follows. Classes marked for preservation will not be affected by stripping:-",389],["",389],["",389],["",389],["",389],["",389],["",389],["",389],["",389],["",389],["",389],["",389],["Note: it can sometimes be difficult to determine which classes are getting stripped in error even though the application requires them. You can often get useful information about this by running the stripped application on the simulator and checking the Xcode console for error messages.",389],["Simple Checklist for Making Your Distribution as Small as Possible",389],["Minimize your assets: enable PVRTC compression for textures and reduce their resolution as far as possible. Also, minimize the number of uncompressed sounds. There are some additional tips for file size reduction here.",389],["Set the iOS Stripping Level to Use micro mscorlib.",389],["Set the script call optimization level to Fast but no exceptions.",389],["Don't use anything that lives in System.dll or System.Xml.dll in your code. These libraries are not compatible with micro mscorlib.",389],["Remove unnecessary code dependencies.",389],["Set the API Compatibility Level to .Net 2.0 subset. Note that .Net 2.0 subset has limited compatibility with other libraries.",389],["Don't use JS Arrays.",389],["Avoid generic containers in combination with value types, including structs.",389],["How small can an app be made with Unity?",389],["An empty project would take less than 22 MB in the App Store if all the size optimizations were turned off. With code stripping, the empty scene with just the main camera can be reduced to less than 12 MB in the App Store (zipped and DRM attached).",389],["Why did my app increase in size after being released to the App Store?",389],["When publishing your app, Apple App Store service first encrypts the binary file and then compresses it via zip. Encryption increases ''randomness' of the code segment and thus makes it worse for compression. Check \"Building for distribution\" chapter above how to estimate App Store size before submission.",389],["Features currently not supported by Unity iOS",390],["Graphics",390],["DXT texture compression is not supported; use PVRTC formats instead. Please see the Texture2D Component page for more information.",390],["Rectangular textures can not be compressed to PVRTC formats.",390],["Movie Textures are not supported; use a full-screen streaming playback instead. Please see the Movie playback page for more information.",390],["Audio",390],["Ogg audio compression is not supported. Ogg audio will be automatically converted to MP3 when you switch to iOS platform in the Editor. Please see the AudioClip Component page for more information about audio support in Unity iOS.",390],["Scripting",390],["Dynamic features like Duck Typing are not supported. Use #pragma strict for your scripts to force the compiler to report dynamic features as errors.",390],["Video streaming via WWW class is not supported.",390],["FTP support by WWW class is limited.",390],["Features Restricted to Unity iOS Pro License",390],["Splash-screen customization",390],["External Libraries",390],["It is recommended to minimize your references to external libraries, because 1 MB of .NET CIL code roughly translates to 3-4 MB of ARM code. For example, if your application references System.dll and System.Xml.dll then it means additional 6 MB of ARM code if stripping is not used. At some point application will reach limit when linker will have troubles linking the code. If you care a lot about application size you might find C# a more suitable language for your code as is has less dependencies than JavaScript.",390],["Joints",391],["You can attach one rigidbody object to another or to a fixed point in space using a Joint component. Generally, you want a joint to allow at least some freedom of motion and so Unity provides different Joint components that enforce different restrictions. For example, a Hinge Joint allows rotation around a specific point and axis while a Spring Joint keeps the objects apart but lets the distance between them stretch slightly. As usual, the 2D components have 2D at the end of the name, eg, Hinge Joint 2D.",391],["Joints also have other options that can enabled for specific effects. For example, you can set a joint to break when the force applied to it exceeds a certain threshold. Some joints also allow a drive force to occur between the connected objects to set them in motion automatically.",391],["See the reference pages for the Joint classes to read further about their properties.",391],["Keeping Track of loaded AssetBundles",392],["Unity will only allow you to have a single instance of a particular AssetBundle loaded at one time in your application. What this means is that you can't retrieve an AssetBundle from a WWW object if the same one has been loaded previously and has not been unloaded. In practical terms it means that when you try to access a previously loaded AssetBundle like this:",392],["AssetBundle bundle = www.assetBundle;",392],["the following error will be thrown",392],["Cannot load cached AssetBundle. A file of the same name is already loaded from another AssetBundle",392],["and the assetBundle property will return null. Since you can't retrieve the AssetBundle during the second download if the first one is still loaded, what you need to do is to either unload the AssetBundle when you are no longer using it, or maintain a reference to it and avoid downloading it if it is already in memory. You can decide the right course of action based on your needs, but our recommendation is that you unload the AssetBundle as soon as you are done loading objects. This will free the memory and you will no longer get an error about loading cached AssetBundles.",392],["Please note that before Unity 5 all bundles would finish loading before any of the bundles would be unloaded. So calling AssetBundle.Unload function while some of the bundles are still being loaded will block the execution of the rest of the code until all bundles are loaded. This will add a performance hiccup. This has been reworked in Unity 5.",392],["If you do want to keep track of which AssetBundles you have downloaded, you could use a wrapper class to help you manage your downloads like the following:",392],["using UnityEngine;",392],["using System;",392],["using System.Collections;",392],["using System.Collections.Generic;",392],["static public class AssetBundleManager {",392],["// A dictionary to hold the AssetBundle references",392],["static private Dictionary dictAssetBundleRefs;",392],["static AssetBundleManager (){",392],["dictAssetBundleRefs = new Dictionary();",392],["// Class with the AssetBundle reference, url and version",392],["private class AssetBundleRef {",392],["public AssetBundle assetBundle = null;",392],["public int version;",392],["public string url;",392],["public AssetBundleRef(string strUrlIn, int intVersionIn) {",392],["url = strUrlIn;",392],["version = intVersionIn;",392],["};",392],["// Get an AssetBundle",392],["public static AssetBundle getAssetBundle (string url, int version){",392],["string keyName = url + version.ToString();",392],["AssetBundleRef abRef;",392],["if (dictAssetBundleRefs.TryGetValue(keyName, out abRef))",392],["return abRef.assetBundle;",392],["else",392],["return null;",392],["// Download an AssetBundle",392],["public static IEnumerator downloadAssetBundle (string url, int version){",392],["string keyName = url + version.ToString();",392],["if (dictAssetBundleRefs.ContainsKey(keyName))",392],["yield return null;",392],["else {",392],["using(WWW www = WWW.LoadFromCacheOrDownload (url, version)){",392],["yield return www;",392],["if (www.error != null)",392],["throw new Exception(\"WWW download:\" + www.error);",392],["AssetBundleRef abRef = new AssetBundleRef (url, version);",392],["abRef.assetBundle = www.assetBundle;",392],["dictAssetBundleRefs.Add (keyName, abRef);",392],["// Unload an AssetBundle",392],["public static void Unload (string url, int version, bool allObjects){",392],["string keyName = url + version.ToString();",392],["AssetBundleRef abRef;",392],["if (dictAssetBundleRefs.TryGetValue(keyName, out abRef)){",392],["abRef.assetBundle.Unload (allObjects);",392],["abRef.assetBundle = null;",392],["dictAssetBundleRefs.Remove(keyName);",392],["An example usage of the class would be:",392],["using UnityEditor;",392],["class ManagedAssetBundleExample : MonoBehaviour {",392],["public string url;",392],["public int version;",392],["AssetBundle bundle;",392],["void OnGUI (){",392],["if (GUILayout.Label (\"Download bundle\"){",392],["bundle = AssetBundleManager.getAssetBundle (url, version);",392],["if(!bundle)",392],["StartCoroutine (DownloadAB());",392],["IEnumerator DownloadAB (){",392],["yield return StartCoroutine(AssetBundleManager.downloadAssetBundle (url, version));",392],["bundle = AssetBundleManager.getAssetBundle (url, version);",392],["void OnDisable (){",392],["AssetBundleManager.Unload (url, version);",392],["Please bear in mind that the AssetBundleManager class in this example is static, and any AssetBundles that you are referencing will not be destroyed when loading a new scene. Use this class as a guide but as recommended initially it is best if you unload AssetBundles right after they have been used. You can always clone a previously Instantiated object, removing the need to load the AssetBundles again.",392],["Layer-Based Collision Detection.",393],["In Unity 3.x we introduce Layer-Based collision detection, which is a way to make Game Objects collide with another specific Game Objects that are tied up to specific layers.",393],["In the image above you can see 6 GameObjects, (3 planes, 3 cubes) and the \"Collision Matrix\" to the right that states which Objects can collide with which layer.",393],["In the example, we have set the Collision Matrix in a way that only GameObjects that belong to same layers can collide.",393],["Setting GameObjects to detect Collisions Based on Layers.",393],["Select a layer your Game Objects will belong to",393],["Repeat 1 for each Game Object until you have finished assigning your Game Objects to the layers.",393],["Open the Physics Preference Panel by clicking on Edit-&gt;Project Settings-&gt;Physics.",393],["Select which layers on the Collision Matrix will interact with the other layers by checking them.",393],["Layers",394],["Layers are most commonly used by Cameras to render only a part of the scene, and by Lights to illuminate only parts of the scene. But they can also be used by raycasting to selectively ignore colliders or to create collisions.",394],["Creating Layers",394],["The first step is to create a new layer, which we can then assign to a GameObject. To create a new layer, open the Edit menu and select Project Settings-&gt;Tags.",394],["We create a new layer in one of the empty User Layers. We choose layer 8.",394],["Assigning Layers",394],["Now that you have created a new layer, you have to assign the layer to one of the game objects.",394],["In the tag manager we assigned the Player layer to be in layer 8.",394],["Drawing only a part of the scene with the camera's culling mask",394],["Using the camera's culling mask, you can selectively render objects which are in one particular layer.",394],["To do this, select the camera that should selectively render objects.",394],["Modify the culling mask by checking or unchecking layers in the culling mask property.",394],["Casting Rays Selectively",394],["Using layers you can cast rays and ignore colliders in specific layers.",394],["For example you might want to cast a ray only against the player layer and ignore all other colliders.",394],["The Physics.Raycast function takes a bitmask, where each bit determines if a layer will be ignored or not.",394],["If all bits in the layerMask are on, we will collide against all colliders.",394],["If the layerMask = 0, we will never find any collisions with the ray.",394],["// JavaScript example.",394],["// bit shift the index of the layer to get a bit mask",394],["var layerMask = 1 &lt;&lt; 8;",394],["// Does the ray intersect any objects which are in the player layer.",394],["if (Physics.Raycast (transform.position, Vector3.forward, Mathf.Infinity, layerMask))",394],["print (\"The ray hit the player\");",394],["// C# example.",394],["int layerMask = 1 &lt;&lt; 8;",394],["// Does the ray intersect any objects which are in the player layer.",394],["if (Physics.Raycast(transform.position, Vector3.forward, Mathf.Infinity, layerMask))",394],["Debug.Log(\"The ray hit the player\");",394],["In the real world you want to do the inverse of that however. We want to cast a ray against all colliders except those in the Player layer.",394],["// JavaScript example.",394],["function Update () {",394],["// Bit shift the index of the layer (8) to get a bit mask",394],["var layerMask = 1 &lt;&lt; 8;",394],["// This would cast rays only against colliders in layer 8.",394],["// But instead we want to collide against everything except layer 8. The ~ operator does this, it inverts a bitmask.",394],["layerMask = ~layerMask;",394],["var hit : RaycastHit;",394],["// Does the ray intersect any objects excluding the player layer",394],["if (Physics.Raycast (transform.position, transform.TransformDirection (Vector3.forward), hit, Mathf.Infinity, layerMask)) {",394],["Debug.DrawRay (transform.position, transform.TransformDirection (Vector3.forward) * hit.distance, Color.yellow);",394],["print (\"Did Hit\");",394],["} else {",394],["Debug.DrawRay (transform.position, transform.TransformDirection (Vector3.forward) *1000, Color.white);",394],["print (\"Did not Hit\");",394],["// C# example.",394],["void Update () {",394],["// Bit shift the index of the layer (8) to get a bit mask",394],["int layerMask = 1 &lt;&lt; 8;",394],["// This would cast rays only against colliders in layer 8.",394],["// But instead we want to collide against everything except layer 8. The ~ operator does this, it inverts a bitmask.",394],["layerMask = ~layerMask;",394],["RaycastHit hit;",394],["// Does the ray intersect any objects excluding the player layer",394],["if (Physics.Raycast(transform.position, transform.TransformDirection (Vector3.forward), out hit, Mathf.Infinity, layerMask)) {",394],["Debug.DrawRay(transform.position, transform.TransformDirection (Vector3.forward) * hit.distance, Color.yellow);",394],["Debug.Log(\"Did Hit\");",394],["} else {",394],["Debug.DrawRay(transform.position, transform.TransformDirection (Vector3.forward) *1000, Color.white);",394],["Debug.Log(\"Did not Hit\");",394],["When you don't pass a layerMask to the Raycast function, it will only ignore colliders that use the IgnoreRaycast layer.",394],["This is the easiest way to ignore some colliders when casting a ray.",394],["Learning the Interface",395],["Take your time to look over the editor interface and familiarize yourself with it. The main editor window is made up of several tabbed panels known in Unity as Views. There are several types of Views in Unity - they all have specific purposes which are described in this section.",395],["Level of Detail",396],["When an object in the scene is a long way from the camera, the amount of detail that can be seen on it is greatly reduced. However, the same number of triangles will be used to render the object, even though the detail will not be noticed. An optimisation technique called Level Of Detail (LOD) rendering allows you to reduce the number of triangles rendered for an object as its distance from camera increases. As long as your objects aren't all close to the camera at the same time, LOD will reduce the load on the hardware and improve rendering performance.",396],["In Unity, you use the LOD Group component to set up LOD rendering for an object. Full details are given on the component reference page but the images below show how the LOD level used to render an object changes with its distance from camera. The first shows LOD level 0 (the most detailed). Note the large number of small triangles in the mesh:",396],["The second shows a lower level being used when the object is farther away. Note that the mesh has been reduced in detail (smaller number of larger triangles):",396],["Since the arrangement of LOD levels depends somewhat on the target platform and available rendering performance, Unity lets you set maximum LOD levels and a LOD bias preference (ie, whether to favour higher or lower LOD levels at threshold distances) in the Quality Settings.",396],["LOD Naming Convention for Importing Objects",396],["If you create a set of meshes with names ending in _LOD0, _LOD1, _LOD2, etc, for as many LOD levels as you like, a LOD group for the object with appropriate settings will be created for you automatically on import. For example, if the base name for your mesh is Player, you could create files called Player_LOD0, Player_LOD1 and Player_LOD2 to generate an object with three LOD levels. The numbering convention assumes that LOD 0 is the most detailed model and increasing numbers correspond to decreasing detail.",396],["Lighting Overview",397],["In order to calculate the shading of a 3D object, Unity needs to know the intensity, direction and color of the light that falls on it.",397],["These properties are provided by Light objects in the scene. The base color and intensity are set identically for all lights but the direction depends on which type of light you are using. Also, the light may diminish with distance from the source. The four types of lights available in Unity are described below.",397],["Point Lights",397],["A Point Light is located at a point in space and sends light out in all directions equally. The direction of light hitting a surface is the line from the point of contact back to the center of the light object. The intensity diminishes with distance from the light, reaching zero at a specified range.",397],["Point lights are useful for simulating lamps and other local sources of light in a scene. You can also use them to make a spark or explosion illuminate its surroundings in a convincing way.",397],["Spot Lights",397],["Like a point light, a Spot Light has a specified location and range over which the light falls off. However, the spot light is constrained to a angle, resulting in a cone-shaped region of illumination. The center of the cone points in the forward (Z) direction of the light object.",397],["Spot lights are generally used for artificial light sources such as flashlights, car headlights and searchlights. With the direction controlled from a script or animation, a moving spot light will illuminate just a small area of the scene and create dramatic lighting effects.",397],["Directional Lights",397],["A Directional Light does not have any identifiable source position and so the light object can generally be placed anywhere in the scene. All objects in the scene are illuminated as if the light is always from the same direction. The distance of the light from the target object is not defined and so the light does not diminish.",397],["Directional lights represent large, distant sources that come from a position outside the range of the game world. In a realistic scene, they can be used to simulate the sun or moon. In an abstract game world, they can be a useful way to add convincing shading to objects without exactly specifying where the light is coming from. When checking an object in the scene view (to see how its mesh, shader and material look, for example) a directional light is often the quickest way to get an impression of how its shading will appear. For such a test, you are generally not interested in where the light is coming from but simply want to see the object look \"solid\" and look for glitches in the model.",397],["Area Lights",397],["An Area Light is defined by a rectangle in space. Light is emitted in all directions, but only from one side of the rectangle. The light falls off over a specified range. Since the lighting calculation is quite processor-intensive, area lights are not available at runtime and can only be baked into lightmaps.",397],["Since an area light illuminates an object from several different directions at once, the shading tends to be more soft and subtle than the other light types. You might use it to create a realistic street light or a bank of lights close to the player. A small area light can simulate smaller sources of light (such as interior house lighting) but with a more realistic effect than a point light.",397],["Lighting",398],["This section details the advanced lighting features available in Unity. For an introduction, see the Lights manual page and the Light component reference page.",398],["Lighting Reference",399],["This section contains more detailed information on using Lighting.",399],["Light Troubleshooting and Performance",400],["Lights can be rendered using either of two methods:",400],["Vertex lighting calculates the illumination only at the vertices of meshes and interpolates the vertex values over the rest of the surface. Some lighting effects are not supported by vertex lighting but it is the cheaper of the two methods in terms of processing overhead. Also, this may be the only method available on older graphics cards.",400],["Pixel lighting is calculated separately at every screen pixel. While slower to render, pixel lighting does allow some effects that are not possible with vertex lighting. Normal-mapping, light cookies and realtime shadows are only rendered for pixel lights. Additionally, spotlight shapes and point light highlights look much better when rendered in pixel mode.",400],["Lights have a big impact on rendering speed, so lighting quality must be traded off against framereate. Since pixel lights have a much higher rendering overhead than vertex lights, Unity will only render the brightest lights at per-pixel quality and render the rest as vertex lights. The maximum number of pixel lights can be set in the Quality Settings for webplayer and standalone build targets.",400],["You can favour a light to be rendered as a pixel light using its Render Mode property. A light with the mode set to Important will be given higher priority when deciding whether or not to render it as a pixel light. With the mode set to Auto (the default), Unity will classify the light automatically based on how much a given object is affected by the light. The lights that are rendered as pixel lights are determined on an object-by-object basis.",400],["See the page about Optimizing Graphics Performance for further information.",400],["Shadow performance",400],["Realtime shadows have quite a high rendering overhead, so you should use them sparingly. Any objects that might cast shadows must first be rendered into the shadow map and then that map will be used to render objects that might receive shadows. Enabling shadows has an even bigger impact on performance than the pixel/vertex trade-off mentioned above.",400],["Soft shadows have a greater rendering overhead than hard shadows but this only affects the GPU and does not cause much extra CPU work.",400],["The Quality Settings include a Shadow Distance value. Objects that are beyond this distance from the camera will be rendered with no shadows at all. Since the shadows on distant objects will not usually be noticed anyway, this can be a useful optimisation to reduce the number of shadows that must be rendered.",400],["A particular issue with directional lights is that a single light can potentially illuminate the whole of a scene. This means that the shadow map will often cover a large portion of the scene at once and this makes the shadows susceptible to a problem known as \"perspective aliasing\". Simply put, perspective aliasing means that shadow map pixels seen close to the camera look enlarged and \"chunky\" compared to those farther away. Although you can just increase the shadow map resolution to reduce this effect, the result is that rendering resources are wasted for distant areas whose shadow map looked fine at the lower resolution.",400],["A good solution to the problem is therefore to use separate shadow maps that decrease in resolution as the distance from camera increases. These separate maps are known as cascades. From the Quality Settings, you can choose zero, two or four cascades; Unity will calculate the positioning of the cascades within the camera's frustum. Note that cascades are only enabled for directional lights. See directional light shadows page for details.",400],["How the Size of a Shadow Map is Calculated",400],["The first step in calculating the size of the map is to determine the area of the screen view that the light can illuminate. For directional lights, the whole screen can be illuminated but for spot lights and point lights, the area is the onscreen projection of the shape of the light's extent (a sphere for point lights or a cone for spot lights). The projected shape has a certain width and height in pixels on the screen; the larger of those two values is then taken as the light's \"pixel size\".",400],["When the shadow map resolution is set to High (from the Quality Settings) the shadow map's size is calculated as follows:",400],["Directional lights: NextPowerOfTwo(pixelSize * 1.9), up to a maximum of 2048.",400],["Spot lights: NextPowerOfTwo(pixelSize), up to a maximum of 1024.",400],["Point lights: NextPowerOfTwo(pixelSize * 0.5), up to a maximum of 512.",400],["If the graphics card has 512MB or more video memory, the upper shadow map limits are increased to 4096 for directional lights, 2048 for spot lights and 1024 for point lights.",400],["At Medium shadow resolution, the shadow map size is half the value for High resolution and for Low, it is a quarter of the size.",400],["Point lights have a lower limit on size than the other types is because they use cubemaps for shadows. That means that six cubemap faces at this resolution must be kept in video memory at once. They are also quite expensive to render, as potential shadow casters might need to be rendered into all six cubemap faces.",400],["Limited Memory Conditions",400],["If your game is running very low on video memory then it will automatically reduce the resolution of shadow maps below the usual value.",400],["Generally, the screen data (backbuffer, frontbuffer, depth buffer) and data for render textures must be held in video memory. The memory needed to store the screen and render texture data will be subtracted from the total available; one third of the remaining video memory will then be reserved for use by shadow maps. The resolution of any given shadow map will be reduced as far as necessary to fit into this space (ie, the calculations given above are still applied but with the reduced resolution).",400],["Assuming all regular textures, vertex data and other graphics objects could be swapped in and out of video memory, the theoretical maximum amount of VRAM that could be used by a shadow map would be given by the formula (TotalVideoMemory - ScreenMemory - RenderTextureMemory). However, the amounts of memory taken by screen and render textures can never be determined exactly. Furthermore, some objects should not be swapped; performance would be suffer badly if all textures were constantly swapped in and out, for example. To allow for this, Unity does not allow a shadow map to exceed one third of \"generally available\" video memory, and this compromise is found to work quite well in practice.",400],["Troubleshooting Shadows",400],["If you find that one or more objects are not casting shadows then you should check the following points:",400],["Old graphics hardware may not support shadows. See below for a list of minimal hardware specs that can handle shadows.",400],["Shadows can be disabled in the Quality Settings. Make sure that you have the correct quality level enabled and that shadows are switched on for that setting.",400],["All Mesh Renderers in the scene must be set up with their Receive Shadows and  Cast Shadows correctly set. Both are enabled by default but check that they haven't been disabled unintentionally.",400],["Only opaque objects cast and receive shadows so objects using the built-in Transparent or Particle shaders will neither cast nor receive. Generally, you can use the Transparent Cutout shaders instead for objects with \"gaps\" such as fences, vegetation, etc. Custom Shaders must be pixel-lit and use the Geometry render queue.",400],["Objects using VertexLit shaders can't receive shadows but they can cast them.",400],["With the Forward rendering path, some shaders make only the brightest directional light can cast shadows (most notably legacy Unity 4.x built-in shaders). If you want to have numerous shadow casting lights then you should use the Deferred Shading rendering path instead, or make your shaders support \"full shadows\" by using fullforwardshadows surface shader directive.",400],["Hardware Support for Shadows",400],["Built-in shadows work on almost all devices supported by Unity. The following cards are supported on each platform:",400],["Windows",400],["AMD Radeon: all GPUs.",400],["NVIDIA GeForce: all GPUs except GeForce FX (around year 2003) series.",400],["Intel: all GPUs except 915/945/GMA950 (around year 2004).",400],["Mac OS X",400],["All GPUs supported by OS X can do shadows.",400],["iOS, Android and Windows Phone",400],["iOS: GL_EXT_shadow_samplers support. Most notable, iPhone 4 does not support shadows (iPhone 4S does support them already).",400],["Android: Android 4.0 or later, and GL_OES_depth_texture support. Most notably, some Android Tegra 2/3-based Android devices do not have this, so they don't support shadows.",400],["Windows Phone: support varies by OS and model; typically Adreno 225 and 305 GPUs can not do shadows.",400],["Consoles",400],["All consoles can do shadows.",400],["Light Probes",401],["Although lightmapping adds greatly to the realism of a scene, it has the disadvantage that non-static objects in the scene are less realistically rendered and can look disconnected as a result. It isn't possible to calculate lightmapping for moving objects in real time but it is possible to get a similar effect using light probes. The idea is that the lighting is sampled at strategic points in the scene, denoted by the positions of the probes. The lighting at any position can then be approximated by interpolating between the samples taken by the nearest probes. The interpolation is fast enough to be used during gameplay and helps avoid the disconnection between the lighting of moving objects and static lightmapped objects in the scene.",401],["Adding Light probes",401],["The Light Probe Group component (menu: Component -&gt; Rendering -&gt; Light Probe Group) can be added to any available object in the scene. The inspector can be used to add new probes to the group. The probes appear in the scene as yellow spheres which can be positioned in the same manner as GameObjects. Selected probes can also be duplicated with the usual keyboard shortcut (ctrl+d/cmd+d).",401],["Choosing Light Probe positions",401],["Remember to place probes where you want to sample light or sample darkness. The probes need to form a volume within the scene for the space subdivision to work properly.",401],["The simplest approach to positioning is to arrange them in a regular 3D grid pattern. While this setup is simple and effective, it is likely to consume a lot of memory (each light probe is essentially a spherical, panoramic HDR image of the view from the sample point). It is worth noting that probes are only needed for regions that players, NPCs or other dynamic objects can actually move to. Also, since lighting conditions are interpolated for positions between probes, it is not necessary to use lots of them across areas where the light doesn't change very much. For example, a large area of uniform shadow would not need a large number of probes and neither would a brightly lit area far away from reflective objects. Probes are generally needed where the lighting conditions change abruptly, for instance at the edge of a shadow area or in places where pieces of scenery have different colors.",401],["In some cases, the infrastructure of the game can be useful in choosing light probe positions. For example, a racing game typically uses waypoints around the track for AI and other purposes. These are likely to be good candidates for probe positions and it would likely be straightforward to set these positions from an editor script. Similarly, navigation meshes typically define the areas that can be reached by players and these also lend themselves to automated positioning of probes.",401],["Here light probes have been baked over surfaces where our characters can walk on, but only where there are interesting lighting changes to capture:",401],["Flat 2D levels",401],["As it is now, the light probe system can't bake a completely flat probe cloud. So even if all your characters move only on a plane, you still have to take care to position at least some probes in a higher layer, so that a volume is formed and interpolation can work properly.",401],["Using Light Probes",401],["To allow a mesh to receive lighting from the probe system, you should enable the Use Light Probes option on its Mesh Renderer:",401],["The probe interpolation requires a point in space to represent the position of the mesh that is receiving light. By default, the centre of the mesh's bounding box is used but it is possible to override this by dragging a Transform to the Mesh Renderer's Anchor Override property (this Transform's position will be used as the interpolation point instead). This may be useful when an object contains two separate adjoining meshes; if both meshes are lit individually according to their bounding box positions then the lighting will be discontinuous at the place where they join. This can be prevented by using the same Transform (for example the parent or a child object) as the interpolation point for both Mesh Renderers.",401],["When an object using light probes is the active selected object in the Light Probes Scene View mode, its interpolated probe will be rendered on top of it for preview. The interpolated probe is the one used for rendering the object and is connected with 4 thin blue lines (3 when outside of the probe volume) to the probes it is being interpolated between:",401],["Lightmapping modes",401],["In Single Lightmaps and Directional Lightmaps modes all static lighting (including lights set to 'Auto' lightmapping mode) is baked into the light probes.",401],["In Dual Lightmaps mode light probes will store lighting in the same configuration as 'Near' lightmaps, i.e. full illumination from sky lights, emissive materials, area lights and 'Baked Only' lights, but only indirect illumination from 'Auto' lights. Thanks to that the object can be lit in real-time with the 'Auto' lights and take advantage of dynamic elements such as real-time shadows, but at the same time receive indirect lighting added to the scene by these lights.",401],["Lights",402],["Lights are an essential part of every scene. While meshes and textures define the shape and look of a scene, lights define the color and mood of your 3D environment. You'll likely work with more than one light in each scene. Making them work together requires a little practice but the results can be quite amazing.",402],["Lights can be added to your scene from the GameObject &gt; Create General menu. Once a light has been added, you can manipulate it like any other GameObject. Additionally, you can add a Light Component to any selected GameObject by using Component-&gt;Rendering-&gt;Light.",402],["There are many different options within the Light Component in the Inspector.",402],["By simply changing the Color of a light, you can give a whole different mood to the scene.",402],["The lights you create this way are realtime lights - their lighting is calculated each frame while the game is running. If you know the light will not change, you can make your game faster and look much better by using Lightmapping.",402],["Rendering paths",402],["Unity supports different Rendering Paths. These paths affect mainly Lights and Shadows, so choosing the correct rendering path depending on your game requirements can improve your project's performance.",402],["For more info about rendering paths you can visit the Rendering paths section.",402],["More information",402],["For more information about using Lights, check the Lights page in the Manual.",402],["Linear Lighting",403],["Overview",403],["Linear lighting refers to the process of illuminating a scene with all inputs being linear. Normally textures exist with gamma pre-applied to them, which means that when the textures are sampled in a material they are non linear. If these textures are used in the standard lighting equations it will lead to the result from the equation being incorrect as they expect all input to be linearized before use.",403],["Linear lighting refers to the process of ensuring that both inputs and outputs of a shader are in the correct color space which results in more correct lighting.",403],["Existing (Gamma) Pipeline",403],["In the existing rendering pipeline all colors and textures are sampled in gamma space, ie, gamma correction is not removed from images or colors before they are used in a shader. Because of this, a situation arises where the inputs to the shader are in gamma space. If this happens then the lighting equation treats these inputs as if they were in linear space and finally no gamma correction is applied to the final pixel. Much of the time this looks acceptable as the two wrongs go some way to cancelling each other out. But it is not correct.",403],["Linear Lighting Pipeline",403],["If linear lighting is enabled then inputs to the shader program are supplied with the gamma correction removed from them. For colors this conversion is applied implicitly if you are in linear space. Textures are sampled using hardware sRGB reads; the source texture is supplied in gamma space and then on sampling in the graphics hardware the result is converted automatically. These inputs are then supplied to the shader and lighting occurs as it normally would. The resulting value is then written to the framebuffer. This value will either be gamma corrected and written to the framebuffer or left in linear space for later gamma correction; this depends on the current rendering configuration.",403],["Differences Between Linear and Gamma Lighting",403],["When using linear lighting, input values to the lighting equations are different than in gamma space. This means that lights striking surfaces will have a different response curve to what the existing Unity rendering pipeline has.",403],["Light Falloff",403],["The falloff from distance- and normal-based lighting is changed in two ways. Firstly when rendering in linear mode, the additional gamma correction that is performed will make a light's radius appear larger. Secondly lighting edges will also be harsher. This more correctly models lighting intensity falloff on surfaces.",403],["Linear Intensity Response",403],["When you are using gamma space lighting, the colors and textures that are supplied to a shader have a gamma correction applied to them. When they are used in a shader the colors of high luminance are actually brighter then they should be for linear lighting. This means that as light intensity increases the surface will get brighter in a non linear way. This leads to lighting that can be too bright in many places, and can also give models and scenes a washed-out feel. When you are using linear lighting, the response from the surface remains linear as the light intensity increases. This leads to much more realistic surface shading and a much nicer color response in the surface.",403],["Infinite 3D Head Scan by Lee Perry-Smith is licensed under a Creative Commons Attribution 3.0 Unported License. Available from: http://www.ir-ltd.net/",403],["Linear and Gamma Blending",403],["When performing blending into the framebuffer, the blending occurs in the color space or the framebuffer. When using gamma rendering, this means that non-linear colors get blended together. This is incorrect. When using linear space rendering, blending occurs in linear space. This is correct and gives the expected results.",403],["Using Linear Lighting",403],["Linear lighting gives a different look to the rendered scene. When you have authored a project for linear lighting, it will most likely not look correct if you change to gamma lighting. Because of this, if you move to linear lighting from gamma lighting it may take some time to update the project so that it looks as good as before the switch. That being said, enabling linear lighting in Unity is quite simple. The feature is implemented on a per-project basis and is exposed in the Player Settings which can be located at Edit -&gt; Project Settings -&gt; Player -&gt; Other Settings",403],["Lightmapping",403],["When you are using linear lighting, all lighting and textures are linearized, which means that the values passed to the lightmapper also need to be modified. When you switch between linear lighting and gamma lighting, you will need to rebake lightmaps. The Unity lightmapping interface will warn you when the lightmaps are in the wrong color space.",403],["Supported Platforms",403],["Linear rendering is not supported on all platforms. The build targets that currently support the feature are:",403],["Windows &amp; Mac (editor, standalone, web player)",403],["Xbox 360",403],["PlayStation 3",403],["Even though these targets support linear lighting, it is not guaranteed that the graphics hardware on the device will be able to render the scene properly. You can check the desired color space and the active supported color space by looking at QualitySettings.desiredColorSpace and QualitySettings.activeColorSpace. If the desired color space is linear but the active color space is gamma then it means the player has fallen back to gamma space. This can be used to show a warning box telling the user that the application will not look correct for them or to force an exit from the player.",403],["Linear and Non HDR",403],["When you are not using HDR, a special framebuffer type is used that supports sRGB read and sRGB write (Degamma on read, Gamma on write). This means that just like a texture, the values in the framebuffer are gamma corrected. When this framebuffer is used for blending or bound as texture, the values have the gamma removed before being used. When these buffers are written to, the value that is being written is converted from linear space to gamma space. If you are rendering in linear mode then all post-process effects will have their source and target buffers created with sRGB reading and writing enabled so that post-processing and post-process blending occurs in linear space.",403],["Linear and HDR",403],["When using HDR, rendering is performed into floating point buffers. These buffers have enough resolution not to require conversion to and from gamma space whenever the buffer is accessed. This means that when rendering in linear mode, the render targets you use will store the colors in linear space. Therefore, all blending and post process effects will implicitly be performed in linear space. When the the backbuffer is written to, gamma correction is applied.",403],["GUI and Linear Authored Textures",403],["When rendering Unity GUI, we do not perform the rendering in linear space. This means that GUI textures should not have their gamma removed on read. This can be achieved in two ways:",403],["Set the texture type to GUI in the texture importer",403],["Check the 'Bypass sRGB Sampling' checkbox int the advanced texture importer",403],["It is also important that lookup textures (and other textures which are authored to have their RGB values to mean something specific) should bypass sRGB sampling.",403],["This will force the sampled texture not to remove gamma before it is used by the graphics hardware. This is also useful for other texture types, such as masks, where you wish the value that is passed to the shader to be the exact same value that is in the authored texture.",403],["Loading and unloading objects from an AssetBundle",404],["Having created an AssetBundle object from the downloaded data, you can load the objects contained in it using three different methods:",404],["AssetBundle.LoadAsset will load an object using its name identifier as a parameter. The name is the one visible in the Project view. You can optionally pass an object type as an argument to the Load method to make sure the object loaded is of a specific type.",404],["AssetBundle.LoadAssetAsync works the same as the Load method described above but it will not block the main thread while the asset is loaded. This is useful when loading large assets or many assets at once to avoid pauses in your application.",404],["AssetBundle.LoadAllAssets will load all the objects contained in your AssetBundle. As with AssetBundle.Load, you can optionally filter objects by their type.",404],["To unload assets you need to use AssetBundle.Unload. This method takes a boolean parameter which tells Unity whether to unload all data (including the loaded asset objects) or only the compressed data from the downloaded bundle. If your application is using some objects from the AssetBundle and you want to free some memory you can pass false to unload the compressed data from memory. If you want to completely unload everything from the AssetBundle you should pass true which will destroy the Assets loaded from the AssetBundle.",404],["Loading objects from an AssetBundles asynchronously",404],["You can use the AssetBundle.LoadAssetAsync method to load objects Asynchronously and reduce the likelihood of having hiccups in your application.",404],["using UnityEngine;",404],["// Note: This example does not check for errors. Please look at the example in the DownloadingAssetBundles section for more information",404],["IEnumerator Start () {",404],["// Start a download of the given URL",404],["WWW www = WWW.LoadFromCacheOrDownload (url, 1);",404],["// Wait for download to complete",404],["yield return www;",404],["// Load and retrieve the AssetBundle",404],["AssetBundle bundle = www.assetBundle;",404],["// Load the object asynchronously",404],["AssetBundleRequest request = bundle.LoadAssetAsync (\"myObject\", typeof(GameObject));",404],["// Wait for completion",404],["yield return request;",404],["// Get the reference to the loaded object",404],["GameObject obj = request.asset as GameObject;",404],["// Unload the AssetBundles compressed contents to conserve memory",404],["bundle.Unload(false);",404],["// Frees the memory from the web stream",404],["www.Dispose();",404],["Loading Resources at Runtime",405],["In some situations, it is useful to make an asset available to a project without loading it in as part of a scene. For example, there may be a character or other object that can appear in any scene of the game but which will only be used infrequently (this might be a \"secret\" feature, an error message or a highscore alert, say). Furthermore, you may even want to load assets from a separate file or URL to reduce initial download time or allow for interchangeable game content.",405],["Unity supports Resource Folders in the project to allow content to be supplied in the main game file yet not be loaded until requested. You can also create Asset Bundles. These are files completely separate from the main game file which contain assets to be accessed by the game on demand from a file or URL.",405],["Asset Bundles",405],["An Asset Bundle is an external collection of assets. You can have many Asset Bundles and therefore many different external collections of assets. These files exist outside of the built Unity player, usually sitting on a web server for end-users to access dynamically.",405],["To build an Asset Bundle, you call BuildPipeline.BuildAssetBundle() from inside an Editor script. In the arguments, you specify an array of Objects to be included in the built file, along with some other options. This will build a file that you can later load dynamically in the runtime by using AssetBundle.LoadAsset().",405],["Resource Folders",405],["Resource Folders are collections of assets that are included in the built Unity player, but are not necessarily linked to any GameObject in the Inspector.",405],["To put anything into a Resource Folder, you simply create a new folder inside the Project View, and name the folder \"Resources\". You can have multiple Resource Folders organized differently in your Project. Whenever you want to load an asset from one of these folders, you call Resources.Load().",405],["If your target deployable is a Streaming Web Player, you can define which scene will include everything in your Resource Folders. You do this in the Player Settings, accessible via Edit-&gt;Project Settings-&gt;Player. Stream queue is determined by Build Settings' scene order.",405],["Note:",405],["All assets found in the Resources folders and their dependencies are stored in a file called resources.assets. If an asset is already used by another level it is stored in the .sharedAssets file for that level.",405],["The Edit -&gt; PlayerSettings First Streamed Level setting determines the level at which the resources.assets will be collected and included in the build.",405],["If a level prior to \"First streamed Level\" is including an asset in a Resource folder, the asset will be stored in assets for that level. if it is included afterwards, the level will reference the asset from the \"resources.assets\" file.",405],["Only assets that are in the Resources folder can be accessed through Resources.Load(). However many more assets might end up in the \"resources.assets\" file since they are dependencies. (For example a Material in the Resources folder might reference a Texture outside of the Resources folder)",405],["Resource Unloading",405],["You can unload resources of an AssetBundle by calling AssetBundle.Unload(). If you pass true for the unloadAllLoadedObjects parameter, both the objects held internally by the AssetBundle and the ones loaded from the AssetBundle using AssetBundle.LoadAsset() will be destroyed and memory used by the bundle will be released.",405],["Sometimes you may prefer to load an AssetBundle, instantiate the objects desired and release the memory used up by the bundle while keeping the objects around. The benefit is that you free up memory for other tasks, for instance loading another AssetBundle. In this scenario you would pass false as the parameter. After the bundle is destroyed you will not be able to load objects from it any more.",405],["If you want to destroy scene objects loaded using Resources.Load() prior to loading another level, call Object.Destroy() on them. To release assets, use Resources.UnloadUnusedAssets().",405],["Log Files",406],["There might be times during development when you need to obtain information from the logs of the webplayer you've built, your standalone player, the target device or the editor. Usually you need to see these files when you have experienced a problem and you have to know where exactly the problem occurred.",406],["On Mac the webplayer, player and editor logs can be accessed uniformly through the standard Console.app utility.",406],["On Windows the webplayer and editor logs are placed in folders which are not shown in the Windows Explorer by default. See below.",406],["Editor",406],["The editor log can be brought up through the Open Editor Log button in Unity's Console window.",406],["",406],["Mac OS X ~/Library/Logs/Unity/Editor.log ",406],["Windows XP C:\\Documents and Settings\\username\\Local Settings\\Application Data_\\Unity\\Editor\\Editor.log ",406],["Windows Vista/7 C:\\Users\\username\\AppData\\Local\\Unity\\Editor\\Editor.log ",406],["On Windows, the Editor log file is stored in the local application data folder: &#37;LOCALAPPDATA&#37;\\Unity\\Editor\\Editor.log, where LOCALAPPDATA is defined by CSIDL_LOCAL_APPDATA.",406],["On Mac all the logs can be accessed uniformly through the standard Console.app utility.",406],["Webplayer",406],["",406],["Mac OS X ~/Library/Logs/Unity/WebPlayer.log ",406],["Windows XP C:\\Documents and Settings\\username\\Local Settings\\Temp\\UnityWebPlayer\\log\\log_UNIQUEID.txt ",406],["Windows Vista/7 C:\\Users\\username\\AppData\\Local\\Temp\\UnityWebPlayer\\log\\log_UNIQUEID.txt ",406],["Windows Vista/7 + IE7 + UAC C:\\Users\\username\\AppData\\Local\\Temp\\Low\\UnityWebPlayer\\log\\log_UNIQUEID.txt ",406],["On Windows the webplayer log is stored in a temporary folder: &#37;TEMP&#37;\\UnityWebPlayer\\log\\log_UNIQUEID.txt, where TEMP is defined by GetTempPath.",406],["Player",406],["",406],["Mac OS X ~/Library/Logs/Unity/Player.log ",406],["Windows  _EXECNAME_Data_\\output_log.txt ",406],["Linux ~/.config/unity3d/CompanyName/ProductName/Player.log ",406],["On Windows, EXECNAMEData_ is a folder next to the executable with your game.",406],["Note that on Windows and Linux standalones the location of the log file can be changed (or logging suppressed.) See the command line page for further details.",406],["iOS",406],["The device log can be accessed in XCode via GDB console or the Organizer Console. The latter is useful for getting crashlogs when your application was not running through the XCode debugger.",406],["The Troubleshooting and Bugreporting guides may be useful for you.",406],["Android",406],["The device log can be viewed by using the logcat console. Use the adb application found in Android SDK/platform-tools directory with a trailing logcat parameter:",406],["$ adb logcat",406],["Another way to inspect the LogCat is to use the Dalvik Debug Monitor Server (DDMS). DDMS can be started either from Eclipse or from inside the Android SDK/tools. DDMS also provides a number of other debug related tools.",406],["Blackberry",406],["On Blackberry, the log is available from the Player Settings (menu: Edit > Project Settings > Player). Select the Blackberry platform tab and among the Publishing Settings, you will find a Get Log button. Clicking this button will get the latest log from the device and display it using the default system text editor.",406],["Note that the log only records details for the most recently run Unity project, so you will need to keep copies of logs yourself if you want to track details over several runs.",406],["Accessing Log Files on Windows",406],["On Windows the log files are stored in locations that are hidden by default. In Windows XP, you can make hidden folders visible in Windows Explorer using Tools-&gt;Folder Options...-&gt;View (tab).",406],["On Windows Vista/7 you can make the AppData folder visible in Windows Explorer using  Tools-&gt;Folder Options...-&gt;View (tab). The Tools menu is hidden by default, but can be displayed by pressing the Alt key once.",406],["Looping animation clips",407],["A common operation for people working with animations is to make sure they loop properly. It is important, for example, that the animation clip representing the walk cycle, begins and ends in a similar pose (e.g. left foot on the ground), to ensure there is no foot sliding, or strange jerky motions. Mecanim provides convenient tools for this. Animation clips can loop based on pose, rotation, and position.",407],["If you drag the Start or End points of the animation clip, you will see the Looping fitness curves for all of the paramers based on which it is possible to loop. If you place the Start / End marker in a place where the curve for the property is green, it is more likely that the clip can loop properly. The loop match indicator will show how good the looping is for the selected ranges.",407],["Once the loop match indicator is green, Enabling Loop Pose (for example) will make sure the looping of the pose is artifact-free.",407],["For more details on animation clip options, see Animation Clip reference.",407],["Managing asset dependencies",408],["Any given asset in a bundle may depend on other assets. For example, a model may incorporate materials which in turn make use of textures and shaders. It is possible to include all an asset's dependencies along with it in its bundle. However, several assets from different bundles may all depend on a common set of other assets (eg, several different models of buildings may use the same brick texture). If a separate copy of a shared dependency is included in each bundle that has objects using it, then redundant instances of the assets will be created when the bundles are loaded. This will result in wasted memory.",408],["To avoid such wastage, it is possible to separate shared dependencies out into a separate bundle and simply reference them from any bundles with assets that need them. First, the referencing feature needs to be enabled with a call to BuildPipeline.PushAssetDependencies. Then, the bundle containing the referenced dependencies needs to be built. Next, another call to PushAssetDependencies should be made before building the bundles that reference the assets from the first bundle. Additional levels of dependency can be introduced using further calls to PushAssetDependencies. The levels of reference are stored on a stack, so it is possible to go back a level using the corresponding BuildPipeline.PopAssetDependencies function. The push and pop calls need to be balanced including the initial push that happens before building.",408],["At runtime, you need to load a bundle containing dependencies before any other bundle that references them. For example, you would need to load a bundle of shared textures before loading a separate bundle of materials that reference those textures.",408],["Asset IDs",408],["If you anticipate needing to rebuild asset bundles that are part of a dependency chain then you should build them with the BuildAssetBundleOptions.DeterministicAssetBundle option enabled. This guarantees that the internal ID values used to identify assets will be the same each time the bundle is rebuilt.",408],["When building the asset bundle with this method, the objects in it are assigned a 32 bit hash code that is calculated using the name of the asset bundle file, the GUID of the asset and the local id of the object in the asset. For that reason make sure to use the same file name when rebuilding. Also note that having a lot of objects might cause hash collisions preventing Unity from building the asset bundle.",408],["Shaders dependencies",408],["Whenever shaders are directly referenced as parameters in BuildPipeline.BuildAssetBundle, or indirectly with the option BuildAssetBundleOptions.CollectDependencies the shader's code is included with the asset bundle. This could cause a problem if you use BuildAssetBundle alone to create several asset bundles, since referenced shaders will be included in every generated bundle. There could be conflicts, i.e. when you mix different versions of a shader, so you will have to rebuild all your bundles after modifying the shaders. The shader's code will also increase the size of bundles. To avoid these problems you can use BuildPipeline.PushAssetDependencies to separate shaders in a single bundle, and that will allow you to update the shader bundle only. As an example of how to achieve this workflow, you can create a prefab that includes references to the required shaders:",408],["C#",408],["using UnityEngine;",408],["public class ShadersList : MonoBehaviour {",408],["public Shader[] list;",408],["Create an empty object, assign the script, add the shaders to the list and create the prefab, i.e. \"ShadersList\". Then you can create an exporter that generates all the bundles and updates the bundle of shaders:",408],["C#",408],["using UnityEngine;",408],["using UnityEditor;",408],["public class Exporter : MonoBehaviour {",408],["[MenuItem(\"Assets/Export all asset bundles\")]",408],["static void Export() {",408],["BuildAssetBundleOptions options =",408],["BuildAssetBundleOptions.CollectDependencies  ",408],["BuildAssetBundleOptions.CompleteAssets  ",408],["BuildAssetBundleOptions.DeterministicAssetBundle;",408],["BuildPipeline.PushAssetDependencies();",408],["BuildPipeline.BuildAssetBundle(AssetDatabase.LoadMainAssetAtPath(\"Assets/ShadersList.prefab\"), null, \"WebPlayer/ShadersList.unity3d\", options);",408],["BuildPipeline.PushAssetDependencies();",408],["BuildPipeline.BuildAssetBundle(AssetDatabase.LoadMainAssetAtPath(\"Assets/Scene1.prefab\"), null, \"WebPlayer/Scene1.unity3d\", options);",408],["BuildPipeline.BuildAssetBundle(AssetDatabase.LoadMainAssetAtPath(\"Assets/Scene2.prefab\"), null, \"WebPlayer/Scene2.unity3d\", options);",408],["BuildPipeline.PopAssetDependencies();",408],["BuildPipeline.PopAssetDependencies();",408],["[MenuItem(\"Assets/Update shader bundle\")]",408],["static void ExportShaders() {",408],["BuildAssetBundleOptions options =",408],["BuildAssetBundleOptions.CollectDependencies  ",408],["BuildAssetBundleOptions.CompleteAssets  ",408],["BuildAssetBundleOptions.DeterministicAssetBundle;",408],["BuildPipeline.PushAssetDependencies();",408],["BuildPipeline.BuildAssetBundle(AssetDatabase.LoadMainAssetAtPath(\"Assets/ShadersList.prefab\"), null, \"WebPlayer/ShadersList.unity3d\", options);",408],["BuildPipeline.PopAssetDependencies();",408],["Bear in mind that you must load the shader bundle first. One drawback of this method is that the option BuildAssetBundleOptions.DeterministicAssetBundle can produce conflicts due to colliding hashes when the amount of objects is too large. In this case the build will fail, and it won't be possible to update the shader bundle alone. In this case you will have to remove that option and rebuild all the asset bundles.",408],["Managing your Unity license",409],["My Machine is no longer accessable:",409],["You can return activations from the serial number(s) added to your webstore account.",409],["Go to the License Management Section of your webstore account.",409],["Add your serial number to the account if it is not already added.",409],["Click \"Activations\" to the right of the serial number.",409],["Click \"Disable all Activations\".",409],["Unfortunately you cannot return single activations this only resets them.",409],["My Machine is still accessable:",409],["You are now able to manage your license from the editor. Below is a guide to how this system works and performs.",409],["You will see a new option under the 'Unity' drop-down on your toolbar that reads 'Manage License...'. This is the unified place within the Editor for all your licensing needs.",409],["Once you have clicked on the 'Manage License...' option you will be faced with the 'License Management' window. You then have four options (see image), explained below:",409],["'Check for updates' cross-references the server, querying your Serial number for any changes that may have been made since you last activated. This is handy for updating your license to include new add-ons once purchased and added to your existing license via the Unity Store.",409],["'Activate a new license' does what it says on the tin. This enables you to activate a new Serial number on the machine you’re using.",409],["The 'Return license' feature enables you to return the license on the machine in question, in return for a new activation that can be used on another machine. Once clicked the Editor will close and you will be able to activate your Serial number elsewhere. For more information on how many machines a single license enables use on, please see our EULA.",409],["'Manual activation' enables you to activate your copy of Unity offline. This is covered in more depth here.",409],["For any further assistance, please contact support@unity3d.com.",409],["Step-by-Step Guide to Manual Activation of Unity 4.0",410],["With the new Licensing System, the Editor will automatically fall back to manual activation if Online Activation fails, or if you do not have an internet connection. See the steps below for an outline on how to manually Activate Unity 4.0.",410],["Unity falls back to Manual Activation, should the Online Activation fail. However, you can manually prompt Unity to start the Manual Activation procedure by navigating to 'Unity&gt;Manage License...' within the Editor.",410],["In the 'License Management' window, hit the 'Manual activation' button.",410],["You will now be faced with a dialog displaying three buttons:",410],["'Cancel' will take you back to the 'License Management' window.",410],["'Save License' will generate you a license file specific to your machine, based on your HWID. This file can be saved in any location on your physical machine.",410],["'Load License' will load the activation file generated by the Manual Activation process.",410],["You will need to generate a license file; in order to do this, click the Save License button. Once clicked you will be faced with the window 'Save license information for offline activation'. Here you can select a directory on your machine to save the file.",410],["Once saved, you will receive a message stating that 'License file saved successfully'. Click 'Ok' to proceed.",410],["Now minimise the Editor and navigate to https://license.unity3d.com/manual within your Browser (if on a machine without an internet connection, you will need to copy the file to a machine that does and proceed there).",410],["Navigate to the file you generated in Step 4 and upload it in the appropriate field. When your file has been selected, click 'OK' to proceed.",410],["Nearly done! You should have received a file in return, as with Step 4, save this to your machine in a directory of your choice.",410],["Move back into Unity and select the 'Load License' button. Again, this will open up your directories within your hard drive. Select the file that you just saved via the Web form and click 'OK'.",410],["You have now completed the Manual Activation process.",410],["For any further assistance, contact support@unity3d.com.",410],["Materials and Shaders",411],["There is a close relationship between Materials and Shaders in Unity. Shaders contain code that defines what kind of properties and assets to use. Materials allow you to adjust properties and assign assets.",411],["To create a new Material, use Assets-&gt;Create-&gt;Material from the main menu or the Project View context menu. Once the Material has been created, you can apply it to an object and tweak all of its properties in the Inspector. To apply it to an object, just drag it from the Project View to any object in the Scene or Hierarchy.",411],["Setting Material Properties",411],["You can select which Shader you want any particular Material to use. Simply expand the Shader drop-down in the Inspector, and choose your new Shader. The Shader you choose will dictate the available properties to change. The properties can be colors, sliders, textures, numbers, or vectors. If you have applied the Material to an active object in the Scene, you will see your property changes applied to the object in real-time.",411],["There are two ways to apply a Texture to a property.",411],["Drag it from the Project View on top of the Texture square",411],["Click the Select button, and choose the texture from the drop-down list that appears",411],["Two placement options are available for each Texture:",411],["Property: Function: ",411],["Tiling Scales the texture along the different axes. ",411],["Offset Slides the texture around. ",411],["Built-in Shaders",411],["A set of built-in Shaders are installed with the Unity editor. Over eighty shaders are available - the main ones used for texturing game objects fall into the following categories:-",411],["Normal: For opaque textured objects.",411],["Transparent: For partly transparent objects. The texture's alpha channel defines the level of transparency.",411],["TransparentCutOut: For objects that have only fully opaque and fully transparent areas, like fences.",411],["Self-Illuminated: For objects that have light emitting parts.",411],["Reflective: For opaque textured objects that reflect an environment Cubemap.",411],["In each group, built-in shaders range by complexity, from the simple VertexLit to the complex Parallax Bumped with Specular. For more information about performance of Shaders, please read the built-in Shader performance page",411],["In addition to the main game object shaders, there are a number of other categories for specialised purposes:-",411],["FX: lighting and water effects.",411],["GUI: graphic user interface display.",411],["Nature: trees and terrain.",411],["Particles: particle system effects.",411],["Render FX: skybox shaders.",411],["Toon: cartoon-style rendering.",411],["Also, some of these shaders have special versions for use with mobile devices.",411],["Shader technical details",411],["Unity has an extensive Shader system, allowing you to tweak the look of all in-game graphics. It works like this:",411],["A Shader basically defines a formula for how the in-game shading should look. Within any given Shader is a number of properties (typically textures). Shaders are implemented through Materials, which are attached directly to individual GameObjects. Within a Material, you will choose a Shader, then define the properties (usually textures and colors, but properties can vary) that are used by the Shader.",411],["This is rather complex, so let's look at a workflow diagram:",411],["On the left side of the graph is the Carbody Shader. 2 different Materials are created from this: Blue car Material and Red car Material. Each of these Materials have 2 textures assigned; the Car Texture defines the main texture of the car, and a Color FX texture. These properties are used by the shader to make the car finish look like 2-tone paint. This can be seen on the front of the red car: it is yellow where it faces the camera and then fades towards purple as the angle increases. The car materials are attached to the 2 cars. The car wheels, lights and windows don't have the color change effect, and must hence use a different Material. At the bottom of the graph there is a Simple Metal Shader. The Wheel Material is using this Shader. Note that even though the same Car Texture is reused here, the end result is quite different from the car body, as the Shader used in the Material is different.",411],["To be more specific, a Shader defines:",411],["The method to render an object. This includes using different methods depending on the graphics card of the end user.",411],["Any vertex and fragment programs used to render.",411],["Some texture properties that are assignable within Materials.",411],["Color and number settings that are assignable within Materials.",411],["A Material defines:",411],["Which textures to use for rendering.",411],["Which colors to use for rendering.",411],["Any other assets, such as a Cubemap that is required by the shader for rendering.",411],["Shaders are meant to be written by graphics programmers. They are created using the ShaderLab language, which is quite simple. However, getting a shader to work well on a variety graphics cards is an involved job and requires a fairly comprehensive knowledge of how graphics cards work.",411],["A number of shaders are built into Unity directly, and some more come in the Standard Assets Library. For further information about shaders, see the Built-in Shader Guide.",411],["Further reading",411],["Material assets.",411],["Shader assets.",411],["Writing Shaders overview.",411],["Shader reference.",411],["Mecanim FAQ",412],["General questions",412],["We are using the legacy animation system for character animations. Should we be using Mecanim instead?",412],["Mecanim is the main animation technology that will be used and developed by Unity from now on. The legacy system will not be updated significantly.",412],["Import",412],["Why is an Animator component added automatically to every mesh as it is imported?",412],["Currently there is no way for you to change the default import settings but if you set the Rig to None in the import settings then the Animator component will not be added - you can do this with several files at once.",412],["Layers",412],["Does the ordering of the layers matter?",412],["Yes. Layers are evaluated from top to bottom in order. Layers set to override will always override the previous layers (based on their mask, if they have a mask).",412],["Should the weight value of the base layer always be set to one or should the weight be zero when another synced layer is run?",412],["The base layer weight is always 1 but layers set to override will completely override the base layer.",412],["Is there any way to get a variable value from the controller without using the name string?",412],["You can use integers to identify the states and parameters. Use the Animator.StringToHash function to get the integer identifier values. For example:",412],["runState = Animator.StringToHash(\"Base Layer.Run\");",412],["animator.SetBool(runState, false);",412],["Avatars and body Masks",412],["Is there a way to create AvatarIKGoals other than LeftFoot, RightFoot, LeftHand, RightHand?",412],["This feature is planned for a future release.",412],["Animations curves",412],["How do animations that have Curves blend with those that don't?",412],["When you have an animation with a curve and another animation without a curve, Unity will use the default value of the parameter connected to the curve to do blending.",412],["You can set default values for your parameters, so when blending takes place between a State that has a Curve Parameter and one that does not have one, it will blend between the curve value and the default parameter value.",412],["To set a default value for a Parameter, simply set its value in the Animator Tool window while not in LiveLink.",412],["Performance and Optimization",413],["This page contains some tips to help you obtain the best performance from Mecanim, covering character setup, the animation system and runtime optimizations.",413],["Character Setup",413],["Number of Bones",413],["In some cases you will need to create characters with a large number of bones, for example when you want a lot of customizable attachments. These extra bones will increase the size of the build, and you could expect to have a relative processing cost for each additional bone. For example, 15 additional bones on a rig that already has 30 bones will take 50% longer to solve in Generic mode. Note that you can have additional bones in Generic and in Humanoid mode. When you have no animations playing using the additional bones, the processing cost should be negligible. This cost will be even lower if their attachments are non existent or hidden.",413],["Multiple Skinned Meshes",413],["Combine skinned meshes whenever possible. Splitting a character into two Skinned Mesh Renderers is a bad idea with regard to performance. It's better if your character has just one material, but there are some cases when you might require more materials.",413],["Animation System",413],["Controllers",413],["The Animator doesn't spend time processing when a Controller is not set to it.",413],["Simple Animation",413],["Playing a single Animation Clip with no blending can make Mecanim slower than the legacy animation system. The old system is very direct, sampling the curve and directly writing into the transform. Mecanim has temporary buffers it uses for blending, and there is additional copying of the sampled curve and other data. The Mecanim layout is optimized for animation blending and more complex setups.",413],["Scale Curves",413],["Animating scale curves is more expensive than animating translation and rotation curves. To improve performance, avoid scale animations.",413],["Note: This does not apply to constant curves (curves that have the same value for the length of the Animation Clip ). Constant curves are optimized, and are less expensive that normal curves.",413],["Layers",413],["Most of the time Mecanim is evaluating animations, and the overhead for AnimationLayers and AnimationStateMachines is kept to the minimum. The cost of adding another layer to the animator, synchronized or not, depends on what animations and blend trees are played by the layer. When the weight of the layer is zero, the layer update will be skipped.",413],["Humanoid vs. Generic Modes",413],["These tips will help you decide between these modes:",413],["When importing Humanoid animation use a BodyMask to remove IK Goals or fingers animation if they are not needed.",413],["When you use Generic, using root motion is more expensive than not using it. If your animations don't use root motion, make sure that you have no root bone selected.",413],["Mecanim Scene",413],["There are many optimizations that can be made, some useful tips include:",413],["Use hashes instead of strings to query the Animator.",413],["Implement a small AI Layer to control the Animator. You can make it provide simple callbacks for OnStateChange, OnTransitionBegin, etc.",413],["Use State Tags to easily match your AI state machine to the Mecanim state machine.",413],["Use additional curves to simulate Events.",413],["Use additional curves to mark up your animations, for example in conjunction with target matching.",413],["Runtime Optimizations",413],["Visibility and Updates",413],["Always optimize animations by setting the animators's Culling Mode to Based on Renderers, and disable the skinned mesh renderer's Update When Offscreen property. This way animations won't be updated when the character is not visible. See the skinned mesh renderer for further information.",413],["Messaging System",414],["The new UI system uses a messaging system designed to replace SendMessage. The system is pure C# and aims to address some of the issues present with SendMessage. The system works using custom interfaces that can be implemented on a MonoBehaviour to indicate that the component is capable of receiving a callback from the messaging system. When the call is made a target GameObject is specified; the call will be issued on all components of the GameObject that implement the specified interface that the call is to be issued against. The messaging system allows for custom user data to be passed, as well as how far through the GameObject hierarchy the event should propagate; that is should it just execute for the specified GameObject, or should it also execute on children and parents. In addition to this the messaging framework provides helper functions to search for and find GameObjects that implement a given messaging interface.",414],["The messaging system is generic and designed for use not just by the UI system but also by general game code. It is relatively trivial to add custom messaging events and they will work using the same framework that the UI system uses for all event handling.",414],["How Do I Define A Custom Message?",414],["If you wish to define a custom message it is relatively simple. In the UnityEngine.EventSystems namespace there is a base interface called 'IEventSystemHandler'. Anything that extends from this can be considered as a target for receiving events via the messaging system.",414],["public interface ICustomMessageTarget : IEventSystemHandler",414],["// functions that can be called via the messaging system",414],["void Message1();",414],["void Message2();",414],["Once this interface is defined then it can be implemented by a MonoBehaviour. When implemented it defines the functions that will be executed if the given message is issued against this MonoBehaviours GameObject.",414],["public class CustomMessageTarget : MonoBehaviour, ICustomMessageTarget",414],["public void Message1()",414],["Debug.Log (\"Message 1 received\");",414],["public void Message2()",414],["Debug.Log (\"Message 2 received\");",414],["Now that a script exists that can receive the message we need to issue the message. Normally this would be in response to some loosely coupled event that occurs. For example, in the UI system we issue events for such things as PointerEnter and PointerExit, as well as a variety of other things that can happen in response to user input into the application.",414],["To send a message a static helper class exists to do this. As arguments it requires a target object for the message, some user specific data, and a functor that maps to the specific function in the message interface you wish to target.",414],["ExecuteEvents.Execute(target, null, (x,y)=>x.Message1());",414],["This code will execute the function Message1 on any components on the GameObject target that implement the ICustomMessageTarget interface. The scripting documentation for the ExecuteEvents class covers other forms of the Execute functions, such as Executing in children or in parents.",414],["Advanced Unity Mobile Scripting",415],["Device Properties",415],["There are a number of device-specific properties that you can access. See the script reference pages for SystemInfo.deviceUniqueIdentifier, SystemInfo.deviceName, SystemInfo.deviceModel and SystemInfo.operatingSystem.",415],["Anti-Piracy Check",415],["Pirates will often hack an application (by removing AppStore DRM protection) and then redistribute it for free. Unity comes with an anti-piracy check which allows you to determine if your application was altered after it was submitted to the AppStore.",415],["You can check if your application is genuine (not-hacked) with the Application.genuine property. If this property returns false then you might notify user that he is using a hacked application or maybe disable access to some functions of your application.",415],["Note: Application.genuineCheckAvailable should be used along with Application.genuine to verify that application integrity can actually be confirmed. Accessing the Application.genuine property is a fairly expensive operation and so you shouldn't do it during frame updates or other time-critical code.",415],["Vibration Support",415],["You can trigger a vibration by calling Handheld.Vibrate. However, devices lacking vibration hardware will just ignore this call.",415],["Activity Indicator",415],["Mobile OSs have built-in activity indicators, that you can use during slow operations. Please check Handheld.StartActivityIndicator docs for usage sample.",415],["Screen Orientation",415],["Unity iOS/Android allows you to control current screen orientation. Detecting a change in orientation or forcing some specific orientation can be useful if you want to create game behaviors depending on how the user is holding the device.",415],["You can retrieve device orientation by accessing the Screen.orientation property. Orientation can be one of the following:",415],["",415],["Portrait The device is in portrait mode, with the device held upright and the home button at the bottom. ",415],["PortraitUpsideDown The device is in portrait mode but upside down, with the device held upright and the home button at the top. ",415],["LandscapeLeft The device is in landscape mode, with the device held upright and the home button on the right side. ",415],["LandscapeRight The device is in landscape mode, with the device held upright and the home button on the left side. ",415],["You can control screen orientation by setting Screen.orientation to one of those, or to ScreenOrientation.AutoRotation.",415],["When you want auto-rotation, you can disable some orientation on a case by case basis. See the script reference pages for Screen.autorotateToPortrait, Screen.autorotateToPortraitUpsideDown, Screen.autorotateToLandscapeLeft andScreen.autorotateToLandscapeRight",415],["Advanced iOS scripting",415],["Determining Device Generation",415],["Different device generations support different functionality and have widely varying performance. You should query the device's generation and decide which functionality should be disabled to compensate for slower devices. You can find the device generation from the iOS.DeviceGeneration property.",415],["More information about different device generations, performance and supported functionality can be found in our iPhone Hardware Guide.",415],["Advanced Android scripting",415],["Determining Device Generation",415],["Different Android devices support different functionality and have widely varying performance. You should target specific devices or device families and decide which functionality should be disabled to compensate for slower devices. There are a number of device specific properties that you can access to which device is being used.",415],["Note: Android Marketplace does some additional compatibility filtering, so you should not be concerned if an ARMv7-only app optimised for OGLES2 is offered to some old slow devices.",415],["Crashes",416],["Checklist for crashes",416],["Disable code stripping (and set \"slow with exceptions\" for iOS)",416],["Follow the instructions on Optimizing the Size of the Built iOS Player (iphone-playerSizeOptimization) to make sure your game does not crash with stripping on iOS.",416],["Verify it is not because of out of memory (restart your device, use the device with maximum RAM for the platform, be sure to watch the logs)",416],["Editor.log - on the editor",416],["The Debug messages, warnings and errors all go to the console. Also Unity prints status reports to the console - loading assets, initializing mono, graphics driver info.",416],["If you are trying to understand what is going on look at the editor.log. Here you will get the full picture, not just a console fragment. You can try to understand what's happening, and watch the full log of your coding session. This will help you track down what has caused Unity crash to crash or find out what's wrong with your assets.",416],["Unity prints some things on the devices as well; Logcat console for android and Xcode gdb console on iOS devices",416],["Debugging on Android",416],["Use the DDMS or ADB tool",416],["Watch the stacktrace (Android 3 or newer). Either use c++filt (part of the ndk) or the other methods, like: http://slush.warosu.org/c++filtjs to decode the mangled function calls",416],["Look at the .so file that the crash occurs on:",416],["libunity.so - the crash is in the Unity code or the user code",416],["libdvm.so - the crash is in the Java world, somewhere with Dalvik. So find Dalvik's stacktrace, look at your JNI code or anything Java-related (including your possible changes to the AndroidManifest.xml).",416],["libmono.so - either a Mono bug or you're doing something Mono strongly dislikes",416],["If the crashlog does not help you can disassemble it to get a rough understanding of what has happened.",416],["use ARM EABI tools from the Android NDK like this: objdump.exe -S libmono.so &gt;&gt; out.txt",416],["Look at the code around pc from the stacktrace.",416],["try to match that code within the fresh out.txt file.",416],["Scroll up to understand what is happening in the function it occurs in.",416],["Debugging on iOS",416],["Xcode has built in tools. Xcode 4 has a really nice GUI for debugging crashes, Xcode 3 has less.",416],["Full gdb stack - thread backtrace all",416],["Enable soft-null-check:",416],["Enable development build and script debugging. Now uncaught null ref exceptions will be printed to the Xcode console with the appropriate managed call stack.",416],["Try turning the \"fast script call\" and code stripping off. It may stop some random crashes, like those caused by using some rare .Net functions or reflection.",416],["Strategy",416],["Try to figure out which script the crash happens in and debug it using mono develop on the device.",416],["If the crash seems to not be in your code, take a closer look at the stacktrace, there should be a hint of something happening. Take a copy and submit it, and we'll take a look.",416],["Customizing an iOS Splash Screen",417],["Under iOS Basic, a default splash screen will be displayed while your game loads, oriented according to the Default Screen Orientation option in the Player Settings.",417],["Users with an iOS Pro license can use any texture in the project as a splash screen. The size of the texture depends on the target device (320x480 pixels for 1-3rd gen devices, 1024x768 for iPad mini/iPad 1st/2nd gen, 2048x1536 for iPad 3th/4th gen, 640x960 for 4th gen iPhone / iPod devices and 640x1136 for 5th gen devices) and supplied textures will be scaled to fit if necessary. You can set the splash screen textures using the iOS Player Settings.",417],["Mobile Developer Checklist",418],["If you are having problems when developing for a mobile platform, this is a checklist to help you solve various problems.",418],["Mobile Device Input",419],["On mobile devices, the Input class offers access to touchscreen, accelerometer and geographical/location input.",419],["Access to keyboard on mobile devices is provided via the iOS keyboard.",419],["Multi-Touch Screen",419],["The iPhone and iPod Touch devices are capable of tracking up to five fingers touching the screen simultaneously. You can retrieve the status of each finger touching the screen during the last frame by accessing the Input.touches property array.",419],["Android devices don't have a unified limit on how many fingers they track. Instead, it varies from device to device and can be anything from two-touch on older devices to five fingers on some newer devices.",419],["Each finger touch is represented by an Input.Touch data structure:",419],["Property: Function: ",419],["fingerId The unique index for a touch. ",419],["position The screen position of the touch. ",419],["deltaPosition The screen position change since the last frame. ",419],["deltaTime Amount of time that has passed since the last state change. ",419],["tapCount The iPhone/iPad screen is able to distinguish quick finger taps by the user. This counter will let you know how many times the user has tapped the screen without moving a finger to the sides. %android%Android devices do not count number of taps, this field is always 1.%% ",419],["phase Describes so called \"phase\" or the state of the touch. It can help you determine if the touch just began, if user moved the finger or if he just lifted the finger. ",419],["Phase can be one of the following:",419],["",419],["Began A finger just touched the screen. ",419],["Moved A finger moved on the screen. ",419],["Stationary A finger is touching the screen but hasn't moved since the last frame. ",419],["Ended A finger was lifted from the screen. This is the final phase of a touch. ",419],["Canceled The system cancelled tracking for the touch, as when (for example) the user puts the device to her face or more than five touches happened simultaneously. This is the final phase of a touch. ",419],["Following is an example script which will shoot a ray whenever the user taps on the screen:",419],["var particle : GameObject;",419],["function Update () {",419],["for (var touch : Touch in Input.touches) {",419],["if (touch.phase == TouchPhase.Began) {",419],["// Construct a ray from the current touch coordinates",419],["var ray = Camera.main.ScreenPointToRay (touch.position);",419],["if (Physics.Raycast (ray)) {",419],["// Create a particle if hit",419],["Instantiate (particle, transform.position, transform.rotation);",419],["Mouse Simulation",419],["On top of native touch support Unity iOS/Android provides a mouse simulation. You can use mouse functionality from the standard Input class.",419],["Accelerometer",419],["As the mobile device moves, a built-in accelerometer reports linear acceleration",419],["changes along the three primary axes in three-dimensional space. Acceleration",419],["along each axis is reported directly by the hardware as G-force values. A value",419],["of 1.0 represents a load of about +1g along a given axis while a value of -1.0",419],["represents -1g. If you hold the device upright (with the home button at the",419],["bottom) in front of you, the X axis is positive along the right, the Y axis is",419],["positive directly up, and the Z axis is positive pointing toward you.",419],["You can retrieve the accelerometer value by accessing the Input.acceleration property.",419],["The following is an example script which will move an object using the accelerometer:",419],["var speed = 10.0;",419],["function Update () {",419],["var dir : Vector3 = Vector3.zero;",419],["// we assume that the device is held parallel to the ground",419],["// and the Home button is in the right hand",419],["// remap the device acceleration axis to game coordinates:",419],["// 1) XY plane of the device is mapped onto XZ plane",419],["// 2) rotated 90 degrees around Y axis",419],["dir.x = -Input.acceleration.y;",419],["dir.z = Input.acceleration.x;",419],["// clamp acceleration vector to the unit sphere",419],["if (dir.sqrMagnitude > 1)",419],["dir.Normalize();",419],["// Make it move 10 meters per second instead of 10 meters per frame...",419],["dir *= Time.deltaTime;",419],["// Move object",419],["transform.Translate (dir * speed);",419],["Low-Pass Filter",419],["Accelerometer readings can be jerky and noisy. Applying low-pass filtering on the signal allows you to smooth it and get rid of high frequency noise.",419],["The following script shows you how to apply low-pass filtering to accelerometer readings:",419],["var AccelerometerUpdateInterval : float = 1.0 / 60.0;",419],["var LowPassKernelWidthInSeconds : float = 1.0;",419],["private var LowPassFilterFactor : float = AccelerometerUpdateInterval / LowPassKernelWidthInSeconds; // tweakable",419],["private var lowPassValue : Vector3 = Vector3.zero;",419],["function Start () {",419],["lowPassValue = Input.acceleration;",419],["function LowPassFilterAccelerometer() : Vector3 {",419],["lowPassValue = Mathf.Lerp(lowPassValue, Input.acceleration, LowPassFilterFactor);",419],["return lowPassValue;",419],["The greater the value of LowPassKernelWidthInSeconds, the slower the filtered value will converge towards the current input sample (and vice versa).",419],["I'd like as much precision as possible when reading the accelerometer. What should I do?",419],["Reading the Input.acceleration variable does not equal sampling the hardware. Put simply, Unity samples the hardware at a frequency of 60Hz and stores the result into the variable. In reality, things are a little bit more complicated -- accelerometer sampling doesn't occur at consistent time intervals, if under significant CPU loads. As a result, the system might report 2 samples during one frame, then 1 sample during the next frame.",419],["You can access all measurements executed by accelerometer during the frame. The following code will illustrate a simple average of all the accelerometer events that were collected within the last frame:",419],["var period : float = 0.0;",419],["var acc : Vector3 = Vector3.zero;",419],["for (var evnt : iPhoneAccelerationEvent in iPhoneInput.accelerationEvents) {",419],["acc += evnt.acceleration * evnt.deltaTime;",419],["period += evnt.deltaTime;",419],["if (period > 0)",419],["acc *= 1.0/period;",419],["return acc;",419],["Mobile Keyboard",420],["In most cases, Unity will handle keyboard input automatically for GUI elements but it is also easy to show the keyboard on demand from a script.",420],["GUI Elements",420],["The keyboard will appear automatically when a user taps on editable GUI elements. Currently, GUI.TextField, GUI.TextArea and GUI.PasswordField will display the keyboard; see the GUI class documentation for further details.",420],["Manual Keyboard Handling",420],["Use the TouchScreenKeyboard.Open() function to open the keyboard. Please see the TouchScreenKeyboard scripting reference for the parameters that this function takes.",420],["Keyboard Layout Options",420],["The Keyboard supports the following options:-",420],["Property: Function: ",420],["TouchScreenKeyboardType.Default Letters. Can be switched to keyboard with numbers and punctuation. ",420],["TouchScreenKeyboardType.ASCIICapable Letters. Can be switched to keyboard with numbers and punctuation. ",420],["TouchScreenKeyboardType.NumbersAndPunctuation Numbers and punctuation. Can be switched to keyboard with letters. ",420],["TouchScreenKeyboardType.URL Letters with slash and .com buttons. Can be switched to keyboard with numbers and punctuation. ",420],["TouchScreenKeyboardType.NumberPad Only numbers from 0 to 9. ",420],["TouchScreenKeyboardType.PhonePad Keyboard used to enter phone numbers. ",420],["TouchScreenKeyboardType.NamePhonePad Letters. Can be switched to phone keyboard. ",420],["TouchScreenKeyboardType.EmailAddress Letters with @ sign. Can be switched to keyboard with numbers and punctuation. ",420],["Text Preview",420],["By default, an edit box will be created and placed on top of the keyboard after it appears. This works as preview of the text that user is typing, so the text is always visible for the user. However, you can disable text preview by setting TouchScreenKeyboard.hideInput to true. Note that this works only for certain keyboard types and input modes. For example, it will not work for phone keypads and multi-line text input. In such cases, the edit box will always appear. TouchScreenKeyboard.hideInput is a global variable and will affect all keyboards.",420],["Visibility and Keyboard Size",420],["There are three keyboard properties in TouchScreenKeyboard that determine keyboard visibility status and size on the screen.",420],["Property: Function: ",420],["visible Returns true if the keyboard is fully visible on the screen and can be used to enter characters. ",420],["area Returns the position and dimensions of the keyboard. ",420],["active Returns true if the keyboard is activated. This property is not static property. You must have a keyboard instance to use this property. ",420],["Note that TouchScreenKeyboard.area will return a Rect with position and size set to 0 until the keyboard is fully visible on the screen. You should not query this value immediately after TouchScreenKeyboard.Open(). The sequence of keyboard events is as follows:",420],["TouchScreenKeyboard.Open() is called. TouchScreenKeyboard.active returns true. TouchScreenKeyboard.visible returns false. TouchScreenKeyboard.area returns (0, 0, 0, 0).",420],["Keyboard slides out into the screen. All properties remain the same.",420],["Keyboard stops sliding. TouchScreenKeyboard.active returns true. TouchScreenKeyboard.visible returns true. TouchScreenKeyboard.area returns real position and size of the keyboard.",420],["Secure Text Input",420],["It is possible to configure the keyboard to hide symbols when typing. This is useful when users are required to enter sensitive information (such as passwords). To manually open keyboard with secure text input enabled, use the following code:",420],["TouchScreenKeyboard.Open(\"\", TouchScreenKeyboardType.Default, false, false, true);",420],["Alert keyboard",420],["To display the keyboard with a black semi-transparent background instead of the classic opaque, call TouchScreenKeyboard.Open() as follows:",420],["TouchScreenKeyboard.Open(\"\", TouchScreenKeyboardType.Default, false, false, true, true);",420],["Networking on Mobile devices.",421],["The Unity iOS/Android Networking engine is fully compatible with networking for desktop devices, so your existing networking code should work on iOS/Android devices. However, you may want to re-engineer your code if it is mainly to be used with Wi-Fi or cellular networks. Moreover, depending on the mobile, the networking chip may also be the bottleneck since pings between mobile devices (or between the mobile device and the desktop) are about 40-60 ms, even in high performance Wi-Fi networks.",421],["Using Networking you can create a game that can be played simultaneously from desktop and iOS over Wi-Fi or cellular networks. In the latter case, your game server should have a public IP address (accessible through the internet).",421],["Note: EDGE / 3G data connections go to sleep very quickly when no data is sent. Thus sometimes you may need to \"wake-up\" networking. Just make the WWW class connect to your site (and yield until it finishes) before making the Unity networking connection..",421],["Optimizations",422],["Just like on PCs, mobile platforms like iOS and Android have devices of various levels of performance. You can easily find a phone that's 10x more powerful for rendering than some other phone.",422],["Quite easy way of scaling:",422],["Make sure it runs okay on baseline configuration",422],["Use more eye-candy on higher performing configurations:",422],["Resolution",422],["Post-processing",422],["MSAA",422],["Anisotropy",422],["Shaders",422],["Fx/particles density, on/off",422],["Focus on GPUs",422],["Graphics performance is bound by fillrate, pixel and geometric complexity (vertex count). All three of these can be reduced if you can find a way to cull more renderers. Occlusion culling could help here as Unity will automatically cull objects outside the viewing frustum.",422],["On mobiles you're essentially fillrate bound (fillrate = screen pixels * shader complexity * overdraw), and over-complex shaders is the most common cause of problems. So use mobile shaders that come with Unity or design your own but make them as simple as possible. If possible simplify your pixel shaders by moving code to vertex shader.",422],["If reducing the Texture Quality in Quality Settings makes the game run faster, you are probably limited by memory bandwidth. So compress textures, use mipmaps, reduce texture size, etc.",422],["LOD (Level of Detail) - make objects simpler or eliminate them completely as they move further away.",422],["Good practice",422],["Mobile GPUs have huge constraints in how much heat they produce, how much power they use, and how large or noisy they can be. So compared to the desktop parts, mobile GPUs have way less bandwidth, low ALU performance and texturing power. The architectures of the GPUs are also tuned to use as little bandwidth &amp; power as possible.",422],["Unity is optimized for OpenGL ES 2.0, it uses GLSL ES (similar to HLSL) shading language. Built in shaders are most often written in HLSL (also known as Cg). This is cross compiled into GLSL ES for mobile platforms. You can also write GLSL directly if you want to, but doing that limits you to OpenGL-like platforms (e.g. mobile + Mac) since there currently are no GLSL-&gt;HLSL translation tools. When you use float/half/fixed types in HLSL, they end up highp/mediump/lowp precision qualifiers in GLSL ES.",422],["Here is the checklist for good practice:",422],["Keep the number of materials as low as possible. This makes it easier for Unity to batch stuff.",422],["Use texture atlases (large images containing a collection of sub-images) instead of a number of individual textures. These are faster to load, have fewer state switches, and are batching friendly.",422],["Use Renderer.sharedMaterial instead of Renderer.material if using texture atlases and shared materials.",422],["Forward rendered pixel lights are expensive.",422],["Use light mapping instead of realtime lights where ever possible.",422],["Adjust pixel light count in quality settings. Essentially only the directional light should be per pixel, everything else - per vertex. Certainly this depends on the game.",422],["Experiment with Render Mode of Lights in the Quality Settings to get the correct priority.",422],["Avoid Cutout (alpha test) shaders unless really necessary.",422],["Keep Transparent (alpha blend) screen coverage to a minimum.",422],["Try to avoid situations where multiple lights illuminate any given object.",422],["Try to reduce the overall number of shader passes (Shadows, pixel lights, reflections).",422],["Rendering order is critical. In general case:",422],["fully opaque objects roughly front-to-back.",422],["alpha tested objects roughly front-to-back.",422],["skybox.",422],["alpha blended objects (back to front if needed).",422],["Post Processing is expensive on mobiles, use with care.",422],["Particles: reduce overdraw, use the simplest possible shaders.",422],["Double buffer for Meshes modified every frame:",422],["void Update (){",422],["// flip between meshes",422],["bufferMesh = on ? meshA : meshB;",422],["on = !on;",422],["bufferMesh.vertices = vertices; // modification to mesh",422],["meshFilter.sharedMesh = bufferMesh;",422],["Shader optimizations",422],["Checking if you are fillrate-bound is easy: does the game run faster if you decrease the display resolution? If yes, you are limited by fillrate.",422],["Try reducing shader complexity by the following methods:",422],["Avoid alpha-testing shaders; instead use alpha-blended versions.",422],["Use simple, optimized shader code (such as the \"Mobile\" shaders that ship with Unity).",422],["Avoid expensive math functions in shader code (pow, exp, log, cos, sin, tan, etc). Consider using pre-calculated lookup textures instead.",422],["Pick lowest possible number precision format (float, half, fixedin Cg) for best performance.",422],["Focus on CPUs",422],["It is often the case that games are limited by the GPU on pixel processing. So they end up having unused CPU power, especially on multicore mobile CPUs. So it is often sensible to pull some work off the GPU and put it onto the CPU instead (Unity does all of these): mesh skinning, batching of small objects, particle geometry updates.",422],["These should be used with care, not blindly. If you are not bound by draw calls, then batching is actually worse for performance, as it makes culling less efficient and makes more objects affected by lights!",422],["Good practice",422],["FindObjectsOfType (and Unity getter properties in general) are very slow, so use them sensibly.",422],["Set the Static property on non-moving objects to allow internal optimizations like static batching.",422],["Spend lots of CPU cycles to do occlusion culling and better sorting (to take advantage of Early Z-cull).",422],["Physics",422],["Physics can be CPU heavy. It can be profiled via the Editor profiler. If Physics appears to take too much time on CPU:",422],["Tweak Time.fixedDeltaTime (in Project settings -&gt; Time) to be as high as you can get away with. If your game is slow moving, you probably need less fixed updates than games with fast action. Fast paced games will need more frequent calculations, and thus fixedDeltaTime will need to be lower or a collision may fail.",422],["Physics.solverIterationCount (Physics Manager).",422],["Use as little Cloth objects as possible.",422],["Use Rigidbodies only where necessary.",422],["Use primitive colliders in preference mesh colliders.",422],["Never ever move a static collider (ie a collider without a Rigidbody) as it causes a big performance hit. It shows up in Profiler as \"Static Collider.Move' but actual processing is in Physics.Simulate. If necessary, add a RigidBody and set isKinematic to true.",422],["On Windows you can use NVidia's AgPerfMon profiling tool set to get more details if needed.",422],["Android",422],["GPU",422],["These are the popular mobile architectures. This is both different hardware vendors than in PC/console space, and very different GPU architectures than the \"usual\" GPUs.",422],["ImgTec PowerVR SGX - Tile based, deferred: render everything in small tiles (as 16x16), shade only visible pixels",422],["NVIDIA Tegra - Classic: Render everything",422],["Qualcomm Adreno - Tiled: Render everything in tile, engineered in large tiles (as 256k). Adreno 3xx can switch to traditional.",422],["ARM Mali Tiled: Render everything in tile, engineered in small tiles (as 16x16)",422],["Spend some time looking into different rendering approaches and design your game accordingly. Pay especial attention to sorting. Define the lowest end supported devices early in the dev cycle. Test on them with the profiler on as you design your game.",422],["Use platform specific texture compression.",422],["Further reading",422],["PowerVR SGX Architecture Guide http://imgtec.com/powervr/insider/powervr-sdk-docs.asp",422],["Tegra GLES2 feature guide http://developer.download.nvidia.com/tegra/docs/tegra_gles2_development.pdf",422],["Qualcomm Adreno GLES performance guide http://developer.qualcomm.com/file/607/adreno200performanceoptimizationopenglestipsandtricksmarch10.pdf",422],["Engel, Rible http://altdevblogaday.com/2011/08/04/programming-the-xperia-play-gpu-by-wolfgang-engel-and-maurice-ribble/",422],["ARM Mali GPU Optimization guide http://www.malideveloper.com/developer-resources/documentation/index.php",422],["Screen resolution",422],["Android version",422],["iOS",422],["GPU",422],["Only PowerVR architecture (tile based deferred) to be concerned about.",422],["ImgTec PowerVR SGX. Tile based, deferred: render everything in tiles, shade only visible pixels.",422],["This means:",422],["Mipmaps are not so necessary.",422],["Antialiasing and aniso are cheap enough, not needed on iPad 3 in some cases.",422],["And cons:",422],["If vertex data per frame (number of vertices * storage required after vertex shader) exceeds the internal buffers allocated by the driver, the scene has to be \"split\" which costs performance. The driver might allocate a larger buffer after this point, or you might need to reduce your vertex count. This becomes apparent on iPad2 (iOS 4.3) at around 100 thousand vertices with quite complex shaders.",422],["TBDR needs more transistors allocated for the tiling and deferred parts, leaving conceptually less transistors for \"raw performance\". It's very hard (i.e. practically impossible) to get GPU timing for a draw call on TBDR, making profiling hard.",422],["Further reading",422],["PowerVR SGX Architecture Guide http://imgtec.com/powervr/insider/powervr-sdk-docs.asp",422],["Screen resolution",422],["iOS version",422],["Dynamic Objects",422],["Asset Bundles",422],["Asset Bundles are cached on a device to a certain limit",422],["Create using the Editor API",422],["Load using WWW API: WWW.LoadFromCacheOrDownload or as a resource: AssetBundle.CreateFromMemory or AssetBundle.CreateFromFile",422],["Unload using AssetBundle.Unload. There is an option to unload the bundle, but keep the loaded asset from it. Also can kill all the loaded assets even if they're referenced in the scene",422],["Resources.UnloadUnusedAssets unloads all assets no longer referenced in the scene. So remember to kill references to the assets you don't need. Public and static variables are never garbage collected.",422],["Resources.UnloadAsset unloads a specific asset from memory. It can be reloaded from disk if needed.",422],["Is there any limitation for download numbers of Assetbundle at the same time on iOS? (e.g Can we download over 10 assetbundles safely at the same time(or every frame)? )",422],["Downloads are implemented via async API provided by OS, so OS decides how many threads need to be created for downloads. When launching multiple concurrent downloads you should keep in mind total device bandwidth it can support and amount of free memory. Each concurrent download allocates its own temporal buffer, so you should be careful there to not run out of memory.",422],["Resources",422],["Assets need to be recognized by Unity to be placed in a build.",422],["Add .bytes file extension to any raw bytes you want Unity to recognize as a binary data.",422],["Add .txt file extension to any text files you want Unity to recognize as a text asset",422],["Resources are converted to a platform format at a build time.",422],["Resources.Load()",422],["Silly issues checklist",422],["Textures without proper compression",422],["Different solutions for different cases, but be sure to compress textures unless you're sure you should not.",422],["ETC/RGBA16 - default for android but can tweak depending on the GPU vendor. Best approach is to use ETC where possible. Alpha textures can use two ETC files with one channel being for alpha",422],["PVRTC - default for iOS, good for most cases",422],["Textures having Get/Set pixels enabled - doubles the footprint, uncheck unless Get/Set is needed",422],["Textures loaded from JPEG/PNGs on the runtime will be uncompressed",422],["Big mp3 files marked as decompress on load",422],["Additive scene loading",422],["Unused Assets that remain uncleaned in memory.",422],["If it randomly crashes, try on a devkit or a device with 2 GB memory (like Ipad 3).",422],["Sometimes there's nothing in the console, just a random crash",422],["Fast script call and stripping may lead to random crashes on iOS. Try without them.",422],["Future &amp; High End Devices",423],["The graphical power of next-generation mobile devices is approaching that of the current generation of consoles (Wii, Xbox 360, and PS3). What will the consumer smartphone market look like in two years? It's hard to say for sure, but considering how things have been going, the average smartphone on the market will have a chipset about as fast as NVIDIA's Tegra 3 (Asus Transformer Prime, Google Nexus 7\"), or Apple's A5X (iPad 3), and high-end tablets will pack graphical performance to rival today's consoles and consumer laptops.",423],["What can these new devices do?",423],["Bumpmaps everywhere",423],["Reflective water and simple image effects",423],["Realtime shadows",423],["HD video playback",423],["Faster script execution",423],["To get a sense of what is already being done for this coming generation of phones and tablets, watch NVIDIA's promotional video for Tegra 3. Bladeslinger and Shadowgun are Unity titles.",423],["Graphics Methods",424],["What are mobile devices capable of? How should you plan your game accordingly? If your game runs slow, and the profiler indicates that it's a rendering bottleneck, how do you know what to change, and how to make your game look good but still run fast? This page is dedicated to a general and non-technical exposition of the methods. If you are looking for the specifics, see the Rendering Optimizations page.",424],["What you can reasonably expect to run on current consumer mobiles:",424],["Lightmapped static geometry. But beware of:",424],["Using a lot of alpha-test shaders",424],["Bumpmapping, especially using built-in shaders.",424],["High polygon count",424],["Animated characters, even with fancy shaders! But beware of:",424],["Massive crowds or high-poly characters",424],["2D games with sprites. But beware of:",424],["Overdraw, or, lots of layers drawn on top of each other.",424],["Particle effects. But beware of:",424],["High density on large particles. (Lots of particles drawn on top of each other. This is another overdraw situation)",424],["Ridiculous numbers of particles, or particle colliders.",424],["Physics. But beware of:",424],["Mesh colliders.",424],["Lots of active bodies.",424],["What you CANNOT reasonably expect to run on current consumer mobiles:",424],["Fullscreen screen image effects like glow and depth of field.",424],["Dynamic per-pixel lighting (multiple lights marked Important and not baked into the lightmap)",424],["Every affected object is drawn an additional time for every dynamic light you use, and this gets slow quickly.",424],["Real time shadows on everything",424],["Unity has support for real time shadows on mobile platforms, but their use must be very judicious, and likely limited to higher-end devices.",424],["Examples - How top-notch mobile games are made",424],["Shadowgun is an impressive example of what can be done on current mobile hardware. But more specifically, it's a good example of what cannot be done, and how to get around the limitations. Especially because a small part of the game has been made publicly available in this blog post.",424],["Here's a basic rundown of things that Shadowgun does in order to keep performance up:",424],["Dynamic lighting - barely used.",424],["Blob shadows and Lightmaps are used instead of any real shadows.",424],["Lightprobes, instead of real lights, are used on their characters.",424],["Muzzle flashes added into the lightprobe data via script.",424],["The only dynamic per-pixel lighting is an arbitrary light direction used to calculate a BRDF on the characters.",424],["Bumpmapping - barely used.",424],["Real bumpmapping only used on characters.",424],["As much contrast and detail as possible is baked into the diffuse texture maps. Lighting information from bumpmaps is baked in.",424],["A good example is their statue texture, or their shiny wall, as seen on the right. No bumpmaps are used to render these, the specularity is faked by baking it into the texture. Lightmapping is combined with a vertex-lighting-based specular highlight to give these models a shiny look.",424],["If you want to learn how to create textures like this one, check out the Rendering Optimizations page.",424],["Dense particles - avoided.",424],["UV-scrolling textures used instead of dense particle effects.",424],["Fog effects - avoided.",424],["Their god rays are hand-modeled.",424],["Single planes that fade in and out are used to achieve cinematic fog effects without actually rendering any fog.",424],["This is faster because the planes are few and far between, and it means that fog doesn't have to be calculated on every pixel and in every shader.",424],["Glow - avoided.",424],["Blended sprite planes are used to give the appearance of a glow on certain objects.",424],["This demo was designed to show what Unity is capable of on high-end Android devices.",424],["Dynamic lighting - not used.",424],["Lightmaps only.",424],["Bumpmapping - used",424],["The bricks are all bumpmapped, lit by directional lightmaps. This is where the \"high-end devices\" part comes into play.",424],["Real time reflections - limited.",424],["They carefully placed their real-time reflecting surfaces separately and in isolated areas, so that only one runs at a time, and the environment that needs to be rendered twice can be easily culled.",424],["Bottom line - What this means for your game",424],["The more you respect and understand the limitations of the mobile devices, the better your game will look, and the smoother it will perform. If you want to make a high-class game for mobile, you will benefit from understanding Unity's graphics pipeline and being able to write your own shaders. But if you want something to grab to use right away, ShadowGun's shaders, available here, are a good place to start.",424],["Don't Simulate It, Bake It!",424],["There is no question that games attempt to follow the laws of nature. The movement of every parabolic projectile and the color of every pixel of shiny chrome is derived by formulas first written to mimic observations of the real world. But a game is one part scientific simulation and one part painting. You can't compete in the mobile market with physically accurate rendering; the hardware simply isn't there yet, if you try to imitate the real world all the way, your game will end up limited, drab, and laggy.",424],["You have to pick up your polygons and your blend modes like they're paintbrushes.",424],["The baked bumpmaps shown in Shadowgun are great examples of this. There are specular highlights already in the texture - the human eye doesn't notice that they don't actually line up with the reflected light and view directions - they are simply high-contrast details on the texture, completely faked, yet they end up looking great. This is a common cheating technique which has been used in many successful games. Compare the visor in the first Halo screenshot ever released with the visor from this release screenshot. It appears that the armor protrusions from the top of the helmet are reflected in the visor, but the reflection is actually baked into the visor texture. In League of Legends, a spell effect appears to have a pixel-light attached to it, but it actually is a blended plane with a texture that was probably generated by taking a screenshot of a pixel light shining on the ground.",424],["What works well:",424],["Lightmapped static geometry",424],["Dramatic lighting and largely dynamic environments don't mix. Pick one or the other.",424],["Lightprobes for moving objects",424],["Current mobile hardware is not really cut out for lots of dynamic lights, and it can't do shadows. Lightprobes are a really neat solution for complex game worlds with static lighting.",424],["Specialized shaders and detailed, high-contrast textures",424],["The shaders in ShadowGun minimize per-pixel calculations and exploit complex and high-quality textures. See the Rendering Optimizations page for information on how to make textures that look great even when the shader is simple.",424],["Cartoon Graphics",424],["Who says your game has to look like a photo? If you make lighting and atmosphere the responsibility of the texture artist, not the engine, you hardly even have to worry about optimizing rendering.",424],["What does not work:",424],["Glow and other Post processing effects",424],["Approximate such effects when possible by using blended quads, check out the Shadowgun project for an example of this.",424],["Bumpmapping, especially with the built-in shaders",424],["Use it sparingly, only on the most important characters or objects. Anything that can take up the whole screen probably shouldn't be bumpmapped.",424],["Instead of using bump maps, bake more detail and contrast into the diffuse texture. The effect from League of Legends is an interesting example of this being used successfully in the industry.",424],["But how do I actually do it?",424],["See the Rendering Optimizations page.",424],["Practical Guide to Optimization for Mobiles",425],["This guide is for developers new to mobile game development, who are probably feeling overwhelmed, and are either planning and prototyping a new mobile game or porting an existing project to run smoothly on a mobile device. It should also be useful as a reference for anyone making mobile games or browser games which target old PCs and netbooks.",425],["Optimization is a broad topic, and how you do it depends a lot on your game, so this guide is best read as an introduction or reference rather than a step-by-step guide that guarantees a smooth product.",425],["All mobile devices are not created equal",425],["The information here assumes hardware around the level of the Apple A4 chipset, which is used on the original iPad, the iPhone 3GS, and the 3rd generation iPod Touch. On the Android side, that would mean an Android phone such as the Nexus One, or most phones that run Android 2.3 Gingerbread. On average, these devices were released in early 2010. Out of the app-hungry market, these devices are the older, slower portion. But they should be supported, because they represent a large portion of the market.",425],["There are much slower, and much faster phones out there as well. The computational capability of mobile devices is increasing at an alarming rate. It's not unheard of for a new generation of a mobile GPU to be five times faster than its predecessor. That's fast, when compared to the PC industry.",425],["For an overview of Apple mobile device tech specs, see the Hardware page.",425],["If you want to develop for mobile devices which will be popular in the future, or exclusively for high end devices right now, you will be able to get away with doing more. See Future Mobile Devices.",425],["The very low end, such as the iPhone 3G and the first and second generation iPod touches, are extremely limited and even more care must be taken to optimize for them. However, there is some question to whether consumers who have not upgraded their device will be buying apps. So unless you are making a free app, it might not be worthwhile to support the old hardware.",425],["Make optimization a design consideration, not a final step",425],["British computer scientist Michael A. Jackson is often quoted for his Rules of Program Optimization:",425],["The First Rule of Program Optimization: Don't do it. The Second Rule of Program Optimization (for experts only!): Don't do it yet.",425],["His rationale was that, considering how fast computers are, and how quickly their speed is increasing, there is a good chance that if you program something it will run fast enough. Besides that, if you try to optimize too heavily, you might over-complicate things, limit yourself, or create tons of bugs.",425],["However, if you are developing mobile games, there is another consideration: The hardware that is on the market right now is very limited compared to the computers we are used to working with, so the risk of creating something that simply won't run on the device balances out the risk of over-complication that comes with optimizing from the start.",425],["Throughout this guide we will try to point out situations where an optimization would help a lot, versus situations where it would be frivolous.",425],["Optimization: Not just for programmers",425],["Artists also need to know the limitations of the platform and the methods that are used to get around them, so they can make creative choices that will pay off, and don't have to redo work.",425],["More responsibility can fall on the artist if the game design calls for atmosphere and lighting to be drawn into textures instead of being baked.",425],["Whenever anything can be baked, artists can produce content for baking, instead of real-time rendering. This allows them to ignore technical limitations and work freely.",425],["Design your game to make a smooth runtime fall into your lap",425],["These two pages detail general trends in game performance, and will explain how you can best design your game to be optimized, or how you can intuitively figure out which things need to be optimized if you've already gone into production.",425],["Profile early and often",425],["Profiling is important because it helps you discern which optimizations will pay off with big performance increases and which ones are a waste of your time. Because of the way that rendering is handled on a separate chip (GPU), the time it takes to render a frame is not the time that the CPU takes plus the time that the time that the GPU takes, instead it is the longer of the two. That means that if the CPU is slowing things down, optimizing your shaders won't increase the frame rate at all, and if the GPU is slowing things down, optimizing physics and scripts won't help at all.",425],["Often different parts of the game and different situations perform differently as well, so one part of the game might cause 100 millisecond frames entirely due to a script, and another part of the game might cause the same slowdown, but because of something that is being rendered. So, at very least, you need to know where all the bottlenecks are if you are going to optimize your game.",425],["Unity Profiler",425],["The main Profiler in Unity can be used when targeting iOS or Android. See the Profiler guide for basic instructions on how to use it.",425],["Internal Profiler",425],["The internal profiler spews out text every 30 frames. It can help you figure out which aspects of your game are slowing things down, be it physics, scripts, or rendering, but it doesn't go into much detail, for example, which script or which renderer is the culprit.",425],["See the Internal Profiler page for more details on how it works and how to turn it on.",425],["Profiler indicates most of time spent rendering",425],["Profiler indicates most of time spent outside of rendering",425],["Table of Contents",425],["Rendering Optimizations",426],["This section introduces the technicalities of rendering optimization. It shows how to bake lighting results for better performance, and how the developers of Shadowgun levered high-contrast textures, with lighting baked-in, to make their game look great. If you are looking for general information on what a mobile-optimized game looks like, check out the Graphics Methods page.",426],["Get Artsy!",426],["Sometimes optimizing the rendering in your game requires some dirty work. All of the structure that Unity provides makes it easy to get something working fast, but if you require top notch fidelity on limited hardware, doing things yourself and sidestepping that structure is the way to go, provided that you can introduce a key structural change that makes things a lot faster. Your tools of choice are editor scripts, simple shaders, and good old-fashioned art production.",426],["How to Dive Under the Hood",426],["First of all, check out this introduction to how shaders are written.",426],["Examine the source code of the built in shaders. Often, if you want to make a new shader that does something different, you can achieve it by taking parts of two already-existing shaders and putting them together.",426],["Surface Shader Debugging (#pragma debug)",426],["A CG Shader is generated from every surface shader, and then fully compiled from there. If you add #pragma debug to the top of your surface shader, when you open the compiled shader via the inspector, you can see the intermediate CG code. This is useful for inspecting how a specific part of a shader is actually calculated, and it can also be useful for grabbing certain aspects you want from a surface shader and applying them to a CG shader.",426],["Shader Include Files",426],["A lot of shader helper code is included in every shader, and usually it isn't used, but this is why you will sometimes see shaders calling functions like WorldReflectionVector which don't seem to be defined anywhere. Unity has several built-in shader include files that contain these helper definitions. To find a specific function, you will need to search through all of the different includes.",426],["These files are a major part of internal structure that Unity uses to make it easy to write shaders; the files provide things like real time shadows, different light types, lightmaps, and multiple platform support.",426],["Hardware documentation",426],["Take your time to study Apple documentations on",426],["hardware and best practices for writing shaders. Note that we would suggest to be more aggressive with floating point precision hints however.",426],["Shadowgun in-depth",426],["Shadowgun is a great graphical achievement considering the hardware it runs on. While the art quality seems to be the key to the puzzle, there are a couple tricks to achieving such quality that programmers can pull off to maximize their artists' potential.",426],["In the Graphics Methods page we used the golden statue in Shadowgun as an example of a great optimization; instead of using a normal map to give their statue some solid definition, they just baked lighting detail into the texture. Here, we will show you how and why you should use a similar technique in your own game.",426],["Shader code for Real-Time vs Baked Golden Statue",426],["// This is the pixel shader code for drawing normal-mapped",426],["// specular highlights on static lightmapped geometry",426],["// 5 texture reads, lots of instructions",426],["SurfaceOutput o;",426],["fixed4 tex = tex2D(MainTex, IN.uvMainTex);",426],["fixed4 c = tex * _Color;",426],["o.Albedo = c.rgb;",426],["o.Gloss = tex.a;",426],["o.Specular = _Shininess;",426],["o.Normal = UnpackNormal(tex2D(BumpMap, IN.uvBumpMap));",426],["float3 worldRefl = WorldReflectionVector (IN, o.Normal);",426],["fixed4 reflcol = texCUBE (_Cube, worldRefl);",426],["reflcol *= tex.a;",426],["o.Emission = reflcol.rgb * _ReflectColor.rgb;",426],["o.Alpha = reflcol.a * _ReflectColor.a;",426],["fixed atten = LIGHT_ATTENUATION(IN);",426],["fixed4 c = 0;",426],["half3 specColor;",426],["fixed4 lmtex = tex2D(unity_Lightmap, IN.lmap.xy);",426],["fixed4 lmIndTex = tex2D(unity_LightmapInd, IN.lmap.xy);",426],["const float3x3 unity_DirBasis = float3x3(",426],["float3( 0.81649658,  0.0, 0.57735028),",426],["float3(-0.40824830,  0.70710679, 0.57735027),",426],["float3(-0.40824829, -0.70710678, 0.57735026) );",426],["half3 lm = DecodeLightmap (lmtex);",426],["half3 scalePerBasisVector = DecodeLightmap (lmIndTex);",426],["half3 normalInRnmBasis = saturate (mul (unity_DirBasis, o.Normal));",426],["lm *= dot (normalInRnmBasis, scalePerBasisVector);",426],["return half4(lm, 1);",426],["// This is the pixel shader code for lighting which is",426],["// baked into the texture",426],["// 2 texture reads, very few instructions",426],["fixed4 c = tex2D (_MainTex, i.uv.xy);",426],["c.xyz += texCUBE(_EnvTex,i.refl) * _ReflectionColor * c.a;",426],["return c;",426],["Render to Texel",426],["The real-time light is definitely higher quality, but the performance gain from the baked version is massive. So how was this done? An editor tool called Render to Texel was created for this purpose. It bakes the light into the texture through the following process:",426],["Transform the tangent space normal map to world space via script.",426],["Create a world space position map via script.",426],["Render to Texture a fullscreen pass of a the entire texture using the two previous maps, with one additional pass per light.",426],["Average results from several different vantage points to yield something which looks plausible all around, or at least from common viewing angles in your game.",426],["This is how the best graphics optimizations work. They sidestep tons of calculations by preforming them in the editor or before the game runs. In general, this is what you want to do:",426],["Create something that looks great, don't worry about performance.",426],["Use tools like Unity's lightmapper and editor extensions like Render to Texel and Sprite Packer to bake it down to something which is very simple to render.",426],["Making your own tools is the best way to do this, you can create the perfect tool suited for whatever problem your game presents.",426],["Create shaders and scripts which modulate your baked output to give it some sort of \"shine\"; an eye-catching effect to create an illusion of dynamic light.",426],["Concept of Light Frequency",426],["Just like the Bass and Treble of an audio track, images also have high-frequency and low-frequency components, and when you're rendering, it's best to handle them in different ways, similar to how stereos use subwoofers and tweeters to produce a full body of sound. One way to visualize the different frequencies of an image is to use the \"High Pass\" filter in Photoshop. Filters-&gt;Other-&gt;High Pass. If you have done audio work before, you will recognize the name High Pass. Essentially what it does is cut off all frequencies lower than X, the parameter you pass to the filter. For images, Gaussian Blur is the equivalent of a Low Pass.",426],["This applies to realtime graphics because frequency is a good way to separate things out and determine how to handle what. For example, in a basic lightmapped environment, the final image is obtained by composite of the lightmap, which is low frequency, and the textures, which are high-frequency. In Shadowgun, low frequency light is applied to characters quickly with light probes, high frequency light is faked through the use of a simple bumpmapped shader with an arbitrary light direction.",426],["In general, by using different methods to render different frequencies of light, for example, baked vs dynamic, per-object vs per-level, per pixel vs per-vertex, etc, you can create full bodied images on limited hardware. Stylistic choices aside, it's generally a good idea to try to have strong variation colors or values at both high and low frequencies.",426],["Frequency in Practice: Shadowgun Decomposition",426],["Top Row",426],["Ultra-Low-Frequency Specular Vertex Light (Dynamic)   High Frequency Alpha Channel   Low Frequency Lightmap   High Frequency Albedo",426],["Mid Row",426],["Specular Vertex Light * Alpha   High Frequency Additive Details   Lightmap * Color Channel",426],["Bottom",426],["Final Sum",426],["Note: Usually these decompositions refer to steps in a deferred renderer, but that's not the case here. All of this is done in just one pass. These are the two relevant shaders which this composition was based on:",426],["Lightmapped with Virtual Gloss Per-Vertex Additive",426],["Shader \"MADFINGER/Environment/Virtual Gloss Per-Vertex Additive (Supports Lightmap)\" {",426],["Properties {",426],["_MainTex (\"Base (RGB) Gloss (A)\", 2D) = \"white\" {}",426],["//_MainTexMipBias (\"Base Sharpness\", Range (-10, 10)) = 0.0",426],["_SpecOffset (\"Specular Offset from Camera\", Vector) = (1, 10, 2, 0)",426],["_SpecRange (\"Specular Range\", Float) = 20",426],["_SpecColor (\"Specular Color\", Color) = (0.5, 0.5, 0.5, 1)",426],["_Shininess (\"Shininess\", Range (0.01, 1)) = 0.078125",426],["_ScrollingSpeed(\"Scrolling speed\", Vector) = (0,0,0,0)",426],["SubShader {",426],["Tags { \"RenderType\"=\"Opaque\" \"LightMode\"=\"ForwardBase\"}",426],["LOD 100",426],["CGINCLUDE",426],["include \"UnityCG.cginc\"",426],["sampler2D _MainTex;",426],["float4 MainTexST;",426],["samplerCUBE _ReflTex;",426],["ifndef LIGHTMAP_OFF",426],["float4 unity_LightmapST;",426],["sampler2D unity_Lightmap;",426],["endif",426],["//float _MainTexMipBias;",426],["float3 _SpecOffset;",426],["float _SpecRange;",426],["float3 _SpecColor;",426],["float _Shininess;",426],["float4 _ScrollingSpeed;",426],["struct v2f {",426],["float4 pos : SV_POSITION;",426],["float2 uv : TEXCOORD0;",426],["ifndef LIGHTMAP_OFF",426],["float2 lmap : TEXCOORD1;",426],["endif",426],["fixed3 spec : TEXCOORD2;",426],["};",426],["v2f vert (appdata_full v)",426],["v2f o;",426],["o.pos = mul(UNITY_MATRIX_MVP, v.vertex);",426],["o.uv = v.texcoord + frac(_ScrollingSpeed * _Time.y);",426],["float3 viewNormal = mul((float3x3)UNITY_MATRIX_MV, v.normal);",426],["float4 viewPos = mul(UNITY_MATRIX_MV, v.vertex);",426],["float3 viewDir = float3(0,0,1);",426],["float3 viewLightPos = _SpecOffset * float3(1,1,-1);",426],["float3 dirToLight = viewPos.xyz - viewLightPos;",426],["float3 h = (viewDir + normalize(-dirToLight)) * 0.5;",426],["float atten = 1.0 - saturate(length(dirToLight) / _SpecRange);",426],["o.spec = _SpecColor * pow(saturate(dot(viewNormal, normalize(h))), _Shininess * 128) * 2 * atten;",426],["ifndef LIGHTMAP_OFF",426],["o.lmap = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;",426],["endif",426],["return o;",426],["ENDCG",426],["Pass {",426],["CGPROGRAM",426],["pragma vertex vert",426],["pragma fragment frag",426],["fixed4 frag (v2f i) : SV_Target",426],["fixed4 c = tex2D (_MainTex, i.uv);",426],["fixed3 spec = i.spec.rgb * c.a;",426],["if 1",426],["c.rgb += spec;",426],["else",426],["c.rgb = c.rgb + spec - c.rgb * spec;",426],["endif",426],["ifndef LIGHTMAP_OFF",426],["fixed3 lm = DecodeLightmap (tex2D(unity_Lightmap, i.lmap));",426],["c.rgb *= lm;",426],["endif",426],["return c;",426],["ENDCG",426],["Lightprobes with Virtual Gloss Per-Vertex Additive",426],["Shader \"MADFINGER/Environment/Lightprobes with VirtualGloss Per-Vertex Additive\" {",426],["Properties {",426],["_MainTex (\"Base (RGB) Gloss (A)\", 2D) = \"white\" {}",426],["_SpecOffset (\"Specular Offset from Camera\", Vector) = (1, 10, 2, 0)",426],["_SpecRange (\"Specular Range\", Float) = 20",426],["_SpecColor (\"Specular Color\", Color) = (1, 1, 1, 1)",426],["_Shininess (\"Shininess\", Range (0.01, 1)) = 0.078125",426],["_SHLightingScale(\"LightProbe influence scale\",float) = 1",426],["SubShader {",426],["Tags { \"RenderType\"=\"Opaque\" \"LightMode\"=\"ForwardBase\"}",426],["LOD 100",426],["CGINCLUDE",426],["pragma multi_compile LIGHTMAP_OFF LIGHTMAP_ON",426],["include \"UnityCG.cginc\"",426],["sampler2D _MainTex;",426],["float4 MainTexST;",426],["float3 _SpecOffset;",426],["float _SpecRange;",426],["float3 _SpecColor;",426],["float _Shininess;",426],["float _SHLightingScale;",426],["struct v2f {",426],["float4 pos : SV_POSITION;",426],["float2 uv : TEXCOORD0;",426],["float3 refl : TEXCOORD1;",426],["fixed3 spec : TEXCOORD3;",426],["fixed3 SHLighting: TEXCOORD4;",426],["};",426],["v2f vert (appdata_full v)",426],["v2f o;",426],["o.pos = mul(UNITY_MATRIX_MVP, v.vertex);",426],["o.uv = v.texcoord;",426],["float3 worldNormal = mul((float3x3)_Object2World, v.normal);",426],["float3 viewNormal = mul((float3x3)UNITY_MATRIX_MV, v.normal);",426],["float4 viewPos = mul(UNITY_MATRIX_MV, v.vertex);",426],["float3 viewDir = float3(0,0,1);",426],["float3 viewLightPos = _SpecOffset * float3(1,1,-1);",426],["float3 dirToLight = viewPos.xyz - viewLightPos;",426],["float3 h = (viewDir + normalize(-dirToLight)) * 0.5;",426],["float atten = 1.0 - saturate(length(dirToLight) / _SpecRange);",426],["o.spec = _SpecColor * pow(saturate(dot(viewNormal, normalize(h))), _Shininess * 128) * 2 * atten;",426],["o.SHLighting    = ShadeSH9(float4(worldNormal,1)) * _SHLightingScale;",426],["return o;",426],["ENDCG",426],["Pass {",426],["CGPROGRAM",426],["pragma vertex vert",426],["pragma fragment frag",426],["fixed4 frag (v2f i) : SV_Target",426],["fixed4 c    = tex2D (_MainTex, i.uv);",426],["c.rgb *= i.SHLighting;",426],["c.rgb += i.spec.rgb * c.a;",426],["return c;",426],["ENDCG",426],["Best Practices",426],["GPU optimization: Alpha-Testing",426],["Some GPUs, particularly ones found in mobile devices, incur a high performance overhead for alpha-testing (or use of the discard and clip operations in pixel shaders). You should replace alpha-test shaders with alpha-blended ones if possible. Where alpha-testing cannot be avoided, you should keep the overall number of visible alpha-tested pixels to a minimum.",426],["iOS Texture Compression",426],["Some images, especially if using iOS/Android PVR texture compression, are prone to visual artifacts in the alpha channel. In such cases, you might need to tweak the PVRT compression parameters directly in your imaging software. You can do that by installing the PVR export plugin or using PVRTexTool from Imagination Tech, the creators of the PVRTC format. The resulting compressed image file with a .pvr extension will be imported by the Unity editor directly and the specified compression parameters will be preserved. If PVRT-compressed textures do not give good enough visual quality or you need especially crisp imaging (as you might for GUI textures) then you should consider using 16-bit textures instead of 32-bit. By doing so, you will reduce the memory bandwidth and storage requirements by half.",426],["Android Texture Compression",426],["All Android devices with support for OpenGL ES 2.0 also support the ETC1 compression format; it's therefore encouraged to whenever possible use ETC1 as the prefered texture format.",426],["If targeting a specific graphics architecture, such as the Nvidia Tegra or Qualcomm Snapdragon, it may be worth considering using the proprietary compression formats available on those architectures. The Android Market also allows filtering based on supported texture compression format, meaning a distribution archive (.apk) with for example DXT compressed textures can be prevented for download on a device which doesn't support it.",426],["An Exercise",426],["Download Render to Texel.",426],["Bake lighting on your model.",426],["Run the High Pass filter on the result in Photoshop.",426],["Edit the \"Mobile/Cubemapped\" shader, included in the Render to Texel package, so that the missing low-frequency light details are replaced by vertex light.",426],["Optimizing Scripts",427],["This section demonstrates how you would go about optimizing the actual scripts and methods your game uses, and it also goes into detail about the reasons why the optimizations work, and why applying them will benefit you in certain situations.",427],["Profiler is King",427],["There is no such thing as a list of boxes to check that will ensure your project runs smoothly. To optimize a slow project, you have to profile to find specific offenders that take up a disproportionate amount of time. Trying to optimize without profiling or without thoroughly understanding the results that the profiler gives is like trying to optimize with a blindfold on.",427],["Internal mobile profiler",427],["You can use the internal profiler to figure out what kind of process is slowing your game down, be it physics, scripts, or rendering, but you can't drill down into specific scripts and methods to find the actual offenders. However, by building switches into your game which enable and disable certain functionality, you can narrow down the worst offenders significantly. For example, if you remove the enemy characters' AI script and the framerate doubles, you know that the script, or something that it brings into the game, has to be optimized. The only problem is that you may have to try a lot of different things before you find the problem.",427],["For more about profiling on mobile devices, see the profiling section.",427],["Optimized by Design",427],["Attempting to develop something which is fast from the beginning is risky, because there is a trade-off between wasting time making things that would be just as fast if they weren't optimized and making things which will have to be cut or replaced later because they are too slow. It takes intuition and knowledge of the hardware to make good decisions in this regard, especially because every game is different and what might be a crucial optimization for one game may be a flop in another.",427],["Object Pooling",427],["We gave object pooling as an example of the intersection between good gameplay and good code design in the introduction to optimized scripting methods. Using object pooling for ephemeral objects is faster than creating and destroying them, because it makes memory allocation simpler and removes dynamic memory allocation overhead and Garbage Collection, or GC.",427],["Memory Allocation",427],["Simple Explanation of what Automatic Memory Management is",427],["Scripts you write in Unity use automatic memory management. Just about all scripting languages do this. In contrast, lower level languages such as C and C++ use manual memory allocation, where the programmer is allowed to read and write from memory addresses directly, and as a consequence he is responsible for removing every object he creates. For example, if you create objects in your C++, you have to manually de-allocate the memory that they take up when you are done with them. In a scripting language, it is enough to say objectReference = null;",427],["Note: If I have a game object variable like GameObject myGameObject; or var myGameObject : GameObject;, why isn't it destroyed when I say myGameObject = null;?",427],["The game object is still referenced by Unity, because Unity has to maintain a reference to it in order for it to be drawn, updated, etc. Calling Destroy(myGameObject); removes that reference and deletes the object.",427],["But if you create an object that Unity has no idea about, for example, an instance of a class that does not inherit from anything (in contrast, most classes or \"script components\" inherit from MonoBehaviour) and then set your reference variable to it to null, what actually happens is that the object is lost as far as your script and Unity are concerned; they can't access it and will never see it again, but it stays in memory. Then, some time later, the Garbage Collector runs, and it removes anything in memory that is not referenced anywhere. It is able to do this because, behind the scenes, the number of references to each block of memory is kept track of. This is one reason why scripting languages are slower than C++.",427],["Read more about Automatic Memory Management and the Garbage Collector.",427],["How to Avoid Allocating Memory",427],["Every time an object is created, memory is allocated. Very often in code, you are creating objects without even knowing it.",427],["Debug.Log(\"boo\" + \"hoo\"); creates an object.",427],["Use System.String.Empty instead of \"\" when dealing with lots of strings.",427],["Immediate Mode GUI (UnityGUI) is slow and should not be used at any time when performance is an issue.",427],["Difference between class and struct:",427],["Classes are objects and behave as references. If Foo is a class and",427],["Foo foo = new Foo();",427],["MyFunction(foo);",427],["then MyFunction will receive a reference to the original Foo object that was allocated on the heap. Any changes to foo inside MyFunction will be visible anywhere foo is referenced.",427],["Classes are data and behave as such. If Foo is a struct and",427],["Foo foo = new Foo();",427],["MyFunction(foo);",427],["then MyFunction will receive a copy of foo. foo is never allocated on the heap and never garbage collected. If MyFunction modifies it's copy of foo, the other foo is unaffected.",427],["Objects which stick around for a long time should be classes, and objects which are ephemeral should be structs. Vector3 is probably the most famous struct. If it were a class, everything would be a lot slower.",427],["Why Object Pooling is Faster",427],["The upshot of this is that using Instantiate and Destroy a lot gives the Garbage Collector a lot to do, and this can cause a \"hitch\" in gameplay. As the Automatic Memory Management page explains, there are other ways to get around the common performance hitches that surround Instantiate and Destroy, such as triggering the Garbage Collector manually when nothing is going on, or triggering it very often so that a large backlog of unused memory never builds up.",427],["Another reason is that, when a specific prefab is instantiated for the first time, sometimes additional things have to be loaded into RAM, or textures and meshes need to be uploaded to the GPU. This can cause a hitch as well, and with object pooling, this happens when the level loads instead of during gameplay.",427],["Imagine a puppeteer who has an infinite box of puppets, where every time the script calls for a character to appear, he gets a new copy of its puppet out of the box, and every time the character exits the stage, he tosses the current copy. Object pooling is the equivalent of getting all the puppets out of the box before the show starts, and leaving them on the table behind the stage whenever they are not supposed to be visible.",427],["Why Object Pooling can be Slower",427],["One issue is that the creation of a pool reduces the amount of heap memory available for other purposes; so if you keep allocating memory on top of the pools you just created, you might trigger garbage collection even more often. Not only that, every collection will be slower, because the time taken for a collection increases with the number of live objects. With these issues in mind, it should be apparent that performance will suffer if you allocate pools that are too large or keep them active when the objects they contain will not be needed for some time. Furthermore, many types of objects don't lend themselves well to object pooling. For example, the game may include spell effects that persist for a considerable time or enemies that appear in large numbers but which are only killed gradually as the game progresses. In such cases, the performance overhead of an object pool greatly outweighs the benefits and so it should not be used.",427],["Implementation",427],["Here's a simple side by side comparison of a script for a simple projectile, one using Instantiation, and one using Object Pooling.",427],["// GunWithInstantiate.js                                                  // GunWithObjectPooling.js",427],["pragma strict                                                            #pragma strict",427],["var prefab : ProjectileWithInstantiate;                                   var prefab : ProjectileWithObjectPooling;",427],["var maximumInstanceCount = 10;",427],["var power = 10.0;                                                         var power = 10.0;",427],["private var instances : ProjectileWithObjectPooling[];",427],["static var stackPosition = Vector3(-9999, -9999, -9999);",427],["function Start () {",427],["instances = new ProjectileWithObjectPooling[maximumInstanceCount];",427],["for(var i = 0; i &lt; maximumInstanceCount; i++) {",427],["// place the pile of unused objects somewhere far off the map",427],["instances[i] = Instantiate(prefab, stackPosition, Quaternion.identity);",427],["// disable by default, these objects are not active yet.",427],["instances[i].enabled = false;",427],["function Update () {                                                      function Update () {",427],["if(Input.GetButtonDown(\"Fire1\")) {                                        if(Input.GetButtonDown(\"Fire1\")) {",427],["var instance : ProjectileWithInstantiate =                                var instance : ProjectileWithObjectPooling = GetNextAvailiableInstance();",427],["Instantiate(prefab, transform.position, transform.rotation);          if(instance != null) {",427],["instance.velocity = transform.forward * power;                                instance.Initialize(transform, power);",427],["}                                                                             }",427],["}                                                                             }",427],["function GetNextAvailiableInstance () : ProjectileWithObjectPooling {",427],["for(var i = 0; i &lt; maximumInstanceCount; i++) {",427],["if(!instances[i].enabled) return instances[i];",427],["return null;",427],["// ProjectileWithInstantiate.js                                           // ProjectileWithObjectPooling.js",427],["pragma strict                                                            #pragma strict",427],["var gravity = 10.0;                                                       var gravity = 10.0;",427],["var drag = 0.01;                                                          var drag = 0.01;",427],["var lifetime = 10.0;                                                      var lifetime = 10.0;",427],["var velocity : Vector3;                                                   var velocity : Vector3;",427],["private var timer = 0.0;                                                  private var timer = 0.0;",427],["function Initialize(parent : Transform, speed : float) {",427],["transform.position = parent.position;",427],["transform.rotation = parent.rotation;",427],["velocity = parent.forward * speed;",427],["timer = 0;",427],["enabled = true;",427],["function Update () {                                                      function Update () {",427],["velocity -= velocity * drag * Time.deltaTime;                             velocity -= velocity * drag * Time.deltaTime;",427],["velocity -= Vector3.up * gravity * Time.deltaTime;                        velocity -= Vector3.up * gravity * Time.deltaTime;",427],["transform.position += velocity * Time.deltaTime;                          transform.position += velocity * Time.deltaTime;",427],["timer += Time.deltaTime;                                                  timer += Time.deltaTime;",427],["if(timer > lifetime) {                                                    if(timer > lifetime) {",427],["transform.position = GunWithObjectPooling.stackPosition;",427],["Destroy(gameObject);                                                      enabled = false;",427],["}                                                                         }",427],["}                                                                         }",427],["Of course, for a large, complicated game, you will want to make a generic solution that works for all your prefabs.",427],["Another Example: Coin Party!",427],["The example of \"Hundreds of rotating, dynamically lit, collectable coins onscreen at once\" which was given in the Scripting Methods section will be used to demonstrate how script code, Unity components like the Particle System, and custom shaders can be used to create a stunning effect without taxing the weak mobile hardware.",427],["Imagine that this effect lives in the context of a 2D sidescrolling game with tons of coins that fall, bounce, and rotate. The coins are dynamically lit by point lights. We want to capture the light glinting off the coins to make our game more impressive.",427],["If we had powerful hardware, we could use a standard approach to this problem. Make every coin an object, shade the object with either vertex-lit, forward, or deferred lighting, and then add glow on top as an image effect to get the brightly reflecting coins to bleed light onto the surrounding area.",427],["But mobile hardware would choke on that many objects, and a glow effect is totally out of the question. So what do we do?",427],["Animated Sprite Particle System",427],["If you want to display a lot of objects which all move in a similar way and can never be carefully inspected by the player, you might be able to render large amounts of them in no time using a particle system. Here are a few stereotypical applications of this technique:",427],["Collectables or Coins",427],["Flying Debris",427],["Cheering Crowds",427],["Hundreds of Projectiles or Explosions",427],["There is a free editor extension called Sprite Packer that facilitates the creation of animated sprite particle systems. It renders frames of your object to a texture, which can then be used as an animated sprite sheet on a particle system. For our use case, we would use it on our rotating coin.",427],["Reference Implementation",427],["Included in the Sprite Packer project is an example that demonstrates a solution to this exact problem.",427],["It uses a family of assets of all different kinds to achieve a dazzling effect on a low computing budget:",427],["A control script",427],["Specialized textures created from the output of the SpritePacker",427],["A specialized shader which is intimately connected with both the control script and the texture.",427],["A readme file is included with the example which attempts to explain why and how the system works, outlining the process that was used to determine what features were needed and how they were implemented. This is that file:",427],["The problem was defined as \"Hundreds of rotating, dynamically lit, collectable coins onscreen at once.\"",427],["The naive approach is to Instantiate a bunch of copies of a coin prefab, but instead we are going to use particles to render our coins. However, this introduces a number of challenges that we have to overcome.",427],["Viewing angles are a problem because particles don't have them.",427],["We assume that the camera stays right-side up and the coins rotate around the Y-axis.",427],["We create the illusion of coin rotation with an animated texture that we packed using the SpritePacker.",427],["This introduces a new problem: Monotony of rotating coins all rotating at the same speed and in the same direction",427],["We keep track of rotation and lifetime ourselves and \"render\" rotation to the particle lifetimes in script to fix this.",427],["Normals are a problem because particles don't have them, and we need real time lighting.",427],["Generate a single normal vector for the face of the coin in each animation frame generated by the Sprite Packer.",427],["Do Blinn-Phong lighting for each particle in script, based on the normal vector grabbed from the above list.",427],["Apply the result to the particle as a color.",427],["Handle the face of the coin and the rim of the coin separately in the shader.",427],["Introduces a new problem: How does the shader know where the rim is, and what part of the rim it's on?",427],["Can't use UV's, they are already used for the animation.",427],["Use a texture map.",427],["Need Y-position relative to coin.",427],["Need binary \"on face\" vs \"on rim\".",427],["We don't want to introduce another texture, more texture reads, more texture memory.",427],["Combine needed information into one channel and replace one of the texture's color channels with it.",427],["Now our coin is the wrong color! What do we do?",427],["Use the shader to reconstruct missing channel as a combination of the two remaining channels.",427],["Say we want glow from light glinting off our coins. Post process is too expensive for mobile devices.",427],["Create another particle system and give it a softened, glowy version of the coin animation.",427],["Color a glow only when the corresponding coin's color is super bright.",427],["Can't have glow rendered on every coin every frame - fill rate killer.",427],["Reset glows every frame, only position ones with brightness > 0.",427],["Physics is a problem, collecting coins is a problem - particles don't collide very well.",427],["Could use built-in particle collision?",427],["Instead, just wrote collision into the script.",427],["Finally, we have one more problem - this script does a lot, and its getting slow!",427],["Performance scales linearly with number of active coins.",427],["Limit maximum coins. This works well enough to acheive our goal: 100 coins, 2 lights, runs really fast on mobile devices.",427],["Things to try to optimize further:",427],["Instead of calculating lighting for every coin individually, cut the world into chunks and calculate lighting conditions for every rotation frame in every chunk.",427],["Use as a lookup table with coin position and coin rotation as indices.",427],["Increase fidelity by using bilinear interpolation with position.",427],["Sparse updates on the lookup table, or, entirely static lookup table.",427],["Use Light Probes for this?",427],["Instead of calculating lighting in script, use normal-mapped particles?",427],["Use \"Display Normals\" shader to bake frame animation of normals.",427],["Limits number of lights.",427],["Fixes slow script problem.",427],["The end goal of this example or \"moral of the story\" is that if there is something which your game really needs, and it causes lag when you try to achieve it through conventional means, that doesn't mean that it is impossible, it just means that you have to put in some work on a system of your own that runs much faster.",427],["Techniques for Managing Thousands of Objects",427],["These are specific scripting optimizations which are applicable in situations where hundreds or thousands of dynamic objects are involved. Applying these techniques to every script in your game is a terrible idea; they should be reserved as tools and design guidelines for large scripts which handle tons of objects or data at run time.",427],["Avoid or minimize O(n2) operations on large data sets",427],["In computer science, the Order of an operation, denoted by O(n), refers to the way that the number of times that the operation has to be evaluated increases as the number of objects it is applied to (n) increases.",427],["For example, consider a basic sorting algorithm. I have n numbers and I want to sort them from smallest to largest.",427],["void sort(int[] arr) {",427],["int i, j, newValue;",427],["for (i = 1; i &lt; arr.Length; i++) {",427],["// record",427],["newValue = arr[i];",427],["//shift everything that is larger to the right",427],["j = i;",427],["while (j > 0 &amp;&amp; arr[j - 1] > newValue) {",427],["arr[j] = arr[j - 1];",427],["j--;",427],["// place recorded value to the left of large values",427],["arr[j] = newValue;",427],["The important part is that there are two loops here, one inside the other.",427],["for (i = 1; i &lt; arr.Length; i++) {",427],["...",427],["j = i;",427],["while (j > 0 &amp;&amp; arr[j - 1] > newValue) {",427],["...",427],["j--;",427],["Let's assume that we give the algorithm the worst possible case: the input numbers are sorted, but in reverse order. In that case, the innermost loop will run j times. On average, as i goes from 1 to arr.Length-1, j will be arr.Length/2. In terms of O(n), arr.Length is our n, so, in total, the innermost loop runs n*n/2 times, or n^2^/2 times. But in O(n) terms, we chuck all constants like 1/2, because we want to talk about the way that the number of operations increases, not the actual number of operations. So the algorithm is O(n^2^). The order of an operation matters a lot if the data set is large, because the number of operations can explode exponentially.",427],["An in-game example of an O(n^2^) operation is 100 enemies, where the AI of each enemy takes the movements of every other enemy into account. It might be faster to divide the map into cells, record the movement of each enemy into the nearest cell, and then have each enemy sample the nearest few cells. That would be an O(n) operation.",427],["Cache references instead of performing unnecessary searches",427],["Say you have 100 enemies in your game, and they all move towards the player.",427],["// EnemyAI.js",427],["var speed = 5.0;",427],["function Update () {",427],["transform.LookAt(GameObject.FindWithTag(\"Player\").transform);",427],["// this would be even worse:",427],["//transform.LookAt(FindObjectOfType(Player).transform);",427],["transform.position += transform.forward * speed * Time.deltaTime;",427],["That could be slow, if there are enough of them running at the same time. Little known fact: all of the component accessors in MonoBehaviour, things like transform, renderer, and audio, are equivalent to their GetComponent(Transform) counterparts, and they are actually a bit slow. GameObject.FindWithTag has been optimized, but in some cases, for example, in inner loops, or on scripts that run on a lot of instances, this script might be a bit slow.",427],["This is a better version of the script.",427],["// EnemyAI.js",427],["var speed = 5.0;",427],["private var myTransform : Transform;",427],["private var playerTransform : Transform;",427],["function Start () {",427],["myTransform = transform;",427],["playerTransform = GameObject.FindWithTag(\"Player\").transform;",427],["function Update () {",427],["myTransform.LookAt(playerTransform);",427],["myTransform.position += myTransform.forward * speed * Time.deltaTime;",427],["Minimize expensive math functions",427],["Transcendental functions (Mathf.Sin, Mathf.Pow, etc), Division, and Square Root all take about 100x the time of a multiplication. (In the grand scheme of things, no time at all, but if you are calling them thousands of times per frame it can add up).",427],["The most common case of this is vector normalization. If you are normalizing the same vector over and over, consider normalizing it once instead and caching the result for use later.",427],["If you are both using the length of a vector and normalizing it, it would be faster to obtain the normalized vector by multiplying the vector by the reciprocal of the length rather than by using the .normalized property.",427],["If you are comparing distances, you don't have to compare the actual distances. You can compare the squares of the distances instead by using the .sqrMagnitude property and save a square root or two.",427],["Another one, if you are dividing over and over by a constant c, you can multiply by the reciprocal instead. Calculate the reciprocal first by doing 1.0/c.",427],["Only execute expensive operations occasionally, e.g. Physics.Raycast()",427],["If you have to do something expensive, you might be able to optimize it by doing it less often and caching the result. For example, consider a projectile script that uses Raycast:",427],["// Bullet.js",427],["var speed = 5.0;",427],["function FixedUpdate () {",427],["var distanceThisFrame = speed * Time.fixedDeltaTime;",427],["var hit : RaycastHit;",427],["// every frame, we cast a ray forward from where we are to where we will be next frame",427],["if(Physics.Raycast(transform.position, transform.forward, hit, distanceThisFrame)) {",427],["// Do hit",427],["} else {",427],["transform.position += transform.forward * distanceThisFrame;",427],["Right away, we could improve the script by replacing FixedUpdate with Update and fixedDeltaTime with deltaTime. FixedUpdate refers to the Physics update, which happens more often than the frame update. But let's go even further by only raycasting every n seconds. A smaller n gives greater temporal resolution, and a bigger n gives better performance. The bigger and slower your targets are, the bigger n can be before temporal aliasing occurs. (Appearance of latency, where the player hit the target, but the explosion appears where the target used to be n seconds ago, or the player hit the target, but the projectile goes right through).",427],["// BulletOptimized.js",427],["var speed = 5.0;",427],["var interval = 0.4; // this is 'n', in seconds.",427],["private var begin : Vector3;",427],["private var timer = 0.0;",427],["private var hasHit = false;",427],["private var timeTillImpact = 0.0;",427],["private var hit : RaycastHit;",427],["// set up initial interval",427],["function Start () {",427],["begin = transform.position;",427],["timer = interval+1;",427],["function Update () {",427],["// don't allow an interval smaller than the frame.",427],["var usedInterval = interval;",427],["if(Time.deltaTime > usedInterval) usedInterval = Time.deltaTime;",427],["// every interval, we cast a ray forward from where we were at the start of this interval",427],["// to where we will be at the start of the next interval",427],["if(!hasHit &amp;&amp; timer >= usedInterval) {",427],["timer = 0;",427],["var distanceThisInterval = speed * usedInterval;",427],["if(Physics.Raycast(begin, transform.forward, hit, distanceThisInterval)) {",427],["hasHit = true;",427],["if(speed != 0) timeTillImpact = hit.distance / speed;",427],["begin += transform.forward * distanceThisInterval;",427],["timer += Time.deltaTime;",427],["// after the Raycast hit something, wait until the bullet has traveled",427],["// about as far as the ray traveled to do the actual hit",427],["if(hasHit &amp;&amp; timer > timeTillImpact) {",427],["// Do hit",427],["} else {",427],["transform.position += transform.forward * speed * Time.deltaTime;",427],["Minimize callstack overhead in inner loops",427],["Just calling a function has a little bit of overhead in itself. If you are calling things like x = Mathf.Abs(x) thousands of times per frame, it might be better to just do x = (x > 0 ? x : -x); instead.",427],["Optimizing Physics Performance",427],["The NVIDIA PhysX physics engine used by Unity is available on mobiles, but the performance limits of the hardware will be reached more easily on mobile platforms than desktops.",427],["Here are some tips for tuning physics to get better performance on mobiles:-",427],["You can adjust the Fixed Timestep setting (in the Time manager) to reduce the time spent on physics updates. Increasing the timestep will reduce the CPU overhead at the expense of the accuracy of the physics. Often, lower accuracy is an acceptable tradeoff for increased speed.",427],["Set the Maximum Allowed Timestep in the Time manager in the 8-10fps range to cap the time spent on physics in the worst case scenario.",427],["Mesh colliders have a much higher performance overhead than primitive colliders, so use them sparingly. It is often possible to approximate the shape of a mesh by using child objects with primitive colliders. The child colliders will be controlled collectively as a single compound collider by the rigidbody on the parent.",427],["While wheel colliders are not strictly colliders in the sense of solid objects, they nonetheless have a high CPU overhead.",427],["Scripting and Gameplay Methods",428],["This section demonstrates ways that mobile developers write code and structure their games so that they run fast. The core idea here is that game design and optimization aren't really separate processes; decisions you make when you are designing your game can make it both fun and fast.",428],["A historical example",428],["You may remember old games where the player was only allowed one shot on the screen at a time, and reload speed was controlled by whether the bullet missed or not, instead of a timer. This technique is called object pooling, and it simplifies memory management, making programs run smoother.",428],["The creators of space invaders only had a small amount of RAM, and they had to ensure that their program would never need to allocate more than was available. If they let the player fire once every second, and they offered a powerup that decreased the reload time to a half a second, they would have to ensure that there was enough memory space to allocate a lot of projectiles in the case where the player fires as fast as possible and all of the shots live for the longest possible time. That would probably pose a problem for them, so instead, they just allocated one projectile and left it at that. As soon as the projectile dies, it is simply deactivated, and repositioned and activated when it is fired again. But it always lives in the same space in memory and doesn't have to move around or be constantly deleted and recreated.",428],["An optimization, or a gameplay gem?",428],["This is hardly realistic, but it happens to be fun. Tension is released in a climactic moment when the alien invaders approach the ground, similar to a climax in film or literature. The invaders' close proximity gives the adept player near-instantaneous reload time, allowing them to miraculously defend earth by mashing the fire key in perfect time. Good game designs live in a bizarre space between the interactive narrative and the background technology that powers it all. It's hard to plan out awesome, fun, efficient stuff like this, because code logistics and user interaction are two wildly different and deeply finicky things, and using them together to synthesize something fresh and fun takes a lot of thought and experimentation.",428],["You probably can't plan out every aspect of your game in terms of interaction and playing nice with mobile hardware simultaneously. It's more likely that these \"gems\" where the two meet in harmony will pop up as accidents while you're experimenting. But having a solid understanding of the way your code runs on the hardware you intend to deploy on will help. If you want to see the detailed technical explanation of why object pooling is better, and learn about memory allocation, see our Scripting Optimizations page.",428],["Will X run fast on Mobiles?",428],["Say you are beginning to work on a game, and you want to impress your players with lots of action and flashy stuff happening at once. How do you plan those things out? How do you know where the limits are, in game terms like how many coins, how many zombies, how many opponent cars, etc? It all depends on how you code your game.",428],["Generally, if you write your game code the easy way, or the most general and versatile way, you will run into performance issues a lot sooner. The more you rely on specific structures and tricks to run your game, the more horizons will expand, and you will be able to cram more stuff on screen.",428],["Easy and versatile, but slow",428],["Rigidbodies limited to 2 dimensions in a 2D game.",428],["Rigidbodies on projectiles.",428],["Using Instantiate and Destroy a lot.",428],["Lots of individual 3D objects for collectables or characters.",428],["Performing calculations every frame.",428],["Using OnGUI for your GUI or HUD.",428],["Complicated and limited, but faster",428],["Writing your own physics code for a 2D game.",428],["Handling collision detection for projectiles yourself.",428],["Using Object Pooling instead of Instantiate and Destroy.",428],["Using animated sprites on particles to represent simple objects.",428],["Performing expensive calculations every few frames and caching the results.",428],["A custom GUI solution.",428],["Examples",428],["Hundreds of rotating, dynamically lit, collectable coins onscreen at once",428],["NO: Each coin is a separate object with a rigidbody and a script that rotates it and allows it to be picked up.",428],["YES: The coins are a particle system with an animated texture, one script does the collision testing for all the coins and sets their color according to distance from a light.",428],["This example is implemented in the Scripting Optimization page.",428],["Your custom-built soft-body simulation",428],["NO: The world has pillows lying around everywhere, which you can throw around and make piles of.",428],["YES: Your character is a pillow, there is only one of them, and the situations it will be in are somewhat predictable (It only collides with spheres and axis-aligned cubes). You can probably code something which isn't a full-featured softbody simulation, but looks really impressive and runs fast.",428],["30 enemy characters shooting at the player at once",428],["NO: Each enemy has his own skinned mesh, a separate object for his weapon, and instantiates a rigidbody-based projectile every time he fires. Each enemy takes the state of all of his compatriots into account in a complicated AI script that runs every frame.",428],["YES: Most of the enemies are far away, and are represented by single sprites, or, the enemies are 2D and are just a couple sprites anyway. Every enemy bullet is drawn by the same particle system and simulated by a script which does only rudimentary physics. Each enemy updates his AI state twice per second according to the state of the other enemies in his sector.",428],["The how and why of script optimization",428],["See the page on Optimizing Scripts.",428],["Profiling",429],["First steps",429],["Unity relies on the CPU (heavily optimized for the SIMD part of it, like SSE on x86 or NEON on ARM) for skinning, batching, physics, user scripts, particles, etc.",429],["The GPU is used for shaders, drawcalls, image effects.",429],["CPU or GPU bound",429],["Use the internal profiler to detect the CPU and GPU ms",429],["Pareto analysis",429],["A large majority of problems (80%) are produced by a few key causes (20%). You can use the Editor profiler to identify the most processor-intensive function calls and optimize them first. Often, optimizing a few key functions can give a significant increase in overall execution speed.",429],["You should make sure that functions are only executed when really necessary. For example, you can use events like OnBecameVisible and OnBecameInvisible to detect when an object can't be seen and avoid updating it. Coroutines can be a useful way to call code that needs regular updates but doesn't need to run every frame:-",429],["// Do some stuff every frame:",429],["void Update () {",429],["//Do some stuff every 0.2 seconds:",429],["IEnumerator SlowUpdate () {",429],["while (true) {",429],["//do something",429],["yield return new WaitForSeconds (0.2f);",429],["You can use the .NET System.Threading.Thread class to run heavy calculations on a separate thread. This allows you to run on multiple cores but note that the Unity API is not thread-safe - you need to buffer inputs and results and read and assign them on the main thread in order to use Unity API calls.",429],["CPU Profiling",429],["Profile user code",429],["Not all of the user code is shown in the Profiler. But you can use Profiler.BeginSample and Profiler.EndSample to make the required user code appear in the profiler.",429],["GPU Profiling",429],["The Unity Editor profiler cannot show GPU data as of now. We're working with hardware manufacturers to make it happen with the Tegra devices being the first to appear in the Editor profiler.",429],["Tools for iOS",429],["Unity internal profiler (not the Editor profiler). This shows the GPU time for the whole scene.",429],["PowerVR PVRUniSCo shader analyzer. See below.",429],["iOS: Xcode OpenGL ES Driver Instruments can show only high-level info:",429],["\"Device Utilization %\" - GPU time spent on rendering in total. &gt;95% means the app is GPU bound.",429],["\"Renderer Utilization %\" - GPU time spent drawing pixels.",429],["\"Tiler Utilization %\" - GPU time spent processing vertices.",429],["\"Split count\" - the number of frame splits, where the vertex data didn't fit into allocated buffers.",429],["PowerVR is tile based deferred renderer, so it's impossible to get GPU timings per draw call. However you can get GPU times for the whole scene using Unity's built-in profiler (the one that prints results to Xcode output). Apple's tools currently can only tell you how busy the GPU and its parts are, but do not give times in milliseconds.",429],["PVRUniSCo gives cycles for the whole shader, and approximate cycles for each line in the",429],["shader code. Windows &amp; Mac! But it won't match what Apple's drivers are doing exactly anyway. Still, a good ballpark measure.",429],["Tools for Android",429],["Adreno (Qualcomm)",429],["NVPerfHUD (NVIDIA)",429],["PVRTune, PVRUniSCo (PowerVR)",429],["On Tegra, NVIDIA provides excellent performance tools which does everything you want - GPU time per draw call, Cycles per shader, Force 2x2 texture, Null view rectangle, runs on Windows, OSX, Linux. PerfHUD ES does not easily work with consumer devices, you need the development board from NVIDIA.",429],["Qualcomm provides excellent Adreno Profiler (Windows only) which is Windows only, but works with consumer devices! It features Timeline graphs, frame capture, Frame debug, API calls, Shader analyzer, live editing.",429],["Graphics related CPU profiling",429],["The internal profiler gives a good overview per module:",429],["time spent in OpenGL ES API",429],["batching efficiency",429],["skinning, animations, particles",429],["Profiler Ports",429],["Ports that the Unity profiler uses:",429],["\nMulticastPort : 54998\n",429],["\nListenPorts : 55000 - 55511\n",429],["\nMulticast (unittests) : 55512 - 56023\n",429],["They should be accessible from within the network node. That is, the devices that you're trying to profile on should be able to see these ports on the machine with the Unity Editor with the Profiler on.",429],["Memory",429],["There are two types of memory,  Mono memory and Unity memory.",429],["Mono memory",429],["Mono memory handles script objects, wrappers for Unity objects (game objects, assets, components, etc). Garbage Collector cleans up when the allocation does not fit in the available memory or on a System.GC.Collect() call.",429],["Memory is allocated in heap blocks. More can allocated if it cannot fit the data into the allocated block. Heap blocks will be kept in Mono until the app is closed. In other words, Mono does not release any memory used to the OS (Unity 3.x). Once you allocate a certain amount of memory, it is reserved for mono and not available for the OS. Even when you release it, it will become available internally for Mono only and not for the OS. The heap memory value in the Profiler will only increase, never decrease.",429],["If the system cannot fit new data into the allocated heap block, the Mono calls a \"GC\" and can allocate a new heap block (for example, due to fragmentation).",429],["\"Too many heap sections\" means you've run out of Mono memory (because of fragmentation or heavy usage).",429],["Use System.GC.GetTotalMemory to get the total used Mono memory.",429],["The general advice is, use as small an allocation as possible.",429],["Unity memory",429],["Unity memory handles Asset data (Textures, Meshes, Audio, Animation, etc), Game objects, Engine internals (Rendering, Particles, Physics, etc).",429],["Use Profiler.usedHeapSize to get the total used Unity memory.",429],["Memory map",429],["No tools yet but you can use the following.",429],["Unity Profiler - not perfect, skips stuff, but you can get an overview. It works on the device!",429],["Internal profiler. Shows Used heap and allocated heap - see mono memory. Shows the number of mono allocations per frame.",429],["Xcode tools - iOS",429],["Xcode Instruments Activity Monitor - Real Memory column.",429],["Xcode Instruments Allocations - net allocations for created and living objects.",429],["VM Tracker (textures usually get allocated with IOKit label and meshes usually go into VM Allocate).",429],["You can also make your own tool using Unity API calls:-",429],["FindObjectsOfTypeAll (type : Type) : Object[]",429],["FindObjectsOfType (type : Type): Object[]",429],["GetRuntimeMemorySize (o : Object) : int",429],["GetMonoHeapSize",429],["GetMonoUsedSize",429],["Profiler.BeginSample/EndSample - profile your own code",429],["UnloadUnusedAssets () : AsyncOperation",429],["System.GC.GetTotalMemory/Profiler.usedHeapSize",429],["References to the loaded objects - There is no way to figure this out. A workaround is to \"Find references in scene\" for public variables.",429],["Garbage collector",429],["This fires when the system cannot fit new data into the allocated heap block.",429],["Don't use OnGUI() on mobiles: it shoots several times per frame, completely redraws the view and creates tons of memory allocation calls that require Garbage Collection to be invoked.",429],["Creating/removing too many objects too quickly?",429],["This may lead to fragmentation.",429],["Use the Editor profiler to track the memory activity.",429],["The internal profiler can be used to track the mono memory activity.",429],["System.GC.Collect() You can use this .Net function when it's ok to have a hiccup.",429],["Allocation hiccups",429],["Use lists of preallocated, reusable class instances to implement your own memory management scheme.",429],["Don't make huge allocations per frame, cache, preallocate instead",429],["Problems with fragmentation?",429],["Preallocating a memory pool.",429],["Keep a List of inactive GameObjects and reuse them instead of Instantiating and Destroying them.",429],["Out of mono memory",429],["Profile memory activity - when does the first memory page fill up?",429],["Do you really need so many gameobjects that a single memory page is not enough?",429],["Use structs instead of classes for local data. Classes are stored on the heap; structs on the stack.",429],["Read the Understanding Automatic Memory Management page.",429],["Out of memory crashes",429],["At some points a game may crash with \"out of memory\" though it in theory it should fit in fine. When this happens compare your normal game memory footprint and the allocated memory size when the crash happens. If the numbers are not similar, then there is a memory spike. This might be due to:",429],["Two big scenes being loaded at the same time - use an empty scene between two bigger ones to fix this.",429],["Additive scene loading - remove unused parts to maintain the memory size.",429],["Huge asset bundles loaded to the memory",429],["Textures without proper compression (a no go for mobiles).",429],["Textures having Get/Set pixels enabled. This requires an uncompressed copy of the texture in memory.",429],["Textures loaded from JPEG/PNGs at runtime are essentially uncompressed.",429],["Big mp3 files marked as decompress on loading.",429],["Keeping unused assets in weird caches like static monobehavior fields, which are not cleared when changing scenes.",429],["Modeling Characters for Optimal Performance",430],["Below are some tips for designing character models to give optimal rendering speed.",430],["Use a Single Skinned Mesh Renderer",430],["You should use only a single skinned mesh renderer for each character. Unity optimizes animation using visibility culling and bounding volume updates and these optimizations are only activated if you use one animation component and one skinned mesh renderer in conjunction. The rendering time for a model could roughly double as a result of using two skinned meshes in place of a single mesh and there is seldom any practical advantage in using multiple meshes.",430],["Use as Few Materials as Possible",430],["You should also keep the number of materials on each mesh as low as possible. The only reason why you might want to have more than one material on a character is that you need to use different shaders for different parts (eg, a special shader for the eyes). However, two or three materials per character should be sufficient in almost all cases.",430],["Use as Few Bones as Possible",430],["A bone hierarchy in a typical desktop game uses somewhere between fifteen and sixty bones. The fewer bones you use, the better the performance will be. You can achieve very good quality on desktop platforms and fairly good quality on mobile platforms with about thirty bones. Ideally, keep the number below thirty for mobile devices and don't go too far above thirty for desktop games.",430],["Polygon Count",430],["The number of polygons you should use depends on the quality you require and the platform you are targeting. For mobile devices, somewhere between 300 and 1500 polygons per mesh will give good results, whereas for desktop platforms the ideal range is about 1500 to 4000. You may need to reduce the polygon count per mesh if the game can have lots of characters onscreen at any given time. As an example, Half Life 2 used 2500-5000 triangles per character. Current AAA games running on the PS3 or Xbox 360 usually have characters with 5000-7000 triangles.",430],["Keep Forward and Inverse Kinematics Separate",430],["When animations are imported, a model's inverse kinematic (IK) nodes are baked into forward kinematics (FK) and as a result, Unity doesn't need the IK nodes at all. However, if they are left in the model then they will have a CPU overhead even though they don't affect the animation. You can delete the redundant IK nodes in Unity or in the modeling tool, according to your preference. Ideally, you should keep separate IK and FK hierarchies during modeling to make it easier to remove the IK nodes when necessary.",430],["Modifying Source Assets Through Scripting",431],["Automatic Instantiation",431],["Usually when you want to make a modification to any sort of game asset, you want it to happen at runtime and you want it to be temporary. For example, if your character picks up an invincibility power-up, you might want to change the shader of the material for the player character to visually demonstrate the invincible state. This action involves modifying the material that's being used. This modification is not permanent because we don't want the material to have a different shader when we exit Play Mode.",431],["However, it is possible in Unity to write scripts that will permanently modify a source asset. Let's use the above material example as a starting point.",431],["To temporarily change the material's shader, we change the shader property of the material component.",431],["private var invincibleShader = Shader.Find (\"Specular\");",431],["function StartInvincibility {",431],["renderer.material.shader = invincibleShader;",431],["When using this script and exiting Play Mode, the state of the material will be reset to whatever it was before entering Play Mode initially. This happens because whenever renderer.material is accessed, the material is automatically instantiated and the instance is returned. This instance is simultaneously and automatically applied to the renderer. So you can make any changes that your heart desires without fear of permanence.",431],["Direct Modification",431],["IMPORTANT NOTE",431],["The method presented below will modify actual source asset files used within Unity. These modifications are not undoable. Use them with caution.",431],["Now let's say that we don't want the material to reset when we exit play mode. For this, you can use renderer.sharedMaterial. The sharedMaterial property will return the actual asset used by this renderer (and maybe others).",431],["The code below will permanently change the material to use the Specular shader. It will not reset the material to the state it was in before Play Mode.",431],["private var invincibleShader = Shader.Find (\"Specular\");",431],["function StartInvincibility {",431],["renderer.sharedMaterial.shader = invincibleShader;",431],["As you can see, making any changes to a sharedMaterial can be both useful and risky. Any change made to a sharedMaterial will be permanent, and not undoable.",431],["Applicable Class Members",431],["The same formula described above can be applied to more than just materials. The full list of assets that follow this convention is as follows:",431],["Materials: renderer.material and renderer.sharedMaterial",431],["Meshes: meshFilter.mesh and meshFilter.sharedMesh",431],["Physic Materials: collider.material and collider.sharedMaterial",431],["Direct Assignment",431],["If you declare a public variable of any above class: Material, Mesh, or Physic Material, and make modifications to the asset using that variable instead of using the relevant class member, you will not receive the benefits of automatic instantiation before the modifications are applied.",431],["Assets that are not automatically instantiated",431],["There are two different assets that are never automatically instantiated when modifying them.",431],["Any modifications made to these assets through scripting are always permanent, and never undoable. So if you're changing your terrain's heightmap through scripting, you'll need to account for instantiating and assigning values on your own. Same goes for Textures. If you change the pixels of a texture file, the change is permanent.",431],["iOS and Android Notes",431],["Texture2D assets are never automatically instantiated when modifying them in iOS and Android projects. Any modifications made to these assets through scripting are always permanent, and never undoable. So if you change the pixels of a texture file, the change is permanent.",431],["MonoDevelop",432],["MonoDevelop is the integrated development environment (IDE) supplied with Unity. An IDE combines the familiar operation of a text editor with additional features for debugging and other project management tasks. The text editor will not be covered here since it is fairly intuitive, but the integration of the editor and debugger with Unity are described below.",432],["Setting Up MonoDevelop",432],["MonoDevelop is installed by default with Unity, although there is the option to exclude it from the installation on Windows. You should check that MonoDevelop is set as the external script editor in the Preferences (menu: Unity > Preferences and then select the External Tools panel). With this option enabled, Unity will launch MonoDevelop and use it as the default editor for all script files.",432],["Setting Up the Debugger",432],["To enable MonoDevelop's source level debugging (see below for details) you should firstly check that the Editor Attaching option is enabled in the Preferences on the External Tools panel. Then, you should synchronize the Unity project with the MonoDevelop project (menu: Assets > Sync MonoDevelop Project). Also, make sure that the Development Build and Script Debugging options are enabled in the Build Settings for your target platform (menu: File > Build Settings). If you are building a webplayer then you should additionally check that the development release channel setting is enabled on the player’s context menu in the browser (right click on Windows or cmd-click on Mac OSX).",432],["Just before starting a debugging session, select Run > Attach To Process from the menu in MonoDevelop and then select the Unity application from the list of processes that appears. With these steps completed, you are ready to being debugging your Unity scripts.",432],["Source Level debugging",432],["The currently open source files are shown as tabs in MonoDevelop and can be edited there with the features of a standard text editor. However, there is also a grey breakpoint bar to the left of the editor panel. Clicking in this bar will add a so-called breakpoint marker next to the line of code.",432],["Adding a breakpoint to a line instructs Unity to pause execution of the script just before it reaches that line during Play mode. When the script is \"frozen\" like this, you can use  the debugger to determine exactly what the script is doing.",432],["Information about the state of execution is shown in the tabs at the bottom of the MonoDevelop window when execution is paused at a breakpoint. Perhaps the most important of these is the Locals tab.",432],["This shows the values of local variables in the function that is currently executing. (A pseudo-local variable called \"this\" is automatically available in every function without being explicitly defined; it is a reference to the current script instance and so all variables defined in the script can be accessed via \"this\".) You can use breakpoints in combination with the Locals tab to get a similar effect to adding print statements to your code - you can interrogate the values of variables at any point you like. However, you can also edit the variable values in the Locals tab. This can be handy when you find a variable incorrectly set and you would like to see if the problem disappears when the value is set how it should be.",432],["A further useful feature of MonoDevelop is single stepping. When execution is paused at a breakpoint, a bar of debugging tools will become available in the top portion of the MonoDevelop window:-",432],["The first four buttons are known as Continue, Step Over, Step In and Step Out and can also be accessed as commands on the Run menu (the rightmost button, Detach, can be used if you want to end the debugging session). Continue resumes execution until the next breakpoint is encountered. Step Over and Step In both execute one line of code at a time. The difference between the two is that Step Over executes any function calls within the line all at once, while Step In allows the stepwise execution to continue into the function. Since it is common to use Step In accidentally on a function that is known to be correct, Step Out continues execution to the end of the current function and then pauses again in the code that originally called it.",432],["A detailed description of source level debugging techniques is not appropriate here but there are various books and web resources offering wisdom on the subject. Additionally, a little experimentation will help you get a feel for the power of the technique and how you can use it to track down most common types of bugs.",432],["Using more than one camera",433],["When created, a Unity scene contains just a single camera and this is all you need for most situations. However, you can have as many cameras in a scene as you like and their views can be combined in different ways, as described below.",433],["Switching cameras",433],["By default, a camera renders its view to cover the whole screen and so only one camera view can be seen at a time (the visible camera is the one that has the highest value for its depth property). By disabling one camera and enabling another from a script, you can \"cut\" from one camera to another to give different views of a scene. You might do this, for example, to switch between an overhead map view and a first-person view.",433],["using UnityEngine;",433],["using System.Collections;",433],["public class ExampleScript : MonoBehaviour {",433],["public Camera firstPersonCamera;",433],["public Camera overheadCamera;",433],["public void ShowOverheadView() {",433],["firstPersonCamera.enabled = false;",433],["overheadCamera.enabled = true;",433],["public void ShowFirstPersonView() {",433],["firstPersonCamera.enabled = true;",433],["overheadCamera.enabled = false;",433],["Example C# script",433],["var firstPersonCamera: Camera;",433],["var overheadCamera: Camera;",433],["function ShowOverheadView() {",433],["firstPersonCamera.enabled = false;",433],["overheadCamera.enabled = true;",433],["function ShowFirstPersonView() {",433],["firstPersonCamera.enabled = true;",433],["overheadCamera.enabled = false;",433],["Example JS script",433],["Rendering a small camera view inside a larger one",433],["Usually, you want at least one camera view covering the whole screen (the default setting) but it is often useful to show another view inside a small area of the screen. For example, you might show a rear view mirror in a driving game or show an overhead mini-map in the corner of the screen while the main view is first-person. You can set the size of a camera's onscreen rectangle using its Viewport Rect property.",433],["The coordinates of the viewport rectangle are \"normalized\" with respect to the screen. The bottom and left edges are at the 0.0 coordinate, while the top and right edges are at 1.0. A coordinate value of 0.5 is halfway across. In addition to the viewport size, you should also set the depth property of the camera with the smaller view to a higher value than the background camera. The exact value does not matter but the rule is that a camera with a higher depth value is rendered over one with a lower value.",433],["Muscle setup",434],["Mecanim allows you to control the range of motion of different bones using Muscles.",434],["Once the Avatar has been properly configured, Mecanim will \"understand\" the bone structure and allow you to start working in the Muscles tab of the Avatar Inspector. Here, it is very easy to tweak the character's range of motion and ensure the character deforms in a convincing way, free from visual artifacts or self-overlaps.",434],["You can either adjust individual bones in the body (lower part of the view) or manipulate the character using predefined deformations which operate on several bones at once (upper part of the view).",434],["Namespaces",435],["As projects become larger and the number of scripts increases, the likelihood of having clashes between script class names grows ever greater. This is especially true when several programmers are working on different aspects of the game separately and will eventually combine their efforts in one project. For example, one programmer may be writing the code to control the main player character while another writes the equivalent code for the enemy. Both programmers may choose to call their main script class Controller, but this will cause a clash when their projects are combined.",435],["To some extent, this problem can be avoided by adopting a naming convention or by renaming classes whenever a clash is discovered (eg, the classes above could be given names like PlayerController and EnemyController). However, this is troublesome when there are several classes with clashing names or when variables are declared using those names - each mention of the old class name must be replaced for the code to compile.",435],["The C# language offers a feature called namespaces that solves this problem in a robust way. A namespace is simply a collection of classes that are referred to using a chosen prefix on the class name. In the example below, the classes Controller1 and Controller2 are members of a namespace called Enemy:",435],["namespace Enemy {",435],["public class Controller1 : MonoBehaviour {",435],["...",435],["public class Controller2 : MonoBehaviour {",435],["...",435],["In code, these classes are referred to as Enemy.Controller1 and Enemy.Controller2, respectively. This is better than renaming the classes insofar as the namespace declaration can be bracketed around existing class declarations (ie, it is not necessary to change the names of all the classes individually). Furthermore, you can use multiple bracketed namespace sections around classes wherever they occur, even if those classes are in different source files.",435],["You can avoid having to type the namespace prefix repeatedly by adding a using directive at the top of the file.",435],["using Enemy;",435],["This line indicates that where the class names Controller1 and Controller2 are found, they should be taken to mean Enemy.Controller1 and Enemy.Controller2, respectively. If the script also needs to refer to classes with the same name from a different namespace (one called Player, say), then the prefix can still be used. If two namespaces that contain clashing class names are imported with using directives at the same time, the compiler will report an error.",435],["Low-level Native Plugin Interface",436],["In addition to the basic script interface, Native Code Plugins in Unity can receive callbacks when certain events happen. This is mostly used to implement low-level rendering in your plugin and enable it to work with Unity's multithreaded rendering.",436],["Access to the Graphics Device",436],["A plugin can receive notification about events on the graphics device by exporting a UnitySetGraphicsDevice function. This will be called when the graphics device is created, before it is destroyed, and also before and after the device is \"reset\" (this only happens with Direct3D 9). The function has parameters which will receive the device pointer, device type and the kind of event that is taking place.",436],["// If exported by a plugin, this function will be called",436],["// when graphics device is created, destroyed,",436],["// and before and after it is reset (ie, resolution changed).",436],["extern \"C\" void EXPORT_API UnitySetGraphicsDevice (",436],["void* device,",436],["int deviceType,",436],["int eventType);",436],["Possible values for deviceType:",436],["enum GfxDeviceRenderer",436],["kGfxRendererOpenGL = 0, // desktop OpenGL",436],["kGfxRendererD3D9 = 1, // Direct3D 9",436],["kGfxRendererD3D11 = 2, // Direct3D 11",436],["kGfxRendererGCM = 3, // PlayStation 3",436],["kGfxRendererNull = 4, // \"null\" device (used in batch mode)",436],["kGfxRendererXenon = 6, // Xbox 360",436],["kGfxRendererOpenGLES20 = 8, // OpenGL ES 2.0",436],["kGfxRendererOpenGLES30 = 11, // OpenGL ES 3.0",436],["kGfxRendererGXM = 12, // PlayStation Vita",436],["kGfxRendererPS4 = 13, // PlayStation 4",436],["kGfxRendererXboxOne = 14, // Xbox One",436],["kGfxRendererMetal = 16, // iOS Metal",436],["};",436],["Possible values for eventType:",436],["enum GfxDeviceEventType",436],["kGfxDeviceEventInitialize = 0,",436],["kGfxDeviceEventShutdown = 1,",436],["kGfxDeviceEventBeforeReset = 2,",436],["kGfxDeviceEventAfterReset = 3,",436],["};",436],["Plugin Callbacks on the Rendering Thread",436],["Rendering in Unity can be multithreaded if the platform and number of available CPUs will allow for it. When multithreaded rendering is used, the rendering API commands happen on a thread which is completely separate from the one that runs MonoBehaviour scripts. Consequently, it is not always possible for your plugin to start doing some rendering immediately, since might interfere with whatever the render thread is doing at the time.",436],["In order to do any rendering from the plugin, you should call GL.IssuePluginEvent from your script, which will cause your plugin to be called from the render thread. For example, if you call GL.IssuePluginEvent from the camera's OnPostRender function, you get a plugin callback immediately after the camera has finished rendering.",436],["// If exported by a plugin, this function will be called for",436],["// GL.IssuePluginEvent script calls. The function will be called",436],["// on a rendering thread; note that when multithreaded rendering",436],["// is used, the render thread WILL BE DIFFERENT from the main",436],["// thread, on which all scripts &amp; other game logic are executed!",436],["// You have responsibility for ensuring any necessary",436],["// synchronization with other plugin script calls takes place.",436],["extern \"C\" void EXPORT_API UnityRenderEvent (int eventID);",436],["Example",436],["An example of a low-level rendering plugin can be downloaded here. It demonstrates two things:",436],["Renders a rotating triangle from C++ code after all regular rendering is done.",436],["Fills a procedural texture from C++ code, using Texture.GetNativeTexturePtr to access it.",436],["The project works with:",436],["Windows (Visual Studio 2008) and Mac OS X (Xcode 3.2) and uses Direct3D 9, Direct3D 11 or OpenGL depending on the platform. Direct3D 9 code part also demonstrates how to handle \"lost\" devices.",436],["Windows Store Apps (see RenderingPlugin\\WSAVisualStudio2012 for more information)",436],["Native Plugins",437],["Unity has extensive support for native Plugins, which are libraries of native code written in C, C++, Objective-C, etc. Plugins allow your game code (written in Javascript or C#) to call functions from these libraries. This feature allows Unity to integrate with middleware libraries or existing C/C++ game code.",437],["Note: For security reasons, plugins are not usable in web player.",437],["In order to use a native plugin you firstly need to write functions in a C-based language to access whatever features you need and compile them into a library. In Unity, you will also need to create a C# script which calls functions in the native library.",437],["The native plugin should provide a simple C interface which the C# script then exposes to other user scripts. It is also possible for Unity to call functions exported by the native plugin when certain low-level rendering events happen (for example, when a graphics device is created), see the Native Plugin Interface page for details.",437],["Example",437],["A very simple native library with a single function might have source code that looks like this:",437],["float FooPluginFunction () { return 5.0F; }",437],["To access this code from within Unity, you could use code like the following:",437],["using UnityEngine;",437],["using System.Runtime.InteropServices;",437],["class SomeScript : MonoBehaviour {",437],["if UNITY_IPHONE    UNITY_XBOX360",437],["// On iOS and Xbox 360 plugins are statically linked into",437],["// the executable, so we have to use __Internal as the",437],["// library name.",437],["[DllImport (\"__Internal\")]",437],["else",437],["// Other platforms load plugins dynamically, so pass the name",437],["// of the plugin's dynamic library.",437],["[DllImport (\"PluginName\")]",437],["endif",437],["private static extern float FooPluginFunction ();",437],["void Awake () {",437],["// Calls the FooPluginFunction inside the plugin",437],["// And prints 5 to the console",437],["print (FooPluginFunction ());",437],["Note that when using Javascript you will need to use the following syntax, where DLLName is the name of the plugin you have written, or \"__Internal\" if you are writing statically linked native code:",437],["@DllImport (DLLName)",437],["static private function FooPluginFunction () : float {};",437],["Creating a Native Plugin",437],["In general, plugins are built with native code compilers on the target platform. Since plugin functions use a C-based call interface, you must avoid name mangling issues when using C++ or Objective-C.",437],["Further Information",437],["Native Plugin Interface - this is needed if you want to do rendering in your plugin.",437],["Mono Interop with native libraries.",437],["P-invoke documentation on MSDN.",437],["Loading Multiple NavMeshes using Additive Loading",438],["The NavMeshes in different Scenes are not connect by default. When you load another level using Application.LoadLevelAdditive() you will need to connect the NavMeshes in different Scenes using an Off-Mesh link.",438],["In this example we have Scene 1 and Scene 2. The Scene 1 has an Off-Mesh Link starting over a walkable area and landing over a walkable area in Scene 2. There can be as many Off-Mesh Links connecting the Scenes as necessary.",438],["When authored the other end point of the scene connecting Off-Mesh links are not connected. After a new Scene is loaded, the Off-Mesh Links will be reconnected.",438],["If the multiple scenes have NavMesh overlapping at the same area, the position picking may be arbitrary NavMesh at that location. This applies to agents, Off-Mesh Links and position picking using the NavMesh API. You should create the scene crossing Off-Mesh links so that they start and end clearly on over one NavMesh only. Overlapping NavMesh areas are not automatically connected.",438],["Further Reading",438],["\nBuilding a NavMesh – workflow for NavMesh baking.\n",438],["\nCreating Off-Mesh Links - learn how to manually create Off-Mesh Links.\n",438],["Advanced NavMesh Bake Settings",439],["Min Region Area",439],["The Min Region Area advanced build settings allows you to cull away small non-connected NavMesh regions. NavMesh regions  whose surface area is smaller than the specified value, will be removed.",439],["Please note that some areas may not get removed despite the Min Region Area setting. The NavMesh is built in parallel as a grid of tiles. If an area straddles a tile boundary, the area is not removed. The reason for this is that the area pruning happens at a stage in the build process where surrounding tiles are not accessible.",439],["Voxel Size",439],["Manual voxel size allows you to change the accuracy at which the bake process operates.",439],["The NavMesh bake process uses voxelization to build the NavMesh from arbitrary level geometry. In the first pass of the algorithm, the scene is rasterized into voxels, then the walkable surfaces are extracted, and finally the walkable surfaces are turned into a navigation mesh. The voxel size describes how accurately the resulting NavMesh represents the scene geometry.",439],["The default accuracy is set so that there are 3 voxels per agent radius, that is, the whole agent width is 6 voxels. This is a good trade off between accuracy and bake speed. Halving the voxel size will increase the memory usage by 4x and it will take 4x longer to build the scene.",439],["Generally you should not need to adjust the voxel size, there are two scenarios where this might be necessary: building a smaller agent radius, or more accurate NavMesh.",439],["Smaller Agent Radius",439],["When you bake for an artificially smaller agent radius, the NavMesh bake system will also reduce the voxel size. If your other agent dimensions stays the same, it may not be necessary to increase the NavMesh build resolution.",439],["The easiest way to do that is as follows:",439],["Set the Agent Radius to the real agent radius.",439],["Turn on the Manual Voxel Size, this will take the current voxel size and \"freeze it\".",439],["Set the artificially smaller Agent Radius, since you have checked on the Manual Voxel Size the voxel size will not change.",439],["More Accurate NavMesh",439],["If your level has a lot of tight spots, you may want to increase the accuracy by making the voxel smaller. The label under the Voxel Size shows the relation between the voxel size and Agent Radius. A good range is something between 2-8, going further than that generally results really long build times.",439],["When you intentionally build tight corridors in your game, please note that you should leave at least 4 * voxelSize clearance in addition to the agent radius, especially if the corridors are at angles.",439],["If you need smaller corridors than the NavMesh baking can support, please consider using Off-Mesh Links. These have the additional benefit that you can detect when they are being used and can, for example, play a specific animation.",439],["Further reading",439],["\nBuilding a NavMesh – workflow for NavMesh baking.\n",439],["\nBuilding Off-Mesh Links Automatically - further details on automatic Off-Mesh Link generation.\n",439],["\nBuilding Height Mesh for Accurate Charater Placement – workflow for Height Mesh baking.\n",439],["Making an Agent Patrol Between a Set of Points",440],["Many games feature NPCs that patrol automatically around the playing area. The navigation system can be used to implement this behaviour but it is slightly more involved than standard pathfinding - merely using the shortest path between two points makes for a limited and predictable patrol route. You can get a more convincing patrol pattern by keeping a set of key points that are \"useful\" for the NPC to pass through and visiting them in some kind of sequence. For example, in a maze, you might place the key patrol points at junctions and corners to ensure the agent checks every corridor. For an office building, the key points might be the individual offices and other rooms.",440],["The ideal sequence of patrol points will depend on the way you want the NPCs to behave. For example, a robot would probably just visit the points in a methodical order while a human guard might try to catch the player out by using a more random pattern. The simple behaviour of the robot can be implemented using the code shown below.",440],["The patrol points are supplied to the script using a public array of Transforms. This array can be assigned from the inspector using GameObjects to mark the points' positions. The GotoNextPoint function sets the destination point for the agent (which also starts it moving) and then selects the new destination that will be used on the next call. As it stands, the code cycles through the points in the sequence they occur in the array but you can easily modify this, say by using Random.Range to choose an array index at random.",440],["In the Update function, the script checks how close the agent is to the destination using the remainingDistance property. When this distance is very small, a call to GotoNextPoint is made to start the next leg of the patrol.",440],["// AgentPatrol.cs",440],["using UnityEngine;",440],["using System.Collections;",440],["public class Patrol : MonoBehaviour {",440],["public Transform[] points;",440],["private int destPoint = 0;",440],["private NavMeshAgent agent;",440],["void Start () {",440],["agent = GetComponent();",440],["// Disabling auto-braking allows for continuous movement",440],["// between points (ie, the agent doesn't slow down as it",440],["// approaches a destination point).",440],["agent.autoBraking = false;",440],["GotoNextPoint();",440],["void GotoNextPoint() {",440],["// Returns if no points have been set up",440],["if (points.Length == 0)",440],["return;",440],["// Set the agent to go to the currently selected destination.",440],["agent.destination = points[destPoint].position;",440],["// Choose the next point in the array as the destination,",440],["// cycling to the start if necessary.",440],["destPoint = (destPoint + 1) % points.Length;",440],["void Update () {",440],["// Choose the next destination point when the agent gets",440],["// close to the current one.",440],["if (agent.remainingDistance &lt; 0.5f)",440],["GotoNextPoint();",440],["// AgentPatrol.js",440],["var points: Transform[];",440],["var destPoint: int = 0;",440],["var agent: NavMeshAgent;",440],["function Start() {",440],["agent = GetComponent.();",440],["// Disabling auto-braking allows for continuous movement",440],["// between points (ie, the agent doesn't slow down as it",440],["// approaches a destination point).",440],["agent.autoBraking = false;",440],["GotoNextPoint();",440],["function GotoNextPoint() {",440],["// Returns if no points have been set up",440],["if (points.Length == 0)",440],["return;",440],["// Set the agent to go to the currently selected destination.",440],["agent.destination = points[destPoint].position;",440],["// Choose the next point in the array as the destination,",440],["// cycling to the start if necessary.",440],["destPoint = (destPoint + 1) % points.Length;",440],["function Update() {",440],["// Choose the next destination point when the agent gets",440],["// close to the current one.",440],["if (agent.remainingDistance &lt; 0.5f)",440],["GotoNextPoint();",440],["Navigation Areas and Costs",441],["The Navigation Areas define how difficult it is to walk across a specific area, the lower cost areas will be preferred during path finding. In addition each NavMesh Agent has an Area Mask which can be used to specify on which areas the agent can move.",441],["In the above example the area types are used for two common use cases:",441],["\nWater area is made more costly to walk by assigning it a higher cost, to deal with a scenario where walking on shallow water is slower.\n",441],["\nDoor area is made accessible by specific characters, to create a scenario where humans can walk through doors, but zombies cannot.\n",441],["The area type can be assigned to every object that is included in the NavMesh baking, in addition, each Off-Mesh Link has a property to specify the area type.",441],["Pathfinding Cost",441],["In a nutshell, the cost allows you to control which areas the pathfinder favors when finding a path. For example, if you set the cost of an area to 3.0, traveling across that area is considered to be three times longer than alternative routes.",441],["To fully understand how the cost works, let's take a look at how the pathfinder works.",441],["Unity uses A* to calculate the shortest path on the NavMesh. A* works on a graph of connected nodes. The algorithm starts from the nearest node to the path start and visits the connect nodes until the destination is reached.",441],["Since the Unity navigation representation is a mesh of polygons, the first thing the pathfinder needs to do is to place a point on each polygon, which is the location of the node. The shortest path is then calculated between these nodes.",441],["The yellow dots and lines in the above picture shows how the nodes and links are placed on the NavMesh, and in which order they are traversed during the A*.",441],["The cost to move between two nodes depends on the distance to travel and the cost associated with the area type of the polygon under the link, that is, distance * cost. In practice this means, that if the cost of an area is 2.0, the distance across such polygon will appear to be twice as long. The A* algorithm requires that all costs must be larger than 1.0.",441],["The effect of the costs on the resulting path can be hard to tune, especially for longer paths. The best way to approach costs is to treat them as hints. For example, if you want the agents to not to use Off-Mesh Links too often, you could increase their cost. But it can be challenging to tune a behavior where the agents to prefer to walk on sidewalks.",441],["Another thing you may notice on some levels is that the pathfinder does not always choose the very shortest path. The reason for this is the node placement. The effect can be noticeable in scenarios where big open areas are next to tiny obstacles, which results navigation mesh with very big and small polygons. In such cases the nodes on the big polygons may get placed anywhere in the big polygon and from the pathfinder's point of view it looks like a detour.",441],["The cost per area type can be set globally in the Areas tab, or you can override them per agent using a script.",441],["Area Types",441],["The area types are specified in the Navigation Window's Areas tab. There are 29 custom types, and 3 build-it types: Walkable, Not Walkable, and Jump.",441],["\nWalkable is a generic area type which specifies that the area can be walked on.\n",441],["\nNot Walkable is a generic area type which prevents navigation. It is useful for cases where you want to mark certain object to be an obstacle, but without getting NavMesh on top of it.\n",441],["\nJump is an area type that is assigned to all auto-generated Off-Mesh Links.\n",441],["Area Mask",441],["Each agent has an Area Mask which describes which areas it can use when navigating. The area mask can be set in the agent properties, or the bitmask can be manipulated using a script at runtime.",441],["The area mask is useful when you want only certain types characters to be able to walk through an area. For example, in a zombie evasion game, you could mark the area under each door with a Door area type, and uncheck the Door area from the zombie character's Area Mask.",441],["Further Reading",441],["\nBuilding a NavMesh – workflow for NavMesh baking.\n",441],["\nNavMeshAgent.areaMask - Script API to set areaMask for an agent.\n",441],["\nNavMeshAgent.SetAreaCost() - Script API to set area cost for an agent.\n",441],["Building a NavMesh",442],["The process of creating a NavMesh from the level geometry is called NavMesh Baking. The process collects the Render Meshes and Terrains of all Game Objects which are marked as Navigation Static, and then processes them to create a navigation mesh that approximates the walkable surfaces of the level.",442],["In Unity, NavMesh generation is handled from the Navigation window (menu: Window > Navigation).",442],["Building a NavMesh for your scene can be done in 4 quick steps:",442],["Select scene geometry that should affect the navigation – walkable surfaces and obstacles.",442],["Check Navigation Static on to include selected objects in the NavMesh baking process.",442],["Adjust the bake settings to match your agent size.",442],["\nAgent Radius defines how close the agent center can get to a wall or a ledge.\n",442],["\nAgent Height defines how low the spaces are that the agent can reach.\n",442],["\nMax Slope defines how steep the ramps are that the agent walk up.\n",442],["\nStep Height defines how high obstructions are that the agent can step on.\n",442],["Click bake to build the NavMesh.",442],["The resulting NavMesh will be shown in the scene as a blue overlay on the underlying level geometry whenever the Navigation Window is open and visible.",442],["As you may have noticed in the above pictures, the the walkable area in the generated NavMesh appears shrunk. The NavMesh represents the area where the center of the agent can move. Conceptually, it doesn't matter whether you regard the agent as a point on a shrunken NavMesh or a circle on a full-size NavMesh since the two are equivalent. However, the point interpretation allows for better runtime efficiency and also allows the designer to see immediately whether an agent can squeeze through gaps without worrying about its radius.",442],["Another thing to keep in mind is that the NavMesh is an approximation of the walkable surface. This can be seen for example in the stairs which are represented as a flat surface, while the source surface has steps. This is done in order to keep the NavMesh data size small. The side effect of the approximation is that sometimes you will need to have a little extra space in your level geometry to allows the agent to pass through a tight spot.",442],["When baking is complete, you will find a NavMesh asset file inside a folder with the same name as the scene the NavMesh belongs to. For example, if you have a scene called First Level in the Assets folder, the NavMesh will be at Assets &gt; First Level &gt; NavMesh.asset.",442],["Additional Workflows for Marking Objects for Baking",442],["In addition to marking objects as Navigation Static in the Navigation Window‚ as explained above, you can use the Static menu at the top of the inspector. This can be convenient if you don't happen to have the Navigation Window open.",442],["Further Reading",442],["\nCreating a NavMeshAgent – learn how to allow your characters to move.\n",442],["\nBake Settings – full description of the NavMesh bake settings.\n",442],["\nAreas and Costs – learn how to use different Area types.\n",442],["Building Off-Mesh Links Automatically",443],["Some use cases for Off-Mesh Links can be detected automatically. The two most common ones are: Drop-Down and Jump-Across.",443],["\nDrop-Down links are created to drop down from a platform.\n",443],["\nJump-Across links are created to jump across a crevice.\n",443],["In order to find the jump locations automatically, the build process walks along the edges of the NavMesh and checks if the landing location of the jump is on NavMesh. If the jump trajectory is unobstructed an Off-Mesh link is created.",443],["Let's set up automatic Off-Mesh Link generation. If you're not familiar with NavMesh baking, take a look at Building a NavMesh.",443],["First, the objects in the Scene where the jump can start from needs to be marked. This is done my checking Generate Off-Mesh Links option in the Navigation Window under Objects tab.",443],["The second step is to setup the drop-down and jump-across trajectories:",443],["\nDrop-Down link generation is controlled by the Drop Height parameter. The parameter controls what is the highest drop that will be connected, setting the value to 0 will disable the generation.\n",443],["\nThe trajectory of the drop-down link is defined so that the horizontal travel (A) is: 2*agentRadius + 4*voxelSize. That is, the drop will land just beyond the edge of the platform. In addition the vertical travel (B) needs to be more than bake settings' Step Height (otherwise we could just step down) and less than Drop Height. The adjustment by voxel size is done so that any round off errors during voxelization does not prevent the links being generated. You should set the Drop Height to a bit larger value than what you measure in your level, so that the links will connect properly.\n",443],["\nJump-Across link generation is controlled by the Jump Distance parameter. The parameter controls what is the furthest distance that will be connected. Setting the value to 0 will disable the generation.\n",443],["\nThe trajectory of the jump-across link is defined so that the horizontal travel (C) is more than 2*agentRadius and less than Jump Distance. In addition the landing location (D) must not be further than voxelSize from the level of the start location.\n",443],["Now that objects are marked, and settings adjusted, it's time to press Bake and you have will have automatically generated off-mesh links! When ever you change the scene and bake, the old links will be discarded and new links will be created based on the new scene.",443],["Trouble Shooting",443],["Things to keep in mind if Off-Mesh links are not generated at locations where you expect them to be:",443],["\nDrop Height should a bit bigger than the actual distance measured in your level. This ensures that small deviations that happen during the NavMesh baking process will not prevent the link to be connected.\n",443],["\nJump Distance should be a bit longer than the actual distance measured in your level. The Jump Distance is measured from one location on a NavMesh to another location on the NavMesh, which means that you should add 2*agentRadius (plus a little) to make sure the crevices are crossed.\n",443],["Further Reading",443],["\nCreating Off-Mesh Links - learn how to manually create Off-Mesh Links.\n",443],["\nBuilding a NavMesh – workflow for NavMesh baking.\n",443],["\nBake Settings – full description of the NavMesh bake settings.\n",443],["\nOff-Mesh Link component reference – full description of all the Off-Mesh Link properties.\n",443],["\nOff-Mesh Link scripting reference - full description of the Off-Mesh Link scripting API.\n",443],["Coupling Animation and Navigation",444],["The goal of this document is to guide you to setup navigating humanoid characters to move using the navigation system.",444],["We’ll be using Unity’s built-in systems for animation and navigation along with custom scripting to achieve this.",444],["It’s assumed you’re familiar with the basics of Unity and the Mecanim animation system.",444],["An example project is available — so you don’t have add scripts or set up animations and animation controller from scratch:",444],["\nNavigationAnimation_45_and_50.zip Works on Unity 4.5> and 5.0>\n",444],["Creating the Animation Controller",444],["To get a responsive and versatile animation controller — covering a wide range of movements — we need a set of animations moving in different directions. This is sometimes referred to as a strafe-set.",444],["In addition to the move animations we need an animation for the standing character.",444],["We proceed by arranging the strafe-set in a 2D blend tree — choose blend type: 2D Simple Directional and place animations using Compute Positions > Velocity XZ",444],["For blending control we add two float parameters velx and vely, and assign them to the blend tree.",444],["Here we’ll be placing 7 run animations — each with a different velocity. In addition to the forwards (+ left/right) and backwards (+ left/right) we also use an animation clip for running on the spot. The latter is highlighted in the center of the 2D blend map below. The reason for having an animation running on the spot is two-fold, firstly it preserves the style of running when blended with the other animations. Secondly the animation prevents foot-sliding when blending.",444],["Then we add the idle animation clip in it’s own node (Idle).",444],["We now have two discrete animation states that we couple with 2 transitions.",444],["To control the switch between the moving and idle states we add a boolean control parameter move. Then disable the Has Exit Time property on the transitions. This allows the transition to trigger at any time during the animation. Transition time should be set to around 0.10 second to get a responsive transition.",444],["Now place the new created animation controller on the character you want to move.",444],["Press play and select the character in the Hierarchy window. You can now manually control the animation values in the Animator window and change the move state and velocity.",444],["The next step is to create other means of controlling the animation parameters.",444],["Navigation Control",444],["Place a NavMeshAgent component on the character and adjust the radius, height and to match the character - additionally change the speed property to match the maximum speed in the animation blend tree.",444],["Create a navmesh for the scene you’ve placed the character in.",444],["Next we need to tell the character where to navigate to. This typically is very specific to the application. Here we choose a click to move behavior — the character moved to the point in the world where the user has clicked on the screen.",444],["// ClickToMove.cs",444],["using UnityEngine;",444],["[RequireComponent (typeof (NavMeshAgent))]",444],["public class ClickToMove : MonoBehaviour {",444],["RaycastHit hitInfo = new RaycastHit();",444],["NavMeshAgent agent;",444],["void Start () {",444],["agent = GetComponent ();",444],["void Update () {",444],["if(Input.GetMouseButtonDown(0)) {",444],["Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);",444],["if (Physics.Raycast(ray.origin, ray.direction, out hitInfo))",444],["agent.destination = hitInfo.point;",444],["Pressing play now — and clicking around in the scene — you’ll see the character move around in the scene. However — the animations don’t match the movement at all. We need to communicate the state and velocity of the agent to the animation controller.",444],["To transfer the velocity and state info from the agent to the animation controller we will add another script.",444],["// LocomotionSimpleAgent.cs",444],["using UnityEngine;",444],["[RequireComponent (typeof (NavMeshAgent))]",444],["[RequireComponent (typeof (Animator))]",444],["public class LocomotionSimpleAgent : MonoBehaviour {",444],["Animator anim;",444],["NavMeshAgent agent;",444],["Vector2 smoothDeltaPosition = Vector2.zero;",444],["Vector2 velocity = Vector2.zero;",444],["void Start ()",444],["anim = GetComponent ();",444],["agent = GetComponent ();",444],["// Don’t update position automatically",444],["agent.updatePosition = false;",444],["void Update ()",444],["Vector3 worldDeltaPosition = agent.nextPosition - transform.position;",444],["// Map 'worldDeltaPosition' to local space",444],["float dx = Vector3.Dot (transform.right, worldDeltaPosition);",444],["float dy = Vector3.Dot (transform.forward, worldDeltaPosition);",444],["Vector2 deltaPosition = new Vector2 (dx, dy);",444],["// Low-pass filter the deltaMove",444],["float smooth = Mathf.Min(1.0f, Time.deltaTime/0.15f);",444],["smoothDeltaPosition = Vector2.Lerp (smoothDeltaPosition, deltaPosition, smooth);",444],["// Update velocity if time advances",444],["if (Time.deltaTime > 1e-5f)",444],["velocity = smoothDeltaPosition / Time.deltaTime;",444],["bool shouldMove = velocity.magnitude > 0.5f &amp;&amp; agent.remainingDistance > agent.radius;",444],["// Update animation parameters",444],["anim.SetBool(\"move\", shouldMove);",444],["anim.SetFloat (\"velx\", velocity.x);",444],["anim.SetFloat (\"vely\", velocity.y);",444],["GetComponent().lookAtTargetPosition = agent.steeringTarget + transform.forward;",444],["void OnAnimatorMove ()",444],["// Update position to agent position",444],["transform.position = agent.nextPosition;",444],["This script deserves a little explanation. It’s placed on the character — which has an Animator and a NavMeshAgent component attached — as well as the click to move script above.",444],["First the script tells the agent not to update the character position automatically. We handle the position update that last in the script. The orientation is updated by the agent.",444],["The animation blend is controlled by reading the agent velocity. It is transformed into a relative velocity (based on character orientation) — and then smoothed. The transformed horizontal velocity components are then passed to the Animator and additionally the state switching between idle and moving is controlled by the speed (i.e. velocity magnitude).",444],["In the OnAnimatorMove() callback we update the position of the character to match the NavMeshAgent.",444],["Playing the scene again gives show that animation matches the movement to as close as possible.",444],["Improving the Quality of the Navigating Character",444],["To improve the quality of the animated and navigating character we will explore a couple of options.",444],["Looking",444],["Having the character to look and turn towards points of interest is important to convey attention and anticipation. We’ll use the animation systems lookat API. This calls for another script.",444],["// LookAt.cs",444],["using UnityEngine;",444],["using System.Collections;",444],["[RequireComponent (typeof (Animator))]",444],["public class LookAt : MonoBehaviour {",444],["public Transform head = null;",444],["public Vector3 lookAtTargetPosition;",444],["public float lookAtCoolTime = 0.2f;",444],["public float lookAtHeatTime = 0.2f;",444],["public bool looking = true;",444],["private Vector3 lookAtPosition;",444],["private Animator animator;",444],["private float lookAtWeight = 0.0f;",444],["void Start ()",444],["if (!head)",444],["Debug.LogError(\"No head transform - LookAt disabled\");",444],["enabled = false;",444],["return;",444],["animator = GetComponent ();",444],["lookAtTargetPosition = head.position + transform.forward;",444],["lookAtPosition = lookAtTargetPosition;",444],["void OnAnimatorIK ()",444],["lookAtTargetPosition.y = head.position.y;",444],["float lookAtTargetWeight = looking ? 1.0f : 0.0f;",444],["Vector3 curDir = lookAtPosition - head.position;",444],["Vector3 futDir = lookAtTargetPosition - head.position;",444],["curDir = Vector3.RotateTowards(curDir, futDir, 6.28f*Time.deltaTime, float.PositiveInfinity);",444],["lookAtPosition = head.position + curDir;",444],["float blendTime = lookAtTargetWeight > lookAtWeight ? lookAtHeatTime : lookAtCoolTime;",444],["lookAtWeight = Mathf.MoveTowards (lookAtWeight, lookAtTargetWeight, Time.deltaTime/blendTime);",444],["animator.SetLookAtWeight (lookAtWeight, 0.2f, 0.5f, 0.7f, 0.5f);",444],["animator.SetLookAtPosition (lookAtPosition);",444],["Add the script to the character and assign the head property to the head transform in your characters transform hierarchy. The LookAt script has no notion of navigation control — so to control where to look we go back to the LocomotionSimpleAgent.cs script and add a couple of lines to control the looking. Add the end of Update() add:",444],["LookAt lookAt = GetComponent ();",444],["if (lookAt)",444],["lookAt.lookAtTargetPosition = agent.steeringTarget + transform.forward;",444],["This will tell the LookAt script to set the point of interest to approximately the next corner along the path or — if no corners — to the end of the path.",444],["Try it out.",444],["Animation Driven Character using Navigation",444],["The character has so far been controlled completely by the position dictated by the agent. This ensures that the avoidance of other characters and obstacles translates directly to the character position. However it may lead to foot-sliding if the animation doesn’t cover the proposed velocity. Here we’ll relax the constraint of the character a bit. Basically we’ll be trading the avoidance quality for animation quality.",444],["Replace the OnAnimatorMove() callback on the LocomotionSimpleAgent.cs script replace the line with the following",444],["void OnAnimatorMove ()",444],["// Update position based on animation movement using navigation surface height",444],["Vector3 position = anim.rootPosition;",444],["position.y = agent.nextPosition.y;",444],["transform.position = position;",444],["When trying this out you may notice the that character can now drift away from the agent position (green wireframe cylinder) . You may need to limit that character animation drift. This can be done either by pulling the agent towards the character — or pull the character towards the agent position. Add the following at the end of the Update() method on the script LocomotionSimpleAgent.cs.",444],["// Pull character towards agent",444],["if (worldDeltaPosition.magnitude > agent.radius)",444],["transform.position = agent.nextPosition - 0.9f*worldDeltaPosition;",444],["Or — if you want the agent to follow the character.",444],["// Pull agent towards character",444],["if (worldDeltaPosition.magnitude > agent.radius)",444],["agent.nextPosition = transform.position + 0.9f*worldDeltaPosition;",444],["What works best very much depends on the specific use-case.",444],["Conclusion",444],["We have set up a character that moves using the navigation system and animates accordingly. Tweaking the numbers of blend time, look-at weights etc. can improve the looks — and is a good way to further explore this setup.",444],["Creating a NavMesh Agent",445],["Once you have a NavMesh baked for your level it is time to create a character which can navigate the scene. We're going to build our prototype agent from a cylinder and set it in motion. This is done using a NavMesh Agent component and a simple script.",445],["First let's create the character:",445],["Create a cylinder: GameObject &gt; 3D Object &gt; Cylinder.",445],["The default cylinder dimensions (height 2 and radius 0.5) are good for a humanoid shaped agent, so we will leave them as they are.",445],["Add a NavMesh Agent component: Component &gt; Navigation &gt; NavMesh Agent.",445],["Now you have simple NavMesh Agent set up ready to receive commands!",445],["When you start to experiment with a NavMesh Agent, you most likely are going to adjust its dimensions for your character size and speed.",445],["The NavMesh Agent component handles both the pathfinding and the movement control of a character. In your scripts, navigation can be as simple as setting the desired destination point - the NavMesh Agent can handle everything from there on.",445],["// MoveTo.cs",445],["using UnityEngine;",445],["using System.Collections;",445],["public class MoveTo : MonoBehaviour {",445],["public Transform goal;",445],["void Start () {",445],["NavMeshAgent agent = GetComponent();",445],["agent.destination = goal.position;",445],["Next we need to build a simple script which allows you to send your character to the destination specified by another Game Object, and a Sphere which will be the destination to move to:",445],["Create a new C# script (MoveTo.cs) and replace its contents with the above script.",445],["Assign the MoveTo script to the character you've just created.",445],["Create a sphere, this will be the destination the agent will move to.",445],["Move the sphere away from the character to a location that is close to the NavMesh surface.",445],["Select the character, locate the MoveTo script, and assign the Sphere to the Goal property.",445],["Press Play; you should see the agent navigating to the location of the sphere.",445],["To sum it up, in your script, you will need to get a reference to the NavMesh Agent component and then to set the agent in motion, you just need to assign a position to its destination property. The Navigation How Tos will give you further examples on how to solve common gameplay scenarios with the NavMesh Agent.",445],["Further Reading",445],["\nNavigation HowTos - common use cases for NavMesh Agent, with source code.\n",445],["\nInner Workings of the Navigation System - learn more about path following.\n",445],["\nNavMesh Agent component reference – full description of all the NavMeshAgent properties.\n",445],["\nNavMesh Agent scripting reference - full description of the NavMeshAgent scripting API.\n",445],["Creating a NavMesh Obstacle",446],["NavMesh Obstacle components can be used to describe obstacles the agents should avoid while navigating. For example the agents should avoid physics controlled objects, such as crates and barrels while moving.",446],["We're going to add a crate to block the pathway at the top of the level.",446],["First create a cube to depict the crate: Game Object &gt; 3D Object &gt; Cube.",446],["Move the cube to the platform at the top, the default size of the cube is good for a crate so leave it as it is.",446],["Add a NavMesh Obstacle component to the cube. Choose Add Component from the inspector and choose Navigation  &gt; NavMesh Obstacle.",446],["Set the shape of the obstacle to box, changing the shape will automatically fit the center and size to the render mesh.",446],["Add a Rigid body to the obstacle. Choose Add Component from the inspector and choose Physics &gt; Rigid Body.",446],["Finally turn on the Carve setting from the NavMesh Obstacle inspector so that the agent knows to find a path around the obstacle.",446],["Now we have a working crate that is physics controlled, and which the AI knows how to avoid while navigating.",446],["Further Reading",446],["\nInner Workings of the Navigation System - learn more about how obstacles are used as part of navigation.\n",446],["\nNavMesh Obstacle component reference – full description of all the NavMesh Obstacle properties.\n",446],["\nNavMesh Obstacle scripting reference - full description of the NavMesh Obstacle scripting API.\n",446],["Creating an Off-mesh Link",447],["Off-Mesh Links are used to create paths crossing outside the walkable navigation mesh surface. For example, jumping over a ditch or a fence, or opening a door before walking through it, can be all described as Off-mesh links.",447],["We're going to add an Off-Mesh Link component to describe a jump from the upper platform to the ground.",447],["First create two cylinders: Game Object &gt; 3D Obejct &gt; Sphere.",447],["You can scale the cylinders to (0.1, 0.5, 0.1) to make it easier to work with them.",447],["Move the first cylinder at the edge of the top platform, close to the NavMesh surface.",447],["Place the second cylinder on the ground, close to the NavMesh, at the location where the link should land.",447],["Select the cylinder on the left and add an Off-Mesh Link component to it. Choose Add Component from the inspector and choose Navigation &gt; Off Mesh Link.",447],["Assign the leftmost cylinder in the Start field and rightmost cylinder in the End field.",447],["Now you have functioning Off-Mesh Link set up! If the path via the off-mesh link is shorter than via walking along the Navmesh, the off-mesh link will be used.",447],["You can use any game object in the scene to hold the Off-Mesh link component, for example a fence prefab could contain the off-mesh link component. Similarly you can use any game object with a Transform as the start and end marker.",447],["The NavMesh bake process can detect and create common jump-across and drop-down links automatically. Take a look at the Building Off-Mesh Links Automatically for more details.",447],["Further Reading",447],["\nBuilding Off-Mesh Links Automatically - learn how to automatically build Off-Mesh Links.\n",447],["\nNavigation HowTos - common use cases for NavMesh Agent, with source code.\n",447],["\nOff-Mesh Link component reference – full description of all the Off-Mesh Link properties.\n",447],["\nOff-Mesh Link scripting reference - full description of the Off-Mesh Link scripting API.\n",447],["Building Height Mesh for Accurate Character Placement",448],["Height mesh allows you to place your character more accurately on the walkable surfaces.",448],["While navigating, the NavMesh Agent is constrained on the surface of the NavMesh. Since the NavMesh is an approximation of the walkable space, some features are evened out when the NavMesh is being built. For example, stairs may appear as a slope in the NavMesh. If your game requires accurate placement of the agent, you should enable Height Mesh building when you bake the NavMesh. The setting can be found under the Advanced settings in Navigation window. Note that building Height Mesh will take up memory and processing at runtime, and it will take a little longer to bake the NavMesh.",448],["Further reading",448],["\nBuilding a NavMesh – workflow for NavMesh baking.\n",448],["Navigation How-Tos",449],["This section provides a set of techniques and code samples to implement common tasks in navigation. As with all code in our documentation, you are free to use it for any purpose without crediting Unity.",449],["Inner Workings of the Navigation System",450],["When you want to intelligently move characters in your game (or agents as they are called in AI circles), you have to solve two problems: how to reason about the level to find the destination, then how to move there. These two problems are tightly coupled, but quite different in nature. The problem of reasoning about the level is more global and static, in that it takes into account the whole scene. Moving to the destination is more local and dynamic, it only considers the direction to move and how to prevent collisions with other moving agents.",450],["Walkable Areas",450],["The navigation system needs its own data to represent the walkable areas in a game scene. The walkable areas define the places in the scene where the agent can stand and move. In Unity the agents are described as cylinders. The walkable area is built automatically from the geometry in the scene by testing the locations where the agent can stand. Then the locations are connected to a surface laying on top of the scene geometry. This surface is called the navigation mesh (NavMesh for short).",450],["The NavMesh stores this surface as convex polygons. Convex polygons are a useful representation, since we know that there are no obstructions between any two points inside a polygon. In addition to the polygon boundaries, we store information about which polygons are neighbours to each other. This allows us to reason about the whole walkable area.",450],["Finding Paths",450],["To find path between two locations in the scene, we first need to map the start and destination locations to their nearest polygons. Then we start searching from the start location, visiting all the neighbours until we reach the destination polygon. Tracing the visited polygons allows us to find the sequence of polygons which will lead from the start to the destination. A common algorithm to find the path is A* (pronounced \"A star\"), which is what Unity uses.",450],["Following the Path",450],["The sequence of polygons which describe the path from the start to the destination polygon is called a corridor. The agent will reach the destination by always steering towards the next visible corner of the corridor. If you have a simple game where only one agent moves in the scene, it is fine to find all the corners of the corridor in one swoop and animate the character to move along the line segments connecting the corners.",450],["When dealing with multiple agents moving at the same time, they will need to deviate from the original path when avoiding each other. Trying to correct such deviations using a path consisting of line segments soon becomes very difficult and error prone.",450],["Since the agent movement in each frame is quite small, we can use the connectivity of the polygons to fix up the corridor in case we need to take a little detour. Then we quickly find the next visible corner to steer towards.",450],["Avoiding Obstacles",450],["The steering logic takes the position of the next corner and based on that figures out a desired direction and speed (or velocity) needed to reach the destination. Using the desired velocity to move the agent can lead to collision with other agents.",450],["Obstacle avoidance chooses a new velocity which balances between moving in the desired direction and preventing future collisions with other agents and edges of the navigation mesh. Unity is using reciprocal velocity obstacles (RVO) to predict and prevent collisions.",450],["Moving the Agent",450],["Finally after steering and obstacle avoidance the final velocity is calculated. In Unity the agents are simulated using a simple dynamic model, which also takes into account acceleration to allow more natural and smooth movement.",450],["At this stage it is possible to feed the velocity from the simulated agent to the Mecanim animation system to move the character, or let the navigation system take care of that.",450],["Once the agent has been moved using either method, the simulated agent location is moved and constrained to NavMesh. This last small step is important for robust navigation.",450],["Global and Local",450],["One of the most important things to understand about navigation is the difference between global and local navigation.",450],["Global navigation is used to find the corridor across the world. Finding a path across the world is a costly operation requiring quite a lot of processing power and memory.",450],["The linear list of polygons describing the path is a flexible data structure for steering, and it can be locally adjusted as the agent’s position moves. Local navigation tries to figure out how to efficiently move towards the next corner without colliding with other agents or moving objects.",450],["Two Cases for Obstacles",450],["Many applications of navigation require other types of obstacles rather than just other agents. These could be the usual crates and barrels in a shooter game, or vehicles. The obstacles can be handled using local obstacle avoidance or global pathfinding.",450],["When an obstacle is moving, it is best handled using local obstacles avoidance. This way the agent can predictively avoid the obstacle. When the obstacle becomes stationary, and can be considered to block the path of all agents, the obstacles should affect the global navigation, that is, the navigation mesh.",450],["Changing the NavMesh is called carving. The process detects which parts of the obstacle touches the NavMesh and carves holes into the NavMesh. This is computationally expensive operation, which is yet another compelling reason, why moving obstacles should be handled using collision avoidance.",450],["Local collision avoidance can be often used to steer around sparsely scattered obstacles too. Since the algorithm is local, it will only consider the next immediate collisions, and cannot steer around traps or handle cases where the an obstacle blocks a path. These cases can be solved using carving.",450],["Describing Off-mesh Links",450],["The connections between the NavMesh polygons are described using links inside the pathfinding system. Sometimes it is necessary to let the agent to navigate across places which are not walkable, for example, jumping over a fence, or traversing through a closed door. These cases need to know the location of the action.",450],["These actions can be annotated using Off-Mesh Links which tell the pathfinder that a route exists through the specified link. This link can be later accessed when following the path, and the special action can be executed.",450],["Using NavMesh Agent with Other Components",451],["You can use NavMesh Agent, NavMesh Obstacle, and Off Mesh Link components with other Unity components too. Here’s a list of dos and don’ts when mixing different components together.",451],["NavMesh Agent and Physics",451],["\nYou don’t need to add physics colliders to NavMesh Agents for them to avoid each other\n",451],["\nThat is, the navigation system simulates agents and their reaction to obstacles and the static world. Here the static world is the baked NavMesh.\n",451],["\nIf you want a NavMesh Agent to push around physics objects or use physics triggers:\n",451],["\nAdd a Collider component (if not present)\n",451],["\nAdd Rigidbody component\n",451],["\nTurn on kinematic (Is Kinematic) - this is important!\n",451],["\nKinematic means that the rigid body is controlled by something else than the physics simulation\n",451],["\nIf both NavMesh Agent and Rigidbody (non-kinematic) are active at the same time, you have race condition\n",451],["\nBoth components may try to move the agent at the same which leads to undefined behavior\n",451],["\nYou can use a NavMesh Agent to move e.g. a player character, without physics\n",451],["\nSet players agent’s avoidance priority to a small number (high priority), to allow the player to brush through crowds\n",451],["\nMove the player agent using NavMeshAgent.velocity, so that other agents can predict the player movement to avoid the player.\n",451],["NavMesh Agent and Animator",451],["\nNavMesh Agent and Animator with Root Motion can cause race condition\n",451],["\nBoth components try to move the transform each frame\n",451],["\nTwo possible solutions\n",451],["\nInformation should always flow in one direction\n",451],["\nEither agent moves the character and animations follows\n",451],["\nOr animation moves the character based on simulated result\n",451],["\nOtherwise you’ll end up having a hard to debug feedback loop\n",451],["\nAnimation follows agent\n",451],["\nUse the NavMeshAgent.velocity as input to the Animator to roughly match the agent’s movement to the animations\n",451],["\nRobust and simple to implement, will result in foot sliding where animations cannot match the velocity\n",451],["\nAgent follows animation\n",451],["\nDisable NavMeshAgent.updatePosition and NavMeshAgent.updateRotation to detach the simulation from the game objects locations\n",451],["\nUse the difference between the simulated agent’s position (NavMeshAgent.nextPosition) and animation root (Animator.rootPosition) to calculate controls for the animations\n",451],["\nSee Coupling Animation and Navigation for more details\n",451],["NavMesh Agent and NavMesh Obstacle",451],["\nDo not mix well!\n",451],["\nEnabling both will make the agent trying to avoid itself\n",451],["\nIf carving is enabled in addition, the agent tries to constantly remap to the edge of the carved hole, even more erroneous behavior ensues\n",451],["\nMake sure only one of them are active at any given time\n",451],["\nDeceased state, you may turn off the agent and turn on the obstacle to force other agents to avoid it\n",451],["\nAlternatively you can use priorities to make certain agents to be avoided more\n",451],["NavMesh Obstacle and Physics",451],["\nIf you want physics controlled object to affect NavMesh Agent’s behavior\n",451],["\nAdd NavMesh Obstacle component to the object which agent should be aware of, this allows the avoidance system to reason about the obstacle\n",451],["\nIf a game object has a Rigidbody and a NavMesh Obstacle attached, the obstacle’s velocity is obtained from the Rigidbody automatically\n",451],["\nThis allows NavMesh Agents to predict and avoid the moving obstacle\n",451],["Moving an Agent to a Position Clicked by the Mouse",452],["This script lets you choose the destination point on the NavMesh by clicking the mouse on the object's surface. The position of the click is determined by a raycast, rather like pointing a laser beam at the object to see where it hits (see the page Rays from the Camera for a full description of this technique). Since the GetComponent function is fairly slow to execute, the script stores its result in a variable during the Start function rather than call it repeatedly in Update.",452],["// MoveToClickPoint.cs",452],["using UnityEngine;",452],["public class MoveToClickPoint : MonoBehaviour {",452],["NavMeshAgent agent;",452],["void Start() {",452],["agent = GetComponent();",452],["void Update() {",452],["if (Input.GetMouseButtonDown(0)) {",452],["RaycastHit hit;",452],["if (Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), out hit, 100)) {",452],["agent.destination = hit.point;",452],["//MoveToClickPoint.js",452],["var agent: NavMeshAgent;",452],["function Start() {",452],["agent = GetComponent.();",452],["function Update() {",452],["if (Input.GetMouseButtonDown(0)) {",452],["var hit: RaycastHit;",452],["if (Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), hit, 100)) {",452],["agent.destination = hit.point;",452],["Telling a NavMeshAgent to Move to a Destination",453],["You can tell an agent to start calculating a path simply by setting the NavMeshAgent.destination property with the point you want the agent to move to. As soon as the calculation is finished, the agent will automatically move along the path until it reaches its destination. The following code implements a simple class that uses a GameObject to mark the target point which gets assigned to the destination property in the Start function. Note that the script assumes you have already added and configured the NavMeshAgent component from the editor.",453],["// MoveDestination.cs",453],["using UnityEngine;",453],["public class MoveDestination : MonoBehaviour {",453],["public Transform goal;",453],["void Start () {",453],["NavMeshAgent agent = GetComponent();",453],["agent.destination = goal.position;",453],["// MoveDestination.js",453],["var goal: Transform;",453],["function Start() {",453],["var agent: NavMeshAgent = GetComponent.();",453],["agent.destination = goal.position;",453],["Navigation System in Unity",454],["The Navigation System allows you to create characters which can navigate the game world. It gives your characters the ability to understand that they need to take stairs to reach second floor, or to jump to get over a ditch. The Unity NavMesh system consists of the following pieces:",454],["\nNavMesh (short from Navigation Mesh) is a data structure which describes the walkable surfaces of the game world and allows to find path from one walkable location to another in the game world. The data structure is built, or baked, automatically from your level geometry.\n",454],["\nNavMesh Agent component help you to create characters which avoid each other while moving towards their goal. Agents reason about the game world using the NavMesh and they know how to avoid each other as well as moving obstacles.\n",454],["\nOff-Mesh Link component allows you to incorporate navigation shortcuts which cannot be represented using a walkable surface. For example, jumping over a ditch or a fence, or opening a door before walking through it, can be all described as Off-mesh links.\n",454],["\nNavMesh Obstacle component allows you to describe moving obstacles the agents should avoid while navigating the world. A barrel or a crate controlled by the physics system is a good example of an obstacle. While the obstacle is moving the agents do their best to avoid it, but once the obstacle becomes stationary it will carve a hole in the navmesh so that the agents can change their paths to steer around it, or if the stationary obstacle is blocking the path way, the agents can find a different route.\n",454],["Navigation Overview",455],["This section will dive into the details on building NavMeshes for your scene, creating NavMesh Agents, NavMesh Obstacles and Off-Mesh Links.",455],["Navigation and Pathfinding",456],["The Navigation system allows you to create characters that can intelligently move in the game world. The navigation system uses navigation meshes to reason about the environment. The navigation meshes are created automatically from your Scene geometry. Dynamic obstacles allow alter the navigation of the characters at runtime, and off-mesh links let you to build specific actions such as opening doors, or jumping down from a ledge. This section describes Unity's navigation and pathfinding in detail.",456],["Sub-State Machines",457],["It is common for a character to have complex actions that consist of a number of stages. Rather than handle the entire action with a single state, it makes sense to identify the separate stages and use a separate state for each. For example, a character may have an action called \"Trickshot\" where it crouches to take a steady aim, shoots and then stands up again.",457],["Although this is useful for control purposes, the downside is that the state machine will become large and unwieldy as more of these complex actions are added. You can simplify things somewhat just by separating the groups of states visually with empty space in the editor. However, Mecanim goes a step further than this by allowing you to collapse a group of states into a single named item in the state machine diagram. These collapsed groups of states are called Sub-state machines.",457],["You can create a sub-state machine by right clicking on an empty space within the Animator Controller window and selecting Create Sub-State Machine from the context menu. A sub-state machine is represented in the editor by an elongated hexagon to distinguish it from normal states.",457],["When you double-click the hexagon, the editor is cleared to let you edit the sub-state machine as though it were a completely separate state machine in its own right. The bar at the top of the window shows a \"breadcrumb trail\" to show which sub-state machine is currently being edited (and note that you can create sub-state machines within other sub-state machines, and so on). Clicking an item in the trail will focus the editor on that particular sub-state machine.",457],["External transitions",457],["As noted above, a sub-state machine is just a way of visually collapsing a group of states in the editor, so when you make a transition to a sub-state machine, you have to choose which of its states you want to connect to.",457],["You will notice an extra state in the sub-state machine whose name begins with Up.",457],["The Up state represents the \"outside world\", the state machine that encloses the sub-state machine in the view. If you add a transition from a state in sub-state machine to the Up state, you will be prompted to choose one of the states of the enclosing machine to connect to.",457],["High Level Networking Concepts",458],["This section covers general networking concepts that should be understood before developing a game with Unity's networking architecture.",458],["What is Networking?",458],["Networking is communication between two or more computers. A fundamental idea is that of the relationship between the client (the computer that is requesting information) and the server (the computer responding to the information request). The server can either be a dedicated host machine used by all clients, or simply a player machine running the game (client) but also acting as the server for other players. Once a server has been established and a client has connected to it, the two computers can exchange data as demanded by gameplay.",458],["Creating a network game requires a lot of attention to some very specific details. Even though network actions are easy to design and create in Unity, networking remains rather complex. A major design decision in Unity is to make networking as robust and flexible as possible. This means that you, as the game creator, are responsible for things that might be handled in an automatic but less robust way in other engines. The choices you make potentially have a major effect on the design of your game, so it is best to make them as early in the design stage as possible. Understanding networking concepts will help you plan your game design well and avoid problems during the implementation.",458],["Networking Approaches",458],["There are two common and proven approaches to structuring a network game which are known as Authoritative Server and Non-Authoritative Server. Both approaches rely on a server connecting clients and passing information between them. Both also offer privacy for end users since clients never actually connect directly with each other or have their IP addresses revealed to other clients.",458],["Authoritative Server",458],["The authoritative server approach requires the server to perform all world simulation, application of game rules and processing of input from the player clients. Each client sends their input (in the form of keystrokes or requested actions) to the server and continuously receives the current state of the game from the server. The client never makes any changes to the game state itself. Instead, it tells the server what it wants to do, and the server then handles the request and replies to the client to explain what happened as a result.",458],["Fundamentally, there is a layer of separation between what the player wants to do and what actually happens. This allows the server to listen to every client's requests before deciding how to update the game state.",458],["An advantage of this approach is that it makes cheating much harder for clients. For example, clients do not have the possibility of cheating by telling the server (and thereby other clients) that an enemy has been killed, since they don't get to make that decision by themselves. They can only tell the server that a weapon was fired and from there, it is up to the server to determine whether or not a kill was made.",458],["Another example of an authoritative server would be a multiplayer game that relies on physics. If each client is allowed to run its own physics simulation then small variations between clients could cause them to drift out of sync with each other gradually. However, if the simulation of all physics objects is handled on a central server then the updated state can be sent back to the clients, guaranteeing they are all consistent.",458],["A potential disadvantage with authoritative servers is the time it takes for the messages to travel over the network. If the player presses a control to move forward and it takes a tenth of a second for the response to return from the server then the delay will be perceptible to the player. One solution to this is to use so-called client-side prediction. The essence of this technique is that the client is allowed to update its own local version of the game state but it must be able to receive corrections from the server's authoritative version where necessary. Typically, this should only be used for simple game actions and not significant logical changes to game state. For example, it would be unwise to report to a player that an enemy has been killed only for the server to override this decision.",458],["Since client-side prediction is an advanced subject, we don't attempt to cover it in this guide but books and web resources are available if you want to investigate it further.",458],["An authoritative server has a greater processing overhead than a non-authoritative one. When the server is not required to handle all changes to game state, a lot of this load can be distributed between the clients.",458],["Non-Authoritative Server",458],["A non-authoritative server does not control the outcome of every user input. The clients themselves process user input and game logic locally, then send the result of any determined actions to the server. The server then synchronizes all actions with the world state. This is easier to implement from a design perspective, as the server really just relays messages between the clients and does no extra processing beyond what the clients do.",458],["There is no need for any kind of prediction methods as the clients handle all physics and events themselves and relay what happened to the server. They are the owners of their objects and are the only agents permitted to send local modifications of those objects over the network.",458],["Methods of Network Communication",458],["Now that we've covered the basic architectures of networked games, we will explore the lower-levels of how clients and servers can talk to each other.",458],["There are two relevant methods: Remote Procedure Calls and State Synchronization. It is not uncommon to use both methods at different points in any particular game.",458],["Remote Procedure Calls",458],["Remote Procedure Calls (RPCs) are used to invoke functions on other computers across the network, although the \"network\" can also mean the message channel between the client and server when they are both running on the same computer. Clients can send RPCs to the server, and the server can send RPCs to one or more clients. Most commonly, they are used for actions that happen infrequently. For example, if a client flips a switch to open a door, it can send an RPC to the server telling it that the door has been opened. The server can then send another RPC to all clients, invoking their local functions to open that same door. They are used for managing and executing individual events.",458],["State Synchronization",458],["State Synchronization is used to share data that is constantly changing. The best example of this would be a player's position in an action game. The player is always moving, running around, jumping, etc. All the other players on the network, even the ones that are not controlling this player locally, need to know where he is and what he is doing. By constantly relaying data about this player's position, the game can accurately represent that position to the other players.",458],["This kind of data is regularly and frequently sent across the network. Since this data is time-sensitive, and it requires time to travel across the network from one machine to another, it is important to reduce the amount of data that is sent as far as possible. In simpler terms, state synchronization naturally requires a lot of bandwidth, so you should aim to use as little bandwidth as possible.",458],["Connecting servers and clients together",458],["Connecting servers and clients together can be a complex process. Machines can have private or public IP addresses and they can have local or external firewalls blocking access. Unity networking aims to handle as many situations as possible but there is no universal solution.",458],["Private addresses are IP addresses which are not accessible directly from the internet (they are also called Network Address Translation or NAT addresses after the method used to implement them). Simply explained, the private address goes through a local router which translates the address into a public address. By doing this, many machines with private addresses can use a single public IP address to communicate with the internet. This is fine until someone elsewhere on the internet wants to initiate contact with one of the private addresses. The communication must happen via the public address of the router, which must then pass the message on to the private address. A technique called NAT punchthrough uses a shared server known as a facilitator to mediate communication in such a way that the private address can be reached from the public address. This works by having the private address first contact the facilitator, which \"punches\" a hole through the local router. The facilitator can now see the public IP address and port which the private address is using. Using this information, any machine on the internet can now connect directly with the otherwise unreachable private address. (Note that the details of NAT punchthrough are somewhat more complicated than this in practice.)",458],["Public addresses are more straightforward. Here, the main issue is that connectivity can be blocked by an internal or external firewall (an internal firewall is one that runs locally on the computer it is protecting). For an internal firewall, the user can be asked to remove restrictions from a particular port so as to make the game server accessible. An external firewall, by contrast, is not under the control of the users. Unity can attempt to use NAT punchthrough to get access through an external firewall but this technique is not guaranteed to succeed. Our testing suggests that it generally works in practice but there doesn't appear to be any formal research that confirms this finding.",458],["The connectivity issues just mentioned affect servers and clients differently. Client requests involve only outgoing network traffic which is relatively straightforward. If the client has a public address then this almost always works since outgoing traffic is typically only blocked on corporate networks that impose severe access restrictions. If the client has a private address it can connect to all servers except servers with private addresses which cannot do NAT punchthrough (more will be said about this later). The server end is more complicated because the server needs to be able to accept incoming connections from unknown sources. With a public address, the server needs to have the game port open to the internet (ie, not blocked by a firewall). or else it cannot accept any connections from clients and is thus unusable. If the server has a private address it must be able to do NAT punchthrough to allow connections and clients must also permit NAT punchthrough in order to connect to it.",458],["Unity provides tools to test all these different connectivity situations. When it is established that a connection can be made, there are two methods by which it can happen: direct connections (where a client needs to know the DNS name or IP address of the server) and connections via the Master Server. The Master Server allows servers to advertise their presence to clients which need not know anything about particular game servers beforehand.",458],["Minimizing Network Bandwidth",458],["When working with State Synchronization across multiple clients, you don't necessarily need to synchronize every single detail in order to make objects appear synchronized. For example, when synchronizing a character avatar you only need to send its position and rotation between clients. Even though the character itself is much more complex and might contain a deep Transform hierarchy, data about the entire hierarchy does not need to be shared.",458],["A lot of data in your game is effectively static, and clients need neither transfer it initially nor synchronize it. Using infrequent or one-time RPC calls should be sufficient to make a lot of your functionality work. Take advantage of the data you know will exist in every installation of your game and keep the client working by itself as much as possible. For example, you know that assets like textures and meshes exist on all installations and they usually don't change, so they will never have to be synchronized. This is a simple example but it should get you thinking about what data is absolutely critical to share from one client to another. This is the only data that you should ever share.",458],["It can be difficult to work out exactly what needs to be shared and what doesn't, especially if you have never made a network game before. Bear in mind that you can use a single RPC call with a level name to make all clients load the entire specified level and add their own networked elements automatically. Structuring your game to make each client as self-sufficient as possible will result in reduced bandwidth.",458],["Multiplayer Game Performance",458],["The physical location and performance of the server itself can greatly affect the playability of a game running on it. Clients which are located a continent away from the server may experience a great deal of lag. This is a physical limitation of the internet and the only real solution is to arrange for the server to be as close as possible to the clients who will use it, or at least on the same continent.",458],["Extra Resources",458],["We've collected the following links to additional resources about networking:-",458],["http://developer.valvesoftware.com/wiki/Source_Multiplayer_Networking",458],["http://developer.valvesoftware.com/wiki/Lag_Compensation",458],["http://developer.valvesoftware.com/wiki/Working_With_Prediction",458],["http://www.gamasutra.com/resource_guide/20020916/lambright_01.htm",458],["Master Server",459],["The Master Server is a meeting place that puts game instances in touch with the player clients who want to connect to them. It can also hide port numbers and IP addresses and perform other technical tasks that arise when setting up network connections, such as firewall handling and NAT punchthrough.",459],["Each individual running game instance provides a Game Type to the Master Server. When a player connects and queries the Master Server for their matching Game Type, the server responds with the list of running games along with the number of players in each and whether or not a password is needed to play. The two functions used to exchange this data are MasterServer.RegisterHost() for the Server, and MasterServer.RequestHostList() for the player client.",459],["When calling RegisterHost, you need to pass three arguments - gameTypeName (which is the previously mentioned Game Type), gameName and comment - for the host being registered. RequestHostList takes as an argument the gameTypeName of the hosts you are interested in connecting to. All the registered hosts of that type will then be returned to the requesting client. This is an asynchronous operation and the complete list can be retrieved with PollHostList() after it has arrived in full.",459],["The NAT punchthrough duty of the Master Server is actually handled by a separate process called the Facilitator but Unity's Master Server runs both services in parallel.",459],["The Game Type is an identifying name that should be unique for each game (although Unity does not offer any central registration system to guarantee this). It makes sense to choose a distinctive name that is unlikely to be used by anyone else. If there are several different versions of you game then you may need to warn a user that their client is not compatible with the running server version. The version information can be passed in the comment field (this is actually binary data and so the version can be passed in any desired form). The game name is simply the name of the particular game instance as supplied by whoever set it up.",459],["The comment field can be used in more advanced ways if the Master Server is suitably modified (see the Advanced section at the bottom of the page for further information on how to do this). For example, you could reserve the first ten bytes of the comment field for a password and then extract the password in the Master Server when it receives the host update. It can then reject the host update if a password check fails.",459],["Registering a game",459],["Before registering a game, it is important to enable or disable the NAT functionality depending on whether or not it is supported by the host; you can do this with the useNat parameter of Network.InitializeServer.",459],["A server might be started with code similar to this:-",459],["using UnityEngine;",459],["using UnityEngine.Network;",459],["using System.Collections;",459],["public class ExampleScript : MonoBehaviour {",459],["void OnGUI() {",459],["if (GUILayout.Button (\"Start Server\"))",459],["// Use NAT punchthrough if no public IP present",459],["Network.InitializeServer(32, 25002, !Network.HavePublicAddress());",459],["MasterServer.RegisterHost(\"MyUniqueGameType\", \"JohnDoes game\", \"l33t game for all\");",459],["C# script example",459],["function OnGUI() {",459],["if (GUILayout.Button (\"Start Server\"))",459],["// Use NAT punchthrough if no public IP present",459],["Network.InitializeServer(32, 25002, !Network.HavePublicAddress());",459],["MasterServer.RegisterHost(\"MyUniqueGameType\", \"JohnDoes game\", \"l33t game for all\");",459],["JS script example",459],["Here we just decide if NAT punchthrough is needed by checking whether or not the machine has a public address. There is a more sophisticated function available called Network.TestConnection which can tell you if the host machine can do NAT or not. It also does connectivity testing for public IP addresses to see if a firewall is blocking the game port. Machines which have public IP addresses always pass the NAT test but if the test fails then the host will not be able to connect to NAT clients. In such a case, the user should be informed that port forwarding must be enabled for the game to work. Domestic broadband connections will usually have a NAT address but will not be able to set up port forwarding (since they don't have a personal public IP address). In these cases, if the NAT test fails, the user should be informed that running a server is inadvisable given that only clients on the same local network will be able to connect.",459],["If a host enables NAT functionality without needing it then it will still be accessible. However, clients which cannot do NAT punchthrough might incorrectly think they cannot connect on the basis that the server has NAT enabled.",459],["Connecting to a game",459],["A HostData object is sent during host registrations or queries. It contains the following information about the host:-",459],["",459],["boolean useNat Indicates if the host uses NAT punchthrough. ",459],["String gameType The game type of the host. ",459],["String gameName The game name of the host. ",459],["int connectedPlayers The number of currently connected players/clients. ",459],["int playerLimit The maximum number of concurrent players/clients allowed. ",459],["String[] IP The internal IP address of the host. On a server with a public address the external and internal addresses are the same. This field is defined as an array since all the IP addresses associated with all the active interfaces of the machine need to be checked when connecting internally. ",459],["int port The port of the host. ",459],["boolean passwordProtected Indicates whether you need to supply a password to be able to connect to this host. ",459],["String comment Any comment which was set during host registration. ",459],["String guid The network GUID of the host. This is needed to connect using NAT punchthrough. ",459],["This information can be used by clients to see the connection capabilities of the hosts. When NAT is enabled you need to use the GUID of the host when connecting. This is automatically handled for you when the HostData is retrieved as you connect. The connection routine might look something like this:",459],["using UnityEngine;",459],["using UnityEngine.Network;",459],["using System.Collections;",459],["public class ExampleScript : MonoBehaviour {",459],["void Awake() {",459],["MasterServer.RequestHostList(\"MadBubbleSmashGame\");",459],["void OnGUI() {",459],["HostData[] data = MasterServer.PollHostList();",459],["// Go through all the hosts in the host list",459],["foreach (var element in data)",459],["GUILayout.BeginHorizontal();",459],["var name = element.gameName + \" \" + element.connectedPlayers + \" / \" + element.playerLimit;",459],["GUILayout.Label(name);",459],["GUILayout.Space(5);",459],["string hostInfo;",459],["hostInfo = \"[\";",459],["foreach (var host in element.ip)",459],["hostInfo = hostInfo + host + \":\" + element.port + \" \";",459],["hostInfo = hostInfo + \"]\";",459],["GUILayout.Label(hostInfo);",459],["GUILayout.Space(5);",459],["GUILayout.Label(element.comment);",459],["GUILayout.Space(5);",459],["GUILayout.FlexibleSpace();",459],["if (GUILayout.Button(\"Connect\"))",459],["// Connect to HostData struct, internally the correct method is used (GUID when using NAT).",459],["Network.Connect(element);",459],["GUILayout.EndHorizontal();",459],["C# script example",459],["function Awake() {",459],["MasterServer.RequestHostList(\"MadBubbleSmashGame\");",459],["function OnGUI() {",459],["var data : HostData[] = MasterServer.PollHostList();",459],["// Go through all the hosts in the host list",459],["for (var element in data)",459],["GUILayout.BeginHorizontal();",459],["var name = element.gameName + \" \" + element.connectedPlayers + \" / \" + element.playerLimit;",459],["GUILayout.Label(name);",459],["GUILayout.Space(5);",459],["var hostInfo;",459],["hostInfo = \"[\";",459],["for (var host in element.ip)",459],["hostInfo = hostInfo + host + \":\" + element.port + \" \";",459],["hostInfo = hostInfo + \"]\";",459],["GUILayout.Label(hostInfo);",459],["GUILayout.Space(5);",459],["GUILayout.Label(element.comment);",459],["GUILayout.Space(5);",459],["GUILayout.FlexibleSpace();",459],["if (GUILayout.Button(\"Connect\"))",459],["// Connect to HostData struct, internally the correct method is used (GUID when using NAT).",459],["Network.Connect(element);",459],["GUILayout.EndHorizontal();",459],["JS script example",459],["This example prints out all of the relevant host information returned by the Master Server. Other useful data like ping information or geographic location of hosts can be added to this.",459],["NAT punchthrough",459],["The availability of NAT punchthrough may determine whether or not a particular computer is suitable to use as a server. While some clients might be able to connect, there are others that might have trouble connecting to any NAT server.",459],["By default, NAT punchthrough is provided with the help of the Master Server but it need not be done this way. The Facilitator is the process that is actually used for the NAT punchthrough service. If two machines are connected to the Facilitator then it will appear as if they can both connect to each other as long as it uses the external IP and port. The Master Server is used to provide this external IP and port information which is otherwise hard to determine. That is why the Master Server and Facilitator are so tightly integrated. The Master Server and Facilitator have the same IP address by default, to change either one use MasterServer.ipAddress, MasterServer.port, Network.natFacilitatorIP and Network.natFacilitatorPort",459],["Advanced",459],["Unity Technologies also has a fully deployed Master Server available for testing purposes and this is actually the server that will be used by default. However, the source code is freely available for anyone to use and the server can be deployed on Windows, Linux and Mac OS. In addition to simply building the project from source, there might be cases where you want to modify the way in which the Master Server handles information and how it communicates. For example, you may be able to optimize the handling of host data or limit the number of clients returned on the host list. Such changes will require modifications to the source code; information about how to go about this can be found on the Master Server Build page.",459],["Building the Unity Networking Servers on your own",460],["The source code for all the individual networking servers can be downloaded from the Unity website. This includes the connection tester, facilitator, master server and proxy server.",460],["All source packages include the RakNet 3.732 networking library which handles the basic networking functions and provides plugins used by the networking servers.",460],["The packages include three different types of project files, ready for compilation:",460],["An Xcode 3.0 project for Mac OS X",460],["A Makefile for Linux and Mac OS X",460],["A Visual Studio 2008 solution",460],["The Xcode and Visual Studio projects can just be opened, compiled and built. To build with the Makefile just run \"make\". It should work with a standard compilation setup on Linux and Mac OS X, if you have gcc then it should work. On Linux you might need to install the ncurses library.",460],["Structure",460],["The Master Server",460],["The Master Server uses an internal database structure to keep track of host information.",460],["Hosts send messages with the RUM_UPDATE_OR_ADD_ROW message identifier and all their host information embedded. This is processed in the OnReceive() function in the LightweightDatabaseServer.cpp file. This is where all message initially appear and therefore a good place to start if you want to trace how a message is processed. A table is created within the database structure for each game type which is set when you use MasterServer.RegisterHost function. All game types are grouped together in a table, if the table does not exist it is dynamically created in the CreateDefaultTable() function.",460],["The host information data is modified by the master server. The IP and port of the game which is registering, as seen by the master server, is injected into the host data. This way we can for sure detect the correct external IP and port in cases where the host has a private address (NAT address). The IP and port in the host data sent by the game server is the private address and port and this is stored for later use. If the master server detects that a client is requesting the host data for a game server and the server has the same IP address then he uses the private address of the server instead of the external one. This is to handle cases where the client and server are on the same local network, using the same router with NAT addresses. Thus they will have the same external address and cannot connect to each other through it, they need to use the private addresses and those will work in this case.",460],["Clients send messages with the ID_DATABASE_QUERY_REQUEST message identifier and what game type they are looking for. The table or host list is fetched from the database structure and sent to the client. If it isn't found and empty host list is sent.",460],["All messages sent to the master server must contain version information which is checked in the CheckVersion() function. At the moment each version of Unity will set a new master server version internally and this is checked here. So if the master server communication routine will change at any point it will be able to detect older versions here and possibly refer to another version of the master server (if at all needed) or modify the processing of that message to account for differences.",460],["The Facilitator",460],["The facilitator uses the NAT punchthrough plugin from RakNet directly with no modifications. This is essentially just a peer listening on a port with the NAT punchthrough plugin loaded. When a server and a client with NAT addresses are both connected to this peer, they will be able to perform NAT punchthrough to connect to each other. When the Network.InitializeServer uses NAT, the connection is set up automatically for you.",460],["Minimizing Network Bandwidth",461],["Since network communication is potentially slow compared to other aspects of a game, it is important to reduce it to a minimum. It is therefore very important to consider how much data you are exchanging and how frequently the exchanges take place.",461],["How data is synchronized",461],["The amount of network bandwidth used depends heavily on whether you use the Unreliable or the Reliable Delta Compression mode to synchronize data (the mode is set from the Network View component).",461],["In Unreliable mode, the whole of the object being synchronized will be transmitted on each iteration of the network update loop. The frequency of this update is determined by the value of Network.sendRate, which is set to 15 updates per second by default. Unreliable mode ensures frequent updates but any dropped or delayed packets will simply be ignored. This is often the best synchronization mode to use when objects change state very frequently and the effect of a missed update is very short-lived. However, you should bear in mind the amount of data that might be sent during each update. For example, synchronizing a Transform involves transmitting nine float values (three Vector3s with three floats each), which equates to 36 Bytes per update. If the server is running with eight clients and using the default update frequency then it will receive 4,320 KBytes/s (8*36*15) or 34.6Kbits/s and transmit 30.2 KBytes/s (8*7*36*15) or 242Kbits/s. You can reduce the bandwidth consumption considerably by lowering the frequency of updates, but the default value of 15 is about right for a game where the action moves quickly.",461],["In Reliable Delta Compressed mode, the data is guaranteed to be sent reliably and arrive in the right order. If packets are lost then they get retransmitted and if they arrive out of order, they will be buffered until all packets in the sequence have arrived. Although this ensures that transmitted data is received correctly, the waiting and retransmission tend to increase bandwidth usage. However, the data is also delta compressed which means only the differences between the last state and the current state are transmitted. If the state is exactly the same then nothing is sent. The benefit of delta compression thus depends on how much the state changes and in which properties.",461],["What data is synchronized",461],["There is plenty of opportunity for creativity in designing the game so that the state appears to be the same on all clients even though it may not be, strictly. An example of this is where animations are synchronized. If an Animation component is observed by a Network View then its properties will be synchronized exactly, so the frames of animation will appear exactly the same on all clients. Although this may be desirable in some cases, typically it will be enough for the character to be seen as walking, running, jumping, etc. The animations can thus be crudely synchronized simply by sending an integer value to denote which animation sequence to play. This will save a great deal of bandwidth compared to synchronizing the whole Animation component.",461],["When to synchronize data",461],["It is often unnecessary to keep the game perfectly in sync on all clients, for example, in cases where the players are temporarily in different areas of the game world where they won't encounter each other. This can reduce the bandwidth as well as the load on the server since only the clients that can interact need to be kept in sync. This concept is sometimes referred to as Relevant Sets (ie, there is a subset of the total game that is relevant to any particular client at any particular time). Synchronizing clients according to their relevant sets can be handled with RPCs, since they can give greater control over the destination of a state update.",461],["Level loading",461],["When loading levels, it is seldom necessary to worry about the bandwidth being used since each client can simply wait until all the others have initialized the level to be played. Level loading can often involve transmitting even quite large data items (such as images or audio data).",461],["Network Instantiate",462],["The Network.Instantiate function offers a straightforward way to instantiate a prefab on all clients, similar to the effect of Object.Instantiate on a single client. The instantiating client is the one that controls the object (ie, the Input class is only accessible from scripts running on the client instance) but changes will be reflected across the network.",462],["The argument list for Network.Instantiate() is as follows:",462],["static function Instantiate (prefab : Object, position : Vector3, rotation : Quaternion, group : int) : Object",462],["As with Object.Instantiate, the first three parameters describe the prefab to be instantiated along with its desired position and rotation. The group parameter allows you to define subgroups of objects to control the filtering of messages and can be set to zero if filtering is not required (see the Communication Groups section below).",462],["Technical Details",462],["Behind the scenes, network instantiation is built around an RPC call which contains an identifier for the prefab along with the position and other details. The RPC call is always buffered in the same manner as other RPC calls, so that instantiated objects will appear on new clients when they connect. See the RPC page for further details about buffering.",462],["Communication Groups",462],["Communication groups can be used to select the clients that will receive particular messages. For example, two connected players might be in separate areas of the game world and may never be able to meet. There is thus no reason to transfer game state between the two player clients but you may still want to allow chat communication between them. In this case, instantiation would need to be restricted for gameplay objects but not for the objects that implement the chat feature and so they would be put in separate groups.",462],["Network Level Loading",463],["Below is a simple example of a way to load a level in a multiplayer game. It makes sure no network messages are being processed while the level is being loaded. It also makes sure no messages are sent, until everything is ready. Lastly, when the level is loaded it sends a message to all scripts so that they know the level is loaded and can react to that. The SetLevelPrefix function helps with keeping unwanted networks updates out of a new loaded level. Unwanted updates might be updates from the previous level for example. The example also uses groups to separate game data and level load communication into groups. Group 0 is used for game data traffic and group 1 for level loading. Group 0 is blocked while the level is being loaded but group 1 kept open, it could also ferry chat communication so that can stay open during level loading.",463],["using UnityEngine;",463],["using UnityEngine.Network;",463],["using System.Collections;",463],["[RequireComponent(NetworkView)]",463],["public class ExampleScript : MonoBehaviour {",463],["string[] supportedNetworkLevels  = new[]{ \"mylevel\" };",463],["string disconnectedLevel = \"loader\";",463],["int lastLevelPrefix = 0;",463],["NetworkView networkView;",463],["void Awake ()",463],["// Network level loading is done in a separate channel.",463],["DontDestroyOnLoad(this);",463],["networkView = new NetworkView ();",463],["networkView.group = 1;",463],["Application.LoadLevel(disconnectedLevel);",463],["void OnGUI ()",463],["if (Network.peerType != NetworkPeerType.Disconnected)",463],["GUILayout.BeginArea(Rect(0, Screen.height - 30, Screen.width, 30));",463],["GUILayout.BeginHorizontal();",463],["foreach (var level in supportedNetworkLevels)",463],["if (GUILayout.Button(level))",463],["Network.RemoveRPCsInGroup(0);",463],["Network.RemoveRPCsInGroup(1);",463],["networkView.RPC( \"LoadLevel\", RPCMode.AllBuffered, level, lastLevelPrefix + 1);",463],["GUILayout.FlexibleSpace();",463],["GUILayout.EndHorizontal();",463],["GUILayout.EndArea();",463],["[RPC]",463],["IEnumerator LoadLevel (string level, int levelPrefix)",463],["lastLevelPrefix = levelPrefix;",463],["// There is no reason to send any more data over the network on the default channel,",463],["// because we are about to load the level, thus all those objects will get deleted anyway",463],["Network.SetSendingEnabled(0, false);",463],["// We need to stop receiving because first the level must be loaded first.",463],["// Once the level is loaded, rpc's and other state update attached to objects in the level are allowed to fire",463],["Network.isMessageQueueRunning = false;",463],["// All network views loaded from a level will get a prefix into their NetworkViewID.",463],["// This will prevent old updates from clients leaking into a newly created scene.",463],["Network.SetLevelPrefix(levelPrefix);",463],["Application.LoadLevel(level);",463],["yield return;",463],["// Allow receiving data again",463],["Network.isMessageQueueRunning = true;",463],["// Now the level has been loaded and we can start sending out data to clients",463],["Network.SetSendingEnabled(0, true);",463],["var gameObjects = FindObjectsOfType(GameObject) as GameObject[];",463],["foreach (var go in gameObjects)",463],["go.SendMessage(\"OnNetworkLoadedLevel\", SendMessageOptions.DontRequireReceiver);",463],["void OnDisconnectedFromServer ()",463],["Application.LoadLevel(disconnectedLevel);",463],["C# example script",463],["var supportedNetworkLevels : String[] = [ \"mylevel\" ];",463],["var disconnectedLevel : String = \"loader\";",463],["private var lastLevelPrefix = 0;",463],["function Awake ()",463],["// Network level loading is done in a separate channel.",463],["DontDestroyOnLoad(this);",463],["networkView.group = 1;",463],["Application.LoadLevel(disconnectedLevel);",463],["function OnGUI ()",463],["if (Network.peerType != NetworkPeerType.Disconnected)",463],["GUILayout.BeginArea(Rect(0, Screen.height - 30, Screen.width, 30));",463],["GUILayout.BeginHorizontal();",463],["for (var level in supportedNetworkLevels)",463],["if (GUILayout.Button(level))",463],["Network.RemoveRPCsInGroup(0);",463],["Network.RemoveRPCsInGroup(1);",463],["networkView.RPC( \"LoadLevel\", RPCMode.AllBuffered, level, lastLevelPrefix + 1);",463],["GUILayout.FlexibleSpace();",463],["GUILayout.EndHorizontal();",463],["GUILayout.EndArea();",463],["@RPC",463],["function LoadLevel (level : String, levelPrefix : int)",463],["lastLevelPrefix = levelPrefix;",463],["// There is no reason to send any more data over the network on the default channel,",463],["// because we are about to load the level, thus all those objects will get deleted anyway",463],["Network.SetSendingEnabled(0, false);",463],["// We need to stop receiving because first the level must be loaded first.",463],["// Once the level is loaded, rpc's and other state update attached to objects in the level are allowed to fire",463],["Network.isMessageQueueRunning = false;",463],["// All network views loaded from a level will get a prefix into their NetworkViewID.",463],["// This will prevent old updates from clients leaking into a newly created scene.",463],["Network.SetLevelPrefix(levelPrefix);",463],["Application.LoadLevel(level);",463],["yield;",463],["// Allow receiving data again",463],["Network.isMessageQueueRunning = true;",463],["// Now the level has been loaded and we can start sending out data to clients",463],["Network.SetSendingEnabled(0, true);",463],["for (var go in FindObjectsOfType(GameObject))",463],["go.SendMessage(\"OnNetworkLoadedLevel\", SendMessageOptions.DontRequireReceiver);",463],["function OnDisconnectedFromServer ()",463],["Application.LoadLevel(disconnectedLevel);",463],["@script RequireComponent(NetworkView)",463],["JS example script",463],["Network Views",464],["Network Views are the main component involved in sharing data across the network. They allow two kinds of network communication: State Synchronization and Remote Procedure Calls.",464],["Network Views keep watch on particular objects to detect changes. These changes are then shared to the other clients on the network to ensure the change of state is noted by all of them. This concept is known as state synchronization and you can read about it further on the State Synchronization page.",464],["There are some situations where you would not want the overhead of synchronizing state between clients, for example, when sending out the position of a new object or respawned player. Since events like this are infrequent, it does not make sense to synchronize the state of the involved objects. Instead, you can use a remote procedure call to tell the clients or server to perform operations like this. More information about Remote Procedure Calls can be found on the RPC manual page.",464],["Technical Details",464],["A Network View is identified across the network by its NetworkViewID which is basically just a identifier which is negotiated to be unique among the networked machines. It is represented as a 128 bit number but is automatically compressed down to 16 bits when transferred over the network if possible.",464],["Each packet that arrives on the client side needs to be applied to a specific Network View as specified by the NetworkViewID. Using this, Unity can find the right Network View, unpack the data and apply the incoming packet to the Network View's observed object.",464],["More details about using Network Views in the Editor can be found on the Network View Component Reference page.",464],["If you use Network.Instantiate() to create your Networked objects, you do not need to worry about allocating Network Views and assigning them yourself appropriately. It will all work automatically behind the scenes.",464],["However, you can manually set the NetworkViewID values for each Network View by using Network.AllocateViewID. The Scripting Reference documentation shows an example of how an object can be instantiated manually on every client with an RPC function and then the NetworkViewID manually set with AllocateViewID.",464],["RPC Details",465],["Remote Procedure Calls (RPCs) let you call functions on a remote machine. Invoking an RPC is similar to calling a normal function and almost as easy but there are some important differences to understand.",465],["An RPC call can have as many parameters as you like but the network bandwidth involved will increase with the number and size of parameters. You should keep parameters to a minimum in order to get the best performance.",465],["Unlike a normal function call, an RPC needs an additional parameter to denote the recipients of the RPC request. There are several possible RPC call modes to cover all common use cases. For example, you can easily invoke the RPC function on all connected machines, on the server alone, on all clients but the one sending the RPC call or on a specific client.",465],["RPC calls are usually used to execute some event on all clients in the game or pass event information specifically between two parties, but you can be creative and use them however you like. For example, a server for a game which only starts after four clients have connected could send an RPC call to all clients as soon as the fourth one connects, thus starting the game. A client could send RPC calls to everyone to signal that he picked up an item. A server could send an RPC to a particular client to initialize him right after he connects, for example, to give him his player number, spawn location, team color, etc. A client could in turn send an RPC only to the server to specify his starting options, such as the color he prefers or the items he has bought.",465],["Using RPCs",465],["A function must be marked as an RPC before it can be invoked remotely. This is done by prefixing the function in the script with an RPC attribute:",465],["using UnityEngine;",465],["using System.Collections;",465],["public class ExampleScript : MonoBehaviour {",465],["[RPC]",465],["void PrintText (string text)",465],["Debug.Log(text);",465],["C# script example",465],["// All RPC calls need the @RPC attribute!",465],["@RPC",465],["function PrintText (text : String)",465],["Debug.Log(text);",465],["JS script example",465],["All network communication is handled by NetworkView components, so you must attach one to the object whose script declares the RPC functions before they can be called.",465],["Parameters",465],["You can use the following variable types as parameters to RPCs:-",465],["int",465],["float",465],["string",465],["NetworkPlayer",465],["NetworkViewID",465],["Vector3",465],["Quaternion",465],["For example, the following code invokes an RPC function with a single string parameter:",465],["using UnityEngine;",465],["using UnityEngine.Network;",465],["using System.Collections;",465],["public class ExampleScript : MonoBehaviour {",465],["NetworkView networkView;",465],["void Start() {",465],["networkView = new NetworkView ();",465],["networkView.RPC (\"PrintText\", RPCMode.All, \"Hello world\");",465],["C# script example",465],["networkView.RPC (\"PrintText\", RPCMode.All, \"Hello world\");",465],["JS script example",465],["The first parameter of RPC() is the name of the function to be invoked while the second determines the targets on which it will be invoked. In this case we invoke the RPC call on everyone who is connected to the server (but the call will not be buffered to wait for clients who connect later - see below for further details about buffering).",465],["All parameters after the first two are the ones that will be passed to the RPC function and be sent across the network. In this case, \"Hello World\" will be sent as a parameter and be passed as the text parameter in the PrintText function.",465],["You can also access an extra internal parameter, a NetworkMessageInfo struct which holds additional information, such as where the RPC call came from. This information will be passed automatically, so the PrintText function shown above will be can be declared as:",465],["using UnityEngine;",465],["using System.Collections;",465],["public class ExampleScript : MonoBehaviour {",465],["[RPC]",465],["void PrintText (string text, NetworkMessageInfo info)",465],["Debug.Log(text + \" from \" + info.sender);",465],["C# script example",465],["@RPC",465],["function PrintText (text : String, info : NetworkMessageInfo)",465],["Debug.Log(text + \" from \" + info.sender);",465],["JS script example",465],["...while being invoked the same way as before.",465],["As mentioned above, a Network View must be attached to any GameObject which has a script containing RPC functions. If you are using RPCs exclusively (ie, without state synchronisation) then the Network View's State Synchronization can be set to Off.",465],["RPC Buffer",465],["RPC calls can also be buffered. Buffered RPC calls are stored up and executed in the order they were issued for each new client that connects. This can be a useful way to ensure that a latecoming player gets all necessary information to start. A common scenario is that every player who joins a game should first load a specific level. You could send the details of this level to all connected players but also buffer it for any who join in the future. By doing this, you ensure that the new player receives the level information just as if he had been present from the start.",465],["You can also remove calls from the RPC buffer when necessary. Continuing the example above, the game may have moved on from the starting level by the time a new player joins, so you could remove the original buffered RPC and send a new one to request the new level.",465],["Social API",466],["Social API is Unity's point of access to social features, such as:",466],["User profiles",466],["Friends lists",466],["Achievements",466],["Statistics / Leaderboards",466],["It provides a unified interface to different social back-ends, such as XBox Live or GameCenter, and is meant to be used primarily by programmers on the game project.",466],["The Social API is mainly an asynchronous API, and the typical way to use it is by making a function call and registering for a callback to when that function completes. The asynchronous function may have side effects, such as populating certain state variables in the API, and the callback could contain data from the server to be processed.",466],["The Social class resides in the UnityEngine namespace and so is always available but the other Social API classes are kept in their own namespace, UnityEngine.SocialPlatforms. Furthermore, implementations of the Social API are in a sub-namespace, like SocialPlatforms.GameCenter.",466],["Here is an example (JavaScript) of how one might use the Social API:",466],["import UnityEngine.SocialPlatforms;",466],["function Start () {",466],["// Authenticate and register a ProcessAuthentication callback",466],["// This call needs to be made before we can proceed to other calls in the Social API",466],["Social.localUser.Authenticate (ProcessAuthentication);",466],["// This function gets called when Authenticate completes",466],["// Note that if the operation is successful, Social.localUser will contain data from the server.",466],["function ProcessAuthentication (success: boolean) {",466],["if (success) {",466],["Debug.Log (\"Authenticated, checking achievements\");",466],["// Request loaded achievements, and register a callback for processing them",466],["Social.LoadAchievements (ProcessLoadedAchievements);",466],["else",466],["Debug.Log (\"Failed to authenticate\");",466],["// This function gets called when the LoadAchievement call completes",466],["function ProcessLoadedAchievements (achievements: IAchievement[]) {",466],["if (achievements.Length == 0)",466],["Debug.Log (\"Error: no achievements found\");",466],["else",466],["Debug.Log (\"Got \" + achievements.Length + \" achievements\");",466],["// You can also call into the functions like this",466],["Social.ReportProgress (\"Achievement01\", 100.0, function(result) {",466],["if (result)",466],["Debug.Log (\"Successfully reported achievement progress\");",466],["else",466],["Debug.Log (\"Failed to report achievement\");",466],["});",466],["Here is the same example using C#.",466],["using UnityEngine;",466],["using UnityEngine.SocialPlatforms;",466],["public class SocialExample : MonoBehaviour {",466],["void Start () {",466],["// Authenticate and register a ProcessAuthentication callback",466],["// This call needs to be made before we can proceed to other calls in the Social API",466],["Social.localUser.Authenticate (ProcessAuthentication);",466],["// This function gets called when Authenticate completes",466],["// Note that if the operation is successful, Social.localUser will contain data from the server.",466],["void ProcessAuthentication (bool success) {",466],["if (success) {",466],["Debug.Log (\"Authenticated, checking achievements\");",466],["// Request loaded achievements, and register a callback for processing them",466],["Social.LoadAchievements (ProcessLoadedAchievements);",466],["else",466],["Debug.Log (\"Failed to authenticate\");",466],["// This function gets called when the LoadAchievement call completes",466],["void ProcessLoadedAchievements (IAchievement[] achievements) {",466],["if (achievements.Length == 0)",466],["Debug.Log (\"Error: no achievements found\");",466],["else",466],["Debug.Log (\"Got \" + achievements.Length + \" achievements\");",466],["// You can also call into the functions like this",466],["Social.ReportProgress (\"Achievement01\", 100.0, result => {",466],["if (result)",466],["Debug.Log (\"Successfully reported achievement progress\");",466],["else",466],["Debug.Log (\"Failed to report achievement\");",466],["});",466],["For more info on the Social API, check out the Social API Scripting Reference",466],["State Synchronization Details",467],["You can enable State Synchronization for a given Network View by choosing either Reliable Delta Compressed or Unreliable from the State Synchronization drop-down. You must then choose what kind of data will be synchronized using the Observed property.",467],["Unity can synchronize Transform, Animation, Rigidbody and MonoBehaviour components.",467],["Transforms are serialized by storing position, rotation and scale. Parenting information is not transferred over the network.",467],["Animation serializes each running animation state, that is the time, weight, speed and enabled properties.",467],["Rigidbody serializes position, rotation, velocity and angular velocity.",467],["Scripts (MonoBehaviours) call the function OnSerializeNetworkView().",467],["Reliability and bandwidth",467],["Network Views currently support two reliability levels Reliable Delta Compressed and Unreliable.",467],["Both have their advantages and disadvantages, and the specific details of the game will determine which is the best to use.",467],["For additional information about minimizing bandwidth, please read the Minimizing Bandwidth page.",467],["Reliable Delta Compressed",467],["Reliable Delta Compressed mode will automatically compare the data that was last received by the client to the current state. If no data has changed since the last update then no data will be sent. However, the data will be compared on a per property basis. For example, if the Transform's position has changed but its rotation has not then only the position will be sent across the network. Bandwidth is saved by transmitting only the changed data.",467],["Unity will also ensure that every UDP packet arrives reliably by resending it until receipt is determined. This means that if a packet is dropped, any packets sent later will not be applied until the dropped packet is re-sent and received. Until then, all later packets will be kept waiting in a buffer.",467],["Unreliable",467],["In Unreliable mode, Unity will send packets without checking that they have been received. This means that it doesn't know which information has been received and so it is not safe to send only the changed data - the whole state will be sent with each update.",467],["Deciding which method to use",467],["The Network layer uses UDP, which is an unreliable, unordered protocol but it can used to send ordered packets reliably, just like TCP does. To do this, Unity internally uses ACKs and NACKs to control packet transmission, ensuring no packets are dropped. The downside to using reliable ordered packets is that if a packet is dropped or delayed, everything stops until that packet has arrived safely. This can cause transmission delays where there is significant network lag.",467],["Unreliable transmission is useful when you know that data will change every frame anyway. For example, in a racing game, you can practically rely that the player's car is always moving, so the effects of a missed packet will soon be fixed by the next one.",467],["In general, you should use Unreliable sending where quick, frequent updates are more important than missed packets. Conversely, when data doesn't change so frequently, you can use reliable delta compression to save bandwidth.",467],["Prediction",467],["When the server has full authority over the world state, the clients only change the game state according to updates they receive from the server. One problem with this is that the delay introduced by waiting for the server to respond can affect gameplay. For example, when a player presses a key to move forward, he won't actually move until the updated state is received from the server. This delay depends on the latency of the connection so the worse the connection the less snappy the control system becomes.",467],["One possible solution to this is Client-side Prediction which means the client predicts the expected movement update from the server by using approximately the same internal model. So the player responds immediately to input but the server sees its position from the last update. When the state update finally arrives from the server, the client will compare what he predicted with what actually happened. This might differ because the server might know more about the environment around the player, the client just knows what he needs to know. Errors in prediction are corrected as they happen and if they are corrected continuously then the result will smoother and less noticeable.",467],["Dead reckoning or interpolation/extrapolation",467],["It is possible to apply the basic principle of client-side prediction to the opponents of the player. Extrapolation is the process of storing the last few known values of position, velocity and direction for an opponent and use these to predict where he should be in the immediate future. When the next state update finally arrives with the correct position, the client state will be updated with the exact information, which may make the character jump suddenly if the prediction was bad. In FPS games the behavior of players can be very erratic so this kind of prediction has limited success. If the lag gets high enough the opponent will jump severely as the prediction errors accumulate.",467],["Interpolation can be used when packets get dropped on the way to the client. This would normally cause the NPC's movement to pause and then jump to the newest position when the new packet finally arrives. By delaying the world state by some set amount of time (like 100 ms) and then interpolating between the last known position and the new one, the movement between these two points, where packets were dropped, will be smooth.",467],["Networking Elements in Unity",468],["Unity's native networking supports everything discussed on the previous page. Server creation and client connection, sharing data between connected clients, determining which player controls which objects, and punching through network configuration variations are all supported out of the box. This page will walk you through the Unity-specific implementation of these networking practices.",468],["Creating a Server",468],["Before you can begin playing a networked game, you have to determine the different computers you will be communicating with. To do this, you have to create a server. This can be a machine that is also running the game or it can be a dedicated machine that is not participating in the game. To create the server, you simply call Network.InitializeServer() from a script. When you want to connect to an existing server as a client, you call Network.Connect() instead.",468],["In general, you will find it very useful to familiarize yourself with the entire Network class.",468],["Communicating using Network Views",468],["The Network View is a Component that sends data across the network. Network Views make your GameObject capable of sending data using RPC calls or State Synchronization. The way you use Network Views will determine how your game's networking behaviors will work. Network Views have few options, but they are incredibly important for your networked game.",468],["For more information on using Network Views, please read the Network View Guide page and Component Reference page.",468],["Remote Procedure Calls",468],["Remote Procedure Calls (RPCs) are functions declared in scripts that are attached to a GameObject that contains a Network View.",468],["The Network View must point to the script which contains the RPC function. The RPC function can then be called from any script within that GameObject.",468],["For more information on using RPCs in Unity, please read the RPC Details page.",468],["State Synchronization",468],["State Synchronization is the continual sharing of data across all game clients. This way a player's position can be synchronized over all clients, so it seems it is controlled locally when data is actually being delivered over a network. To synchronize state within a GameObject you just need to add a NetworkView to that object and tell it what to observe. The observed data is then synchronized across all clients in the game.",468],["For more information on using State Synchronization in Unity, please read the State Synchronization page.",468],["Network.Instantiate()",468],["Network.Instantiate() lets you instantiate a prefab on all clients in a natural and easy way. Essentially this is an Instantiate() call, but it performs the instantiation on all clients.",468],["Internally Network.Instantiate is simply a buffered RPC call which is executed on all clients (also locally). It allocates a NetworkViewID and assigns it to the instantiated prefab which makes sure it synchronizes across all clients correctly.",468],["For more information please read the Network Instantiate page.",468],["NetworkLevelLoad()",468],["Dealing with sharing data, state of client players, and loading levels can be a bit overwhelming. The Network Level Load page contains a helpful example for managing this task.",468],["Master Server",468],["The Master Server helps you match games. When you start a server you connect to the master server, and it provides a list of all the active servers.",468],["The Master Server is a meeting place for servers and clients where servers are advertised and compatible clients can connect to running games. This prevents the need for fiddling with IP addresses for all parties involved. It can even help users host games without them needing to mess with their routers where, under normal circumstances, that would be required. It can help clients bypass the server's firewall and get to private IP addresses which are normally not accessible through the public internet. This is done with help from a facilitator which facilitates connection establishment.",468],["For more information please read the Master Server page.",468],["Minimizing Bandwidth",468],["Using the minimum amount of bandwidth to make your game run correctly is essential. There are different methods for sending data, different techniques for deciding what or when to send and other tricks at your disposal.",468],["For tips and tricks to reduce bandwidth usage, please read the Minimizing Bandwith page.",468],["Debugging Networked Games",468],["Unity comes with several facilities to help you debug your Networked game.",468],["The Network Manager can be used for logging all incoming and outgoing network traffic.",468],["Using the Inspector and Hierarchy View effectively you can track object creation and inspect view id's etc.",468],["You can launch Unity two times on the same machine, and open different projects in each. On Windows, this can be done by just launching another Unity instance and opening the project from the project wizard. On Mac OS X, multiple Unity instances can be opened from the terminal, and a -projectPath argument can be specified:",468],["/Applications/Unity/Unity.app/Contents/MacOS/Unity -projectPath \"/Users/MyUser/MyProjectFolder/\"",468],["/Applications/Unity/Unity.app/Contents/MacOS/Unity -projectPath \"/Users/MyUser/MyOtherProjectFolder/\"",468],["Make sure you make the player run in the background when debugging networking because, for example, if you have two instances running at once, one of them doesn't have focus. This will break the networking loop and cause undesirable results. You can enable this in Edit-&gt;Project Settings-&gt;Player in the editor or with Application.runInBackground",468],["Network Emulation",469],["As part of Unity's Networking feature set, you can choose to emulate slower internet connection speeds to test out your game experience for users in low-bandwidth areas.",469],["To enable Network emulation, go to Edit-&gt;Network Emulation, and choose your desired connection speed emulation.",469],["Technical Details",469],["Network emulation delays the sending of packets in networking traffic for the Network and NetworkView classes. The ping is artificially inflated for all options, the inflation value increasing as emulated connection speed gets slower. On the Dial-Up setting, packet dropping and variance is also introduced to simulate the worst possible connection ever. Emulation will persist whether you are serving the role of Server or Client.",469],["Network emulation only affects the Network and NetworkView classes, and will not alter or emulate specialized networking code written using .NET sockets.",469],["Network Reference Guide",470],["Networking is a very large, detailed topic. In Unity, it is extremely simple to create network functionality. However, it is still best to understand the breadth and depth involved with creating any kind of network game. This section explains the fundamentals of networking and the Unity-specific implementations of these concepts. If you are new to networking then it is highly recommended that you read this guide in detail before attempting to create a network game.",470],["The High Level Overview is a good place to start or to refresh your knowledge of networking in general. From there, the Unity Networking Elements page takes the discussion to Unity's implementation of the general concepts.",470],["Unity makes extensive use of the Network View component to share data over networks and so it is very important to understand how this operates. One of the functions provided by Network Views is Remote Procedure Calls or RPC. This enables you to call a function on one or more remote machines which may be clients or servers.",470],["Regarding the maintenance of information between networked computers, State Synchronization is a method of regularly updating a specific set of data across two or more game instances running on the network. Another subject is tracking which computer owns or controls which objects in the shared environment. Network Instantiation can be used to handle this task, although there are alternatives you can use when you need more control.",470],["Discovering a computer is sometimes a matter of someone setting up a server machine and then inviting other players directly to participate. Where games offer anonymous or mass participation, a Master Server can be used as a place to advertise a game session and allow people to join. A master server can also use a technique called NAT punchthrough to ensure players can always connect, even when firewalls are in operation.",470],["Reducing the amount of data transferred between computers will tend to improve performance; the page on minimizing bandwidth gives advice on how to achieve these optimizations.",470],["On mobile devices, the Unity networking API is much the same as on desktop machines and so networked games will often work with little or no modification. The Mobile Networking page addresses some of the issues and performance considerations that do occur with mobile devices.",470],["What is a Null Reference Exception?",471],["A NullReferenceException happens when you try to access a reference variable that isn't referencing any object.  If a reference variable isn't referencing an object, then it'll be treated as null.  The run-time will tell you that you are trying to access an object, when the variable is null by issuing a NullReferenceException.",471],["Reference variables in c# and JavaScript are similar in concept to pointers in C and C++.  Reference types default to null to indicate that they are not referencing any object. Hence, if you try and access the object that is being referenced and there isn't one, you will get a NullReferenceException.",471],["When you get a NullReferenceException in your code it means that you have forgotten to set a variable before using it.  The error message will look something like:",471],["NullReferenceException: Object reference not set to an instance of an object",471],["at Example.Start () [0x0000b] in /Unity/projects/nre/Assets/Example.cs:10",471],["This error message says that a NullReferenceException happened on line 10 of the script file Example.cs.  Also, the message says that the exception happened inside the Start() function.  This makes the Null Reference Exception easy to find and fix.  In this example, the code is:",471],["//c# example",471],["using UnityEngine;",471],["using System.Collections;",471],["public class Example : MonoBehaviour {",471],["// Use this for initialization",471],["void Start () {",471],["GameObject go = GameObject.Find(\"wibble\");",471],["Debug.Log(go.name);",471],["The code simply looks for a game object called \"wibble\".  In this example there is no game object with that name, so the Find() function returns null.  On the next line (line 9) we use the go variable and try and print out the name of the game object it references.  Because we are accessing a game object that doesn't exist the run-time gives us a NullReferenceException",471],["Null Checks",471],["Although it can be frustrating when this happens it just means the script needs to be more careful.  The solution in this simple example is to change the code like this:",471],["using UnityEngine;",471],["using System.Collections;",471],["public class Example : MonoBehaviour {",471],["void Start () {",471],["GameObject go = GameObject.Find(\"wibble\");",471],["if (go) {",471],["Debug.Log(go.name);",471],["} else {",471],["Debug.Log(\"No game object called wibble found\");",471],["Now, before we try and do anything with the go variable, we check to see that it is not null.  If it it null, then we display a message.",471],["Try/Catch Blocks",471],["Another cause for NullReferenceException is to use a variable that should be initialised in the Inspector.  If you forget to do this, then the variable will be null.  A different way to deal with NullReferenceException is to use try/catch block.  For example, this code:",471],["using UnityEngine;",471],["using System;",471],["using System.Collections;",471],["public class Example2 : MonoBehaviour {",471],["public Light myLight; // set in the inspector",471],["void Start () {",471],["try {",471],["myLight.color = Color.yellow;",471],["catch (NullReferenceException ex) {",471],["Debug.Log(\"myLight was not set in the inspector\");",471],["In this code example, the variable called myLight is a Light which should be set in the Inspector window.  If this variable is not set, then it will default to null.  Attempting to change the color of the light in the try block causes a NullReferenceException which is picked up by the catch block.  The catch block displays a message which might be more helpful to artists and game designers, and reminds them to set the light in the inspector.",471],["Summary",471],["NullReferenceException happens when your script code tries to use a variable which isn't set (referencing) and object.",471],["The error message that appears tells you a great deal about where in the code the problem happens.",471],["NullReferenceException can be avoided by writing code that checks for null before accessing an object, or uses try/catch blocks.",471],["Using an Oblique Frustum",472],["By default, the view frustum is arranged symmetrically around the camera's centre line but it doesn't necessarily need to be. The frustum can be made \"oblique\", which means that one side is at a smaller angle to the centre line than the opposite side. The effect is rather like taking a printed photograph and cutting one edge off. This makes the perspective on one side of the image seem more condensed giving the impression that the viewer is very close to the object visible at that edge. An example of how this can be used is a car racing game where the frustum might be flattened at its bottom edge. This would make the viewer seem closer to the road, accentuating the feeling of speed.",472],["While the camera class doesn't have functions to set the obliqueness of the frustum, it can be done quite easily by altering the projection matrix:",472],["using UnityEngine;",472],["using System.Collections;",472],["public class ExampleScript : MonoBehaviour {",472],["void SetObliqueness(float horizObl, float vertObl) {",472],["Matrix4x4 mat  = Camera.main.projectionMatrix;",472],["mat[0, 2] = horizObl;",472],["mat[1, 2] = vertObl;",472],["Camera.main.projectionMatrix = mat;",472],["C# script example",472],["function SetObliqueness(horizObl: float, vertObl: float) {",472],["var mat: Matrix4x4 = camera.projectionMatrix;",472],["mat[0, 2] = horizObl;",472],["mat[1, 2] = vertObl;",472],["camera.projectionMatrix = mat;",472],["JS script example",472],["Mercifully, it is not necessary to understand how the projection matrix works to make use of this. The horizObl and vertObl values set the amount of horizontal and vertical obliqueness, respectively. A value of zero indicates no obliqueness. A positive value shifts the frustum rightwards or upwards, thereby flattening the left or bottom side. A negative value shifts leftwards or downwards and consequently flattens the right or top side of the frustum. The effect can be seen directly if this script is added to a camera and the game is switched to the scene view while the game runs; the wireframe depiction of the camera's frustum will change as you vary the values of horizObl and vertObl in the inspector. A value of 1 or -1 in either variable indicates that one side of the frustum is completely flat against the centreline. It is possible although seldom necessary to use values outside this range.",472],["Occlusion Culling",473],["Occlusion Culling is a feature that disables rendering of objects when they are not currently seen by the camera because they are obscured by other objects. This does not happen automatically in 3D computer graphics since most of the time objects farthest away from the camera are drawn first and closer objects are drawn over the top of them (this is called \"overdraw\"). Occlusion Culling is different from Frustum Culling. Frustum Culling only disables the renderers for objects that are outside the camera's viewing area but does not disable anything hidden from view by overdraw. Note that when you use Occlusion Culling you will still benefit from Frustum Culling.",473],["The occlusion culling process will go through the scene using a virtual camera to build a hierarchy of potentially visible sets of objects. This data is used at runtime by each camera to identify what is visible and what is not. Equipped with this information, Unity will ensure only visible objects get sent to be rendered. This reduces the number of draw calls and increases the performance of the game.",473],["The data for occlusion culling is composed of cells. Each cell is a subdivision of the entire bounding volume of the scene. More specifically the cells form a binary tree. Occlusion Culling uses two trees, one for View Cells (Static Objects) and the other for Target Cells (Moving Objects). View Cells map to a list of indices that define the visible static objects which gives more accurate culling results for static objects.",473],["It is important to keep this in mind when creating your objects because you need a good balance between the size of your objects and the size of the cells. Ideally, you shouldn't have cells that are too small in comparison with your objects but equally you shouldn't have objects that cover many cells. You can sometimes improve the culling by breaking large objects into smaller pieces. However, you can still merge small objects together to reduce draw calls and, as long as they all belong to the same cell, occlusion culling will not be affected. The collection of cells and the visibility information that determines which cells are visible from any other cell is known as a PVS (Potentially Visible Set).",473],["Setting up Occlusion Culling",473],["In order to use Occlusion Culling, there is some manual setup involved. First, your level geometry must be broken into sensibly sized pieces. It is also helpful to lay out your levels into small, well defined areas that are occluded from each other by large objects such as walls, buildings, etc. The idea here is that each individual mesh will be turned on or off based on the occlusion data. So if you have one object that contains all the furniture in your room then either all or none of the entire set of furniture will be culled. This doesn't make nearly as much sense as making each piece of furniture its own mesh, so each can individually be culled based on the camera's view point.",473],["You need to tag all scene objects that you want to be part of the occlusion to Occluder Static in the Inspector. The fastest way to do this is to multi-select the objects you want to be included in occlusion calculations, and mark them as Occluder Static and Occludee Static.",473],["When should you use Occludee Static? Transparent objects that do not occlude, as well as small objects that are unlikely to occlude other things, should be marked as Occludees, but not Occluders. This means they will be considered in occlusion by other objects, but will not be considered as occluders themselves, which will help reduce computation.",473],["Occlusion Culling Window",473],["For most operations dealing with Occlusion Culling, you should use the Occlusion Culling Window (Window-&gt;Occlusion Culling)",473],["In the Occlusion Culling Window, you can work with occluder meshes, and Occlusion Areas.",473],["If you are in the Object tab of the Occlusion Culling Window and have a Mesh Renderer selected in the scene, you can modify the relevant Static flags:",473],["If you are in the Object tab of the Occlusion Culling Window and have an Occlusion Area selected, you can work with relevant OcclusionArea properties (for more details go to the Occlusion Area section)",473],["NOTE: By default if you don't create any occlusion areas, occlusion culling will be applied to the whole scene.",473],["NOTE: Whenever your camera is outside occlusion areas, occlusion culling will not be applied. It is important to set up your Occlusion Areas to cover the places where the camera can potentially be, but making the areas too large incurs a cost during baking.",473],["Occlusion Culling - Bake",473],["Properties",473],["Property: Function: ",473],["Technique Select between the types of occlusion culling baking. ",473],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PVS only Only static objects will be occlusion culled. Dynamic objects will be culled based on the view frustrum only. This technique has the smallest overhead on the CPU, but since dynamic objects are not culled, it is only recommended for games with few moving objects and characters. Since all visibility is precomputed, you cannot open or close portals at runtime. ",473],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PVS and dynamic objects Static objects are culled using precomputed visibility. Dynamic objects are culled using portal culling. This technique is a good balance between runtime overhead and culling efficiency. Since all visibility is precomputed, you cannot open or close a portal at runtime. ",473],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Automatic Portal Generation Portals are generated automatically. Static and dynamic objects are culled through portals. This allows you to open and close portals at runtime. This technique will cull objects most accurately, but also has the most performance overhead on the CPU. ",473],["View Cell Size Size of each view area cell. A smaller value produces more accurate occlusion culling. The value is a tradeoff between occlusion accuracy and storage size. ",473],["Near Clip Plane Near Clip Plane should be set to the smallest near clip plane that will be used in the game for all the cameras. ",473],["Far Clip Plane Far Clip Plane used to cull the objects. Any object whose distance is greater than this value will be occluded automatically. (Should be set to the largest far clip plane that will be used in the game of all the cameras). ",473],["Memory limit This is a hint for the PVS-based baking, not available in Automatic Portal Generation mode. ",473],["When you have finished tweaking these values click on the Bake Button to start processing the Occlusion Culling data. If you are not satisfied with the results, click on the Clear button to remove previously calculated data.",473],["Occlusion Culling - Visualization",473],["The near and far planes define a virtual camera that is used to calculate the occlusion data. If you have several cameras with different near or far planes, you should use the smallest near plane and the largest far plane distance of all cameras for correct inclusion of objects.",473],["All the objects in the scene affect the size of the bounding volume so try to keep them all within the visible bounds of the scene.",473],["When you're ready to generate the occlusion data, click the Bake button. Remember to choose the Memory Limit in the Bake tab. Lower values make the generation quicker and less precise, higher values are to be used for production quality closer to release.",473],["Bear in mind that the time taken to build the occlusion data will depend on the cell levels, the data size and the quality you have chosen. Unity will show the status of the PVS generation at the bottom of the main window.",473],["After the processing is done, you should see some colorful cubes in the View Area. The colored areas are regions that share the same occlusion data.",473],["Click on Clear if you want to remove all the pre-calculated data for Occlusion Culling.",473],["Step-by-Step Guide to Online Activation of Unity 4.0",474],["Online activation is the easiest and fastest way to get up and running with Unity. Below is a step-by-step guide on how to activate Unity online.",474],["Download and install the Unity Editor. The latest version of Unity can be found here.",474],["Fire up the Editor from your Applications folder on OS X or the shortcut in the Start Menu on Windows.",474],["You will be faced with a window titled 'Choose a version of Unity'. Select the version of Unity you wish to activate and click 'OK'.",474],["To activate an existing Unity 4.x Serial number generated by the Store or a member of our Sales Team, check the 'Activate an existing serial' box and enter the appropriate Serial number. Once the Serial number has been entered your license Type will be displayed on-screen.",474],["To Trial Unity Pro for 30 days Free-Of-Charge, check the 'Activate your free 30-day Unity Pro trial' box.",474],["To activate the Free version of Unity, check the 'Activating Unity Free' box.",474],["Next, you will encounter the 'Unity Account' window. Here you will need to enter your Unity Developer Network account credentials. (If you don’t have an existing account or have forgotten your password, simply click the respective 'Create account' and 'Forgot your password?' button and links. Follow the onscreen prompts to create or retrieve your account.) Once your credentials are entered you can proceed by clicking 'OK'.",474],["You will now be able to proceed to the Unity Editor by clicking the 'Start using Unity' button.",474],["For any further assistance, contact support@unity3d.com.",474],["Optimizing Graphics Performance",475],["Good performance is critical to the success of many games. Below are some simple guidelines for maximizing the speed of your game's graphical rendering.",475],["Where are the graphics costs",475],["The graphical parts of your game can primarily cost on two systems of the computer: the GPU or the CPU. The first rule of any optimization is to find where the performance problem is; because strategies for optimizing for GPU vs. CPU are quite different (and can even be opposite - it's quite common to make GPU do more work while optimizing for CPU, and vice versa).",475],["Typical bottlenecks and ways to check for them:",475],["GPU is often limited by fillrate or memory bandwidth.",475],["Does running the game at lower display resolution make it faster? If so, you're most likely limited by fillrate on the GPU.",475],["CPU is often limited by the number of batches that need to be rendered.",475],["Check \"batches\" in Rendering Statistics window.",475],["Of course, these are only the rules of thumb; the bottleneck could as well be somewhere else. Less typical bottlenecks:",475],["Rendering is not a problem, neither on the GPU nor the CPU! For example, your scripts or physics might be the actual problem. Use Profiler to figure this out.",475],["GPU has too many vertices to process. How many vertices are \"ok\" depends on the GPU and the complexity of vertex shaders. Typical figures are \"not more than 100 thousand\" on mobile, and \"not more than several million\" on PC.",475],["CPU has too many vertices to process, for things that do vertex processing on the CPU. This could be skinned meshes, cloth simulation, particles etc.",475],["CPU optimization",475],["In order to render any object on the screen, the CPU has some work to do - things like figuring out which lights affect that object, setting up the shader &amp; shader parameters, sending drawing commands to the graphics driver, which then prepares the commands to be sent off to the graphics card. All this \"per object\" CPU cost is not very cheap, so if you have lots of visible objects, it can add up.",475],["So for example, if you have a thousand triangles, it will be much, much cheaper if they are all in one mesh, instead of having a thousand",475],["individual meshes one triangle each. The cost of both scenarios on the GPU will be very similar, but the work done by the CPU to render a thousand objects (instead of one) will be significant.",475],["In order to make CPU do less work, it's good to reduce the visible object count:",475],["Combine close objects together, either manually or using Unity's draw call batching.",475],["Use less materials in your objects, by putting separate textures into a larger texture atlas and so on.",475],["Use less things that cause objects to be rendered multiple times (reflections, shadows, per-pixel lights etc., see below).",475],["Combine objects together so that each mesh has at least several hundred triangles and uses only one Material for the entire mesh. It is important to understand that combining two objects which don't share a material does not give you any performance increase at all. The most common reason for having multiple materials is that two meshes don't share the same textures, so to optimize CPU performance, you should ensure that any objects you combine share the same textures.",475],["However, when using many pixel lights in the Forward rendering path, there are situations where combining objects may not make sense, as explained below.",475],["GPU: Optimizing Model Geometry",475],["When optimizing the geometry of a model, there are two basic rules:",475],["Don't use any more triangles than necessary",475],["Try to keep the number of UV mapping seams and hard edges (doubled-up vertices) as low as possible",475],["Note that the actual number of vertices that graphics hardware has to process is usually not the same as the number reported by a 3D application. Modeling applications usually display the geometric vertex count, i.e. the number of distinct corner points that make up a model. For a graphics card, however, some geometric vertices will need to be split into two or more logical vertices for rendering purposes. A vertex must be split if it has multiple normals, UV coordinates or vertex colors. Consequently, the vertex count in Unity is invariably higher than the count given by the 3D application.",475],["While the amount of geometry in the models is mostly relevant for the GPU, some features in Unity also process models on the CPU, for example mesh skinning.",475],["Lighting Performance",475],["Lighting which is not computed at all is always the fastest! Use Lightmapping to \"bake\" static lighting just once, instead of computing it each frame. The process of generating a lightmapped environment takes only a little longer than just placing a light in the scene in Unity, but:",475],["It is going to run a lot faster (2-3 times for 2 per-pixel lights)",475],["And it will look a lot better since you can bake global illumination and the lightmapper can smooth the results",475],["In a lot of cases there can be simple tricks possible in shaders and content, instead of adding more lights all over the place. For example, instead of adding a light that shines straight into the camera to get \"rim lighting\" effect, consider adding a dedicated \"rim lighting\" computation into your shaders directly.",475],["Lights in forward rendering",475],["Per-pixel dynamic lighting will add significant rendering overhead to every affected pixel and can lead to objects being rendered in multiple passes. On less powerful devices, like mobile or low-end PC GPUs, avoid having more than one Pixel Light illuminating any single object, and use lightmaps to light static objects instead of having their lighting calculated every frame. Per-vertex dynamic lighting can add significant cost to vertex transformations. Try to avoid situations where multiple lights illuminate any given object.",475],["If you use pixel lighting then each mesh has to be rendered as many times as there are pixel lights illuminating it. If you combine two meshes that are very far apart, it will increase the effective size of the combined object. All pixel lights that illuminate any part of this combined object will be taken into account during rendering, so the number of rendering passes that need to be made could be increased. Generally, the number of passes that must be made to render the combined object is the sum of the number of passes for each of the separate objects, and so nothing is gained by combining. For this reason, you should not combine meshes that are far enough apart to be affected by different sets of pixel lights.",475],["During rendering, Unity finds all lights surrounding a mesh and calculates which of those lights affect it most. The Quality Settings are used to modify how many of the lights end up as pixel lights and how many as vertex lights. Each light calculates its importance based on how far away it is from the mesh and how intense its illumination is. Furthermore, some lights are more important than others purely from the game context. For this reason, every light has a Render Mode setting which can be set to Important or Not Important; lights marked as Not Important will typically have a lower rendering overhead.",475],["As an example, consider a driving game where the player's car is driving in the dark with headlights switched on. The headlights are likely to be the most visually significant light sources in the game, so their Render Mode would probably be set to Important. On the other hand, there may be other lights in the game that are less important (other cars' rear lights, say) and which don't improve the visual effect much by being pixel lights. The Render Mode for such lights can safely be set to Not Important so as to avoid wasting rendering capacity in places where it will give little benefit.",475],["Optimizing per-pixel lighting saves both CPU and the GPU: the CPU has less draw calls to do, and the GPU has less vertices to process and pixels to rasterize for all these additional object renders.",475],["GPU: Texture Compression and Mipmaps",475],["Using Compressed Textures will decrease the size of your textures (resulting in faster load times and smaller memory footprint) and can also dramatically increase rendering performance. Compressed textures use only a fraction of the memory bandwidth needed for uncompressed 32bit RGBA textures.",475],["Use Texture Mip Maps",475],["As a rule of thumb, always have Generate Mip Maps enabled for textures used in a 3D scene. In the same way Texture Compression can help limit the amount of texture data transfered when the GPU is rendering, a mip mapped texture will enable the GPU to use a lower-resolution texture for smaller triangles.",475],["The only exception to this rule is when a texel (texture pixel) is known to map 1:1 to the rendered screen pixel, as with UI elements or in a 2D game.",475],["LOD and Per-Layer Cull Distances",475],["In some games, it may be appropriate to cull small objects more aggressively than large ones, in order to reduce both the CPU and GPU load. For example, small rocks and debris could be made invisible at long distances while large buildings would still be visible.",475],["This can be either achieved by Level Of Detail system, or by setting manual per-layer culling distances on the camera. You could put small objects into a separate layer and setup per-layer cull distances using the Camera.layerCullDistances script function.",475],["Realtime Shadows",475],["Realtime shadows are nice, but they can cost quite a lot of performance, both in terms of extra draw calls for the CPU, and extra processing on the GPU. For further details, see the Light Performance page.",475],["GPU: Tips for writing high-performance shaders",475],["A high-end PC GPU and a low-end mobile GPU can be literally hundreds of times performance difference apart. Same is true even on a single platform. On a PC, a fast GPU is dozens of times faster than a slow integrated GPU; and on mobile platforms you can see just as large difference in GPUs.",475],["So keep in mind that GPU performance on mobile platforms and low-end PCs will be much lower than on your development machines. Typically, shaders will need to be hand optimized to reduce calculations and texture reads in order to get good performance. For example, some built-in Unity shaders have their \"mobile\" equivalents that are much faster (but have some limitations or approximations - that's what makes them faster).",475],["Below are some guidelines that are most important for mobile and low-end PC graphics cards:",475],["Complex mathematical operations",475],["Transcendental mathematical functions (such as pow, exp, log, cos, sin, tan, etc) are quite expensive, so a good rule of thumb is to have no more than one such operation per pixel. Consider using lookup textures as an alternative where applicable.",475],["It is not advisable to attempt to write your own normalize, dot, inversesqrt operations, however. If you use the built-in ones then the driver will generate much better code for you.",475],["Keep in mind that alpha test (discard) operation will make your fragments slower.",475],["Floating point operations",475],["You should always specify the precision of floating point variables when writing custom shaders. It is critical to pick the smallest possible floating point format in order to get the best performance. Precision of operations is completely ignored on many desktop GPUs, but is critical for performance on many mobile GPUs.",475],["If the shader is written in Cg/HLSL then precision is specified as follows:",475],["float - full 32-bit floating point format, suitable for vertex transformations but has the slowest performance.",475],["half - reduced 16-bit floating point format, suitable for texture UV coordinates and roughly twice as fast as float.",475],["fixed - 10-bit fixed point format, suitable for colors, lighting calculation and other high-performance operations and roughly four times faster than float.",475],["If the shader is written in GLSL ES then the floating point precision is specified specified as highp, mediump, lowp respectively.",475],["For further details about shader performance, please read the Shader Performance page.",475],["Simple Checklist to make Your Game Faster",475],["Keep vertex count below 200K..3M per frame when targetting PCs, depending on the target GPU",475],["If you're using built-in shaders, pick ones from Mobile or Unlit category. They work on non-mobile platforms as well; but are simplified and approximated versions of the more complex shaders.",475],["Keep the number of different materials per scene low - share as many materials between different objects as possible.",475],["Set Static property on a non-moving objects to allow internal optimizations like static batching.",475],["Do not use Pixel Lights when it is not necessary - choose to have only a single (preferably directional) pixel light affecting your geometry.",475],["Do not use dynamic lights when it is not necessary - choose to bake lighting instead.",475],["Use compressed texture formats when possible, otherwise prefer 16bit textures over 32bit.",475],["Do not use fog when it is not necessary.",475],["Learn benefits of Occlusion Culling and use it to reduce amount of visible geometry and draw-calls in case of complex static scenes with lots of occlusion. Plan your levels to benefit from ccclusion culling.",475],["Use skyboxes to \"fake\" distant geometry.",475],["Use pixel shaders or texture combiners to mix several textures instead of a multi-pass approach.",475],["If writing custom shaders, always use smallest possible floating point format:",475],["fixed / lowp - for colors, lighting information and normals,",475],["half / mediump - for texture UV coordinates,",475],["float / highp - avoid in pixel shaders, fine to use in vertex shader for position calculations.",475],["Minimize use of complex mathematical operations such as pow, sin, cos etc. in pixel shaders.",475],["Choose to use less textures per fragment.",475],["See Also",475],["Using Profiler.",475],["Light Performance.",475],["Optimizing Shader Load Time",476],["Shaders are small programs that execute on the GPU, and loading them can take some time. Each individual GPU program typically does not take much time to load, but shaders often have a lot of \"variants\" internally.",476],["For example, the Standard shader, if fully compiled, ends up being many thousands of slightly different GPU programs. This creates two potential problems:",476],["Large numbers of these shader variants increase game build time, and game data size.",476],["Loading large numbers of shader variants during game is slow and takes up memory.",476],["Shader build time stripping",476],["While building the game, Unity can detect that some of the internal shader variants are not used by the game, and skip them from build data. Build-time stripping is done for:",476],["Individual shader features, for shaders that use #pragma shader_feature. If none of the used materials use a particular variant, then it is not included into the build. See internal shader variants documentation. Out of built-in shaders, the Standard shader uses this.",476],["Shader variants to handle Fog and Lightmapping modes not used by any of the scenes are not included into the game data. See Graphics Settings if you want to override this behavior.",476],["Combination of the above often substantially cuts down on shader data size. For example, a fully compiled Standard shader would take several hundred megabytes, but in typical projects it often ends up taking just a couple megabytes (and is often compressed further by the application packaging process).",476],["Default Unity shader loading behavior",476],["Under all default settings, Unity loads the shaderlab Shader object into memory, but does not create the internal shader variants until they are actually needed.",476],["This means that shader variants that are included into the game build can still potentially be used, but there's no memory or load time cost paid until they are needed. For example, shaders always include a variant to handle point lights with shadows, but if you never end up using a point light with shadows in your game, then there's no point in loading this particular variant.",476],["One downside of this default behavior, however, is a possible hiccup for when some shader variant is needed for the first time - since a new GPU program code has to be loaded into the graphics driver. This is often undesirable during gameplay, so Unity has ShaderVariantCollection assets to help solve that.",476],["Shader Variant Collections",476],["ShaderVariantCollection is an asset that is basically a list of Shaders, and for each of them, a list of Pass types and shader keyword combinations to load.",476],["To help with creating these assets based on actually used shaders and their variants, the editor can track which shaders and their variants are actually used. In Graphics Settings, there is a button to create a new ShaderVariantCollection out of currently tracked shaders, or to clear the currently tracked shader list.",476],["Once you have some ShaderVariantCollection assets, you can set for these variants to be automatically preloaded while loading the game (under Preloaded Shaders list in Graphics Settings), or you can preload an individual shader variant collection from a script. See ShaderVariantCollection scripting class.",476],["See Also",476],["Optimizing Graphics Performance.",476],["Graphics Settings.",476],["Shaders reference.",476],["Other Views",477],["The Views described on this page covers the basics of the interface in Unity. The other Views in Unity are described elsewhere on separate pages:",477],["The Console shows logs of messages, warnings, and errors.",477],["The Animation View can be used to animate objects in the scene.",477],["The Profiler can be used to investigate and find the performance bottle-necks in your game.",477],["The Asset Server View can be used to manage version control of the project using Unity's Asset Server.",477],["The Lightmapping View can be used to manage lightmaps using Unity's built-in lightmapping.",477],["The Occlusion Culling View can be used to manage Occlusion Culling for improved performance.",477],["Gameplay in 2D",478],["While famous for its 3D capabilities, Unity can also be used to create 2D games. The familiar functions of the editor are still available but with helpful additions to simplify 2D development.",478],["The most immediately noticeable feature is the 2D view mode button in the toolbar of the Scene view. When 2D mode is enabled, an orthographic (ie, perspective-free) view will be set; the camera looks along the Z axis with the Y axis increasing upwards. This allows you to visualise the scene and place 2D objects easily.",478],["2D Graphics",478],["Graphic objects in 2D are known as Sprites. Sprites are essentially just standard textures but there are special techniques for combining and managing sprite textures for efficiency and convenience during development. Unity provides a built-in Sprite Editor to let you extract sprite graphics from a larger image. This allows you to edit a number of component images within a single texture in your image editor. You could use this, for example, to keep the arms, legs and body of a character as separate elements within one image.",478],["Sprites are rendered with a Sprite Renderer component rather than the Mesh Renderer used with 3D objects. You can add this to a GameObject via the Components menu (Component > Rendering > Sprite Renderer or alternatively, you can just create a GameObject directly with a Sprite Renderer already attached (menu: GameObject &gt; 2D Object &gt; Sprite).",478],["2D Physics",478],["Unity has a separate physics engine for handling 2D physics so as to make use of optimizations only available with 2D. The components correspond to the standard 3D physics components such as Rigidbody, Box Collider and Hinge Joint, but with \"2D\" appended to the name. So, sprites can be equipped with Rigidbody 2D, Box Collider 2D and Hinge Joint 2D. Most 2D physics components are simply \"flattened\" versions of the 3D equivalents (eg, Box Collider 2D is a square while Box Collider is a cube) but there are a few exceptions.",478],["See the Physics section of the manual for further information about 2D physics concepts and components.",478],["Particle System How-Tos",479],["This section explains how to implement common types of particle system. As with all code in our documentation, you are free to use it for any purpose without crediting Unity.",479],["Particle System Modules",480],["The Particle System component has a rather complex set of properties that are organised into modules for ease of use. This section of the manual covers each of the modules in detail.",480],["Particle Systems",481],["In a 3D game, most characters, props and scenery elements are represented as meshes, while a 2D game uses sprites for these purposes. Meshes and sprites are the ideal way to depict \"solid\" objects with a well-defined shape. There are other entities in games, however, that are fluid and intangible in nature and consequently difficult to portray using meshes or sprites. For effects like moving liquids, smoke, clouds, flames and magic spells, a different approach to graphics known as particle systems can be used to capture the inherent fluidity and energy. This section explains Unity's particle systems and what they can be used for.",481],["Collision Module",482],["This module controls the way particles collide with solid objects in the scene.",482],["Properties",482],["Property: Function: ",482],["World/Planes popup Selects between World and Planes modes (see below for details). ",482],["Planes An expandable list of Transforms that define collision planes (Planes mode only). ",482],["Visualization Selects whether the collision plane gizmos will be shown in the scene view as wireframe grids or solid planes (Planes mode only). ",482],["Scale Plane Size of planes used for visualization (Planes mode only). ",482],["Dampen The fraction of a particle's speed that it loses after a collision. ",482],["Bounce The fraction of a particle's speed that rebounds from a surface after a collision. ",482],["Lifetime Loss The fraction of a particle's total lifetime that it loses if it collides. ",482],["Min Kill Speed Particles travelling below this speed after a collision will be removed from the system. ",482],["Particle Radius Approximate size of a particle, used to avoid clipping with collision planes (Planes mode only). ",482],["Collides With Particles will only collide with objects on the selected layers (World mode only). ",482],["Collision Quality This affects how \"watertight\" the collisions are - at lower quality levels, particles may sometimes pass through colliders (World mode only). ",482],["Send Collision Messages If enabled, particle collisions can be detected from scripts by the OnParticleCollision function. ",482],["Details",482],["When other objects surround a particle system, the effect is often more convincing when the particles interact with those objects. For example, water or debris should be obstructed by a solid wall rather than simply passing through it. With Collision enabled, particles can collide with objects in the scene.",482],["A particle system can be set so its particles collide with any collider in the scene by selecting World mode from the popup. (Colliders can also be disabled according to the layer they are on by using the Collides With property.) The popup also has a Planes mode option which allows you to add a set of planes to the scene that don't need to have colliders. This option is useful for simple floors, walls and similar objects and has a lower processor overhead than World mode. When Planes mode is enabled, a list of transforms (typically empty GameObjects) can be added via the Planes property. The planes extend infinitely in the objects' local XZ planes with the positive Y axis indicating the planes' normal vectors. To assist with development, the planes will be shown as gizmos in the scene, regardless of whether or not the objects have any visible mesh themselves. The gizmos can be shown as a wireframe grid or a solid plane, and can also be scaled. However, the scaling only applies to the visualization - the collision planes themselves extend infinitely through the scene.",482],["When collisions are enabled, the size of a particle is sometimes a problem because its graphic can be clipped as it makes contact with a surface. This can result in a particle appearing to \"sink\" partway into a surface before stopping or bouncing. The Particle Radius property addresses this issue by defining an approximate circular radius for the particles. This size information is used to prevent clipping and avoid the sinking-in effect.",482],["The Dampen and Bounce properties are useful when the particles represent solid objects. For example, gravel will tend to bounce off a hard surface when thrown but a snowball's particles might lose speed during a collision. Lifetime Loss and Min Kill Speed can help to reduce the effects of residual particles following a collision. For example, a fireball might last for a few seconds while flying through the air but after colliding, the separate fire particles should dissipate quickly.",482],["You can also detect particle collisions from a script if Send Collision Messages is enabled. The script can be attached to the object with the particle system or the one with the collider or both. By detecting collisions, you can use particles as active objects in gameplay, such as projectiles, magic spell and power-ups. See the script reference page for MonoBehaviour.OnParticleCollision for further details and examples.",482],["Color By Speed Module",483],["The color of a particle can be set here to change according to its speed in distance units per second.",483],["Properties",483],["Property: Function: ",483],["Color The color gradient of a particle defined over a speed range. ",483],["Speed Range The low and high ends of the speed range to which the color gradient is mapped (speeds outside the range will map to the end points of the gradient). ",483],["Details",483],["Burning or glowing particles, such as sparks, will tend to burn more brightly when they move quickly through the air (being exposed to more oxygen) but then dim slightly as they slow down. To simulate this, you might use Color By Speed with a gradient that has white at the upper end of the speed range and red at the lower end.",483],["Color Over Lifetime Module",484],["This module specifies how a particle's color and transparency vary over time.",484],["Properties",484],["Property: Function: ",484],["Color The color gradient of a particle over its lifetime. ",484],["Details",484],["Many types of natural and fantastical particles vary in color over time and so this property has many uses. For example, white hot sparks will cool as they pass through the air and a magic spell might burst into a rainbow of colors. Perhaps the more important aspect, though, is the variation of alpha (transparency). It is very common for particles to burn out, fade or dissipate as they reach the end of their lifetime (hot sparks, fireworks, smoke particles) and a simple diminishing gradient produces this effect very convincingly.",484],["Emission Module",485],["The properties in this module affect the rate and timing of particle emissions.",485],["Properties",485],["Property: Function: ",485],["Rate The number of particles emitted per unit of time or distance moved (selected from the adjacent popup menu). ",485],["Bursts Allows extra particles to be emitted at specified times (only available when the Rate is in Time mode). ",485],["Details",485],["The rate of emission can be constant or can vary over the lifetime of the system according to a curve. If Distance mode is selected then a certain number of particles are released per unit of distance moved by the parent object. This is very useful for simulating particles that are actually created by the motion of the object (eg, dust from a car's wheels on a dirt track). Note that Distance mode is only available when Simulation Space is set to World in the Particle System section.  If the rate is set to Time mode then the desired number of particles will be emitted each second regardless of how the parent object moves. Additionally, you can add bursts of extra particles that appear at specific times. For example, you might have a steam engine chimney that produces puffs of smoke.",485],["Exhaust Smoke from a Vehicle",486],["Cars and many other vehicles emit exhaust smoke as they convert fuel into power. You can use a particle system to add an exhaust as a nice finishing touch for a vehicle.",486],["Timeline of a Particle",486],["Exhaust smoke emerges from the pipe quite fast but then rapidly slows down on contact with the atmosphere. As it slows, it spreads out, becoming fainter and soon dissipating into the air. Since the exhaust gas is hot, it also rises slightly as it passes through the colder air surrounding it.",486],["A particle of exhaust smoke must start off no larger than the width of the pipe but it will then grow in size considerably over its short lifetime. It will usually start off partly transparent and fade to total transparency as it mixes with the air. As regards dynamics, the particle will be emitted quite fast but then slow rapidly and will also lift upward slightly.",486],["Implementation",486],["In the Shape module, select the Cone shape and set its Angle property to zero; the \"cone\" in this case will actually be a cylindrical pipe. The Radius of the pipe naturally depends on the size of the vehicle but you can usually set it by matching the radius Gizmo in the scene view to the vehicle model (eg, a car model will usually feature an exhaust pipe or a hole at the back whose size you can match). The radius actually determines quite a few things about the property settings you choose, such as the particle size and emission rate. For the purposes of this example, we will assume the vehicle is a car which follows Unity's standard size convention of one world unit to one metre; the radius is thus set to about 0.05 or 5cm.",486],["A suitable graphic for the smoke particle is provided by the Smoke4 material provided in the standard assets. If you don't already have these installed then select Assets &gt; Import Package &gt; Particles from the menu. Then, go to the Renderer module of the particle system and set the Material property to Smoke4.",486],["The default lifetime of five seconds is generally too long for car exhaust fumes, so you should open the Particle System module (which has the same name as the GameObject, eg, \"Exhaust\") and set the Start Lifetime to about 2.5 seconds. Also in this module, set the Simulation Space to World and the Gravity Modifier to a small negative value, say about -0.1. Using a world simulation space allows the smoke to hang where it is produced even when the vehicle moves. The negative gravity effect causes the smoke particles to rise as if they are composed of hot gas. A nice extra touch is to use the small menu arrow next to Start Rotation to select the Random Between Two Constants option. Set the two values to 0 and 360, respectively, and the smoke particles will be randomly rotated as they are emitted. Having many particles that are identically aligned is very noticeable and detracts from the effect of a random, shapeless smoke trail.",486],["At this stage, the smoke particles are starting to look realistic and the default emission rate creates a nice \"chugging\" effect of an engine. However, the smoke doesn't billow outwards and dissipate as yet. Open the Color Over Lifetime module and click the top gradient stop on the right hand end of the gradient (this controls the transparency of \"alpha\" value of the color). Set the alpha value to zero and you should see the smoke particles fading to nothing in the scene. Depending on how clean your engine is, you may also want to reduce the alpha value of the gradient at the start; thick, dark smoke tends to suggest dirty, inefficient combustion.",486],["As well as fading, the smoke should also increase in size as it escapes and you can easily create this effect with the Size Over Lifetime module. Open the module, select the curve and slide the curve handle at the left hand end to make the particles start off at a fraction of their full size. The exact size you choose depends on the size of the exhaust pipe but a value slightly larger than the pipe gives a good impression of escaping gas. (Starting the particles at the same size as the pipe suggests that the gas is being held to its shape by the pipe but of course, gas doesn't have a defined shape.) Use the simulation of the particle system in the scene view to get a good visual impression of how the smoke looks. You may also want to increase the Start Size in the particle system module at this point if the smoke doesn't disperse far enough to create the effect you want.",486],["Finally, the smoke should also slow down as it disperses. An easy way to make this happen is with the Force Over Lifetime module. Open the module and set the Space option to Local and the Z component of the force to a negative value to indicate that the particles are pushed back by the force (the system emits the particles along the positive Z direction in the object's local space). A value of about -0.75 works quite well for the system if the other parameters are set up as suggested above.",486],["Usage",486],["You can position the exhaust particle system by placing it on a child object of the main vehicle. For simple games, you can just enable the Play On Awake and Looping properties and let the system run. In most cases, however, you will probably want to vary at least the emission rate as the vehicle moves. This is firstly for authenticity (ie, an engine produces more smoke as it works harder) but it also helps to prevent the smoke particles from being spread out as the vehicle moves. A fast-moving vehicle with too low an emission rate will appear to produce distinct \"puffs\" of smoke, which is highly unrealistic.",486],["You can vary the emission rate very easily from a script. If you have a variable in the script that represents the engine revs or the speed of the vehicle then you can simply multiply this value by a constant and assign the result to the ParticleSystem's emissionRate property.",486],["// C#",486],["using UnityEngine;",486],["using System.Collections;",486],["public class PartScriptTestCS : MonoBehaviour {",486],["public float engineRevs;",486],["public float exhaustRate;",486],["ParticleSystem exhaust;",486],["void Start () {",486],["exhaust = GetComponent();",486],["void Update () {",486],["exhaust.emissionRate = engineRevs * exhaustRate;",486],["// JS",486],["var engineRevs: float;",486],["var exhaustRate: float;",486],["var exhaust: ParticleSystem;",486],["function Start() {",486],["exhaust = GetComponent.();",486],["function Update () {",486],["exhaust.emissionRate = engineRevs * exhaustRate;",486],["Further Ideas",486],["The basic scheme creates quite a convincing impression of exhaust smoke but you will probably have noticed that the \"character\" of the engine changes as you vary the parameters. An poorly tuned, inefficient engine tends to burn its fuel incompletely, resulting in heavy, dark smoke that persists for a long time in the air. This would be perfect for an old farm tractor but not for a high-performance sports car. For a \"clean\" engine, you should use small values for the lifetime, opacity and size increase of the particles. For a \"dirty\" engine, you should increase these values and perhaps use the Bursts property of the Emission module to create the impression of the engine spluttering.",486],["A Simple Explosion",487],["You can use a particle system to create a convincing explosion but the dynamics are perhaps a little more complicated than they seem at first. At its core, an explosion is just an outward burst of particles but there are a few simple modifications you can apply to make it look much more realistic.",487],["Timeline of a Particle",487],["A simple explosion produces a ball of flame that expands outward rapidly in all directions. The initial burst has a lot of energy and is therefore very hot (ie, bright) and moves very fast. This energy quickly dissipates which results in the expansion of flame slowing down and also cooling down (ie, getting less bright). Finally, as all the fuel is burned up, the flames will die away and soon disappear completely.",487],["An explosion particle will typically have a short lifetime and you can vary several different properties over that lifetime to simulate the effect. The particle will start off moving very fast but then its speed should reduce greatly as it moves away from the centre of the explosion. Also, the color should start off bright but then darken and eventually fade to transparency. Finally, reducing the particle's size over its lifetime will give the effect of the flames dispersing as the fuel is used up.",487],["Implementation",487],["Starting with the default particle system object (menu: GameObject &gt; Create General &gt; Particle System), go to the Shape module and set the emitter shape to a small Sphere, say about 0.5 units in radius. The particles in the standard assets include a material called Fire Add which is very suitable for explosions (menu: Assets &gt; Import Package &gt; Particles). You can set this material for the system using the Renderer module.",487],["With the Renderer open, you should also disable Cast Shadows and Receive Shadows since the explosion flames are supposed to give out light rather than receive it.",487],["At this stage, the system looks like lots of little fireballs being thrown out from a central point. The explosion should, of course, create a burst with lots of particles all at once. In the Emission module, you can set the Rate value to zero and add a single Burst of particles at time zero. The number of particles in the burst will depend on the size and intensity you want your explosion to have but a good starting point is about fifty particles. With the burst set up, the system is now starting to look much more like and explosion but it is rather slow and the flames seem to hang around for a long time. In the Particle System module (which will have the same name as the GameObject, eg, \"Explosion\"), set both the Duration of the system and the Start Lifetime of the particles to two seconds.",487],["You can also use the Size Over Lifetime module to create the effect of the flames using up their fuel. Set the size curve using the \"ramp down\" preset (ie, the size starts off at 100% and reduces to zero. To make the flames darken and fade, enable the Color Over Lifetime module and set the gradient to start with white at the left and finish with black at the right. Since the Fire Add material uses and additive shader for rendering, the darkness of the color property also controls the transparency of the particle; the flame's will become fully transparent as the color fades to black. Also, the additive material allows the brightness of particles to \"add\" together as they are drawn on top of each other. This helps to further enhance the impression of a bright flash at the start of the explosion when the particles are all close together.",487],["As it stands, the explosion is taking shape but it looks as though it is happening out in space. The particles get thrown out and travel a long distance at constant speed before fading. If your game is set in space then this might be the exact effect you want. However, an explosion that happens in the atmosphere will be slowed and dampened by the surrounding air. Enable the Limit Velocity Over Lifetime module and set the Speed to about 3.0 and the Dampen fraction to about 0.4 and you should see the explosion lose a little strength as it progresses.",487],["A final thing to note is that as the particles move away from the centre of the explosion, their individual shapes become more recognisable. In particular, seeing the particles all at the same size and with the same rotation makes it obvious that the same graphic is being reused for each particle. A simple way to avoid this is to add a bit of random variation to the size and rotation of the particles as they are generated. In the Particle System module at the top of the inspector, click the small arrow to the right of the Start Size and Start Rotation properties and set them both to Random Between Two Constants. For the rotation, set the two values to 0 and 360 (ie, completely random rotation). For the size, set the values to 0.5 and 1.5 to give some variation without the risk of having too many huge or tiny particles. You should now see that the repetition of particle graphics is now much less noticeable.",487],["Usage",487],["During testing, it is useful to have the Looping property switched on so you can see the explosion repeatedly but in the finished game, you should switch this off so the explosion happens only once. When the explosion is designed for an object that has the potential to explode (a fuel tank, say) you might want to add the Particle System component to the object with the Play On Awake property disabled. You can then set off the explosion from a script as necessary.",487],["void Explode() {",487],["var exp = GetComponent();",487],["exp.Play();",487],["Destroy(gameObject, exp.duration);",487],["In other cases, explosions happen at points of impact. If the explosion originates from an object (eg, a grenade) then you could call the Explode function detailed above after a time delay or when it makes contact with the target.",487],["// Grenade explodes after a time delay.",487],["public float fuseTime;",487],["void Start() {",487],["Invoke(\"Explode\", fuseTime);",487],["// Grenade explodes on impact.",487],["void OnCollisionEnter(Collision coll) {",487],["Explode();",487],["Where the explosion comes from an object that is not actually represented in the game (eg, a projectile that travels too fast to be seen), you can just instantiate an explosion in the appropriate place. You might determine the contact point from a raycast, for example.",487],["// On the explosion object.",487],["void Start() {",487],["var exp = GetComponent();",487],["exp.Play();",487],["Destroy(gameObject, exp.duration);",487],["// Possible projectile script.",487],["public GameObject explosionPrefab;",487],["void Update() {",487],["RaycastHit hit;",487],["if (Physics.Raycast (Camera.main.ScreenPointToRay (Input.mousePosition), out hit)) {",487],["Instantiate (explosionPrefab, hit.point, Quaternion.identity);",487],["Further Ideas",487],["The explosion developed here is very basic but you can modify various aspects of it to get the exact feel you are looking for in your game.",487],["The particle graphic you use will have a big effect on how the player \"reads\" the explosion. Having lots of small, separately recognisable flames suggests burning pieces being thrown out. Larger particles that don't move completely apart appear more like a fireball fed by a destroyed fuel tank. Typically, you will need to change several properties together to complete the effect. For example, the fireball will persist longer and expand less before it disappears while a sharp burst may scatter burning pieces quite some distance.",487],["A few properties are set with random values here but other many properties have a Random Between Two Constants/Curves option and you can use these to add variation in all sorts of ways. Varying the size and rotation helps to avoid the most obvious effects of particle repetition but you might also consider adding some randomness to the Start Delay, Start Lifetime and Start Speed properties. A small amount of variation helps to reinforce the impression of the explosion being a \"natural\" and unpredictable effect rather than a controlled mechanical process. Larger variations suggest a \"dirty\" explosion. For example, varying the Start Delay will produce an explosion that is no longer sharp but bursts more slowly, perhaps because fuel tanks in a vehicle are being separately ignited.",487],["External Forces Module",488],["This property modifies the effect of wind zones on particles emitted by the system.",488],["Properties",488],["Property: Function: ",488],["Multiplier Scale value applied to wind zone forces. ",488],["Details",488],["A Terrain can incorporate wind zones which affect the movement of trees on the landscape. Enabling this section allows the wind zones to blow particles from the system. The Multiplier value lets you scale the effect of the wind on the particles, since they will often be blown more strongly than tree branches.",488],["Force Over Lifetime Module",489],["Particles can be accelerated by forces (wind, attraction, etc) that are specified in this module.",489],["Properties",489],["Property: Function: ",489],["X, Y, Z Force applied to each particle in the X, Y and Z axes. ",489],["Space Selects whether the force is applied in local or world space. ",489],["Details",489],["Fluids are often affected by forces as they move. For example, smoke will accelerate slightly as it rises from a fire, carried up by the hot air around it. Subtle effects can be achieved by using curves to control the force over the particles' lifetimes. Using the previous example, smoke will initially accelerate upward but as the rising air gradually cools, the force will diminish. Thick smoke from a fire might initially accelerate, then slow down as it spreads and perhaps even start to fall to earth if it persists for a long time.",489],["Limit Velocity Over Lifetime Module",490],["This module controls how the speed of particles is reduced over their lifetime.",490],["Properties",490],["Property: Function: ",490],["Speed Speed limit (split into separate X, Y and Z components if Separate Axes is enabled). ",490],["Space Selects whether the speed limitation refers to local or world space (only when Separate Axes is enabled). ",490],["Dampen The fraction by which a particle's speed will be reduced when it exceeds the speed limit. ",490],["Details",490],["This effect is very useful for simulating air resistance that slows the particles, especially when a decreasing curve is used to lower the speed limit over time. For example, an explosion or firework initially bursts at great speed but the particles emitted from it rapidly slow down as they pass through the air.",490],["Main Module",491],["This module contains global properties that affect the system overall. The name shown for it in the inspector is actually the name of the GameObject the Particle System component is attached to.",491],["Properties",491],["Property: Function: ",491],["Duration The length of time the system will run. ",491],["Looped If enabled, the system will start again at the end of its duration time and continue to repeat the cycle. ",491],["Prewarm If enabled, the system will be initialized as though it had already completed a full cycle (only works if Looping is also enabled). ",491],["Start Delay Delay in seconds before the system starts emitting once enabled. ",491],["Start Lifetime The initial lifetime for particles. ",491],["Start Speed The initial speed of each particle in the appropriate direction. ",491],["Start Size The initial size of each particle. ",491],["Start Rotation The initial rotation angle of each particle. ",491],["Start Color The initial color of each particle. ",491],["Gravity Multiplier Scales the gravity value set in the physics manager. A value of zero will switch gravity off. ",491],["Inherit Velocity Do the particles start with the same velocity as the particle system object? ",491],["Simulation Space Should particles be animated in the parent object's local space (and therefore move with the object) or in world space? ",491],["Play on Awake Does the system start automatically when the object is created? ",491],["Max Particles The maximum number of particles in the system at once. Older particles will be removed when the limit is reached. ",491],["Details",491],["The system emits particles for a specific duration but can be set to emit continuously using the Looped property. This means you can create, say, smoke in short puffs or in a steady stream. The \"Start\" properties (for lifetime, speed, size, rotation and color) specify the state of a particle on emission but other property groups (such as Size Over Lifetime) can modify the values as the system progresses. Also, all of these properties can have randomised values in a range specified by curves. All particle systems use the same gravity vector specified in the physics settings but the Gravity Multiplier value can be used to scale the gravity or switch it off if set to zero (dust clouds will fall to earth but not at the same rate as solid objects). The Inherit Velocity and Simulation Space properties together determine whether the particles move with the particle system object or independently in the game world. Systems like clouds, hoses and flamethrowers will tend to leave trails that persist in world space even if the object producing them moves around. On the other hand, when particles are used to create a spark between two electrodes, the spark should move along with the object.",491],["Particle Systems Reference",492],["This section contains reference information for the Particle System component and each of its numerous modules. There is also a sub-section covering the legacy particle system implementation used in earlier versions of Unity.",492],["Renderer Module",493],["This module's settings determine how a particle's image or mesh is transformed, shaded and overdrawn by other particles.",493],["Properties",493],["Property: Function: ",493],["Render Mode How the rendered image is produced from the graphic image (or mesh). The options are Billboard (particle always faces the camera, Stretched Billboard (faces the camera but with scaling applied), Horizontal Billboard (particle plane is parallel to the XZ \"floor\" plane), Vertical Billboard (particle is upright on the world Y axis but turns to face the camera) and Mesh (particle is rendered from a 3D mesh instead of a texture). ",493],["Camera Scale The amount of stretching applied in proportion to camera movement (Stretched Billboard mode only). ",493],["Speed Scale The amount of stretching applied in proportion to a particle's speed (Stretched Billboard mode only). ",493],["Length Scale The amount of stretching applied in proportion to a particle's length (Stretched Billboard mode only). ",493],["Mesh One or more meshes used to render particles (Mesh mode only). ",493],["Normal Direction Bias of lighting normals used for the particle graphics. A value of 1.0 points the normals at the camera, while a value of 0.0 points them towards the centre of the screen (Billboard modes only). ",493],["Material Material used to render the particle. ",493],["Sort Mode The order in which particles are drawn (and therefore overlaid). The possible values are By Distance (ie, from camera), Youngest First and Oldest First. ",493],["Sorting Fudge Bias of particle sort ordering. Lower values increase the relative chance that particles will be drawn over other transparent objects, including particles from other systems. ",493],["Cast Shadows Should the particle cast shadows on other objects? Only opaque materials cast shadows. ",493],["Receive Shadows Should shadows be cast onto particles? Only opaque materials can receive shadows. ",493],["Max Particle Size The largest particle size (regardless of other settings), expressed as a fraction of viewport size. ",493],["Details",493],["The Render Mode lets you choose between several billboard (2D) graphic modes and mesh mode. Using 3D meshes gives particles extra authenticity when they represent solid objects, such as rocks, but can also improve the sense of volume for clouds, fireballs and liquids. When 2D billboard graphics are used, the different options can be used for a variety of effects. The default Billboard mode is good for particles representing volumes that look much the same from any direction (eg, clouds). Horizontal Billboard mode can be used when the particles cover the ground (eg, target indicators and magic spell effects) or when they are flat objects that fly or float parallel to the ground (eg, shurikens). Vertical Billboard mode keeps each particle upright and perpendicular to the XZ plane but allows it to rotate around its Y axis. This can be helpful when you are using an orthographic camera and want particle sizes to stay consistent. Stretched Billboard mode accentuates the apparent speed of particles in a similar way to the \"stretch and squash\" techniques used by traditional animators.",493],["The Normal Direction can be used to create shading based on the particle's direction from the center of the screen. This can help create a feeling of size and depth on, say, a cloud - the outer edges of the cloud particles (relative to screen center) will tend to be darkened giving the impression of a volume shaded all over rather than a set of unformly shaded elements.",493],["Rotation By Speed Module",494],["The rotation of a particle can be set here to change according to its speed in distance units per second.",494],["Properties",494],["Property: Function: ",494],["Angular Velocity Rotation velocity in degrees per second. ",494],["Speed Range The low and high ends of the speed range to which the size curve is mapped (speeds outside the range will map to the end points of the curve). ",494],["Details",494],["This property can be used when the particles represent solid objects moving over the ground such as rocks from a landslide. The rotation of the particles can be set in proportion to the speed so that they roll over the surface convincingly.",494],["Rotation Over Lifetime Module",495],["Here, you can arrange for particles to rotate as they move.",495],["Properties",495],["Property: Function: ",495],["Angular Velocity Rotation velocity in degrees per second. ",495],["Details",495],["This setting is useful when particles represent small solid objects, such as pieces of debris from an explosion. Assigning random values of rotation will make the effect more realistic than having the particles remain upright as they fly. Also, the random rotations will help to break up the regularity of similarly-shaped particles (the same texture repeated many times can be very noticeable).",495],["Shape Module",496],["This module is used to select the shape of the emission volume and where the particles are launched from within it.",496],["Properties",496],["Property: Function: ",496],["Shape The shape of the emission volume. The options are Sphere, Hemisphere, Cone, Box, Mesh, Circle and Edge. For the Mesh shape, there is an extra menu to select whether particles are emitted from the vertices, triangles or edges of the mesh. ",496],["Random Direction When enabled, the particles' initial direction will be chosen randomly. ",496],["Radius The radius of the circular aspect of the shape (for Sphere, Hemisphere, Cone, Circle and Edge only). ",496],["Angle The angle of the cone at its point (for Cone only). An angle of 0 produces a cylinder while an angle of 90 gives a flat disc. ",496],["Box X, Y, Z Width, height and depth of the box shape (for Box only). ",496],["Mesh The mesh that provides the emitter's shape (for Mesh only). ",496],["Emit from Shell Should particles be emitted from the outer surface rather than the inner volume of the shape? (For Sphere and Hemisphere only). ",496],["Emit from Selects the part of the cone to emit from: Base, Volume, Base Shell or Volume Shell (for Cone only). ",496],["Arc The angular portion of a full circle that forms the emitter's shape (for Circle only). ",496],["Emit From Edge Should particles be emitted from the edge of the circle rather than the centre? (For Circle only.) ",496],["Details",496],["The emitter can be given any of a selection of shapes:",496],["Sphere: Uniform emission in all directions.",496],["Hemisphere: Uniform emission in all directions on one side of a plane.",496],["Cone: Emission from the base or body of a cone. The particles diverge in proportion to their distance from the cone's centre line.",496],["Box: Emission from the body of a box shape. The particles move in the emitter object's forward (Z) direction.",496],["Mesh: Emission from any arbitrary mesh shape supplied via the inspector.",496],["Circle: Uniform emission from the centre of edge of a circle. The particles move only in the plane of the circle.",496],["Edge: Emission from a line segment. The particles move in the emitter object's upward (Y) direction.",496],["All the shapes except Mesh have properties that define their dimensions (eg, radius). These can be edited by dragging the handles on the wireframe emitter shape in the scene view. The choice of shape affects the region from which particles can be launched but also the initial direction of the particles. For example, a sphere throws particles outward in all directions, a cone produces a diverging stream of particles and a mesh emits particles in directions that are normal to the surface.",496],["Size By Speed Module",497],["The size of a particle can be set here to change according to its speed in distance units per second.",497],["Properties",497],["Property: Function: ",497],["Size A curve defining the particle's size over a speed range. ",497],["Speed Range The low and high ends of the speed range to which the size curve is mapped (speeds outside the range will map to the end points of the curve). ",497],["Details",497],["There are some situations where particles are emitted with random speeds and the smallest particles should also be the ones that move fastest. For example, you would expect small pieces of debris to be accelerated more by an explosion than larger pieces. You can achieve effects like this using Size By Speed with a simple ramp curve that increases the size in proportion to the speed of the particle. (Note that this should not be used with Limit Velocity Over Lifetime unless you are sure you want particles to shrink as they slow down.)",497],["Size Over Lifetime Module",498],["Many effects involve a particle changing size according to a curve, which can be set in this module.",498],["Properties",498],["Property: Function: ",498],["Size A curve defining the particle's size over its lifetime. ",498],["Details",498],["Particles that represent gases, flames or smoke will typically change in size as they move away from the point of emission. For example, smoke will tend to disperse and occupy a larger volume over time. This effect can be achieved by setting the curve for the smoke particle to an upward ramp, increasing with the particle's age. (The effect is enhanced if Color Over Lifetime is also used to fade the smoke as it spreads.) For fireballs created by burning fuel, the flame particles will tend to expand after emission but then fade and shrink as the fuel is used up and the flame dissipates. In this case, the curve would have a rising \"hump\" that then falls back down to a smaller size.",498],["Sub Emitters Module",499],["This module lets you set up sub-emitters. These are additional particle systems that are created at a particle's position at certain stages of its lifetime.",499],["Properties",499],["Property: Function: ",499],["Birth, Collision, Death Phases of a particles life where sub-emitters can be created. Two sub-emitters can be added for each phase using the \"+\" arrows at the right of the inspector. ",499],["Details",499],["Many types of particles produce effects at different stages of their lifetimes that can also be implemented using particle systems. For example, a bullet might be accompanied by a puff of powder smoke as it leaves the gun barrel and a fireball might explode on impact. You can use sub-emitters to create effects like these. The sub-emitters are just ordinary particle system objects created in the scene or from prefabs. This means that sub-emitters can have sub-emitters of their own and this type of arrangement can be useful for complex effects like fireworks. However, it is very easy to generate an enormous number of particles using sub-emitters, so you should take care that performance doesn't suffer as a result.",499],["Texture Sheet Animation Module",500],["A particle's graphic need not be a still image. This module lets you treat the texture as a grid of separate sub-images that can be played back as frames of animation.",500],["Properties",500],["Property: Function: ",500],["Tiles The number of tiles the texture will be divided into in the X (horizontal) and Y (vertical) directions. ",500],["Animation The animation mode can be set to Whole Sheet or Single Row (ie, each row of the sheet represents a separate animation sequence). ",500],["Random Row Chooses a row from the sheet at random to produce the animation (only available when Single Row is selected as the animation mode). ",500],["Row Selects a particular row from the sheet to produce the animation (only available when Single Row mode is selected and Random Row is disabled). ",500],["Frame Over Time A curve that specifies how the frame of animation increases as time progresses. ",500],["Cycles The number of times the animation sequence repeats over the particle's lifetime. ",500],["Details",500],["Particle animations are typically simpler and less detailed than character animations. In systems where the particles are visible individually, animations can be used to convey actions or movements. For example, flames may flicker and insects in a swarm might vibrate or shudder as if flapping their wings. In cases where the particles form a single, continous entity like a cloud, animated particles can help add to the impression of energy and movement.",500],["You can use the Single Row mode to create separate animation sequences for particles and switch between animations from a script. This can be useful for creating variation or switching to a different animation after a collision. The Random Row option is highly effective as a way to break up conspicuous regularity in a particle system (eg, a group of flame objects that are all repeating the exact same flickering animation over and over again). This option can also be used with a single frame per row as a way to generate particles with random graphics. This can be used to break up regularity in a object like a cloud or to produce different types of debris or other objects from a single system. For example, a blunderbuss might fire out a cluster of nails, bolts, balls and other projectiles.",500],["Using Particle Systems in Unity",501],["Unity implements particle systems with a Component, so placing a system in a scene is a simple matter of adding a pre-made object (menu: GameObject &gt; Create General &gt; Particle System) or adding the component to an existing object (menu: Component > Effects > Particle System). Since the component is quite complicated, the inspector is divided into a number of collapsible sub-sections or modules that each contain a group of related properties. Additionally, you can edit one or more systems at the same time using a separate editor window accessed via the Open Window button on the inspector. The many options available for the Particle System component are described in detail on its component reference page and the pages for the individual modules.",501],["When an object with a particle system is selected, the scene view will contain a small Particle Effect panel with some simple controls that are useful for visualising changes you make to the system's settings.",501],["The Playback Speed allows you to speed up or slow down the particle simulation so you can quickly see how it will look at an advanced state. The Playback Time indicates the time elapsed since the system was started; this may be faster or slower than real time depending on the playback speed. The playback time can be \"scrubbed\" backwards and forwards by clicking on the Playback Time label and dragging the mouse left and right. The buttons at the top of the panel can be used to pause and resume the simulation or to stop it and reset to the initial state.",501],["Varying Properties Over Time",501],["Many of the numeric properties of particles or even the whole system can be varied over time. Unity provides several different methods of specifying how the variation will happen:-",501],["Constant: The property's value is fixed throughout its lifetime.",501],["Curve: The value is specified by a curve/graph.",501],["Random between two constants: Two constant values define the upper and lower bounds for the value; the actual value varies randomly over time between those bounds.",501],["Random between two curves: Two curves define the upper and lower bounds of the the value at a given point in its lifetime; the current value varies randomly between those bounds.",501],["For color properties, such as Color over lifetime, there are two separate options:",501],["Gradient: The color value is taken from a gradient.",501],["Random between two gradients: Two gradients define upper and lower \"bounds\" on the color value at a given time; the value used is a randomly weighted average of the two bound colors.",501],["Velocity Over Lifetime Module",502],["Acceleration can be applied to change the velocities of particles over their lifetime, as specified in this module.",502],["Properties",502],["Property: Function: ",502],["X, Y, Z Velocity in the X, Y and Z axes. ",502],["Space Selects whether the X, Y and Z axes refer to local or world space. ",502],["Details",502],["This effect can be used to create an overall drift of particles in a particular direction.",502],["What is a Particle System?",503],["Particles are small, simple images or meshes that are displayed and moved in great numbers by a particle system. Each particle represents a small portion of a fluid or amorphous entity and the effect of all the particles together creates the impression of the complete entity. Using a smoke cloud as an example, each particle would have a small smoke texture resembling a tiny cloud in its own right. When many of these mini-clouds are arranged together in an area of the scene, the overall effect is of a larger, volume-filling cloud.",503],["Dynamics of the System",503],["Each particle has a predetermined lifetime, typically of a few seconds, during which it can undergo various changes. It begins its life when it is generated or emitted by its particle system. The system emits particles at random positions within a region of space shaped like a sphere, hemisphere, cone, box or any arbitrary mesh. The particle is displayed until its time is up, at which point it is removed from the system. The system's emission rate indicates roughly how many particles are emitted per second, although the exact times of emission are randomized slightly. The choice of emission rate and average particle lifetime determine the number of particles in the \"stable\" state (ie, where emission and particle death are happening at the same rate) and how long the system takes to reach that state.",503],["Dynamics of Particles",503],["The emission and lifetime settings affect the overall behaviour of the system but the individual particles can also change over time. Each one has a velocity vector that determines the direction and distance the particle moves with each frame update. The velocity can be changed by forces and gravity applied by the system itself or when the particles are blown around by a wind zone on a Terrain. The color, size and rotation of each particle can also change over its lifetime or in proportion to its current speed of movement. The color includes an alpha (transparency) component, so a particle can be made to fade gradually in and out of existence rather than simply appearing and disappearing abruptly.",503],["Used in combination, particle dynamics can be used to simulate many kinds of fluid effects quite convincingly. For example, a waterfall can be simulated by using a thin emission shape and letting the water particles simply fall under gravity, accelerating as they go. Smoke from a fire tends to rise, expand and eventually dissipate, so the system should use an upward force on the smoke particles and increase their size and transparency over their lifetimes.",503],["Perforce Integration",504],["For more information on Perforce you can visit their website.",504],["Setting up Perforce",504],["Refer to perforce documentation if you encounter any problems with the setup process on the version control page.",504],["Working offline with Perforce",504],["Only use this if you know how to work offline in Perforce without a Sandbox. Refer to the Perforce documentation for further information on working in offline mode for Perforce.",504],["Troubleshooting",504],["If Unity for some reason cannot commit your changes to Perforce, e.g. if server is down, license issues etc., your changes will be stored in a separate changeset. If the console doesn't list any info about the issue you can use the P4V client for Perforce to submit this changeset to see the exact error message.",504],["Automatic revert of unchanged files on submit",504],["It's possible to configure Perforce to revert unchanged files on submit, which is done in P4V by selecting Connection->Edit Current Workspace..., viewing the Advanced tab and setting the value of On submit to Revert unchanged files:",504],["2D Physics Reference",505],["This section gives details of the components used with 2D physics. See this section for the equivalent 3D components.",505],["3D Physics Reference",506],["This section gives details of the components used with 3D physics. See this section for the equivalent 2D components.",506],["Physics Overview",507],["These pages briefly describe the main physics components available in Unity and gives details of their usage and links for further reading.",507],["Physics",508],["To have convincing physical behaviour, an object in a game must accelerate correctly and be affected by collisions, gravity and other forces. Unity's built-in physics engines provide components that handle the physical simulation for you. With just a few parameter settings, you can create objects that behave passively in a realistic way (ie, they will be moved by collisions and falls but will not start moving by themselves). By controlling the physics from scripts, you can give an object the dynamics of a vehicle, a machine or even a moving piece of cloth. This page gives an overview of the main physics components in Unity with links for further reading.",508],["Note: there are actually two separate physics engines in Unity, one for 3D physics and one for 2D physics. The main concepts are identical between the two engines (except for the extra dimension in 3D) but they are implemented with different components. So for example, there is Rigidbody component for 3D physics and an analogous Rigidbody 2D for 2D physics.",508],["Plastic SCM Integration",509],["For more information on Plastic SCM you can visit their website.",509],["Setting up Plastic SCM",509],["Refer to the Plastic SCM documentation if you encounter any problems with the set up process on the version control page.",509],["Checking Files Out with Plastic SCM",509],["Plastic SCM automatically checks files out if they have been modified, this makes it more convenient for you. The only files that require specific checking out instructions are Project Settings files otherwise you can't change them.",509],["Resolving Conflicts and Merging with Plastic SCM",509],["A merge is likely to happen when you have edited something in your project locally which has also been edited remotely (a conflict). This means you will need to review the changes before the merge can be performed. If Unity recognises that a merge must be completed before changes can be submitted then you will be prompted by Unity to complete the merge, this will take you to the Plastic SCM client.",509],["If incoming changes conflict with local changes then a question mark icon will appear on conflicting files in the incoming changes window. Here is a quick guide to resolving conflicts and merging with Plastic SCM:",509],["In the Version Control window click on the'Apply all incoming changes' button, this will automatically take you to the Plastic SCM GUI client.",509],["Within the client window you will be able to click 'Explain merge' for a more visual understanding of the changes. Now click 'Process all merges' and another window will display.",509],["Here you will be shown the individual conflicts and given the option to choose what changes you want to keep or discard.",509],["Once you have solved the conflicts click on save and exit, this will have completed the merge operation.",509],["You now have to push the changes like normal through Unity's version control window.",509],["Locking Files with Plastic SCM",509],["In order to lock files using Plastic SCM there are a few steps to follow:",509],["The first thing you must do is create a lock.conf file and make sure it is placed within your server directory. You can find your server directory from \"../PlasticSCM/server\".",509],["In your lock.conf file you must specify the repository you are working on and the server that will complete the lock checks. Here is an example:",509],["rep:default lockserver:localhost:8087",509],[".unity",509],[".unity.meta",509],["In this case all .unity and .unity.meta files are going to be locked for checkout on repository 'default'.",509],["You may want to restart your server at this point, you can do this by opening a terminal/command line window and locating the server directory. Once in the directory you can restart the server by typing:",509],["./plasticsd restart",509],["Now go back to Unity and check out a file that you expect to be locked, then go back to the terminal/command line and type:",509],["cm listlocks",509],["If the steps have been followed correctly the terminal/command line window should now display a list of locked files. You can also test if this has worked by trying to check out the same file using a different user, an error will appear in Unity's console saying the file is already checked out by another user.",509],["For more information you can visit the Plastic SCM lock file documentation.",509],["Distributed and offline work with Plastic SCM",509],["To find more about working in distributed mode (DVCS) and offline with Plastic SCM check the Distributed Version Control Guide.",509],["Platform Dependent Compilation",510],["Unity includes a feature named \"Platform Dependent Compilation\". This consists of some preprocessor directives that let you partition your scripts to compile and execute a section of code exclusively for one of the supported platforms.",510],["Furthermore, you can run this code within the Editor, so you can compile the code specifically for your mobile/console and test it in the Editor!",510],["Platform Defines",510],["The platform defines that Unity supports for your scripts are:",510],["Property: Function: ",510],["UNITY_EDITOR Define for calling Unity Editor scripts from your game code. ",510],["UNITY_EDITOR_WIN Platform define for editor code on Windows. ",510],["UNITY_EDITOR_OSX  Platform define for editor code on Mac OSX.  ",510],["UNITY_STANDALONE_OSX Platform define for compiling/executing code specifically for Mac OS (This includes Universal, PPC and Intel architectures). ",510],["UNITY_STANDALONE_WIN Use this when you want to compile/execute code for Windows stand alone applications. ",510],["UNITY_STANDALONE_LINUX Use this when you want to compile/execute code for Linux stand alone applications. ",510],["UNITY_STANDALONE Use this to compile/execute code for any standalone platform (Mac, Windows or Linux). ",510],["UNITY_WEBPLAYER Platform define for web player content (this includes Windows and Mac Web player executables). ",510],["UNITY_WII Platform define for compiling/executing code for the Wii console. ",510],["UNITY_IOS Platform define for compiling/executing code for the iOS platform. ",510],["UNITY_IPHONE Deprecated. Use UNITY_IOS instead. ",510],["UNITY_ANDROID Platform define for the Android platform. ",510],["UNITY_PS3 Platform define for running PlayStation 3 code. ",510],["UNITY_PS4 Platform define for running PlayStation 4 code. ",510],["UNITY_XBOX360 Platform define for executing Xbox 360 code. ",510],["UNITY_XBOXONE Platform define for executing Xbox One code. ",510],["UNITY_BLACKBERRY Platform define for a Blackberry10 device. ",510],["UNITY_WP8 Platform define for Windows Phone 8. ",510],["UNITY_METRO Platform define for Windows Store Apps (additionally NETFX_CORE is defined when compiling C# files against .NET Core). ",510],["UNITY_WINRT Equivalent to UNITY_WP8 \\ UNITY_METRO ",510],["UNITY_WEBGL Platform define for WebGL. ",510],["Also you can compile code selectively depending on the version of the engine you are working on. Currently the supported ones are:",510],["",510],["UNITY_2_6 Platform define for the major version of Unity 2.6. ",510],["UNITY_2_6_1 Platform define for specific version 2.6.1. ",510],["UNITY_3_0 Platform define for the major version of Unity 3.0. ",510],["UNITY_3_0_0 Platform define for specific version 3.0.0. ",510],["UNITY_3_1 Platform define for major version of Unity 3.1. ",510],["UNITY_3_2 Platform define for major version of Unity 3.2. ",510],["UNITY_3_3 Platform define for major version of Unity 3.3. ",510],["UNITY_3_4 Platform define for major version of Unity 3.4. ",510],["UNITY_3_5 Platform define for major version of Unity 3.5. ",510],["UNITY_4_0 Platform define for major version of Unity 4.0. ",510],["UNITY_4_0_1 Platform define for specific version 4.0.1. ",510],["UNITY_4_1 Platform define for major version of Unity 4.1. ",510],["UNITY_4_2 Platform define for major version of Unity 4.2. ",510],["UNITY_4_3 Platform define for major version of Unity 4.3. ",510],["UNITY_4_5 Platform define for major version of Unity 4.5. ",510],["UNITY_4_6 Platform define for major version of Unity 4.6. ",510],["UNITY_5_0 Platform define for major version of Unity 5.0. ",510],["Note: For versions before 2.6.0 there are no platform defines as this feature was first introduced in that version.",510],["Testing precompiled code.",510],["We are going to show a small example of how to use the precompiled code. This will simply print a message that depends on the platform you have selected to build your target.",510],["First of all, select the platform you want to test your code against by clicking on File -&gt; Build Settings. This will bring the build settings window to select your target platform.",510],["Select the platform you want to test your precompiled code against and press the Switch Editor button to tell Unity which platform you are targeting.",510],["Create a script and copy/paste this code:-",510],["// JS",510],["function Awake() {",510],["if UNITY_EDITOR",510],["Debug.Log(\"Unity Editor\");",510],["endif",510],["if UNITY_IPHONE",510],["Debug.Log(\"Iphone\");",510],["endif",510],["if UNITY_STANDALONE_OSX",510],["Debug.Log(\"Stand Alone OSX\");",510],["endif",510],["if UNITY_STANDALONE_WIN",510],["Debug.Log(\"Stand Alone Windows\");",510],["endif",510],["// C#",510],["using UnityEngine;",510],["using System.Collections;",510],["public class PlatformDefines : MonoBehaviour {",510],["void Start () {",510],["if UNITY_EDITOR",510],["Debug.Log(\"Unity Editor\");",510],["endif",510],["if UNITY_IPHONE",510],["Debug.Log(\"Iphone\");",510],["endif",510],["if UNITY_STANDALONE_OSX",510],["Debug.Log(\"Stand Alone OSX\");",510],["endif",510],["if UNITY_STANDALONE_WIN",510],["Debug.Log(\"Stand Alone Windows\");",510],["endif",510],["Then, depending on which platform you selected, one of the messages will get printed on the Unity console when you press play.",510],["Note that in C# you can use a CONDITIONAL attribute which is a more clean, less error-prone way of stripping out functions, see http://msdn.microsoft.com/en-us/library/4xssyw96(v=vs.90).aspx.",510],["In addition to the basic #if compiler directive, you can also use a multiway test in C# and JavaScript:-",510],["if UNITY_EDITOR",510],["Debug.Log(\"Unity Editor\");",510],["elif UNITY_IPHONE",510],["Debug.Log(\"Unity iPhone\");",510],["else",510],["Debug.Log(\"Any other platform\");",510],["endif",510],["Platform Custom Defines",510],["It is also possible to add to the built-in selection of defines by supplying your own. In the Other Settings panel of the Player Settings, you will see the Scripting Define Symbols textbox.",510],["Here, you can enter the names of the symbols you want to define for that particular platform, separated by semicolons. These symbols can then be used as the conditions for #if directives just like the built-in ones.",510],["Global Custom Defines",510],["You can define your own preprocessor directives to control which code gets included when compiling. To do this you must add a text file with the extra directives to the \"Assets/\" folder. The name of the file depends on the language you are using, and the extension is .rsp:",510],["",510],["C# &lt;Project Path&gt;/Assets/smcs.rsp ",510],["C# - Editor Scripts &lt;Project Path&gt;/Assets/gmcs.rsp ",510],["UnityScript &lt;Project Path&gt;/Assets/us.rsp ",510],["As an example, if you include the single line \"-define:UNITY_DEBUG\" in your smcs.rsp file the define UNITY_DEBUG will exist as a global define for C# scripts, except for Editor scripts.",510],["Every time you make changes to .rsp files you will need to recompile for them to be effective. You can do this by updating or reimporting a single script (.js or .cs) file.",510],["If you want to modify only global defines, you should use Scripting Define Symbols in Player Settings, because this will cover all the compilers. If you choose the .rsp files instead, you'll have to provide one file for every compiler Unity uses, and you won't know when one or another compiler is used.",510],["The use of the .rsp files is described in the help section of the smcs application which is included in the Editor installation folder. You can get more information by running \"smcs -help\". Also, bear in mind the .rsp file needs to match the compiler being invoked. For example, when targeting the web player, smcs is used with smcs.rsp; when targeting standalone players, gmcs is used with gmcs.rsp; when targeting MS compiler, csc is used with csc.rsp; and so on.",510],["Plugin Inspector",511],["In versions of Unity prior to v5, plugins were added to a project by placing them in specially-named folders to identify the target platform (OSX, Android, etc). From v5 onwards, plugins can be placed at any convenient place in the project, since the target platforms are now selected from the inspector.",511],["If you select a plugin file (or bundle, etc) in your project, you will see the plugin inspector.",511],["The checkboxes at the top let you choose the platforms which will use the plugin.",511],["The Platforms tab lets you choose the platforms that will use the plugin. If you select Any as the platform then the plugin will apply to all platforms, including the Unity editor. Once you have selected the platforms, you can choose additional options (CPU type, specific OS, etc) from the separate Platform Settings section below. This contains a tab for each platform selected by the checkboxes. Most platforms have no setting or just a few (eg, CPU and OS selection).",511],["Default settings",511],["To make transition easier from earlier Unity versions, Unity will try to set default plugins settings, depending on the folder where the plugin is located.",511],["",511],["Assets/**/Editor Plugin will be set only compatible with Editor, and won't be used when building to platform. ",511],["Assets/**/Editor/(x86 or x86_64 or x64) Plugin will be set only compatible with Editor, CPU value will be assigned depending on the subfolder. ",511],["Assets/Plugins/x86_64(or x64) x64 Standalone plugins will be set as compatible. ",511],["Assets/Plugins/x86 x86 Standalone plugins will be set as compatible. ",511],["Assets/Plugins/Android/(x86 or armeabi or armeabi-v7a) Plugin will be set only compatible with Android, if CPU subfolder is present, CPU value will be set as well. ",511],["Assets/Plugins/BlackBerry Plugin will be set only compatible with Blackberry. ",511],["Assets/Plugins/iOS Plugin will be set only compatible with iOS. ",511],["Assets/Plugins/WP8/(x86 or ARM) Plugin will be set only compatible with Windows Phone 8, if subfolder is CPU present, CPU value will be set as well. ",511],["Assets/Plugins/WSA/(x86 or ARM) Plugin will be set only compatible with Windows Store Apps and Windows Phone 8.1, if subfolder is CPU present, CPU value will be set as well. Note. Metro keyword can be used instead of WSA. ",511],["Assets/Plugins/WSA/(SDK80 or SDK81 or PhoneSDK81 or UniversalSDK81) Same as above, additionally SDK value will be set, you can also add CPU subfolder afterwards. For compatibility reasons, SDK80 is the same as Win80, SDK81 - Win81, PhoneSDK81 - WindowsPhone81. ",511],["Assets/Plugins/Tizen Plugin will be set only compatible with Tizen. ",511],["Assets/Plugins/Xbox360 Plugin will be set only compatible with Xbox360. ",511],["Assets/Plugins/PSVita Plugin will be set only compatible with Playstation Vita. ",511],["Assets/Plugins/PS3 Plugin will be set only compatible with Playstation 3. ",511],["Assets/Plugins/PS4 Plugin will be set only compatible with Playstation 4. ",511],["Assets/Plugins/SamsungTV Plugin will be set only compatible with Samsung TV. ",511],["Editor settings",511],["For instance, if you select CPU X86, the plugin will be used only in 32 bit Editor, but will not be used in 64 bit Editor.",511],["If you select OS Windows, the plugin will be used only in Windows Editor, but will not be used by Linux Editor or OS X Editor.",511],["Standalone Settings",511],["Windows Store Apps",511],["iOS",511],["Plugins",512],["In Unity, you normally use scripts to create functionality but you can also include code created outside Unity in the form of a Plugin. There are two kinds of plugins you can use in Unity: Managed plugins  and Native plugins.",512],["Managed plugins are managed .NET assemblies created with tools like Visual Studio or MonoDevelop. They contain only .NET code which means that they can't access any features that are not supported by the .NET libraries. However, managed code is accessible to the standard .NET tools that Unity uses to compile scripts. There is thus little difference in usage between managed plugin code and Unity script code, except for the fact that the plugins are compiled outside Unity and so the source may not be available.",512],["Native plugins are platform-specific native code libraries. They can access features like OS calls and third-party code libraries that would otherwise not be available to Unity. However, these libraries are not accessible to Unity's tools in the way that managed libraries are. For example, if you forget to add a managed plugin file to the project, you will get standard compiler error messages. If you do the same with a native plugin, you will only see an error report when you try to run the project.",512],["This section explains how to create plugins and use them in your Unity projects.",512],["Building Plugins for Android",513],["This page describes Native Code Plugins for Android.",513],["Building a Plugin for Android",513],["To build a plugin for Android, you should first obtain the Android NDK and familiarize yourself with the steps involved in building a shared library.",513],["If you are using C++ (.cpp) to implement the plugin you must ensure the functions are declared with C linkage to avoid name mangling issues.",513],["extern \"C\" {",513],["float FooPluginFunction ();",513],["Using Your Plugin from C#",513],["Once built, the shared library should be copied to the Assets-&gt;Plugins-&gt;Android folder. Unity will then find it by name when you define a function like the following in the C# script:-",513],["[DllImport (\"PluginName\")]",513],["private static extern float FooPluginFunction ();",513],["Please note that PluginName should not include the prefix ('lib') nor the extension ('.so') of the filename.",513],["You should wrap all native code methods with an additional C# code layer. This code should check Application.platform and call native methods only when the app is running on the actual device; dummy values can be returned from the C# code when running in the Editor. You can also use platform defines to control platform dependent code compilation.",513],["Android Library Projects",513],["You can drop pre-compiled Android library projects into the Assets-&gt;Plugins-&gt;Android folder. Pre-compiled means all .java files must have been compiled into jar files located in either the bin/ or the libs/ folder of the project.",513],["AndroidManifest.xml from these folders will get automatically merged with the main manifest file when the project is built.",513],["See Android Library Projects for more details.",513],["Deployment",513],["For cross platform deployment, your project should include plugins for each supported platform (ie, libPlugin.so for Android, Plugin.bundle for Mac and Plugin.dll for Windows).",513],["Unity automatically picks the right plugin for the target platform and includes it with the player.",513],["For specific Android platform (armv7, x86), the libraries (lib*.so) should be placed in the following:",513],["Assets/Plugins/Android/libs/x86/",513],["Assets/Plugins/Android/libs/armeabi-v7a/",513],["Using Java Plugins",513],["The Android plugin mechanism also allows Java to be used to enable interaction with the Android OS.",513],["Building a Java Plugin for Android",513],["There are several ways to create a Java plugin but the result in each case is that you end up with a .jar file containing the .class files for your plugin.",513],["One approach is to download the JDK, then compile your .java files from the command line with javac. This will create .class files which you can then package into a .jar with the jar command line tool.",513],["Another option is to use the Eclipse IDE together with the ADT.",513],["Note: Unity expects Java plugins to be built using JDK v1.6. If you are using v1.7, you should include \"-source 1.6 -target 1.6\" in the command line options to the compiler.",513],["Using Your Java Plugin from Native Code",513],["Once you have built your Java plugin (.jar) you should copy it to the Assets-&gt;Plugins-&gt;Android folder in the Unity project. Unity will package your .class files together with the rest of the Java code and then access the code using the Java Native Interface (JNI). JNI is used both when calling native code from Java and when interacting with Java (or the JavaVM) from native code.",513],["To find your Java code from the native side you need access to the Java VM. Fortunately, that access can be obtained easily by adding a function like this to your C/C++ code:",513],["jint JNI_OnLoad(JavaVM* vm, void* reserved) {",513],["JNIEnv* jni_env = 0;",513],["vm->AttachCurrentThread(&amp;jni_env, 0);",513],["return JNI_VERSION_1_6;",513],["This is all that is needed to start using Java from C/C++. It is beyond the scope of this document to explain JNI completely. However, using it usually involves finding the class definition, resolving the constructor (&lt;init&gt;) method and creating a new object instance, as shown in this example:-",513],["jobject createJavaObject(JNIEnv* jni_env) {",513],["jclass cls_JavaClass = jni_env->FindClass(\"com/your/java/Class\");           // find class definition",513],["jmethodID mid_JavaClass = jni_env->GetMethodID (cls_JavaClass, \"\", \"()V\");        // find constructor method",513],["jobject obj_JavaClass = jni_env->NewObject(cls_JavaClass, mid_JavaClass);       // create object instance",513],["return jni_env->NewGlobalRef(obj_JavaClass);                        // return object with a global reference",513],["Using Your Java Plugin with helper classes",513],["AndroidJNIHelper and AndroidJNI can be used to ease some of the pain with raw JNI.",513],["AndroidJavaObject and AndroidJavaClass automate a lot of tasks and also use cacheing to make calls to Java faster. The combination of AndroidJavaObject and AndroidJavaClass builds on top of AndroidJNI and AndroidJNIHelper, but also has a lot of logic in its own right (to handle the automation). These classes also come in a 'static' version to access static members of Java classes.",513],["You can choose whichever approach you prefer, be it raw JNI through AndroidJNI class methods, or AndroidJNIHelper together with AndroidJNI and eventually AndroidJavaObject/AndroidJavaClass for maximum automation and convenience.",513],["UnityEngine.AndroidJNI is a wrapper for the JNI calls available in C (as described above). All methods in this class are static and have a 1:1 mapping to the Java Native Interface. UnityEngine.AndroidJNIHelper provides helper functionality used by the next level, but is exposed as public methods because they may be useful for some special cases.",513],["Instances of UnityEngine.AndroidJavaObject and UnityEngine.AndroidJavaClass have a one-to-one mapping to an instance of java.lang.Object and java.lang.Class (or subclasses thereof) on the Java side, respectively. They essentially provide 3 types of interaction with the Java side:-",513],["Call a method",513],["Get the value of a field",513],["Set the value of a field",513],["The Call is separated into two categories: Call to a 'void' method, and Call to a method with non-void return type. A generic type is used to represent the return type of those methods which return a non-void type. The Get and Set always take a generic type representing the field type.",513],["Example 1",513],["//The comments describe what you would need to do if you were using raw JNI",513],["AndroidJavaObject jo = new AndroidJavaObject(\"java.lang.String\", \"some_string\");",513],["// jni.FindClass(\"java.lang.String\");",513],["// jni.GetMethodID(classID, \"\", \"(Ljava/lang/String;)V\");",513],["// jni.NewStringUTF(\"some_string\");",513],["// jni.NewObject(classID, methodID, javaString);",513],["int hash = jo.Call(\"hashCode\");",513],["// jni.GetMethodID(classID, \"hashCode\", \"()I\");",513],["// jni.CallIntMethod(objectID, methodID);",513],["Here, we're creating an instance of java.lang.String, initialized with a string of our choice and retrieving the hash value for",513],["that string.",513],["The AndroidJavaObject constructor takes at least one parameter, the name of class for which we want to construct an instance. Any parameters after the class name are for the constructor call on the object, in this case the string \"some_string\". The subsequent Call to hashCode() returns an 'int' which is why we use that as the generic type parameter to the Call method.",513],["Note: You cannot instantiate a nested Java class using dotted notation. Inner classes must use the $ separator, and it should work in both dotted and slashed format. So $$android.view.ViewGroup$LayoutParams or android/view/ViewGroup$LayoutParams can be used, where a LayoutParams class is nested in a ViewGroup$$ class.",513],["Example 2",513],["One of the plugin samples above shows how to get the cache directory for the current application. This is how you would do the same thing from C# without any plugins:-",513],["AndroidJavaClass jc = new AndroidJavaClass(\"com.unity3d.player.UnityPlayer\");",513],["// jni.FindClass(\"com.unity3d.player.UnityPlayer\");",513],["AndroidJavaObject jo = jc.GetStatic(\"currentActivity\");",513],["// jni.GetStaticFieldID(classID, \"Ljava/lang/Object;\");",513],["// jni.GetStaticObjectField(classID, fieldID);",513],["// jni.FindClass(\"java.lang.Object\");",513],["Debug.Log(jo.Call(\"getCacheDir\").Call(\"getCanonicalPath\"));",513],["// jni.GetMethodID(classID, \"getCacheDir\", \"()Ljava/io/File;\"); // or any baseclass thereof!",513],["// jni.CallObjectMethod(objectID, methodID);",513],["// jni.FindClass(\"java.io.File\");",513],["// jni.GetMethodID(classID, \"getCanonicalPath\", \"()Ljava/lang/String;\");",513],["// jni.CallObjectMethod(objectID, methodID);",513],["// jni.GetStringUTFChars(javaString);",513],["In this case, we start with AndroidJavaClass instead of AndroidJavaObject because we want to access a static member of com.unity3d.player.UnityPlayer rather than create a new object (an instance is created automatically by the Android UnityPlayer). Then we access the static field \"currentActivity\" but this time we use AndroidJavaObject as the generic parameter. This is because the actual field type (android.app.Activity) is a subclass of java.lang.Object, and any non-primitive type must be accessed as AndroidJavaObject. The exceptions to this rule are strings, which can be accessed directly even though they don't represent a primitive type in Java.",513],["After that it is just a matter of traversing the Activity through getCacheDir() to get the File object representing the cache directory, and then calling getCanonicalPath() to get a string representation.",513],["Of course, nowadays you don't need to do that to get the cache directory since Unity provides access to the application's cache and file directory with Application.temporaryCachePath and Application.persistentDataPath.",513],["Example 3",513],["Finally, here is a trick for passing data from Java to script code using UnitySendMessage.",513],["using UnityEngine;",513],["public class NewBehaviourScript : MonoBehaviour {",513],["void Start () {",513],["AndroidJNIHelper.debug = true;",513],["using (AndroidJavaClass jc = new AndroidJavaClass(\"com.unity3d.player.UnityPlayer\")) {",513],["jc.CallStatic(\"UnitySendMessage\", \"Main Camera\", \"JavaMessage\", \"whoowhoo\");",513],["void JavaMessage(string message) {",513],["Debug.Log(\"message from java: \" + message);",513],["The Java class com.unity3d.player.UnityPlayer now has a static method UnitySendMessage, equivalent to the iOS UnitySendMessage function on the native side. It can be used in Java to pass data to script code.",513],["Here though, we call it directly from script code, which essentially relays the message on the Java side. This then calls back to the native/Unity code to deliver the message to the object named \"Main Camera\". This object has a script attached which contains a method called \"JavaMessage\".",513],["Best practice when using Java plugins with Unity",513],["As this section is mainly aimed at people who don't have comprehensive JNI, Java and Android experience, we assume that the AndroidJavaObject/AndroidJavaClass approach has been used for interacting with Java code from Unity.",513],["The first thing to note is that any operation you perform on an AndroidJavaObject or AndroidJavaClass is computationally expensive (as is the raw JNI approach). It is highly advisable to keep the number of transitions between managed and native/Java code to a minimum, for the sake of performance and also code clarity.",513],["You could have a Java method to do all the actual work and then use AndroidJavaObject / AndroidJavaClass to communicate with that method and get the result. However, it is worth bearing in mind that the JNI helper classes try to cache as much data as possible to improve performance.",513],["//The first time you call a Java function like",513],["AndroidJavaObject jo = new AndroidJavaObject(\"java.lang.String\", \"some_string\"); // somewhat expensive",513],["int hash = jo.Call(\"hashCode\"); // first time - expensive",513],["int hash = jo.Call(\"hashCode\"); // second time - not as expensive as we already know the java method and can call it directly",513],["The Mono garbage collector should release all created instances of AndroidJavaObject and AndroidJavaClass after use, but it is advisable to keep them in a using(){} statement to ensure they are deleted as soon as possible. Without this, you cannot be sure when they will be destroyed. If you set AndroidJNIHelper.debug to true, you will see a record of the garbage collector's activity in the debug output.",513],["//Getting the system language with the safe approach",513],["void Start () {",513],["using (AndroidJavaClass cls = new AndroidJavaClass(\"java.util.Locale\")) {",513],["using(AndroidJavaObject locale = cls.CallStatic(\"getDefault\")) {",513],["Debug.Log(\"current lang = \" + locale.Call(\"getDisplayLanguage\"));",513],["You can also call the .Dispose() method directly to ensure there are no Java objects lingering. The actual C# object might live a bit longer, but will be garbage collected by mono eventually.",513],["Extending the UnityPlayerActivity Java Code",513],["With Unity Android it is possible to extend the standard UnityPlayerActivity class (the primary Java class for the Unity Player on Android, similar to AppController.mm on Unity iOS).",513],["An application can override any and all of the basic interaction between Android OS and Unity Android. You can enable this by creating a new Activity which derives from UnityPlayerActivity (UnityPlayerActivity.java can be found at /Applications/Unity/Unity.app/Contents/PlaybackEngines/AndroidPlayer/src/com/unity3d/player on Mac and usually at C:\\Program Files\\Unity\\Editor\\Data\\PlaybackEngines\\AndroidPlayer\\src\\com\\unity3d\\player on Windows).",513],["To do this, first locate the classes.jar shipped with Unity Android. It is found in the installation folder (usually C:\\Program Files\\Unity\\Editor\\Data (on Windows) or /Applications/Unity (on Mac)) in a sub-folder called PlaybackEngines/AndroidPlayer/bin. Then add classes.jar to the classpath used to compile the new Activity. The resulting .class file(s) should be compressed into a .jar file and placed in the Assets-&gt;Plugins-&gt;Android folder.",513],["Since the manifest dictates which activity to launch it is also necessary to create a new AndroidManifest.xml. The AndroidManifest.xml file should also be placed in the Assets-&gt;Plugins-&gt;Android folder (placing a custom manifest completely overrides the default Unity Android manifest).",513],["The new activity could look like the following example, OverrideExample.java:",513],["package com.company.product;",513],["import com.unity3d.player.UnityPlayerActivity;",513],["import android.os.Bundle;",513],["import android.util.Log;",513],["public class OverrideExample extends UnityPlayerActivity {",513],["protected void onCreate(Bundle savedInstanceState) {",513],["// call UnityPlayerActivity.onCreate()",513],["super.onCreate(savedInstanceState);",513],["// print debug message to logcat",513],["Log.d(\"OverrideActivity\", \"onCreate called!\");",513],["public void onBackPressed()",513],["// instead of calling UnityPlayerActivity.onBackPressed() we just ignore the back button event",513],["// super.onBackPressed();",513],["And this is what the corresponding AndroidManifest.xml would look like:",513],["",513],["",513],["",513],["",513],["android:label=\"@string/app_name\"",513],["android:configChanges=\"fontScale keyboard keyboardHidden locale mnc mcc navigation orientation screenLayout screenSize smallestScreenSize uiMode touchscreen\">",513],["",513],["",513],["",513],["",513],["",513],["",513],["",513],["UnityPlayerNativeActivity",513],["It is also possible to create your own subclass of UnityPlayerNativeActivity. This will have much the same effect as subclassing UnityPlayerActivity but with improved input latency. Be aware, though, that NativeActivity was introduced in Gingerbread and does not work with older devices. Since touch/motion events are processed in native code, Java views would normally not see those events. There is, however, a forwarding mechanism in Unity which allows events to be propagated to the DalvikVM. To access this mechanism, you need to modify the manifest file as follows:-",513],["",513],["",513],["",513],["",513],["android:label=\"@string/app_name\"",513],["android:configChanges=\"fontScale keyboard keyboardHidden locale mnc mcc navigation orientation screenLayout screenSize smallestScreenSize uiMode touchscreen\">",513],["",513],["",513],["",513],["",513],["",513],["",513],["",513],["",513],["",513],["Note the \".OverrideExampleNative\" attribute in the activity element and the two additional meta-data elements. The first meta-data is an instruction to use the Unity library libunity.so. The second enables events to be passed on to your custom subclass of UnityPlayerNativeActivity.",513],["Examples",513],["Native Plugin Sample",513],["A simple example of the use of a native code plugin can be found here",513],["This sample demonstrates how C code can be invoked from a Unity Android application.",513],["The package includes a scene which displays the sum of two values as calculated by the native plugin.",513],["Please note that you will need the Android NDK to compile the plugin.",513],["Java Plugin Sample",513],["An example of the use of Java code can be found here",513],["This sample demonstrates how Java code can be used to interact with the Android OS and how C++ creates a bridge between C# and Java.",513],["The scene in the package displays a button which when clicked fetches the application cache directory, as defined by the Android OS.",513],["Please note that you will need both the JDK and the Android NDK to compile the plugins.",513],["Here is a similar example but based on a prebuilt JNI library to wrap the native code into C#.",513],["Building Plugins for Desktop Platforms",514],["This page describes Native Code Plugins for desktop platforms (Windows/Mac OS X/Linux). Note that plugins are intentionally disabled in webplayers for security reasons.",514],["Building a Plugin for Mac OS X",514],["On Mac OSX, plugins are deployed as bundles. You can create the bundle project with XCode by selecting File-&gt;NewProject... and then selecting Bundle -&gt; Carbon/Cocoa Loadable Bundle (in XCode 3) or OS X -&gt; Framework &amp; Library -&gt; Bundle (in XCode 4)",514],["If you are using C++ (.cpp) or Objective-C (.mm) to implement the plugin then you must ensure the functions are declared with C linkage to avoid name mangling issues.",514],["extern \"C\" {",514],["float FooPluginFunction ();",514],["Building a Plugin for Windows",514],["Plugins on Windows are DLL files with exported functions. Practically any language or development environment that can create DLL files can be used to create plugins.",514],["As with Mac OSX, you should declare any C++ functions with C linkage to avoid name mangling issues.",514],["Building a Plugin for Linux",514],["Plugins on Linux are .so files with exported functions. These libraries are typically written in C or C++, but any language can be used.",514],["As with the other platforms, you should declare any C++ functions with C linkage in order to avoid name mangling issues.",514],["32-bit and 64-bit libraries",514],["The issue of needing 32-bit and/or 64-bit plugins is handled differently depending on the platform.",514],["Windows and Linux",514],["On Windows and Linux, plugins can be managed manually (e.g, before building a 64-bit player, you copy the 64-bit library into the Assets/Plugins folder, and before building a 32-bit player, you copy the 32-bit library into the Assets/Plugins folder) OR you can place the 32-bit version of the plugin in Assets/Plugins/x86 and the 64-bit version of the plugin in Assets/Plugins/x86_64. By default the editor will look in the architecture-specific sub-directory first, and if that directory does not exist, it will copy plugins from the root Assets/Plugins folder instead.",514],["Note that for the Universal Linux build, you are required to use the architecture-specific sub-directories (when building a Universal Linux build, the Editor will not copy any plugins from the root Assets/Plugins folder).",514],["Mac OS X",514],["For Mac OS X, you should build your plugin as a universal binary that contains both 32-bit and 64-bit architectures.",514],["Using your plugin from C#",514],["Once built, the bundle should be placed in the Assets-&gt;Plugins folder (or the appropriate architecture-specific sub-directory) in the Unity project. Unity will then find it by name when you define a function like this in the C# script:-",514],["[DllImport (\"PluginName\")]",514],["private static extern float FooPluginFunction ();",514],["Please note that PluginName should not include the library prefix nor file extension. For example, the actual name of the plugin file would be PluginName.dll on Windows and libPluginName.so on Linux.",514],["Be aware that whenever you change code in the Plugin you will need to recompile scripts in your project or else the plugin will not have the latest compiled code.",514],["Deployment",514],["For cross platform plugins you must include the .bundle (for Mac), .dll (for Windows), and .so (for Linux) files in the Plugins folder.",514],["No further work is then required on your side - Unity automatically picks the right plugin for the target platform and includes it with the player.",514],["Examples",514],["Simplest Plugin",514],["This plugin project implements only some very basic operations (print a number, print a string, add two floats, add two integers). This example may be helpful if this is your first Unity plugin.",514],["The project can be found here and includes Windows, Mac, and Linux project files.",514],["Rendering from C++ code",514],["An example multiplatform plugin that works with multithreaded rendering in Unity can be found on the Native Plugin Interface page.",514],["Building Plugins for iOS",515],["This page describes Native Code Plugins for the iOS platform.",515],["Building an Application with a Native Plugin for iOS",515],["Define your extern method in the C# file as follows:",515],["[DllImport (\"__Internal\")]",515],["private static extern float FooPluginFunction();",515],["Set the editor to the iOS build target",515],["Add your native code source files to the generated XCode project's \"Classes\" folder (this folder is not overwritten when the project is updated, but don't forget to backup your native code).",515],["If you are using C++ (.cpp) or Objective-C++ (.mm) to implement the plugin you must ensure the functions are declared with C linkage to avoid name mangling issues.",515],["extern \"C\" {",515],["float FooPluginFunction();",515],["Plugins written in C or Objective-C do not need this since these languages do not use name-mangling.",515],["Using Your Plugin from C#",515],["iOS native plugins can be called only when deployed on the actual device, so it is recommended to wrap all native code methods with an additional C# code layer. This code should check Application.platform and call native methods only when the app is running on the device; dummy values can be returned when the app runs in the Editor. See the Bonjour browser sample application for an example.",515],["Calling C# / JavaScript back from native code",515],["Unity iOS supports limited native-to-managed callback functionality via UnitySendMessage:",515],["UnitySendMessage(\"GameObjectName1\", \"MethodName1\", \"Message to send\");",515],["This function has three parameters : the name of the target GameObject, the script method to call on that object and the message string to pass to the called method.",515],["Known limitations:",515],["Only script methods that correspond to the following signature can be called from native code: function MethodName(message:string)",515],["Calls to UnitySendMessage are asynchronous and have a delay of one frame.",515],["Automated plugin integration",515],["Unity iOS supports automated plugin integration in a limited way. All files with extensions .a,.m,.mm,.c,.cpp located in the Assets/Plugins/iOS folder will be merged into the generated Xcode project automatically. However, merging is done by symlinking files from Assets/Plugins/iOS to the final destination, which might affect some workflows. The .h files are not included in the Xcode project tree, but they appear on the destination file system, thus allowing compilation of .m/.mm/.c/.cpp files.",515],["Note: subfolders are currently not supported.",515],["iOS Tips",515],["Managed-to-unmanaged calls are quite processor intensive on iOS. Try to avoid calling multiple native methods per frame.",515],["As mentioned above, wrap your native methods with an additional C# layer that calls native code on the device and returns dummy values in the Editor.",515],["String values returned from a native method should be UTF-8 encoded and allocated on the heap. Mono marshaling calls are free for strings like this.",515],["As mentioned above, the XCode project's \"Classes\" folder is a good place to store your native code because it is not overwritten when the project is updated.",515],["Another good place for storing native code is the Assets folder or one of its subfolders. Just add references from the XCode project to the native code files: right click on the \"Classes\" subfolder and choose \"Add-&gt;Existing files...\".",515],["Examples",515],["Bonjour Browser Sample",515],["A simple example of the use of a native code plugin can be found here",515],["This sample demonstrates how objective-C code can be invoked",515],["from a Unity iOS application. This application implements a very simple Bonjour client.",515],["The application consists of a Unity iOS project (Plugins/Bonjour.cs is the C# interface to the native code, while BonjourTest.js is the JS script that implements the application logic) and native code (Assets/Code)",515],["that should be added to the built XCode project.",515],["Positioning GameObjects",516],["When building your games, you'll place lots of different objects in your game world.",516],["Translate, Rotate, and Scale",516],["Use the Transform Tools in the Toolbar to Translate, Rotate, and Scale individual GameObjects.  Each has a corresponding Gizmo that appears around the selected GameObject in the Scene View.  You can use the mouse and manipulate any Gizmo axis to alter the Transform Component of the GameObject, or you can type values directly into the number fields of the Transform Component in the Inspector. Each of the three transform modes can be selected with a hotkey - W for Translate, E for Rotate, R for Scale and T for RectTransform. (The RectTransform is used for positioning UI elements rather than positioning standard GameObjects - see the UI section of the manual for further details.)",516],["You can click and drag in the center of the Gizmo to manipulate the object on all axes at once. At the center of the Translate gizmo, there are three small squares that can be used to drag the object within a single plane (i.e. two axes can be moved at once while the third is kept still). If you have a three button mouse, you can click the middle button and drag to adjust the axis that was most recently moved (the arrow for this axis will change to yellow).",516],["With the rotation tool selected, you can change the object's rotation by clicking and dragging the axes of the wireframe sphere gizmo that appears around it. As with the translation tool, the last axis you changed will be colored yellow and can be further adjusted by clicking the middle mouse button and dragging. Think of the red, green and blue circles as performing rotation around the red, green and blue axes that appear in the translate mode.  (Red is the x-axis, green in the y-axis, and blue is the z-axis.)  Finally, the outer-most circle can be used to rotate the object around the scene view z-axis.  You can think of this as rotating in screen space.",516],["The scaling tool lets you rescale the object evenly on all axes at once by clicking and dragging on the cube at the center of the gizmo. You can also scale the axes individually, but you should take care if you do this when there are child objects since the effect can look quite strange. Again, the last axis changed appears in yellow and can be adjusted by dragging with the middle mouse button.",516],["Note that in 2D mode, the Z axis can't be changed in the scene using the gizmos. However, it is useful for certain scripting techniques to use the Z axis for other purposes; you can still set the Z axis from the inspector in such cases.",516],["For more information on transforming GameObjects, please view the Transform Component page.",516],["Gizmo Display Toggles",516],["The Gizmo Display Toggles are used to define the location of any Transform Gizmo.",516],["For Position:",516],["Center will position the Gizmo at the center of the object's rendered bounds.",516],["Pivot will position the Gizmo at the actual pivot point of a Mesh.",516],["For Rotation:",516],["Local will keep the Gizmo's rotation relative to the object's.",516],["Global will clamp the Gizmo to world space orientation.",516],["Unit Snapping",516],["While dragging any Gizmo Axis using the Translate Tool, you can hold the Control key (Command on Mac) to snap to increments defined in the Snap Settings.",516],["You can change the unit distance that is used for the unit snapping using the menu Edit-&gt;Snap Settings...",516],["Surface Snapping",516],["While dragging in the center using the Translate Tool, you can hold Shift and Control (Command on Mac) to snap the object to the intersection of any Collider. This makes precise positioning of objects incredibly fast.",516],["Look-At Rotation",516],["While using the Rotate Tool, you can hold Shift and Control (Command on Mac) to rotate the object towards a point on the surface of any Collider. This makes orientation of objects relative to one another simple.",516],["Vertex Snapping",516],["You can assemble your worlds more easily with a feature called Vertex Snapping. This feature is a really simple but powerful tool in Unity. It lets you take any vertex from a given mesh and with your mouse place that vertex in the same position as any vertex from any other mesh you choose.",516],["With this you can assemble your worlds really fast. For example, you could align road sections precisely in a racing game or position power up items at the vertices of a mesh.",516],["Using vertex snapping in Unity is simple. Just follow these steps:",516],["Select the mesh you want to manipulate and make sure the Transform Tool is active.",516],["Press and hold the V key to activate the vertex snapping mode.",516],["Move your cursor over the vertex on your mesh that you want to use as the pivot point.",516],["Hold down the left button once your cursor is over the desired vertex and drag your mesh next to any other vertex on another mesh.",516],["Release your mouse button and the V key when you are happy with the results.",516],["Shift-V acts as a toggle of this functionality.",516],["You can snap vertex to vertex, vertex to surface and pivot to vertex.",516],["Prefabs",517],["It is convenient to build a GameObject in the scene by adding components and setting their properties to the appropriate values. This can create problems, however, when you have an object like an NPC, prop or piece of scenery that is reused in the scene several times. Simply copying the object will certainly produce duplicates but they will all be independently editable. Generally, you want all instances of a particular object to have the same properties, so when you edit one object in the scene, you would prefer not to have to make the same edit repeatedly to all the copies.",517],["Fortunately, Unity has a Prefab asset type that allows you to store a GameObject object complete with components and properties. The prefab acts as a template from which you can create new object instances in the scene. Any edits made to a prefab asset are immediately reflected in all instances produced from it but you can also override components and settings for each instance individually.",517],["Note: When you drag an asset file (eg, a Mesh) into the scene, it will create a new object instance and all such instances will change when the original asset is changed. However, although its behaviour is superficially similar, the asset is not a prefab, so you won't be able to add components to it or make use of the other prefab features described below.",517],["Using Prefabs",517],["You can create a prefab by selecting Asset &gt; Create Prefab and then dragging an object from the scene onto the \"empty\" prefab asset that appears. Simply dragging the prefab asset from the project view to the scene view will then create instances of the prefab. Objects created as prefab instances will be shown in the hierarchy view in blue text (normal objects are shown in black text).",517],["As mentioned above changes to the prefab asset itself will be reflected in all instances but you can also modify individual instances separately. This is useful, say, when you want to create several similar NPCs but introduce variations to make them more realistic. To make it clear when a property has been overridden, it is shown in the inspector with its name label in boldface. (When a completely new component is added to a prefab instance, all of its properties will be shown in boldface.)",517],["You can also create instances of prefabs at runtime from your scripts. See the manual page about Instantiating Prefabs for further details.",517],["Editing a Prefab from its Instances",517],["The inspector for a prefab instance has three buttons not present for a normal object: Select, Revert and Apply.",517],["The Select button selects the prefab asset from which the instance was generated. This allows you to edit the main prefab and thereby change all its instances. However, you can also save overridden values from an instance back to the originating prefab using the Apply button (modified Transform position and rotation values are excluded for obvious reasons). This effectively lets you edit all instances via any single instance and is a very quick and convenient way to make global changes. If you experiment with overriding properties but then decide you preferred the default values, you can use the Revert button to realign the instance with its prefab.",517],["Preferences",518],["Unity provides a number of preference panels to allow you to customise the behaviour of the editor.",518],["General",518],["",518],["Auto Refresh Should the editor update assets automatically as they change? ",518],["Always Show Project Wizard Should the project wizard be shown at startup? (By default, it is shown only when the alt key is held down during launch) ",518],["Compress Assets On Import Should assets be compressed automatically during import? ",518],["OSX Color Picker Should the native OSX color picker be used instead of Unity's own? ",518],["Editor Analytics Can the editor send information back to Unity automatically? ",518],["Show Asset Store search hits Should the number of free/paid assets from the store be shown in the Project Browser? ",518],["Verify Saving Assets Should Unity verify which assets to save individually on quitting? ",518],["Skin (Pro Only) Which color scheme should Unity use for the editor? Pro users have the option of dark grey in addition to the default light grey. ",518],["External Tools",518],["",518],["External Script Editor Which application should Unity use to open script files? ",518],["External Script Editor Args Windows only. What arguments to pass to external script editor. $(File) will be replaced with a path to a file being opened. $(Line) will be replaced with a line number that editor should jump to. See examples below. ",518],["Editor Attaching Should Unity allow debugging to be controlled from the external script editor? ",518],["Image Application Which application should Unity use to open image files? ",518],["Revision Control Diff/Merge Which application should Unity use to resolve file differences with the asset server? ",518],["Android SDK Location Where in the filesystem is the Android SDK folder located? ",518],["Examples for script editor args:",518],["Gvim/Vim --remote-tab-silent +$(Line) \"$File\"",518],["Notepad2 -g $(Line) \"$(File)\"",518],["Sublime Text 2 \"$(File)\":$(Line)",518],["Notepad++ -n$(Line) \"$(File)\"",518],["Colors",518],["This panel allows you to choose the colors that Unity uses when displaying various user interface elements.",518],["Keys",518],["This panel allows you to set the keystrokes that activate the various commands in Unity.",518],["Cache Server",518],["",518],["Use Cache Server Should the cache server be enabled? ",518],["IP Address IP address of the cache server, if enabled ",518],["Preparing your own character",519],["There are three main steps in creating an animated humanoid character from scratch: modelling, rigging and skinning.",519],["Modelling",519],["This is the process of creating your own humanoid mesh in a 3D modelling package - 3DSMax, Maya, Blender, etc. Although this is a whole subject in its own right, there are a few guidelines you can follow to ensure a model works well with animation in a Unity project.",519],["Observe a sensible topology. The exact nature of a \"sensible\" structure for your mesh is rather subtle but generally, you should bear in mind how the vertices and triangles of the model will be distorted as it is animated. A poor topology will not allow the model to move without unsightly distortion of the mesh. A lot can be learned by studying existing 3D character meshes to see how the topology is arranged and why.",519],["Be mindful of the scale of your mesh. Do a test import and compare the size of your imported model with a \"meter cube\" (the standard Unity cube primitive has a side length of one unit, so it can be taken as a 1m cube for most purposes). Check the units your 3D package is using and adjust the export settings so that the size of the model is in correct proportion to the cube. Unless you are careful, it is easy to create models without any notion of their scale and consequently end up with a set of objects that are disproportionate in size when they are imported into Unity.",519],["Arrange the mesh so that the character's feet are standing on the local origin or \"anchor point\" of the model. Since a character typically walks upright on a floor, it is much easier to handle if its anchor point (ie, its transform position) is directly on that floor.",519],["Model in a T-pose if you can. This will help allow space to refine polygon detail where you need it (e.g. underarms). This will also make it easier to position your rig inside the mesh.",519],["Clean up your model. Where possible, cap holes, weld verts and remove hidden faces, this will help with skinning, especially automated skinning processes.",519],["Rigging",519],["This is the process of creating a skeleton of joints to control the movements of your model.",519],["3D packages provide a number of ways to create joints for your humanoid rig. These range from ready-made biped skeletons that you can scale to fit your mesh, right through to tools for individual bone creation and parenting to create your own bone structure. To work with Mecanim, the hips should be the root element of the bone hierarchy. A minimum of fifteen bones are required in the skeleton.",519],["The joint/bone hierachy should follow a natural structure for the character you are creating. Given that arms and legs come in pairs, you should use a consistent convention for naming them (eg, \"arm_L\" for the left arm, \"arm_R\" for the right arm, etc). Possible structures for the hierarchy might be:-",519],["HIPS - spine - chest - shoulders - arm - forearm - hand",519],["HIPS - spine - chest - neck - head",519],["HIPS - UpLeg - Leg - foot - toe - toe_end",519],["Skinning",519],["This is the process of attaching the mesh to the skeleton.",519],["Skinning involves binding vertices in your mesh to bones, either directly (rigid bind) or with blended influence to a number of bones (soft bind). Different software packages use different methods, eg, assigning individual vertices and painting the weighting of influence per bone onto the mesh. The initial setup is typically automated, say by finding the nearest influence or using \"heatmaps\". Skinning usually requires a fair amount of work and testing with animations in order to ensure satisfactory results for the skin deformation. Some general guidelines for this process include:",519],["Using an automated process initially to set up some of the skinning (see relevant tutorials on 3DMax, Maya, etc).",519],["Creating a simple animation for your rig or importing some animation data to act as a test for the skinning. This should give you a quick way to evaluate whether or not the skinning looks good in motion.",519],["Incrementally editing and refining your skinning solution.",519],["Sticking to a maximum of four influences when using a soft bind, since this is the maximum number that Unity will handle. If more than four influences affect part of the mesh then at least some information will be lost when playing the animation in Unity.",519],["Preset Libraries",520],["Preset Libraries contain user created data and persist between sessions. They are integrated into the Color Picker, Gradient Editor and Curve Editors.",520],["A preset is e.g a color, gradient or an animation curve that is saved by the user.",520],["A preset library is a collection of presets saved into one file.",520],["Preset libraries contain personal data or project data. They can be saved either in the user preferences folder or in a 'Editor' folder in the Assets folder. Project preset libraries can then be added to revision control for easy sharing between users on a project and added to Asset Store packages.",520],["How to create a color preset:",520],["Click on a color field. E.g select Main Camera in the Hierarchy, then click on Background Color",520],["Adjust a color to your liking",520],["At the bottom you will find the Presets section",520],["Simply click the button to add the current color to the current preset library",520],["The context menu (the icon with the three lines)",520],["You can switch view mode between List Mode and Grid Mode in the context menu (the three lines icon)",520],["Select between available preset libraries",520],["Create new library",520],["In the Create New Library popup you can select whether to create a preset library in the Preferences folder or the Project folder",520],["Show current library in the OS file explorer/finder",520],["Presets can be reordered by dragging",520],["Presets can be deleted by Alt + Left mouse button or by the right click menu",520],["Preset can be renamed from the right click menu (note names are only shown in List Mode)",520],["Selecting a preset library in the project browser will show its contents in the inspector. From here \"Edit..\" can be clicked to modify.",520],["Primitive Objects",521],["Unity can work with 3D models of any shape that can be created with modelling software. However, there are also a number of primitive object types that can be created directly within Unity, namely the Cube, Sphere, Capsule, Cylinder, Plane and Quad. These objects are often useful in their own right (a plane is commonly used as a flat ground surface, for example) but they also offer a quick way to create placeholders and prototypes for testing purposes. Any of the primitives can be added to the scene using the appropriate item on the GameObject &gt; 3D Object menu.",521],["Cube",521],["This is a simple cube with sides one unit long, textured so that the image is repeated on each of the six faces. As it stands, a cube isn't really a very common object in most games but when scaled, it is very useful for walls, posts, boxes, steps and other similar items. It is also a handy placeholder object for programmers to use during development when a finished model is not yet available. For example, a car body can be crudely modelled using an elongated box of roughly the right dimensions. Although this is not suitable for the finished game, it is fine as a simple representative object for testing the car's control code. Since a cube's edges are one unit in length, you can check the proportions of a mesh imported into the scene by adding a cube close by and comparing the sizes.",521],["Sphere",521],["This is a sphere of unit diameter (ie, 0.5 unit radius), textured so that the entire image wraps around once with the top and bottom \"pinched\" at the poles. Spheres are obviously useful for representing balls, planets and projectiles but a semi-transparent sphere can also make a nice GUI device for representing the radius of an effect.",521],["Capsule",521],["A capsule is a cylinder with hemispherical caps at the ends. The object is one unit in diameter and two units high (the body is one unit and the two caps are half a unit each). It is textured so that the image wraps around exactly once, pinched at each hemisphere's apex. While there aren't many real world objects with this shape, the capsule is a useful placeholder for prototyping. In particular, the physics of a rounded object are sometimes better than those of a box for certain tasks.",521],["Cylinder",521],["This is a simple cylinder which is two units high and one unit in diameter, textured so that the image wraps once around the tube shape of the body but also appears separately in the two flat, circular ends. Cylinders are very handy for creating posts, rods and wheels but you should note that the shape of the collider is actually a capsule (there is no primitive cylinder collider in Unity). You should create a mesh of the appropriate shape in a modelling program and attach a mesh collider if you need an accurate cylindrical collider for physics purposes.",521],["Plane",521],["This is a flat square with edges ten units long oriented in the XZ plane of the local coordinate space. It is textured so that the whole image appears exactly once within the square. A plane is useful for most kinds of flat surface, such as floors and walls. A surface is also needed sometimes for showing images or movies in GUI and special effects. Although a plane can be used for things like this, the simpler quad primitive is often a more natural fit to the task.",521],["Quad",521],["The quad primitive resembles the plane but its edges are only one unit long and the surface is oriented in the XY plane of the local coordinate space. Also, a quad is divided into just two triangles whereas the plane contains two hundred. A quad is useful in cases where a scene object must be used simply as a display screen for an image or movie. Simple GUI and information displays can be implemented with quads, as can particles, sprites and \"impostor\" images that substitute for solid objects viewed at a distance.",521],["Procedural Materials",522],["Unity incorporates a new asset type known as Procedural Materials. These are",522],["essentially the same as standard Materials except that the textures they use can be generated at runtime",522],["rather than being predefined and stored.",522],["The script code that generates a texture procedurally will typically take up much less space in storage",522],["and transmission than a bitmap image and so Procedural Materials can help reduce download times.",522],["Additionally, the generation script can be equipped with parameters that can be changed in order to",522],["vary the visual properties of the material at runtime. These properties can be anything from color variations",522],["to the size of bricks in a wall. Not only does this mean that many variations can be generated from a single",522],["Procedural Material but also that the material can be animated on a frame-by-frame basis. Many interesting",522],["visual effects are possible - imagine a character gradually turning to stone or acid damaging a surface as it touches.",522],["Unity's Procedural Material system is based around an industry standard product called Substance, developed",522],["by Allegorithmic.",522],["Supported Platforms",522],["In Unity, Procedural Materials are currently fully supported for PC (Windows, Mac, Linux; both",522],["standalone and webplayer), Android and iOS build targets only. Procedural material generation is CPU-based,",522],["and works on all hardware configurations on these platforms.",522],["For all other platforms (consoles, WSA/WP8, WebGL, BlackBerry), Unity will pre-render (\"bake\") them into ordinary",522],["Materials during the build. Although this clearly negates the runtime benefits of procedural generation,",522],["it is still useful to be able to create variations on a basic material in the editor.",522],["Adding Procedural Materials to a Project",522],["A Procedural Material is supplied as a Substance Archive file (SBSAR) which you can import like any other",522],["asset (drag and drop directly onto the Assets folder or use Assets-&gt;Import New Asset...).",522],["A Substance Archive asset contains one or more Procedural Materials and contains all the scripts and images",522],["required by these. Uncompiled SBS files are not supported.",522],["Although they are implemented differently, Unity handles a Procedural Material just like any other Material.",522],["To assign a Procedural Material to a mesh, for example, you just drag and drop it onto the mesh exactly as",522],["you would with any other Material.",522],["Procedural Properties",522],["Each Procedural Material is a custom script which generates a particular type of material. These scripts",522],["are similar to Unity scripts in that they can have variables exposed for assignment in the inspector.",522],["For example, a \"Brick Wall\" Procedural Material could expose properties that let you set the number of",522],["courses of bricks, the colors of the bricks and the color of the mortar. This potentially offers infinite",522],["material variations from a single asset. These properties can also be set from a script at runtime in much",522],["the same way as the public variables of a MonoBehaviour script.",522],["Procedural Materials can also incorporate complex texture animation. For example, you could animate the",522],["hands of the clock or cockroaches running across a floor.",522],["Creating Procedural Materials From Scratch",522],["Procedural Materials can work with any combination of procedurally generated textures and stored bitmaps.",522],["Additionally, included bitmap images can be filtered and modified before use. Unlike a standard Material,",522],["a Procedural Material can use vector images in the form of SVG files which allows for resolution-independent textures.",522],["The design tools available for creating Procedural Materials from scratch use visual, node-based editing",522],["similar to the kind found in artistic tools. This makes creation accessible to artists who may have little",522],["or no coding experience. As an example, here is a screenshot from Allegorithmic's Substance Designer which",522],["shows a \"brick wall\" Procedural Material under construction:",522],["Obtaining Procedural Materials",522],["Since Unity's Procedural Materials are based on the industry standard Substance product, Procedural Material",522],["assets are readily available from internet sources, including Unity's own Asset Store. Allegorithmic's",522],["Substance Designer can be used to create Procedural Materials, but there are other applications",522],["(3D modelling apps, for example) that incorporate the Substance technology and work just as well with Unity.",522],["Performance and Optimization",522],["Procedural Materials inherently tend to use less storage than bitmap images. However, the trade-off is",522],["that they are based around scripts and running those scripts to generate materials requires some",522],["CPU and GPU resources. The more complex your Procedural Materials are, the greater their runtime overhead.",522],["Procedural Materials support a form of caching whereby the material is only updated if its parameters",522],["have changed since it was last generated. Further to this, some materials may have many properties",522],["that could theoretically be changed and yet only a few will ever need to change at runtime. In such",522],["cases, you can inform Unity about the variables that will not change to help it cache as much data as",522],["possible from the previous generation of the material. This will often improve performance significantly.",522],["Procedural Materials can refer to hidden, system-wide, variables, such as elapsed time or number of",522],["Procedural Material instances (this data can be useful for animations). Changes in the values of these",522],["variables can still force a Procedural Material to update even if none of the explicitly defined parameters change.",522],["Procedural Materials can also be used purely as a convenience in the editor (ie, you can generate a",522],["standard Material by setting the parameters of a Procedural Material and then \"baking\" it). This will",522],["remove the runtime overhead of material generation but naturally, the baked materials can't be changed",522],["or animated during gameplay.",522],["Using the Substance Player to Analyze Performance",522],["Since the complexity of a Procedural Material can affect runtime performance, Allegorithmic",522],["incorporates profiling features in its Substance Player tool. This tool is available to download",522],["for free from Allegorithmic's website.",522],["Substance Player uses the same optimized rendering engine as the one integrated into Unity, so",522],["its rendering measurement is more representative of performance in Unity than that of Substance Designer.",522],["See Also",522],["Procedural Material reference page.",522],["Profiler",523],["The Unity Profiler helps you to optimize your game. It reports for you how much time is spent in the various areas of your game. For example, it can report the percentage of time spent rendering, animating or in your game logic.",523],["You can play your game in the Editor with Profiling on, and it will record performance data. The Profiler window then displays the data in a timeline, so you can see the frames or areas that spike (take more time) than others. By clicking anywhere in the timeline, the bottom section of the Profiler window will display detailed information for the selected frame.",523],["Note that profiling has to instrument your code. This instrumentation has a small impact on the performance of your game. Typically this overhead is small enough to not affect the game framerate. When using profiling it is typical to consider only the ratio (or percentage) of time spent in certain areas. Also, to improve performance focus on those parts of the game that consume the most time. Compare profiling results before and after code changes and determine the improvements you measure. Sometimes changes you make to improve performance might have a negative effect on frame rate; unexpected consequences of code optimization should be expected.",523],["Details of the Profiler window are described in the next page.",523],["See Also",523],["Optimizing Graphics Performance page.",523],["Webplayer",523],["For webplayer profiling, follow these steps:",523],["Check the Development Build checkbox in Unity's Build Settings dialog and also open the Profiler window before starting the build.",523],["When the game is running in the webplayer, make sure that Release Channel is set to Development. Alt+right-click on the web player to open the release channel selection menu.",523],["Select OSXWebPlayer(YOURCOMPUTERNAME) or WindowsWebPlayer(YOURCOMPUTERNAME) as appropriate from the Profiler Window's Active Profiler drop-down menu.",523],["iOS",523],["Remote profiling can be enabled on iOS devices by following these steps:",523],["Connect your iOS device to your WiFi network (local/adhoc WiFi network is used by profiler to send profiling data from device to the Unity Editor).",523],["Check \"Autoconnect Profiler\" checkbox in Unity's build settings dialog.",523],["Attach your device to your Mac via cable, check the “Development Build” checkbox in Unity’s build settings dialog, and hit \"Build &amp; Run\" in Unity Editor.",523],["When app launches on device open profiler window in Unity Editor (Window-&gt;Profiler).",523],["If you are using a firewall, you need to make sure that ports 54998 to 55511 are open in the firewall's outbound rules - these are the ports used by Unity for remote profiling.",523],["Note: Sometimes Unity Editor might not autoconnect to the device. In such cases profiler connection might be initiated from Profiler Window Active Profiler drop down menu by select appropriate device.",523],["Android",523],["Remote profiling can be enabled on Android devices through two different paths : WiFi or ADB.",523],["For WiFi profiling, follow these steps:",523],["Make sure to disable Mobile Data on your Android device.",523],["Connect your Android device to your WiFi network.",523],["Attach your device to your Mac/PC via cable, check the “Development Build” and \"Autoconnect Profiler\" checkboxes in Unity’s build settings dialog, and hit \"Build &amp; Run\" in Unity Editor.",523],["When the app launches on the device, open the profiler window in Unity Editor (Window-&gt;Profiler)",523],["If the Unity Editor fails to autoconnect to the device, select the appropriate device from the Profiler Window Active Profiler drop down menu.",523],["Note: The Android device and host computer (running the Unity Editor) must both be on the same subnet for the device detection to work.",523],["For ADB profiling, follow these steps:",523],["Attach your device to your Mac/PC via cable and make sure ADB recognizes the device (i.e. it shows in adb devices list).",523],["Check the \"Development Build\" checkbox in Unity's build settings dialog, and hit \"Build &amp; Run\".",523],["When the app launches on the device, open the profiler window in Unity Editor (Window-&gt;Profiler)",523],["Select the AndroidProfiler(ADB@127.0.0.1:54999) from the Profiler Window Active Profiler drop down menu.",523],["Note: The Unity editor will automatically create an adb tunnel for your application when you press \"Build &amp; Run\".",523],["If you want to profile another application or you restart the adb server you have to setup this tunnel manually. To do this, open a Terminal window / CMD prompt and enter:",523],["adb forward tcp:54999 localabstract:Unity-{insert bundle identifier here}",523],["Note: The entry in the drop down menu is only visible when the selected target is Android.",523],["If you are using a firewall, you need to make sure that ports 54998 to 55511 are open in the firewall's outbound rules - these are the ports used by Unity for remote profiling.",523],["Audio Area",524],["The Audio area displays audio statistics:",524],["Playing Sources is the total playing sources in the scene at a specific frame. Monitor this to see if audio is overloaded.",524],["Paused Sources is the total paused sources in the scene at a specific frame.",524],["Audio Voice is the actually number of audio (FMOD channels) voices used. PlayOneShot is using voices not shown in Playing Sources.",524],["Audio Memory is the total RAM used by the audio engine.",524],["CPU usage can be seen in the bottom. Monitor this to see if Audio alone is taking up too much CPU.",524],["Note: When an audio asset in Ogg Vorbis format is imported with the Compressed In Memory option, the memory usage reported by the profiler may be unexpectedly low. This happens for platforms that use FMOD audio - FMOD doesn't support Ogg Vorbis with the Compressed In Memory option, so the import setting is silently changed to Stream From Disk (which has much lower memory overheads).",524],["CPU Usage Area",525],["The CPU Usage area displays where time is spent in your game. When it is selected, the lower pane displays hierarchical time data for the selected frame.",525],["Hierarchy mode: Displays hierarchical time data.",525],["Group Hierarchy mode: Groups time data into logical groups (Rendering, Physics, Scripts etc.). Because children of any group can be in different group (e.g. some script might call rendering functions), the percentages of group times often add up to more than 100%. (This is not a bug.)",525],["The way the CPU chart is stacked can be reordered by simply dragging chart labels up &amp; down.",525],["Selecting Individual Items",525],["When an item is selected in the lower pane, its contribution to the CPU chart is highlighted (and the rest are dimmed). Clicking on an item again de-selects it.",525],["In the hierarchical time data the self time refers to the amount of time spent in a particular function not including the time spent calling sub-functions. In the screenshot above, for example 41.1% of time is spent in the Camera.Render function. This function does a lot of work and calls the various drawing and culling functions. Excluding all these functions only 2.1% of time is spent actually in the Camera.Render function. The Time ms and Self ms columns show the same information, but presented in milliseconds.  So, Camera.Render takes 0.01ms, but including all the functions it calls, 0.21ms are consumed. The GC Alloc column shows how much memory has been allocated in the current frame, which will be collected later by the garbage collector. By designing your code to keep this value at zero, you can avoid the Garbage Collector from causing hiccups in your framerate.",525],["The Others section of the CPU profiler records the total of all areas that do not fall into Renderer, Scripts, Physics, Garbage Collection or VSync. This includes Animation, AI, Audio, Particles, Networking, Loading, and PlayerLoop.",525],["Physics Markers",525],["The descriptions below provide a brief account of what each of the various high level physics profiler markers mean:",525],["Physics.Simulate: Called from FixedUpdate. This updates the present state of the physics by instructing PhysX to run its simulation.",525],["Physics.Processing: Called from FixedUpdate. This is where all the non-cloth physics jobs are processed. Expanding this marker will show low level detail of the work being done internally in PhysX.",525],["Physics.ProcessingCloth: Called from FixedUpdate. This is where all the cloth physics jobs are processed. Expanding this marker will show low level detail of the work being done internally in PhysX.",525],["Physics.FetchResults: Called from FixedUpdate. This is where the results of the physics simulation are collected from PhysX.",525],["Physics.UpdateBodies: Called from FixedUpdate. This is where all the physics bodies have their positions and rotations updated as well as where messages that communicate these updates are sent.",525],["Physics.ProcessReports: Called from FixedUpdate. This stage is run once the physics fixed update has concluded and is where all the various stages of responding to the results of the simulation are processed. Contacts, joint breaks and triggers are updated and messaged here. There are four distinct sub stages:",525],["Physics.TriggerEnterExits: Called from FixedUpdate. This is where OnTriggerEnter and OnTriggerExit events are processed.",525],["Physics.TriggerStays: Called from FixedUpdate. This is where OnTriggerStay events are processed.",525],["Physics.Contacts: Called from FixedUpdate. This is where OnCollisionEnter, OnCollisionExit and OnCollisionStay events are processed.",525],["Physics.JointBreaks: Called from FixedUpdate. This is where updates and messages relating to joints being broken is processed.",525],["Physics.UpdateCloth: Called from Update. This is where updates relating to cloth and their skinned meshes are made.",525],["Physics.Interpolation: Called from Update. This stage deals with the interpolation of positions and rotations for all the physics objects.",525],["Performance Warnings",525],["There are some common performance issues the profiler is able to detect and warn you about. These warnings appear in the warning column of the lower pane, when viewing the CPU Usage.",525],["The specific issues the profiler can detect are:",525],["Static Collider.Modify (Expensive delayed cost)",525],["Static Collider.Move (Expensive delayed cost)",525],["Static Collider.Create (Expensive delayed cost)",525],["Animation.DestroyAnimationClip [Triggers RebuildInternalState]",525],["Animation.AddClip [Triggers RebuildInternalState]",525],["Animation.RemoveClip [Triggers RebuildInternalState]",525],["Animation.Clone [Triggers RebuildInternalState]",525],["Animation.Deactivate [Triggers RebuildInternalState]",525],["In the screenshot above, the profiler is showing the Static Collider.Move warning. The warning column shows that this warning has been triggered 12 times in the current frame. The term \"Delayed Cost\" means that although the entry in the profiler may show a low cost (in this case 0.00ms) the action may trigger expensive operations later on.",525],["GPU Area",526],["The GPU profiler is similar to the CPU profiler with the various contributions to rendering time shown as a hierarchy in the bottom panel. Selecting an item from the hierarchy will show a breakdown in the panel to the right.",526],["Please note that on the Mac, GPU profiling is only available under OSX 10.9 Mavericks and later versions.",526],["Memory Area",527],["There are two modes in which you can inspect memory usage of your application. This is selected in the dropdown in the top of the bottom panel.",527],["Simple View",527],["The simple mode shows how memory is used through out unity on a higher level in realtime on a per frame basis.",527],["Unity reserves memory pools for allocations in order to avoid asking the os for memory too often. This is displayed as a reserved amount and how much is used.",527],["The areas covered by this is:",527],["Unity The amount of memory tracked by allocations in native unity code",527],["Mono The Total heap size and used heap size used by Managed Code - this memory is garbagecollected",527],["GfxDriver The estimated amount of memory the driver is using on Textures, Rendertargets, shaders and Meshdata",527],["FMOD The Audio drivers estimated memory usage",527],["Profiler Memory used for the profilerdata",527],["The numbers that are displayed are not going to show the same amount as the Task Manager or Activity Monitor, because there are some usage that is untracked by the memory profiler. This includes memory used by some drivers and memory used for Executable code.",527],["Memory stats are shown for some of the most common asset/object types and include the count and the used memory (main and video memory)",527],["Textures",527],["Meshes",527],["Materials",527],["Animations",527],["Audio",527],["Object Count is the total number of Objects that are created. If this number rises over time then it means your game is creating some objects that are never destroyed.",527],["Detailed View",527],["The Detailed View, will let you take a snapshot of the current state. Use the \"Take Sample\" button to capture detailed memory usage. Obtaining this data takes some time, so the Detailed View should not be expected to give you real-time details. After taking a sample the profiler window will be updated with a treeview where you can explore different memory usage.",527],["This will display individual asset and game object memory usage. It will also display a reason for an object to be in memory. The reasons can be of the following:",527],["Referenced from native code",527],["Scene object",527],["Built-in Resources",527],["Marked as don't save",527],["When in the editor, clicking on an object in the list, will take you to the object in either the project or the scene view.",527],["When profiling in the editor, all numbers displayed by the memory profiler are the usage by the editor. These will be somewhat larger than when running in a player, because of editor overhead. For more precise numbers and memory usage for your app, use the profiler connection to connect to the running player. This will give the actual usage on the device.",527],["Memory reported under System.ExecutableAndDlls is read-only memory, therefore OS might discard these pages at need and later reload from the file system. So it makes little memory pressure and it rarely directly contributes to OS decision to kill application. Also some of these pages might be shared with other applications (which are using the same frameworks).",527],["Physics Profiler",528],["Physics Area",528],["The Physics area shows the following statistics about the physics in the scene:-",528],["Active Rigidbodies is the number of rigidbodies that are not currently sleeping (ie, they are moving or just coming to rest).",528],["Sleeping Rigidbodies is the number of rigidbodies that are completely at rest and therefore don't need to be updated actively by the physics engine (see Rigidbody Sleeping for further details).",528],["Number of Contacts is the total number of points of contact between all colliders in the scene.",528],["Static Colliders is the number of colliders attached to non-rigidbody objects (ie, objects which never move under physics).",528],["Dynamic Colliders is the number of colliders attached to rigidbody objects (ie, objects which do move under physics).",528],["Rendering Area",529],["The Rendering area displays rendering statistics. The number of Batches, SetPass Calls, Triangles and Vertices rendered is displayed graphically in the timeline. The lower pane displays more rendering statistics and these more closely match the ones shown in the GameView Rendering Statistics window.",529],["Profiler window",530],["Attaching to Unity players",530],["To profile your game running on an other device or a player running on another computer, it is possible to connect the editor to that other player. The dropdown Active Profiler will show all players running on the local network. These players are identified by player type and the host name running the player \"iPhonePlayer (Toms iPhone)\".",530],["To be able to connect to a player, the player must be launched with the Development Build checkbox found in the Build Settings dialog. From here it is also possible to tick a checkbox to make the Editor and Player Autoconnect at startup.",530],["Profiler Controls",530],["Profiler controls are in the toolbar at the top of the window. Use these to turn profiling on and off, navigate through profiled frames and so on. The transport controls are at the far right end of the toolbar. Note that when the game is running and the profiler is collecting data clicking on any of these transport controls will pause the game. The controls go to the first recorded frame, step one frame back, step one frame forward and go to the last frame respectively. The profiler does not keep all recorded frames, so the notion of the first frame should really be though of as the oldest frame that is still kept in memory. The \"current\" transport button causes the profile statistics window to display data collected in real-time. The Active Profiler popup menu allows you to select whether profiling should be done in the editor or a separate player (for example, a game running on an attached iOS device).",530],["Deep Profiling",530],["When you turn on Deep Profile, all your script code is profiled - that is, all function calls are recorded. This is useful to know where exactly time is spent in your game code.",530],["Note that Deep Profiling incurs a very large overhead and uses a lot of memory, and as a result your game will run significantly slower while profiling. If you are using complex script code, Deep Profiling might not be possible at all. Deep profiling should work fast enough for small games with simple scripting. If you find that Deep Profiling for your entire game causes the frame rate to drop so much that the game barely runs, you should consider not using this approach, and instead use the approach described below. You may find deep profiling more helpful as you are designing your game and deciding how to best implement key features. Note that for large games deep profiling may cause Unity to run out of memory and so for this reason deep profiling may not be possible.",530],["Manually profiling blocks of your script code will have a smaller overhead than using Deep Profiling. Use Profiler.BeginSample and Profiler.EndSample scripting functions to enable and disable profiling around sections of code.",530],["View SyncTime",530],["When running at a fixed framerate or running in sync with the vertical blank, Unity records the waiting time in \"Wait For Target FPS\". By default this amount of time is not shown in the profiler. To view how much time is spent waiting, you can toggle \"View SyncTime\". This is also a measure of how much headroom you have before losing frames.",530],["Profiler Timeline",530],["The upper part of the Profiler window displays performance data over time. When you run a game, data is recorded each frame, and the history of the last several hundred frames is displayed. Clicking on a particular frame will display it's details in the lower part of the window. Different details are displayed depending on which timeline area is currently selected.",530],["The vertical scale of the timeline is managed automatically and will attempt to fill the vertical space of the window. Note that to get more detail in say the CPU Usage area you can remove the Memory and Rendering areas. Also, the splitter between the timeline and the statistics area can be selected and dragged downward to increase the screen area used for the timeline chart.",530],["The timeline consists of several areas: CPU Usage, Rendering and Memory. These areas can be removed by clicking the close button in the panel, and re-added again using the Add Area drop down in the Profile Controls bar.",530],["Note that the coloured squares in the label area can control whether the associated timeline is displayed or not. To remove a sample from the display click on the colour key. The key will dim and the data will be removed from the graph. This can be useful to identify the cause of spikes in the CPU graph, for example.",530],["Project Browser",531],["In this view, you can access and manage the assets that belong to your project.",531],["The left panel of the browser shows the folder structure of the project as a hierarchical list. When a folder is selected from the list by clicking, its contents will be shown in the panel to the right. You can click the small triangle to expand or collapse the folder, displaying any nested folders it contains. Hold down Alt while you click to expand or collapse any nested folders recursively.",531],["The individual assets are shown in the right hand panel as icons that indicate their type (script, material, sub-folder, etc). The icons can be resized using the slider at the bottom of the panel; they will be replaced by a hierarchical list view if the slider is moved to the extreme left. The space to the left of the slider shows the currently selected item, including a full path to the item if a search is being performed.",531],["Above the project structure list is a Favorites section where you can keep frequently-used items for easy access. You can drag items from the project structure list to the Favourites and also save search queries there (see Searching below).",531],["Just above the panel is a \"breadcrumb trail\" that shows the path to the folder currently being viewed. The separate elements of the trail can be clicked for easy navigation around the folder hierarchy. When searching, this bar changes to show the area being searched (the root Assets folder, the selected folder or the Asset Store) along with a count of free and paid assets available in the store, separated by a slash. There is an option in the General section of Unity's Preferences window to disable the display of Asset Store hit counts if they are not required.",531],["Along the top edge of the window is the browser's toolbar.",531],["Located at the left side of the toolbar, the Create menu lets you add new assets and sub-folders to the current folder. To its right are a set of tools to allow you to search the assets in your project.",531],["The Window menu provides the option of switching to a one-column version of the project view, essentially just the hierarchical structure list without the icon view. The lock icon next to the menu enables you to \"freeze\" the current contents of the view (ie, stop them being changed by events elsewhere) in a similar manner to the inspector lock.",531],["Searching",531],["The browser has a powerful search facility that is especially useful for locating assets in large or unfamiliar projects. The basic search will filter assets according to the text typed in the search box",531],["If you type more than one search term then the search is narrowed, so if you type coastal scene it will only find assets with both \"coastal\" and \"scene\" in the name (ie, terms are ANDed together).",531],["To the right of the search bar are three buttons. The first allows you to further filter the assets found by the search according to their type.",531],["Continuing to the right, the next button filters assets according to their Label (labels can be set for an asset in the Inspector). Since the number of labels can potentially be very large, the label menu has its own mini-search filter box.",531],["Note that the filters work by adding an extra term in the search text. A term beginning with \"t:\" filters by the specified asset type, while \"l:\" filters by label. You can type these terms directly into the search box rather than use the menu if you know what you are looking for. You can search for more than one type or label at once. Adding several types will expand the search to include all specified types (ie, types will be ORed together). Adding multiple labels will narrow the search to items that have all the specified labels (ie, labels are ANDed).",531],["The rightmost button saves the search by adding an item to the Favourites section of the asset list.",531],["Searching the Asset Store",531],["The Project Browser's search can also be applied to assets available from the Unity Asset Store. If you choose Asset Store from the menu in the breadcrumb bar, all free and paid items from the store that match your query will be displayed. Searching by type and label works the same as for a Unity project. The search query words will be checked against the asset name first and then the package name, package label and package description in that order (so an item whose name contains the search terms will be ranked higher than one with the same terms in its package description).",531],["If you select an item from the list, its details will be displayed in the inspector along with the option to purchase and/or download it. Some asset types have previews available in this section so you can, for example, rotate a 3D model before buying. The inspector also gives the option of viewing the asset in the usual Asset Store window to see additional details.",531],["Shortcuts",531],["The following keyboard shortcuts are available when the browser view has focus. Note that some of them only work when the view is using the two-column layout (you can switch between the one- and two-column layouts using the panel menu in the very top right corner).",531],["",531],["F Frame selected (ie, show the selected asset in its containing folder) ",531],["Tab Shift focus between first column and second column (Two columns) ",531],["Ctrl/Cmd + F Focus search field ",531],["Ctrl/Cmd + A Select all visible items in list ",531],["Ctrl/Cmd + D Duplicate selected assets ",531],["Delete Delete with dialog ",531],["Delete + Shift Delete without dialog ",531],["Backspace + Cmd Delete without dialogs (OSX) ",531],["Enter Begin rename selected (OSX) ",531],["Cmd + down arrow Open selected assets (OSX) ",531],["Cmd + up arrow Jump to parent folder (OSX, Two columns) ",531],["F2 Begin rename selected (Win) ",531],["Enter Open selected assets (Win) ",531],["Backspace Jump to parent folder (Win, Two columns) ",531],["Right arrow Expand selected item (tree views and search results). If the item is already expanded, this will select its first child item. ",531],["Left arrow Collapse selected item (tree views and search results). If the item is already collapsed, this will select its parent item. ",531],["Alt + right arrow Expand item when showing assets as previews ",531],["Alt + left arrow Collapse item when showing assets as previews ",531],["Protecting Content",532],["Whilst it is possible to use encryption to secure your Assets as they are being transmitted, once the data is in the hands of the client it is possible to find ways to grab the content from them. For instance, there are tools out there which can record 3D data at the driver level, allowing users to extract models and textures as they are sent to the GPU. For this reason, our general stance is that if users are determined to extract your assets, they will be able to.",532],["However, it is possible for you to use your own data encryption on AssetBundle files if you still want to.",532],["One way to do this is making use of the TextAsset type to store your data as bytes. You can encrypt your data files and save them with a .bytes extension, which Unity will treat as a TextAsset type. Once imported in the Editor the files as TextAssets can be included in your AssetBundle to be placed in a server. In the client side the AssetBundle would be downloaded and the content decrypted from the bytes stored in the TextAsset. With this method the AssetBundles are not encrypted, but the data stored which is stored as TextAssets is.",532],["string url = \"http://www.mywebsite.com/mygame/assetbundles/assetbundle1.unity3d\";",532],["IEnumerator Start () {",532],["// Start a download of the encrypted assetbundle",532],["WWW www = new WWW.LoadFromCacheOrDownload (url, 1);",532],["// Wait for download to complete",532],["yield return www;",532],["// Load the TextAsset from the AssetBundle",532],["TextAsset textAsset = www.assetBundle.Load(\"EncryptedData\", typeof(TextAsset));",532],["// Get the byte data",532],["byte[] encryptedData = textAsset.bytes;",532],["// Decrypt the AssetBundle data",532],["byte[] decryptedData = YourDecryptionMethod(encryptedData);",532],["// Use your byte array. The AssetBundle will be cached",532],["An alternative approach is to fully encrypt the AssetBundles from source and then download them using the WWW class. You can give them whatever file extension you like as long as your server serves them up as binary data. Once downloaded you would then use your decryption routine on the data from the .bytes property of your WWW instance to get the decrypted AssetBundle file data and create the AssetBundle from memory using AssetBundle.CreateFromMemory.",532],["string url = \"http://www.mywebsite.com/mygame/assetbundles/assetbundle1.unity3d\";",532],["IEnumerator Start () {",532],["// Start a download of the encrypted assetbundle",532],["WWW www = new WWW (url);",532],["// Wait for download to complete",532],["yield return www;",532],["// Get the byte data",532],["byte[] encryptedData = www.bytes;",532],["// Decrypt the AssetBundle data",532],["byte[] decryptedData = YourDecryptionMethod(encryptedData);",532],["// Create an AssetBundle from the bytes array",532],["AssetBundleCreateRequest acr = AssetBundle.CreateFromMemory(decryptedData);",532],["yield return acr;",532],["AssetBundle bundle = acr.assetBundle;",532],["// You can now use your AssetBundle. The AssetBundle is not cached.",532],["The advantage of this latter approach over the first one is that you can use any method (except AssetBundles.LoadFromCacheOrDownload) to transmit your bytes and the data is fully encrypted - for example sockets in a plugin. The drawback is that it won't be Cached using Unity's automatic caching. You can in all players except the WebPlayer store the file manually on disk and load it using AssetBundles.CreateFromFile",532],["A third approach would combine the best of both approaches and store an AssetBundle itself as a TextAsset, inside another normal AssetBundles. The unencrypted AssetBundle containing the encrypted one would be cached. The original AssetBundle could then be loaded into memory, decrypted and instantiated using AssetBundle.CreateFromMemory.",532],["string url = \"http://www.mywebsite.com/mygame/assetbundles/assetbundle1.unity3d\";",532],["IEnumerator Start () {",532],["// Start a download of the encrypted assetbundle",532],["WWW www = new WWW.LoadFromCacheOrDownload (url, 1);",532],["// Wait for download to complete",532],["yield return www;",532],["// Load the TextAsset from the AssetBundle",532],["TextAsset textAsset = www.assetBundle.Load(\"EncryptedData\", typeof(TextAsset));",532],["// Get the byte data",532],["byte[] encryptedData = textAsset.bytes;",532],["// Decrypt the AssetBundle data",532],["byte[] decryptedData = YourDecryptionMethod(encryptedData);",532],["// Create an AssetBundle from the bytes array",532],["AssetBundleCreateRequest acr = AssetBundle.CreateFromMemory(decryptedData);",532],["yield return acr;",532],["AssetBundle bundle = acr.assetBundle;",532],["// You can now use your AssetBundle. The wrapper AssetBundle is cached",532],["Publishing Builds",533],["At any time while you are creating your game, you might want to see how it looks when you build and run it outside of the editor as a standalone or web player. This section will explain how to access the Build Settings and how to create different builds of your games.",533],["File-&gt;Build Settings... is the menu item to access the Build Settings window. It pops up an editable list of the scenes that will be included when you build your game.",533],["The first time you view this window in a project, it will appear blank. If you build your game while this list is blank, only the currently open scene will be included in the build. If you want to quickly build a test player with only one scene file, just build a player with a blank scene list.",533],["It is easy to add scene files to the list for multi-scene builds. There are two ways to add them. The first way is to click the Add Current button. You will see the currently open scene appear in the list. The second way to add scene files is to drag them from the Project View to the list.",533],["At this point, notice that each of your scenes has a different index value. Scene 0 is the first scene that will be loaded when you build the game. When you want to load a new scene, use Application.LoadLevel() inside your scripts.",533],["If you've added more than one scene file and want to rearrange them, simply click and drag the scenes on the list above or below others until you have them in the desired order.",533],["If you want to remove a scene from the list, click to highlight the scene and press Command-Delete. The scene will disappear from the list and will not be included in the build.",533],["When you are ready to publish your build, select a Platform and make sure that the Unity logo is next to the platform; if its not then click in the Switch Platform button to let Unity know which platform you want to build for. Finally press the Build button. You will be able to select a name and location for the game using a standard Save dialog. When you click Save, Unity builds your game pronto. It's that simple. If you are unsure where to save your built game to, consider saving it into the projects root folder. You cannot save the build into the Assets folder.",533],["Enabling the Development Build checkbox on a player will enable Profiler functionality and also make the Autoconnect Profiler and Script Debugging options available.",533],["Web Player Streaming",533],["Streaming Web Players allow your Web Player games to begin playing as soon as Scene 0 is finished loading. If you have a game with 10 levels, it doesn't make much sense to force the player to wait and download all assets for levels 2-10 before they can start playing level 1. When you publish a Streaming Web Player, the assets that must be downloaded will be sequenced in the order of the Scene file they appear in. As soon as all assets contained in Scene 0 are finished downloading, the Web Player will begin playing.",533],["Put simply, Streaming Web Players will get players playing your game faster than ever.",533],["The only thing you need to worry about is checking to make sure that the next level you want to load is finished streaming before you load it.",533],["Normally, in a non-streamed player, you use the following code to load a level:",533],["Application.LoadLevel(\"levelName\");",533],["In a Streaming Web Player, you must first check that the level is finished streaming. This is done through the CanStreamedLevelBeLoaded() function. This is how it works:",533],["var levelToLoad = 1;",533],["function LoadNewLevel () {",533],["if (Application.CanStreamedLevelBeLoaded (levelToLoad)) {",533],["Application.LoadLevel (levelToLoad);",533],["If you would like to display the level streaming progress to the player, for a loading bar or other representation, you can read the progress by accessing GetStreamProgressForLevel().",533],["Offline webplayer deployment",533],["If the Offline Deployment option is enabled for a webplayer then the UnityObject.js file (used to interface the player with the host page) will be placed alongside the player during the build. This enables the player to work with the local script file even when there is no network connection; normally, UnityObject.js is downloaded from Unity's webserver so as to make use of the latest version.",533],["Building standalone players",533],["With Unity you can build standalone applications for Windows, Mac and Linux. It's simply a matter of choosing the build target in the build settings dialog, and hitting the 'Build' button.",533],["When building standalone players, the resulting files will vary depending on the build target. On Windows an executable file (.exe) will be built, along with a Data folder which contains all the resources for your application. On Mac an app bundle will be built, containing the file needed to run the application, as well as the resources.",533],["Distributing your standalone on Mac is just to provide the app bundle (everything is packed in there). On Windows you need to provide both the .exe file and the Data folder for others to run it. Think of it like this: Other people must have the same files on their computer, as the resulting files that Unity builds for you, in order to run your game.",533],["Inside the build process",533],["The building process will place a blank copy of the built game application wherever you specify. Then it will work through the scene list in the build settings, open them in the editor one at a time, optimize them, and integrate them into the application package. It will also calculate all the assets that are required by the included scenes and store that data in a separate file within the application package.",533],["Any GameObject in a scene that is tagged with 'EditorOnly' will be not be included in the published build. This is useful for debugging scripts that don't need to be included in the final game.",533],["When a new level loads, all the objects in the previous level are destroyed. To prevent this, use DontDestroyOnLoad() on any objects you don't want destroyed. This is most commonly used for keeping music playing while loading a level, or for game controller scripts which keep game state and progress.",533],["After the loading of a new level is finished, the message: OnLevelWasLoaded() will be sent to all active game objects.",533],["For more information on how to best create a game with multiple scenes, for instance a main menu, a high-score screen, and actual game levels, check our Tutorials.",533],["Preloading",533],["Published builds automatically preload all assets in a scene when the scene loads. The exception to this rule is scene 0. This is because the first scene is usually a splashscreen, which you want to display as quickly as possible.",533],["To make sure all your content is preloaded, you can create an empty scene which calls Application.LoadLevel(1). In the build settings make this empty scene's index 0. All subsequent levels will be preloaded.",533],["You're ready to build games",533],["By now, you have learned how to use Unity's interface, how to use assets, how to create scenes, and how to publish your builds. There is nothing stopping you from creating the game of your dreams. You'll certainly learn much more along the way, and we're here to help.",533],["To learn more about constructing game levels, see the section on Building Scenes.",533],["To learn more about Scripting, see the Scripting Section.",533],["To learn more about creating Art assets, see the Assets section of the manual.",533],["To interact with the community of Unity users and developers, visit the Unity Forums. You can ask questions, share projects, build a team, anything you want to do. Definitely visit the forums at least once, because we want to see the amazing games that you make.",533],["Ragdoll Stability",534],["Tips for improving ragdoll stability.",534],["\nAvoid small joint angles of \"Angular Y Limit\" and \"Angular Z Limit\". Depending on your setup the minimum angles should be around 5 to 15 degrees in order to be stable. Instead of using a small angle try setting the angle to zero. This will lock the axis and provide a stable simulation.\n",534],["\nSet the joint property \"Enable Preprocessing\" to false (unchecked). Disabling the preprocessing can help against joints \"blowing up\". Joints can \"blow up\" if they are forced into situations where there is no possible way to satisfy the joint constraints. This can occur if jointed rigid bodies are pulled apart by static collision geometry, like spawning a ragdoll partially inside a wall.\n",534],["\nRagdoll stability or stretching: If ragdolls are given extreme circumstances, such as spawning partially inside a wall or pushed with a large force, the joint solver will be unable to keep the rigid bodies together. This can result in stretching or a \"cloud of body parts\". Please enable projection on the joints, using either \"ConfigurableJoint.projectionMode\" or \"CharacterJoint.enableProjection\".\n",534],["\nIf bodies connected with joints are jittering try increase Edit->Project Settings->Physics->\"Solver Iteration Count\". Try between 10 or 20.\n",534],["\nNever user direct use direct transform access with kinematic bodies jointed to other bodies. Doing so skips the step where PhysX computes internal velocities of corresponding bodies and thus makes solver provide unpleasant results. We've seen some 2D projects using direct transform access to flip characters via altering \"transform.direction\" on the root boon of the rig. This behaves much better if you use MovePosition / MoveRotation / Move instead.\n",534],["Adding Random Gameplay Elements",535],["Randomly chosen items or values are important in many games. This sections shows how you can use Unity's built-in random functions to implement some common game mechanics.",535],["Choosing a Random Item from an Array",535],["Picking an array element at random boils down to choosing a random integer between zero and the array's maximum index value (which is equal to the length of the array minus one). This is easily done using the built-in Random.Range function:-",535],["var element = myArray[Random.Range(0, myArray.Length)];",535],["Note that Random.Range returns a value from a range that includes the first parameter but excludes the second, so using myArray.Length here gives the correct result.",535],["Choosing Items with Different Probabilities",535],["Sometimes, you need to choose items at random but with some items more likely to be chosen than others. For example, an NPC may react in several different ways when it encounters a player:-",535],["50% chance of friendly greeting",535],["25% chance of running away",535],["20% chance of immediate attack",535],["5% chance of offering money as a gift",535],["You can visualise these different outcomes as a paper strip divided into sections each of which occupies a fraction of the strip's total length. The fraction occupied is equal to the probability of that outcome being chosen. Making the choice is equivalent to picking a random point along the strip's length (say by throwing a dart) and then seeing which section it is in.",535],["In the script, the paper strip is actually an array of floats that contain the different probabilities for the items in order. The random point is obtained by multiplying Random.value by the total of all the floats in the array (they need not add up to 1; the significant thing is the relative size of the different values). To find which array element the point is \"in\", firstly check to see if it is less than the value in the first element. If so, then the first element is the one selected. Otherwise, subtract the first element's value from the point value and compare that to the second element and so on until the correct element is found. In code, this would look something like the following:-",535],["//JS",535],["function Choose(probs: float[]) {",535],["var total = 0;",535],["for (elem in probs) {",535],["total += elem;",535],["var randomPoint = Random.value * total;",535],["for (i = 0; i &lt; probs.Length; i++) {",535],["if (randomPoint &lt; probs[i])",535],["return i;",535],["else",535],["randomPoint -= probs[i];",535],["return probs.Length - 1;",535],["//C#",535],["float Choose (float[] probs) {",535],["float total = 0;",535],["foreach (float elem in probs) {",535],["total += elem;",535],["float randomPoint = Random.value * total;",535],["for (int i= 0; i &lt; probs.Length; i++) {",535],["if (randomPoint &lt; probs[i]) {",535],["return i;",535],["else {",535],["randomPoint -= probs[i];",535],["return probs.Length - 1;",535],["Note that the final return statement is necessary because Random.value can return a result of 1. In this case, the search will not find the random point anywhere. Changing the line",535],["if (randomPoint &lt; probs[i])",535],["...to a less-than-or-equal test would avoid the extra return statement but would also allow an item to be chosen occasionally even when its probability is zero.",535],["Shuffling a List",535],["A common game mechanic is to choose from a known set of items but have them arrive in random order. For example, a deck of cards is typically shuffled so they are not drawn in a predictable sequence. You can shuffle the items in an array by visiting each element and swapping it with another element at a random index in the array:-",535],["//JS",535],["function Shuffle(deck: int[]) {",535],["for (i = 0; i &lt; deck.Length; i++) {",535],["var temp = deck[i];",535],["var randomIndex = Random.Range(0, deck.Length);",535],["deck[i] = deck[randomIndex];",535],["deck[randomIndex] = temp;",535],["//C#",535],["void Shuffle (int[] deck) {",535],["for (int i = 0; i &lt; deck.Length; i++) {",535],["int temp = deck[i];",535],["int randomIndex = Random.Range(0, deck.Length);",535],["deck[i] = deck[randomIndex];",535],["deck[randomIndex] = temp;",535],["Choosing from a Set of Items Without Repetition",535],["A common task is to pick a number of items randomly from a set without picking the same one more than once. For example, you may want to generate a number of NPCs at random spawn points but be sure that only one NPC gets generated at each point. This can be done by iterating through the items in sequence, making a random decision for each as to whether or not it gets added to the chosen set. As each item is visited, the probability of its being chosen is equal to the number of items still needed divided by the number still left to choose from.",535],["As an example, suppose that ten spawn points are available but only five must be chosen. The probability of the first item being chosen will be 5 / 10 or 0.5. If it is chosen then the probability for the second item will be 4 / 9 or 0.44 (ie, four items still needed, nine left to choose from). However, if the first was not chosen then the probability for the second will be 5 / 9 or 0.56 (ie, five still needed, nine left to choose from). This continues until the set contains the five items required. You could accomplish this in code as follows:-",535],["//JS",535],["var spawnPoints: Transform[];",535],["function ChooseSet(numRequired: int) {",535],["var result = new Transform[numRequired];",535],["var numToChoose = numRequired;",535],["for (numLeft = spawnPoints.Length; numLeft > 0; numLeft--) {",535],["// Adding 0.0 is simply to cast the integers to float for the division.",535],["var prob = numToChoose + 0.0 / numLeft + 0.0;",535],["if (Random.value &lt;= prob) {",535],["numToChoose--;",535],["result[numToChoose] = spawnPoints[numLeft - 1];",535],["if (numToChoose == 0)",535],["break;",535],["return result;",535],["//C#",535],["Transform[] spawnPoints;",535],["Transform[] ChooseSet (int numRequired) {",535],["Transform[] result = new Transform[numRequired];",535],["int numToChoose = numRequired;",535],["for (int numLeft = spawnPoints.Length; numLeft > 0; numLeft--) {",535],["float prob = numToChoose/numLeft;",535],["if (Random.value &lt;= prob) {",535],["numToChoose--;",535],["result[numToChoose] = spawnPoints[numLeft - 1];",535],["if (numToChoose == 0) {",535],["break;",535],["return result;",535],["Note that although the selection is random, items in the chosen set will be in the same order they had in the original array. If the items are to be used one at a time in sequence then the ordering can make them partly predictable, so it may be necessary to shuffle the array before use.",535],["Random Points in Space",535],["A random point in a cubic volume can be chosen by setting each component of a Vector3 to a value returned by Random.value:-",535],["var randVec = Vector3(Random.value, Random.value, Random.value);",535],["This gives a point inside a cube with sides one unit long. The cube can be scaled simply by multiplying the X, Y and Z components of the vector by the desired side lengths. If one of the axes is set to zero, the point will always lie within a single plane. For example, picking a random point on the \"ground\" is usually a matter of setting the X and Z components randomly and setting the Y component to zero.",535],["When the volume is a sphere (ie, when you want a random point within a given radius from a point of origin), you can use Random.insideUnitSphere multiplied by the desired radius:-",535],["var randWithinRadius = Random.insideUnitSphere * radius;",535],["Note that if you set one of the resulting vector's components to zero, you will not get a correct random point within a circle. Although the point is indeed random and lies within the right radius, the probability is heavily biased toward the edge of the circle and so points will be spread very unevenly. You should use Random.insideUnitCircle for this task instead:-",535],["var randWithinCircle = Random.insideUnitCircle * radius;",535],["Raycasters",536],["The EventSystem needs a method for detecting where current input events need to be sent to, and this is provided by the Raycasters. Given a screen space position they will collect all potential targets, figure out if they are under the given position, and then return the object that is closest to the screen. There are a few types of Raycasters that are provided:",536],["\nGraphicRaycaster - Used for UI elements, lives on a Canvas and searches within the canvas\n",536],["\nPhysics2DRaycaster - Used for 2D physics elements\n",536],["\nPhysicsRaycaster - Used for 3D physics elements\n",536],["When a Raycaster is present and enabled in the scene it will be used by the EventSystem whenever a query is issued from an InputModule.",536],["If multiple Raycasters are used then they will all have casting happen against them and the results will be sorted based on distance to the elements.",536],["Reducing the File Size of the Build",537],["Keeping the file size of the built app to a minimum is often important, especially for mobile devices or for app stores that impose a size limit. The first step in reducing the size is to determine which assets contribute most to it, since these assets are the most likely candidates for optimisation. You can find this information out from the Editor Log just after you have performed the build (select Open Editor Log from the small panel menu in the top right of the Console window).",537],["The log provides a summary of assets broken down by type and then lists all the individual assets in order of size contribution. Typically, things like textures, music and videos will take up the most storage while scripts, levels and shaders are often negligible. Note that the File Headers mentioned in the summary are not assets in themselves. The headers are actually the extra data that is added to \"raw\" asset files to store references and settings. The headers normally make very little difference to asset size but if the value may be large if you have numerous large assets in the Resources folder.",537],["The log helps you identify assets that you might want to remove or optimise but you should consider the following before setting to work:",537],["Unity re-codes imported assets into its own internal formats, so the choice of source asset type is not relevant. For example, if you have a multi-layer Photoshop texture in the project then it will be flattened and compressed before building. Exporting the texture as a PNG file will not make any difference to build size, so you should stick to the format that is most convenient for you during development.",537],["Unity strips most unused assets during the build, so you don't gain anything by manually removing assets from the project. The only assets that are not removed are scripts (which are generally very small anyway) and assets in the Resources folder (since Unity can't determine which of these will be needed and which won't). With this in mind, you should make sure that the assets in the Resources folder are only the ones you really need for the game. You might be able to replace assets in Resources with AssetBundles to load assets dynamically and thereby reduce the player size.",537],["Suggestions for Reducing Build Size",537],["Textures",537],["Often textures take up most space in the build. The first to do is to use compressed texture formats (DXT(Desktop platforms) or PVRTC) where you can.",537],["If that doesn't get the size down, try to reduce the size of the textures. The trick here is that you don't need to modify the actual source content. Simply select the texture in the Project view and set Max Size in Import Settings. It is a good idea to zoom in on an object that uses the texture, then adjust the Max Size until it starts looking worse in the Scene View.",537],["The following table shows how much storage the image formats take up in bytes per pixel:",537],["Compression Memory consumption (bytes/pixel) ",537],["Standalone  ",537],["RGB Compressed DXT1 0.5 bpp ",537],["RGBA Compressed DXT5 1 bpp ",537],["RGB 16bit 2 bpp ",537],["RGB 24bit 3 bpp ",537],["Alpha 8bit 1 bpp ",537],["RGBA 16bit 2 bpp ",537],["RGBA 32bit 4 bpp ",537],["iOS  ",537],["RGB Compressed PVRTC 2 bits 0.25 bpp (bytes/pixel) ",537],["RGBA Compressed PVRTC 2 bits 0.25 bpp ",537],["RGB Compressed PVRTC 4 bits 0.5 bpp ",537],["RGBA Compressed PVRTC 4 bits 0.5 bpp ",537],["RGB 16bit 2 bpp ",537],["RGB 24bit 3 bpp ",537],["Alpha 8bit 1 bpp ",537],["RGBA 16bit 2 bpp ",537],["RGBA 32bit 4 bpp ",537],["Android  ",537],["RGB Compressed DXT1 0.5 bpp (bytes/pixel) ",537],["RGBA Compressed DXT5 1 bpp ",537],["RGB Compressed ETC1 0.5 bpp ",537],["RGB Compressed PVRTC 2 bits 0.25 bpp (bytes/pixel) ",537],["RGBA Compressed PVRTC 2 bits 0.25 bpp ",537],["RGB Compressed PVRTC 4 bits 0.5 bpp ",537],["RGBA Compressed PVRTC 4 bits 0.5 bpp ",537],["RGB 16bit 2 bpp ",537],["RGB 24bit 3 bpp ",537],["Alpha 8bit 1 bpp ",537],["RGBA 16bit 2 bpp ",537],["RGBA 32bit 4 bpp ",537],["The formula for the total image storage size is width * height * bpp. If you are using mipmaps then the storage will be about a third larger than the single image.",537],["By default Unity compresses all textures when importing. For faster workflow in the editor, you can turn compression off from the Preferences but all textures will be compressed in the build regardless of this setting.",537],["Meshes and Animations",537],["Meshes and imported Animation Clips can be compressed so they take up less space in your game file. Compression can be turned on in the Mesh Import Settings.",537],["Mesh and Animation compression uses quantization, which means it takes less space but the compression can introduce some inaccuracies. Experiment with what level of compression is acceptable for your models.",537],["Note that mesh compression only produces smaller data files and does not use less memory at run time. Animation keyframe reduction produces smaller data files and uses less memory at run time and generally you should always have it enabled.",537],["DLLs",537],["By default, Unity includes only the following DLLs in the built player:",537],["mscorlib.dll",537],["Boo.Lang.dll",537],["UnityScript.Lang.dll",537],["UnityEngine.dll",537],["When building a player, you should avoid any dependencies on System.dll or System.Xml.dll. Unity does not include these in the built player by default but if you use their classes then they will get included. These DLLs will add about a megabyte to the player's storage size. If you need to parse XML in your game, you can use a library like Mono.Xml.zip as a smaller alternative to the system libraries. While most Generic containers are contained in mscorlib, Stack&lt;&gt; and few others are in System.dll, so you should avoid these if possible.",537],["Reducing Mobile .NET Library Size",537],["Unity supports two .NET API compatibility levels for some mobile devices: .NET 2.0 and a subset of .NET 2.0. You can select the appropriate level for your build in the Player Settings.",537],["The .NET 2.0 API profile is similar to the full .NET 2.0 API. Most library routines are fully implemented and so this option offers the best compatibility with pre-existing .NET code. However, for many games, the full library is not needed and the superfluous code takes up valuable memory space.",537],["To avoid wasted memory, Unity also supports the .NET 2.0 Subset API profile. This is very similar to the Mono \"monotouch\" profile, so many limitations of the \"monotouch\" profile also apply to Unity's .NET 2.0 Subset profile. (More information on the limitations of the \"monotouch\" profile can be found here). Many library routines that are not commonly needed in games are left out of this profile in order to save memory. However, this also means that code with dependencies on those routines will not work correctly. This option can be a useful optimization but you should check that existing code still works after it is applied.",537],["Rendering Pipeline Details",538],["This section explains the technical details behind various aspects of Unity's rendering engine.",538],["Rendering Paths",539],["Unity supports different Rendering Paths. You should choose which one you use depending on your game content and target platform / hardware. Different rendering paths have different performance characteristics that mostly affect Lights and Shadows. See render pipeline for technical details.",539],["The rendering Path used by your project is chosen in Player Settings. Additionally, you can override it for each Camera.",539],["If the graphics card can't handle a selected rendering path, Unity will automatically use a lower fidelity one. For example, on a GPU that can't handle Deferred Shading, Forward Rendering will be used.",539],["Deferred Shading",539],["Deferred Shading* is the rendering path with the most lighting and shadow fidelity, and is best suited if you have many realtime lights. It requires a certain level of hardware support, and is for Unity Pro only.",539],["For more details see the Deferred Shading page.",539],["Forward Rendering",539],["Forward is the traditional rendering path. It supports all the typical Unity graphics features (normal maps, per-pixel lights, shadows etc.). However under default settings, only a small number of the brightest lights are rendered in per-pixel lighting mode. The rest of the lights are calculated at object vertices or per-object.",539],["For more details see the Forward Rendering page.",539],["Legacy Deferred Lighting",539],["Legacy Deferred Lighting (light prepass)* is similar to Deferred Shading, just using a different technique with different trade-offs. It does not support the Unity 5 physically based standard shader.",539],["For more details see the Deferred Lighting page.",539],["Legacy Vertex Lit",539],["Legacy Vertex Lit* is the rendering path with the lowest lighting fidelity and no support for realtime shadows. It is a subset of Forward rendering path.",539],["For more details see the Vertex Lit page.",539],["Rendering Paths Comparison",539],["Deferred Forward Legacy Deferred Vertex Lit ",539],["Features     ",539],["Per-pixel lighting (normal maps, light cookies) Yes Yes Yes - ",539],["Realtime shadows Yes With caveats Yes - ",539],["Reflection Probes Yes Yes - - ",539],["Depth&amp;Normals Buffers Yes Additional render passes Yes - ",539],["Soft Particles Yes - Yes - ",539],["Semitransparent objects - Yes - Yes ",539],["Anti-Aliasing - Yes - Yes ",539],["Light Culling Masks Limited Yes Limited Yes ",539],["Lighting Fidelity All per-pixel Some per-pixel All per-pixel All per-vertex ",539],["Performance     ",539],["Cost of a per-pixel Light Number of pixels it illuminates Number of pixels * Number of objects it illuminates Number of pixels it illuminates - ",539],["Number of times objects are normally rendered 1 Number of per-pixel lights 2 1 ",539],["Overhead for simple scenes High None Medium None ",539],["Platform Support     ",539],["PC (Windows/Mac) Shader Model 3.0+ &amp; MRT All Shader Model 3.0+ All ",539],["Mobile (iOS/Android) OpenGL ES 3.0 &amp; MRT All OpenGL ES 2.0 All ",539],["Consoles XB1, PS4 All XB1, PS4, 360, PS3 - ",539],["Rendering Statistics Window",540],["The Game View has a Stats button in the top right corner. When the button is pressed, an overlay window is displayed which shows realtime rendering statistics, which are useful for optimizing performance. The exact statistics displayed vary according to the build target.",540],["The Statistics window contains the following information:-",540],["",540],["Time per frame and FPS The amount of time taken to process and render one game frame (and its reciprocal, frames per second). Note that this number only includes the time taken to do the frame update and render the game view; it does not include the time taken in the editor to draw the scene view, inspector and other editor-only processing. ",540],["Draw Calls The total number of meshes drawn after batching was applied. Note that where objects are rendered multiple times (for example, objects illuminated by pixel lights), each rendering results in a separate draw call. ",540],["Batched (Draw Calls) The number of initially separate draw calls that were added to batches. \"Batching\" is where the engine attempts to combine the rendering of multiple objects into one draw call in order to reduce CPU overhead. To ensure good batching, you should share materials between different objects as often as possible. ",540],["Tris and Verts The number of triangles and vertices drawn. This is mostly important when optimizing for low-end hardware ",540],["Screen The size of the screen, along with its anti-aliasing level and memory usage. ",540],["Visible Skinned Meshes The number of skinned meshes rendered. ",540],["Animations The number of animations playing. ",540],["See also the rendering section of the profiler window which provides a more verbose and complete version of these stats.",540],["Legacy Deferred Lighting Rendering Path",541],["This page details the Legacy Deferred Lighting (light prepass) rendering path. See this article for a technical overview of deferred lighting.",541],["Note**: Deferred Lighting is considered a legacy feature starting with Unity 5.0, as it does not support some of the rendering features (e.g. Standard shader, reflection probes). New projects should consider using Deferred Shading rendering path instead.",541],["Overview",541],["When using Deferred Lighting, there is no limit on the number of lights that can affect an object. All lights are evaluated per-pixel, which means that they all interact correctly with normal maps, etc. Additionally, all lights can have cookies and shadows.",541],["Deferred lighting has the advantage that the processing overhead of lighting is proportional to the number of pixels the light shines on. This is determined by the size of the light volume in the scene regardless of how many objects it illuminates. Therefore, performance can be improved by keeping lights small. Deferred lighting also has highly consistent and predictable behaviour. The effect of each light is computed per-pixel, so there are no lighting computations that break down on large triangles.",541],["On the downside, deferred lighting has no real support for anti-aliasing and can't handle semi-transparent objects (these will be rendered using forward rendering). There is also no support for the Mesh Renderer's Receive Shadows flag and culling masks are only supported in a limited way. You can only use up to four culling masks. That is, your culling layer mask must at least contain all layers minus four arbitrary layers, so 28 of the 32 layers must be set. Otherwise you will get graphical artefacts.",541],["Requirements",541],["Deferred lighting is only available in Unity Pro. It requires a graphics card with Shader Model 3.0 (or later), support for Depth render textures and two-sided stencil buffers. Most PC graphics cards made after 2004 support deferred lighting, including GeForce FX and later, Radeon X1300 and later, Intel 965 / GMA X3100 and later. On mobile, all OpenGL ES 3.0 capable GPUs support deferred lighting, and some of OpenGL ES 2.0 capable ones support it too (the ones that do support depth textures).",541],["Performance Considerations",541],["The rendering overhead of realtime lights in deferred lighting is proportional to the number of pixels illuminated by the light and is not dependent on scene complexity. So small point or spot lights are very cheap to render and if they are fully or partially occluded by scene objects then they are even cheaper.",541],["Of course, lights with shadows are much more expensive than lights without shadows. In deferred lighting, shadow-casting objects still need to be rendered once or more for each shadow-casting light. Furthermore, the lighting shader that applies shadows has a higher rendering overhead than the one used when shadows are disabled.",541],["Implementation Details",541],["When Deferred Lighting is used, the rendering process in Unity happens in three passes:",541],["Base Pass: objects are rendered to produce screen-space buffers with depth, normals, and specular power.",541],["Lighting pass: the previously generated buffers are used to compute lighting into another screen-space buffer.",541],["Final pass: objects are rendered again. They fetch the computed lighting, combine it with color textures and add any ambient/emissive lighting.",541],["Objects with shaders that can't handle deferred lighting are rendered after this process is complete, using the forward rendering path.",541],["Base Pass",541],["The base pass renders each object once. View space normals and specular power are rendered into a single ARGB32 Render Texture (with normals in RGB channels and specular power in A). If the platform and hardware allow the Z buffer to be read as a texture then depth is not explicitly rendered. If the Z buffer can't be accessed as a texture then depth is rendered in an additional rendering pass using shader replacement.",541],["The result of the base pass is a Z buffer filled with the scene contents and a Render Texture with normals and specular power.",541],["Lighting Pass",541],["The lighting pass computes lighting based on depth, normals and specular power. Lighting is computed in screen space, so the time it takes to process is independent of scene complexity. The lighting buffer is a single ARGB32 Render Texture, with diffuse lighting in the RGB channels and monochrome specular lighting in the A channel. Lighting values are logarithmically encoded to provide greater dynamic range than is usually possible with an ARGB32 texture. When a camera has HDR rendering enabled, then lighting buffer is of ARGBHalf format, and logarithmic encoding is not performed.",541],["Point and spot lights that do not cross the camera's near plane are rendered as (front faces of) 3D shapes, with the depth test against the scene enabled. Lights crossing the near plane are also rendered using 3D shapes, but as back faces with inverted depth test instead. This makes partially or fully occluded lights very cheap to render. If a light intersects both far and near camera planes at the same time, the above optimizations cannot be used, and the light is drawn as a tight quad with no depth testing.",541],["The above doesn't apply to directional lights, which are always rendered as fullscreen quads.",541],["If a light has shadows enabled then they are also rendered and applied in this pass. Note that shadows do not come for \"free\"; shadow casters need to be rendered and a more complex light shader must be applied.",541],["The only lighting model available is Blinn-Phong. If a different model is wanted you can modify the lighting pass shader, by placing the modified version of the Internal-PrePassLighting.shader file from the Built-in shaders into a folder named \"Resources\" in your \"Assets\" folder.",541],["Final Pass",541],["The final pass produces the final rendered image. Here all objects are rendered again with shaders that fetch the lighting, combine it with textures and add any emissive lighting. Lightmaps are also applied in the final pass. Close to the camera, realtime lighting is used, and only baked indirect lighting is added. This crossfades into fully baked lighting further away from the camera.",541],["Deferred Shading Rendering Path",542],["This page details the Deferred Shading rendering path. See the wikipedia page for an introductory technical overview.",542],["Overview",542],["When using Deferred Shading, there is no limit on the number of lights that can affect an object. All lights are evaluated per-pixel, which means that they all interact correctly with normal maps, etc. Additionally, all lights can have cookies and shadows.",542],["Deferred shading has the advantage that the processing overhead of lighting is proportional to the number of pixels the light shines on. This is determined by the size of the light volume in the scene regardless of how many objects it illuminates. Therefore, performance can be improved by keeping lights small. Deferred shading also has highly consistent and predictable behaviour. The effect of each light is computed per-pixel, so there are no lighting computations that break down on large triangles.",542],["On the downside, deferred shading has no real support for anti-aliasing and can't handle semi-transparent objects (these will be rendered using forward rendering). There is also no support for the Mesh Renderer's Receive Shadows flag and culling masks are only supported in a limited way. You can only use up to four culling masks. That is, your culling layer mask must at least contain all layers minus four arbitrary layers, so 28 of the 32 layers must be set. Otherwise you will get graphical artefacts.",542],["Requirements",542],["Deferred shading is only available in Unity Pro. It requires a graphics card with Multiple Render Targets (MRT), Shader Model 3.0 (or later), support for Depth render textures and two-sided stencil buffers. Most PC graphics cards made after 2005 support deferred lighting, including GeForce 6 and later, Radeon X1300 and later, Intel G45+ and later. On mobile, support is much more limited due to MRT formats used (some GPUs which do support multiple render targets, still only support very limited bit counts).",542],["Performance Considerations",542],["The rendering overhead of realtime lights in deferred shading is proportional to the number of pixels illuminated by the light and not dependent on scene complexity. So small point or spot lights are very cheap to render and if they are fully or partially occluded by scene objects then they are even cheaper.",542],["Of course, lights with shadows are much more expensive than lights without shadows. In deferred shading, shadow-casting objects still need to be rendered once or more for each shadow-casting light. Furthermore, the lighting shader that applies shadows has a higher rendering overhead than the one used when shadows are disabled.",542],["Implementation Details",542],["When Deferred Shading is used, the rendering process in Unity happens in two passes:",542],["G-buffer Pass: objects are rendered to produce screen-space buffers with diffuse color, specular color, smoothness,",542],["world space normal, emission and depth.",542],["Lighting pass: the previously generated buffers are used to add lighting into emission buffer.",542],["Objects with shaders that can't handle deferred shading are rendered after this process is complete, using the forward rendering path.",542],["The default g-buffer layout is as follows:",542],["RT0, ARGB32 format: Diffuse color (RGB), unused (A).",542],["RT1, ARGB32 format: Specular color (RGB), roughness (A).",542],["RT2, ARGB2101010 format: World space normal (RGB), unused (A).",542],["RT3, ARGB32 (non-HDR) or ARGBHalf (HDR) format: Emission + lighting + lightmaps + reflection probes buffer.",542],["Depth+Stencil buffer.",542],["So the default g-buffer layout is 160 bits/pixel (non-HDR) or 192 bits/pixel (HDR).",542],["Emission &amp; lighting buffer is logarithmically encoded to provide greater dynamic range than is usually possible with an ARGB32 texture, when camera is not using HDR.",542],["G-Buffer Pass",542],["The g-buffer pass renders each object once. Diffuse and specular colors, surface smoothness, world space normal, and emission+ambient+reflections+lightmaps are rendered into g-buffer textures. The g-buffer textures are setup as global shader properties for later access by shaders (_CameraGBufferTexture0 .. _CameraGBufferTexture3 names).",542],["Lighting Pass",542],["The lighting pass computes lighting based on g-buffer and depth. Lighting is computed in screen space, so the time it takes to process is independent of scene complexity. Lighting is added to the emission buffer.",542],["Point and spot lights that do not cross the camera's near plane are rendered as 3D shapes, with the Z buffer's test against the scene enabled. This makes partially or fully occluded point and spot lights very cheap to render. Directional lights and point/spot lights that cross the near plane are rendered as fullscreen quads.",542],["If a light has shadows enabled then they are also rendered and applied in this pass. Note that shadows do not come for \"free\"; shadow casters need to be rendered and a more complex light shader must be applied.",542],["The only lighting model available is Standard. If a different model is wanted you can modify the lighting pass shader, by placing the modified version of the Internal-DeferredShading.shader file from the Built-in shaders into a folder named \"Resources\" in your \"Assets\" folder.",542],["Forward Rendering Path Details",543],["This page describes details of Forward rendering path.",543],["Forward Rendering path renders each object in one or more passes, depending on lights that affect the object. Lights themselves are also treated differently by Forward Rendering, depending on their settings and intensity.",543],["Implementation Details",543],["In Forward Rendering, some number of brightest lights that affect each object are rendered in fully per-pixel lit mode. Then, up to 4 point lights are calculated per-vertex. The other lights are computed as Spherical Harmonics (SH), which is much faster but is only an approximation. Whether a light will be a per-pixel light or not is dependent on this:",543],["Lights that have their Render Mode set to Not Important are always per-vertex or SH.",543],["Brightest directional light is always per-pixel.",543],["Lights that have their Render Mode set to Important are always per-pixel.",543],["If the above results in less lights than current Pixel Light Count Quality Setting, then more lights are rendered per-pixel, in order of decreasing brightness.",543],["Rendering of each object happens as follows:",543],["Base Pass applies one per-pixel directional light and all per-vertex/SH lights.",543],["Other per-pixel lights are rendered in additional passes, one pass for each light.",543],["For example, if there is some object that's affected by a number of lights (a circle in a picture below, affected by lights A to H):",543],["Let's assume lights A to H have the same color and intensity and all of them have Auto rendering mode, so they would be sorted in exactly this order for this object. The brightest lights will be rendered in per-pixel lit mode (A to D), then up to 4 lights in per-vertex lit mode (D to G), and finally the rest of lights in SH (G to H):",543],["Note that light groups overlap; for example last per-pixel light blends into per-vertex lit mode so there are less \"light popping\" as objects and lights move around.",543],["Base Pass",543],["Base pass renders object with one per-pixel directional light and all SH lights. This pass also adds any lightmaps, ambient and emissive lighting from the shader. Directional light rendered in this pass can have Shadows. Note that Lightmapped objects do not get illumination from SH lights.",543],["Additional Passes",543],["Additional passes are rendered for each additional per-pixel light that affect this object. Lights in these passes can't have shadows (so in result, Forward Rendering supports one directional light with shadows).",543],["Performance Considerations",543],["Spherical Harmonics lights are very fast to render. They have a tiny cost on the CPU, and are actually free for the GPU to apply (that is, base pass always computes SH lighting; but due to the way SH lights work, the cost is exactly the same no matter how many SH lights are there).",543],["The downsides of SH lights are:",543],["They are computed at object's vertices, not pixels. This means they do not support light Cookies or normal maps.",543],["SH lighting is very low frequency. You can't have sharp lighting transitions with SH lights. They are also only affecting the diffuse lighting (too low frequency for specular highlights).",543],["SH lighting is not local; point or spot SH lights close to some surface will \"look wrong\".",543],["In summary, SH lights are often good enough for small dynamic objects.",543],["Hardware Requirements for Unity's Graphics Features",544],["Summary",544],["",544],["Win/Mac/Linux iOS/Android Consoles ",544],["Deferred lighting SM3.0, GPU support - Yes ",544],["Forward rendering Yes Yes Yes ",544],["Vertex Lit rendering Yes Yes - ",544],["Realtime Shadows GPU support GPU support Yes ",544],["Image Effects Yes Yes Yes ",544],["Programmable Shaders Yes Yes Yes ",544],["Fixed Function Shaders Yes Yes - ",544],["Realtime Shadows",544],["Realtime Shadows work on most PC, console &amp; mobile platforms. On Windows (Direct3D), the GPU also needs to support shadow mapping features; most discrete GPUs support that since 2003 and most integrated GPUs support that since 2007. Technically, on Direct3D 9 the GPU has to support D16/D24X8 or DF16/DF24 texture formats; and on OpenGL it has to support GL_ARB_depth_texture extension.",544],["Mobile shadows (iOS/Android) require OpenGL ES 2.0 and GL_OES_depth_texture extension, or OpenGL ES 3.0. Most notably, the extension is not present on Tegra-based Android devices, so shadows do not work there.",544],["Image Effects",544],["Image Effects require render-to-texture functionality, which is generally supported on anything made in this millenium.",544],["Shaders",544],["In Unity, you can write programmable or fixed function shaders. Programmable shaders are supported everywhere, and default to Shader Model 2.0 (desktop) and OpenGL ES 2.0 (mobile). It is possible to target higher shader models if you want more functionality. Fixed function is supported everywhere except consoles.",544],["Vertex Lit Rendering Path Details",545],["This page describes details of Vertex Lit rendering path.",545],["Vertex Lit path generally renders each object in one pass, with lighting from all lights calculated at object vertices.",545],["It's the fastest rendering path and has widest hardware support (however, keep in mind: it does not work on consoles).",545],["Since all lighting is calculated at vertex level, this rendering path does not support most of per-pixel effects: shadows, normal mapping, light cookies, highly detailed specular highlights are not supported.",545],["Retargeting of Humanoid animations",546],["One of the most powerful features of Mecanim is retargeting of humanoid animations. This means that with relative ease, you can apply the same set of animations to various character models. Retargeting is only possible for humanoid models, where an Avatar has been configured, because this gives us a correspondence between the models' bone structure.",546],["Recommended Hierarchy structure",546],["When working with Mecanim animations, you can expect your scene to contain the following elements:-",546],["The Imported character model, which has an Avatar on it.",546],["The Animator Component, referencing an Animator Controller asset.",546],["A set of animation clips, referenced from the Animator Controller.",546],["Scripts for the character.",546],["Character-related components, such as the Character Controller.",546],["Your project should also contain another character model with a valid Avatar.",546],["If in doubt about the terminology, consult the Animation Glossary",546],["The recommended setup is to:",546],["Create a GameObject in the Hierarchy that contains Character-related components",546],["Put the model as a child of the GameObject, together with the Animator component",546],["Make sure scripts referencing the Animator are looking for the animator in the children instead of the root; use GetComponentInChildren&lt;Animator&gt;() instead of GetComponent&lt;Animator&gt;().",546],["Then in order to reuse the same animations on another model, you need to:",546],["Disable the original model",546],["Drop in the desired model as another child of GameObject",546],["Make sure the Animator Controller property for the new model is referencing the same controller asset",546],["Tweak the character controller, the transform, and other properties on the top-level GameObject, to make sure that the animations work smoothly with the new model.",546],["You're done!",546],["Rigidbodies",547],["A Rigidbody is the main component that enables physical behaviour for an object. With a Rigidbody attached, the object will immediately respond to gravity. If one or more Collider components are also added then the object will be moved by incoming collisions.",547],["Since a Rigidbody component takes over the movement of the object it is attached to, you shouldn't try to move it from a script by changing the Transform properties such as position and rotation. Instead, you should apply forces to push the object and let the physics engine calculate the results.",547],["There are some cases where you might want an object to have a Rigidbody without having its motion controlled by the physics engine. For example, you may want to control your character directly from script code but still allow it to be detected by triggers (see Triggers below). This kind of non-physical motion produced from a script is known as kinematic motion. The Rigidbody component  has a property called Is Kinematic which will remove it from the control of the physics engine and allow it to be moved kinematically from a script. It is possible to change the value of Is Kinematic from a script to allow physics to be switched on and off for an object, but this comes with a performance overhead and should be used sparingly.",547],["See the Rigidbody and Rigidbody 2D reference pages for further details about the settings and scripting options for these components.",547],["Sleeping",547],["Once a rigidbody is moving at less than a certain minimum linear or rotational speed, the physics engine will assume it has come to a halt. When this happens, the object will not move again until it receives a collision or force and so it will be set to \"sleeping\" mode. This optimisation means that no processor time will be spent updating the rigidbody until the next time it is \"awoken\" (ie, set in motion again). For most purposes, the sleeping and waking of rigidbodies happens transparently. However, an object might fail to wake up if a static collider (ie, one without a rigidbody) is moved into it or away from it by modifying the transform position. This might result, say, in the rigidbody object hanging in the air when the floor has been moved out from beneath it. In cases like this, the object can be woken explicitly using the WakeUp function. See the Rigidbody and Rigidbody 2D component pages for more information about sleeping.",547],["Root Motion - how it works",548],["Body Transform",548],["The Body Transform is the mass center of the character. It is used in Mecanim's retargeting engine and provides the most stable displacement model. The Body Orientation is an average of the lower and upper body orientation relative to the Avatar T-Pose.",548],["The Body Transform and Orientation are stored in the Animation Clip (using the Muscle definitions set up in the Avatar). They are the only world-space curves stored in the Animation Clip. Everything else: muscle curves and IK goals (Hands and Feet) are stored relative to the body transform.",548],["Root Transform",548],["The Root Transform is a projection on the Y plane of the Body Transform and is computed at runtime. At every frame, a change in the Root Transform is computed. This change in transform is then applied to the Game Object to make it move.",548],["Animation Clip Inspector",548],["The Animation Clip Editor settings - Root Transform Rotation, Root Transform Position (Y) and Root Transform Position (XZ) - let you control the Root Transform projection from the Body Transform. Depending on these settings some parts of the Body Transform may be transferred to Root Transform. For example you can decide if you want the motion Y position to be part of the Root Motion (trajectory) or part of the pose (body transform), which is known as Baked into Pose.",548],["Root Transform Rotation",548],["Bake into Pose: The orientation will stay on the body transform (or Pose). The Root Orientation will be constant and delta Orientation will be identity. This means that the Game Object will not be rotated at all by that AnimationClip.",548],["Only AnimationClips that have similar start and stop Root Orientation should use this option. You will have a Green Light in the UI telling you that an AnimationClip is a good candidate. A suitable candidate would be a straight walk or a run.",548],["Based Upon: This lets you set the orientation of the clip. Using Body Orientation, the clip will be oriented to follow the forward vector of body. This default setting works well for most Motion Capture (Mocap) data like walks, runs, and jumps, but it will fail with motion like strafing where the motion is perpendicular to the body's forward vector. In those cases you can manually adjust the orientation using the Offset setting. Finally you have Original that will automatically add the authored offset found in the imported clip. It is usually used with Keyframed data to respect orientation that was set by the artist.",548],["Offset: used to enter the offset when that option is chosen for Based Upon.",548],["Root Transform Position (Y)",548],["This uses the same concepts described in Root Transform Rotation.",548],["Bake Into Pose: The Y component of the motion will stay on the Body Transform (Pose). The Y component of the Root Transform will be constant and Delta Root Position Y will be 0. This means that this clip won't change the Game Object Height. Again you have a Green Light telling you that a clip is a good candidate for baking Y motion into pose.",548],["Most of the AnimationClips will enable this setting. Only clips that will change the GameObject height should have this turned off, like jump up or down.",548],["Note: the Animator.gravityWeight is driven by Bake Into Pose position Y. When enabled, gravityWeight = 1, when disabled = 0. gravityWeight is blended for clips when transitioning between states.",548],["Based Upon: In a similar way to Root Transform Rotation you can choose from Original or Mass Center (Body). There is also a Feet option that is very convenient for AnimationClips that change height (Bake Into Pose disabled). When using Feet the Root Transform Position Y will match the lowest foot Y for all frames. Thus the blending point always remains around the feet which prevents floating problem when blending or transitioning.",548],["Offset: In a similar way to Root Transform Rotation, you can manually adjust the AnimationClip height using the Offset setting.",548],["Root Transform Position (XZ)",548],["Again, this uses same concepts described in Root Transform Rotation and Root Motion Position (Y).",548],["Bake Into Pose will usually be used for \"Idles\" where you want to force the delta Position (XZ) to be 0. It will stop the accumulation of small deltas drifting after many evaluations. It can also be used for a Keyframed clip with Based Upon Original to force an authored position that was set by the artist.",548],["Loop Pose",548],["Loop Pose (like Pose Blending in Blend Trees or Transitions) happens in the referential of Root Transform. Once the Root Transform is computed, the Pose becomes relative to it. The relative Pose difference between Start and Stop frame is computed and distributed over the range of the clip from 0-100%.",548],["Generic Root Motion and Loop Pose",548],["This works in essentially the same as Humanoid Root Motion, but instead of using the Body Transform to compute/project a Root Transform, the transform set in Root Node is used. The Pose (all the bones which transform below the Root Motion bone) is made relative to the Root Transform.",548],["Running Editor Script Code on Launch",549],["Sometimes, it is useful to be able to run some editor script code in a project as soon as Unity launches without requiring action from the user. You can do this by applying the InitializeOnLoad attribute to a class which has a static constructor. A static constructor is a function with the same name as the class, declared static and without a return type or parameters (see here for more information):-",549],["using UnityEngine;",549],["using UnityEditor;",549],["[InitializeOnLoad]",549],["public class Startup {",549],["static Startup()",549],["Debug.Log(\"Up and running\");",549],["A static constructor is always guaranteed to be called before any static function or instance of the class is used, but the InitializeOnLoad attribute ensures that it is called as the editor launches.",549],["An example of how this technique can be used is in setting up a regular callback in the editor (its \"frame update\", as it were). The EditorApplication class has a delegate called update which is called many times a second while the editor is running. To have this delegate enabled as the project launches, you could use code like the following:-",549],["using UnityEditor;",549],["using UnityEngine;",549],["[InitializeOnLoad]",549],["class MyClass",549],["static MyClass ()",549],["EditorApplication.update += Update;",549],["static void Update ()",549],["Debug.Log(\"Updating\");",549],["Samsung TV Debugging",550],["Obtaining Debug.Log output in realtime",550],["Logs can be accessed in realtime while the game is running via a telnet connection to Unity Launcher.",550],["OSX:**",550],["Launch Terminal.app and type:",550],["\n  telnet &lt;tv ip address&gt; 2333\n",550],["You should see Welcome To Unity Launcher message.  You will now get logs from Unity games in this window.",550],["Windows:**",550],["Download puttytel.exe and launch it.",550],["Insert TV's IP Address and check Telnet.  Input port 2333.",550],["Click Terminal, check Implicit CR for every LF, then click Open.",550],["You should see Welcome To Unity Launcher message.  You will now get logs from Unity games in this window.",550],["Manually uploading / launching / uninstalling games",550],["Unity Launcher contains a web interface for managing your development games.  You can also obtain logs from current / previous runs here.",550],["You can access this page by navigating to http://&lt;tv ip&gt;:8899 in your web browser.",550],["Unity Launcher Game List",550],["A list of all games you currently have installed.  The following options are available for each game:",550],["",550],["Launch Starts the game on the TV ",550],["Uninstall Removes the game from the USB drive ",550],["Log Displays the log from the last run ",550],["Prev Log Displays the log from the run before the last ",550],["Unity Launcher Global Actions",550],["",550],["Storage Location If you have multiple USB drives in your TV, you can switch between them here ",550],["Get Full Log Gets the full log for all games since Unity Launcher started ",550],["Get Prev Full Log Gets the full log for the last run of Unity Launcher.  Useful if your application crashed to see what went wrong. ",550],["Exit Unity launcher Quits Unity Launcher ",550],["Game Archive Upload",550],["Zip files are produced when Unity exports to the Samsung TV target.  These files can be uploaded to the TV via Unity Launcher web interface in this section.  Click Choose File and select the zip file that was exported.  Make sure you select the correct year (2013 vs. 2014 vs. 2015), and click Upload.  Check the Full Log or realtime log if the game does not show up.",550],["Samsung TV Packages",550],["When you build in Unity for the Samsung TV Platform, you will get one zip file for each model year.  Ex:",550],["MyGame_STANDARD_13.zip",550],["MyGame_STANDARD_14.zip",550],["MyGame_STANDARD_15.zip",550],["The correct zip will be automatically uploaded to your TV and launched when Build And Run is clicked.  If you need to upload manually, be sure to select the correct year for your TV.",550],["Debugging Crash Issues",550],["If your game crashes and returns the the App Selection Screen:",550],["Relaunch Unity Launcher and navigate to the web interface at http://&lt;tv ip&gt;:8899.  Click Get Prev Full Log and inspect the log for any error messages.",550],["It is possible that you ran out of graphics memory.  Try reducing texture sizes.",550],["Review crash checklist.",550],["Review mobile developer checklist.",550],["Getting Started with Samsung TV Development",551],["Adapting your game for Samsung Smart TV is much like porting your game to any other platform with Unity.  If your game already runs on mobile devices, you are halfway there!  The hardware in the TV is very similar to mobile devices (ARM CPU + OpenGLES GPU), so you can expect similar performance metrics.",551],["TV Models",551],["There are several different TV models released each year.  Unity works on the following models:",551],["2013 Models:**",551],["2013 Standard 6000 Series (Mali-400 MP)",551],["2013 Premium  7000 Series (Mali-450 MP)",551],["2014 Models:**",551],["2014 Standard 6000 Series (Mali-T604)",551],["2014 Premium  7000 Series (&#126;Mali-T624)",551],["2015 Models:**",551],["2015 Standard Series",551],["2015 Premium Series (Mali-T760)",551],["\n  Premium models have a faster CPU and higher end GPU.\n",551],["Input Devices",551],["The input mechanism is different depending on the model of TV.",551],["2015 models have no touchpad. They have an accelerometer in the remote as well as air mouse capabilities.",551],["Unity makes dealing with different input devices easier by providing input modes.  See the Input section for more details on input modes.",551],["Platform Specific Code",551],["To selectively compile in code for Samsung TV, use",551],["if UNITY_SAMSUNGTV",551],["// Samsung TV specific code",551],["endif",551],["Note that this is also active for the editor.",551],["To check at runtime if you are running on Samsung TV, use:",551],["if (Application.platform == RuntimePlatform.SamsungTVPlayer)",551],["// Samsung TV specific code",551],["You can obtain the model like this:",551],["SystemInfo.deviceModel",551],["Possible return values include:",551],["STANDARD_13",551],["STANDARD_14",551],["STANDARD_15",551],["This allows you to differentiate between tv years.",551],["Samsung Documentation",551],["Documentation is provided by Samsung on the topic of developing for Samsung Smart TV on Samsung's developer forum.  A lot of the information on this site does not apply to Unity users (it's primarily supporting web / flash applications), but you may still find some of it useful.",551],["Submitting your application to the Samsung Apps TV store",551],["In order to distribute your application to Samsung Apps TV store, you need to register your application and it must go through a certification process provided by Samsung or its Affiliate at Seller Office before being launched on the store.",551],["Samsung TV Input",552],["The input mechanism is different depending on the model of TV.",552],["-The 2015 Remote has no touchpad. It has airmouse capabilities as well as a d-pad**",552],["Detecting Remote Type",552],["You can use SamsungTV.airMouseConnected to determine if you have an Air Remote or Touch Remote connected.",552],["If an Air Remote is connected, you can use the Gyroscope data.",552],["Input Modes",552],["You select one of three input modes.  Each input mode maps to the controller type.",552],["DPAD",552],["\n  SamsungTV.touchPadMode = SamsungTV.TouchPadMode.Dpad;\n",552],["Touch Remote:**",552],["Swiping sends keyboard arrow key events.",552],["Air Remote:**",552],["Physical up, down, left and right buttons around the touchpad send keyboard arrow key events.",552],["if (Input.GetKeyDown (KeyCode.RightArrow))",552],["// Right DPAD event",552],["if (Input.GetKeyDown (KeyCode.Return))",552],["// touchpad clicked",552],["Joystick",552],["\n  SamsungTV.touchPadMode = SamsungTV.TouchPadMode.Joystick;\n",552],["Touch Remote and Air Remote:**",552],["Touchpad works like an analog joystick producing values from -1 to 1 on two axes.",552],["Note that the touchpad is much smaller on the Air Remote and may make it difficult to get precise control.",552],["For air mouse, you can alternatively use gyro data to get more precision.",552],["// Set up axis Touchpad x in input manager as joystick 2 x axis.",552],["Input.GetAxis (\"Touchpad x\");",552],["// joystick 2 y axis",552],["Input.GetAxis (\"Touchpad y\");",552],["if (Input.GetKeyDown (KeyCode.Return))",552],["// touchpad clicked",552],["Mouse",552],["\n  SamsungTV.touchPadMode = SamsungTV.TouchPadMode.Mouse;\n",552],["Touch Remote:**",552],["Touchpad controls a mouse cursor like a laptop's touchpad.",552],["Air Remote:**",552],["Placing one finger on the touchpad activates air mouse mode.  While in air mouse mode, the user can move the mouse cursor around the screen by physically pointing the remote.",552],["// Sets the cursor image (cursor is a Texture2D)",552],["Cursor.SetCursor (cursor, Vector2.zero, CursorMode.Auto);",552],["// Position of the mouse pointer",552],["Vector3 pos = Input.mousePosition;",552],["if (Input.GetMouseButtonDown (0))",552],["// touchpad clicked",552],["Exiting a Game",552],["If the user presses the RETURN / EXIT key, KeyCode.Escape button is pressed and can be caught by your game.  If desired, the game can exit by calling Application.Quit().",552],["A user can directly exit a game by long pressing on the RETURN / EXIT key of the remote.  If this occurs, the OnApplicationQuit message is sent to user scripts.",552],["Camera Gestures",552],["Certain TV models have a camera which can detect hand positions.  It is recommended to not use this input method since not all TV models support it.",552],["SamsungTV.gestureMode** can be set to one of the following:",552],["",552],["SamsungTV.GestureMode.Off Camera data is ignored (default) ",552],["SamsungTV.GestureMode.Mouse One hand controls a mouse pointer.  Grabbing clicks mouse 0. ",552],["SamsungTV.GestureMode.Joystick Two hands control two joystick axes. ",552],["\nJoystick 2 Axis 2:  hand 1 x axis \n",552],["\nJoystick 2 Axis 3:  hand 1 y axis \n",552],["\nJoystick 2 Axis 4:  hand 2 x axis \n",552],["\nJoystick 2 Axis 5:  hand 2 y axis \n",552],["Grabbing activates the following joystick buttons: ",552],["\nJoystick 2 Button 0:  hand 1 grab \n",552],["\nJoystick 2 Button 1:  hand 2 grab \n",552],["SamsungTV.gestureWorking Returns true if the camera currently sees at least 1 hand. ",552],["Gamepad Input",552],["You can use gamepad input as you would on any other platform. Here is the mapping for Samsung TV:",552],["Buttons (Key or Mouse Button) Axis (Joystick Axis) ",552],["joystick button 0 = A X axis = Left analog X ",552],["joystick button 1 = B Y axis = Left analog Y ",552],["joystick button 2 = X 3rd axis = LT (-1 to 1) ",552],["joystick button 3 = Y 4th axis = RT (-1 to 1) ",552],["joystick button 4 = LB 5th axis = Right analog X ",552],["joystick button 5 = RB 6th axis = Right analog Y ",552],["joystick button 6 = Back 7th axis = Dpad X ",552],["joystick button 7 = Start 8th axis = Dpad Y ",552],["joystick button 8 = Left analog press  ",552],["joystick button 9 = Right analog press  ",552],["Gamepad Mouse Mode",552],["The gamepad can also be put into mouse pointer mode where the analog stick controls the mouse position and button 0 clicks the mouse 0.",552],["SamsungTV.gamePadMode** can be one of the following:",552],["",552],["SamsungTV.GamePadMode.Default Standard joystick input ",552],["SamsungTV.GamePadMode.Mouse Mouse style input: gamepad analog stick controls a mouse cursor, button 0 clicks mouse 0. ",552],["Samsung TV Not Supported",553],["Certain features are not yet available on Samsung Smart TV due to no SDK support.",553],["Movie Playback",553],["Webcam Texture from TV's built in camera",553],["Voice Controls",553],["Open URL in browser",553],["Stereo 3D image output",553],["Script debugging (kernel limitation)",553],["SamsungTV Restrictions",554],["Because of the security model on Samsung Smart TV, the following restrictions are enforced:",554],["File access is not allowed.  Please use PlayerPrefs to persist user data.",554],["Native plugins are only allowed if signed by Samsung.  If you are interested in developing a native plugin for Samsung TV, please post on the forum.",554],["Samsung TV Setup",555],["What you need",555],["2013, 2014, or 2015 Samsung Smart TV (see Getting Started)",555],["USB drive formatted FAT32 with enough space to store your games, inserted into TV",555],["TV must be on same network as development computer (accessible via IP address)",555],["Install Unity Launcher",555],["Unity Launcher is an app that runs on your Samsung TV which allows you to install, manage and run Unity Games.",555],["Your TV must be connected to the internet in order to access the Samsung App Store.  The Unity Launcher application can be found in the Information section of the Samsung App Store.  Please install this application and launch it.",555],["2013 TVs**",555],["Turn on the TV, launch the Smart Hub by hitting the Smart TV button on the remote.",555],["Navigate to the Apps screen.  Launch the Store app.",555],["Find Unity Launcher in the Information category, install it.",555],["Launch Unity Launcher from the Smart TV Hub app list.",555],["If you can't find the application after you installed it, check More Apps.",555],["2014 TVs**",555],["Turn on the TV, launch the Smart Hub by hitting the Smart TV button on the remote.",555],["Navigate to the Apps screen, at the bottom you will see More Apps, click on this.",555],["Click on Information category.",555],["Find Unity Launcher in the list.  Install it.",555],["Launch Unity Launcher from the Smart TV Hub app list.",555],["2015 TVs**",555],["Turn on the TV, launch the Smart Hub by hitting the Smart TV button on the remote.",555],["Navigate to the Apps screen.",555],["At the top select the Information category.",555],["Find Unity Launcher in the list. Install it.",555],["Launch Unity Launcher from the Smart TV Hub app list.",555],["Unity Setup",555],["Open Unity with Samsung TV support.",555],["In File-&gt;Build Settings, switch the Build Target to Samsung TV.",555],["Obtain the IP address of the TV from Unity Launcher.",555],["Insert TV's IP addres into the PlayerSettings -> Publishing Settings -> Device Address.",555],["Build and Run**.  Your project will start running on your TV.",555],["Scene View",556],["The  Scene View is your interactive sandbox. You will use the Scene View to select and position environments, the player, the camera, enemies, and all other  GameObjects. Maneuvering and manipulating objects within the Scene View are some of the most important functions in Unity, so it's important to be able to do them quickly. To this end, Unity provides keystrokes for the most common operations.",556],["Scene View Navigation",556],["See Scene View Navigation for full details on navigating the scene view. Here's a brief overview of the essentials:",556],["Hold the right mouse button to enter  Flythrough mode.  This turns your mouse and WASD keys (plus Q and E for up and down) into quick first-person view navigation.",556],["Select any GameObject and press the F key.  This will center the Scene View and pivot point on the selection.",556],["Use the arrow keys to move around on the X/Z plane.",556],["Hold Alt and click-drag to orbit the camera around the current pivot point.",556],["Hold Alt and middle click-drag to drag the Scene View camera around.",556],["Hold Alt and right click-drag to zoom the Scene View. This is the same as scrolling with your mouse wheel.",556],["You might also find use in the  Hand Tool (shortcut: Q), especially if you are using a one-button mouse. With the Hand tool selected:",556],[" Click-drag to drag the camera around.",556],[" Hold Alt and click-drag to orbit the camera around the current pivot point.",556],[" Hold Alt and right click-drag to zoom the Scene View. On Mac you can also hold Control and click-drag instead.",556],["In the upper-right corner of the Scene View is the  Scene Gizmo.  This displays the Scene Camera's current orientation, and allows you to quickly modify the viewing angle.",556],["Each of the coloured \"arms\" of the gizmo represents a geometric axis. You can click on any of the arms to set the camera to an orthographic (i.e. perspective-free) view looking along the corresponding axis. You can click on the text underneath the gizmo to switch between the normal perspective view and an isometric view. While in isometric mode, you can right-click drag to orbit, and Alt + middle-click drag to pan.",556],["Note that the Scene Gizmo will be hidden when the view is in 2D mode, since the view is always directly at the XY plane.",556],["Positioning GameObjects",556],["See Positioning Game Objects for full details on positioning GameObjects in the scene. Here's a brief overview of the essentials:",556],["When building your games, you'll place lots of different objects in your game world.  To do this use the Transform Tools in the Toolbar to Translate, Rotate, and Scale individual GameObjects.  Each has a corresponding Gizmo that appears around the selected GameObject in the Scene View.  You can use the mouse and manipulate any Gizmo axis to alter the  Transform Component of the GameObject, or you can type values directly into the number fields of the Transform Component in the Inspector.",556],["Rect Tool",556],["The Rect Tool can be found in the Toolbar next to the Transform tools and allows you to view and edit the Rect handles on 2D and 3D objects.",556],["For 2D objects (sprites) you can hold down shift to scale uniformly. If you scale non-uniformly along axis that don't match the local axes for the object, it will be scaled along the closest axes it can. For 3D objects you can now also use rect handles; Rect handles are shown for different planes depending on what angle the object is viewed from.",556],["Scene View Control Bar",556],["The control bar lets you choose various options for the scene view. You can switch on or off the audio, lighting and 2D mode and also control how objects, image effects and gizmos will be displayed. See the View Modes section for further details.",556],["Scene View Navigation",557],["The Scene View has a set of navigation controls to help you move around quickly and efficiently.",557],["Arrow Movement",557],["You can use the Arrow Keys to move around the scene as though \"walking\" through it. The up and down arrows move the camera forward and backward in the direction it is facing. The left and right arrows pan the view sideways. Hold down the Shift key with an arrow to move faster.",557],["Focusing",557],["If you select a GameObject in the hierarchy, then move the mouse over the scene view and press F, the view will move so as to center on the object. This feature is referred to as 'Frame Selected' under the 'Edit' menu. However if you would like to lock the view to the object even when the object is moving then press Shift+F, this feature is referred to as 'Lock View to Selected' under the 'Edit' menu.",557],["Move, Orbit and Zoom",557],["Moving, orbiting and zooming are key operations in Scene View navigation, so Unity provides several alternative ways to perform them for maximum convenience.",557],["Using the Hand Tool",557],["When the hand tool is selected (shortcut: Q), the following mouse controls are available:",557],[" Move: Click-drag to drag the camera around.",557],[" Orbit: Hold Alt and click-drag to orbit the camera around the current pivot point. This option is not available in 2D mode as the view is orthographic.",557],[" Zoom: Hold Alt and right click-drag to zoom the Scene View. On Mac you can also hold Control and click-drag instead.",557],["Holding down Shift will increase the rate of movement and zooming.",557],["Shortcuts Without Using the Hand Tool",557],["For extra efficiency, all of these controls can also be used regardless of which transform tool is selected.",557],["The most convenient controls depend on which mouse or track-pad you are using:",557],["Action  3-button mouse 2-button mouse or track-pad Mac with only one mouse button or track-pad ",557],["Move Hold Alt and middle click-drag. Hold Alt-Control and click-drag. Hold Alt-Command and click-drag. ",557],["*Orbit Hold Alt and click-drag. Hold Alt and click-drag. Hold Alt and click-drag. ",557],["Zoom Hold Alt and right click-drag or use scroll-wheel. Hold Alt and right click-drag. Hold Alt-Control and click-drag or use two-finger swipe. ",557],["* Not available in 2D mode.",557],["Flythrough Mode",557],["The Flythrough mode lets you navigate the Scene View by flying around in first person similar to how you would navigate in many games.",557],["Click and hold the right mouse button.",557],["Now you can move the view around using the mouse and use the WASD keys to move left/right forward/backward and the Q and E keys to move up and down.",557],["Holding down Shift will make you move faster.",557],["Flythrough mode is designed for Perspective Mode. In Isometric Mode, holding down the right mouse button and moving the mouse will orbit the camera instead.",557],["Note that in 2D mode, flythrough mode is not available. Holding the right mouse button down while moving the mouse allows you to pan around the scene view.",557],["Scene Gizmo",557],["In the upper-right corner of the Scene View is the Scene Gizmo.  This displays the Scene View Camera's current orientation, and allows you to quickly modify the viewing angle.",557],["You can click on any of the arms to snap the Scene View Camera to that direction.  Click the middle of the Scene Gizmo, or the text below it, to toggle between Isometric Mode and Perspective Mode.  You can also always shift-click the middle of the Scene Gizmo to get a \"nice\" perspective view with an angle that is looking at the scene from the side and slightly from above.",557],["Note that in 2D mode, the scene gizmo will not be displayed since the only option is to have the view looking perpendicularly at the XY plane.",557],["Mac Trackpad Gestures",557],["On a Mac with a trackpad, you can drag with two fingers to zoom the view.",557],["You can also use three fingers to simulate the effect of clicking the arms of the Scene Gizmo: drag up, left, right or down to snap the Scene View Camera to the corresponding direction. In OS X 10.7 \"Lion\" you may have to change your trackpad settings in order to enable this feature:",557],["Open System Preferences and then Trackpad (or type trackpad into Spotlight).",557],["Click into the \"More Gestures\" option.",557],["Click the first option labelled \"Swipe between pages\" and then either set it to \"Swipe left or right with three fingers\" or \"Swipe with two or three fingers\".",557],["Antialiasing",558],["The Antialiasing as a post processing effect offers a set of algorithms",558],["designed to give a smoother appearance to graphics. When two areas of different colour adjoin in an image,",558],["the shape of the pixels can form a very distinctive \"staircase\" along the boundary. This effect is known as",558],["aliasing and hence antialiasing refers to any measure which reduces the effect.",558],["The antialiasing algorithms are image based, which is very useful for deferred rendering where traditional",558],["multisampling (as used by Quality Settings) is not properly supported - for example, when using Deferred Shading or HDR rendering.",558],["The algorithms currently supported are NVIDIA's FXAA, FXAA II, FXAA III (tweakable and console optimized),",558],["simpler edge blurs (NFAA, SSAA) that blur only local edges and an adaption of the DLAA algorithm that",558],["also addresses long edges. SSAA is the fastest technique, followed by NFAA, FXAAII, FXAA II, DLAA and the the",558],["other FXAAs. Typically, the quality of antialiasing trades off against the speed of the algorithm but there may",558],["be situations where the choice of algorithm makes little difference.",558],["For those especially interested in console deployment, the optimized FXAA III",558],["implementation offers the best tradeoff between quality and performance and can furthermore be tweaked",558],["towards sharper or blurrier looks.",558],["As with the other image effects, you must",558],["have the Standard Assets Effects package installed before it becomes available.",558],["Properties",558],["Property: Function: ",558],["AA Technique The algorithm to be used. ",558],["Hardware Support",558],["This effect requires a graphics card that supports Shader Model 3.",558],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",558],["Aspect Ratio Fitter",559],["Properties",559],["Property: Function: ",559],["Aspect Mode How the rectangle is resized to enforce the aspect ratio. ",559],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;None Do not make the rect fit the aspect ratio. ",559],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Width Controls Height The height is automatically adjusted based on the width. ",559],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Height Controls Width The width is automatically adjusted based on the height. ",559],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fit In Parent The width, height, position, and anchors are automatically adjusted to make the rect fit inside the rect of the parent while keeping the aspect ratio. The may be some space inside the parent rect which is not covered by this rect. ",559],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Envelope Parent The width, height, position, and anchors are automatically adjusted to make the rect cover the entire area of the parent while keeping the aspect ratio. This rect may extend further out than the parent rect. ",559],["Aspect Ratio The aspect ratio to enforce. This is the width divided by the height. ",559],["Description",559],["The Aspect Ratio Fitter functions as a layout controller that controls the size of its own layout element. It can adjust the height to fit the width or vice versa, or it can make the element fit inside its parent or envelope its parent. The Aspect Ratio Fitter does not take layout information into account such as minimum size and preferred size.",559],["It's worth keeping in mind that when a Rect Transform is resized - whether by a Aspect Ratio Fitter or something else - the resizing is around the pivot. This means that the pivot can be used to control the alignment of the rectangle. For example, a pivot placed at the top center will make the rectangle grow evenly to both sides, and only grow downwards while the top edge remain at its position.",559],["Bloom",560],["Blooming is the optical effect where light from a bright source (such as a glint) appears to leak into surrounding objects. The Bloom image effect adds bloom and also automatically generates lens flares in a highly efficient way. Bloom is a very distinctive effect that can make a big difference to a scene and may suggest a magical or dreamlike environment especially when used in conjunction with HDR rendering. On the other hand, given proper settings it's also possible to enhance photorealism using this effect. Glow around very bright objects is a common phenomena observed in film and photography, where luminance values differ vastly. Bloom is an enhanced version of the simpler but optimized Bloom (Optimized) and older Bloom And Flares image effects.",560],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",560],["Properties",560],["Property: Function: ",560],["Quality High quality preserves high frequencies and reduces aliasing. ",560],["Mode Choose complex mode to show advanced options. ",560],["Blend The method used to add bloom to the color buffer. The softer Screen mode is better for preserving bright image details but doesn't work with HDR. ",560],["HDR Whether bloom is using HDR buffers. This will result in a different look as pixel intensities may leave the [0,1] range, see details in tonemapping and HDR. ",560],["Cast lens flares Enable or disable automatic screen based lens flare generation. ",560],["",560],["Intensity The global light intensity of the added light (affects bloom and lens flares). ",560],["Threshold Regions of the image brighter than this threshold receive blooming (and potentially lens flares). ",560],["RGB Threshold Chose different thresholds for R, G and B. ",560],["",560],["Blur iterations The number of times gaussian blur is applied. More iterations improve smoothness but take extra time to process and hide small frequencies. ",560],["Sample distance The max radius of the blur. Does not affect performance. ",560],["Use alpha mask The degree to which the alpha channel acts as a mask for the bloom effect. ",560],["",560],["Lens Flares The type of lens flare. The options are Ghosting, Anamorphic or a mix of the two. ",560],["Local intensity Local intensity used only for lens flares. 0 disables lens flares entirely. ",560],["Local threshold The accumulative light intensity threshold that defines which image parts are candidates for lens flares. ",560],["Stretch width The width for anamorphic lens flares. ",560],["Rotation The orientation for anamorphic lens flares. ",560],["Blur iterations The number of times blurring is applied to anamorphic lens flares. More iterations improve smoothness but take more processing time. ",560],["Saturation (De-)saturates lens flares. If 0, lens flares will fully receive the Tint Color. ",560],["Tint Color Color modulation for the anamorphic flare type. ",560],["1st-4th Color Color modulation for all lens flares when Ghosting or Combined is chosen. ",560],["Lens flare mask Mask used to prevent lens flare artifacts at screen edges. ",560],["Blend Modes: Add and Screen",560],["Blend modes determine the way that two images will be combined when overlaid. Each pixel from the base image is combined mathematically with the pixel in the corresponding position in the overlay image. Two blend modes are available for this image effect, Add and Screen.",560],["Add Mode",560],["When the images are blended in Add mode, the values of the color channels (red, green and blue) are simply added together and clamped to the maximum value of 1. The overall effect is that areas of each image that aren't especially bright can easily blend to maximum brightness in the result. The final image tends to lose color and detail and so Add mode is useful when a dazzling \"white out\" effect is required.",560],["Screen Mode",560],["Screen mode is so named because it simulates the effect of projecting the two source images onto a white screen simultaneously. Each color channel is combined separately but identically to the others. Firstly, the channel values of the two source pixels are inverted (ie, subtracted from 1). Then, the two inverted values are multiplied together and the result is inverted. The result is brighter than either of the two source pixels but it will be at maximum brightness only if one of the source colors was also. The overall effect is that more color variation and detail from the source images is preserved, leading to a gentler effect than Add mode.",560],["Hardware Support",560],["This effect should run on all hardware that Unity supports.",560],["Bloom and Lens Flares",561],["Blooming is the optical effect where light from a bright source (such as a glint) appears to leak into surrounding objects. The Bloom and Lens Flares image effect adds bloom and also automatically generates lens flares in a highly efficient way. Bloom is a very distinctive effect that can make a big difference to a scene and may suggest a magical or dreamlike environment especially when used in conjunction with HDR rendering.",561],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",561],["Properties",561],["Property: Function: ",561],["Tweak Mode Choose complex mode for additional options such as lens flares. ",561],["Blend mode The method used to add bloom to the color buffer. The softer Screen mode is better for preserving bright image details but doesn't work with HDR. ",561],["HDR Whether bloom is using HDR buffers. This will result in a different look as pixel intensities may leave the [0,1] range, see details in tonemapping and HDR. ",561],["Cast lens flares Enable or disable automatic lens flare generation. ",561],["",561],["Intensity The global light intensity of the added light (affects bloom and lens flares). ",561],["Threshold Regions of the image brighter than this threshold receive blooming (and potentially lens flares). ",561],["Blur iterations The number of times gaussian blur is applied. More iterations improve smoothness but take extra time to process and hide small frequencies. ",561],["Blur spread The max radius of the blur. Does not affect performance. ",561],["Use alpha mask The degree to which the alpha channel acts as a mask for the bloom effect. ",561],["",561],["Lens flare mode The type of lens flare. The options are Ghosting, Anamorphic or a mix of the two. ",561],["Lens flare mask Mask used to prevent lens flare artifacts at screen edges. ",561],["Local intensity Local intensity used only for lens flares. ",561],["Local threshold The accumulative light intensity threshold that defines which image parts are candidates for lens flares. ",561],["Stretch width The width for anamorphic lens flares. ",561],["Blur iterations The number of times blurring is applied to anamorphic lens flares. More iterations improve smoothness but take more processing time. ",561],["Tint Color Color modulation for the anamorphic flare type. ",561],["1st-4th Color Color modulation for all lens flares when Ghosting or Combined is chosen. ",561],["Blend Modes: Add and Screen",561],["Blend modes determine the way that two images will be combined when overlaid. Each pixel from the base image is combined mathematically with the pixel in the corresponding position in the overlay image. Two blend modes are available for Unity image effects, Add and Screen.",561],["Add Mode",561],["When the images are blended in Add mode, the values of the color channels (red, green and blue) are simply added together and clamped to the maximum value of 1. The overall effect is that areas of each image that aren't especially bright can easily blend to maximum brightness in the result. The final image tends to lose color and detail and so Add mode is useful when a dazzling \"white out\" effect is required.",561],["Screen Mode",561],["Screen mode is so named because it simulates the effect of projecting the two source images onto a white screen simultaneously. Each color channel is combined separately but identically to the others. Firstly, the channel values of the two source pixels are inverted (ie, subtracted from 1). Then, the two inverted values are multiplied together and the result is inverted. The result is brighter than either of the two source pixels but it will be at maximum brightness only if one of the source colors was also. The overall effect is that more color variation and detail from the source images is preserved, leading to a gentler effect than Add mode.",561],["Hardware Support",561],["This effect should run on all hardware that Unity supports.",561],["Bloom (Optimized)",562],["Blooming is the optical effect where light from a bright source (such as a glint) appears to leak into surrounding objects. This image effect adds such a glow in a fast and optimized way. If you need more flexibility, try the more sophisticated Bloom effect instead.",562],["This bloom effect works especially well with HDR enabled scenes.",562],["Example of the bloom used in conjunction with HDR lighting",562],["Properties",562],["Property: Function: ",562],["Threshold Min RGB values that will start blooming. ",562],["Intensity Total bloom intensity. ",562],["Blur Size Bloom size (screen size dependent). ",562],["Resolution Internal bloom buffer size. The lower the faster the effect can execute. ",562],["Blur Iterations The amount of blur iterations when producing the soft glow. The smaller the faster the effect can execute. ",562],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",562],["Hardware Support",562],["This effect should run on all hardware that Unity supports.",562],["Blur",563],["This is now deprecated. Use Blur (Optimized) instead.",563],["The Blur image effect blurs the rendered image in real-time.",563],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",563],["Properties",563],["Property: Function: ",563],["Iterations The number of times the basic blur operation will be repeated. More iterations typically give a better result but each has a cost in processing time. ",563],["Blur Spread Higher values will spread out the blur more at the same iteration count but at some cost in quality. Usually values from 0.6 to 0.7 are a good compromise between quality and speed. ",563],["Hardware Support",563],["This effect should run on all hardware that Unity supports.",563],["Blur (Optimized)",564],["The optimized Blur image effect blurs the rendered image by filtering in a number of passes using a gaussian filter curve.",564],["The following screenshots show possible blur results.",564],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",564],["Properties",564],["Property: Function: ",564],["Downsample The number of times the image will be downsampled before the blur is applied. Bigger blurs and faster speeds can be expected the more you downsample. ",564],["Blur Size The spread used when filtering the image. Higher values produce bigger blurs. ",564],["Blur Iterations The number of of times the filter operations will be repeated. ",564],["Hardware Support",564],["This effect should run on all hardware that Unity supports.",564],["Button",565],["The Button control responds to a click from the user and is used to initiate or confirm an action. Familiar examples include the Submit and Cancel buttons used on web forms.",565],["Properties",565],["Property: Function: ",565],["Interactable Will this component will accept input? See Interactable. ",565],["Transition Properties that determine the way the control responds visually to user actions. See Transition Options. ",565],["Navigation Properties that determine the sequence of controls. See [Navigation Options]script-SelectableNavigation). ",565],["Events",565],["Property: Function: ",565],["On Click A UnityEvent that is invoked when when a user clicks the button and releases it. ",565],["Details",565],["The button is designed to initiate an action when the user clicks and releases it. If the mouse is moved off the button control before the click is released, the action does not take place.",565],["The button has a single event called On Click that responds when the user completes a click. Typical use cases include:",565],["Confirming a decision (eg, starting gameplay or saving a game)",565],["Moving to a sub-menu in a GUI",565],["Cancelling an action in progress (eg, downloading a new scene)",565],["Hints",565],["If you need things to happen on other events than clicks, you can add an EventTrigger component.",565],["Camera Motion Blur",566],["Motion Blur is a common postprocessing effect simulating the fact that for most camera systems 'light' gets accumulated over time (instead of just taking discrete snapshots). Fast camera or object motion will hence produce blurred images.",566],["The current Motion Blur implementation only supports blur due to camera motion with the option to exclude certain layers (useful for excluding characters and/or dynamic objects, especially when those are following the camera movement). It can however be extended to support dynamic objects if an additional script keeps track of each objects model matrix and updates the already generated velocity buffer.",566],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",566],["Properties",566],["Property: Function: ",566],["Technique Motion Blur algorithm. Reconstruction filters will generally give best results at the expense of performance and a limited blur radius of 10 pixels unless a DirectX11 enabled graphics device is used. ",566],["Velocity Scale Higher scale makes image more likely to blur. ",566],["Velocity Max Maximum pixel distance blur will be clamped to and tile size for reconstruction filters (see below). ",566],["Velocity Min Minimum pixel distance at which blur is removed entirely. ",566],["Camera Motion specific:",566],["Camera Rotation Scales strength of blurs due to camera rotations. ",566],["Camera Movement Scales strength of blurs due to camera translations. ",566],["Local Blur, Reconstruction, ReconstructionDX11 and ReconstructionDisc specific:",566],["Exclude layers Objects in this layer will remain unaffected. ",566],["Velocity downsample Lower resolution velocity buffers might help performance but will heavily degrade blur quality. Might still be a valid option for simple scenes. ",566],["Sampler Jitter Adding noise helps prevent ghosting for the Reconstruction filter. ",566],["Max Sample Count Number of samples used to determine the blur. Affects performance a lot. ",566],["Preview (Scale) Preview how blur might look like given artificial camera motion values. ",566],["Motion Blur Filters (Technique)",566],["Local Blur simply performs a directional blur along the current's pixel velocity. Being essentially a gather operation, it is suited for scenes with a low geometric complexity (e.g. vast terrains), large blur radii or when 'realism' is not the governing factor. One shortcoming is that it can't produce proper 'overlaps' of blurred objects onto focused background areas. Another one that excluded objects 'smear' onto blurred areas.",566],["Reconstruction filters can produce more realistic blur results. The name Reconstruction is derived from the fact that the filter tries to estimate backgrounds, even if there is no information available in the given color and depth buffers. The results can be of higher quality and shortcomings of the Local Blur's gather filter can be avoided (it can e.g. produce proper overlaps).",566],["It is based on the paper A Reconstruction Filter for Plausible Motion Blur (http://graphics.cs.williams.edu/papers/MotionBlurI3D12/). The algorithm chops the image into tiles of the size Velocity Max and uses the maximum velocity in the area to simulate a blurry pixel scattering onto neighbouring areas. Artifacts can arise if the velocity is highly varying while the mentioned tile size is large.",566],["The DirectX11 exclusive filter ReconstructionDX11 allows arbitrary blur distances (aka tile size or Velocity Max) and creates nicer blurs by using more samples.",566],["The ReconstructionDisc variation uses a different sampling pattern to generate a softer look compared to the standard Reconstruction filters. However, as more samples are taken (it scales automatically to DirectX11), the resulting cost can be higher.",566],["While all of the above filters need a prepass to generate a velocity buffer, the Camera Motion filter solely works on the camera motion. It generates a global filter direction based on camera change and blurs the screen along that direction (see http://www.valvesoftware.com/publications/2008/GDC2008_PostProcessingInTheOrangeBox.pdf for more details).",566],["It is especially suited for smoothing fast camera rotations, for instance in first person shooter games.",566],["Hardware support",566],["This effect requires a graphics card that supports Shader Model 3 and depth textures.",566],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",566],["Canvas Scaler",567],["The Canvas Scaler component is used for controlling the overall scale and pixel density of UI elements in the Canvas. This scaling affects everything under the Canvas, including font sizes and image borders.",567],["Properties",567],["Property: Function: ",567],["UI Scale Mode Determines how UI elements in the Canvas are scaled. ",567],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Constant Pixel Size Makes UI elements retain the same size in pixels regardless of screen size. ",567],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scale With Screen Size Makes UI elements bigger the bigger the screen is. ",567],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Constant Physical Size Makes UI elements retain the same physical size regardless of screen size and resolution. ",567],["Settings for Constant Pixel Size:",567],["Property: Function: ",567],["Scale Factor Scales all UI elements in the Canvas by this factor. ",567],["Reference Pixels Per Unit If a sprite has this 'Pixels Per Unit' setting, then one pixel in the sprite will cover one unit in the UI. ",567],["Settings for Scale With Screen Size:",567],["Property: Function: ",567],["Reference Resolution The resolution the UI layout is designed for. If the screen resolution is larger, the UI will be scaled up, and if it's smaller, the UI will be scaled down. ",567],["Screen Match Mode A mode used to scale the canvas area if the aspect ratio of the current resolution doesn't fit the reference resolution. ",567],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Match Width or Height Scale the canvas area with the width as reference, the height as reference, or something in between. ",567],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Expand Expand the canvas area either horizontally or vertically, so the size of the canvas will never be smaller than the reference. ",567],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Shrink Crop the canvas area either horizontally or vertically, so the size of the canvas will never be larger than the reference. ",567],["Match Determines if the scaling is using the width or height as reference, or a mix in between. ",567],["Reference Pixels Per Unit If a sprite has this 'Pixels Per Unit' setting, then one pixel in the sprite will cover one unit in the UI. ",567],["Settings for Constant Physical Size:",567],["Property: Function: ",567],["Physical Unit The physical unit to specify positions and sizes in. ",567],["Fallback Screen DPI The DPI to assume if the screen DPI is not known. ",567],["Default Sprite DPI The pixels per inch to use for sprites that have a 'Pixels Per Unit' setting that matches the 'Reference Pixels Per Unit' setting. ",567],["Reference Pixels Per Unit If a sprite has this 'Pixels Per Unit' setting, then its DPI will match the 'Default Sprite DPI' setting. ",567],["Settings for World Space Canvas (shown when Canvas component is set to World Space):",567],["Property: Function: ",567],["Dynamic Pixels Per Unit The amount of pixels per unit to use for dynamically created bitmaps in the UI, such as Text. ",567],["Reference Pixels Per Unit If a sprite has this 'Pixels Per Unit' setting, then one pixel in the sprite will cover one unit in the world. If the 'Reference Pixels Per Unit' is set to 1, then the 'Pixels Per Unit' setting in the sprite will be used as-is. ",567],["Details",567],["For a Canvas set to 'Screen Space - Overlay' or 'Screen Space - Camera', the Canvas Scaler UI Scale Mode can be set to Constant Pixel Size, Scale With Screen Size, or Constant Physical Size.",567],["Constant Pixel Size",567],["Using the Constant Pixel Size mode, positions and sizes of UI elements are specified in pixels on the screen. This is also the default functionality of the Canvas when no Canvas Scaler is attached. However, With the Scale Factor setting in the Canvas Scaler, a constant scaling can be applied to all UI elements in the Canvas.",567],["Scale With Screen Size",567],["Using the Scale With Screen Size mode, positions and sizes can be specified according to the pixels of a specified reference resolution. If the current screen resolution is larger then the reference resolution, the Canvas will keep having only the resolution of the reference resolution, but will scale up in order to fit the screen. If the current screen resolution is smaller than the reference resolution, the Canvas will similarly be scaled down to fit.",567],["If the current screen resolution has a different aspect ratio than the reference resolution, scaling each axis individually to fit the screen would result in non-uniform scaling, which is generally undesirable. Instead of this, the ReferenceResolution component will make the Canvas resolution deviate from the reference resolution in order to respect the aspect ratio of the screen. It is possible to control how this deviation should behave using the Screen Match Mode setting.",567],["Constant Physical Size",567],["Using the Constant Physical Size mode, positions and sizes of UI elements are specified in physical units, such as millimeters, points, or picas. This mode relies on the device reporting its screen DPI correctly. You can specify a fallback DPI to use for devices that do not report a DPI.",567],["World Space",567],["For a Canvas set to 'World Space' the Canvas Scaler can be used to control the pixel density of UI elements in the Canvas.",567],["Hints",567],["See the page Designing UI for Multiple Resolutions for a step by step explanation of how Rect Transform anchoring and Canvas Scaler can be used in conjunction to make UI layouts that adapt to different resolutions and aspect ratios.",567],["Color Correction Curves",568],["Color Correction Curves make color adjustments using curves for each color channel. Depth based adjustments allow you to vary the color adjustment according to a pixel's distance from the camera. For example, objects on a landscape typically get more desaturated with distance due to the effect of particles in the atmosphere scattering.",568],["Selective adjustments can also be applied, so you can swap a target color in the scene for another color of your own choosing.",568],["Lastly, Saturation is an easy way to adjust all color saturation or desaturation (until image turns black &amp; white) which is an effect that is not achievable with curves only.",568],["See also the new Color Correction Lookup Texture Effect for lookup texture based color grading.",568],["The following images demonstrate how by simply enhancing the saturation slider and the blue channel curve can make a scene drastically different",568],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",568],["Properties",568],["Property: Function: ",568],["Mode Chose between advanced or simple configuration modes. ",568],["Saturation Saturation level (0 creates a black &amp; white image). ",568],["Red The red channel curve. ",568],["Green The green channel curve. ",568],["Blue The blue channel curve. ",568],["",568],["Red (Depth) The red channel curve for depth based correction. ",568],["Green (Depth) The green channel curve for depth based correction. ",568],["Blue (Depth) The blue channel curve for depth based correction. ",568],["Blend Curve Defines how blending between the foreground and background color correction is performed. ",568],["",568],["Selective Color Correction ",568],["Enable Enables the optional selective color correction. ",568],["Key The key color for selective color correction. ",568],["Target The target color for selective color correction. ",568],["Understanding Curves",568],["Curves offer a powerful way to enhance an image and can be used to increase or decrease contrast, add a tint or create psychedelic color effects. Curves work on each of the red, green and blue color channels separately and are based around the idea of mapping each input brightness level (ie, the original brightness value of a pixel) to an output level of your choosing. The relationship between the input and output levels can be shown on a simple graph:-",568],["The horizontal axis represents the input level and the vertical represents the output level. Any point on the line specifies the output value that a given input is mapped to during processing. When the \"curve\" is the default straight line running from bottom-left to top-right, the input value is mapped to an identical output value, which will leave the pixel unchanged. However, the curve can be redrawn to re-map the brightness levels as required. A simple example is when the line goes diagonally from top-left to bottom-right:-",568],["In this case, the pixel's brightness will be inverted; 0% will map to 100%, 25% to 75% and vice versa. If this is applied to all color channels then the image will be like a photographic negative of the original.",568],["Contrast",568],["Most of the detail in an image is conveyed by the difference in brightness levels between pixels, regardless of their colour. Pixels that differ by less than about 2% brightness are likely to be indistinguishable but above this, the greater the difference, the greater the impression of detail. The spread of brightness values in the image is referred to as its contrast.",568],["If a shallow slope is used for the curve, rather than the corner-to-corner diagonal then the full range of input values will be squeezed into a narrower range of output values:-",568],["This has the effect of reducing the contrast, since the differences between pixel values in the output are necessarily smaller than those in the input (indeed, two slightly different input values may actually get mapped to the same output value). Note that since the image no longer spans the full range of output values, it is possible to slide the curve up and down the range, resulting in an image which is brighter or darker overall (the average brightness is sometimes called the \"sit\" point and is the parameter adjusted by the brightness control on a TV set). Reduced contrast can give the impression of gloom, fog or a dazzling light source in a scene, depending on the overall brightness.",568],["It is not necessary to reduce the contrast across the whole range of brightness levels. The curve's slope can vary along its length, with the shallower parts corresponding to ranges of reduced contrast. In between the shallow parts, the slope may be steeper than the default, and the contrast will actually increase in these ranges. Changing the curve like this gives a useful way to increase contrast in some parts of the image while reducing it in areas where the detail is less important:-",568],["Colour Effects",568],["If the curves are set identically for each color channel (red, green and blue) then the changes will mainly affect the brightness of pixels while their colors remain relatively unchanged. However, if the curves are set differently for each channel then the colors can change dramatically. Many complex interactions between the color channels are possible but some basic insight can be gained from the following diagram:-",568],["As explained in the section above, a reduction of contrast can accompany an increase or reduction in the overall brightness. If, say, the red channel is brightened then a red tint will be visible in the image. If it is darkened then the image will be tinted towards cyan (since this color is obtained by combining the other two primaries, green and blue).",568],["Depth-Based Color Correction",568],["Colors often appear slightly different when viewed at a distance. For example, in a landscape scene, colors tend to get desaturated by atmospheric light scattering. This kind of effect can be created using depth-based color correction. When this is enabled, two sets of color curves become available, one for the camera's near clipping plane and the other for the far clipping plane. The actual correction applied to an object depends on its distance from the camera; the normalized distance between the two clipping planes is used as an interpolation parameter between the two sets of color curves. The exact type of interpolation is specified by an additional blending curve, which maps the normalised distance to an interpolation value in much the same way that a color curve maps an input to an output. By default, this curve is a straight diagonal which results in linear interpolation between the two color corrections. However, it can be modified to bias the correction according to distance.",568],["Selective Color Correction",568],["Using this setting, it is possible to replace a particular color in the original image (referred to as the \"key\") and replace it with a chosen target color. Using a single exact color for the key would tend to introduce visual artifacts and so a range is used instead. The resulting color is an interpolation between the key and target colors, depending on how close the original image pixel is to the specified key color.",568],["Editing Curves",568],["Clicking on one of the curves in the inspector will open an editing window:-",568],["At the bottom of the window are a number of presets for common curves. However, you can also alter the curve by manipulating the key points. Right clicking on the curve line will add a new key point which can be dragged around with the mouse. If you right click on one of the points, you will see a contextual menu that gives several options for editing the curve. As well as allowing you to delete the key, there are four options that determine how it will affect the shape of the curve:-",568],["Auto: the curve will pass through the point and its shape will be adjusted to keep the curvature smooth between neighbouring points.",568],["Free Smooth: the tangent of the curve can be edited using handles attached to the key point.",568],["Flat: Free Smooth mode is enabled and the tangent is set horizontally.",568],["Broken: The key point has tangent handles as with Free Smooth mode but the handles on the left and right of the curve can be moved separately to create a sharp break rather than a smooth curve.",568],["Below these options are a few settings that control how a point's tangent handles behave:-",568],["Free: Broken mode is enabled for the curve at the specified tangent.",568],["Linear: The curve between the key point and its neighbour is set to a straight line.",568],["Constant: A flat horizontal line is drawn from the curve to its neighbour and the vertical displacement occurs as a sharp step.",568],["Hardware Support",568],["This effect requires a graphics card that supports Depth Textures.",568],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",568],["Color Correction Lookup Texture",569],["Color Correction Lut (Lut stands for lookup texture) is an optimized way of performing color grading in a post effect. Instead of tweaking the individual color channels via curves as in Color Correction Curves, only a single texture is used to produce the corrected image. The lookup will be performed by using the original image color as a vector that is used to address the lookup texture.",569],["Advantages include better performance and more professional workflow opportunities, where all color transforms can be defined in professional image manipulation software (such as Photoshop or Gimp) and thus a more precise result can be achieved.",569],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",569],["Properties",569],["Property: Function: ",569],["Based On A 2D representation of the 3D lookup texture that will be used to generate the corrected image. ",569],["Lookup Texture Requirements",569],["The 2D texture representation is required to be laid out in a certain way that it represents an unwrapped volume texture (imagine an image sequence of \"depth slices\").",569],["The following image shows an example of such an unwrapped texture which effectively enhances image contrast. It should be included in the standard packages.",569],["Texture importer requirements include enabling Read/Write support and disabling texture compression. Otherwise, unwanted image artifacts will likely occur.",569],["Example Workflow",569],["Always keep the basic neutral lookup texture (lut) ready as this will be the basis for generating all other corrective lut's.",569],["Take a screenshot of your game",569],["Import into e.g. Photoshop and apply color adjustments (such as contrast, brightness, color levels adjustments) until a satisfying result has been reached",569],["Perform the same steps to the neutral lut and save as a new lut",569],["Assign new lut to the effect and hit Convert &amp; Apply",569],["Hardware Support",569],["This effect requires a graphics card with pixel shaders (3.0). PC: NVIDIA cards since 2004 (GeForce 6), AMD cards since 2005 (Radeon X1300), Intel cards since 2006 (GMA X3000); Consoles: Xbox 360, PS3.",569],["All image effects automatically disable themselves when they can not run on end-users graphics card.",569],["Color Correction Ramp Texture",570],["Color Correction allows you apply arbitrary color correction to your scene as a postprocessing effect (just like the Curves tool in Photoshop or Gimp). This page explains how to setup color correction in Photoshop and then apply exactly the same color correction at runtime in Unity.",570],["Like with all image effects, make sure to have the Standard Assets Effects package installed.",570],["Getting color correction from Photoshop into Unity",570],["Take a screenshot of a typical scene in your game",570],["Open it in Photoshop and color correct using the Image-&gt;Adjustments-&gt;Curves",570],["Save the .acv file file from the dialog using Save...",570],["Open Pro Standard Assets-&gt;Image Based-&gt;color correction ramp.png in Photoshop",570],["Now apply color correction to the ramp image: open Image-&gt;Adjustments-&gt;Curves again and load your saved .acv file",570],["Select your camera in Unity and select Component-&gt;Image Effects-&gt;Color Correction to add color correction effect. Select your modified color ramp.",570],["Hit Play to see the effect in action!",570],["Details",570],["Color correction works by remapping the original image colors through the color ramp image (sized 256x1):",570],["result.red = pixel's red value in ramp image at (original.red + RampOffsetR) index",570],["result.green = pixel's green value in ramp image at (original.green + RampOffsetG) index",570],["result.blue = pixel's blue value in ramp image at (original.blue + RampOffsetB) index.",570],["So for example, to invert the colors in the image you only need to flip the original color ramp horizontally (so that it goes from white to black instead of from black to white).",570],["A simpler version of color remapping that only remaps based on luminance can be achieved with Grayscale image effect.",570],["Tips:",570],["The color correction ramp image should not have mip-maps. Turn them off in Import Settings. It should also be set to Clamp mode.",570],["Hardware Support",570],["This effect should run on all hardware that Unity supports.",570],["Content Size Fitter",571],["Properties",571],["Property: Function: ",571],["Horizontal Fit How the width is controlled. ",571],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;None Do not drive the width based on the layout element. ",571],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Minimum Drive the width based on the minimum width of the layout element. ",571],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Preferred Drive the width based on the preferred width of the layout element. ",571],["Vertical Fit How the height is controlled. ",571],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;None Do not drive the height based on the layout element. ",571],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Minimum Drive the height based on the minimum height of the layout element. ",571],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Preferred Drive the height based on the preferred height of the layout element. ",571],["Description",571],["The Content Size Fitter functions as a layout controller that controls the size of its own layout element. The size is determined by the minimum or preferred sizes provided by layout element components on the Game Object. Such layout elements can be Image or Text components, layout groups, or a Layout Element component.",571],["It's worth keeping in mind that when a Rect Transform is resized - whether by a Content Size Fitter or something else - the resizing is around the pivot. This means that the direction of the resizing can be controlled using the pivot.",571],["For example, when the pivot is in the center, the Content Size Fitter will expand the Rect Transform out equally in all directions. And when the pivot is in the upper left corner, the Content Size Fitter will expand the Rect Transform down and to the right.",571],["Contrast Enhance",572],["The Contrast Enhance image effect enhances the impression of contrast for a given camera. It uses the well-known unsharp mask process available in image processing applications.",572],["When blurring is applied to an image, the colors of adjacent pixels are averaged to some extent, resulting in a reduction of sharp edge detail. However, areas of flat color remain relatively unchanged. The idea behind unsharp masking is that an image is compared with a blurred (or \"unsharp\") version of itself. The difference in brightness between each pixel in the original and the corresponding pixel in the blurred image is an indication of how much constrast the pixel has against its neighbours. The brightness of that pixel is then changed in proportion to the local contrast. A pixel which is darker after blurring must be brighter than its neighbours, so its brightness is further increased while if the pixel is darker after blurring then it will be darkened even more. The effect of this is to increase contrast selectively in areas of the image where the detail is most noticeable. The parameters of unsharp masking are the pixel radius over which colors are blurred, the degree to which brightness will be altered by the effect and a \"threshold\" of contrast below which no change of brightness will be made.",572],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",572],["Properties",572],["Property: Function: ",572],["Intensity The intensity of contrast enhancement. ",572],["Threshold The constrast threshold below which no enhancement is applied. ",572],["Blur Spread The radius over which contrast comparisons are made. ",572],["Hardware Support",572],["This effect should run on all hardware that Unity supports.",572],["Contrast Stretch",573],["Contrast Stretch dynamically adjusts the contrast of the image according to the range of brightness levels it contains. The adjustment takes place gradually over a period of time, so the player can be briefly dazzled by bright outdoor light when emerging from a dark tunnel, say. Equally, when moving from a bright scene to a dark one, the \"eye\" takes some time to adapt.",573],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",573],["Understanding Contrast Stretch",573],["The clarity of detail in an image is largely determined by the range of different brightness values it contains. It is difficult for the eye to distinguish between two brightness levels that differ by less than about 2% and above that, the greater the difference, the stronger the detail. The overall separation between the lightest and darkest values in an image is referred to as the contrast of that image.",573],["It is common for an image to use less than the full range of available brightness values. One way to increase the contrast is to redistribute the pixels' values so as to make better use of the range. The darkest level in the original image is remapped to a even darker level, the brightest to a brighter level and all the levels in between are moved farther apart in proportion. The distribution of levels is then \"stretched\" out farther across the available range and thus this effect is known as contrast stretch.",573],["Contrast stretching is evocative of the way the eye adapts to different light conditions. When walking from an outdoor area to a dimly lit building, the view will briefly appear indistinct until the contrast is stretched to reveal the detail. When emerging from the building, the contrast stretch will have the effect of making the outdoor scene appear dazzling bright until the \"eye\" of the player adjusts.",573],["Properties",573],["Property: Function: ",573],["Adaptation Speed The speed of the transition. The lower this number, the slower the transition ",573],["Limit Minimum The darkest level in the image after adjustment. ",573],["Limit Maximum The brightest level in the image after adjustment. ",573],["Tips:",573],["Since Constrast Stretch is applied over a period of time, the full effect is only visible in Play mode.",573],["Hardware Support",573],["This effect should run on all hardware that Unity supports.",573],["Crease Shading",574],["The Crease is a common non-photorealistic (NPR) rendering technique that enhances the visibility of objects by adding outlines of variable thickness.",574],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",574],["Properties",574],["Property: Function: ",574],["Intensity The intensity of the crease shading. ",574],["Softness The smoothness and softness of the applied crease shading. ",574],["Spread The blur radius, which also determines the thickness of outlines. ",574],["Hardware Support",574],["This effect requires a graphics card that supports Depth Textures.",574],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",574],["Depth of Field",575],["Depth of Field is a common postprocessing effect that simulates the properties of a camera lens. This version is a more modern and sophisticated version of the old Depth of Field (Deprecated) effect that works especially well with HDR rendering and a DirectX 11 compatible graphics device.",575],["In real life, a camera can only focus sharply on an object at a specific distance; objects nearer or farther from the camera will be somewhat out of focus. The blurring not only gives a visual cue about an object's distance but also introduces Bokeh which is the term for pleasing visual artifacts that appear around bright areas of the image as they fall out of focus. Common Bokeh shapes are discs, hexagons and other shapes of higher level dihedral groups.",575],["While the regular version only supports disc shapes (generated via circular texture sampling), the DirectX 11 version is able to splat any shape as defined by the Bokeh Texture.",575],["An example of Depth of Field effect can be seen in the following image, displaying the results of a focused foreground and a defocused background..",575],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",575],["Properties",575],["Property: Function: ",575],["Focal Settings  ",575],["Visualize Overlay color indicating camera focus. ",575],["Focal distance The distance to the focal plane from the camera position in world space. ",575],["Focal Size Increase the total focal area. ",575],["Focus on Transform Determine the focal distance using a target object in the scene. ",575],["Aperture The camera's aperture defining the transition between focused and defocused areas. It is good practice to keep this value as high as possible, as otherwise sampling artifacts might occur, especially when the Max Blur Distance is big. Bigger Aperture values will automatically downsample the image to produce a better defocus. ",575],["",575],["Defocus Type Algorithm used to produce defocused areas. DX11 is effectively a bokeh splatting technique while DiscBlur indicates a more traditional (scatter as gather) based blur. ",575],["Sample Count Amount of filter taps. Greatly affects performance. ",575],["Max Blur Distance Max distance for filter taps. Affects texture cache and can cause undersampling artifacts if value is too big. A value smaller than 4.0 should produce decent results. ",575],["High Resolution Perform defocus operations in full resolution. Affects performance but might help reduce unwanted artifacts and produce more defined bokeh shapes. ",575],["",575],["Near Blur Foreground areas will overlap at a performance cost. ",575],["Overlap Size Increase foreground overlap dilation if needed. ",575],["",575],["DX11 Bokeh Settings  ",575],["Bokeh Texture Texture defining bokeh shape. ",575],["Bokeh Scale Size of bokeh texture. ",575],["Bokeh Intensity Blend strength of bokeh shapes. ",575],["Min Luminance Only pixels brighter than this value will cast bokeh shapes. Affects performance as it limits overdraw to a more reasonable amount. ",575],["Spawn Heuristic Bokeh shapes will only be cast if pixel in questions passes a frequency check. A threshold around 0.1 seems like a good tradeoff between performance and quality. ",575],["Comparison between DirectX11 and DiscBlur settings",575],["About DirectX 11 Bokeh Splatting",575],["This powerful technique enables proper Scattering, however due to high demands on fillrate, it should be used with care. The parameters Spawn Heuristic and Min Luminance control when and where Bokeh Sprites will be placed. If pixels don't pass a luminance and frequency check, a simple Box Blur will be used instead. It's however hard to notice as it uses the same kernel width as the Bokeh sprites.",575],["The following pictures show that the road, that is neither bright nor bears great frequency changes can just be blurred with a simple box filter without ruining the overall Bokeh experience.",575],["Hardware Support",575],["This effect requires a graphics card that supports Shader Model 3 and depth textures.",575],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",575],["Depth of Field (Deprecated)",576],["Depth of Field (Deprecated) is a common postprocessing effect that simulates the properties of a camera lens. The name refers to the fact that the effect was added in Unity 3.4, but now is superseded by a more modern Depth Of Field effect which uses optimized techniques to simulate lens blurs and enables better transitions between focal areas. However, depending on the use case, performance might be a lot better in the old 3.4 version as it was developed for older hardware.",576],["In real life, a camera can only focus sharply on an object at a specific distance; objects nearer or farther from the camera will be somewhat out of focus. The blurring not only gives a visual cue about an object's distance but also introduces bokeh which is the term for pleasing visual artifacts that appear around bright areas of the image as they fall out of focus.",576],["An example of the new Depth of Field effect can be seen in the following images, displaying the results of a defocused foreground and a defocused background. Notice how the foreground blur overlaps with the rest while the background doesn't.",576],["You might also consider using the Tilt Shift effect for a more straightforward but less sophisticated depth-of-field effect.",576],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",576],["Properties",576],["Property: Function: ",576],["General Settings  ",576],["Resolution Determines the internal render target sizes. A lower resolution will result in faster rendering and lower memory requirements. ",576],["Quality The quality level. Choose between the faster OnlyBackground or the higher-quality BackgroundAndForeground which calculates the depth-of-field defocus for both areas separately. ",576],["Simple tweak Switches to a simpler focal model. ",576],["Visualize focus This shows the focal plane in the game view to assist learning and debugging. ",576],["Enable bokeh This will generate more realistic lens blurs where very bright parts are scaled and overlap. ",576],["",576],["Focal Settings  ",576],["Focal distance The distance to the focal plane from the camera position in world space. ",576],["Object Focus Determine the focal distance using a target object in the scene. ",576],["Smoothness The smoothness when transitioning from out-of-focus to in-focus areas. ",576],["Focal size The size of the in-focus area. ",576],["",576],["Blur  ",576],["Blurriness How many iterations are used when blurring the various buffers (each iteration requires processing time). ",576],["Blur spread The blur radius. This is resolution-independent, so you may need to readjust the value for each required resolution. ",576],["",576],["Bokeh Settings  ",576],["Destination Enabling foreground and background blur increases rendering time but gives more realistic results. ",576],["Intensity Blend intensity used as bokeh shapes are being accumulated. This is a critical value that always needs to be carefully adjusted. ",576],["Min luminance The luminance threshold below which pixels will not have bokeh artifacts applied. ",576],["Min contrast The contrast threshold below which pixels will not have bokeh artifacts applied. The significance of this is that you usually only need bokeh shapes in areas of high frequency (ie, cluttered or \"noisy\" areas of image) since they are otherwise nearly invisible. Performance will be improved if you use this parameter to avoid generating unnecessary bokeh artifacts. ",576],["Downsample The size of the internal render target used for accumulating bokeh shapes. ",576],["Size The maximum bokeh size. Will be modulated by the amount of defocus (Circle of Confusion). ",576],["Bokeh Texture The texture defining the bokeh shapes. ",576],["Note that since the bokeh effect is created by drawing triangles per pixel, it can drastically affect your framerate, especially if it's not adjusted optimally. Adjust the Size, Min luminance, Min contrast, Downsample and Resolution to improve performance. Also, since the screen is darkened before the bokeh shapes are applied, you should use an appropriate Blurriness level to remove possible artefacts.",576],["Hardware Support",576],["This effect requires a graphics card that supports Shader Model 3 and depth textures.",576],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",576],["Edge Detection",577],["Edge Detect image effect adds black edges to the image wherever color differences exceed some threshold.",577],["If more sophisticated geometry-based edge detection is required, the Standard Assets also provide such a normals and depth-based edge detection effect.",577],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",577],["Properties",577],["Property: Function: ",577],["Threshold Edges will be displayed wherever the color difference between neighboring pixels exceeds this value. Increasing the value will make edges less sensitive to texture or lighting changes. ",577],["Hardware Support",577],["This effect should run on all hardware that Unity supports.",577],["Edge Detect Effect Normals",578],["This version of the Edge Detect image effect creates outlines around edges by taking the scene geometry into account. Edges are not determined by colour differences but by the surface normals and distance from camera of neighbouring pixels (the surface normal is an \"arrow\" that indicates the direction the surface is facing at a given pixel position). Generally, where two adjacent pixels have significantly different normals and/or distances from the camera, there is an edge in the scene.",578],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",578],["This effect uses the ImageEffectOpaque attribute which enables image effects to be executed before the transparent render passes. By default, image effects are executed after both opaque and transparent passes have been fully rendered.",578],["Properties",578],["Property: Function: ",578],["Mode Chose the filter type (see below). ",578],["",578],["Depth Sensitivity The minimum difference between the distances of adjacent pixels that will indicate an edge. ",578],["Normals Sensitivity The minimum difference between the normals of adjacent pixels that will indicate an edge. ",578],["Sampling Distance Bigger sampling distances (default is 1.0) create thicker edges but also introduce haloing artifacts. ",578],["",578],["Edges exponent Exponent used for Sobel filter. Smaller values detect smaller depth differences as edges. ",578],["",578],["Background options  ",578],["Edges only Blend the background with a fixed color. ",578],["Background The color used when Edges only is &gt; 0. ",578],["Filter Types",578],["The new SobelDepthThin filter offers a way to make edge detection work with other depth based image effects such as Depth of Field, Fog or Motion Blur as edges don't cross an object's silhouette:",578],["Note that as only depth is used for edge detection, this filter discards edges inside silhouettes.",578],["SobelDepth works similarly but doesn't discard edges outside the silhouette of an object. Hence, the ede detection is more precise but doesn't work well with other depth-based effects.",578],["TriangleDepthNormals is likely the cheapest available filter even though it examines both depth and normals to decide if a pixel resides on an edge, i.e. it detects more than just object silhouettes. A high amount of normal map details however might break this filter.",578],["RobertsCrossDepthNormals shares its properties with the Triangle filter but looks at slightly more samples to determine edges. As a natural byproduct, the resulting edges tend to be thicker.",578],["Hardware Support",578],["This effect requires a graphics card that supports Depth Textures.",578],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",578],["Event System Manager",579],["This subsystem is responsible for controlling all the other elements that make up eventing. It coordinates which InputModule is currently active, which GameObject is currently considered 'selected', and a host of other high level EventSystem concepts.",579],["Each 'Update' the EventSystem receives the call and looks through it's InputModules and figures out which is the InputModule that should be used for this tick and then delegates the processing to the modules.",579],["Properties",579],["Property: Function: ",579],["Script  ",579],["Fisheye",580],["The Fisheye image effect creates distorts the image as if viewed through a fisheye lens (although any lens will distort the image to some extent).",580],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",580],["Properties",580],["Property: Function: ",580],["Strength X The horizontal distortion. ",580],["Strength Y The vertical distortion. ",580],["Hardware Support",580],["This effect should run on all hardware that Unity supports.",580],["Global Fog",581],["The Global Fog image effect creates camera-based exponential fog. All calculations are done in world space which makes it possible to have height-based fog modes that can be used for sophisticated effects (see example).",581],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",581],["Properties",581],["Property: Function: ",581],["Fog Mode The available types of fog, based on distance, height or both ",581],["Start Distance The distance at which the fog starts fading in, in world space units. ",581],["Global Density The degree to which the Fog Color accumulates with distance. ",581],["Height Scale The degree to which the fog density reduces with height (when height-based fog is enabled). ",581],["Height The world space Y coordinate where fog starts to fade in. ",581],["Global Fog Color The color of the fog. ",581],["Hardware Support",581],["This effect requires a graphics card that supports Depth Textures.",581],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",581],["Graphic Raycaster",582],["The Graphic Raycaster is used to raycast against a Canvas. The Raycaster looks at all Graphics on the canvas and determines if any of them have been hit.",582],["The Graphic Raycaster can be configured to ignore backfacing Graphics as well as be blocked by 2D or 3D objects that exist in front of it. A manual priority can also be applied if you want processing of this element to be forced to the front or back of the Raycasting.",582],["Properties",582],["Property: Function: ",582],["Script  ",582],["Grayscale",583],["The Grayscale image effect changes colors to grayscale. It can also use a Texture Ramp texture to remap luminance to arbitrary colors.",583],["Like with all image effects, make sure to have the Standard Assets Effects package installed.",583],["Remapping colors",583],["Grayscale can do a simple version of color correction, i.e. remap grayscale image into arbitrary colors. This can be used for effects like heat vision.",583],["The process of color remapping is very similar to ColorCorrection effect:",583],["Take a screenshot of a typical scene in your game.",583],["Open it in Photoshop and convert to grayscale.",583],["Color correct it using the Image-&gt;Adjustments-&gt;Curves.",583],["Save the .acv file file from the dialog using Save...",583],["Open Pro Standard Assets-&gt;Image Based-&gt;color correction ramp.png in Photoshop",583],["Now apply color correction to the ramp image: open Image-&gt;Adjustments-&gt;Curves again and load your saved .acv file",583],["Select your camera in Unity and select Component-&gt;Image Effects-&gt;Grayscale to add the effect. Select your modified color ramp.",583],["Hit Play to see the effect in action!",583],["Details",583],["Color remapping works by remapping the original image luminance through the color ramp image (sized 256x1):",583],["result color = pixel's color in the ramp image at (OriginalLuminance + RampOffset) index. For example, to invert the colors in the image you only need to flip the original color ramp horizontally (so that it goes from white to black instead of from black to white):",583],["A more complex version of color remapping that does arbitrary color correction can be achieved with ColorCorrection image effect.",583],["Hardware Support",583],["This effect should run on all hardware that Unity supports.",583],["Grid Layout Group",584],["The Grid Layout Group component places its child layout elements in a grid.",584],["Properties",584],["Property: Function: ",584],["Padding The padding inside the edges of the layout group. ",584],["Cell Size The size to use for each layout element in the group. ",584],["Spacing The spacing between the layout elements. ",584],["Start Corner The corner where the first element is located. ",584],["Start Axis Which primary axis to place elements along. Horizontal will fill an entire row before a new row is started. Vertical will fill an entire column before a new column is started. ",584],["Child Alignment The alignment to use for the layout elements if they don't fill out all the available space. ",584],["Constraint Constraint the grid to a fixed number of rows or columns to aid the auto layout system. ",584],["Description",584],["Unlike other layout groups, the Grid Layout Group ignores the minimum, preferred, and flexible size properties of its contained layout elements and instead assigns a fixed size to all of them which is defined with the Cell Size property of the Grid Layout Group itself.",584],["Grid Layout Group and auto layout",584],["There are special considerations to be aware of when using the Grid Layout Group as part of an auto layout setup, such as using it with a Content Size Fitter.",584],["The auto layout system calculates the horizontal and vertical sizes independently. This can be at odds with the Grid Layout Group, where the number of rows depends on the number of columns and vice versa.",584],["For any given number of cells, there are different combinations of row count and column count that can make the grid fit its content. In order to aid the layout system, you can specify that you intent the table to have a fixed number of columns or rows by using the Constraint property.",584],["Here are suggested ways of using the Layout System with a Content Size Fitter:",584],["Flexible width and fixed height",584],["To setup a grid with a flexible width and fixed height, where the grid expands horizontally as more elements are added, you can set these properties as follows:",584],["Grid Layout Group Constraint: Fixed Row Count",584],["Content Size Fitter Horizontal Fit: Preferred Size",584],["Content Size Fitter Vertical Fit: Preferred Size or Unconstrained",584],["If unconstrained Vertical Fit is used, it's up to you to give the grid a height that is big enough to fit the specified row count of cells.",584],["Fixed width and flexible height",584],["To setup a grid with a fixed width and flexible height, where the grid expands vertically as more elements are added, you can set these properties as follows:",584],["Grid Layout Group Constraint: Fixed Column Count",584],["Content Size Fitter Horizontal Fit: Preferred Size or Unconstrained",584],["Content Size Fitter Vertical Fit: Preferred Size",584],["If unconstrained Horizontal Fit is used, it's up to you to give the grid a width that is big enough to fit the specified column count of cells.",584],["Both flexible width and height",584],["If you want a grid with both a flexible width and height you can do that, but you will have no control over the specific number of rows and columns. The grid will attempt to make the row and column count approximately the same. You can set these properties as follows:",584],["Grid Layout Group Constraint: Flexible",584],["Content Size Fitter Horizontal Fit: Preferred Size",584],["Content Size Fitter Vertical Fit: Preferred Size",584],["Horizontal Layout Group",585],["Properties",585],["Property: Function: ",585],["Padding The padding inside the edges of the layout group. ",585],["Spacing The spacing between the layout elements. ",585],["Child Alignment The alignment to use for the child layout elements if they don't fill out all the available space. ",585],["Child Force Expand Whether to force the children to expand to fill additional available space. ",585],["Description",585],["The Horizontal Layout Group component places its child layout elements next to each other, side by side. Their widths are determined by their respective minimum, preferred, and flexible widths according to the following model:",585],["The minimum widths of all the child layout elements are added together and the spacing between them is added as well. The result is the mimimum width of the Horizontal Layout Group.",585],["The preferred widths of all the child layout elements are added together and the spacing between them is added as well. The result is the preferred width of the Horizontal Layout Group.",585],["If the Horizontal Layout Group is at its minimum width or smaller, all the child layout elements will also have their minimum width.",585],["The closer the Horizontal Layout group is to its preferred width, the closer each child layout element will also get to their preferred width.",585],["If the Horizontal Layout Group is wider than its preferred width, it will distribute the extra available space proportionally to the child layout elements according to their respective flexible widths.",585],["Image",586],["The Image control displays a non-interactive image to the user. This can be used for decoration, icons, etc, and the image can also be changed from a script to reflect changes in other controls. The control is similar to the Raw Image control but offers more options for animating the image and accurately filing the control rectangle. However, the Image control requires its texture to be a Sprite, while the Raw Image can accept any texture.",586],["Properties",586],["Property: Function: ",586],["Source Image The texture that represents the image to display (which must be imported as a Sprite). ",586],["Color The color to apply to the image. ",586],["Material The Material to use for rendering the image. ",586],["Image Type The method used to display the image. The options are Simple, Sliced, Tiled and Filled (see below). ",586],["Preserve Aspect (Simple and Filled Image Types only) Should the image's original proportions of height and width be kept rather than rescaled? ",586],["Fill Center (Sliced and Tiled Image Types only) Should the center slice of the image be filled as well as the borders? ",586],["Fill Method (Filled Image Type only) Specifies the way the image should \"grow\" to fill the space during an animation. The options are Horizontal, Vertical, Radial90, Radial180 and Radial360 (see below). ",586],["Fill Origin (Filled Image Type only) The point in the image from which the fill should proceed. The options are various combinations of Bottom, Top, Left and Right, depending on which Fill Method is selected (see below). ",586],["Fill Amount (Filled Image Type only) The fraction of the image (range 0.0 to 1.0) that is currently filled. ",586],["Clockwise (Filled Image Type only) Should the fill proceed in a clockwise direction? (Radial fills only.) ",586],["Set Native Size Button to set the dimensions of the image box to the original pixel size of the texture. ",586],["Details",586],["The image to display must be imported as a Sprite to work with the Image control. A number of different Image Types can be set, which affect the method used to fill the control rectangle with the texture:",586],["Simple: The image is displayed without repeating. By default, it will scale to fit in the control rectangle. If Preserve Aspect is enabled, the image's original proportions will be kept and empty space will be used to fill the rest of the control rectangle.",586],["Sliced: The image is treated as a \"nine-sliced\" sprite with borders (see the Sprite Editor page for further details). The center of the image is scaled to fit the control rectangle but the borders maintain their sizes regardless of the scaling. This allows you to display an image with an outline at various scales without worrying about the outline enlarging along with the image. If you only want the border with no center, you can disable the Fill Center property.",586],["Tiled: The image is kept at its original size but is repeated as many times as necessary to fill the control rect; incomplete tiles of the image are truncated at the edges. If the sprite graphic has borders then you can disable the Fill Center option as with the Sliced image type.",586],["Filled: The image is displayed as with the Simple method but can also be made to \"grow\" gradually from an empty image to a completely filled one (see below).",586],["Filled Images",586],["A useful animation effect for images is the so-called \"wipe\" effect that gradually reveals the image until it is visible in full. The Filled image type allows you to control the position of the wipe via the Fill Amount property. This varies from 0.0 (empty image) to 1.0 (wipe complete).",586],["The Horizontal and Vertical fill methods wipe across the image; the Fill Origin value specifies whether the wipe proceeds from the left/top or from the right/bottom.",586],["The Radial fill methods wipe the image in an angular fashion around the center, one of the corners or one of the edge centers. The Clockwise property can be switched on or off the change the direction of rotation.",586],["Input Field",587],["An Input Field is a way to make the text of a Text Control editable. Like the other interaction controls, it's not a visible UI element in itself and must be combined with one or more visual UI elements in order to be visible.",587],["Properties",587],["Property: Function: ",587],["Text The Text control to be made editable by this Input Field. ",587],["Starting Value The initial text placed in the field before editing begins. ",587],["Character Limit The maximum number of characters that the user can type into the field. ",587],["Active Text Color The color of the editable text (which may be different from the color specified in the Text control). ",587],["Selection Color The background color of the selected portion of text. ",587],["Multi Line Should the field let the user insert line breaks with the enter/return key? ",587],["Interactable Will this component will accept input? See Interactable. ",587],["Transition Properties that determine the way the control responds visually to user actions. See Transition Options. ",587],["Navigation Properties that determine the sequence of controls. See Navigation Options. ",587],["Events",587],["Property: Function: ",587],["On Value Change A UnityEvent that is invoked when the text content of the Input Field changes. The event can send the current text content as a string type dynamic argument. ",587],["End Edit A UnityEvent that is invoked when the user finishes editing the text content either by submitting or by clicking somewhere that removes the focus from the Input Field. The event can send the current text content as a string type dynamic argument. ",587],["Details",587],["The Input Field script can be added to any existing Text control object from the menu (Component &gt; UI &gt; Input Field). Having done this, you should also drag the object to the Input Field's Text property to enable editing.",587],["The Text property of the Text control itself will change as the user types and the value can be retrieved from a script after editing. Note that Rich Text is intentionally not supported for editable Text controls; the field will apply any Rich Text markup instantly when typed but the markup essentially \"disappears\" and there is no subsequent way to change or remove the styling.",587],["Layout Element",588],["Properties",588],["Property: Function: ",588],["Min Width The minimum width this layout element should have. ",588],["Min Height The minimum height this layout element should have. ",588],["Preferred Width The preferred width this layout element should have before additional available width is allocated. ",588],["Preferred Height The preferred height this layout element should have before additional available height is allocated. ",588],["Flexible Width The relative amount of additional available width this layout element should fill out relative to its siblings. ",588],["Flexible Height The relative amount of additional available height this layout element should fill out relative to its siblings. ",588],["Description",588],["If you want to override the minimum, preferred, or flexible size of a layout element, you can do that by adding a Layout Element component to the Game Object.",588],["The properties are used in the following manner when a layout controller allocates width or height to a layout element:",588],["First minimum sizes are allocated.",588],["If there is sufficient available space, preferred sizes are allocated.",588],["If there is additional available space, flexible size is allocated.",588],["The Layout Element component lets you override the values for one or more of the layout properties. Enable the checkbox for a property you want to override and then specify the value you want to override with.",588],["Minimum and preferred sizes are defined in regular units, while the flexible sizes are defined in relative units. If any layout element has flexible size greater than zero, it means that all the available space will be filled out. The relative flexible size values of the siblings determines how big a proportion of the available space each sibling fills out. Most commonly, flexible width and height is set to just 0 or 1.",588],["Specifying both a preferred size and a flexible size can make sense in certain cases. Flexible sizes are only allocated after all preferred sizes have been fully allocated. Thus, a layout element which has a flexible size specified but no preferred size will keep its minimum size until other layout elements have grown to their full preferred size, and only then begin to grow based on additional available space. By also specifying a flexible size, this can be avoided and the element can grow to its preferred size in tandem with the other layout elements that have preferred sizes, and then grow further once all flexible sizes have been allocated.",588],["Mask",589],["A Mask is not a visible UI control but rather a way to modify the appearance of a control's child elements. The mask restricts (ie, \"masks\") the child elements to the shape of the parent. So, if the child is larger than the parent then only the part of the child that fits within the parent will be visible.",589],["Properties",589],["Property: Function: ",589],["Show Graphic Should the graphic of the masking (parent) object be drawn with alpha over the child object? ",589],["Description",589],["A common use of a Mask is to show a small section of a large Image, using say a Panel object (menu: GameObject &gt; Create UI &gt; Panel) as a \"frame\". You can achieve this by firstly making the Image a child of the Panel object. You should position the Image so that the area that should be visible is directly behind the Panel area.",589],["Then, add a Mask component to the Panel. The areas of the child Image outside the panel will become invisible since they are masked by the shape of the Panel.",589],["If the image is then moved around then only the part revealed by the Panel will be visible. The movement could be controlled by Scrollbars to create a scrollable viewer for a map, say.",589],["Motion Blur",590],["The Motion Blur image effect enhances fast-moving scenes by leaving \"motion trails\" of previously rendered frames.",590],["For a modern implementation of Motion Blur, please refer to the new Camera Motion Blur Effect.",590],["Like with all image effects, make sure to have the Standard Assets Effects package installed.",590],["Property: Function: ",590],["Blur Amount How much of the previous frames to leave in the image. Higher values make longer motion trails. ",590],["Extra Blur If checked, this makes motion trails more blurry, by applying some extra blur to previous frames. ",590],["Tips:",590],["Motion Blur only works while in play mode because it's time based.",590],["Hardware support",590],["Motion Blur effect works all graphics cards that support rendering to a texture. E.g. GeForce2, Radeon 7000 and up. All image effects automatically disable themselves when they can not run on an end-users graphics card.",590],["Noise And Grain",591],["The Noise And Grain image effect simulates noise and film grain which is a typical effect happening in film or photography. This special noise implementation can even be used to enhance image contrast as it's using a special blend mode. It also enables typical noise scenarios, such as as low level light noise or softening glowing halo's or bloom borders.",591],["The DirectX 11 implementation is totally independent of any texture reads and thus a good fit for modern graphics hardware.",591],["The standard version uses a noise texture that should have an average luminance of 0.5 to prevent unwanted brightness changes of the resulting image. The used default texture is an example for this.",591],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",591],["Properties",591],["Property: Function: ",591],["DirectX11 Grain Enable high quality noise and grain (DX11 only). ",591],["Monochrome Use greyscale noise only. ",591],["Intensity Multiplier Global intensity adjustment. ",591],["General Add noise equally for all luminance ranges. ",591],["Black Boost Add extra low luminance noise. ",591],["White Boost Add extra high luminance noise. ",591],["Mid Grey Defines ranges for high-level and low-level noise ranges above. ",591],["Color Weights Additionally tint noise. ",591],["",591],["Texture Texture used for non-DX11 mode. ",591],["Filter Texture filtering. ",591],["Softness Defines noise or grain crispness. Higher values might yield better performance but require temporary a render target. ",591],["",591],["Advanced ",591],["Tiling Noise pattern tiling (can be tweaked for all color channels individually when in non-DX11 texture mode). ",591],["Hardware Support",591],["This effect should run on all hardware that Unity supports.",591],["Noise And Scratches",592],["The Noise image effect can simulate TV/VCR noise.",592],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",592],["Properties",592],["Property: Function: ",592],["Monochrome If enabled, Noise is similar to TV noise. If disabled, it more closely resembles VCR noise - it distorts color values in YUV space, so you also get hue changes, mostly towards magenta/green gues. ",592],["Grain Intensity Min/Max The intensity of noise takes random values between Min and Max. ",592],["Grain Size The size of a single grain texture pixel in screen pixels. Increasing this will make noise grains larger. ",592],["Scratch Intensity Min/Max The intensity of additional scratch/dust takes random values between Min and Max. ",592],["Scratch FPS Scratches jump to different positions on the screen at this framerate. ",592],["Scratch Jitter Scratches can jitter slightly while remaining close to their original positions. ",592],["Hardware Support",592],["This effect should run on all hardware that Unity supports.",592],["Outline",593],["The Outline component adds a simple outline effect to graphic components such as Text or Image. It must be on the same GameObject as the graphic component.",593],["Properties",593],["Property: Function: ",593],["Effect Color The color of the outline. ",593],["Effect Distance The distance of the outline effect horizontallt and vertically. ",593],["Use Graphic Alpha Multiplies the color of the graphic onto the color of the effect. ",593],["Physics 2D Raycaster",594],["The 2D Raycaster raycasts against 2D objects in the scene. This allows messages to be sent to 2D physics objects that implement event interfaces.",594],["Properties",594],["Property: Function: ",594],["Script  ",594],["Physics Raycaster",595],["The Raycaster raycasts against 3D objects in the scene. This allows messages to be sent to 3D physics objects that implement event interfaces.",595],["Properties",595],["Property: Function: ",595],["Script  ",595],["Position as UV1",596],["This adds a simple Position as UV1 effect to text and image graphics.",596],["Properties",596],["Property: Function: ",596],["Script  ",596],["Raw Image",597],["The Raw Image control displays a non-interactive image to the user. This can be used for decoration, icons, etc, and the image can also be changed from a script to reflect changes in other controls. The control is similar to the Image control but does not have the same set of options for animating the image and accurately filing the control rectangle. However, the Raw Image can display any texture whilst the Image can only show a Sprite texture.",597],["Properties",597],["Property: Function: ",597],["Texture The texture that represents the image to display. ",597],["Color The color to apply to the image. ",597],["Material The Material to use for rendering the image. ",597],["UV Rectangle The image's offset and size within the control rectangle, given in normalized coordinates (range 0.0 to 1.0). The edges of the image are stretched to fill the space around the UV rectangle. ",597],["Details",597],["Since the Raw Image does not require a sprite texture, you can use it to display any texture available to the Unity player. For example, you might show an image downloaded from a URL using the WWW class or a texture from an object in a game.",597],["The UV Rectangle properties allow you to display a small section of a larger image. The X and Y coordinates specify which part of the image is aligned with the bottom left corner of the control. For example, an X coordinate of 0.25 will cut off the leftmost quarter of the image. The W and H (ie, width and height) properties indicate the width and height of the section of image that will be scaled to fit the control rectangle. For example, a width and height of 0.5 will scale a quarter of the image area up to the control rectangle. By changing these properties, you can zoom and scale the image as desired (see also the Scrollbar control).",597],["Screen Overlay",598],["The Screen Overlay image effect introduces an easy way to blend different kinds of textures over the entire screen to create custom looks or effects.",598],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",598],["Properties",598],["Property: Function: ",598],["Blend Mode Blend mode used when applying texture. ",598],["Intensity Strength or opacity the overlay texture will be applied with. ",598],["Texture Overlay texture itself. ",598],["Hardware Support",598],["This effect should run on all hardware that Unity supports.",598],["Screen Space Ambient Obscurance",599],["This image effect approximates Ambient Occlusion in realtime, as an image post-processing effect. It darkens creases, holes and surfaces that are close to each other. In real life, such areas tend to block out or occlude ambient light, hence they appear darker. It is an improvement to the existing Screen Space Ambient Occlusion effect in terms of quality and -- depending on settings and hardware -- speed. Additionally, it doesn't rely on a generated normals buffer as it is recreating them on the fly based on depth.",599],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",599],["The following two screenshots compare the results of a simple scene employing this occlusion effect.",599],["The degree of darkening (in short: AO) is mostly controlled through the Intensity and Radius parameters. However, there is a post blur step performed to soften out the raw and noisy AO results. The following screenshot shows a result that performs a smaller blur.",599],["Properties",599],["Property: Function: ",599],["Intensity The degree of darkness produced by the effect. ",599],["Radius The maximum area taken into account when checking for possible occlusion. ",599],["Blur Iterations The blur passes to soften out the naturally noisy result. ",599],["Blur Filter Distance The sample distance used during the blur passes. ",599],["Downsampling The resolution at which calculations should be performed. Downsampling increases rendering speed at the cost of quality. ",599],["Hardware Support",599],["This effect requires a graphics card that supports Shader Model 3 and depth textures.",599],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",599],["Screen Space Ambient Occlusion",600],["The Screen Space Ambient Occlusion (SSAO) image effect approximates Ambient Occlusion in realtime, as an image post-processing effect. It darkens creases, holes and surfaces that are close to each other. In real life, such areas tend to block out or occlude ambient light, hence they appear darker.",600],["For a modern implementation of real-time ambient occlusion, have a look at the newer Screen Space Ambient Obscurance effect.",600],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",600],["Properties",600],["Property: Function: ",600],["Radius The maximum \"radius\" of a gap that will introduce ambient occlusion. ",600],["Sample Count Number of ambient occlusion samples. A higher count will give better quality but with a higher processing overhead. ",600],["Occlusion Intensity The degree of darkness added by ambient occlusion. ",600],["Blur Amount of blur to apply to the darkening. No blur (0) is much faster but the darkened areas will be noisy. ",600],["Downsampling The resolution at which calculations should be performed (for example, a downsampling value of 2 will work at half the screen resolution). Downsampling increases rendering speed at the cost of quality. ",600],["Occlusion Attenuation How fast occlusion should attenuate with distance. ",600],["Min Z Try increasing this value if there are artifacts. ",600],["Details",600],["SSAO approximates ambient occlusion using an image processing effect. Its cost depends purely on screen resolution and SSAO parameters and does not depend on scene complexity as true AO would. However, the approximation tends to introduce artifacts. For example, objects that are outside of the screen do not contribute to occlusion and the amount of occlusion is dependent on viewing angle and camera position.",600],["Note that SSAO is quite expensive in terms of processing time and generally should only be used on high-end graphics cards. Using SSAO will cause Unity to render the depth+normals texture of the camera which increases the number of draw calls and has a CPU processing overhead. However, the depth+normals texture then can be used for other effects as well (eg, Depth of Field). Once the texture is generated, the remainder of the SSAO effect is performed on the graphics card.",600],["Hardware Support",600],["This effect requires a graphics card that supports Shader Model 3 and depth textures.",600],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",600],["Scrollbar",601],["The Scrollbar control allows the user to scroll an image or other view that is too large to see completely. Note that the similar Slider control is used for selecting numeric values rather than scrolling. Familiar examples include the vertical Scrollbar at the side of a text editor and the vertical and horizontal pair of bars for viewing a section of a large image or map.",601],["Properties",601],["Property: Function: ",601],["Interactable Will this component will accept input? See Interactable. ",601],["Transition Properties that determine the way the control responds visually to user actions. See Transition Options. ",601],["Navigation Properties that determine the sequence of controls. See Navigation Options. ",601],["Fill Rect The graphic used for the background area of the control. ",601],["Handle Rect The graphic used for the sliding \"handle\" part of the control ",601],["Direction The direction in which the Scrollbar's value will increase when the handle is dragged. The options are Left To Right, Right To Left, Bottom To Top and Top To Bottom. ",601],["Value Initial position value of the Scrollbar, in the range 0.0 to 1.0. ",601],["Size Fractional size of the handle within the Scrollbar, in the range 0.0 to 1.0. ",601],["Number Of Steps The number of distinct scroll positions allowed by the Scrollbar. ",601],["Events",601],["Property: Function: ",601],["On Value Changed A UnityEvent that is invoked when the current value of the Scrollbar changes. The event can send the value as a float type dynamic argument. ",601],["Details",601],["The value of a Scrollbar is determined by the position of the handle along its length with the value being reported as a fraction between the extreme ends. For example, the default left-to-right bar has a value of 0.0 at the left end, 1.0 at the right end and 0.5 indicates the halfway point. A scrollbar can be oriented vertically by choosing Top To Bottom or Bottom To Top for the Direction property.",601],["A significant difference between the Scrollbar and the similar Slider control is that the Scrollbar's handle can change in size to represent the distance of scrolling available; when the view can scroll only a short way, the handle will fill up most of the bar and only allow a slight shift either direction.",601],["The Scrollbar has a single event called On Value Changed that responds as the user drags the handle. The current value is passed to the even function as a float parameter. Typical use cases for a scrollbar include:",601],["Scrolling a piece of text vertically.",601],["Scrolling a timeline horizontally.",601],["Used as a pair, scrolling a large image both horizontally and vertically to view a zoomed section. The size of the handle changes to indicate the degree of zooming and therefore the available distance for scrolling.",601],["Scroll Rect",602],["A Scroll Rect can be used when content that takes up a lot of space needs to be displayed in a small area. The Scroll Rect provides functionality to scroll over this content.",602],["Usually a Scroll Rect is combined with a Mask in order to create a scroll view, where only the scrollable content inside the Scroll Rect is visible. It can also additionally be combined with one or two Scrollbars that can be dragged to scroll horizontally or vertically.",602],["Properties",602],["Property: Function: ",602],["Content This is a reference to the RecTransform of the UI element to be scrolled, for example a large image. ",602],["Horizontal Enables horizontal scrolling ",602],["Vertical Enables vertical scrolling ",602],["Movement Type Unrestricted, Elastic or Clamped.  Use Elastic or Clamped to force the content to remain within the bounds of the Scroll Rect.  Elastic mode bounces the content when it reaches the edge of the Scroll Rect ",602],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Elasticity This is the amount of bounce used in the elasticity mode. ",602],["Inertia When Inertia is set the content will continue to move when the pointer is released after a drag. When Inertia is not set the content will only move when dragged. ",602],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Deceleration Rate When Inertia is set the deceleration rate determines how quickly the contents stop moving.  A rate of 0 will stop the movement immediately. A value of 1 means the movement will never slow down. ",602],["Scroll Sensitivity The sensitivity to scroll wheel and track pad scroll events. ",602],["Horizontal Scrollbar Optional reference to a horizontal scrollbar element. ",602],["Vertical Scrollbar Optional reference to a vertical scrollbar element. ",602],["Events",602],["Property: Function: ",602],["On Value Changed A UnityEvent that is invoked when the scroll position of the Scroll Rect changes. The event can send the current scroll position as a Vector2 type dynamic argument. ",602],["Details",602],["In the Hierarchy, things should be arranged like this: The Rect Transform with the Scroll Rect on it also has a Mask component on it. In the image below this object is called ScrollView.",602],["As a child to the ScrollView should be a single Rect Transform that functions as a parent to all the scrollable content. In the image below this object is called Content. All the scrollable UI elements should be children of this Content object. The Content object should also be dragged into the Content property of the Scroll Rect component.",602],["Optionally, the Scroll Rect can be linked to a horizontal and/or a vertical Scrollbar. These are typically placed in the hierarchy as siblings to the scroll view, and when present, should be dragged into the Horizontal Scrollbar and Vertical Scrollbar properties of the Scroll Rect, respectively. Note that the Direction property on such a horizontal Scrollbar should be set to Left To Right, and on the vertical Scrollbar to Bottom To Top.",602],["To scroll content, the input must be received from inside the bounds of the ScrollRect, not on the content itself.",602],["Take care when using Unrestricted scrolling movement as it is possible to lose control of the content in an irretrievable way.  When using Elastic or Constrained movement it is best to position the content so that it starts within the bounds of the ScrollRect, or undesirable behaviour may occur as the RectTransform tries to bring the content back within its bounds.",602],["Hints",602],["The pivot and anchors of the content RectTransform can be used to determine how the content is aligned inside the scroll view if the content grows or shrinks. If the content should stay aligned with the top, set the anchors to the top of the parent, and set the pivot to the top position.",602],["See the page Making UI elements fit the size of their content for information about how to make the content Rect Transform automatically resize to fit the content.",602],["Selectable Base Class",603],["The Selectable Class is the base class for all the interaction components and it handles the items that are in common.",603],["Property: Function: ",603],["Interactible This determines if this component will accept input.  When it is set to false interaction is disabled and the transition state will be set to the disabled state. ",603],["Transition Within a selectable component there are several Transition Options depending on what state the selectable is currently in. The different states are: normal, highlighted, pressed and disabled. ",603],["Navigation There are also a number of Navigation Options to control how keyboard navigation of the controls is implemented. ",603],["Navigation Options",604],["Property: Function: ",604],["Navigation The Navigation options refers to how the navigation of UI elements in play mode will be controlled. ",604],["None No keyboard navigation ",604],["Horizontal Navigates Horizontally ",604],["Vertical Navigates Vertically ",604],["Automatic Automatic Navigation ",604],["Explicit In this mode you can explicitly specify where the control navigates to for different arrow keys. ",604],["Visualize Selecting Visualize gives you a visual representation of the navigation you have set up in the scene window. See below. ",604],["Transition Options",605],["Within a selectable component there are several transition options depending on what state the selectable is currently in. The different states are: normal, highlighted, pressed and disabled.",605],["Transition Options: Function: ",605],["None This option is for the button to have no state effects at all. ",605],["Color Tint Changes the colour of the button depending on what state it is in. It is possible to select the colour for each individual state. It is also possible to set the Fade Duration between the different states. The higher the number is, the slower the fade between colors will be. ",605],["Sprite Swap Allows different sprites to display depending on what state the button is currently in, the sprites can be customised. ",605],["Animation Allows animations to occur depending on the state of the button, an animator component must exist in order to use animation transition. It’s important to make sure root motion is disabled. To create an animation controller click on generate animation (or create your own) and make sure that an animation controller has been added to the animator component of the button. ",605],["Each Transition option (except None) provides additional options for controlling the transitions. We'll go into details with those in each of the sections below.",605],["Color Tint",605],["Property: Function: ",605],["Target Graphic The graphic used for the interaction component. ",605],["Normal Color The normal color of the control ",605],["Highlighted Color The color of the control when it is highlighted ",605],["Pressed Color The color of the control when it is pressed ",605],["Disabled Color The color of the control when it is disabled ",605],["Color Multiplier This multiplies the tint color for each transition by its value. With this you can create colors greater than 1 to brighten the colors (or alpha channel) on graphic elements whose base color is less than white (or less then full alpha). ",605],["Fade Duration The time taken, in seconds,  to fade from one state to another ",605],["Sprite Swap",605],["Property: Function: ",605],["Target Graphic The normal sprite to use ",605],["Highlighted Sprite Sprite to use when the control is highlighted ",605],["Pressed Sprite Sprite to use when the control is pressed ",605],["Disabled Sprite Sprite to use when the control is disabled ",605],["Animation",605],["Property: Function: ",605],["Normal Trigger The normal animation trigger to use ",605],["Highlighted Trigger Trigger to use when the control is highlighted ",605],["Pressed Trigger Trigger to use when the control is pressed ",605],["Disabled Trigger Trigger to use when the control is disabled ",605],["Sepia Tone",606],["The Sepia Tone image effect tints an image to resemble an old photograph.",606],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",606],["Hardware Support",606],["This effect should run on all hardware that Unity supports.",606],["Script Serialization",607],["Serialization of “things” is at the very core of Unity. Many of our features build ontop of the serialization system:",607],["Inspector window. The inspector window doesn’t talk to the C# api to figure out what the values of the properties of whatever it is inspecting is.  It asks the object to serialize itself, and then displays the serialized data.",607],["Prefabs. Internally, a prefab is the serialized data stream of one (or more) game objects and components. A prefab instance is a list of modifications that should be made on the serialized data for this instance. The concept prefab actually only exists at editor time. The prefab modifications get baked into a normal serialization stream when Unity makes a build, and when that gets instantiated, the instantiated gameobjects have no idea they were a prefab when they lived in the editor.",607],["Instantiation. When you call Instantiate() on either a prefab, or a gameobject that lives in the scene, or on anything else for that matter (everything that derives from UnityEngine.Object can be serialized), we serialize the object,  then create a new object, and then we “deserialize” the data onto the new object.  (We then run the same serialization code again in a different variant, where we use it to report which other UnityEngine.Objects are being referenced. Then we check for all referenced UnityEngine.Objects, if they are part of the data being Instantiated().  If the reference is pointing to something “external” (like a texture) we keep that reference as it is,  if it is pointing to something \"internal\" (like a child gameobject), we patch the reference to the corresponding copy).",607],["Saving. If you open a .unity scene file with a text editor, and have set unity to “force text serialization”, we run the serializer with a yaml backend.",607],["Loading. Might not seem surprising, but backwards compatible loading is a system that is built on top of serialization as well.  In-editor yaml loading uses the serialization system, but also the runtime loading of scenes, assets and assetbundles uses the serialization system.",607],["Hot reloading of editor code. When you change an editor script, we serialize all editor windows (they derive from UnityEngine.Object!). then we destroy all the windows. we unload the old c# code, we load the new c# code, we recreate the windows, and then we deserialize the datastreams of the windows back onto the new windows.",607],["Resource.GarbageCollectSharedAssets(). This is our native garbage collector. It’s a different thing than the c# garbage collector. It is the thing that we run after you load a scene, to figure out which things from the previous scene are no longer referenced, so we can unload them. The native garbage collector runs the serializer in a variation where we use it to have objects report all references to external UnityEngine.Objects.  This is what makes textures that were used by scene1, get unloaded when you load scene2.",607],["The serialization system is written in C++. We use it for all our internal object types. (Textures, AnimationClip, Camera, etc).  Serialization happens at the UnityEngine.Object level. Each UnityEngine.Object is always serialized as a whole. They can contain references to other UnityEngine.Objects, and those references get serialized properly.",607],["Now you’d say that none of this very much concerns you, you’re just happy that it works and want to get on with actually creating some content.",607],["Where it will concern you is that we use this same serializer to serialize MonoBehaviour components, which are backed by your scripts. Because of the very high performance requirements that the serializer has, it does not in all cases behave exactly like what a c# developer would expect from a serializer.  In this part of the docs we’ll describe how the serializer works, and some best practices on how to make best use of it.",607],["What does a field of my script need to be in order to be serialized?",607],["be public, or have [SerializeField] attribute",607],["not be static",607],["not be const",607],["not be readonly",607],["the fieldtype needs to be of a type that we can serialize.",607],["Which fieldtypes can we serialize?",607],["custom non abstract classes with [Serializable] attribute.",607],["custom structs with [Serializable] attribute. (Added in Unity 4.5)",607],["references to objects that derive from UnityEngine.Object",607],["primitive data types (int, float, double, bool, string, etc.)",607],["array of a fieldtype we can serialize",607],["List&lt;T&gt; of a fieldtype we can serialize",607],["What are these situations where the serializer behaves differently from what I expect?",607],["Custom classes behave like structs",607],["[Serializable]",607],["class Animal",607],["public string name;",607],["class MyScript : MonoBehaviour",607],["public Animal[] animals;",607],["If you populate the animals array with three references to a single Animal object, in the serialization stream, you will find 3 objects.  when it’s deserialized, there are now three different objects.  If you need to serialize a complex object graph with references, you cannot rely on Unity’s serializer doing that all automagically for you, and have to do some work to get that object graph serialized yourself. See the example below on how to serialize things Unity doesn't serialize by itself.",607],["Note that this is only true for custom classes, as they are serialized “inline”, because their data becomes part of the complete serializationdata for the MonoBehaviour they are used in.  When you have fields that have a reference to something that is a UnityEngine.Object derived class, like a public Camera myCamera,  the data from that camera are not serialized inline, and an actual reference to the camera UnityEngine.Object is serialized.",607],["No support for null for custom classes",607],["Pop quiz. How many allocations are made when deserializing a MonoBehaviour that uses this script:",607],["class Test : MonoBehaviour",607],["public Trouble t;",607],["[Serializable]",607],["class Trouble",607],["public Trouble t1;",607],["public Trouble t2;",607],["public Trouble t3;",607],["It wouldn’t be strange to expect 1 allocation. That of the Test object. It also wouldn’t be strange to expect 2 allocations. One for the Test Object, one for a Trouble object. The correct answer is 729.  The serializer does not support null. If it serializes an object, and a field is null, we just instantiate a new object of that type, and serialize that. Obviously this could lead to infinite cycles, so we have a relatively magical depth limit of 7 levels. At that point we just stop serializing fields that have types of custom classes/structs and lists and arrays.",607],["Since so many of our subsystems build on top of the serialization system, this unexpectedly large serialization stream for the Test monobehaviour will cause all these subsystems to perform more slowly than necessary.  When we investigate performance problems in customer projects, almost always do we find this problem. We added a warning for this situation in Unity 4.5.",607],["No support for polymorphism",607],["if you have a public Animal[] animals and you put in an instance of a dog, a cat and a giraffe, after serialization, you will have three instances of Animal.",607],["One way to deal with this limitation is to realize that it only applies to “custom classes”, which get serialized inline. References to other UnityEngine.Objects get serialized as actual references, and for those polymorphism does actually work.  You’d make a ScriptableObject derived class or another MonoBehaviour derived class, and reference that. The downside of that is that you need to store that monobehaviour or scriptable object somewhere, and cannot serialize it inline nicely.",607],["The reason for these limitations is that one of the core foundations of the serialization system is that the layout of the datastream for an object is known ahead of time, and depends on the types of the fields of the class, instead of what happens to be stored inside the fields.",607],["I want to serialize something that Unity's serializer doesn't support. What do I do?",607],["In many cases the best approach is to use serialization callbacks. They allow you to be notified before the serializer reads data from your fields and after it is done writing to them. You can use this to have a different representation of your hard-to-serialize data at runtime than when you actually serialize.",607],["You’d use these to transform your data into something Unity understands right before unity wants to serialize it, and you use it to transform the serialized form back into the form you like to have your data in at runtime right after unity has written the data to your fields.",607],["Let’s say you want to have a tree datastructure. If you let Unity directly serialize the data structure, the “no support for null” limitation would cause your datastream to become very big, leading to performance degratations in many systems:",607],["using UnityEngine;",607],["using System.Collections.Generic;",607],["using System;",607],["public class VerySlowBehaviourDoNotDoThis : MonoBehaviour",607],["[Serializable]",607],["public class Node",607],["public string interestingValue = \"value\";",607],["//The field below is what makes the serialization data become huge because",607],["//it introduces a 'class cycle'.",607],["public List children = new List();",607],["//this gets serialized",607],["public Node root = new Node();",607],["void OnGUI()",607],["Display (root);",607],["void Display(Node node)",607],["GUILayout.Label (\"Value: \");",607],["node.interestingValue = GUILayout.TextField(node.interestingValue, GUILayout.Width(200));",607],["GUILayout.BeginHorizontal ();",607],["GUILayout.Space (20);",607],["GUILayout.BeginVertical ();",607],["foreach (var child in node.children)",607],["Display (child);",607],["if (GUILayout.Button (\"Add child\"))",607],["node.children.Add (new Node ());",607],["GUILayout.EndVertical ();",607],["GUILayout.EndHorizontal ();",607],["Instead, you tell Unity not to serialize the tree directly, and you make a seperate field to store the tree in a serialized format, suited for unity’s serializer:",607],["using UnityEngine;",607],["using System.Collections.Generic;",607],["using System;",607],["public class BehaviourWithTree : MonoBehaviour, ISerializationCallbackReceiver",607],["//node class that is used at runtime",607],["public class Node",607],["public string interestingValue = \"value\";",607],["public List children = new List();",607],["//node class that we will use for serialization",607],["[Serializable]",607],["public struct SerializableNode",607],["public string interestingValue;",607],["public int childCount;",607],["public int indexOfFirstChild;",607],["//the root of what we use at runtime. not serialized.",607],["Node root = new Node();",607],["//the field we give unity to serialize.",607],["public List serializedNodes;",607],["public void OnBeforeSerialize()",607],["//unity is about to read the serializedNodes field's contents. lets make sure",607],["//we write out the correct data into that field \"just in time\".",607],["serializedNodes.Clear();",607],["AddNodeToSerializedNodes(root);",607],["void AddNodeToSerializedNodes(Node n)",607],["var serializedNode = new SerializableNode () {",607],["interestingValue = n.interestingValue,",607],["childCount = n.children.Count,",607],["indexOfFirstChild = serializedNodes.Count+1",607],["};",607],["serializedNodes.Add (serializedNode);",607],["foreach (var child in n.children)",607],["AddNodeToSerializedNodes (child);",607],["public void OnAfterDeserialize()",607],["//Unity has just written new data into the serializedNodes field.",607],["//let's populate our actual runtime data with those new values.",607],["if (serializedNodes.Count > 0)",607],["root = ReadNodeFromSerializedNodes (0);",607],["else",607],["root = new Node ();",607],["Node ReadNodeFromSerializedNodes(int index)",607],["var serializedNode = serializedNodes [index];",607],["var children = new List ();",607],["for(int i=0; i!= serializedNode.childCount; i++)",607],["children.Add(ReadNodeFromSerializedNodes(serializedNode.indexOfFirstChild + i));",607],["return new Node() {",607],["interestingValue = serializedNode.interestingValue,",607],["children = children",607],["};",607],["void OnGUI()",607],["Display (root);",607],["void Display(Node node)",607],["GUILayout.Label (\"Value: \");",607],["node.interestingValue = GUILayout.TextField(node.interestingValue, GUILayout.Width(200));",607],["GUILayout.BeginHorizontal ();",607],["GUILayout.Space (20);",607],["GUILayout.BeginVertical ();",607],["foreach (var child in node.children)",607],["Display (child);",607],["if (GUILayout.Button (\"Add child\"))",607],["node.children.Add (new Node ());",607],["GUILayout.EndVertical ();",607],["GUILayout.EndHorizontal ();",607],["Beware that the serializer, including these callbacks coming from the serializer usually happen not on the main thread, so you are very limited in what you can do in terms of invoking Unity API. You can however to the necessary data transformations do get your data from a non-unity-serializer-friendly format to a unity-serializer-friendly-format.",607],["Shadow",608],["The Shadow component adds a simple outline effect to graphic components such as Text or Image. It must be on the same GameObject as the graphic component.",608],["Properties",608],["Property: Function: ",608],["Effect Color The color of the shadow. ",608],["Effect Distance The offset of the shadow expressed as a vector. ",608],["Use Graphic Alpha Multiplies the color of the graphic onto the color of the effect. ",608],["Slider",609],["The Slider control allows the user to select a numeric value from a predetermined range by dragging the mouse. Familiar examples include difficulty settings in games and brightness settings in image editors.",609],["Properties",609],["Property: Function: ",609],["Interactable Will this component will accept input? See Interactable. ",609],["Transition Properties that determine the way the control responds visually to user actions. See Transition Options. ",609],["Navigation Properties that determine the sequence of controls. See Navigation Options. ",609],["Fill Rect The graphic used for the fill area of the control. ",609],["Handle Rect The graphic used for the sliding \"handle\" part of the control ",609],["Direction The direction in which the slider's value will increase when the handle is dragged. The options are Left To Right, Right To Left, Bottom To Top and Top To Bottom. ",609],["Min Value The value of the slider when the handle is at its extreme lower end (determined by the Direction property). ",609],["Max Value The value of the slider when the handle is at its extreme upper end (determined by the Direction property). ",609],["Whole Numbers Should the slider be constrained to integer values? ",609],["Value Current numeric value of the slider.  If the value is set in the inspector it will be used as the initial value, but this will change at runtime when the value changes. ",609],["Events",609],["Property: Function: ",609],["On Value Changed A UnityEvent that is invoked when the current value of the Slider has changed. The event can send the current value as a float type dynamic argument. The value is passed as a float type regardless of whether the Whole Numbers property is enabled. ",609],["Details",609],["The value of a Slider is determined by the position of the handle along its length. The value increases from the Min Value up to the Max Value in proportion to the distance the handle is dragged. The default behaviour is for the slider to increase from left to right but it is also possible to reverse this behavior using the Direction property. You can also set the slider to increase vertically by selecting Bottom To Top or Top To Bottom for the Direction property.",609],["The slider has a single event called On Value Changed that responds as the user drags the handle. The current numeric value of the slider is passed to the function as a float parameter. Typical use cases include:",609],["Choosing a level of difficulty in a game, brightness of a light, etc.",609],["Setting a distance, size, time or angle.",609],["Standalone Input Module",610],["The module is designed to work as you would expect a controller / mouse input to work. Events for button presses, dragging, and similar are sent in response to input.",610],["The module sends pointer events to components as a mouse / input device is moved around, and uses the configured in the scene Raycasters to calculate what element is currently pointed at by a given pointer device.",610],["The module sends move events and submit / cancel events in response to Input tracked via the Input manager, this works for both keyboard and controller input. The tracked axis and keys can be configured in the module's inspector.",610],["Properties",610],["Property: Function: ",610],["Script  ",610],["Details",610],["The module uses:",610],["\nVertical / Horizontal axis for keyboard and controller navigation\n",610],["\nSubmit / Cancel button for sending submit and cancel events\n",610],["\nHas a timeout between events to only allow a maximum number of events a second.\n",610],["The flow for the module is as follows",610],["\nSend a Move event to the selected object if a valid axis from the input manager is entered\n",610],["\nSend a submit or cancel event to the selected object if a submit or cancel button is pressed\n",610],["\nProcess Mouse input\n",610],["\nIf it is a new press\n",610],["\nSend PointerEnter event (sent to every object up the hierarchy that can handle it)\n",610],["\nSend PointerPress event\n",610],["\nCache the drag handler (first element in the hierarchy that can handle it)\n",610],["\nSend BeginDrag event to the drag handler\n",610],["\nSet the 'Pressed' object as Selected in the event system\n",610],["\nIf this is a continuing press\n",610],["\nProcess movment\n",610],["\nSend DragEvent to the cached drag handler\n",610],["\nHandle PointerEnter and PointerExit events if touch moves between objects\n",610],["\nIf this is a release\n",610],["\nSend PointerUp event to the object that received the PointerPress\n",610],["\nIf the current hover object is the same as the PointerPress object send a PointerClick event\n",610],["\nSend a Drop event if there was a drag handler cached\n",610],["\nSend a EndDrag event to teh cached drag handler\n",610],["\nProcess scroll wheel events\n",610],["Sun Shafts",611],["The Sun Shafts image effect simulates the radial light scattering (also known as the \"god ray\" effect) that arises when a very bright light source is partly obscured.",611],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",611],["Properties",611],["Property: Function: ",611],["Rely on Z Buffer This option can be used when no depth textures are available or they are too expensive to calculate (eg, in forward rendering with a large number of objects). Note that if this option is disabled then Sun Shafts must be the very first image effect applied to the camera. ",611],["Resolution The resolution at which the shafts are generated. Lower resolutions are faster to calculate and create softer results. ",611],["Blend Mode Choose between the softer Screen mode and the simpler Add mode. ",611],["",611],["Sun Transform The transform of the light source that casts the Sun Shafts. Only the position is significant. ",611],["Center on ... Within the editor, position the Sun Transform object at the center of the game view camera. ",611],["",611],["Shafts color The tint color of the shafts. ",611],["Distance falloff The degree to which the shafts' brightness diminishes with distance from the Sun Transform object. ",611],["",611],["Blur size The radius over which pixel colours are combined during blurring. ",611],["Blur iterations The number of repetitions of the blur operation. More iterations will give smoother blurring but each has a cost in processing time. ",611],["",611],["Intensity The brightness of the generated shafts. ",611],["Use alpha mask Defines how much the alpha channel of the color buffer should be used when generating Sun Shafts. This is useful when your skybox has a proper alpha channel that defines a mask (eg, for clouds blocking the sun shafts). ",611],["Blend Modes: Add and Screen",611],["Blend modes determine the way that two images will be combined when overlaid. Each pixel from the base image is combined mathematically with the pixel in the corresponding position in the overlay image. Two blend modes are available for Unity image effects, Add and Screen.",611],["Add Mode",611],["When the images are blended in Add mode, the values of the color channels (red, green and blue) are simply added together and clamped to the maximum value of 1. The overall effect is that areas of each image that aren't especially bright can easily blend to maximum brightness in the result. The final image tends to lose color and detail and so Add mode is useful when a dazzling \"white out\" effect is required.",611],["Screen Mode",611],["Screen mode is so named because it simulates the effect of projecting the two source images onto a white screen simultaneously. Each color channel is combined separately but identically to the others. Firstly, the channel values of the two source pixels are inverted (ie, subtracted from 1). Then, the two inverted values are multiplied together and the result is inverted. The result is brighter than either of the two source pixels but it will be at maximum brightness only if one of the source colors was also. The overall effect is that more color variation and detail from the source images is preserved, leading to a gentler effect than Add mode.",611],["Hardware Support",611],["This effect requires a graphics card that supports Depth Textures.",611],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",611],["Terrain Engine",612],["Unity's Terrain system allows you to add vast landscapes to your games. At runtime, terrain rendering is highly optimized for rendering efficiency while in the editor, a selection of tools is available to make terrains easy and quick to create. This section explains the various options available for terrains and how to make use of them.",612],["Text",613],["The Text control displays a non-interactive piece of text to the user. This can be used to provide captions or labels for other GUI controls or to display instructions or other text.",613],["Properties",613],["Property: Function: ",613],["Text The text displayed by the control. ",613],["Character ",613],["Font  The Font used to display the text. ",613],["Font Style The style applied to the text. The options are Normal, Bold, Italic and Bold And Italic. ",613],["Font Size The size of the displayed text. ",613],["Line Spacing The vertical separation between lines of text. ",613],["Rich Text Should markup elements in the text be interpreted as Rich Text styling? ",613],["Paragraph ",613],["Alignment The horizontal and vertical alignment of the text. ",613],["Horizontal Overflow The method used to handle the situation where the text is too wide to fit in the rectangle. The options are Wrap and Overflow. ",613],["Vertical Overflow The method used to handle the situation where wrapped text is too tall to fit in the rectangle. The options are Truncate and Overflow. ",613],["Best Fit Should Unity ignore the size properties and simply try to fit the text to the control's rectangle? ",613],["",613],["Color The color used to render the text. ",613],["Material The Material used to render the text. ",613],["Details",613],["Some controls (such as Buttons and Toggles have textual descriptions built-in. For controls that have no implicit text (such as Sliders, you can indicate the purpose using a label created with a Text control. Text is also useful for lists of instructions, story text, conversations and legal disclaimers.",613],["The Text control offers the usual parameters for font size, style, etc, and text alignment. When the Rich Text option is enabled, markup elements within the text will be treated as styling information, so you can have just a single word or short section in boldface or in a different color, say (see the page about Rich Text for details of the markup scheme).",613],["Hints",613],["See the Effects page for how to apply a simple shadow or outline effect to the text.",613],["Tilt Shift",614],["Tilt Shift is a local blur effect that blurs the image based on distance to the center. It comes in two modes: TiltShift and Iris. The following screenshots demonstrate the difference.",614],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",614],["Properties",614],["Property: Function: ",614],["Mode Choose type of defocus (see above). ",614],["Quality Amount of samples taken and thus responsible for performance. Choose Preview to just render blur areas. ",614],["Max Blur Size Maximum blur distance allowed. ",614],["Blur Area Size and strength of the blur (verify effect with Preview Quality). ",614],["Hardware Support",614],["This effect requires a graphics card that supports Shader Model 3.",614],["See the Graphics Hardware Capabilities and Emulation page for further details and a list of compliant hardware.",614],["Toggle",615],["The Toggle control is a checkbox that allows the user to switch an option on or off.",615],["Properties",615],["Property: Function: ",615],["Interactable Will this component will accept input? See Interactable. ",615],["Transition Properties that determine the way the control responds visually to user actions. See Transition Options. ",615],["Navigation Properties that determine the sequence of controls. See Navigation Options. ",615],["Is On Is the toggle switched on from the beginning? ",615],["Toggle Transition The way the toggle reacts graphically when its value is changed. The options are None (ie, the checkmark simply appears or disappears) and Fade (ie, the checkmark fades in or out). ",615],["Graphic The image used for the checkmark. ",615],["Group The Toggle Group (if any) that this Toggle belongs to. ",615],["Events",615],["Property: Function: ",615],["On Value Changed A UnityEvent that is invoked when the Toggle is clicked. The event can send the current state as a bool type dynamic argument. ",615],["Details",615],["The Toggle control allows the user to switch an option on or off. You can also combine several toggles into a Toggle Group in cases where only one of a set of options should be on at once.",615],["The Toggle has a single event called On Value Changed that responds when the user changes the current value. The new value is passed to the event function as a boolean parameter. Typical use cases for Toggles include:",615],["Switching an option on or off (eg, playing music during a game).",615],["Letting the user confirm they have read a legal disclaimer.",615],["Choosing one of a set of options (eg, a day of the week) when used in a Toggle Group.",615],["Toggle Group",616],["A Toggle Group is not a visible UI control but rather a way to modify the behavior of a set of Toggles. Toggles that belong to the same group are constrained so that only one of them can switched on at a time - pressing one of them to switch it on automatically switches the others off.",616],["Properties",616],["Property: Function: ",616],["Allow Switch Off Is it allowed that no toggle is switched on? If this setting is enabled, pressing the toggle that is currently switched on will switch it off, so that no toggle is switched on. If this setting is disabled, pressing the toggle that is currently switched on will not change its state. ",616],["Description",616],["The Toggle Group is setup by dragging the Toggle Group object to the Group property of each of the Toggles in the group.",616],["Toggle Groups are useful anywhere the user must make a choice from a mutually exclusive set of options. Common examples include selecting player character types, speed settings (slow, medium, fast, etc), preset colors and days of the week. You can have more than one Toggle Group object in the scene at a time, so you can create several separate groups if necessary.",616],["Unlike other UI elements, an object with a Toggle Group component does not need to be a child of a Canvas object, although the Toggles themselves still do.",616],["Note that the Toggle Group will not enforce its constraint right away if multiple toggles in the group are switched on when the scene is loaded or when the group is instantiated. Only when a new toggle is swicthed on are the others switched off. This means it's up to you to ensure that only one toggle is switched on from the beginning.",616],["Tonemapping",617],["Tonemapping is usually understood as the process of mapping color values from HDR (high dynamic range) to LDR (low dynamic range). In Unity, this means for most platforms that arbitrary 16-bit floating point color values will be mapped to traditional 8-bit values in the [0,1] range.",617],["Note that Tonemapping will only properly work if the used camera is HDR enabled. It is also recommended to give light sources higher than normal intensity values to make use of the bigger range. Just as in real life there is huger differences in Luminance and our eyes or any capturing medium is only able to sample a certain range of that.",617],["Tonemapping works well in conjunction with the HDR-enabled Bloom image effect. Make sure that Bloom should be applied before Tonemapping as otherwise all high ranges will be lost. Generally, any effect that can benefit from higher luminances should be scheduled before the Tonemapper (one more example being the Depth of Field image effect).",617],["There are different ways on how to map intensities to LDR (as selected by Mode). This effect provides several techniques, two of them being adaptive (AdaptiveReinhard and AdaptiveReinhardAutoWhite), which means that color changes are carried out delayed as the change in intensities is fully registered. Cameras and the human eye have this effect. This enables interesting dynamic effects such as a simulation of the natural adaption happening when entering or leaving a dark tunnel into bright sunlight.",617],["The following two screenshots show Photographic Tonemapping with different exposure values. Note how banding is avoided by using HDR cameras.",617],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",617],["Properties",617],["Property: Function: ",617],["Mode Choose the desired tonemapping algorithm. ",617],["",617],["Exposure Simulated exposure, defining the actual range of luminances. ",617],["Average grey Average grey value of the scene that defines the intensity of the result. ",617],["White Smallest value that will be mapped white. ",617],["Adaption speed Adjustment speed for all adaptive tonemappers. ",617],["Texture size Size of the internal texture for all adaptive tonemappers. Bigger values capture more details when calculating the new intensity and lower performance. ",617],["Hardware Support",617],["This effect should run on all hardware that Unity supports.",617],["Touch Input Module",618],["This module is designed to work with touch devices. It sends pointer events for touching and dragging in response to user input. The module supports multitouch.",618],["The module uses the scene configured Raycasters to calculate what element is currently being touched over. A raycast is issued for each current touch.",618],["Properties",618],["Property: Function: ",618],["Script  ",618],["Details",618],["The flow for the module is as follows:",618],["\nFor each touch event\n",618],["\nIf it is a new press\n",618],["\nSend PointerEnter event (sent to every object up the hierarchy that can handle it)\n",618],["\nSend PointerPress event\n",618],["\nCache the drag handler (first element in the hierarchy that can handle it)\n",618],["\nSend BeginDrag event to the drag handler\n",618],["\nSet the 'Pressed' object as Selected in the event system\n",618],["\nIf this is a continuing press\n",618],["\nProcess movment\n",618],["\nSend DragEvent to the cached drag handler\n",618],["\nHandle PointerEnter and PointerExit events if touch moves between objects\n",618],["\nIf this is a release\n",618],["\nSend PointerUp event to the object that received the PointerPress\n",618],["\nIf the current hover object is the same as the PointerPress object send a PointerClick event\n",618],["\nSend a Drop event if there was a drag handler cached\n",618],["\nSend a EndDrag event to teh cached drag handler\n",618],["Twirl",619],["The Twirl image effect distorts the rendered image within a circular region. The pixels at the centre of the circle are rotated by a specified angle; the rotation for other pixels in the circle decreases with distance from the centre, diminishing to zero at the circle's edge.",619],["Twirl is similar to another image effect called Vortex, although vortex distorts the image around a central circle rather than a single point.",619],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",619],["Properties",619],["Property: Function: ",619],["Radius The radius of the ellipse where image distortion occurs, given in normalized screen coordinates (ie, a radius of 0.5 is half the size of the screen). ",619],["Angle The angle of rotation at the centre point. ",619],["Center The point at the centre of the circle where distortion occurs. ",619],["Hardware Support",619],["This effect should run on all hardware that Unity supports.",619],["Vertical Layout Group",620],["Properties",620],["Property: Function: ",620],["Padding The padding inside the edges of the layout group. ",620],["Spacing The spacing between the layout elements. ",620],["Child Alignment The alignment to use for the child layout elements if they don't fill out all the available space. ",620],["Child Force Expand Whether to force the children to expand to fill additional available space. ",620],["Description",620],["The Vertical Layout Group component places its child layout elements on top of each other. Their heights are determined by their respective minimum, preferred, and flexible heights according to the following model:",620],["The minimum heights of all the child layout elements are added together and the spacing between them is added as well. The result is the mimimum height of the Vertical Layout Group.",620],["The preferred heights of all the child layout elements are added together and the spacing between them is added as well. The result is the preferred height of the Vertical Layout Group.",620],["If the Vertical Layout Group is at its minimum height or smaller, all the child layout elements will also have their minimum height.",620],["The closer the Vertical Layout group is to its preferred height, the closer each child layout element will also get to their preferred height.",620],["If the Vertical Layout Group is taller than its preferred height, it will distribute the extra available space proportionally to the child layout elements according to their respective flexible heights.",620],["Vignetting and Chromatic Aberration",621],["The Vignetting image effect introduces darkening, blur and chromatic aberration (spectral color separation) at the edges and corners of the image. This is usually used to simulate a view through a camera lens but can also be used to create abstract effects.",621],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",621],["Properties",621],["Property: Function: ",621],["Vignetting The degree of darkening applied to the screen edges and corners. Choose 0 to disable this feature and save on performance. ",621],["Blurred Corners The amount of blur that is added to the screen corners. Choose 0 to disable this feature and save on performance. ",621],["Blur Distance The blur filter sample distance used when blurring corners. ",621],["",621],["Aberration Mode Advanced tries to model more aberration effects (the constant axial aberration existant on the entire image plane) while Simple only models tangential aberration (limited to corners). ",621],["Strength Overall aberration intensity (not to confuse with color offset distance), defaults to 1.0. ",621],["Tangential Aberration The degree of tangential chromatic aberration: Uniform on the entire image plane. ",621],["Axial Aberration The degree of axial chromatic aberration: Scales with smaller distance to the image plane's corners. ",621],["Contrast Dependency The bigger this value, the more contrast is needed for the aberration to trigger. Higher values are more realistic (in this case, an HDR input is recommended). ",621],["Advanced Mode",621],["Advanced mode is more expensive but offers a more realistic implementation of Chromatic Aberration.",621],["Hardware Support",621],["This effect should run on all hardware that Unity supports.",621],["Vortex",622],["The Vortex image effect distorts the rendered image within a circular region. Pixels in the image are displaced around a central circular area by a specified angle; the amount of displacement reduces with distance from the centre, diminishing to zero at the circle's edge. Vortex is similar to another image effect called Twirl, although Twirl distorts the image around a point rather than a circle.",622],["As with the other image effects, you must have the Standard Assets Effects package installed before it becomes available.",622],["Properties",622],["Property: Function: ",622],["Radius The radius of the circle where distortion occurs, given in normalized screen coordinates (ie, a radius of 0.5 is half the size of the screen). ",622],["Angle The angle by which pixels are displaced around the central circle. ",622],["Center The center of the circular region of distortion. ",622],["Hardware Support",622],["This effect should run on all hardware that Unity supports.",622],["Special Folders and Script Compilation Order",623],["For the most part, you can choose any names you like for the folders in your project but Unity reserves some names to indicate that the contents have a special purpose. Some of these folders have an effect on the order of script compilation. Essentially, there are four separate phases of script compilation and the phase where a script will be compiled is determined by its parent folder.",623],["This is significant in cases where a script must refer to classes defined in other scripts. The basic rule is that anything that will be compiled in a phase after the current one cannot be referenced. Anything that is compiled in the current phase or an earlier phase is fully available.",623],["Another situation occurs when a script written in one language must refer to a class defined in another language (say, a UnityScript file that declares variables of a class defined in a C# script). The rule here is that the class being referenced must have been compiled in a earlier phase.",623],["The phases of compilation are as follows:",623],["Phase 1: Runtime scripts in folders called Standard Assets, Pro Standard Assets and Plugins.",623],["Phase 2: Editor scripts in folders called Standard Assets/Editor, Pro Standard Assets/Editor and Plugins/Editor.",623],["Phase 3: All other scripts that are not inside a folder called Editor.",623],["Phase 4: All remaining scripts (ie, the ones that are inside a folder called Editor).",623],["Additionally, any script inside a folder called WebPlayerTemplates at the top level of the Assets folder will not be compiled at all. This behaviour is slightly different from the other special folder names which also work within sub-folders (eg, Scripts/Editor works as an editor script folder but Scripts/WebPlayerTemplates does not prevent compilation).",623],["A common example is where a UnityScript file needs to reference a class defined in a C# file. You can achieve this by placing the C# file inside a Plugins folder and the UnityScript file in a non-special folder. If you don't do this, you will get an error saying the C# class cannot be found.",623],["Note. Standard Assets work only in the Assets root folder.",623],["Scripting Overview",624],["Although Unity uses an implementation of the standard Mono runtime for scripting, it still has its own practices and techniques for accessing the engine from scripts. This section explains how objects created in the Unity editor are controlled from scripts and details the relationship between Unity's gameplay features and the Mono runtime.",624],["Important Classes",625],["These are some of the most important classes you'll be using when scripting with Unity. They cover some of the core areas of Unity's scriptable systems and provide a good starting point for looking up which functions and events are available.",625],["Class: Description: ",625],["MonoBehaviour The base class for all new Unity scripts, the MonoBehaviour reference provides you with a list of all the functions and events that are available to standard scripts attached to Game Objects. Start here if you're looking for any kind of interaction or control over individual objects in your game. ",625],["Transform Every Game Object has a position, rotation and scale in space (whether 3D or 2D), and this is represented by the Transform component. As well as providing this information, the transform component has many helpful functions which can be used to move, scale, rotate, reparent and manipulate objects, as well as converting coordinates from one space to another. ",625],["Rigidbody / Rigidbody2D For most gameplay elements, the physics engine provides the easiest set of tools for moving objects around, detecting triggers and collisions, and applying forces. The Rigidbody class (or its 2D equivalent, Rigidbody2D) provides all the properties and functions you'll need to play with velocity, mass, drag, force, torque, collision and more. ",625],["Tutorial: Scripting Root Motion for \"in-place\" humanoid animations",626],["Sometimes your animation comes as \"in-place\", which means if you put it in a scene, it will not move the character that it's on. In other words, the animation does not contain \"root motion\". For this, we can modify root motion from script. To put everything together follow the steps below (note there are many variations of achieving the same result, this is just one recipe).",626],["Open the inspector for the FBX file that contains the in-place animation, and go to the Animation tab",626],["Make sure the Muscle Definition is set to the Avatar you intend to control (let's say this avatar is called Dude, and he has already been added to the Hierarchy View).",626],["Select the animation clip from the available clips",626],["Make sure Loop Pose is properly aligned (the light next to it is green), and that the checkbox for Loop Pose is clicked",626],["Preview the animation in the animation viewer to make sure the beginning and the end of the animation align smoothly, and that the character is moving \"in-place\"",626],["On the animation clip create a curve that will control the speed of the character (you can add a curve from the Animation Import inspector Curves-&gt; +)",626],["Name that curve something meaningful, like \"Runspeed\"",626],["Create a new Animator Controller, (let's call it RootMotionController)",626],["Drop the desired animation clip into it, this should create a state with the name of the animation (say Run)",626],["Add a parameter to the Controller with the same name as the curve (in this case, \"Runspeed\")",626],["Select the character Dude in the Hierarchy, whose inspector should already have an Animator component.",626],["Drag RootMotionController onto the Controller property of the Animator",626],["If you press play now, you should see the \"Dude\" running in place",626],["Finally, to control the motion, we will need to create a script (RootMotionScript.cs), that implements the OnAnimatorMove callback:-",626],["using UnityEngine;",626],["using System.Collections;",626],["[RequireComponent(typeof(Animator))]",626],["public class RootMotionScript : MonoBehaviour {",626],["void OnAnimatorMove()",626],["Animator animator = GetComponent();",626],["if (animator)",626],["Vector3 newPosition = transform.position;",626],["newPosition.z += animator.GetFloat(\"Runspeed\") * Time.deltaTime;",626],["transform.position = newPosition;",626],["You should attach RootMotionScript.cs to the \"Dude\" object. When you do this, the Animator component will detect that the script has an OnAnimatorMove function and show the Apply Root Motion property as Handled by Script",626],["Scripting",627],["Scripting is an essential ingredient in all games. Even the simplest game will need scripts to respond to input from the player and arrange for events in the gameplay to happen when they should. Beyond that, scripts can be used to create graphical effects, control the physical behaviour of objects or even implement a custom AI system for characters in the game.",627],["Scripting is a skill that takes some time and effort to learn; the intention of this section is not to teach you how to write script code from scratch but rather to explain the main concepts that apply to scripting in Unity.",627],["Scripting Tools",628],["This section covers the tools within the Unity editor or supplied with Unity that assist you in developing your scripts.",628],["Including scripts in AssetBundles",629],["AssetBundles can contain scripts as TextAssets but as such they will not be actual executable code. If you want to include code in your AssetBundles that can be executed in your application it needs to be pre-compiled into an assembly and loaded using the Mono Reflection class (Note: Reflection is not available on iOS). You can create your assemblies in any normal C# IDE (e.g. Monodevelop, Visual Studio) or any text editor using the mono/.net compilers.",629],["string url = \"http://www.mywebsite.com/mygame/assetbundles/assetbundle1.unity3d\";",629],["IEnumerator Start () {",629],["// Start a download of the given URL",629],["WWW www = WWW.LoadFromCacheOrDownload (url, 1);",629],["// Wait for download to complete",629],["yield return www;",629],["// Load and retrieve the AssetBundle",629],["AssetBundle bundle = www.assetBundle;",629],["// Load the TextAsset object",629],["TextAsset txt = bundle.Load(\"myBinaryAsText\", typeof(TextAsset)) as TextAsset;",629],["// Load the assembly and get a type (class) from it",629],["var assembly = System.Reflection.Assembly.Load(txt.bytes);",629],["var type = assembly.GetType(\"MyClassDerivedFromMonoBehaviour\");",629],["// Instantiate a GameObject and add a component with the loaded class",629],["GameObject go = new GameObject();",629],["go.AddComponent(type);",629],["Searching",630],["When working with large complex scenes it can be useful to search for specific objects. By using the Search feature in Unity, you can filter out only the object or group of objects that you want to see. You can search assets by their name, by Component type, and in some cases by asset Labels (see below). You can specify the search mode by choosing from the Search drop-down menu.",630],["Scene Search",630],["Both the Scene and Hierarchy views have a search box that allows you to filter objects by their names. Since the two views are basically just different representations of the same set of objects, any search query you type will be duplicated in both search boxes and applied to both views at the same time. Note that both views change slightly when a search is active: the Scene View will show filtered-out objects in grey and the Hierarchy view will lose the hierarchic information and simply show objects listed by name:",630],["The small cross button at the right of the search box removes the search query and restores the view to normal. The menu at the left hand side of the box lets you choose whether to filter objects by name, by type or both at once.",630],["Project Search and Labels",630],["There is also a search box in the Project view but here, the search applies to assets rather than their instances in the scene. One additional option available for assets is to search by Labels as well as by name and type. A label is simply a short piece of text that you can use to group particular assets (eg, you could add an \"Vehicles\" label to make all vehicle assets easy to isolate). You can add a label to an asset from the Asset Labels box at the bottom of its inspector. If you click on the button within that box, you will see a menu of existing labels with a text box at the top.",630],["The text box lets you filter the existing labels or enter the text of a new label; you can press the spacebar or enter key while typing to add the new label text to the asset. Labels currently applied to an asset are shown with a check mark to their left in the menu. You can simply \"select\" an applied label from the menu to remove it. Note that any asset can have as many labels as desired and thereby belong to several different label groups at once.",630],["Security Sandbox of the Webplayer",631],["In Unity 3.0, the webplayer implements a security model very similar to the one used by the Adobe Flash player™. This security restrictions apply only to the webplayer, and to the editor when the active build target is WebPlayer. The security model has several parts:",631],["Restrictions on accessing data on a domain other than the one hosting your .unity3d file.",631],["Some limitation on the usage of the Sockets.",631],["Disallowing invocation of any method we deemed off limits. (things like File.Delete, etc).",631],["Disallowing the usage of System.Reflection.* to call private/internal methods in classes you did not write yourself.",631],["Currently only the first two parts of the security model are emulated in the Editor.",631],["The built-in muti-player networking functionality of Unity (UnityEngine.Network, UnityEngine.NetworkView classes etc) is not affected.",631],["This document describes how to make sure your content keeps working with version 3.0 of the Unity webplayer.",631],["See the Unity API reference for information about the WWW class.",631],["See the .NET API reference for information about the .NET Socket class.",631],["The WWW class and sockets use the same policy schema but besides that they are completely separate systems. The WWW policy only defines permissions on the web service where the policy is hosted but socket policies apply to all TCP/UDP socket connections.",631],["The Unity editor comes with an \"Emulate Web Security\" feature, that imposes the webplayer's security model.",631],["This makes it easy to detect problems from the comfort of the editor. You can find this setting in",631],["Edit-&gt;Project Settings-&gt;Editor. See also the Editor settings.",631],["Implications for use of the WWW class",631],["The Unity webplayer expects a http served policy file named crossdomain.xml to be available on the domain you want to access with the WWW class,",631],["(although this is not needed if it is the same domain that is hosting the unity3d file).",631],["For example, imagine a tetris game, hosted at the following url:",631],["http://gamecompany.com/games/tetris.unity3d",631],["needs to access a highscore list from the following url:",631],["http://highscoreprovider.net/gethighscore.php",631],["In this case, you would need to place a crossdomain.xml file at the root of the highscoreprovider.net domain like this: http://highscoreprovider.net/crossdomain.xml",631],["The contents of the crossdomain.xml file are in the format used by the Flash player. It is very likely that you'll",631],["find the crossdomain.xml file already in place. The policy in the file look like this:",631],["",631],["",631],["",631],["",631],["When this file is placed at http://highscoreprovider.net/crossdomain.xml, the owner of that domain declares that",631],["the contents of the webserver may be accessed by any webplayer coming from any domain.",631],["The Unity webplayer does not support the &lt;allow-http-request-headers-from domain&gt; and &lt;site-control permitted-cross-domain-policies&gt; tags. Note that crossdomain.xml should be an ASCII file.",631],["Debugging",631],["Setting an environment variable ENABLE_CROSSDOMAIN_LOGGING to 1 will cause console messages to be generated as the Unity runtime fetches and decodes the crossdomain.xml file. On a Mac you can set global environment variables in /etc/launchd.conf. On a PC use Control Panel-&gt;System And Security-&gt;System-&gt;Advanced system settings-&gt;Environment Variables...",631],["Here is an example output with this environment variable set, when the webplayer attempts to fetch an image from a remote server:",631],["Determining crossdomain.xml location for request: http://www.remoteserver.com/image.jpg",631],["About to parse url: http://www.remoteserver.com/image.jpg",631],["Determining crossdomain.xml location for request: http://www.remoteserver.com/image.jpg",631],["About to parse url: http://www.remoteserver.com/crossdomain.xml",631],["About to parse url: http://www.remoteserver.com/image.jpg",631],["Determining crossdomain.xml location for request: http://www.remoteserver.com/image.jpg",631],["Download had OK statuscode",631],["Received the following crossdomain.xml",631],["",631],["",631],["",631],["",631],["received policy",631],["Parsing: cross-domain-policy",631],["cross-domain-policy",631],["Parsing: allow-access-from",631],["allow-access-from",631],["domain: *",631],["done parsing policy",631],["crossdomain.xml was succesfully parsed",631],["About to parse url: http://www.remoteserver.com/image.jpg",631],["Checking if http://www.remoteserver.com/image.jpg is a valid domain",631],["Checking request-host: www.remoteserver.com against valid domain: *",631],["All requirements met, the request is approved",631],["When running in the Editor these messages are written to the Editor.log. Attempting to read a crossdomain.xml file incorrectly stored as utf16 with a BOM will result in a failure to parse the xml:",631],["BuildFlashPolicy caught an exception while parsing http://www.remoteserver.com/crossdomain.xml: Expected element",631],["This is because the BOM is not expected. Using an unsupported utf16 file with no BOM will result in:",631],["BuildFlashPolicy caught an exception while parsing http://www.remoteserver.com/crossdomain.xml: Policy can't be constructed from empty stream.",631],["This is because the first byte in the file is zero, which causes the parser to think it's reached the end of the file. Crossdomain.xml must be an ASCII file.",631],["Implications for use of Sockets:",631],["A Unity webplayer needs a socket served policy in order to connect to a particular host. This policy is by default hosted by the target host on port 843 but it can be hosted on other ports as well. The functional difference with a non-default port is that it must be manually fetched with Security.PrefetchSocketPolicy() API call and if it is hosted on a port higher than 1024 the policy can only give access to other ports higher than 1024.",631],["When using the default port it works like this: A Unity webplayer tries to make a TCP socket connection to a host, it first checks that the host server will accept the connection.",631],["It does this by opening a TCP socket on port 843, issues a request, and expects to receive a socket policy over the new connection. The Unity webplayer then checks that the host's policy permits the connection to go ahead and it will proceed without error if so. This process happens transparently to the user's code, which does not need to be modified to use this security model. An example of a socket policy look like this:",631],["",631],["",631],["",631],["\"",631],["This policy effectively says \"Content from any domain is free to make socket connections at ports 1200-1220\". The Unity webplayer will respect this, and reject",631],["any attempted socket connection using a port outside that range (a SecurityException will be thrown).",631],["When using UDP connections the policy can also be auto fetched when they need to be enforced in a similar manner as with TCP. The difference is that auto fetching with TCP happens when you Connect to something (ensures you are allowed to connect to a server), but with UDP, since it's connectionless, it also happens when you call any API point which sends or receives data (ensures you are allowed to send/receive traffic to/from a server).",631],["The format used for the socket policy is the same as that used by the Flash player except some tags are not supported. The Unity webplayer only supports \"*\" as a valid value for the domain setting and the \"to-ports\" setting is mandatory.",631],["",631],["",631],["",631],["",631],["",631],["The socket policy applies to both TCP and UDP connection types so both UDP and TCP traffic can be controlled by one policy server.",631],["For your convenience, we provide a small program which simply listens at port 843; when on a connection it receives a request string, it will reply with a valid socket policy.",631],["The server code can be found inside the Unity install folder, in Data/Tools/SocketPolicyServer on Windows or /Unity.app/Contents/Tools/SocketPolicyServer on OS X. Note that the pre-built executable can be run on Mac since it is a Mono executable. Just type \"mono sockpol.exe\" to run it. Note that this example code shows the correct behaviour of a socket policy server. Specifically the server expects to receive a zero-terminated string that contains &lt;policy-file-request/&gt;. It only sends to the client the socket policy xml document when this string (and exactly this string) has been received. Further, it is required that the xml header and xml body are sent with a single socket write. Breaking the header and body into separate socket write operations can cause security exceptions due to Unity receiving an incomplete policy. If you experience any problems with your own server please consider using the example that we provide. This should help you diagnose whether you have server or network issues.",631],["Third party networking libraries, commonly used for multiplayer game networking, should be able to work with these requirements as long as they do not depend on peer 2 peer functionality (see below) but utilize dedicated servers. These sometimes even come out of the box with support for hosting policies.",631],["Note: Whilst the crossdomain.xml and socket policy files are both xml documents and are broadly similar, the way that these documents are served are very different. Crossdomain.xml (which applied to http requests) is fetched using http on port 80, where-as the socket policy is fetched from port 843 using a trivial server that implements the &lt;policy-file-request/&gt;. You cannot use an http server to issue the socket policy file, nor set up a server that simply sends the socket policy file in response to a socket connection on port 843. Note also that each server you connect to requires its own socket policy server.",631],["Debugging",631],["You can use telnet to connect to the socket policy server. An example session is shown below:",631],["host$ telnet localhost 843",631],["Trying 127.0.0.1...",631],["Connected to localhost.",631],["Escape character is '^]'.",631],["",631],["",631],["",631],["",631],["Connection closed by foreign host.",631],["host$",631],["In this example session, telnet is used to connect to the localhost on port 843. Telnet responds with the first three lines, and then sits waiting for the user to enter something. The user has entered the policy request string &lt;policy-file-request/&gt;, which the socket policy server receives and responds with the socket policy. The server then disconnects causing telnet to report that the connection has been closed.",631],["Listening sockets",631],["You cannot create listening sockets in the webplayer, it cannot act as a server. Therefore webplayers cannot communicate with each other directly (peer 2 peer). When using TCP sockets you can only connect to remote endpoints provided it is allowed through the socket policy system. For UDP it works the same but the concept is a little bit different as it is a connectionless protocol, you don't have to connect/listen to send/receive packets. It works by enforcing that you can only receive packets from a server if he has responded first with a valid policy with the allow-access-from domain tag.",631],["This is all just so annoying, why does all this stuff exist?",631],["The socket and WWW security features exist to protect people who install the Unity Web Player. Without these restrictions, an attack such as the following would be possible:",631],["Bob works at the white house.",631],["Frank is evil. He writes a unity webgame that pretends to be a game, but in the background does a WWW request to http://internal.whitehouse.gov/LocationOfNuclearBombs.pdf. internal.whitehouse.gov is a server that is not reachable from the internet, but is reachable from Bob's workstation because he works at the white house.",631],["Frank sends those pdf bytes to http://frank.com/secretDataUploader.php",631],["Frank places this game on http://www.frank.com/coolgame.unity3d",631],["Frank somehow convinces Bob to play the game.",631],["Bob plays the game.",631],["Game silently downloads the secret document, and sends it to Frank.",631],["With the WWW and socket security features, this attack will fail, because before downloading the pdf, unity checks http://internal.whitehouse.gov/crossdomain.xml, with the intent to ask that server: \"is the data you have on your server available for public usage?\". Placing a crossdomain.xml on a webserver can be seen as the response to that question. In the case of this example, the system operator of internal.whitehouse.gov will not place a crossdomain.xml on its server, which will lead Unity to not download the pdf.",631],["Unfortunately, in order to protect the people who install the Unity Web Player, people who develop in Unity need to take these security measures into account when developing content. The same restrictions are present in all major plugin technologies. (Flash, Silverlight, Shockwave)",631],["Exceptions",631],["In order to find the right balance between protecting Web Player users and making life of content developers easy, we have implemented an exception to the security mechanism described above:",631],["You are allowed to download images from servers that do not have a crossdomain.xml file. However, the only thing you are allowed to do with these images is use them as textures in your scene. You are not allowed to use GetPixel() on them. You are also not allowed to read back from the screen. Both attempts will result in a SecurityException being thrown:",631],["SecurityException: No read access to the texture data:",631],["at (wrapper managed-to-native) UnityEngine.Texture2D:GetPixel (int,int)",631],["The reasoning is here is that it's okay to download the image, as long as the content developer gets no access to it. So you can display it to the user, but you cannot send the bytes of the image back to some other server. If you need access to the pixel data then place an crossdomain.xml file on the server where the images are fetched from.",631],["Setting up the Asset Server",632],["Server-side Installation",632],["The Asset Server is designed to be a simple one-time installation on a server machine. Interacting with the Asset Server is done through Unity. Unity can be installed on the server machine, but it does not need to be. It must be administrated from a Client machine, where Projects and Users can be added. Each additional client must be configured to synchronize with a Project, using a specific User credential.",632],["You can install the Asset Server on Mac OS X 10.4 or later, Windows XP, Windows Vista and various Linux distributions including CentOS, Ubuntu and Suse Linux.",632],["Download Unity Asset Server from here.",632],["The installer will install all necessary files, setup a database and launch the Asset Server. At the end of the process you will be asked to create an Admin password. This password is required to administer the Asset Server from within Unity. You must connect to the Asset Server as the administrator before you can create any projects or users.",632],["Administrating the Asset Server",632],["The Asset Server allows any number of Users to connect to a Project. The Administrator must first connect to the Server with Unity as a client and create new Projects and Users.",632],["To access the Administrator controls, launch Unity and select Window-&gt;Asset Server, then click the Administration button.",632],["In the Server Address field, enter either the ip address or host name of the computer running the Asset Server that you want to administer. If the Asset Server is installed on your local machine, you can use \"localhost\" as the Server Address. Next, provide the administrator name and password. The administrator name is always \"admin\", and the password is what was entered when installing the Asset Server. Finally, hit the Connect button. You're now connected to the Asset Server, and can perform the initial setup.",632],["Managing Projects and Users",632],["Each Server can contain several Projects, and each User can have permission to one or more Projects. Projects are generally orthogonal, and unique in asset collections. It is best to think \"one Project equals one game\".",632],["New Projects can be created by clicking on the Create button in the Server Administration tab.",632],["New users can be created by first selecting an existing project and then clicking on the New User button.",632],["After a user has been created in one Project, the user can be added to another project by enabling the checkbox on the left of the user name in the users list.",632],["You can enable or disable user access for individual projects.",632],["To completely remove a project or user from the server use the Delete Project and Delete User buttons.",632],["Firewall settings",632],["The Unity Asset Server uses TCP port 10733. You might need to enable connections to this port in your firewall and/or router.",632],["Advanced",632],["The Asset Server is built using a modified version of PostgreSQL. Accessing the SQL database directly requires a bit of technical knowledge about SQL and Unix/Linux command lines. User discretion is advised.",632],["Backing up",632],["We have provided a command line tool to back up an asset server. The tool should be run from an administrator account on the machine running the asset server. Replace BACKUP_LOCATION with the path name you want the backup tool to place the backups:",632],["Mac OS X",632],["sudo /Library/UnityAssetServer/bin/as_backup BACKUP_LOCATION",632],["Linux",632],["sudo /opt/unity_asset_server/bin/as_backup BACKUP_LOCATION",632],["Windows",632],["\"%ProgramFiles%\\Unity\\AssetServer\\bin\\as_backup.cmd\" BACKUP_LOCATION",632],["as_backup will create a directory at BACKUP_LOCATION containing one or more files per project plus files containing information about each project and a backup of all users and their passwords.",632],["Restoring a Backup",632],["To restore an Asset Server backup produced with as_backup, first perform a clean installation of the Asset Server without any projects created. (The restore procedure will refuse to overwrite already existing projects with the same name.)",632],["Then run the provided backup restoration tool, as_restore pointing it to the location of a backup created with as_backup:",632],["Mac OS X",632],["sudo /Library/UnityAssetServer/bin/as_restore BACKUP_LOCATION",632],["Linux",632],["sudo /opt/unity_asset_server/bin/as_restore BACKUP_LOCATION",632],["Windows",632],["\"%ProgramFiles%\\Unity\\AssetServer\\bin\\as_restore.cmd\" BACKUP_LOCATION",632],["Note that you can also use as_backup and as_restore to move an asset server installation from one machine to another by performing the backup on the source machine, moving the backup directory to the destination machine (or mount it through a network file share,) and then running as_restore to insert the data into the newly installed Asset Server instance. This will even work when the source and destination Asset Servers have different versions or are running on different operating systems.",632],["Locating the database name of an Asset Server Project",632],["To view the tables in a Project database, first you need to figure out the name of the actual database. Run this command line command on the machine hosting the Asset Server:",632],["Mac OS X",632],["/Library/UnityAssetServer/bin/psql -U admin -h localhost -d postgres -c 'select * from all_databases__view'",632],["Linux",632],["/opt/unity_asset_server/bin/psql -U admin -h localhost -d postgres -c 'select * from all_databases__view'",632],["Windows",632],["\"%ProgramFiles%\\Unity\\AssetServer\\bin\\psql.exe\" -U admin -h localhost -d postgres -c \"select * from all_databases__view\"",632],["This and other commands will prompt you for a password. Every time this happens, enter the admin password for the database, which was set during the installation. The result will be a table that follows this basic layout:",632],["databasename   projectname   description   version",632],["--------------------+--------------------+--------------------------+---------",632],["sandbox   Sandbox   Created with Unity 2.0.0   1.0",632],["game   Game   Created with Unity 2.0.0   1.0",632],["my_game_project   My Game Project   Created with Unity 2.0.0   1.0",632],["(3 rows)",632],["Now you need to identify the \"databasename\" of the Project you want to back up. When creating a database, the default \"databasename\" is same as the \"projectname\" as shown inside Unity, but in lowercase and spaces replaced with underscores.",632],["Note that if your server hosts multiple PostgreSQL databases on different ports you nay need to explicitly provide the port used to connect to the Asset Server database. In this case add -p 10733 to the commands given (assuming you have used the default port of 10733 for your instance.) For example:",632],["Linux",632],["/opt/unity_asset_server/bin/psql -U admin -h localhost -d postgres -c 'select * from all_databases__view' -p 10733",632],["Additional SQL Functions",632],["These and all other commands use tools from the PostgreSQL distribution. You can read more about these tools here: http://www.postgresql.org/docs/8.3/interactive/reference-client.html",632],["Bumped Diffuse",633],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",633],["Performance",633],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",633],["Bumped Specular",634],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",634],["Performance",634],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",634],["Decal",635],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",635],["Decal Properties",635],["This shader is a variation of the VertexLit shader. All lights that shine on it will be rendered as vertex lights by this shader. In addition to the main texture, this shader makes use of a second texture for additional details. The second \"Decal\" texture uses an alpha channel to determine visible areas of the main texture. The decal texture should be supplemental to the main texture. For example, if you have a brick wall, you can tile the brick texture as the main texture, and use the decal texture with alpha channel to draw graffiti at different places on the wall.",635],["Performance",635],["This shader is approximately equivalent to the VertexLit shader. It is marginally more expensive due to the second decal texture, but will not have a noticeable impact.",635],["Diffuse",636],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",636],["Performance",636],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",636],["Diffuse Detail",637],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",637],["Diffuse Detail Properties",637],["This shader is a version of the regular Diffuse shader with additional data. It allows you to define a second \"Detail\" texture that will gradually appear as the camera gets closer to it. It can be used on terrain, for example. You can use a base low-resolution texture and stretch it over the entire terrain. When the camera gets close the low-resolution texture will get blurry, and we don't want that. To avoid this effect, create a generic Detail texture that will be tiled over the terrain. This way, when the camera gets close, the additional details appear and the blurry effect is avoided.",637],["The Detail texture is put \"on top\" of the base texture. Darker colors in the detail texture will darken the main texture and lighter colors will brighten it. Detail texture are usually gray-ish. For more information on effectively creating Detail textures, please view this page.",637],["Performance",637],["This shader is pixel-lit, and approximately equivalent to the Diffuse shader. It is marginally more expensive due to additional texture.",637],["Normal Shader Family",638],["Note. Unity 5 introduced the Standard Shader which replaces these shaders.",638],["These shaders are the basic shaders in Unity. They are not specialized in any way and should be suitable for most opaque objects. They are not suitable if you want your object to be transparent, emitting light etc.",638],["Assets needed:",638],["One Base texture, no alpha channel required",638],["Assets needed:",638],["One Base texture, no alpha channel required",638],["Assets needed:",638],["One Base texture with alpha channel for Specular Map",638],["Assets needed:",638],["One Base texture, no alpha channel required",638],["One Normal map",638],["Assets needed:",638],["One Base texture with alpha channel for Specular Map",638],["One Normal map",638],["Assets needed:",638],["One Base texture, no alpha channel required",638],["One Normal map",638],["One Height texture with Parallax Depth in the alpha channel",638],["Assets needed:",638],["One Base texture with alpha channel for Specular Map",638],["One Normal map",638],["One Height texture with Parallax Depth in the alpha channel",638],["Assets needed:",638],["One Base texture, no alpha channel required",638],["One Decal texture with alpha channel for Decal transparency",638],["Assets needed:",638],["One Base texture, no alpha channel required",638],["One Detail grayscale texture; with 50% gray being neutral color",638],["Parallax Diffuse",639],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",639],["Performance",639],["Generally, this shader is on the more expensive rendering side. For more details, please view the Shader Peformance page.",639],["Parallax Bumped Specular",640],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",640],["Performance",640],["Generally, this shader is on the more expensive rendering side. For more details, please view the Shader Peformance page.",640],["Specular",641],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",641],["Performance",641],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",641],["Vertex-Lit",642],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",642],["Performance",642],["Generally, this shader is very cheap to render. For more details, please view the Shader Peformance page.",642],["Usage and Performance of Built-in Shaders",643],["Shaders in Unity are used through Materials, which essentially combine shader code with parameters like textures. An in-depth explanation of the Shader/Material relationship can be read here.",643],["Material properties will appear in the Inspector when either the Material itself or a GameObject that uses the Material is selected. The Material Inspector looks like this:",643],["Each Material will look a little different in the Inspector, depending on the specific shader it is using. The shader iself determines what kind of properties will be available to adjust in the Inspector. Material inspector is described in detail in Material reference page. Remember that a shader is implemented through a Material. So while the shader defines the properties that will be shown in the Inspector, each Material actually contains the adjusted data from sliders, colors, and textures. The most important thing to remember about this is that a single shader can be used in multiple Materials, but a single Material cannot use multiple shaders.",643],["Performance Considerations",643],["There are a number of factors that can affect the overall performance of your game. This page will talk specifically about the performance considerations for Built-in Shaders. Performance of a shader mostly depends on two things: shader itself and which Rendering Path is used by the project or specific camera. For performance tips when writing your own shaders, see ShaderLab Shader Performance page.",643],["Rendering Paths and shader performance",643],["From the rendering paths Unity supports, Deferred Shading and Vertex Lit paths have the most predictable performance. In Deferred shading, each object is generally drawn once, no matter what lights are affecting it. Similarly, in Vertex Lit each object is generally drawn once. So then, the performance differences in shaders mostly depend on how many textures they use and what calculations they do.",643],["Shader Performance in Forward rendering path",643],["In Forward rendering path, performance of a shader depends on both the shader itself and the lights in the scene. The following section explains the details. There are two basic categories of shaders from a performance perspective, Vertex-Lit, and Pixel-Lit.",643],["Vertex-Lit shaders in Forward rendering path are always cheaper than Pixel-Lit shaders. These shaders work by calculating lighting based on the mesh vertices, using all lights at once. Because of this, no matter how many lights are shining on the object, it will only have to be drawn once.",643],["Pixel-Lit shaders calculate final lighting at each pixel that is drawn. Because of this, the object has to be drawn once to get the ambient &amp; main directional light, and once for each additional light that is shining on it. Thus the formula is N rendering passes, where N is the final number of pixel lights shining on the object. This increases the load on the CPU to process and send off commands to the graphics card, and on the graphics card to process the vertices and draw the pixels. The size of the Pixel-lit object on the screen will also affect the speed at which it is drawn. The larger the object, the slower it will be drawn.",643],["So pixel lit shaders come at performance cost, but that cost allows for some spectacular effects: shadows, normal-mapping, good looking specular highlights and light cookies, just to name a few.",643],["Remember that lights can be forced into a pixel (\"important\") or vertex/SH (\"not important\") mode. Any vertex lights shining on a Pixel-Lit shader will be calculated based on the object's vertices or whole object, and will not add to the rendering cost or visual effects that are associated with pixel lights.",643],["General shader performance",643],["Out of Built-in Shaders, they come roughly in this order of increasing complexity:",643],["Unlit. This is just a texture, not affected by any lighting.",643],["VertexLit.",643],["Diffuse.",643],["Normal mapped. This is a bit more expensive than Diffuse: it adds one more texture (normal map), and a couple of shader instructions.",643],["Specular. This adds specular highlight calculation.",643],["Normal Mapped Specular. Again, this is a bit more expensive than Specular.",643],["Parallax Normal mapped. This adds parallax normal-mapping calculation.",643],["Parallax Normal Mapped Specular. This adds both parallax normal-mapping and specular highlight calculation.",643],["Additionally, Unity has several simplified shaders targeted at mobile platforms, under \"Mobile\" category. These shaders work on other platforms as well, so if you can live with their simplifications (e.g. approximate specular, no per-material color support etc.), try using them!",643],["Reflective Bumped Diffuse",644],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",644],["Performance",644],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",644],["Reflective Bumped Specular",645],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",645],["One consideration for this shader is that the Base texture's alpha channel will double as both the Reflection Map and the Specular Map.",645],["Performance",645],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",645],["Reflective Normal Mapped Unlit",646],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",646],["Normal mapped Properties",646],["This shader does not use normal-mapping in the traditional way. The normal map does not affect any lights shining on the object, because the shader does not use lights at all. The normal map will only distort the reflection map.",646],["Special Properties",646],["This shader is special because it does not respond to lights at all, so you don't have to worry about performance reduction from use of multiple lights. It simply displays the reflection cube map on the model. The reflection is distorted by the normal map, so you get the benefit of detailed reflection. Because it does not respond to lights, it is quite cheap. It is somewhat of a specialized use case, but in those cases it does exactly what you want as cheaply as possible.",646],["Performance",646],["Generally, this shader is quite cheap to render. For more details, please view the Shader Peformance page.",646],["Reflective Normal mapped Vertex-lit",647],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",647],["Special Properties",647],["This shader is a good alternative to Reflective Normal mapped. If you do not need the object itself to be affected by pixel lights, but do want the reflection to be affected by a normal map, this shader is for you. This shader is vertex-lit, so it is rendered more quickly than its Reflective Normal mapped counterpart.",647],["Performance",647],["Generally, this shader is not expensive to render. For more details, please view the Shader Peformance page.",647],["Reflective Diffuse",648],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",648],["Performance",648],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",648],["Reflective Shader Family",649],["Note. Unity 5 introduced the Standard Shader which replaces these shaders.",649],["Reflective shaders will allow you to use a Cubemap which will be reflected on your mesh. You can also define areas of more or less reflectivity on your object through the alpha channel of the Base texture. High reflectivity is a great effect for glosses, oils, chrome, etc. Low reflectivity can add effect for metals, liquid surfaces, or video monitors.",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas",649],["One Reflection Cubemap for Reflection Map",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas",649],["One Reflection Cubemap for Reflection Map",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas &amp; Specular Map combined",649],["One Reflection Cubemap for Reflection Map",649],["Note:",649],["One consideration for this shader is that the Base texture's alpha channel will double as both the reflective areas and the Specular Map.",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas",649],["One Reflection Cubemap for Reflection Map",649],["One Normal map, no alpha channel required",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas &amp; Specular Map combined",649],["One Reflection Cubemap for Reflection Map",649],["One Normal map normal map, no alpha channel required",649],["Note:",649],["One consideration for this shader is that the Base texture's alpha channel will double as both the reflective areas and the Specular Map.",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas",649],["One Reflection Cubemap for Reflection Map",649],["One Normal map normal map, with alpha channel for Parallax Depth",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas &amp; Specular Map",649],["One Reflection Cubemap for Reflection Map",649],["One Normal map normal map, with alpha channel for Parallax Depth",649],["Note:",649],["One consideration for this shader is that the Base texture's alpha channel will double as both the reflective areas and the Specular Map.",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas",649],["One Reflection Cubemap for Reflection Map",649],["One Normal map normal map, no alpha channel required",649],["Assets needed:",649],["One Base texture with alpha channel for defining reflective areas",649],["One Reflection Cubemap for Reflection Map",649],["One Normal map normal map, no alpha channel required",649],["Reflective Parallax Diffuse",650],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",650],["Performance",650],["Generally, this shader is on the more expensive rendering side. For more details, please view the Shader Peformance page.",650],["Reflective Parallax Specular",651],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",651],["One consideration for this shader is that the Base texture's alpha channel will double as both the Reflection Map and the Specular Map.",651],["Performance",651],["Generally, this shader is on the more expensive rendering side. For more details, please view the Shader Peformance page.",651],["Reflective Specular",652],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",652],["One consideration for this shader is that the Base texture's alpha channel will double as both the Reflection Map and the Specular Map.",652],["Performance",652],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",652],["Reflective Vertex-Lit",653],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",653],["Performance",653],["Generally, this shader is not too expensive to render. For more details, please view the Shader Peformance page.",653],["Self-Illuminated Normal mapped Diffuse",654],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",654],["Performance",654],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",654],["Self-Illuminated Normal mapped Specular",655],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",655],["Performance",655],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",655],["Self-Illuminated Diffuse",656],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",656],["Performance",656],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",656],["Self-Illuminated Shader Family",657],["Note. Unity 5 introduced the Standard Shader which replaces these shaders.",657],["The Self-Illuminated shaders will emit light only onto themselves based on an attached alpha channel. They do not require any Lights to shine on them to emit this light. Any vertex lights or pixel lights will simply add more light on top of the self-illumination.",657],["This is mostly used for light emitting objects. For example, parts of the wall texture could be self-illuminated to simulate lights or displays. It can also be useful to light power-up objects that should always have consistent lighting throughout the game, regardless of the lights shining on it.",657],["Assets needed:",657],["One Base texture, no alpha channel required",657],["One Illumination texture with alpha channel for Illumination Map",657],["Assets needed:",657],["One Base texture, no alpha channel required",657],["One Illumination texture with alpha channel for Illumination Map",657],["Assets needed:",657],["One Base texture with alpha channel for Specular Map",657],["One Illumination texture with alpha channel for Illumination Map",657],["Assets needed:",657],["One Base texture, no alpha channel required",657],["One Normal map normal map with alpha channel for Illumination",657],["Assets needed:",657],["One Base texture with alpha channel for Specular Map",657],["One Normal map normal map with alpha channel for Illumination Map",657],["Assets needed:",657],["One Base texture, no alpha channel required",657],["One Normal map normal map with alpha channel for Illumination Map &amp; Parallax Depth combined",657],["Note:",657],["One consideration of this shader is that the Bumpmap texture's alpha channel doubles as a Illumination and the Parallax Depth.",657],["Assets needed:",657],["One Base texture with alpha channel for Specular Map",657],["One Normal map normal map with alpha channel for Illumination Map &amp; Parallax Depth combined",657],["Note:",657],["One consideration of this shader is that the Bumpmap texture's alpha channel doubles as a Illumination and the Parallax Depth.",657],["Self-Illuminated Parallax Diffuse",658],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",658],["Performance",658],["Generally, this shader is on the more expensive rendering side. For more details, please view the Shader Peformance page.",658],["Self-Illuminated Parallax Specular",659],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",659],["Performance",659],["Generally, this shader is on the more expensive rendering side. For more details, please view the Shader Peformance page.",659],["Self-Illuminated Specular",660],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",660],["Performance",660],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",660],["Self-Illuminated Vertex-Lit",661],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",661],["Performance",661],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",661],["Standard Shader",662],["From Unity 5, a new built-in shader called the Standard Shader is available. This shader incorporates features from various different shaders which are enabled selectively.",662],["Details",662],["The Rendering Mode selects between the broad categories of Opaque, Transparent and Cutout. Beyond this, features are enabled for the shader according to which maps are assigned. For example, if a texture is assigned to the Normal Map slot then this will enable normal mapping. When a feature is not used, it will be omitted from the shader code (ie, you don't pay any performance penalty for features you are not using).",662],["Transparent Bumped Diffuse",663],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",663],["Performance",663],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",663],["Transparent Bumped Specular",664],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",664],["One consideration for this shader is that the Base texture's alpha channel defines both the Transparent areas as well as the Specular Map.",664],["Performance",664],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",664],["Transparent Cutout Bumped Diffuse",665],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",665],["Performance",665],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",665],["Transparent Cutout Bumped Specular",666],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",666],["One consideration for this shader is that the Base texture's alpha channel defines both the Transparent areas as well as the Specular Map.",666],["Performance",666],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",666],["Transparent Cutout Diffuse",667],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",667],["Performance",667],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",667],["Transparent Cutout Specular",668],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",668],["One consideration for this shader is that the Base texture's alpha channel defines both the Transparent areas as well as the Specular Map.",668],["Performance",668],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",668],["Transparent Cutout Vertex-Lit",669],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",669],["Performance",669],["Generally, this shader is very cheap to render. For more details, please view the Shader Peformance page.",669],["Transparent Diffuse",670],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",670],["Performance",670],["Generally, this shader is cheap to render. For more details, please view the Shader Peformance page.",670],["Transparent Parallax Diffuse",671],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",671],["Performance",671],["Generally, this shader is on the more expensive rendering side. For more details, please view the Shader Peformance page.",671],["Transparent Parallax Specular",672],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",672],["One consideration for this shader is that the Base texture's alpha channel defines both the Transparent areas as well as the Specular Map.",672],["Performance",672],["Generally, this shader is on the more expensive rendering side. For more details, please view the Shader Peformance page.",672],["Transparent Cutout Shader Family",673],["Note. Unity 5 introduced the Standard Shader which replaces these shaders.",673],["The Transparent Cutout shaders are used for objects that have fully opaque and fully transparent parts (no partial transparency). Things like chain fences, trees, grass, etc.",673],["Assets needed:",673],["One Base texture with alpha channel for Transparency Map",673],["Assets needed:",673],["One Base texture with alpha channel for Transparency Map",673],["Assets needed:",673],["One Base texture with alpha channel for combined Transparency Map/Specular Map",673],["Note:",673],["One limitation of this shader is that the Base texture's alpha channel doubles as a Specular Map for the Specular shaders in this family.",673],["Assets needed:",673],["One Base texture with alpha channel for Transparency Map",673],["One Normal map normal map, no alpha channel required",673],["Assets needed:",673],["One Base texture with alpha channel for combined Transparency Map/Specular Map",673],["One Normal map normal map, no alpha channel required",673],["Note:",673],["One limitation of this shader is that the Base texture's alpha channel doubles as a Specular Map for the Specular shaders in this family.",673],["Transparent Shader Family",674],["Note. Unity 5 introduced the Standard Shader which replaces these shaders.",674],["The Transparent shaders are used for fully- or semi-transparent objects. Using the alpha channel of the Base texture, you can determine areas of the object which can be more or less transparent than others. This can create a great effect for glass, HUD interfaces, or sci-fi effects.",674],["Assets needed:",674],["One Base texture with alpha channel for Transparency Map",674],["Assets needed:",674],["One Base texture with alpha channel for Transparency Map",674],["Assets needed:",674],["One Base texture with alpha channel for combined Transparency Map/Specular Map",674],["Note:",674],["One limitation of this shader is that the Base texture's alpha channel doubles as a Specular Map for the Specular shaders in this family.",674],["Assets needed:",674],["One Base texture with alpha channel for Transparency Map",674],["One Normal map normal map, no alpha channel required",674],["Assets needed:",674],["One Base texture with alpha channel for combined Transparency Map/Specular Map",674],["One Normal map normal map, no alpha channel required",674],["Note:",674],["One limitation of this shader is that the Base texture's alpha channel doubles as a Specular Map for the Specular shaders in this family.",674],["Assets needed:",674],["One Base texture with alpha channel for Transparency Map",674],["One Normal map normal map with alpha channel for Parallax Depth",674],["Assets needed:",674],["One Base texture with alpha channel for combined Transparency Map/Specular Map",674],["One Normal map normal map with alpha channel for Parallax Depth",674],["Note:",674],["One limitation of this shader is that the Base texture's alpha channel doubles as a Specular Map for the Specular shaders in this family.",674],["Transparent Specular",675],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",675],["One consideration for this shader is that the Base texture's alpha channel defines both the Transparent areas as well as the Specular Map.",675],["Performance",675],["Generally, this shader is moderately expensive to render. For more details, please view the Shader Peformance page.",675],["Transparent Vertex-Lit",676],["Note. Unity 5 introduced the Standard Shader which replaces this shader.",676],["Performance",676],["Generally, this shader is very cheap to render. For more details, please view the Shader Peformance page.",676],["Shaders",677],["All rendering in Unity is done with Shaders - small scripts that let you configure the how the graphics hardware is set up for rendering.",677],["The following pages describe:",677],["Material and Shader relationship.",677],["Built-in Standard Shader.",677],["Writing Your Own Shaders.",677],["Other built-in Shaders.",677],["Writing Shaders",678],["Shaders in Unity can be written in one of three different ways:",678],["Surface Shaders",678],["Surface Shaders are your best option if your shader needs to be affected by lights and shadows. Surface shaders make it easy to write complex shaders in a compact way - it's a higher level of abstraction for interaction with Unity's lighting pipeline. Most surface shaders automatically support both forward and deferred lighting. You write surface shaders in a couple of lines of Cg/HLSL and a lot more code gets auto-generated from that.",678],["Do not use surface shaders if your shader is not doing anything with lights. For Image Effects or many special-effect shaders, surface shaders are a suboptimal option, since they will do a bunch of lighting calculations for no good reason!",678],["Vertex and Fragment Shaders",678],["Vertex and Fragment Shaders will be required, if your shader doesn't need to interact with lighting, or if you need some very exotic effects that the surface shaders can't handle. Shader programs written this way are the most flexible way to create the effect you need (even surface shaders are automatically converted to a bunch of vertex and fragment shaders), but that comes at a price: you have to write more code and it's harder to make it interact with lighting. These shaders are written in Cg/HLSL as well.",678],["Fixed Function Shaders",678],["Fixed Function shaders are legacy shader syntax for very simple effects. It is advisable to write programmable shaders, since that allows much more flexibility and works on more platforms (e.g. console platforms do not support fixed function shader syntax). Fixed function shaders are entirely written in a language called ShaderLab, which is similar to Microsoft's .FX files or NVIDIA's CgFX.",678],["ShaderLab",678],["Regardless of which type you choose, the actual meat of the shader code will always be wrapped in ShaderLab, which is used to organize the shader structure. It looks like this:",678],["Shader \"MyShader\" {",678],["Properties {",678],["_MyTexture (\"My Texture\", 2D) = \"white\" { }",678],["// other properties like colors or vectors go here as well",678],["SubShader {",678],["// here goes the 'meat' of your",678],["// - surface shader or",678],["// - vertex and fragment shader or",678],["// - fixed function shader",678],["SubShader {",678],["// here goes a simpler version of the SubShader above that",678],["// can run on older graphics cards",678],["We recommend that you start by reading about some basic concepts of the ShaderLab syntax in the ShaderLab reference and then move on to the tutorials listed below.",678],["The tutorials include plenty of examples for the different types of shaders. For even more examples of surface shaders in particular, you can get the source of Unity's built-in shaders from the Resources section. Unity's Image Effects package contains a lot of interesting vertex and fragment shaders.",678],["Read on for an introduction to shaders, and check out the shader reference!",678],["Shaders: ShaderLab &amp; Fixed Function shaders",679],["This tutorial will teach you how you can create your own shaders and make your game look a lot better!",679],["Unity is equipped with a powerful shading and material language called ShaderLab. In style it is similar to CgFX and Direct3D Effects (.FX) languages - it describes everything needed to display a Material.",679],["Shaders describe properties that are exposed in Unity's Material Inspector and multiple shader implementations (SubShaders) targeted at different graphics hardware capabilities, each describing complete graphics hardware rendering state, fixed function pipeline setup or vertex/fragment programs to use. Vertex and fragment programs are written in the high-level Cg/HLSL programming language.",679],["In this tutorial we describe how to write shaders in using both fixed function and programmable pipelines. We assume that the reader has a basic understanding of OpenGL or Direct3D render states, fixed function and programmable pipelines and has some knowledge of Cg, HLSL or GLSL programming languages. Some shader tutorials and documentation can be found on NVIDIA and AMD developer sites.",679],["Getting started",679],["To create a new shader, either choose Assets-&gt;Create-&gt;Shader from the menubar, or duplicate an existing shader, and work from that. The new shader can be edited by double-clicking it in the Project View.",679],["We'll start with a very basic shader:",679],["Shader \"Tutorial/Basic\" {",679],["Properties {",679],["_Color (\"Main Color\", Color) = (1,0.5,0.5,1)",679],["SubShader {",679],["Pass {",679],["Material {",679],["Diffuse [_Color]",679],["Lighting On",679],["This simple shader demonstrates one of the most basic shaders possible. It defines a color property called Main Color and assigns it a default value of rose-like color (red=100% green=50% blue=50% alpha=100%). It then renders the object by invoking a Pass and in that pass setting the diffuse material component to the property _Color and turning on per-vertex lighting.",679],["To test this shader, create a new material, select the shader from the drop-down menu (Tutorial-&gt;Basic) and assign the Material to some object. Tweak the color in the Material Inspector and watch the changes. Time to move onto more complex things!",679],["Basic Vertex Lighting",679],["If you open an existing complex shader, it can be a bit hard to get a good overview. To get you started, we will dissect the built-in VertexLit shader that ships with Unity. This shader uses fixed function pipeline to do standard per-vertex lighting.",679],["Shader \"VertexLit\" {",679],["Properties {",679],["_Color (\"Main Color\", Color) = (1,1,1,0.5)",679],["_SpecColor (\"Spec Color\", Color) = (1,1,1,1)",679],["_Emission (\"Emmisive Color\", Color) = (0,0,0,0)",679],["_Shininess (\"Shininess\", Range (0.01, 1)) = 0.7",679],["_MainTex (\"Base (RGB)\", 2D) = \"white\" { }",679],["SubShader {",679],["Pass {",679],["Material {",679],["Diffuse [_Color]",679],["Ambient [_Color]",679],["Shininess [_Shininess]",679],["Specular [_SpecColor]",679],["Emission [_Emission]",679],["Lighting On",679],["SeparateSpecular On",679],["SetTexture [_MainTex] {",679],["constantColor [_Color]",679],["Combine texture * primary DOUBLE, texture * constant",679],["All shaders start with the keyword Shader followed by a string that represents the name of the shader. This is the name that is shown in the Inspector. All code for this shader must be put within the curly braces after it: { } (called a block).",679],["The name should be short and descriptive. It does not have to match the .shader file name.",679],["To put shaders in submenus in Unity, use slashes - e.g. MyShaders/Test would be shown as Test in a submenu called MyShaders, or MyShaders-&gt;Test.",679],["The shader is composed of a Properties block followed by SubShader blocks. Each of these is described in sections below.",679],["Properties",679],["At the beginning of the shader block you can define any properties that artists can edit in the Material Inspector. In the VertexLit example the properties look like this:",679],["The properties are listed on separate lines within the Properties block. Each property starts with the internal name (Color, MainTex). After this in parentheses comes the name shown in the inspector and the type of the property. After that, the default value for this property is listed:",679],["The list of possible types are in the Properties Reference. The default value depends on the property type. In the example of a color, the default value should be a four component vector.",679],["We now have our properties defined, and are ready to start writing the actual shader.",679],["The Shader Body",679],["Before we move on, let's define the basic structure of a shader file.",679],["Different graphic hardware has different capabilities. For example, some graphics cards support fragment programs and others don't; some can lay down four textures per pass while the others can do only two or one; etc. To allow you to make full use of whatever hardware your user has, a shader can contain multiple SubShaders. When Unity renders a shader, it will go over all subshaders and use the first one that the hardware supports.",679],["Shader \"Structure Example\" {",679],["Properties { /* ...shader properties... }",679],["SubShader {",679],["// ...subshader that uses vertex/fragment programs...",679],["SubShader {",679],["// ...subshader that uses four textures per pass...",679],["SubShader {",679],["// ...subshader that uses two textures per pass...",679],["SubShader {",679],["// ...subshader that might look ugly but runs on anything :)",679],["This system allows Unity to support all existing hardware and maximize the quality on each one. It does, however, result in some long shaders.",679],["Inside each SubShader block you set the rendering state shared by all passes; and define rendering passes themselves. A complete list of available commands can be found in the SubShader Reference.",679],["Passes",679],["Each subshader is a collection of passes. For each pass, the object geometry is rendered, so there must be at least one pass. Our VertexLit shader has just one pass:",679],["// ...snip...",679],["Pass {",679],["Material {",679],["Diffuse [_Color]",679],["Ambient [_Color]",679],["Shininess [_Shininess]",679],["Specular [_SpecColor]",679],["Emission [_Emission]",679],["Lighting On",679],["SeparateSpecular On",679],["SetTexture [_MainTex] {",679],["constantColor [_Color]",679],["Combine texture * primary DOUBLE, texture * constant",679],["// ...snip...",679],["Any commands defined in a pass configures the graphics hardware to render the geometry in a specific way.",679],["In the example above we have a Material block that binds our property values to the fixed function lighting material settings. The command Lighting On turns on the standard vertex lighting, and SeparateSpecular On enables the use of a separate color for the specular highlight.",679],["All of these command so far map very directly to the fixed function OpenGL/Direct3D hardware model. Consult OpenGL red book for more information on this.",679],["The next command, SetTexture, is very important. These commands define the textures we want to use and how to mix, combine and apply them in our rendering. SetTexture command is followed by the property name of the texture we would like to use (_MainTex here) This is followed by a combiner block that defines how the texture is applied. The commands in the combiner block are executed for each pixel that is rendered on screen.",679],["Within this block we set a constant color value, namely the Color of the Material, _Color. We'll use this constant color below.",679],["In the next command we specify how to mix the texture with the color values. We do this with the Combine command that specifies how to blend the texture with another one or with a color. Generally it looks like this:",679],["Combine ColorPart, AlphaPart",679],["Here ColorPart and AlphaPart define blending of color (RGB) and alpha (A) components respectively. If AlphaPart is omitted, then it uses the same blending as ColorPart.",679],["In our VertexLit example:",679],["Combine texture * primary DOUBLE, texture * constant",679],["Here texture is the color coming from the current texture (here _MainTex). It is multiplied (*) with the primary vertex color. Primary color is the vertex lighting color, calculated from the Material values above. Finally, the result is multiplied by two to increase lighting intensity (DOUBLE). The alpha value (after the comma) is texture multiplied by constant value (set with constantColor above). Another often used combiner mode is called previous (not used in this shader). This is the result of any previous SetTexture step, and can be used to combine several textures and/or colors with each other.",679],["Summary",679],["Our VertexLit shader configures standard vertex lighting and sets up the texture combiners so that the rendered lighting intensity is doubled.",679],["We could put more passes into the shader, they would get rendered one after the other. For now, though, that is not nessesary as we have the desired effect. We only need one SubShader as we make no use of any advanced features - this particular shader will work on any graphics card that Unity supports.",679],["The VertexLit shader is one of the most basic shaders that we can think of. We did not use any hardware specific operations, nor did we utilize any of the more special and cool commands that ShaderLab and Cg/HLSL has to offer.",679],["In the next chapter we'll proceed by explaining how to write custom vertex &amp; fragment programs using Cg/HLSL language.",679],["Shaders: Vertex and Fragment Programs",680],["This tutorial will teach you how to write custom vertex and fragment programs in Unity shaders. For a basic introduction to ShaderLab see the Getting Started tutorial. If you want to write shaders that interact with lighting, read about Surface Shaders instead.",680],["Lets start with a small recap of the general structure of a shader:",680],["Shader \"MyShaderName\" {",680],["Properties {",680],["// ... properties here ...",680],["SubShader {",680],["// ... subshader for graphics hardware A ...",680],["Pass {",680],["// ... pass commands ...",680],["// ... more passes if needed ...",680],["SubShader {",680],["// ... subshader for graphics hardware B ...",680],["// ... Optional fallback ...",680],["FallBack \"VertexLit\"",680],["Here at the end we introduce a new command:",680],["FallBack \"VertexLit\"",680],["The Fallback command can be used at the end of the shader; it tells which shader should be used if no SubShaders from the current shader can run on user's graphics hardware. The effect is the same as including all SubShaders from the fallback shader at the end. For example, if you were to write a normal-mapped shader, then instead of writing a very basic non-normal-mapped subshader for old graphics cards you can just fallback to built-in VertexLit shader.",680],["The basic building blocks of the shader are introduced in the first shader tutorial while the full documentation of Properties, SubShaders and Passes are also available.",680],["A quick way of building SubShaders is to use passes defined in other shaders. The command UsePass does just that, so you can reuse shader code in a neat fashion. As an example the following command uses the pass with the name \"BASE\" from the built-in Specular shader:",680],["UsePass \"Specular/BASE\"",680],["In order for UsePass to work, a name must be given to the pass one wishes to use. The Name command inside the pass gives it a name:",680],["Name \"MyPassName\"",680],["Vertex and fragment programs",680],["We described a pass that used just a single texture combine instruction in the first tutorial. Now it is time to demonstrate how we can use vertex and fragment programs in our pass.",680],["When you use vertex and fragment programs (the so called \"programmable pipeline\"), most of the hardcoded functionality (\"fixed function pipeline\") in the graphics hardware is switched off. For example, using a vertex program turns off standard 3D transformations, lighting and texture coordinate generation completely. Similarly, using a fragment program replaces any texture combine modes that would be defined in SetTexture commands; thus SetTexture commands are not needed.",680],["Writing vertex/fragment programs requires a thorough knowledge of 3D transformations, lighting and coordinate spaces - because you have to rewrite the fixed functionality that is built into APIs like OpenGL yourself. On the other hand, you can do much more than what's built in!",680],["Using Cg/HLSL in ShaderLab",680],["Shaders in ShaderLab are usually written in Cg/HLSL programming language. Cg and DX9-style HLSL are for all practical purposes one and the same language, so we'll be using Cg and HLSL interchangeably.",680],["Shader code is written by embedding \"Cg snippets\" in the shader text. Cg snippets are compiled into low-level shader assembly by the Unity editor, and the final shader that is included in your game's data files only contains this low-level assembly or bytecode, that is platform specific. When you select a shader in the Project View, the Inspector has a button to show compiled shader code, which might help as a debugging aid. Unity automatically compiles Cg snippets for all relevant platforms (Direct3D 9, OpenGL, Direct3D 11, OpenGL ES and so on). Note that because Cg code is compiled by the editor, you can't create Cg shaders from scripts at runtime.",680],["In general, Cg snippets are placed inside Pass blocks. They look like this:",680],["Pass {",680],["// ... the usual pass state setup ...",680],["CGPROGRAM",680],["// compilation directives for this snippet, e.g.:",680],["pragma vertex vert",680],["pragma fragment frag",680],["// the Cg code itself",680],["ENDCG",680],["// ... the rest of pass setup ...",680],["The following example demonstrates a complete shader with Cg programs that renders object normals as colors:",680],["Shader \"Tutorial/Display Normals\" {",680],["SubShader {",680],["Pass {",680],["CGPROGRAM",680],["pragma vertex vert",680],["pragma fragment frag",680],["include \"UnityCG.cginc\"",680],["struct v2f {",680],["float4 pos : SV_POSITION;",680],["fixed3 color : COLOR0;",680],["};",680],["v2f vert (appdata_base v)",680],["v2f o;",680],["o.pos = mul (UNITY_MATRIX_MVP, v.vertex);",680],["o.color = v.normal * 0.5 + 0.5;",680],["return o;",680],["fixed4 frag (v2f i) : SV_Target",680],["return fixed4 (i.color, 1);",680],["ENDCG",680],["When applied on an object it will result in an image like this:",680],["Our \"Display Normals\" shader does not have any properties, contains a single SubShader with a single Pass that is empty except for the Cg code. Let's dissect the Cg code part by part:",680],["CGPROGRAM",680],["pragma vertex vert",680],["pragma fragment frag",680],["// ...",680],["ENDCG",680],["The whole Cg snippet is written between CGPROGRAM and ENDCG keywords. At the start compilation directives are given as #pragma statements:",680],["#pragma vertex name tells that the code contains a vertex program in the given function (vert here).",680],["#pragma fragment name tells that the code contains a fragment program in the given function (frag here).",680],["Following the compilation directives is just plain Cg code. We start by including a built-in Cg file:",680],["include \"UnityCG.cginc\"",680],["The UnityCG.cginc file contains commonly used declarations and functions so that the shaders can be kept smaller (see shader include files page for details). Here we'll use appdata_base structure from that file. We could just define them directly in the shader and not include the file of course.",680],["Next we define a \"vertex to fragment\" structure (here named v2f) - what information is passed from the vertex to the fragment program. We pass the position and color parameters. The color will be computed in the vertex program and just output in the fragment program.",680],["We proceed by defining the vertex program - vert function. Here we compute the position and output input normal as a color:",680],["o.color = v.normal * 0.5 + 0.5;",680],["Normal components are in -1..1 range, while colors are in 0..1 range, so we scale and bias the normal in the code above. Next we define a fragment program - frag function that just outputs the calculated color and 1 as the alpha component:",680],["fixed4 frag (v2f i) : SV_Target",680],["return fixed4 (i.color, 1);",680],["That's it, our shader is finished! Even this simple shader is very useful to visualize mesh normals.",680],["Of course, this shader does not respond to lights at all, and that's where things get a bit more interesting; read about Surface Shaders for details.",680],["Using shader properties in Cg code",680],["When you define properties in the shader, you give them a name like _Color or _MainTex. To use them in Cg you just have to define a variable of a matching name and type. Unity will automatically set Cg variables that have names matching with shader properties.",680],["Here is a complete shader that displays a texture modulated by a color. Of course, you could easily do the same in a texture combiner call, but the point here is just to show how to use properties in Cg:",680],["Shader \"Tutorial/Textured Colored\" {",680],["Properties {",680],["_Color (\"Main Color\", Color) = (1,1,1,0.5)",680],["_MainTex (\"Texture\", 2D) = \"white\" { }",680],["SubShader {",680],["Pass {",680],["CGPROGRAM",680],["pragma vertex vert",680],["pragma fragment frag",680],["include \"UnityCG.cginc\"",680],["fixed4 _Color;",680],["sampler2D _MainTex;",680],["struct v2f {",680],["float4 pos : SV_POSITION;",680],["float2 uv : TEXCOORD0;",680],["};",680],["float4 MainTexST;",680],["v2f vert (appdata_base v)",680],["v2f o;",680],["o.pos = mul (UNITY_MATRIX_MVP, v.vertex);",680],["o.uv = TRANSFORM_TEX (v.texcoord, _MainTex);",680],["return o;",680],["fixed4 frag (v2f i) : SV_Target",680],["fixed4 texcol = tex2D (_MainTex, i.uv);",680],["return texcol * _Color;",680],["ENDCG",680],["The structure of this shader is the same as in the previous example. Here we define two properties, namely _Color and _MainTex. Inside Cg code we define corresponding variables:",680],["fixed4 _Color;",680],["sampler2D _MainTex;",680],["See Accessing Shader Properties in Cg for more information.",680],["The vertex and fragment programs here don't do anything fancy; vertex program uses the TRANSFORM_TEX macro from UnityCG.cginc to make sure texture scale&amp;offset is applied correctly, and fragment program just samples the texture and multiplies by the color property.",680],["Summary",680],["We have shown how custom shader programs can be written in a few easy steps. While the examples shown here are very simple, there's nothing preventing you to write arbitrarily complex shader programs! This can help you to take the full advantage of Unity and achieve optimal rendering results.",680],["The complete ShaderLab reference manual is here, and more examples in vertex and fragment shader examples page. We also have a forum for shaders at forum.unity3d.com so go there to get help with your shaders! Happy programming, and enjoy the power of Unity and Shaderlab.",680],["Shadows",681],["Unity's lights can cast Shadows from an object onto other parts of itself or onto other nearby objects. Shadows add a degree of depth and realism to a scene since they bring out the scale and position of objects that can otherwise look \"flat\".",681],["How Do Shadows Work?",681],["Consider the simplest case of a scene with a single light source. Light rays travel in straight lines from that source and may eventually hit objects in the scene. Once a ray has hit an object, it can't travel any further to illuminate anything else (ie, it \"bounces\" off the first object and doesn't pass through). The shadows cast by the object are simply the areas that are not illuminated because the light couldn't reach them.",681],["Another way to look at this is to imagine a camera at the same position as the light. The areas of the scene that are in shadow are precisely those areas that the camera can't see.",681],["In fact, this is exactly how Unity determines the positions of shadows from a light. The light uses the same principle as a camera to \"render\" the scene internally from its point of view. A depth buffer system, as used by scene cameras, keeps track of the surfaces that are closest to the light; surfaces in a direct line of sight receive illumination but all the others are in shadow. The depth map in this case is known as a Shadow Map.",681],["Enabling Shadows",681],["You can enable shadows for an individual light with the Shadow Type property in the inspector.",681],["The Hard Shadows setting produces shadows with a sharp edge. Hard shadows seldom occur in everyday life (unless you are an astronaut) but they involve less processing overhead than the more realistic Soft Shadows and are acceptable for many purposes. The Strength setting determines how dark the shadows are; in general, some light will be scattered by the atmosphere and reflected off other objects, so you usually don't want shadows to be set to maximum strength. The Resolution property sets the rendering resolution for the shadow map \"camera\" mentioned above. If you find your shadows have very visible edges then you might want to increase this value.",681],["Each Mesh Renderer in the scene also has properties called Cast Shadows and Receive Shadows which must be enabled as appropriate.",681],["Shadow Mapping and the Bias Property",681],["The shadows for a given light are determined during the final scene rendering. When the scene is rendered to the main view camera, each pixel position in the view is transformed into the coordinate system of the light. The distance of a pixel from the light is then compared to the corresponding pixel in the shadow map. If the pixel is more distant than the shadow map pixel, then it is presumably obscured from the light by another object and it will get no illumination.",681],["A surface directly illuminated by a light can sometimes appear to be partly in shadow. This is because pixels that should be exactly at the distance specified in the shadow map will sometimes be deemed farther away (a consequence of using a low resolution image for the shadow map; or using shadow filtering). The result is arbitrary patterns of pixels in shadow when they should really be lit, giving a visual effect known as \"shadow acne\".",681],["To prevent shadow acne, a bias value can be added to the distance in the shadow map to ensure that pixels on the borderline will definitely pass the comparison as they should; or while rendering into the shadow map, objects can be inset a bit along their normals. These values are set by the Bias and Normal Bias properties in the light's inspector when it has shadows enabled.",681],["Do not set the Bias value too high though, however, since areas of a shadow near to the object casting it can then sometimes be falsely illuminated. This effect is known as \"Peter Panning\" (i.e. the disconnected shadow makes the object look as if it is flying above the ground, like Peter Pan).",681],["Likewise, do not set Normal Bias value too high; or the shadow shape will get thinner than the object actually is:",681],["The bias values for a light may need a bit of tweaking to make sure that neither shadow acne nor Peter Panning occur. It is generally easier to gauge the right value by eye rather than attempt to calculate it.",681],["See Also",681],["Light Performance page: details on shadow quality, performance and hardware support.",681],["Directional Shadow Details: information about cascaded shadow maps.",681],["Advanced ShaderLab topics",682],["Read those to improve your ShaderLab-fu!",682],["ShaderLab: Legacy Alpha Testing",683],["The alpha test is a last chance to reject a pixel from being written to the screen.",683],["Note: AlphaTest commands have no effect when fragment programs are used; on most platforms alpha testing is done in the shader using HLSL clip() function. It is advisable to use programmable shaders these days instead of SetTexture commands.*",683],["After the final output color has been calculated, the color can optionally have its alpha value compared to a fixed value. If the test fails, the pixel is not written to the display.",683],["Syntax",683],["AlphaTest Off",683],["Render all pixels (default) or...",683],["AlphaTest comparison AlphaValue",683],["Set up the alpha test to only render pixels whose alpha value is within a certain range.",683],["Comparison",683],["Comparison is one of the following words:",683],["",683],["Greater Only render pixels whose alpha is greater than AlphaValue. ",683],["GEqual Only render pixels whose alpha is greater than or equal to AlphaValue. ",683],["Less Only render pixels whose alpha value is less than AlphaValue. ",683],["LEqual Only render pixels whose alpha value is less than or equal to from AlphaValue. ",683],["Equal Only render pixels whose alpha value equals AlphaValue. ",683],["NotEqual Only render pixels whose alpha value differs from AlphaValue. ",683],["Always Render all pixels. This is functionally equivalent to AlphaTest Off. ",683],["Never Don't render any pixels. ",683],["AlphaValue",683],["A floating-point number between 0 and 1. This can also be a variable reference to a float or range property, in which case it should be written using the standard square bracket notation ([VariableName]).",683],["Details",683],["The alpha test is important when rendering concave objects with transparent parts. The graphics card maintains a record of the depth of every pixel written to the screen. If a new pixel is further away than one already rendered, the new pixel is not written to the display. This means that even with Blending, objects will not show through.",683],["In this figure, the tree on the left is rendered using AlphaTest. Note how the pixels in it are either completely transparent or opaque. The center tree is rendered using only Alpha Blending - notice how transparent parts of nearby branches cover the distant leaves because of the depth buffer. The tree on the right is rendered using the last example shader - which implements a combination of blending and alpha testing to hide any artifacts.",683],["Examples",683],["The simplest possible example, assign a texture with an alpha channel to it. The object will only be visible where alpha is greater than 0.5",683],["Shader \"Simple Alpha Test\" {",683],["Properties {",683],["_MainTex (\"Base (RGB) Transparency (A)\", 2D) = \"\" {}",683],["SubShader {",683],["Pass {",683],["// Only render pixels with an alpha larger than 50%",683],["AlphaTest Greater 0.5",683],["SetTexture [_MainTex] { combine texture }",683],["This is not much good by itself. Let us add some lighting and make the cutoff value tweakable:",683],["Shader \"Cutoff Alpha\" {",683],["Properties {",683],["_MainTex (\"Base (RGB) Transparency (A)\", 2D) = \"\" {}",683],["_Cutoff (\"Alpha cutoff\", Range (0,1)) = 0.5",683],["SubShader {",683],["Pass {",683],["// Use the Cutoff parameter defined above to determine",683],["// what to render.",683],["AlphaTest Greater [_Cutoff]",683],["Material {",683],["Diffuse (1,1,1,1)",683],["Ambient (1,1,1,1)",683],["Lighting On",683],["SetTexture [_MainTex] { combine texture * primary }",683],["When rendering plants and trees, many games have the hard edges typical of alpha testing. A way around that is to render the object twice. In the first pass, we use alpha testing to only render pixels that are more than 50% opaque. In the second pass, we alpha-blend the graphic in the parts that were cut away, without recording the depth of the pixel. We might get a bit of confusion as further away branches overwrite the nearby ones, but in practice, that is hard to see as leaves have a lot of visual detail in them.",683],["Shader \"Vegetation\" {",683],["Properties {",683],["_Color (\"Main Color\", Color) = (.5, .5, .5, .5)",683],["_MainTex (\"Base (RGB) Alpha (A)\", 2D) = \"white\" {}",683],["_Cutoff (\"Base Alpha cutoff\", Range (0,.9)) = .5",683],["SubShader {",683],["// Set up basic lighting",683],["Material {",683],["Diffuse [_Color]",683],["Ambient [_Color]",683],["Lighting On",683],["// Render both front and back facing polygons.",683],["Cull Off",683],["// first pass:",683],["// render any pixels that are more than [_Cutoff] opaque",683],["Pass {",683],["AlphaTest Greater [_Cutoff]",683],["SetTexture [_MainTex] {",683],["combine texture * primary, texture",683],["// Second pass:",683],["// render in the semitransparent details.",683],["Pass {",683],["// Dont write to the depth buffer",683],["ZWrite off",683],["// Don't write pixels we have already written.",683],["ZTest Less",683],["// Only render pixels less or equal to the value",683],["AlphaTest LEqual [_Cutoff]",683],["// Set up alpha blending",683],["Blend SrcAlpha OneMinusSrcAlpha",683],["SetTexture [_MainTex] {",683],["combine texture * primary, texture",683],["Note that we have some setup inside the SubShader, rather than in the individual passes. Any state set in the SubShader is inherited as defaults in passes inside it.",683],["ShaderLab: Legacy BindChannels",684],["BindChannels command allows you to specify how vertex data maps to the graphics hardware.",684],["Note: _BindChannels has no effect when vertex programs are used, as in that case bindings are controlled by vertex shader inputs. It is advisable to use programmable shaders these days instead of fixed function vertex processing.*",684],["By default, Unity figures out the bindings for you, but in some cases you want custom ones to be used.",684],["For example you could map the primary UV set to be used in the first texture stage and the secondary UV set to be used in the second texture stage; or tell the hardware that vertex colors should be taken into account.",684],["Syntax",684],["BindChannels { Bind \"source\", target }",684],["Specifies that vertex data source maps to hardware target.",684],["Source can be one of:",684],["Vertex: vertex position",684],["Normal: vertex normal",684],["Tangent: vertex tangent",684],["Texcoord: primary UV coordinate",684],["Texcoord1: secondary UV coordinate",684],["Color: per-vertex color",684],["Target can be one of:",684],["Vertex: vertex position",684],["Normal: vertex normal",684],["Tangent: vertex tangent",684],["Texcoord0, Texcoord1, ...: texture coordinates for corresponding texture stage",684],["Texcoord: texture coordinates for all texture stages",684],["Color: vertex color",684],["Details",684],["Unity places some restrictions on which sources can be mapped to which targets. Source and target must match for Vertex, Normal, Tangent and Color. Texture coordinates from the mesh (Texcoord and Texcoord1) can be mapped into texture coordinate targets (Texcoord for all texture stages, or TexcoordN for a specific stage).",684],["There are two typical use cases for BindChannels:",684],["Shaders that take vertex colors into account.",684],["Shaders that use two UV sets.",684],["Examples",684],["// Maps the first UV set to the first texture stage",684],["// and the second UV set to the second texture stage",684],["BindChannels {",684],["Bind \"Vertex\", vertex",684],["Bind \"texcoord\", texcoord0",684],["Bind \"texcoord1\", texcoord1",684],["// Maps the first UV set to all texture stages",684],["// and uses vertex colors",684],["BindChannels {",684],["Bind \"Vertex\", vertex",684],["Bind \"texcoord\", texcoord",684],["Bind \"Color\", color",684],["ShaderLab: Blending",685],["Blending is used to make transparent objects.",685],["When graphics are rendered, after all shaders have executed and all textures have been applied, the pixels are written to the screen. How they are combined with what is already there is controlled by the Blend command.",685],["Syntax",685],["Blend Off: Turn off blending",685],["Blend SrcFactor DstFactor: Configure &amp; enable blending. The generated color is multiplied by the SrcFactor. The color already on screen is multiplied by DstFactor and the two are added together.",685],["Blend SrcFactor DstFactor, SrcFactorA DstFactorA: Same as above, but use different factors for blending the alpha channel.",685],["BlendOp BlendOp: Instead of adding blended colors together, do a different operation on them.",685],["Blend operations",685],["The following blend operations can be used:",685],["",685],["Add Add source and destination together. ",685],["Sub Subtract source from destination. ",685],["RevSub Subtract destination from source. ",685],["Min Use the smaller of source and destination. ",685],["Max Use the larger of source and destination. ",685],["LogicalClear Logical operation: Clear (0) DX11.1 only. ",685],["LogicalSet Logical operation: Set (1) DX11.1 only. ",685],["LogicalCopy Logical operation: Copy (s) DX11.1 only. ",685],["LogicalCopyInverted Logical operation: Copy inverted (!s) DX11.1 only. ",685],["LogicalNoop Logical operation: Noop (d) DX11.1 only. ",685],["LogicalInvert Logical operation: Invert (!d) DX11.1 only. ",685],["LogicalAnd Logical operation: And (s &amp; d) DX11.1 only. ",685],["LogicalNand Logical operation: Nand !(s &amp; d) DX11.1 only. ",685],["LogicalOr Logical operation: Or (s \\ d) DX11.1 only. ",685],["LogicalNor Logical operation: Nor !(s \\ d) DX11.1 only. ",685],["LogicalXor Logical operation: Xor (s ^ d) DX11.1 only. ",685],["LogicalEquiv Logical operation: Equivalence !(s ^ d) DX11.1 only. ",685],["LogicalAndReverse Logical operation: Reverse And (s &amp; !d) DX11.1 only. ",685],["LogicalAndInverted Logical operation: Inverted And (!s &amp; d) DX11.1 only. ",685],["LogicalOrReverse Logical operation: Reverse Or (s \\ !d) DX11.1 only. ",685],["LogicalOrInverted Logical operation: Inverted Or (!s \\ d) DX11.1 only. ",685],["Blend factors",685],["All following properties are valid for both SrcFactor &amp; DstFactor in the Blend command. Source refers to the calculated color, Destination is the color already on the screen. The blend factors are ignored if BlendOp is using logical operations.",685],["",685],["One The value of one - use this to let either the source or the destination color come through fully. ",685],["Zero The value zero - use this to remove either the source or the destination values. ",685],["SrcColor The value of this stage is multiplied by the source color value. ",685],["SrcAlpha The value of this stage is multiplied by the source alpha value. ",685],["DstColor The value of this stage is multiplied by frame buffer source color value. ",685],["DstAlpha The value of this stage is multiplied by frame buffer source alpha value. ",685],["OneMinusSrcColor The value of this stage is multiplied by (1 - source color). ",685],["OneMinusSrcAlpha The value of this stage is multiplied by (1 - source alpha). ",685],["OneMinusDstColor The value of this stage is multiplied by (1 - destination color). ",685],["OneMinusDstAlpha The value of this stage is multiplied by (1 - destination alpha). ",685],["Details",685],["Below are the most common blend types:",685],["Blend SrcAlpha OneMinusSrcAlpha // Alpha blending",685],["Blend One One // Additive",685],["Blend OneMinusDstColor One // Soft Additive",685],["Blend DstColor Zero // Multiplicative",685],["Blend DstColor SrcColor // 2x Multiplicative",685],["Example",685],["Here is a small example shader that adds a texture to whatever is on the screen already:",685],["Shader \"Simple Additive\" {",685],["Properties {",685],["_MainTex (\"Texture to blend\", 2D) = \"black\" {}",685],["SubShader {",685],["Tags { \"Queue\" = \"Transparent\" }",685],["Pass {",685],["Blend One One",685],["SetTexture [_MainTex] { combine texture }",685],["Built-in shader include files",686],["Unity contains several files that can be used by your shader programs to bring in predefined variables and helper functions. This is done by the standard #include directive, e.g.:",686],["CGPROGRAM",686],["// ...",686],["include \"UnityCG.cginc\"",686],["// ...",686],["ENDCG",686],["Shader include files in Unity are with .cginc extension, and the built-in ones are:",686],["HLSLSupport.cginc - (automatically included) Helper macros and definitions for cross-platform shader compilation.",686],["UnityShaderVariables.cginc - (automatically included) Commonly used global variables.",686],["UnityCG.cginc - commonly used helper functions.",686],["AutoLight.cginc - lighting &amp; shadowing functionality, e.g. surface shaders use this file internally.",686],["Lighting.cginc - standard surface shader lighting models; automatically included when you're writing surface shaders.",686],["TerrainEngine.cginc - helper functions for Terrain &amp; Vegetation shaders.",686],["These files are found inside Unity application ({unity install path}/Data/CGIncludes/UnityCG.cginc on Windows, /Applications/Unity/Unity.app/Contents/CGIncludes/UnityCG.cginc on Mac), if you want to take a look at what exactly is done in any of the helper code.",686],["HLSLSupport.cginc",686],["This file is automatically included when compiling shaders. It declares various preprocessor macros to aid in multi-platform shader development.",686],["UnityShaderVariables.cginc",686],["This file is automatically included when compiling shaders. It declares various built-in global variables that are commonly used in shaders.",686],["UnityCG.cginc",686],["This file is often included in Unity shaders to bring in many helper functions.",686],["Data structures in UnityCG.cginc",686],["struct appdata_base: vertex shader input with position, normal, one texture coordinate.",686],["struct appdata_tan: vertex shader input with position, normal, tangent, one texture coordinate.",686],["struct appdata_full: vertex shader input with position, normal, tangent, vertex color and two texture coordinates.",686],["struct appdata_img: vertex shader input with position and one texture coordinate.",686],["Generic helper functions in UnityCG.cginc",686],["float3 WorldSpaceViewDir (float4 v) - returns world space direction (not normalized) from given object space vertex position towards the camera.",686],["float3 ObjSpaceViewDir (float4 v) - returns object space direction (not normalized) from given object space vertex position towards the camera.",686],["float2 ParallaxOffset (half h, half height, half3 viewDir) - calculates UV offset for parallax normal mapping.",686],["fixed Luminance (fixed3 c) - converts color to luminance (grayscale).",686],["fixed3 DecodeLightmap (fixed4 color) - decodes color from Unity lightmap (RGBM or dLDR depending on platform).",686],["float4 EncodeFloatRGBA (float v) - encodes [0..1) range float into RGBA color, for storage in low precision render target.",686],["float DecodeFloatRGBA (float4 enc) - decodes RGBA color into a float.",686],["Similarly, float2 EncodeFloatRG (float v) and float DecodeFloatRG (float2 enc) that use two color channels.",686],["float2 EncodeViewNormalStereo (float3 n) - encodes view space normal into two numbers in 0..1 range.",686],["float3 DecodeViewNormalStereo (float4 enc4) - decodes view space normal from enc4.xy.",686],["Forward rendering helper functions in UnityCG.cginc",686],["These functions are only useful when using forward rendering (ForwardBase or ForwardAdd pass types).",686],["float3 WorldSpaceLightDir (float4 v) - computes world space direction (not normalized) to light, given object space vertex position.",686],["float3 ObjSpaceLightDir (float4 v) - computes object space direction (not normalized) to light, given object space vertex position.",686],["float3 Shade4PointLights (...) - computes illumination from four point lights, with light data tightly packed into vectors. Forward rendering uses this to compute per-vertex lighting.",686],["Vertex-lit helper functions in UnityCG.cginc",686],["These functions are only useful when using per-vertex lit shaders (\"Vertex\" pass type).",686],["float3 ShadeVertexLights (float4 vertex, float3 normal) - computes illumination from four per-vertex lights and ambient, given object space position &amp; normal.",686],["Predefined shader preprocessor macros",687],["When compiling shader programs, Unity defines several preprocessor macros.",687],["Target platform",687],["SHADER_API_D3D9 - Direct3D 9",687],["SHADER_API_D3D11 - desktop Direct3D 11",687],["SHADER_API_OPENGL - desktop OpenGL",687],["SHADER_API_GLES - OpenGL ES 2.0",687],["SHADER_API_GLES3 - OpenGL ES 3.0",687],["SHADER_API_METAL - iOS Metal",687],["SHADER_API_D3D11_9X - Direct3D 11 \"feature level 9.x\" target for Windows Store Apps &amp; Windows Phone",687],["SHADER_API_PS4 - PlayStation 4",687],["SHADER_API_XBOXONE - Xbox One",687],["SHADER_API_PS3 - PlayStation 3",687],["SHADER_API_XBOX360 - Xbox 360",687],["SHADER_API_PSP2 - PlayStation Vita",687],["SHADER_API_PSM - PlayStation Mobile",687],["Additionally, SHADER_TARGET_GLSL is defined when the target shading language is GLSL (always true for OpenGL/GLES platforms).",687],["Shader target model",687],["SHADER_TARGET macro will be defined to a numeric value that matches shader target compilation model (i.e. matching #pragma target directive). For example, SHADER_TARGET will be 30 when compiling into shader model 3.0. You can use it in shader code to do conditional checks, for example:",687],["if SHADER_TARGET &lt; 30",687],["// less than shader model 3.0:",687],["// very limited shader capabilities, do some approximation",687],["else",687],["// decent capabilities, do a better thing",687],["endif",687],["Platform difference helpers",687],["Direct use of these platform macros is discouraged, since it's not very future proof. For example, if you're writing a shader that checks for D3D9, then maybe in the future the check should be extended to include D3D11. Instead, Unity defines several helper macros (in HLSLSupport.cginc) to help with that.",687],["UNITY_BRANCH - add this before conditional statements to hint the compiler that this should be compiled into an actual branch. Expands to [branch] when on HLSL platforms.",687],["UNITY_FLATTEN - add this before conditional statements to hint the compiler that this should be flattened to avoid an actual branch instruction. Expands to [flatten] when on HLSL platforms.",687],["UNITY_NO_SCREENSPACE_SHADOWS - defined on platforms that do not use cascaded screenspace shadowmaps (mobile platforms).",687],["UNITY_NO_LINEAR_COLORSPACE - defined on platforms that do not support Linear color space (mobile platforms).",687],["UNITY_NO_RGBM - defined on platforms where RGBM compression for lightmaps is not used (mobile platforms).",687],["UNITY_NO_DXT5nm - defined on platforms that do not use DXT5nm normal-map compression (mobile platforms).",687],["UNITY_FRAMEBUFFER_FETCH_AVAILABLE - defined on platforms where \"framebuffer color fetch\" functionality can be available (generally iOS platforms - OpenGL ES 2.0, 3.0 and Metal).",687],["UNITY_USE_RGBA_FOR_POINT_SHADOWS - defined on platforms where point light shadowmaps use RGBA textures with encoded depth (other platforms use single-channel floating point textures).",687],["UNITY_ATTEN_CHANNEL - which channel of light attenuation texture contains the data; used in per-pixel lighting code. Defined to either 'r' or 'a'.",687],["UNITY_HALF_TEXEL_OFFSET - defined on platforms that need a half-texel offset adjustment in mapping texels to pixels (e.g. Direct3D 9).",687],["UNITY_UV_STARTS_AT_TOP - always defined with value or 1 or 0; value of one is on platforms where texture V coordinate is zero at \"top of the texture\". Direct3D-like platforms use value of 1; OpenGL-like platforms use value of 0.",687],["UNITY_MIGHT_NOT_HAVE_DEPTH_TEXTURE - defined if a platform might emulate shadow maps or depth textures by manually rendering depth into a texture.",687],["UNITY_PROJ_COORD(a) - given a 4-component vector, return a texture coordinate suitable for projected texture reads. On most platforms this returns the given value directly.",687],["UNITY_NEAR_CLIP_VALUE - defined to the value of near clipping plane; Direct3D-like platforms use 0.0 while OpenGL-like platforms use -1.0.",687],["UNITY_VPOS_TYPE - data type requires for pixel position input (VPOS). float2 on D3D9, float4 elsewhere.",687],["UNITY_CAN_COMPILE_TESSELLATION - defined when the shader compiler \"understands\" tessellation shader HLSL syntax (currently only D3D11).",687],["UNITY_INITIALIZE_OUTPUT(type,name) - initialize variable name of given type to zero.",687],["UNITY_COMPILER_HLSL, UNITY_COMPILER_HLSL2GLSL, UNITY_COMPILER_CG - indicates which shader compiler is being used to compile shaders. Respectively, Microsoft's HLSL (used for DX9, DX11, XboxOne, Xbox360, WinRT), HLSL to GLSL translator (used for OpenGL &amp; iOS/Android), and NVIDIA's Cg (used for surface shader analysis and some Sony platforms). Use this if you run into very specific corner case shader syntax handling differences between the compilers, and want to write different code for each compiler.",687],["Shadow mapping macros",687],["Declaring and sampling shadow maps can be very different depending on the platform, so Unity has several macros to help with that:",687],["UNITY_DECLARE_SHADOWMAP(tex) - declares a shadowmap texture variable with name \"tex\".",687],["UNITY_SAMPLE_SHADOW(tex,uv) - samples shadowmap texture \"tex\" at given \"uv\" coordinate (XY components are texture location, Z component is depth to compare with). Returns single float value with the shadow term in 0..1 range.",687],["UNITY_SAMPLE_SHADOW_PROJ(tex,uv) - similar to above, but does a projective shadowmap read. \"uv\" is a float4, all other components are divided by .w for doing the lookup.",687],["Constant buffer macros",687],["Direct3D 11 groups all shader variables into \"constant buffers\". Most of Unity's built-in variables are already grouped, but for variables in your own shaders it might be more optimal to put them into separate constant buffers depending on expected frequency of updates.",687],["Use CBUFFER_START(name) and CBUFFER_END macros for that:",687],["CBUFFER_START(MyRarelyUpdatedVariables)",687],["float4 _SomeGlobalValue;",687],["CBUFFER_END",687],["Texture / Sampler declaration macros",687],["Usually you would use texture2D in shader code to declare a texture &amp; sampler pair.",687],["However, on some platforms (e.g. DX11) textures and samplers are separate objects;",687],["and maximum possible sampler count is quite limited. Unity has some macros to declare",687],["textures without samplers; and to sample a texture using a sampler from another texture.",687],["Use this if you end up running into sampler limits, and you know several of your",687],["textures can in fact share a sampler (sampler defines texture filtering &amp; wrapping modes).",687],["UNITY_DECLARE_TEX2D(name) - declares a texture + sampler pair.",687],["UNITY_DECLARE_TEX2D_NOSAMPLER(name) - declares a texture without a sampler.",687],["UNITY_SAMPLE_TEX2D(name,uv) - sample from a texture+sampler pair, using given texture coordinate.",687],["UNITY_SAMPLE_TEX2D_SAMPLER(name,samplername,uv) - sample from texture (name), using sampler from another texture (samplername).",687],["Surface shader pass indicators",687],["When Surface Shaders are compiled, they end up generating a lot of code for various passes to do lighting. When compiling each pass, one of the following macros is defined:",687],["UNITY_PASS_FORWARDBASE - forward rendering base pass (main directional light, lightmaps, SH).",687],["UNITY_PASS_FORWARDADD - forward rendering additive pass (one light per pass).",687],["UNITY_PASS_DEFERRED - deferred shading pass (renders g-buffer).",687],["UNITY_PASS_SHADOWCASTER - shadow caster and depth texture rendering pass.",687],["UNITY_PASS_PREPASSBASE - legacy deferred lighting base pass (renders normals &amp; specular exponent).",687],["UNITY_PASS_PREPASSFINAL - legacy deferred lighting final pass (applies lighting &amp; textures).",687],["Camera's Depth Texture",688],["In Unity a Camera can generate a depth or depth+normals texture. This is a minimalistic G-buffer texture that can be used for post-processing effects or to implement custom lighting models (e.g. light pre-pass). Camera actually builds the depth texture using Shader Replacement feature, so it's entirely possible to do that yourself, in case you need a different G-buffer setup.",688],["Camera's depth texture can be turned on using Camera.depthTextureMode variable from script.",688],["There are two possible depth texture modes:",688],["DepthTextureMode.Depth: a depth texture.",688],["DepthTextureMode.DepthNormals: depth and view space normals packed into one texture.",688],["DepthTextureMode.Depth texture",688],["This builds a screen-sized depth texture.",688],["DepthTextureMode.DepthNormals texture",688],["This builds a screen-sized 32 bit (8 bit/channel) texture, where view space normals are encoded into R&amp;G channels, and depth is encoded in B&amp;A channels. Normals are encoded using Stereographic projection, and depth is 16 bit value packed into two 8 bit channels.",688],["UnityCG.cginc include file has a helper function DecodeDepthNormal to decode depth and normal from the encoded pixel value. Returned depth is in 0..1 range.",688],["For examples on how to use the depth and normals texture, please refer to the EdgeDetection image effect in the Shader Replacement example project or Screen Space Ambient Occlusion Image Effect.",688],["Tips &amp; Tricks",688],["Camera inspector indicates when a camera is rendering a depth or a depth+normals texture.",688],["The way that depth textures are requested from the camera (Camera.depthTextureMode) might mean",688],["that after you disable some effect that needed them, the camera might still continue rendering them. Particularly with multiple effects present on a camera, where each of them needs a depth texture, there's no good way to automatically \"disable\" depth texture rendering if you disable the individual effects.",688],["When implementing complex shaders or Image Effects, keep Rendering Differences Between Platforms in mind. In particular, using depth texture in an Image Effect often needs special handling on Direct3D + Anti-Aliasing.",688],["In some cases, the depth texture might come directly from the native Z buffer. If you see artifacts in your depth texture, make sure that the shaders that use it do not write into the Z buffer (use ZWrite Off).",688],["Under the hood",688],["Depth texture can come directly from the actual depth buffer, or be rendered in a separate pass, depending on the rendering path used and the hardware. Typically when using Deferred Shading or Legacy Deferred Lighting rendering paths, the depth textures come \"for free\"",688],["since they are a product of the g-buffer anyway.",688],["When the depth texture is rendered in a separate pass, this is done through Shader Replacement. Hence it is important to have correct \"RenderType\" tag in your shaders.",688],["ShaderLab: Culling &amp; Depth Testing",689],["Culling is an optimization that does not render polygons facing away from the viewer. All polygons have a front and a back side. Culling makes use of the fact that most objects are closed; if you have a cube, you will never see the sides facing away from you (there is always a side facing you in front of it) so we don't need to draw the sides facing away. Hence the term: Backface culling.",689],["The other feature that makes rendering looks correct is Depth testing. Depth testing makes sure that only the closest surfaces objects are drawn in a scene.",689],["Syntax",689],["Cull",689],["Cull Back   Front   Off",689],["Controls which sides of polygons should be culled (not drawn)",689],["Back Don't render polygons facing away from the viewer (default).",689],["Front Don't render polygons facing towards the viewer. Used for turning objects inside-out.",689],["Off Disables culling - all faces are drawn. Used for special effects.",689],["ZWrite",689],["ZWrite On   Off",689],["Controls whether pixels from this object are written to the depth buffer (default is On). If you're drawng solid objects, leave this on. If you're drawing semitransparent effects, switch to ZWrite Off. For more details read below.",689],["ZTest",689],["ZTest Less   Greater   LEqual   GEqual   Equal   NotEqual   Always",689],["How should depth testing be performed. Default is LEqual (draw objects in from or at the distance as existing objects; hide objects behind them).",689],["Offset",689],["Offset Factor, Units",689],["Allows you specify a depth offset with two parameters. factor and units. Factor scales the maximum Z slope, with respect to X or Y of the polygon, and units scale the minimum resolvable depth buffer value. This allows you to force one polygon to be drawn on top of another although they are actually in the same position. For example Offset 0, -1 pulls the polygon closer to the camera ignoring the polygon's slope, whereas Offset -1, -1 will pull the polygon even closer when looking at a grazing angle.",689],["Examples",689],["This object will render only the backfaces of an object:",689],["Shader \"Show Insides\" {",689],["SubShader {",689],["Pass {",689],["Material {",689],["Diffuse (1,1,1,1)",689],["Lighting On",689],["Cull Front",689],["Try to apply it to a cube, and notice how the geometry feels all wrong when you orbit around it. This is because you're only seeing the inside parts of the cube.",689],["Transparent shader with depth writes",689],["Usually semitransparent shaders do not write into the depth buffer. However, this can create draw order problems, especially with complex non-convex meshes. If you want to fade in &amp; out meshes like that, then using a shader that fills in the depth buffer before rendering transparency might be useful.",689],["Shader \"Transparent/Diffuse ZWrite\" {",689],["Properties {",689],["_Color (\"Main Color\", Color) = (1,1,1,1)",689],["_MainTex (\"Base (RGB) Trans (A)\", 2D) = \"white\" {}",689],["SubShader {",689],["Tags {\"Queue\"=\"Transparent\" \"IgnoreProjector\"=\"True\" \"RenderType\"=\"Transparent\"}",689],["LOD 200",689],["// extra pass that renders to depth buffer only",689],["Pass {",689],["ZWrite On",689],["ColorMask 0",689],["// paste in forward rendering passes from Transparent/Diffuse",689],["UsePass \"Transparent/Diffuse/FORWARD\"",689],["Fallback \"Transparent/VertexLit\"",689],["Debugging Normals",689],["The next one is more interesting; first we render the object with normal vertex lighting, then we render the backfaces in bright pink. This has the effects of highlighting anywhere your normals need to be flipped. If you see physically-controlled objects getting 'sucked in' by any meshes, try to assign this shader to them. If any pink parts are visible, these parts will pull in anything unfortunate enough to touch it.",689],["Here we go:",689],["Shader \"Reveal Backfaces\" {",689],["Properties {",689],["_MainTex (\"Base (RGB)\", 2D) = \"white\" { }",689],["SubShader {",689],["// Render the front-facing parts of the object.",689],["// We use a simple white material, and apply the main texture.",689],["Pass {",689],["Material {",689],["Diffuse (1,1,1,1)",689],["Lighting On",689],["SetTexture [_MainTex] {",689],["Combine Primary * Texture",689],["// Now we render the back-facing triangles in the most",689],["// irritating color in the world: BRIGHT PINK!",689],["Pass {",689],["Color (1,0,1,1)",689],["Cull Front",689],["Glass Culling",689],["Controlling Culling is useful for more than debugging backfaces. If you have transparent objects, you quite often want to show the backfacing side of an object. If you render without any culling (Cull Off), you'll most likely have some rear faces overlapping some of the front faces.",689],["Here is a simple shader that will work for convex objects (spheres, cubes, car windscreens).",689],["Shader \"Simple Glass\" {",689],["Properties {",689],["_Color (\"Main Color\", Color) = (1,1,1,0)",689],["_SpecColor (\"Spec Color\", Color) = (1,1,1,1)",689],["_Emission (\"Emmisive Color\", Color) = (0,0,0,0)",689],["_Shininess (\"Shininess\", Range (0.01, 1)) = 0.7",689],["_MainTex (\"Base (RGB)\", 2D) = \"white\" { }",689],["SubShader {",689],["// We use the material in many passes by defining them in the subshader.",689],["// Anything defined here becomes default values for all contained passes.",689],["Material {",689],["Diffuse [_Color]",689],["Ambient [_Color]",689],["Shininess [_Shininess]",689],["Specular [_SpecColor]",689],["Emission [_Emission]",689],["Lighting On",689],["SeparateSpecular On",689],["// Set up alpha blending",689],["Blend SrcAlpha OneMinusSrcAlpha",689],["// Render the back facing parts of the object.",689],["// If the object is convex, these will always be further away",689],["// than the front-faces.",689],["Pass {",689],["Cull Front",689],["SetTexture [_MainTex] {",689],["Combine Primary * Texture",689],["// Render the parts of the object facing us.",689],["// If the object is convex, these will be closer than the",689],["// back-faces.",689],["Pass {",689],["Cull Back",689],["SetTexture [_MainTex] {",689],["Combine Primary * Texture",689],["ShaderLab: CustomEditor",690],["A CustomEditor can be defined for your shader. When you do this Unity will look for a class that extends ShaderGUI with this name. If one is found any material that uses this shader will use this ShaderGUI. See Custom Shader GUI for examples.",690],["Syntax",690],["CustomEditor \"name\"",690],["Use the ShaderGUI with a given name.",690],["Details",690],["A CustomEditor statement effects all materials that use this Shader",690],["Example",690],["Shader \"example\" {",690],["// properties and subshaders here...",690],["CustomEditor \"MyCustomEditor\"",690],["Custom Shader GUI",691],["Sometimes you have a shader with some interesting data types that can not be nicely represented using the built in Unity material editor. Unity provides a way to override the default way shader properties are presented so that you can define your own. You can use this feature to define custom controls and data range validation.",691],["The first part to writing custom editor for your shader's gui is defining a shader that requires a Custom Editor. The name you use for the custom editor is the class that will be looked up by Unity for the material editor.",691],["To define a custom editor you extend from the ShaderGUI class and place the script below an Editor folder in the assets directory.",691],["using UnityEditor;",691],["public class CustomShaderGUI : ShaderGUI",691],["public override void OnGUI (MaterialEditor materialEditor, MaterialProperty[] properties)",691],["base.OnGUI (materialEditor, properties);",691],["Any shader that has a custom editor defined (CustomEditor \"CustomShaderGUI\") will instantiate an instance of the shader gui class listed above and execute the associated code.",691],["A simple example",691],["So we have a situation where we have a shader that can work in two modes; it renders standard diffuse lighting or it renders the blue and green channels with 50%.",691],["Shader \"Custom/Redify\" {",691],["Properties {",691],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",691],["SubShader {",691],["Tags { \"RenderType\"=\"Opaque\" }",691],["LOD 200",691],["CGPROGRAM",691],["pragma surface surf Lambert addshadow",691],["pragma shader_feature REDIFY_ON",691],["sampler2D _MainTex;",691],["struct Input {",691],["float2 uv_MainTex;",691],["};",691],["void surf (Input IN, inout SurfaceOutput o) {",691],["half4 c = tex2D (MainTex, IN.uvMainTex);",691],["o.Albedo = c.rgb;",691],["o.Alpha = c.a;",691],["if REDIFY_ON",691],["o.Albedo.gb *= 0.5;",691],["endif",691],["ENDCG",691],["CustomEditor \"CustomShaderGUI\"",691],["As you can see the shader has a Keyword available for setting: REDIFY_ON. This can be changed be set on a per material basis by using the shaderKeywords property of the material. Below is an ShaderGUI instance that does this.",691],["using UnityEngine;",691],["using UnityEditor;",691],["using System;",691],["public class CustomShaderGUI : ShaderGUI",691],["public override void OnGUI(MaterialEditor materialEditor, MaterialProperty[] properties)",691],["// render the default gui",691],["base.OnGUI(materialEditor, properties);",691],["Material targetMat = materialEditor.target as Material;",691],["// see if redify is set, and show a checkbox",691],["bool redify = Array.IndexOf(targetMat.shaderKeywords, \"REDIFY_ON\") != -1;",691],["EditorGUI.BeginChangeCheck();",691],["redify = EditorGUILayout.Toggle(\"Redify material\", redify);",691],["if (EditorGUI.EndChangeCheck())",691],["// enable or disable the keyword based on checkbox",691],["if (redify)",691],["targetMat.EnableKeyword(\"REDIFY_ON\");",691],["else",691],["targetMat.DisableKeyword(\"REDIFY_ON\");",691],["For a more comprehensive ShaderGUI example see the StandardShaderGUI.cs file together with the Standard.shader found in the 'Built-in shaders' package that can be downloaded from Unity Download Archive.",691],["Note that the simple example above could also be solved much simpler using MaterialPropertyDrawers. Add the following line to the Properties section of the Custom/Redify shader:",691],["[Toggle(REDIFY_ON)] _Redify(\"Red?\", Int) = 0",691],["and remove the:",691],["CustomEditor \"CustomShaderGUI\"",691],["Also see: MaterialPropertyDrawer",691],["ShaderGUI should be used for more complex shader gui solutions where where e.g. material properties have dependencies on each other or special layout is wanted. You can combine using MaterialPropertyDrawers with ShaderGUI classes, see StandardShaderGUI.cs.",691],["Debugging DirectX 11 shaders with Visual Studio",692],["In Visual Studio 2012, Microsoft has indroduced Graphics Debugger, you can use it to capture a frame from platforms like Unity Editor, Windows Standalone or Windows Store Apps.",692],["It's recommended to use Visual Studio 2013, as it contains several fixes for Graphics Debugger.",692],["Note: Unity Editor contains multiple child windows inside, this may cause Graphics Debugger to capture frame from incorrect window, to ensure that correct window will be captured, check 'Maximize on Play' tab, and hit Play button before capturing, but even then there's no guarantee that the correct window will be captured, that's why it's not recommended to use Unity Editor for frame capturing.",692],["Note: Frames can only be captured if Unity is running under DirectX 11, you can select DirectX 11 from Player Settings (PC, Mac &amp; LinuxStandalone) -> Other Settings.",692],["Steps to capture frame from Unity Editor or Windows Standalone:",692],["Launch Visual Studio 2013",692],["Go to File->New->Project->Visual C++->Empty Project",692],["Go to Project->Properties->Configuration Properties->Debugging",692],["In Command field, replace $(TargetPath) with path to Unity Editor or Windows Standalone, for ex., C:\\MyApp\\MyApp.exe",692],["(Optional) In Command Arguments specify -force-d3d11, this will force Windows Standalone or Unity Editor to run under DirectX 11",692],["You're ready to run Graphics Debugger, go to Debug->Graphics->Start Diagnostics",692],["If everything is configured correctly you should see \"Use 'Print Screen' key to capture a frame\" message in top left corner of the application. See screenshot below.",692],["Steps to debug DirectX 11 shader:",692],["To debug a shader you have to compile with debug symbols, to do that, you have insert #pragma enable_d3d11_debug_symbols",692],["Let's try to create a basic example:",692],["Create a new Unity project",692],["Create a new shader in Assets window",692],["Insert #pragma enable_d3d11_debug_symbols",692],["Create a new material and select your custom shader",692],["Assign a material to some object, for ex., a cube",692],["Build Windows Standalone application",692],["Capture a frame with steps mentioned above",692],["Your shader should look like this:",692],["Shader \"Custom/NewShader\" {",692],["Properties {",692],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",692],["SubShader {",692],["Tags { \"RenderType\"=\"Opaque\" }",692],["LOD 200",692],["CGPROGRAM",692],["pragma surface surf Lambert",692],["pragma enable_d3d11_debug_symbols",692],["sampler2D _MainTex;",692],["struct Input {",692],["float2 uv_MainTex;",692],["};",692],["void surf (Input IN, inout SurfaceOutput o) {",692],["half4 c = tex2D (MainTex, IN.uvMainTex);",692],["o.Albedo = c.rgb;",692],["o.Alpha = c.a;",692],["ENDCG",692],["FallBack \"Diffuse\"",692],["If everything done correctly, you should see the following captured frame, right click and select Pixel History and select the pixel of an object which has your custom shader assigned.",692],["Click the play button next to the Vertex Shader (circled in red in screenshot above), you should be able to debug vertex shader.",692],["Windows Store Apps",692],["For Windows Store Apps, it's a bit easier, because you don't need to create a dummy Visual Studio project, the project is already created by Unity.",692],["Steps for capturing the frame and shader debugging are the same like for Unity Editor or Windows Standalone.",692],["Using Depth Textures",693],["It is possible to create Render Textures where each pixel contains a high precision \"depth\" value (see RenderTextureFormat.Depth). This is mostly used when some effects need scene's depth to be available (for example, soft particles, screen space ambient occlusion, translucency would all need scene's depth).",693],["Pixel values in the depth texture range from 0 to 1 with a nonlinear distribution. Precision is usually 24 or 16 bits, depending on depth buffer used. When reading from depth texture, a high precision value in 0..1 range is returned. If you need to get distance from the camera, or otherwise linear value, you should compute that manually.",693],["Depth textures in Unity are implemented differently on different platforms.",693],["On Direct3D 9 (Windows), depth texture is either a native depth buffer, or a single channel 32 bit floating point texture (\"R32F\" Direct3D format).",693],["Graphics card must support either native depth buffer (INTZ format) or floating point render textures in order for them to work.",693],["When rendering into the depth texture, fragment program must output the value needed.",693],["When reading from depth texture, red component of the color contains the high precision value.",693],["On OpenGL (Mac OS X), depth texture is the native OpenGL depth buffer (see ARB_depth_texture).",693],["Graphics card must support OpenGL 1.4 or ARB_depth_texture extension.",693],["Depth texture corresponds to Z buffer contents that are rendered, it does not use the result from the fragment program.",693],["OpenGL ES 2.0 (iOS/Android) is very much like OpenGL above.",693],["GPU must support GL_OES_depth_texture extension.",693],["Direct3D 11 (Windows) has native depth texture capability just like OpenGL.",693],["Using depth texture helper macros",693],["Most of the time depth textures are used to render depth from the camera. UnityCG.cginc include file contains some macros to deal with the above complexity in this case:",693],["UNITY_TRANSFER_DEPTH(o): computes eye space depth of the vertex and outputs it in o (which must be a float2). Use it in a vertex program when rendering into a depth texture. On platforms with native depth textures this macro does nothing at all, because Z buffer value is rendered implicitly.",693],["UNITY_OUTPUT_DEPTH(i): returns eye space depth from i (which must be a float2). Use it in a fragment program when rendering into a depth texture. On platforms with native depth textures this macro always returns zero, because Z buffer value is rendered implicitly.",693],["COMPUTE_EYEDEPTH(i): computes eye space depth of the vertex and outputs it in o. Use it in a vertex program when not rendering into a depth texture.",693],["DECODE_EYEDEPTH(i): given high precision value from depth texture i, returns corresponding eye space depth. This macro just returns i*FarPlane on Direct3D. On platforms with native depth textures it linearizes and expands the value to match camera's range.",693],["For example, this shader would render depth of its objects:",693],["Shader \"Render Depth\" {",693],["SubShader {",693],["Tags { \"RenderType\"=\"Opaque\" }",693],["Pass {",693],["Fog { Mode Off }",693],["CGPROGRAM",693],["pragma vertex vert",693],["pragma fragment frag",693],["include \"UnityCG.cginc\"",693],["struct v2f {",693],["float4 pos : SV_POSITION;",693],["float2 depth : TEXCOORD0;",693],["};",693],["v2f vert (appdata_base v) {",693],["v2f o;",693],["o.pos = mul (UNITY_MATRIX_MVP, v.vertex);",693],["UNITY_TRANSFER_DEPTH(o.depth);",693],["return o;",693],["half4 frag(v2f i) : SV_Target {",693],["UNITY_OUTPUT_DEPTH(i.depth);",693],["ENDCG",693],["ShaderLab: Fallback",694],["After all Subshaders a Fallback can be defined. It basically says \"if none of subshaders can run on this hardware, try using the ones from another shader\".",694],["Syntax",694],["Fallback \"name\"",694],["Fallback to shader with a given name or...",694],["Fallback Off",694],["Explicitly state that there is no fallback and no warning should be printed, even if no subshaders can run on this hardware.",694],["Details",694],["A fallback statement has the same effect as if all subshaders from the other shader would be inserted into its place.",694],["Example",694],["Shader \"example\" {",694],["// properties and subshaders here...",694],["Fallback \"otherexample\"",694],["ShaderLab: Fog",695],["Fog parameters are controlled with Fog command.",695],["Fogging blends the color of the generated pixels down towards a constant color based on distance from camera. Fogging does not modify a blended pixel's alpha value, only its RGB components.",695],["Syntax",695],["Fog",695],["Fog {Fog Commands}",695],["Specify fog commands inside curly braces.",695],["Mode",695],["Mode Off   Global   Linear   Exp   Exp2",695],["Defines fog mode. Default is global, which translates to Off or Exp2 depending whether fog is turned on in Render Settings.",695],["Color",695],["Color ColorValue",695],["Sets fog color.",695],["Density",695],["Density FloatValue",695],["Sets density for exponential fog.",695],["Range",695],["Range FloatValue, FloatValue",695],["Sets near &amp; far range for linear fog.",695],["Details",695],["Default fog settings are based on Render Settings: fog mode is either Exp2 or Off; density &amp; color taken from settings as well.",695],["Note that if you use fragment programs, Fog settings of the shader will still be applied. On platforms where there is no fixed function Fog functionality, Unity will patch shaders at runtime to support the requested Fog mode.",695],["GLSL Shader Programs",696],["In addition to using Cg/HSL shader programs, OpenGL Shading Language (GLSL) shaders can be written directly.",696],["However, use of raw GLSL is only recommended for testing, or when you know you will only target Mac OS X, OpenGL ES 2.0 mobile devices or Linux. In all normal cases, Unity will cross-compile Cg/HLSL into optimized GLSL when needed.",696],["GLSL snippets",696],["GLSL program snippets are written between GLSLPROGRAM and ENDGLSL keywords.",696],["In GLSL, all shader function entry points have to be called main(). When Unity loads the GLSL shader, it loads the source once for the vertex program, with the VERTEX preprocessor define, and once more for the fragment program, with the FRAGMENT preprocessor define. So the way to separate vertex and fragment program parts in GLSL snippet is to surround them with #ifdef VERTEX .. #endif and #ifdef FRAGMENT .. #endif. Each GLSL snippet must contain both a vertex program and a fragment program.",696],["Standard include files match those provided for Cg shaders; they just have a .glslinc extension:",696],["UnityCG.glslinc",696],["Vertex shader inputs come from predefined GLSL variables (gl_Vertex, gl_MultiTexCoord0, ...) or are user defined attributes. Usually only the tangent vector needs a user defined attribute:",696],["attribute vec4 Tangent;",696],["Data from vertex to fragment programs is passed through varying variables, for example:",696],["varying vec3 lightDir; // vertex shader computes this, fragment shader uses this",696],["ShaderLab: GrabPass",697],["GrabPass is a special passtype - it grabs the contents of the screen where the object is about to be drawn into a texture. This texture can be used in subsequent passes to do advanced image based effects.",697],["Syntax",697],["The GrabPass belongs inside a subshader. It can take two forms:",697],["Just GrabPass { } will grab current screen contents into a texture. The texture can be accessed in further passes by _GrabTexture name. Note: this form of grab pass will do the expensive screen grabbing operation for each object that uses it!",697],["GrabPass { \"TextureName\" } will grab screen contents into a texture, but will only do that once per frame for the first object that uses the given texture name. The texture can be accessed in further passes by the given texture name. This is a more performant way when you have multiple objects using grab pass in the scene.",697],["Additionally, GrabPass can use Name and Tags commands.",697],["Example",697],["Here is an expensive way to invert the colors of what was rendered before:",697],["Shader \"GrabPassInvert\"",697],["SubShader",697],["// Draw ourselves after all opaque geometry",697],["Tags { \"Queue\" = \"Transparent\" }",697],["// Grab the screen behind the object into _GrabTexture",697],["GrabPass { }",697],["// Render the object with the texture generated above, and invert the colors",697],["Pass",697],["SetTexture [_GrabTexture] { combine one-texture }",697],["This shader has two passes: First pass grabs whatever is behind the object at the time of rendering, then applies that in the second pass. Now of course, the same effect could be achieved much cheaper using an invert blend mode.",697],["See Also",697],["Implementing Fixed Function TexGen in Shaders",698],["Before Unity 5, texture properties could have options inside the",698],["curly brace block, e.g. TexGen CubeReflect. These were controlling fixed function",698],["texture coordinate generation. This functionality was removed in Unity 5.0; if you need",698],["texgen you should write a vertex shader instead.",698],["This page shows how to implement each of fixed function TexGen modes from Unity 4.",698],["Cubemap reflection (TexGen CubeReflect)",698],["TexGen CubeReflect is typically used for simple cubemap reflections.",698],["It reflects view direction along the normal in view space, and uses that as the UV",698],["coordinate.",698],["Shader \"TexGen/CubeReflect\" {",698],["Properties {",698],["_Cube (\"Cubemap\", Cube) = \"\" { /* used to be TexGen CubeReflect */ }",698],["SubShader {",698],["Pass {",698],["CGPROGRAM",698],["pragma vertex vert",698],["pragma fragment frag",698],["include \"UnityCG.cginc\"",698],["struct v2f {",698],["float4 pos : SV_POSITION;",698],["float3 uv : TEXCOORD0;",698],["};",698],["v2f vert (float4 v : POSITION, float3 n : NORMAL)",698],["v2f o;",698],["o.pos = mul(UNITY_MATRIX_MVP, v);",698],["// TexGen CubeReflect:",698],["// reflect view direction along the normal,",698],["// in view space",698],["float3 viewDir = normalize(ObjSpaceViewDir(v));",698],["o.uv = reflect(-viewDir, n);",698],["o.uv = mul(UNITY_MATRIX_MV, float4(o.uv,0));",698],["return o;",698],["samplerCUBE _Cube;",698],["half4 frag (v2f i) : SV_Target",698],["return texCUBE(_Cube, i.uv);",698],["ENDCG",698],["Cubemap normal (TexGen CubeNormal)",698],["TexGen CubeNormal is typically used with cubemaps too.",698],["It uses view space normal as the UV coordinate.",698],["Shader \"TexGen/CubeNormal\" {",698],["Properties {",698],["_Cube (\"Cubemap\", Cube) = \"\" { /* used to be TexGen CubeNormal */ }",698],["SubShader {",698],["Pass {",698],["CGPROGRAM",698],["pragma vertex vert",698],["pragma fragment frag",698],["include \"UnityCG.cginc\"",698],["struct v2f {",698],["float4 pos : SV_POSITION;",698],["float3 uv : TEXCOORD0;",698],["};",698],["v2f vert (float4 v : POSITION, float3 n : NORMAL)",698],["v2f o;",698],["o.pos = mul(UNITY_MATRIX_MVP, v);",698],["// TexGen CubeNormal:",698],["// use view space normal of the object",698],["o.uv = mul((float3x3)UNITY_MATRIX_IT_MV, n);",698],["return o;",698],["samplerCUBE _Cube;",698],["half4 frag (v2f i) : SV_Target",698],["return texCUBE(_Cube, i.uv);",698],["ENDCG",698],["Object space coordinates (TexGen ObjectLinear)",698],["TexGen ObjectLinear used object space vertex position as UV coordinate.",698],["Shader \"TexGen/ObjectLinear\" {",698],["Properties {",698],["_MainTex (\"Texture\", 2D) = \"\" { /* used to be TexGen ObjectLinear */ }",698],["SubShader {",698],["Pass {",698],["CGPROGRAM",698],["pragma vertex vert",698],["pragma fragment frag",698],["include \"UnityCG.cginc\"",698],["struct v2f {",698],["float4 pos : SV_POSITION;",698],["float3 uv : TEXCOORD0;",698],["};",698],["v2f vert (float4 v : POSITION)",698],["v2f o;",698],["o.pos = mul(UNITY_MATRIX_MVP, v);",698],["// TexGen ObjectLinear:",698],["// use object space vertex position",698],["o.uv = v.xyz;",698],["return o;",698],["sampler2D _MainTex;",698],["half4 frag (v2f i) : SV_Target",698],["return tex2D(_MainTex, i.uv.xy);",698],["ENDCG",698],["View space coordinates (TexGen EyeLinear)",698],["TexGen EyeLinear used view space vertex position as UV coordinate.",698],["Shader \"TexGen/EyeLinear\" {",698],["Properties {",698],["_MainTex (\"Texture\", 2D) = \"\" { /* used to be TexGen EyeLinear */ }",698],["SubShader {",698],["Pass {",698],["CGPROGRAM",698],["pragma vertex vert",698],["pragma fragment frag",698],["include \"UnityCG.cginc\"",698],["struct v2f {",698],["float4 pos : SV_POSITION;",698],["float3 uv : TEXCOORD0;",698],["};",698],["v2f vert (float4 v : POSITION)",698],["v2f o;",698],["o.pos = mul(UNITY_MATRIX_MVP, v);",698],["// TexGen EyeLinear:",698],["// use view space vertex position",698],["o.uv = mul(UNITY_MATRIX_MV, v).xyz;",698],["return o;",698],["sampler2D _MainTex;",698],["half4 frag (v2f i) : SV_Target",698],["return tex2D(_MainTex, i.uv.xy);",698],["ENDCG",698],["Spherical environment mapping (TexGen SphereMap)",698],["TexGen SphereMap computes UV coordinates for spherical environment mapping.",698],["See OpenGL TexGen reference for the formula.",698],["Shader \"TexGen/SphereMap\" {",698],["Properties {",698],["_MainTex (\"Texture\", 2D) = \"\" { /* used to be TexGen SphereMap */ }",698],["SubShader {",698],["Pass {",698],["CGPROGRAM",698],["pragma vertex vert",698],["pragma fragment frag",698],["include \"UnityCG.cginc\"",698],["struct v2f {",698],["float4 pos : SV_POSITION;",698],["float2 uv : TEXCOORD0;",698],["};",698],["v2f vert (float4 v : POSITION, float3 n : NORMAL)",698],["v2f o;",698],["o.pos = mul(UNITY_MATRIX_MVP, v);",698],["// TexGen SphereMap",698],["float3 viewDir = normalize(ObjSpaceViewDir(v));",698],["float3 r = reflect(-viewDir, n);",698],["r = mul((float3x3)UNITY_MATRIX_MV, r);",698],["r.z += 1;",698],["float m = 2 * length(r);",698],["o.uv = r.xy / m + 0.5;",698],["return o;",698],["sampler2D _MainTex;",698],["half4 frag (v2f i) : SV_Target",698],["return tex2D(_MainTex, i.uv);",698],["ENDCG",698],["ShaderLab: Legacy Lighting",699],["The material and lighting parameters are used to control the built-in vertex lighting. Vertex lighting is the standard Direct3D/OpenGL lighting model that is computed for each vertex. Lighting on turns it on. Lighting is affected by Material block, ColorMaterial and SeparateSpecular commands.",699],["Note: Material/Lighting commands have no effect when vertex programs are used; as in that case all calculations are completely described in the shader. It is advisable to use programmable shaders these days instead of legacy vertex lighting. For these you don't use any of the commands described here, instead you define your own vertex and fragment programs where you do all lighting, texturing and anything else yourself.*",699],["Vertex Coloring &amp; Lighting is the first effect to be calculated for any rendered geometry. It operates on the vertex level, and calculates the base color that is used before textures are applied.",699],["Syntax",699],["The top level commands control whether to use fixed function lighting or not, and some configuration options. The main setup is in the Material Block, detailed further below.",699],["Color",699],["Color color",699],["Sets the object to a solid color. A color is either four RGBA values in parenthesis, or a color property name in square brackets.",699],["Material",699],["Material {Material Block}",699],["The Material block is used to define the material properties of the object.",699],["Lighting",699],["Lighting On   Off",699],["For the settings defined in the Material block to have any effect, you must enable Lighting with the Lighting On command. If lighting is off instead, the color is taken straight from the Color command.",699],["SeparateSpecular",699],["SeparateSpecular On   Off",699],["This command makes specular lighting be added to the end of the shader pass, so specular lighting is unaffected by texturing. Only has effect when Lighting On is used.",699],["ColorMaterial",699],["ColorMaterial AmbientAndDiffuse   Emission",699],["Makes per-vertex color be used instead of the colors set in the material. AmbientAndDiffuse replaces Ambient and Diffuse values of the material; Emission replaces Emission value of the material.",699],["Material Block",699],["This contains settings for how the material reacts to the light. Any of these properties can be left out, in which case they default to black (i.e. have no effect).",699],["Diffuse color: The diffuse color component. This is an object's base color.",699],["Ambient color: The ambient color component. This is the color the object has when it's hit by the ambient light set in the class-RenderSettings.",699],["Specular color: The color of the object's specular highlight.",699],["Shininess number: The sharpness of the highlight, between 0 and 1. At 0 you get a huge highlight that looks a lot like diffuse lighting, at 1 you get a tiny speck.",699],["Emission color: The color of the object when it is not hit by any light.",699],["The full color of lights hitting the object is:",699],["Ambient * RenderSettings ambient setting +",699],["(Light Color * Diffuse + Light Color * Specular) + Emission",699],["The light parts of the equation (within parenthesis) is repeated for all lights that hit the object.",699],["Typically you want to keep the Diffuse and Ambient colors the same (all built-in Unity shaders do this).",699],["Examples",699],["Always render object in pure red:",699],["Shader \"Solid Red\" {",699],["SubShader {",699],["Pass { Color (1,0,0,0) }",699],["Basic Shader that colors the object white and applies vertex lighting:",699],["Shader \"VertexLit White\" {",699],["SubShader {",699],["Pass {",699],["Material {",699],["Diffuse (1,1,1,1)",699],["Ambient (1,1,1,1)",699],["Lighting On",699],["An extended version that adds material color as a property visible in Material Inspector:",699],["Shader \"VertexLit Simple\" {",699],["Properties {",699],["_Color (\"Main Color\", COLOR) = (1,1,1,1)",699],["SubShader {",699],["Pass {",699],["Material {",699],["Diffuse [_Color]",699],["Ambient [_Color]",699],["Lighting On",699],["And finally, a full fledged vertex-lit shader (see also SetTexture reference page):",699],["Shader \"VertexLit\" {",699],["Properties {",699],["_Color (\"Main Color\", Color) = (1,1,1,0)",699],["_SpecColor (\"Spec Color\", Color) = (1,1,1,1)",699],["_Emission (\"Emmisive Color\", Color) = (0,0,0,0)",699],["_Shininess (\"Shininess\", Range (0.01, 1)) = 0.7",699],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",699],["SubShader {",699],["Pass {",699],["Material {",699],["Diffuse [_Color]",699],["Ambient [_Color]",699],["Shininess [_Shininess]",699],["Specular [_SpecColor]",699],["Emission [_Emission]",699],["Lighting On",699],["SeparateSpecular On",699],["SetTexture [_MainTex] {",699],["Combine texture * primary DOUBLE, texture * primary",699],["Making multiple shader program variants",700],["Often it is convenient to keep most of a piece of shader code fixed but also allow slightly different shader \"variants\" to be produced. This is commonly called \"mega shaders\" or \"uber shaders\", and is achieved by compiling the shader code multiple times with different preprocessor directives for each case.",700],["In Unity this can be achieved by adding a #pragma multi_compile or #pragma shader_feature directive to a shader snippet. At runtime, the appropriate shader variant is picked up from the Material keywords (Material.EnableKeyword and DisableKeyword) or global shader keywords (Shader.EnableKeyword and DisableKeyword).",700],["How multi_compile works",700],["A directive like:",700],["pragma multi_compile FANCY_STUFF_OFF FANCY_STUFF_ON",700],["Will produce two shader variants, one with FANCY_STUFF_OFF defined, and another with FANCY_STUFF_ON. At runtime, one of them will be activated based on the Material or global shader keywords. If neither of these two keywords are enabled then the first one (\"off\") will be used.",700],["There can be more than two keywords on a multi_compile line, for example this will produce four shader variants:",700],["pragma multi_compile SIMPLE_SHADING BETTER_SHADING GOOD_SHADING BEST_SHADING",700],["When any of the names are all underscores, then a shader variant will be produced, with no preprocessor macro defined. This is commonly used for shaders features, to avoid using up two keywords (see notes on keywork limit below). For example, the directive below will produce two shader variants; first one with nothing defined, and second one with FOO_ON defined:",700],["pragma multi_compile _ FOOON",700],["Difference between shader_feature and multi_compile",700],["#pragma shader_feature is very similar to #pragma multi_compile, the only difference is that unused variants of shader_feature shaders will not be included into game build. So shader_feature makes most sense for keywords that will be set on the materials, while multi_compile for keywords that will be set from code globally.",700],["Additionally, it has a shorthand notation with just one keyword:",700],["pragma multi_compile FANCY_STUFF",700],["Which is just a shortcut for #pragma shader_feature _ FANCY_STUFF, i.e. it expands into two shader variants (first one without the define; second one with it).",700],["Combining several multi_compile lines",700],["Several multi_compile lines can be provided, and the resulting shader will be compiled for all possible combinations of the lines:",700],["pragma multi_compile A B C",700],["pragma multi_compile D E",700],["This would produce three variants for first line, and two for the second line, or in total six shader variants (A+D, B+D, C+D, A+E, B+E, C+E).",700],["It's easiest to think of each multi_compile line as controlling a single shader \"feature\". Keep in mind that the total number of shader variants grows really fast this way. For example, ten multi_compile \"features\" with two options each produces 1024 shader variants in total!",700],["Keyword limit",700],["When using shader variants, you should bear in mind that there is a limit of 128 keywords in Unity and a few of these are used internally and therefore subtract from the limit. Also, the keywords are enabled globally throughout a particular Unity project so you should be careful not to exceed the limit when multiple keywords are defined in several different shaders.",700],["See Also",700],["Optimizing Shader Load Time.",700],["ShaderLab: Name",701],["Syntax",701],["Name \"PassName\"",701],["Gives the PassName name to the current pass. Note that internally the names are turned to uppercase.",701],["Details",701],["A pass can be given a name so that a UsePass command can reference it.",701],["ShaderLab: other commands",702],["Category",702],["Category is a logical grouping of any commands below it. This is mostly used to \"inherit\" rendering state. For example, your shader might have multiple subshaders, and each of them requires fog to be off, blending set to additive, etc. You can use Category for that:",702],["Shader \"example\" {",702],["Category {",702],["Fog { Mode Off }",702],["Blend One One",702],["SubShader {",702],["// ...",702],["SubShader {",702],["// ...",702],["// ...",702],["Category block only affects shader parsing, it's exactly the same as \"pasting\" any state set inside Category into all blocks below it. It does not affect shader execution speed at all.",702],["ShaderLab: Pass",703],["The Pass block causes the geometry of an object to be rendered once.",703],["Syntax",703],["Pass {[Name and Tags] [RenderSetup] [TextureSetup] }",703],["The basic pass command contains an optional list of render setup commands, optionally followed by a list of textures to use.",703],["Name and tags",703],["A Pass can define its Name and arbitrary number of Tags - name/value strings that communicate Pass' intent to the rendering engine.",703],["Render Setup",703],["A pass sets up various states of the graphics hardware, for example should alpha blending be turned on, should fog be used, and so on. The commands are these:",703],["Material",703],["Material {Material Block}",703],["Defines a material to use in a vertex lighting pipeline. See Material page for details.",703],["Lighting",703],["Lighting On   Off",703],["Turn vertex lighting on or off. See Material page for details.",703],["Cull",703],["Cull Back   Front   Off",703],["Set polygon culling mode. See Cull and Depth page for details.",703],["ZTest",703],["ZTest (Less   Greater   LEqual   GEqual   Equal   NotEqual   Always)",703],["Set depth testing mode. See Cull and Depth page for details.",703],["ZWrite",703],["ZWrite On   Off",703],["Set depth writing mode. See Cull and Depth page for details.",703],["Fog",703],["Fog {Fog Block}",703],["Set fog parameters. See Fog page for details.",703],["AlphaTest",703],["AlphaTest (Less   Greater   LEqual   GEqual   Equal   NotEqual   Always) CutoffValue",703],["Turns on alpha testing. See Alpha Testing page for details.",703],["Blend",703],["Blend SourceBlendMode DestBlendMode",703],["Sets alpha blending mode. See Blending page for details.",703],["Color",703],["Color Color-value",703],["Sets color to use if vertex lighting is turned off. See Material page for details.",703],["ColorMask",703],["ColorMask RGB   A   0   any combination of R, G, B, A",703],["Set color writing mask. Writing ColorMask 0 turns off rendering to all color channels. See Material page for details.",703],["Offset",703],["Offset OffsetFactor, OffsetUnits",703],["Set Z buffer depth offset. See Cull and Depth page for details.",703],["SeparateSpecular",703],["SeparateSpecular On   Off",703],["Turns separate specular color for vertex lighting on or off. See Material page for details.",703],["ColorMaterial",703],["ColorMaterial AmbientAndDiffuse   Emission",703],["Uses per-vertex color when computing vertex lighting. See Material page for details.",703],["Texture Setup",703],["After the render state setup, you can specify a number of textures and their combining modes to apply using SetTexture commands: SetTexture texture property { [Combine options] }",703],["The texture setup configures fixed function multitexturing pipeline, and is ignored if custom fragment shaders are used.",703],["Details",703],["Per-pixel Lighting",703],["The per-pixel lighting pipeline works by rendering objects in multiple passes. Unity renders the object once to get ambient and any vertex lights in. Then it renders each pixel light affecting the object in a separate additive pass. See Render Pipeline for details.",703],["Per-vertex Lighting",703],["Per-vertex lighting is the standard Direct3D/OpenGL lighting model that is computed for each vertex. Lighting on turns it on. Lighting is affected by Material block, ColorMaterial and SeparateSpecular commands. See Material page for details.",703],["See Also",703],["There are several special passes available for reusing common functionality or implementing various high-end effects:",703],["UsePass includes named passes from another shader.",703],["GrabPass grabs the contents of the screen into a texture, for use in a later pass.",703],["ShaderLab: Pass Tags",704],["Passes use tags to tell how and when they expect to be rendered to the rendering engine.",704],["Syntax",704],["Tags { \"TagName1\" = \"Value1\" \"TagName2\" = \"Value2\" }",704],["Specifies TagName1 to have Value1, TagName2 to have Value2. You can have as many tags as you like.",704],["Details",704],["Tags are basically key-value pairs. Inside a Pass tags are used to control which role this pass has in the lighting pipeline (ambient, vertex lit, pixel lit etc.) and some other options. Note that the following tags recognized by Unity must be inside Pass section and not inside SubShader!",704],["LightMode tag",704],["LightMode tag defines Pass' role in the lighting pipeline. See render pipeline for details. These tags are rarely used manually; most often shaders that need to interact with lighting are written as Surface Shaders and then all those details are taken care of.",704],["Possible values for LightMode tag are:",704],["Always: Always rendered; no lighting is applied.",704],["ForwardBase: Used in Forward rendering, ambient, main directional light, vertex/SH lights and lightmaps are applied.",704],["ForwardAdd: Used in Forward rendering; additive per-pixel lights are applied, one pass per light.",704],["Deferred: Used in Deferred Shading; renders g-buffer.",704],["ShadowCaster: Renders object depth into the shadowmap or a depth texture.",704],["PrepassBase: Used in legacy Deferred Lighting, renders normals and specular exponent.",704],["PrepassFinal: Used in legacy Deferred Lighting, renders final color by combining textures, lighting and emission.",704],["Vertex: Used in legacy Vertex Lit rendering when object is not lightmapped; all vertex lights are applied.",704],["VertexLMRGBM: Used in legacy Vertex Lit rendering when object is lightmapped; on platforms where lightmap is RGBM encoded (PC &amp; console).",704],["VertexLM: Used in legacy Vertex Lit rendering when object is lightmapped; on platforms where lightmap is double-LDR encoded (mobile platforms).",704],["RequireOptions tag",704],["A pass can indicate that it should only be rendered when some external conditions are met. This is done by using RequireOptions tag, whose value is a string of space separated options. Currently the options supported by Unity are:",704],["SoftVegetation: Render this pass only if Soft Vegetation is on in Quality Settings.",704],["See Also",704],["SubShaders can be given Tags as well, see SubShader Tags.",704],["Platform Specific Rendering Differences",705],["Unity runs on various platforms and in some cases there are differences in how things behave. Most of the time Unity hides the differences from you, but sometimes you can still bump into them.",705],["Render Texture Coordinates",705],["Vertical texture coordinate conventions differ between Direct3D, OpenGL and OpenGL ES:",705],["In Direct3D, the coordinate is zero at the top, and increases downwards.",705],["In OpenGL and OpenGL ES, the coordinate is zero at the bottom, and increases upwards.",705],["Most of the time this does not really matter, except when rendering into a Render Texture. In that case, Unity internally flips rendering upside down when rendering into a texture on Direct3D, so that the conventions match between the platforms.",705],["One case where this does not happen, is when Image Effects and Anti-Aliasing is used. In this case, Unity renders to screen to get anti-aliasing, and then \"resolves\" rendering into a RenderTexture for further processing with an Image Effect. The resulting source texture for an image effect is not flipped upside down on Direct3D (unlike all other Render Textures).",705],["If your Image Effect is a simple one (processes one texture at a time) then this does not really matter because Graphics.Blit takes care of that.",705],["However, if you're processing more than one RenderTexture together in your Image Effect, most likely they will come out at different vertical orientations (only in Direct3D-like platforms, and only when anti-aliasing is used). You need to manually \"flip\" the screen texture upside down in your vertex shader, like this:",705],["// On D3D when AA is used, the main texture and scene depth texture",705],["// will come out in different vertical orientations.",705],["// So flip sampling of the texture when that is the case (main texture",705],["// texel size will have negative Y).",705],["if UNITY_UV_STARTS_AT_TOP",705],["if (MainTexTexelSize.y &lt; 0)",705],["uv.y = 1-uv.y;",705],["endif",705],["Check out the Edge Detection scene in the Shader Replacement sample project for an example of this. Edge detection there uses both the screen texture and the Camera's Depth+Normals texture.",705],["Semantics used by shaders",705],["To get shaders working on all platforms, some special shader values should use these semantics:",705],["Vertex shader output (clip space) position: SV_POSITION. Sometimes shaders use POSITION semantics for that, but this will not work on Sony PS4 and will not work when tessellation is used.",705],["Fragment shader output color: SV_Target. Sometimes shaders use COLOR or COLOR0 for that, but again that will not work on PS4.",705],["AlphaTest and programmable shaders",705],["Some platforms, most notably mobile (OpenGL ES &amp; Metal) and Direct3D 11, do not have fixed function alpha testing functionality. When you are using programmable shaders, it's advisable to use the Cg/HLSL clip() function in the pixel shader instead.",705],["Direct3D 11 shader compiler is more picky about syntax",705],["Direct3D platforms use Microsoft's HLSL shader compiler. The HLSL compiler is more picky than other compilers about various subtle shader errors. For example, it won't accept function output values that aren't initialized properly.",705],["The most common places where you would run into this are:",705],["A Surface shader vertex modifier that has an \"out\" parameter. Make sure to initialize the output like this:",705],["void vert (inout appdata_full v, out Input o)",705],["UNITY_INITIALIZE_OUTPUT(Input,o);",705],["// ...",705],["Partially initialized values, e.g. a function returns float4, but the code only sets the .xyz values of it. Make sure to set all values or else change to float3 if you only need three values.",705],["Using tex2D in the vertex shader. This is not valid since UV derivatives don't exist in the vertex shader; you need to sample an explicit mip level instead, e.g. use tex2Dlod (tex, float4(uv,0,0)). You'll need to add #pragma target 3.0 since tex2Dlod is a shader model 3.0 feature.",705],["DirectX 11 HLSL syntax and Surface Shaders",705],["Currently some parts of the surface shader compilation pipeline do not understand DX11-specific HLSL syntax. If you're using HLSL features like StructuredBuffers, RWTextures and other non-DX9 syntax, you have to wrap them in a DX11-only preprocessor macro:",705],["ifdef SHADER_API_D3D11",705],["// DX11-specific code, e.g.",705],["StructuredBuffer myColors;",705],["RWTexture2D myRandomWriteTexture;",705],["endif",705],["Using OpenGL Shading Language (GLSL) shaders with OpenGL ES 2.0",705],["OpenGL ES 2.0 provides only limited native support for the OpenGL Shading Language (GLSL). For example, the OpenGL ES 2.0 layer provides no built-in parameters to the shader.",705],["Unity implements built-in parameters for you the same way as OpenGL does, except that the following built-in parameters are missing:",705],["gl_ClipVertex",705],["gl_SecondaryColor",705],["gl_DepthRange",705],["halfVector property of the gl_LightSourceParameters structure",705],["gl_FrontFacing",705],["gl_FrontLightModelProduct",705],["gl_BackLightModelProduct",705],["gl_BackMaterial",705],["gl_Point",705],["gl_PointSize",705],["gl_ClipPlane",705],["gl_EyePlaneR, gl_EyePlaneS, gl_EyePlaneT, gl_EyePlaneQ",705],["gl_ObjectPlaneR, gl_ObjectPlaneS, gl_ObjectPlaneT, gl_ObjectPlaneQ",705],["gl_Fog",705],["iPad2 and MSAA and alpha-blended geometry",705],["There is a bug in Apple driver resulting in artifacts when MSAA is enabled and alpha-blended geometry is drawn with non RGBA colorMask. To prevent artifacts we force RGBA colorMask when this configuration is encountered, though it will render built-in Glow FX unusable (as it needs DST_ALPHA for intensity value). Also, please update your shaders if you wrote them yourself (see \"Render Setup -&gt; ColorMask\" in Pass Docs).",705],["ShaderLab: Properties",706],["Shaders can define a list of parameters to be set by artists in Unity's material inspector.",706],["The Properties block in the shader file defines them.",706],["Syntax",706],["Properties",706],["Properties { Property [Property ...] }",706],["Defines the property block. Inside braces multiple properties are defined as follows.",706],["Numbers and Sliders",706],["name (\"display name\", Range (min, max)) = number",706],["name (\"display name\", Float) = number",706],["name (\"display name\", Int) = number",706],["These all defines a number (scalar) property with a default value. The Range form makes it be displayed",706],["as a slider between min and max ranges.",706],["Colors and Vectors",706],["name (\"display name\", Color) = (number,number,number,number)",706],["name (\"display name\", Vector) = (number,number,number,number)",706],["Defines a color property with default value of given RGBA components, or a 4D vector property with a default value.",706],["Color properties have a color picker shown for them, and are adjusted as needed depending on the color space (see",706],["Linear Lighting). Vector properties are displayed as four number fields.",706],["Textures",706],["name (\"display name\", 2D) = \"defaulttexture\" {}",706],["name (\"display name\", Cube) = \"defaulttexture\" {}",706],["name (\"display name\", 3D) = \"defaulttexture\" {}",706],["Defines a 2D texture, cubemap or 3D (volume) property respectively.",706],["Details",706],["Each property inside the shader is referenced by name (in Unity, it's common to start shader property names with underscore). The property will show up in material inspector as display name. For each property a default value is given after equals sign:",706],["For Range and Float properties it's just a single number, for example \"13.37\".",706],["For Color and Vector properties it's four numbers in parentheses, for example \"(1,0.5,0.2,1)\".",706],["For texture (2D, Cube) the default value is either an empty string, or one of built-in default textures: \"white\", \"black\", \"gray\" or \"bump\".",706],["Later on in the shader's fixed function parts, property values can be accessed using property name in",706],["square brackets: [name]. For example, you could make blending mode be driven by a material property by declaring two integer",706],["properties (say \"SrcBlend\" and \"DstBlend\"), and later on make Blend Command use them: Blend [_SrcBlend] [_DstBlend].",706],["Property attributes and drawers",706],["In front of any property, optional attributes in square brackets can be specified. These are",706],["either attributes recognized by Unity, or they can indicate your own",706],["MaterialPropertyDrawer classes to control how they should be",706],["rendered in the material inspector. Attributes recognized by Unity:",706],["[HideInInspector] - does not show the property value in the material inspector.",706],["[NoScaleOffset] - material inspector will not show texture tiling/offset fields for texture properties with this attribute.",706],["[Normal] - indicates that a texture property expects a normal-map.",706],["[HDR] - indicates that a texture property expects a high-dynamic range (HDR) texture.",706],["Example",706],["// properties for a water shader",706],["Properties",706],["_WaveScale (\"Wave scale\", Range (0.02,0.15)) = 0.07 // sliders",706],["_ReflDistort (\"Reflection distort\", Range (0,1.5)) = 0.5",706],["_RefrDistort (\"Refraction distort\", Range (0,1.5)) = 0.4",706],["_RefrColor (\"Refraction color\", Color) = (.34, .85, .92, 1) // color",706],["_ReflectionTex (\"Environment Reflection\", 2D) = \"\" {} // textures",706],["_RefractionTex (\"Environment Refraction\", 2D) = \"\" {}",706],["_Fresnel (\"Fresnel (A) \", 2D) = \"\" {}",706],["_BumpMap (\"Bumpmap (RGB) \", 2D) = \"\" {}",706],["Texture property options (removed in 5.0)",706],["Before Unity 5, texture properties could have options inside the curly brace block, e.g. TexGen CubeReflect.",706],["These were controlling fixed function texture coordinate generation. This functionality was removed in 5.0;",706],["if you need texgen you should write a vertex shader instead.",706],["See Implementing Fixed Function TexGen page page for examples.",706],["Accessing shader properties in Cg/HLSL",707],["Shader declares Material properties in a Properties block. If you want to access some of those properties in a shader program, you need to declare a Cg/HLSL variable with the same name and a matching type. An example is provided in Shader Tutorial: Vertex and Fragment Programs.",707],["For example these shader properties:",707],["_MyColor (\"Some Color\", Color) = (1,1,1,1)",707],["_MyVector (\"Some Vector\", Vector) = (0,0,0,0)",707],["_MyFloat (\"My float\", Float) = 0.5",707],["_MyTexture (\"Texture\", 2D) = \"white\" {}",707],["_MyCubemap (\"Cubemap\", CUBE) = \"\" {}",707],["would be declared for access in Cg/HLSL code as:",707],["fixed4 _MyColor; // low precision type is usually enough for colors",707],["float4 _MyVector;",707],["float _MyFloat;",707],["sampler2D _MyTexture;",707],["samplerCUBE _MyCubemap;",707],["Cg/HLSL can also accept uniform keyword, but it is not necessary:",707],["uniform float4 _MyColor;",707],["Property types in ShaderLab map to Cg/HLSL variable types this way:",707],["Color and Vector properties map to float4, half4 or fixed4 variables.",707],["Range and Float properties map to float, half or fixed variables.",707],["Texture properties map to sampler2D variables for regular (2D) textures; Cubemaps map to samplerCUBE; and 3D textures map to sampler3D.",707],["Shader Reference",708],["Shaders in Unity can be written in one of three different ways:",708],["as surface shaders,",708],["as vertex and fragment shaders or",708],["as fixed function shaders.",708],["The shader tutorial can guide you on choosing the right type for your needs.",708],["Regardless of which type you choose, the actual meat of the shader code will always be wrapped in a language called ShaderLab, which is used to organize the shader structure. It looks like this:",708],["Shader \"MyShader\" {",708],["Properties {",708],["_MyTexture (\"My Texture\", 2D) = \"white\" { }",708],["// other properties like colors or vectors go here as well",708],["SubShader {",708],["// here goes the 'meat' of your",708],["// - surface shader or",708],["// - vertex and program shader or",708],["// - fixed function shader",708],["SubShader {",708],["// here goes a simpler version of the SubShader",708],["// above than can run on older graphics cards",708],["We recommend that you start by reading about some basic concepts of the ShaderLab syntax in the sections listed below and then to move on to read about surface shaders or vertex and fragment shaders in other sections. Since fixed function shaders are written using ShaderLab only, you will find more information about them in the ShaderLab reference itself.",708],["The reference below includes plenty of examples for the different types of shaders. For even more examples of surface shaders in particular, you can get the source of Unity's built-in shaders from the Resources section. Unity's Image Effects package contains a lot of interesting vertex and fragment shaders.",708],["Read on for shader reference, and check out the shader tutorial as well!",708],["See Also",708],["Writing Surface Shaders.",708],["Writing vertex and fragment shaders.",708],["ShaderLab Syntax Reference.",708],["Shader Assets.",708],["Advanced ShaderLab Topics.",708],["Unity's Rendering Pipeline",709],["Shaders define both how an object looks by itself (its material properties) and how it reacts to the light. Because lighting calculations must be built into the shader, and there are many possible light &amp; shadow types, writing quality shaders that \"just work\" would be an involved task. To make it easier, Unity has Surface Shaders, where all the lighting, shadowing, lightmapping, forward vs. deferred rendering things are taken care of automatically.",709],["This document describes the pecularities of Unity's lighting &amp; rendering pipeline and what happens behind the scenes of Surface Shaders.",709],["Rendering Paths",709],["How lighting is applied and which Passes of the shader are used depends on which Rendering Path is used. Each pass in a shader communicates its lighting type via Pass Tags.",709],["In Forward Rendering, ForwardBase and ForwardAdd passes are used.",709],["In Deferred Shading, Deferred pass is used.",709],["In legacy Deferred Lighting, PrepassBase and PrepassFinal passes are used.",709],["In legacy Vertex Lit, Vertex, VertexLMRGBM and VertexLM passes are used.",709],["In any of the above, to render Shadows or a depth texture, ShadowCaster pass is used.",709],["Forward Rendering path",709],["ForwardBase pass renders ambient, lightmaps, main directional light and not important (vertex/SH) lights at once. ForwardAdd pass is used for any additive per-pixel lights; one invocation per object illuminated by such light is done. See Forward Rendering for details.",709],["If forward rendering is used, but a shader does not have forward-suitable passes (i.e. neither ForwardBase nor ForwardAdd pass types are present), then that object is rendered just like it would in Vertex Lit path, see below.",709],["Deferred Shading path",709],["Deferred pass renders all information needed for lighting (in built-in shaders: diffuse color, specular color, smoothness,",709],["world space normal, emission). It also adds lightmaps, reflection probes and ambient lighting into the emission channel. See Deferred Shading for details.",709],["Legacy Deferred Lighting path",709],["PrepassBase pass renders normals &amp; specular exponent; PrepassFinal pass renders final color by combining textures, lighting &amp; emissive material properties. All regular in-scene lighting is done separately in screen-space. See Deferred Lighting for details.",709],["Legacy Vertex Lit Rendering path",709],["Since vertex lighting is most often used on platforms that do not support programmable shaders, Unity can't create multiple shader variants internally to handle lightmapped vs. non-lightmapped cases. So to handle lightmapped and non-lightmapped objects, multiple passes have to be written explicitly.",709],["Vertex pass is used for non-lightmapped objects. All lights are rendered at once, using a fixed function OpenGL/Direct3D lighting model (Blinn-Phong)",709],["VertexLMRGBM pass is used for lightmapped objects, when lightmaps are RGBM encoded (PC and consoles). No realtime lighting is applied; pass is expected to combine textures with a lightmap.",709],["VertexLMM pass is used for lightmapped objects, when lightmaps are double-LDR encoded (mobile platforms). No realtime lighting is applied; pass is expected to combine textures with a lightmap.",709],["See Also",709],["Graphics Command Buffers for how to extend Unity's rendering pipeline.",709],["ShaderLab: Legacy Texture Combiners",710],["After the basic vertex lighting has been calculated, textures are applied. In ShaderLab this is done using SetTexture command.",710],["Note: SetTexture commands have no effect when fragment programs are used; as in that case pixel operations are completely described in the shader. It is advisable to use programmable shaders these days instead of SetTexture commands.*",710],["Fixed function texturing is the place to do old-style combiner effects. You can have multiple SetTexture commands inside a pass - all textures are applied in sequence, like layers in a painting program. SetTexture commands must be placed at the end of a Pass.",710],["Syntax",710],["SetTexture [TextureName] {Texture Block}",710],["Assigns a texture. TextureName must be defined as a texture property. How to apply the texture is defined inside the TextureBlock.",710],["The texture block controls how the texture is applied. Inside the texture block can be up to two commands: combine and constantColor.",710],["Texture block combine command",710],["combine src1 * src2: Multiplies src1 and src2 together. The result will be darker than either input.",710],["combine src1 + src2: Adds src1 and src2 together. The result will be lighter than either input.",710],["combine src1 - src2: Subtracts src2 from src1.",710],["combine src1 lerp (src2) src3: Interpolates between src3 and src1, using the alpha of src2. Note that the interpolation is opposite direction: src1 is used when alpha is one, and src3 is used when alpha is zero.",710],["combine src1 * src2 + src3: Multiplies src1 with the alpha component of src2, then adds src3.",710],["All the src properties can be either one of previous, constant, primary or texture.",710],["Previous is the the result of the previous SetTexture.",710],["Primary is the color from the lighting calculation or the vertex color if it is bound.",710],["Texture is the color of the texture specified by TextureName in the SetTexture (see above).",710],["Constant is the color specified in ConstantColor.",710],["Modifiers:",710],["The formulas specified above can optionally be followed by the keywords Double or Quad to make the resulting color 2x or 4x as bright.",710],["All the src properties, except lerp argument, can optionally be preceded by one - to make the resulting color negated.",710],["All the src properties can be followed by alpha to take only the alpha channel.",710],["Texture block constantColor command",710],["ConstantColor color: Defines a constant color that can be used in the combine command.",710],["Functionality removed in Unity 5.0",710],["Unity versions before 5.0 did support texture coordinate transformations with a matrix command inside a texture block. If you need this functionality now, consider rewriting your shader as a programmable shader instead, and do the UV transformation in the vertex shader.",710],["Similarly, 5.0 removed signed add (a+-b), multiply signed add (a*b+-c), multiply subtract (a*b-c) and dot product (dot3, dot3rgba) texture combine modes. If you need them, do the math in the pixel shader instead.",710],["Details",710],["Before fragment programs existed, older graphics cards used a layered approach to textures. The textures are applied one after each other, modifying the color that will be written to the screen. For each texture, the texture is typically combined with the result of the previous operation. These days it is advisable to use actual fragment programs.",710],["Note that each texture stage may or might not be clamped to 0..1 range, depending on the platform. This might affect SetTexture stages that can produce values higher than 1.0.",710],["Separate Alpha &amp; Color computation",710],["By default, the combiner formula is used for calculating both the RGB and alpha component of the color. Optionally, you can specify a separate formula for the alpha calculation. This looks like this:",710],["SetTexture [_MainTex] { combine previous * texture, previous + texture }",710],["Here, we multiply the RGB colors and add the alpha.",710],["Specular highlights",710],["By default the primary color is the sum of the diffuse, ambient and specular colors (as defined in the Lighting calculation). If you specify SeparateSpecular On in the pass options, the specular color will be added in after the combiner calculation, rather than before. This is the default behavior of the built-in VertexLit shader.",710],["Graphics hardware support",710],["Modern graphics cards with fragment shader support (\"shader model 2.0\" on desktop, OpenGL ES 2.0 on mobile) support all SetTexture modes and at least 4 texture stages (many of them support 8). If you're running on really old hardware (made before 2003 on PC, or before iPhone3GS on mobile), you might have as low as two texture stages. The shader author should write separate SubShaders for the cards he or she wants to support.",710],["Examples",710],["Alpha Blending Two Textures",710],["This small examples takes two textures. First it sets the first combiner to just take the _MainTex, then is uses the alpha channel of _BlendTex to fade in the RGB colors of _BlendTex",710],["Shader \"Examples/2 Alpha Blended Textures\" {",710],["Properties {",710],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",710],["_BlendTex (\"Alpha Blended (RGBA) \", 2D) = \"white\" {}",710],["SubShader {",710],["Pass {",710],["// Apply base texture",710],["SetTexture [_MainTex] {",710],["combine texture",710],["// Blend in the alpha texture using the lerp operator",710],["SetTexture [_BlendTex] {",710],["combine texture lerp (texture) previous",710],["Alpha Controlled Self-illumination",710],["This shader uses the alpha component of the _MainTex to decide where to apply lighting. It does this by applying the texture to two stages; In the first stage, the alpha value of the texture is used to blend between the vertex color and solid white. In the second stage, the RGB values of the texture are multiplied in.",710],["Shader \"Examples/Self-Illumination\" {",710],["Properties {",710],["_MainTex (\"Base (RGB) Self-Illumination (A)\", 2D) = \"white\" {}",710],["SubShader {",710],["Pass {",710],["// Set up basic white vertex lighting",710],["Material {",710],["Diffuse (1,1,1,1)",710],["Ambient (1,1,1,1)",710],["Lighting On",710],["// Use texture alpha to blend up to white (= full illumination)",710],["SetTexture [_MainTex] {",710],["constantColor (1,1,1,1)",710],["combine constant lerp(texture) previous",710],["// Multiply in texture",710],["SetTexture [_MainTex] {",710],["combine previous * texture",710],["We can do something else for free here, though; instead of blending to solid white, we can add a self-illumination color and blend to that. Note the use of ConstantColor to get a _SolidColor from the properties into the texture blending.",710],["Shader \"Examples/Self-Illumination 2\" {",710],["Properties {",710],["_IlluminCol (\"Self-Illumination color (RGB)\", Color) = (1,1,1,1)",710],["_MainTex (\"Base (RGB) Self-Illumination (A)\", 2D) = \"white\" {}",710],["SubShader {",710],["Pass {",710],["// Set up basic white vertex lighting",710],["Material {",710],["Diffuse (1,1,1,1)",710],["Ambient (1,1,1,1)",710],["Lighting On",710],["// Use texture alpha to blend up to white (= full illumination)",710],["SetTexture [_MainTex] {",710],["// Pull the color property into this blender",710],["constantColor [_IlluminCol]",710],["// And use the texture's alpha to blend between it and",710],["// vertex color",710],["combine constant lerp(texture) previous",710],["// Multiply in texture",710],["SetTexture [_MainTex] {",710],["combine previous * texture",710],["And finally, we take all the lighting properties of the vertexlit shader and pull that in:",710],["Shader \"Examples/Self-Illumination 3\" {",710],["Properties {",710],["_IlluminCol (\"Self-Illumination color (RGB)\", Color) = (1,1,1,1)",710],["_Color (\"Main Color\", Color) = (1,1,1,0)",710],["_SpecColor (\"Spec Color\", Color) = (1,1,1,1)",710],["_Emission (\"Emmisive Color\", Color) = (0,0,0,0)",710],["_Shininess (\"Shininess\", Range (0.01, 1)) = 0.7",710],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",710],["SubShader {",710],["Pass {",710],["// Set up basic vertex lighting",710],["Material {",710],["Diffuse [_Color]",710],["Ambient [_Color]",710],["Shininess [_Shininess]",710],["Specular [_SpecColor]",710],["Emission [_Emission]",710],["Lighting On",710],["// Use texture alpha to blend up to white (= full illumination)",710],["SetTexture [_MainTex] {",710],["constantColor [_IlluminCol]",710],["combine constant lerp(texture) previous",710],["// Multiply in texture",710],["SetTexture [_MainTex] {",710],["combine previous * texture",710],["ShaderLab Syntax",711],["All Shaders files in Unity are written in a declarative language called \"ShaderLab\". In the file, a nested-braces",711],["syntax declares various things that describe the shader -- for example which shader properties should be shown in material inspector;",711],["what kind of hardware fallbacks to do; what kind of blending modes to use etc.; and actual \"shader code\" is written in",711],["CGPROGRAM snippets inside the same shader file (see surface shaders and vertex and fragment shaders).",711],["This page and the child pages describes the nested-braces \"ShaderLab\" syntax. The CGPROGRAM snippets are written in regular",711],["HLSL/Cg shading language, see their documentation pages.",711],["Shader is the root command of a shader file. Each file must define one (and only one) Shader. It specifies how any objects whose material uses this shader are rendered.",711],["Syntax",711],["Shader \"name\" { [Properties] Subshaders [Fallback] [CustomEditor] }",711],["Defines a shader. It will appear in the material inspector listed under name. Shaders optionally can define a list of properties that show up in material inspector. After this comes a list of SubShaders, and optionally a fallback and/or a custom editor declaration.",711],["Details",711],["Properties",711],["Shaders can have a list of properties. Any properties declared in a shader are shown in the material inspector inside Unity. Typical properties are the object color, textures, or just arbitrary values to be used by the shader.",711],["SubShaders &amp; Fallback",711],["Each shader is comprised of a list of sub-shaders. You must have at least one. When loading a shader, Unity will go through the list of subshaders, and pick the first one that is supported by the end user's machine. If no subshaders are supported, Unity will try to use fallback shader.",711],["Different graphic cards have different capabilities. This raises an eternal issue for game developers; you want your game to look great on the latest hardware, but don't want it to be available only to those 3% of the population. This is where subshaders come in. Create one subshader that has all the fancy graphic effects you can dream of, then add more subshaders for older cards. These subshaders may implement the effect you want in a slower way, or they may choose not to implement some details.",711],["Shader \"level of detail\" (LOD) and \"shader replacement\" are two techniques that also build upon subshaders, see Shader LOD and Shader Replacemement for details.",711],["Examples",711],["Here is one of the simplest shaders possible:",711],["// colored vertex lighting",711],["Shader \"Simple colored lighting\"",711],["// a single color property",711],["Properties {",711],["_Color (\"Main Color\", Color) = (1,.5,.5,1)",711],["// define one subshader",711],["SubShader",711],["// a single pass in our subshader",711],["Pass",711],["// use fixed function per-vertex lighting",711],["Material",711],["Diffuse [_Color]",711],["Lighting On",711],["This shader defines a color property _Color (that shows up in material inspector as Main Color) with a default value of (1,0.5,0.5,1). Then a single subshader is defined. The subshader consists of one Pass that turns on fixed-function vertex lighting and sets up basic material for it.",711],["See more complex examples at Surface Shader Examples or",711],["Vertex and Fragment Shader Examples.",711],["See Also",711],["Properties Syntax.",711],["SubShader Syntax.",711],["Pass Syntax.",711],["Fallback Syntax.",711],["CustomEditor Syntax.",711],["Shader Level of Detail",712],["Shader Level of Detail (LOD) works by only using shaders or subshaders that have their LOD value less than a given number.",712],["By default, allowed LOD level is infinite, that is, all shaders that are supported by the user's hardware can be used. However, in some cases you might want to drop shader details, even if the hardware can support them. For example, some cheap graphics cards might support all the features, but are too slow to use them. So you may want to not use parallax normal mapping on them.",712],["Shader LOD can be either set per individual shader (using Shader.maximumLOD), or globally for all shaders (using Shader.globalMaximumLOD).",712],["In your custom shaders, use LOD command to set up LOD value for any subshader.",712],["Built-in shaders in Unity have their LODs set up this way:",712],["VertexLit kind of shaders = 100",712],["Decal, Reflective VertexLit = 150",712],["Diffuse = 200",712],["Diffuse Detail, Reflective Bumped Unlit, Reflective Bumped VertexLit = 250",712],["Bumped, Specular = 300",712],["Bumped Specular = 400",712],["Parallax = 500",712],["Parallax Specular = 600",712],["Performance Tips when Writing Shaders",713],["Use Common sense ;)",713],["Compute only things that you need; anything that is not actually needed can be eliminated. For example, supporting per-material color is nice to make a shader more flexible, but if you always leave that color set to white then it's useless computations performed for each vertex or pixel rendered on screen.",713],["Another thing to keep in mind is frequency of computations. Usually there are many more pixels rendered (hence their pixel shaders executed) than there are vertices (vertex shader executions); and more vertices than objects being rendered. So generally if you can, move computations out of pixel shader into the vertex shader; or out of shaders completely and set the values once from a script.",713],["Less Generic Surface Shaders",713],["Surface Shaders are great for writing shaders that interact with lighting. However, their default options are tuned for \"general case\". In many cases, you can tweak them to make shaders run faster or at least be smaller:",713],["approxview directive for shaders that use view direction (i.e. Specular) will make view direction be normalized per-vertex instead of per-pixel. This is approximate, but often good enough.",713],["halfasview for Specular shader types is even faster. Half-vector (halfway between lighting direction and view vector) will be computed and normalized per vertex, and lighting function will already receive half-vector as a parameter instead of view vector.",713],["noforwardadd will make a shader fully support only one directional light in Forward rendering. The rest of the lights can still have an effect as per-vertex lights or spherical harmonics. This is great to make shader smaller and make sure it always renders in one pass, even with multiple lights present.",713],["noambient will disable ambient lighting and spherical harmonics lights on a shader. This can be slightly faster.",713],["Precision of computations",713],["When writing shaders in Cg/HLSL, there are three basic number types: float, half and fixed (as well as vector &amp; matrix variants of them, e.g. half3 and float4x4):",713],["float: high precision floating point. Generally 32 bits, just like float type in regular programming languages.",713],["half: medium precision floating point. Generally 16 bits, with a range of -60000 to +60000 and 3.3 decimal digits of precision.",713],["fixed: low precision fixed point. Generally 11 bits, with a range of -2.0 to +2.0 and 1/256th precision.",713],["Use lowest precision that is possible; this is especially important on mobile platforms like iOS and Android. Good rules of thumb are:",713],["For colors and unit length vectors, use fixed.",713],["For others, use half if range and precision is fine; otherwise use float.",713],["On mobile platforms, the key is to ensure as much as possible stays in low precision in the fragment shader. On most mobile GPUs, applying swizzles to low precision (fixed/lowp) types is costly; converting between fixed/lowp and higher precision types is quite costly as well.",713],["Alpha Testing",713],["Fixed function AlphaTest or it's programmable equivalent, clip(), has different performance characteristics on different platforms:",713],["Generally it's a small advantage to use it to cull out totally transparent pixels on most platforms.",713],["However, on PowerVR GPUs found in iOS and some Android devices, alpha testing is expensive. Do not try to use it as \"performance optimization\" there, it will be slower.",713],["Color Mask",713],["On some platforms (mostly mobile GPUs found in iOS and Android devices), using ColorMask to leave out some channels (e.g. ColorMask RGB) can be expensive, so only use it if really necessary.",713],["Writing vertex and fragment shaders",714],["ShaderLab shaders encompass more than just \"hardware shaders\". They do many things. They describe properties that are displayed in the Material Inspector, contain multiple shader implementations for different graphics hardware, configure fixed function hardware state and so on. The actual programmable shaders - like vertex and fragment programs - are just a part of the whole ShaderLab's \"shader\" concept. Take a look at shader tutorial for a basic introduction. Here we'll call the low-level hardware shaders shader programs.",714],["If you want to write shaders that interact with lighting, take a look at Surface Shaders documentation. For some examples, take a look at Vertex and Fragment Shader Examples. The rest of this page will assume shaders that do not interact with Unity lights (e.g. special effects, Image Effects etc.)",714],["Shader programs are written in Cg / HLSL language, by embedding \"snippets\" in the shader text, somewhere inside the Pass command. They usually look like this:",714],["Pass {",714],["// ... the usual pass state setup ...",714],["CGPROGRAM",714],["// compilation directives for this snippet, e.g.:",714],["pragma vertex vert",714],["pragma fragment frag",714],["// the Cg/HLSL code itself",714],["ENDCG",714],["// ... the rest of pass setup ...",714],["Cg snippets",714],["Cg program snippets are written between CGPROGRAM and ENDCG.",714],["At the start of the snippet compilation directives can be given as #pragma statements. Directives indicating which shader functions to compile:",714],["#pragma vertex name - compile function name as the vertex shader.",714],["#pragma fragment name - compile function name as the fragment shader.",714],["#pragma geometry name - compile function name as DX10 geometry shader. Having this option automatically turns on #pragma target 4.0, described below.",714],["#pragma hull name - compile function name as DX11 hull shader. Having this option automatically turns on #pragma target 5.0, described below.",714],["#pragma domain name - compile function name as DX11 domain shader. Having this option automatically turns on #pragma target 5.0, described below.",714],["Other compilation directives:",714],["#pragma target name - which shader target to compile to. See Shader targets below for details.",714],["#pragma only_renderers space separated names - compile shader only for given renderers. By default shaders are compiled for all renderers. See Renderers below for details.",714],["#pragma exclude_renderers space separated names - do not compile shader for given renderers. By default shaders are compiled for all renderers. See Renderers below for details.",714],["#pragma multi_compile ..._  - for working with multiple shader variants.",714],["#pragma enable_d3d11_debug_symbols - generate debug information for shaders compiled for DirectX 11, this will allow you to debug shaders via Visual Studio 2012 (or higher) Graphics debugger.",714],["Each snippet must contain at least a vertex program and a fragment program. Thus #pragma vertex and #pragma fragment directives are required.",714],["Compilation directives that don't do anything starting with Unity 5.0 and can be safely removed: #pragma glsl, #pragma glsl_no_auto_normalization, #pragma profileoption, #pragma fragmentoption.",714],["Shader targets",714],["By default, Unity compiles shaders into roughly shader model 2.0 equivalent. Using #pragma target allows shaders to be compiled into other capability levels. Currently these targets are supported:",714],["#pragma target 2.0 (default) - roughly shader model 2.0",714],["Shader Model 2.0 on Direct3D 9.",714],["Limited amount of arithmetic &amp; texture instructions; no vertex texture sampling; no derivatives in fragment shaders.",714],["#pragma target 3.0 - compile to shader model 3.0:",714],["Shader Model 3.0 on Direct3D 9.",714],["#pragma target 4.0 - compile to DX10 shader model 4.0. This target is currently only supported by DirectX 11 and XboxOne/PS4 platforms.",714],["#pragma target 5.0 - compile to DX11 shader model 5.0. This target is currently only supported by DirectX 11 and XboxOne/PS4 platforms.",714],["Note that all OpenGL-like platforms (including mobile) are treated as \"capable of shader model 3.0\". WP8/WinRT platforms (DX11 feature level 9.x) are treated as only capable of shader model 2.0.",714],["Rendering platforms",714],["Unity supports several rendering APIs (e.g. Direct3D 9 and OpenGL), and by default all shader programs are compiled into all supported renderers. You can indicate which renderers to compile to using #pragma only_renderers or #pragma exclude_renderers directives. This is mostly useful in cases where you are explicitly using some shader language features that you know aren't possible on some platforms. Currently supported renderer names are:",714],["d3d9 - Direct3D 9.",714],["d3d11 - Direct3D 11.",714],["opengl - OpenGL.",714],["gles - OpenGL ES 2.0.",714],["gles3 - OpenGL ES 3.0.",714],["metal - iOS Metal.",714],["d3d11_9x - Direct3D 11 9.x feature level, as commonly used on WSA/WP8 platforms.",714],["xbox360 - Xbox 360.",714],["xboxone - Xbox One.",714],["ps3 - PlayStation 3.",714],["ps4 - PlayStation 4.",714],["psp2 - PlayStation Vita.",714],["psm - PlayStation Mobile.",714],["For example, this line would only compile shader into D3D9 mode:",714],["pragma only_renderers d3d9",714],["Rendering with Replaced Shaders",715],["Some rendering effects require rendering a scene with a different set of shaders. For example, good edge detection would need a texture with scene normals, so it could detect edges where surface orientations differ. Other effects might need a texture with scene depth, and so on. To achieve this, it is possible to render the scene with replaced shaders of all objects.",715],["Shader replacement is done from scripting using Camera.RenderWithShader or Camera.SetReplacementShader functions. Both functions take a shader and a replacementTag.",715],["It works like this: the camera renders the scene as it normally would. the objects still use their materials, but the actual shader that ends up being used is changed:",715],["If replacementTag is empty, then all objects in the scene are rendered with the given replacement shader.",715],["If replacementTag is not empty, then for each object that would be rendered:",715],["The real object's shader is queried for the tag value.",715],["If it does not have that tag, object is not rendered.",715],["A subshader is found in the replacement shader that has a given tag with the found value. If no such subshader is found, object is not rendered.",715],["Now that subshader is used to render the object.",715],["So if all shaders would have, for example, a \"RenderType\" tag with values like \"Opaque\", \"Transparent\", \"Background\", \"Overlay\", you could write a replacement shader that only renders solid objects by using one subshader with RenderType=Solid tag. The other tag types would not be found in the replacement shader, so the objects would be not rendered. Or you could write several subshaders for different \"RenderType\" tag values. Incidentally, all built-in Unity shaders have a \"RenderType\" tag set.",715],["Lit shader replacement",715],["When using shader replacement the scene is rendered using the render path that is configured on the camera. This means that the shader used for replacement can contain shadow and lighting passes (you can use surface shaders for shader replacement). This can be useful for doing rendering of special effects and scene debugging.",715],["Shader replacement tags in built-in Unity shaders",715],["All built-in Unity shaders have a \"RenderType\" tag set that can be used when rendering with replaced shaders. Tag values are the following:",715],["Opaque: most of the shaders (Normal, Self Illuminated, Reflective, terrain shaders).",715],["Transparent: most semitransparent shaders (Transparent, Particle, Font, terrain additive pass shaders).",715],["TransparentCutout: masked transparency shaders (Transparent Cutout, two pass vegetation shaders).",715],["Background: Skybox shaders.",715],["Overlay: GUITexture, Halo, Flare shaders.",715],["TreeOpaque: terrain engine tree bark.",715],["TreeTransparentCutout: terrain engine tree leaves.",715],["TreeBillboard: terrain engine billboarded trees.",715],["Grass: terrain engine grass.",715],["GrassBillboard: terrain engine billboarded grass.",715],["Built-in scene depth/normals texture",715],["A Camera has a built-in capability to render depth or depth+normals texture, if you need that in some of your effects. See Camera Depth Texture page. Note that in some cases (depending on the hardware), the depth and depth+normals textures can internally be rendered using shader replacement. So it is important to have the correct \"RenderType\" tag in your shaders.",715],["ShaderLab: Stencil",716],["The stencil buffer can be used as a general purpose per pixel mask for saving or discarding pixels.",716],["The stencil buffer is usually an 8 bit integer per pixel. The value can be written to, increment or decremented. Subsequent draw calls can test against the value, to decide if a pixel should be discarded before running the pixel shader.",716],["Syntax",716],["Ref",716],["Ref referenceValue",716],["The value to be compared against (if Comp is anything else than always) and/or the value to be written to the buffer (if either Pass, Fail or ZFail is set to replace). 0-255 integer.",716],["ReadMask",716],["ReadMask readMask",716],["An 8 bit mask as an 0-255 integer, used when comparing the reference value with the contents of the buffer (referenceValue &amp; readMask) comparisonFunction (stencilBufferValue &amp; readMask). Default: 255.",716],["WriteMask",716],["WriteMask writeMask",716],["An 8 bit mask as an 0-255 integer, used when writing to the buffer. Default: 255.",716],["Comp",716],["Comp comparisonFunction",716],["The function used to compare the reference value to the current contents of the buffer. Default: always.",716],["Pass",716],["Pass stencilOperation",716],["What to do with the contents of the buffer if the stencil test (and the depth test) passes. Default: keep.",716],["Fail",716],["Fail stencilOperation",716],["What to do with the contents of the buffer if the stencil test fails. Default: keep.",716],["ZFail",716],["ZFail stencilOperation",716],["What to do with the contents of the buffer if the stencil test passes, but the depth test fails. Default: keep.",716],["Comp, Pass, Fail and ZFail will be applied to the front-facing geometry, unless Cull Front is specified, in which case it's back-facing geometry. You can also explicitly specify the two-sided stencil state by defining CompFront, PassFront, FailFront, ZFailFront (for front-facing geometry), and CompBack, PassBack, FailBack, ZFailBack (for back-facing geometry).",716],["Comparison Function",716],["Comparison function is one of the following:",716],["",716],["Greater Only render pixels whose reference value is greater than the value in the buffer. ",716],["GEqual Only render pixels whose reference value is greater than or equal to the value in the buffer. ",716],["Less Only render pixels whose reference value is less than the value in the buffer. ",716],["LEqual Only render pixels whose reference value is less than or equal to the value in the buffer. ",716],["Equal Only render pixels whose reference value equals the value in the buffer. ",716],["NotEqual Only render pixels whose reference value differs from the value in the buffer. ",716],["Always Make the stencil test always pass. ",716],["Never Make the stencil test always fail. ",716],["Stencil Operation",716],["Stencil operation is one of the following:",716],["",716],["Keep Keep the current contents of the buffer. ",716],["Zero Write 0 into the buffer. ",716],["Replace Write the reference value into the buffer. ",716],["IncrSat Increment the current value in the buffer. If the value is 255 already, it stays at 255. ",716],["DecrSat Decrement the current value in the buffer. If the value is 0 already, it stays at 0. ",716],["Invert Negate all the bits. ",716],["IncrWrap Increment the current value in the buffer. If the value is 255 already, it becomes 0. ",716],["DecrWrap Decrement the current value in the buffer. If the value is 0 already, it becomes 255. ",716],["Deferred rendering path",716],["Stencil functionality for objects rendered in the deferred rendering path is somewhat limited, as during the base pass and lighting pass the stencil buffer is used for other purposes. During those two stages stencil state defined in the shader will be ignored and only taken into account during the final pass. Because of that it's not possible to mask out these objects based on a stencil test, but they can still modify the buffer contents, to be used by objects rendered later in the frame. Objects rendered in the forward rendering path following the deferred path (e.g. transparent objects or objects without a surface shader) will set their stencil state normally again.",716],["The deferred rendering path uses the three highest bits of the stencil buffer, plus up to four more highest bits - depending on how many light mask layers are used in the scene. It is possible to operate within the range of the \"clean\" bits using the stencil read and write masks, or you can force the camera to clean the stencil buffer after the lighting pass using Camera.clearStencilAfterLightingPass.",716],["Example",716],["The first example shader will write the value 2 wherever the depth test passes (the stencil test is set to always pass), and will decrement (and wrap) the current value to 255 if the depth test fails (assuming we're starting off with a clear stencil buffer).",716],["Shader \"Red\" {",716],["SubShader {",716],["Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry\"}",716],["Pass {",716],["Stencil {",716],["Ref 2",716],["Comp always",716],["Pass replace",716],["ZFail decrWrap",716],["CGPROGRAM",716],["pragma vertex vert",716],["pragma fragment frag",716],["struct appdata {",716],["float4 vertex : POSITION;",716],["};",716],["struct v2f {",716],["float4 pos : SV_POSITION;",716],["};",716],["v2f vert(appdata v) {",716],["v2f o;",716],["o.pos = mul(UNITY_MATRIX_MVP, v.vertex);",716],["return o;",716],["half4 frag(v2f i) : SV_Target {",716],["return half4(1,0,0,1);",716],["ENDCG",716],["Second shader will pass only for the pixels for which the first (red) shader passed, since it's checking for equality with value 2. It will also decrement the value in the buffer wherever it fails the stencil test.",716],["Shader \"Green\" {",716],["SubShader {",716],["Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry+1\"}",716],["Pass {",716],["Stencil {",716],["Ref 2",716],["Comp equal",716],["Pass keep",716],["Fail decrWrap",716],["ZFail keep",716],["CGPROGRAM",716],["pragma vertex vert",716],["pragma fragment frag",716],["struct appdata {",716],["float4 vertex : POSITION;",716],["};",716],["struct v2f {",716],["float4 pos : SV_POSITION;",716],["};",716],["v2f vert(appdata v) {",716],["v2f o;",716],["o.pos = mul(UNITY_MATRIX_MVP, v.vertex);",716],["return o;",716],["half4 frag(v2f i) : SV_Target {",716],["return half4(0,1,0,1);",716],["ENDCG",716],["The third shader will only pass wherever the stencil value was decremented twice, so for pixels, which failed the depth test in the first (red) shader and also failed the stencil test in the second (green) shader.",716],["Shader \"Blue\" {",716],["SubShader {",716],["Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry+2\"}",716],["Pass {",716],["Stencil {",716],["Ref 254",716],["Comp equal",716],["CGPROGRAM",716],["pragma vertex vert",716],["pragma fragment frag",716],["struct appdata {",716],["float4 vertex : POSITION;",716],["};",716],["struct v2f {",716],["float4 pos : SV_POSITION;",716],["};",716],["v2f vert(appdata v) {",716],["v2f o;",716],["o.pos = mul(UNITY_MATRIX_MVP, v.vertex);",716],["return o;",716],["half4 frag(v2f i) : SV_Target {",716],["return half4(0,0,1,1);",716],["ENDCG",716],["The result:",716],["Another example of a more directed effect. The sphere is first rendered with this shader to mark-up the proper regions in the stencil buffer:",716],["Shader \"HolePrepare\" {",716],["SubShader {",716],["Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry+1\"}",716],["ColorMask 0",716],["ZWrite off",716],["Stencil {",716],["Ref 1",716],["Comp always",716],["Pass replace",716],["CGINCLUDE",716],["struct appdata {",716],["float4 vertex : POSITION;",716],["};",716],["struct v2f {",716],["float4 pos : SV_POSITION;",716],["};",716],["v2f vert(appdata v) {",716],["v2f o;",716],["o.pos = mul(UNITY_MATRIX_MVP, v.vertex);",716],["return o;",716],["half4 frag(v2f i) : SV_Target {",716],["return half4(1,1,0,1);",716],["ENDCG",716],["Pass {",716],["Cull Front",716],["ZTest Less",716],["CGPROGRAM",716],["pragma vertex vert",716],["pragma fragment frag",716],["ENDCG",716],["Pass {",716],["Cull Back",716],["ZTest Greater",716],["CGPROGRAM",716],["pragma vertex vert",716],["pragma fragment frag",716],["ENDCG",716],["And then rendered once more as a fairly standard surface shader, with the exception of front face culling, disabled depth test and stencil test discarding previously marked pixels:",716],["Shader \"Hole\" {",716],["Properties {",716],["_Color (\"Main Color\", Color) = (1,1,1,0)",716],["SubShader {",716],["Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry+2\"}",716],["ColorMask RGB",716],["Cull Front",716],["ZTest Always",716],["Stencil {",716],["Ref 1",716],["Comp notequal",716],["CGPROGRAM",716],["pragma surface surf Lambert",716],["float4 _Color;",716],["struct Input {",716],["float4 color : COLOR;",716],["};",716],["void surf (Input IN, inout SurfaceOutput o) {",716],["o.Albedo = _Color.rgb;",716],["o.Normal = half3(0,0,-1);",716],["o.Alpha = 1;",716],["ENDCG",716],["The result:",716],["ShaderLab: SubShader",717],["Each shader in Unity consists of a list of subshaders. When Unity has to display a mesh, it will find the shader to use, and pick the first subshader that runs on the user's graphics card.",717],["Syntax",717],["Subshader { [Tags] [CommonState] Passdef [Passdef ...] }",717],["Defines the subshader as optional tags, common state and a list of pass definitions.",717],["Details",717],["A subshader defines a list of rendering passes and optionally setup any state that is common to all passes. Additionally, subshader specific Tags can be set up.",717],["When Unity chooses which subshader to render with, it renders an object once for each Pass defined (and possibly more due to light interactions). As each render of the object is an expensive operation, you want to define the shader in minimum amount of passes possible. Of course, sometimes on some graphics hardware the needed effect can't be done in a single pass; then you have no choice but to use multiple passes.",717],["Each pass definition can be a regular Pass, a Use Pass or a Grab Pass.",717],["Any statements that are allowed in a Pass definition can also appear in Subshader block. This will make all passes use this \"shared\" state.",717],["Example",717],["// ...",717],["SubShader {",717],["Pass {",717],["Lighting Off",717],["SetTexture [_MainTex] {}",717],["// ...",717],["This subshader defines a single Pass that turns off any lighting and just displays a mesh with texture named _MainTex.",717],["ShaderLab: SubShader Tags",718],["Subshaders use tags to tell how and when they expect to be rendered to the rendering engine.",718],["Syntax",718],["Tags { \"TagName1\" = \"Value1\" \"TagName2\" = \"Value2\" }",718],["Specifies TagName1 to have Value1, TagName2 to have Value2. You can have as many tags as you like.",718],["Details",718],["Tags are basically key-value pairs. Inside a SubShader tags are used to determine rendering order and other parameters of a subshader. Note that the following tags recognized by Unity must be inside SubShader section and not inside Pass!",718],["In addition to built-in tags recognized by Unity, you can use your own tags and query them using Material.GetTag function.",718],["Rendering Order - Queue tag",718],["You can determine in which order your objects are drawn using the Queue tag. A Shader decides which render queue its objects belong to, this way any Transparent shaders make sure they are drawn after all opaque objects and so on.",718],["There are four pre-defined render queues, but there can be more queues in between the predefined ones. The predefined queues are:",718],["Background - this render queue is rendered before any others. You'd typically use this for things that really need to be in the background.",718],["Geometry (default) - this is used for most objects. Opaque geometry uses this queue.",718],["AlphaTest - alpha tested geometry uses this queue. It's a separate queue from Geometry one since it's more efficient to render alpha-tested objects after all solid ones are drawn.",718],["Transparent - this render queue is rendered after Geometry and AlphaTest, in back-to-front order. Anything alpha-blended (i.e. shaders that don't write to depth buffer) should go here (glass, particle effects).",718],["Overlay - this render queue is meant for overlay effects. Anything rendered last should go here (e.g. lens flares).",718],["Shader \"Transparent Queue Example\"",718],["SubShader",718],["Tags { \"Queue\" = \"Transparent\" }",718],["Pass",718],["// rest of the shader body...",718],["An example illustrating how to render something in the transparent queue",718],["For special uses in-between queues can be used. Internally each queue is represented by integer index; Background is 1000, Geometry is 2000, AlphaTest is 2450, Transparent is 3000 and Overlay is 4000. If a shader uses a queue like this:",718],["Tags { \"Queue\" = \"Geometry+1\" }",718],["This will make the object be rendered after all opaque objects, but before transparent objects, as render queue index will be 2001 (geometry plus one). This is useful in situations where you want some objects be always drawn between other sets of objects. For example, in most cases transparent water should be drawn after opaque objects but before transparent objects.",718],["Queues up to 2500 (\"Geometry+500\") are consided \"opaque\" and optimize the drawing order of the objects for best performance.",718],["Higher rendering queues are considered for \"transparent objects\" and sort objects by distance, starting rendering from the furthest ones and ending with the closest ones. Skyboxes are drawn in between all opaque and all transparent objects.",718],["RenderType tag",718],["RenderType tag categorizes shaders into several predefined groups, e.g. is is an opaque shader, or an alpha-tested shader etc. This is used by Shader Replacement and in some cases used to produce camera's depth texture.",718],["DisableBatching tag",718],["Some shaders (mostly ones that do object-space vertex deformations) do not work when Draw Call Batching is used. DisableBatching tag can be used to incidate that. There are three possible values: \"True\" (always disables batching for this shader), \"False\" (does not disable batching; this is default) and \"LODFading\" (disable batching when LOD fading is active).",718],["ForceNoShadowCasting tag",718],["If ForceNoShadowCasting tag is given and has a value of \"True\", then an object that is rendered using this subshader will never cast shadows. This is mostly useful when you are using shader replacement on transparent objects and you do not wont to inherit a shadow pass from another subshader.",718],["IgnoreProjector tag",718],["If IgnoreProjector tag is given and has a value of \"True\", then an object that uses this shader will not be affected by Projectors. This is mostly useful on semitransparent objects, because there is no good way for Projectors to affect them.",718],["CanUseSpriteAtlas tag",718],["Set CanUseSpriteAtlas tag to \"False\" if the shader is meant for sprites, and will not work when they are packed into atlases (see Sprite Packer).",718],["PreviewType tag",718],["PreviewType indicates how the material inspector preview should display the material. By default materials are displayed as spheres, but PreviewType can also be set to \"Plane\" (will display as 2D) or \"Skybox\" (will display as skybox).",718],["See Also",718],["Passes can be given Tags as well, see Pass Tags.",718],["Surface Shader Examples",719],["Here are some examples of Surface Shaders. The examples below focus on using built-in lighting models; examples on how to implement custom lighting models are in Surface Shader Lighting Examples.",719],["Simple",719],["We'll start with a very simple shader and build up on that. Here's a shader that just sets surface color to \"white\". It uses built-in Lambert (diffuse) lighting model.",719],["Shader \"Example/Diffuse Simple\" {",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float4 color : COLOR;",719],["};",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = 1;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Here's how it looks like on a model with two lights set up:",719],["Texture",719],["An all-white object is quite boring, so let's add a texture. We'll add a Properties block to the shader, so we get a texture selector in our Material. Other changes are in bold below.",719],["Shader \"Example/Diffuse Texture\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float2 uv_MainTex;",719],["};",719],["sampler2D _MainTex;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Normal mapping",719],["Let's add some normal mapping:",719],["Shader \"Example/Diffuse Bump\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_BumpMap (\"Bumpmap\", 2D) = \"bump\" {}",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float2 uv_MainTex;",719],["float2 uv_BumpMap;",719],["};",719],["sampler2D _MainTex;",719],["sampler2D _BumpMap;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["o.Normal = UnpackNormal (tex2D (BumpMap, IN.uvBumpMap));",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Rim Lighting",719],["Now, try to add some Rim Lighting to highlight the edges of an object. We'll add some emissive light based on angle between surface normal and view direction. For that, we'll use viewDir built-in surface shader variable.",719],["Shader \"Example/Rim\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_BumpMap (\"Bumpmap\", 2D) = \"bump\" {}",719],["_RimColor (\"Rim Color\", Color) = (0.26,0.19,0.16,0.0)",719],["_RimPower (\"Rim Power\", Range(0.5,8.0)) = 3.0",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float2 uv_MainTex;",719],["float2 uv_BumpMap;",719],["float3 viewDir;",719],["};",719],["sampler2D _MainTex;",719],["sampler2D _BumpMap;",719],["float4 _RimColor;",719],["float _RimPower;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["o.Normal = UnpackNormal (tex2D (BumpMap, IN.uvBumpMap));",719],["half rim = 1.0 - saturate(dot (normalize(IN.viewDir), o.Normal));",719],["o.Emission = _RimColor.rgb * pow (rim, _RimPower);",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Detail Texture",719],["For a different effect, let's add a detail texture that is combined with the base texture. Detail texture uses the same UVs, but usually different Tiling in the Material, so we have to use different input UV coordinates.",719],["Shader \"Example/Detail\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_BumpMap (\"Bumpmap\", 2D) = \"bump\" {}",719],["_Detail (\"Detail\", 2D) = \"gray\" {}",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float2 uv_MainTex;",719],["float2 uv_BumpMap;",719],["float2 uv_Detail;",719],["};",719],["sampler2D _MainTex;",719],["sampler2D _BumpMap;",719],["sampler2D _Detail;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["o.Albedo *= tex2D (Detail, IN.uvDetail).rgb * 2;",719],["o.Normal = UnpackNormal (tex2D (BumpMap, IN.uvBumpMap));",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Using a checker texture does not make much practical sense, but illustrates what happens:",719],["Detail Texture in Screen Space",719],["How about a detail texture in screen space? It does not make much sense for a soldier head model, but illustrates how a built-in screenPos input might be used:",719],["Shader \"Example/ScreenPos\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_Detail (\"Detail\", 2D) = \"gray\" {}",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float2 uv_MainTex;",719],["float4 screenPos;",719],["};",719],["sampler2D _MainTex;",719],["sampler2D _Detail;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["float2 screenUV = IN.screenPos.xy / IN.screenPos.w;",719],["screenUV *= float2(8,6);",719],["o.Albedo *= tex2D (_Detail, screenUV).rgb * 2;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["The normal mapping has been removed from the shader above, just to make it shorter:",719],["Cubemap Reflection",719],["Here's a shader that does cubemapped reflection using built-in worldRefl input. It's actually very similar to built-in Reflective/Diffuse shader:",719],["Shader \"Example/WorldRefl\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_Cube (\"Cubemap\", CUBE) = \"\" {}",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float2 uv_MainTex;",719],["float3 worldRefl;",719],["};",719],["sampler2D _MainTex;",719],["samplerCUBE _Cube;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb * 0.5;",719],["o.Emission = texCUBE (_Cube, IN.worldRefl).rgb;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["And since it assigns the reflection color as Emission, we get a very shiny soldier:",719],["If you want to do reflections that are affected by normal maps, it needs to be slightly more involved: INTERNAL_DATA needs to be added to the Input structure, and WorldReflectionVector function used to compute per-pixel reflection vector after you've written the Normal output.",719],["Shader \"Example/WorldRefl Normalmap\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_BumpMap (\"Bumpmap\", 2D) = \"bump\" {}",719],["_Cube (\"Cubemap\", CUBE) = \"\" {}",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float2 uv_MainTex;",719],["float2 uv_BumpMap;",719],["float3 worldRefl;",719],["INTERNAL_DATA",719],["};",719],["sampler2D _MainTex;",719],["sampler2D _BumpMap;",719],["samplerCUBE _Cube;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb * 0.5;",719],["o.Normal = UnpackNormal (tex2D (BumpMap, IN.uvBumpMap));",719],["o.Emission = texCUBE (_Cube, WorldReflectionVector (IN, o.Normal)).rgb;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Here's a normal mapped shiny soldier:",719],["Slices via World Space Position",719],["Here's a shader that \"slices\" the object by discarding pixels in nearly horizontal rings. It does that by using clip() Cg/HLSL function based on world position of a pixel. We'll use worldPos built-in surface shader variable.",719],["Shader \"Example/Slices\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_BumpMap (\"Bumpmap\", 2D) = \"bump\" {}",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["Cull Off",719],["CGPROGRAM",719],["pragma surface surf Lambert",719],["struct Input {",719],["float2 uv_MainTex;",719],["float2 uv_BumpMap;",719],["float3 worldPos;",719],["};",719],["sampler2D _MainTex;",719],["sampler2D _BumpMap;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["clip (frac((IN.worldPos.y+IN.worldPos.z*0.1) * 5) - 0.5);",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["o.Normal = UnpackNormal (tex2D (BumpMap, IN.uvBumpMap));",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Normal Extrusion with Vertex Modifier",719],["It is possible to use a \"vertex modifier\" function that will modify incoming vertex data in the vertex shader. This can be used for procedural animation, extrusion along normals and so on. Surface shader compilation directive vertex:functionName is used for that, with a function that takes inout appdata_full parameter.",719],["Here's a shader that moves vertices along their normals by the amount specified in the material:",719],["Shader \"Example/Normal Extrusion\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_Amount (\"Extrusion Amount\", Range(-1,1)) = 0.5",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert vertex:vert",719],["struct Input {",719],["float2 uv_MainTex;",719],["};",719],["float _Amount;",719],["void vert (inout appdata_full v) {",719],["v.vertex.xyz += v.normal * _Amount;",719],["sampler2D _MainTex;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Moving vertices along their normals makes a fat soldier:",719],["Custom data computed per-vertex",719],["Using a vertex modifier function it is also possible to compute custom data in a vertex shader, which then will be passed to the surface shader function per-pixel. The same compilation directive vertex:functionName is used, but the function should take two parameters: inout appdata_full and out Input. You can fill in any Input member that is not a built-in value there.",719],["Note: Custom Input members used in this way must not have names beginning with 'uv' or they won't work properly.",719],["The example below defines a custom float3 customColor member, which is computed in a vertex function:",719],["Shader \"Example/Custom Vertex Data\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert vertex:vert",719],["struct Input {",719],["float2 uv_MainTex;",719],["float3 customColor;",719],["};",719],["void vert (inout appdata_full v, out Input o) {",719],["UNITY_INITIALIZE_OUTPUT(Input,o);",719],["o.customColor = abs(v.normal);",719],["sampler2D _MainTex;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["o.Albedo *= IN.customColor;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["In this example customColor is set to the absolute value of the normal:",719],["More practical uses could be computing any per-vertex data that is not provided by built-in Input variables; or optimizing shader computations. For example, it's possible to compute Rim lighting at object's vertices, instead of doing that in the surface shader per-pixel.",719],["Final Color Modifier",719],["It is possible to use a \"final color modifier\" function that will modify final color computed by the shader. Surface shader compilation directive finalcolor:functionName is used for that, with a function that takes Input IN, SurfaceOutput o, inout fixed4 color parameters.",719],["Here's a simple shader that applies tint to final color. This is different from just applying tint to surface Albedo color: this tint will also affect any color that came from lightmaps, light probes and similar extra sources.",719],["Shader \"Example/Tint Final Color\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_ColorTint (\"Tint\", Color) = (1.0, 0.6, 0.6, 1.0)",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert finalcolor:mycolor",719],["struct Input {",719],["float2 uv_MainTex;",719],["};",719],["fixed4 _ColorTint;",719],["void mycolor (Input IN, SurfaceOutput o, inout fixed4 color)",719],["color *= _ColorTint;",719],["sampler2D _MainTex;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Custom Fog with Final Color Modifier",719],["Common use case for final color modifier (see above) would be implementing completely custom Fog. Fog needs to affect the final computed pixel shader color, which is exactly what the finalcolor modifier does.",719],["Here's a shader that applies fog tint based on distance from screen center. This combines both the vertex modifier with custom vertex data (fog) and final color modifier. When used in forward rendering additive pass, Fog needs to fade to black color, and this example handles that as well with a check for UNITY_PASS_FORWARDADD.",719],["Shader \"Example/Fog via Final Color\" {",719],["Properties {",719],["_MainTex (\"Texture\", 2D) = \"white\" {}",719],["_FogColor (\"Fog Color\", Color) = (0.3, 0.4, 0.7, 1.0)",719],["SubShader {",719],["Tags { \"RenderType\" = \"Opaque\" }",719],["CGPROGRAM",719],["pragma surface surf Lambert finalcolor:mycolor vertex:myvert",719],["struct Input {",719],["float2 uv_MainTex;",719],["half fog;",719],["};",719],["void myvert (inout appdata_full v, out Input data)",719],["UNITY_INITIALIZE_OUTPUT(Input,data);",719],["float4 hpos = mul (UNITY_MATRIX_MVP, v.vertex);",719],["data.fog = min (1, dot (hpos.xy, hpos.xy) * 0.1);",719],["fixed4 _FogColor;",719],["void mycolor (Input IN, SurfaceOutput o, inout fixed4 color)",719],["fixed3 fogColor = _FogColor.rgb;",719],["ifdef UNITY_PASS_FORWARDADD",719],["fogColor = 0;",719],["endif",719],["color.rgb = lerp (color.rgb, fogColor, IN.fog);",719],["sampler2D _MainTex;",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",719],["ENDCG",719],["Fallback \"Diffuse\"",719],["Linear Fog",719],["Shader \"Example/Linear Fog\" {",719],["Properties {",719],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",719],["SubShader {",719],["Tags { \"RenderType\"=\"Opaque\" }",719],["LOD 200",719],["CGPROGRAM",719],["pragma surface surf Lambert finalcolor:mycolor vertex:myvert",719],["sampler2D _MainTex;",719],["uniform half4 unity_FogColor;",719],["uniform half4 unity_FogStart;",719],["uniform half4 unity_FogEnd;",719],["struct Input {",719],["float2 uv_MainTex;",719],["half fog;",719],["};",719],["void myvert (inout appdata_full v, out Input data) {",719],["UNITY_INITIALIZE_OUTPUT(Input,data);",719],["float pos = length(mul (UNITY_MATRIX_MV, v.vertex).xyz);",719],["float diff = unity_FogEnd.x - unity_FogStart.x;",719],["float invDiff = 1.0f / diff;",719],["data.fog = clamp ((unity_FogEnd.x - pos) * invDiff, 0.0, 1.0);",719],["void mycolor (Input IN, SurfaceOutput o, inout fixed4 color) {",719],["fixed3 fogColor = unity_FogColor.rgb;",719],["ifdef UNITY_PASS_FORWARDADD",719],["fogColor = 0;",719],["endif",719],["color.rgb = lerp (fogColor, color.rgb, IN.fog);",719],["void surf (Input IN, inout SurfaceOutput o) {",719],["half4 c = tex2D (MainTex, IN.uvMainTex);",719],["o.Albedo = c.rgb;",719],["o.Alpha = c.a;",719],["ENDCG",719],["FallBack \"Diffuse\"",719],["Custom Lighting models in Surface Shaders",720],["When writing Surface Shaders, you're describing properties of a surface (albedo color, normal, ...) and the lighting interaction is computed by a Lighting Model. Built-in lighting models are Lambert (diffuse lighting) and BlinnPhong (specular lighting).",720],["Sometimes you might want to use a custom lighting model, and it is possible to do that in Surface Shaders. Lighting model is nothing more than a couple of Cg/HLSL functions that match some conventions. The built-in Lambert and BlinnPhong models are defined in Lighting.cginc file inside Unity ({unity install path}/Data/CGIncludes/Lighting.cginc on Windows, /Applications/Unity/Unity.app/Contents/CGIncludes/Lighting.cginc on Mac).",720],["Lighting Model declaration",720],["Lighting model is a couple of regular functions with names starting with Lighting. They can be declared anywhere in your shader file or one of included files. The functions are:",720],["half4 Lighting&lt;Name&gt; (SurfaceOutput s, half3 lightDir, half atten);",720],["This is used in forward rendering path for light models that are not view direction dependent (e.g. diffuse).",720],["half4 Lighting&lt;Name&gt; (SurfaceOutput s, half3 lightDir, half3 viewDir, half atten);",720],["This is used in forward rendering path for light models that are view direction dependent.",720],["half4 Lighting&lt;Name&gt;_PrePass (SurfaceOutput s, half4 light);",720],["This is used in deferred lighting path.",720],["Note that you don't need to declare all functions. A lighting model either uses view direction or it does not. Similarly, if the lighting model will not work in deferred lighting, you just do not declare _PrePass function, and all shaders that use it will compile to forward rendering only.",720],["Decoding Lightmaps",720],["Decoding lightmap data can be customized in a similar fashion as the lighting function for forward and deferred lighting. Use one of the functions below depending on whether your light model is view direction dependent or not. To decode standard Unity lightmap texture data (passed in color, totalColor, indirectOnlyColor and scale arguments) use built-in DecodeLightmap function.",720],["Custom lightmap decoding functions handle forward and deferred lighting rendering paths automatically. However you must be aware that in deferred case Lighting&lt;Name&gt;_PrePass function will be called after lightmap decoding and light argument will contain sum of realtime lighting and lightmaps. If necessary you can distinguish forward and deferred paths by using built-in UNITY_PASS_PREPASSFINAL macro.",720],["Functions to customize decoding of Single lightmaps are:",720],["half4 Lighting&lt;Name&gt;_SingleLightmap (SurfaceOutput s, fixed4 color);",720],["This is used for light models that are not view direction dependent (e.g. diffuse).",720],["half4 Lighting&lt;Name&gt;_SingleLightmap (SurfaceOutput s, fixed4 color, half3 viewDir);",720],["This is used for light models that are view direction dependent.",720],["Functions to customize decoding of Dual lightmaps are:",720],["half4 Lighting&lt;Name&gt;_DualLightmap (SurfaceOutput s, fixed4 totalColor, fixed4 indirectOnlyColor, half indirectFade);",720],["This is used for light models that are not view direction dependent (e.g. diffuse).",720],["half4 Lighting&lt;Name&gt;_DualLightmap (SurfaceOutput s, fixed4 totalColor, fixed4 indirectOnlyColor, half indirectFade, half3 viewDir);",720],["This is used for light models that are view direction dependent.",720],["Functions to customize decoding of Directional lightmaps are:",720],["half4 Lighting&lt;Name&gt;_DirLightmap (SurfaceOutput s, fixed4 color, fixed4 scale, bool surfFuncWritesNormal);",720],["This is used for light models that are not view direction dependent (e.g. diffuse).",720],["half4 Lighting&lt;Name&gt;_DirLightmap (SurfaceOutput s, fixed4 color, fixed4 scale, half3 viewDir, bool surfFuncWritesNormal, out half3 specColor);",720],["This is used for light models that are view direction dependent.",720],["Examples",720],["Surface Shader Lighting Examples",720],["Surface Shader Lighting Examples",721],["Here are some examples of custom lighting models in Surface Shaders. General Surface Shader examples are in this page.",721],["Because Deferred Lighting does not play well with some custom per-material lighting models, in most examples below we make the shaders compile to Forward Rendering only.",721],["Diffuse",721],["We'll start with a shader that uses built-in Lambert lighting model:-",721],["Shader \"Example/Diffuse Texture\" {",721],["Properties {",721],["_MainTex (\"Texture\", 2D) = \"white\" {}",721],["SubShader {",721],["Tags { \"RenderType\" = \"Opaque\" }",721],["CGPROGRAM",721],["pragma surface surf Lambert",721],["struct Input {",721],["float2 uv_MainTex;",721],["};",721],["sampler2D _MainTex;",721],["void surf (Input IN, inout SurfaceOutput o) {",721],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",721],["ENDCG",721],["Fallback \"Diffuse\"",721],["Here's how it looks like with a texture and without an actual texture (one directional light is in the scene):",721],["Now, let's do exactly the same, but write out our own lighting model instead of using built-in Lambert one. Surface Shader Lighting Models are just some functions that we need to write. Here's a simple Lambert one. Note that only the CGPROGRAM section changes; the surrounding shader code is exactly the same:-",721],["Shader \"Example/Diffuse Texture\" {",721],["Properties {",721],["_MainTex (\"Texture\", 2D) = \"white\" {}",721],["SubShader {",721],["Tags { \"RenderType\" = \"Opaque\" }",721],["CGPROGRAM",721],["pragma surface surf SimpleLambert",721],["half4 LightingSimpleLambert (SurfaceOutput s, half3 lightDir, half atten) {",721],["half NdotL = dot (s.Normal, lightDir);",721],["half4 c;",721],["c.rgb = s.Albedo * _LightColor0.rgb * (NdotL * atten * 2);",721],["c.a = s.Alpha;",721],["return c;",721],["struct Input {",721],["float2 uv_MainTex;",721],["};",721],["sampler2D _MainTex;",721],["void surf (Input IN, inout SurfaceOutput o) {",721],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",721],["ENDCG",721],["Fallback \"Diffuse\"",721],["So our simple Diffuse lighting model is LightingSimpleLambert function. It computes lighting by doing a dot product between surface normal and light direction, and then applies light attenuation and color.",721],["Diffuse Wrap",721],["Here's Wrapped Diffuse - a modification of Diffuse lighting, where illumination \"wraps around\" the edges of objects. It's useful for faking subsurface scattering effect. Since it is only the CGPROGRAM section that changes, once again, the surrounding shader code is omitted:-",721],["...ShaderLab code...",721],["CGPROGRAM",721],["pragma surface surf WrapLambert",721],["half4 LightingWrapLambert (SurfaceOutput s, half3 lightDir, half atten) {",721],["half NdotL = dot (s.Normal, lightDir);",721],["half diff = NdotL * 0.5 + 0.5;",721],["half4 c;",721],["c.rgb = s.Albedo * _LightColor0.rgb * (diff * atten * 2);",721],["c.a = s.Alpha;",721],["return c;",721],["struct Input {",721],["float2 uv_MainTex;",721],["};",721],["sampler2D _MainTex;",721],["void surf (Input IN, inout SurfaceOutput o) {",721],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",721],["ENDCG",721],["...ShaderLab code...",721],["Toon Ramp",721],["Here's a \"Ramp\" lighting model that uses a texture ramp to define how surface responds to angle between light and the normal. This can be used for variety of effects, including Toon lighting.",721],["...ShaderLab code...",721],["CGPROGRAM",721],["pragma surface surf Ramp",721],["sampler2D _Ramp;",721],["half4 LightingRamp (SurfaceOutput s, half3 lightDir, half atten) {",721],["half NdotL = dot (s.Normal, lightDir);",721],["half diff = NdotL * 0.5 + 0.5;",721],["half3 ramp = tex2D (_Ramp, float2(diff)).rgb;",721],["half4 c;",721],["c.rgb = s.Albedo * _LightColor0.rgb * ramp * (atten * 2);",721],["c.a = s.Alpha;",721],["return c;",721],["struct Input {",721],["float2 uv_MainTex;",721],["};",721],["sampler2D _MainTex;",721],["void surf (Input IN, inout SurfaceOutput o) {",721],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",721],["ENDCG",721],["...ShaderLab code...",721],["Simple Specular",721],["Here's a simple specular lighting model. It's quite simple to what built-in BlinnPhong actually does; we just put it here to illustrate how it's done.",721],["...ShaderLab code...",721],["CGPROGRAM",721],["pragma surface surf SimpleSpecular",721],["half4 LightingSimpleSpecular (SurfaceOutput s, half3 lightDir, half3 viewDir, half atten) {",721],["half3 h = normalize (lightDir + viewDir);",721],["half diff = max (0, dot (s.Normal, lightDir));",721],["float nh = max (0, dot (s.Normal, h));",721],["float spec = pow (nh, 48.0);",721],["half4 c;",721],["c.rgb = (s.Albedo * _LightColor0.rgb * diff + _LightColor0.rgb * spec) * (atten * 2);",721],["c.a = s.Alpha;",721],["return c;",721],["struct Input {",721],["float2 uv_MainTex;",721],["};",721],["sampler2D _MainTex;",721],["void surf (Input IN, inout SurfaceOutput o) {",721],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",721],["ENDCG",721],["...ShaderLab code...",721],["Decoding Lightmaps",721],["We'll start with a shader that mimics built-in lightmap decoding and uses Unity built-in function DecodeLightmap to decode information from data stored in lightmap textures and built-in UNITY_DIRBASIS macro defining basis vectors for Directional lightmaps:",721],["Shader \"Example/Standard Lightmap Decoding\" {",721],["Properties {",721],["_MainTex (\"Texture\", 2D) = \"white\" {}",721],["SubShader {",721],["Tags { \"RenderType\" = \"Opaque\" }",721],["CGPROGRAM",721],["pragma surface surf Standard",721],["half4 LightingStandard (SurfaceOutput s, half3 lightDir, half atten) {",721],["half NdotL = dot (s.Normal, lightDir);",721],["half4 c; c.rgb = s.Albedo * _LightColor0.rgb * (NdotL * atten * 2);",721],["c.a = s.Alpha;",721],["return c;",721],["inline fixed4 LightingStandard_SingleLightmap (SurfaceOutput s, fixed4 color) {",721],["half3 lm = DecodeLightmap (color);",721],["return fixed4(lm, 0);",721],["inline fixed4 LightingStandard_DualLightmap (SurfaceOutput s, fixed4 totalColor, fixed4 indirectOnlyColor, half indirectFade) {",721],["half3 lm = lerp (DecodeLightmap (indirectOnlyColor), DecodeLightmap (totalColor), indirectFade);",721],["return fixed4(lm, 0);",721],["inline fixed4 LightingStandard_StandardLightmap (SurfaceOutput s, fixed4 color, fixed4 scale, bool surfFuncWritesNormal) {",721],["UNITY_DIRBASIS",721],["half3 lm = DecodeLightmap (color);",721],["half3 scalePerBasisVector = DecodeLightmap (scale);",721],["if (surfFuncWritesNormal)",721],["half3 normalInRnmBasis = saturate (mul (unity_DirBasis, s.Normal));",721],["lm *= dot (normalInRnmBasis, scalePerBasisVector);",721],["return fixed4(lm, 0);",721],["struct Input {",721],["float2 uv_MainTex;",721],["};",721],["sampler2D _MainTex;",721],["void surf (Input IN, inout SurfaceOutput o) {",721],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",721],["ENDCG",721],["Fallback \"Diffuse\"",721],["Now, let's add some tone mapping for light stored in lightmaps:",721],["Shader \"Example/Tonemapped Lightmap Decoding\" {",721],["Properties {",721],["_MainTex (\"Texture\", 2D) = \"white\" {}",721],["_Gain (\"Lightmap tone-mapping Gain\", Float) = 1",721],["_Knee (\"Lightmap tone-mapping Knee\", Float) = 0.5",721],["_Compress (\"Lightmap tone-mapping Compress\", Float) = 0.33",721],["SubShader {",721],["Tags { \"RenderType\" = \"Opaque\" }",721],["CGPROGRAM",721],["pragma surface surf Tonemapped",721],["half4 LightingTonemapped (SurfaceOutput s, half3 lightDir, half atten) {",721],["half NdotL = dot (s.Normal, lightDir);",721],["half4 c; c.rgb = s.Albedo * _LightColor0.rgb * (NdotL * atten * 2); c.a = s.Alpha;",721],["return c;",721],["half _Gain;",721],["half _Knee;",721],["half _Compress;",721],["inline half3 TonemapLight (half3 i) {",721],["i *= _Gain;",721],["return (i > Knee)? (((i - Knee)*Compress)+Knee): i;",721],["inline fixed4 LightingTonemapped_SingleLightmap (SurfaceOutput s, fixed4 color) {",721],["half3 lm = TonemapLight(DecodeLightmap (color));",721],["return fixed4(lm, 0);",721],["inline fixed4 LightingTonemapped_DualLightmap (SurfaceOutput s, fixed4 totalColor, fixed4 indirectOnlyColor, half indirectFade) {",721],["half3 lm = TonemapLight(lerp (DecodeLightmap (indirectOnlyColor), DecodeLightmap (totalColor), indirectFade));",721],["return fixed4(lm, 0);",721],["inline fixed4 LightingTonemapped_StandardLightmap (SurfaceOutput s, fixed4 color, fixed4 scale, bool surfFuncWritesNormal) {",721],["UNITY_DIRBASIS",721],["half3 lm = TonemapLight(DecodeLightmap (color));",721],["half3 scalePerBasisVector = DecodeLightmap (scale);",721],["if (surfFuncWritesNormal)",721],["half3 normalInRnmBasis = saturate (mul (unity_DirBasis, s.Normal));",721],["lm *= dot (normalInRnmBasis, scalePerBasisVector);",721],["return fixed4(lm, 0);",721],["struct Input {",721],["float2 uv_MainTex;",721],["};",721],["sampler2D _MainTex;",721],["void surf (Input IN, inout SurfaceOutput o) {",721],["o.Albedo = tex2D (MainTex, IN.uvMainTex).rgb;",721],["ENDCG",721],["Fallback \"Diffuse\"",721],["Writing Surface Shaders",722],["Writing shaders that interact with lighting is complex. There are different light types, different shadow options, different rendering paths (forward and deferred rendering), and the shader should somehow handle all that complexity.",722],["Surface Shaders in Unity is a code generation approach that makes it much easier to write lit shaders than using low level vertex/pixel shader programs. Note that there are no custom languages, magic or ninjas involved in Surface Shaders; it just generates all the repetitive code that would have to be written by hand. You still write shader code in Cg / HLSL.",722],["For some examples, take a look at Surface Shader Examples and Surface Shader Custom Lighting Examples.",722],["How it works",722],["You define a \"surface function\" that takes any UVs or data you need as input, and fills in output structure SurfaceOutput. SurfaceOutput basically describes properties of the surface (it's albedo color, normal, emission, specularity etc.). You write this code in Cg / HLSL.",722],["Surface Shader compiler then figures out what inputs are needed, what outputs are filled and so on, and generates actual vertex&amp;pixel shaders, as well as rendering passes to handle forward and deferred rendering.",722],["Standard output structure of surface shaders is this:",722],["struct SurfaceOutput",722],["fixed3 Albedo;  // diffuse color",722],["fixed3 Normal;  // tangent space normal, if written",722],["fixed3 Emission;",722],["half Specular;  // specular power in 0..1 range",722],["fixed Gloss;    // specular intensity",722],["fixed Alpha;    // alpha for transparencies",722],["};",722],["In Unity 5, surface shaders can also use physically based lighting models. Built-in Standard and StandardSpecular lighting models (see below) use these output structures respectively:",722],["struct SurfaceOutputStandard",722],["fixed3 Albedo;      // base (diffuse or specular) color",722],["fixed3 Normal;      // tangent space normal, if written",722],["half3 Emission;",722],["half Metallic;      // 0=non-metal, 1=metal",722],["half Smoothness;    // 0=rough, 1=smooth",722],["half Occlusion;     // occlusion (default 1)",722],["fixed Alpha;        // alpha for transparencies",722],["};",722],["struct SurfaceOutputStandardSpecular",722],["fixed3 Albedo;      // diffuse color",722],["fixed3 Specular;    // specular color",722],["fixed3 Normal;      // tangent space normal, if written",722],["half3 Emission;",722],["half Smoothness;    // 0=rough, 1=smooth",722],["half Occlusion;     // occlusion (default 1)",722],["fixed Alpha;        // alpha for transparencies",722],["};",722],["Samples",722],["See Surface Shader Examples, Surface Shader Custom Lighting Examples and Surface Shader Tessellation pages.",722],["Surface Shader compile directives",722],["Surface shader is placed inside CGPROGRAM..ENDCG block, just like any other shader. The differences are:",722],["It must be placed inside SubShader block, not inside Pass. Surface shader will compile into multiple passes itself.",722],["It uses #pragma surface ... directive to indicate it's a surface shader.",722],["The #pragma surface directive is:",722],["pragma surface surfaceFunction lightModel [optionalparams]",722],["Required parameters",722],["surfaceFunction - which Cg function has surface shader code. The function should have the form of void surf (Input IN, inout SurfaceOutput o), where Input is a structure you have defined. Input should contain any texture coordinates and extra automatic variables needed by surface function.",722],["lightModel - lighting model to use. Built-in ones are physically based Standard and StandardSpecular, as well as simple non-physically based Lambert (diffuse) and BlinnPhong (specular). See Custom Lighting Models page for how to write your own.",722],["Standard lighting model uses SurfaceOutputStandard output struct, and matches the Standard (metallic workflow) shader in Unity.",722],["StandardSpecular lighting model uses SurfaceOutputStandardSpecular output struct, and matches the Standard (specular setup) shader in Unity.",722],["Lambert and BlinnPhong lighting models are not physically based (coming from Unity 4.x), but the shaders using them can be faster to render on low-end hardware.",722],["Optional parameters",722],["Transparency and alpha testing** is controlled by alpha and alphatest directives. Transparency",722],["can typically be of two kinds: traditional alpha blending (used for fading objects out) or more",722],["physically plausible \"premultiplied blending\" (which allows semitransparent surfaces to retain proper",722],["specular reflections). Enabling semitransparency makes the generated surface shader code contain",722],["blending commands; whereas enabling alpha cutout will do a fragment discard in the",722],["generated pixel shader, based on the given variable.",722],["alpha or alpha:auto - Will pick fade-transparency (same as alpha:fade) for simple lighting functions, and premultiplied transparency (same as alpha:premul) for physically based lighting functions.",722],["alpha:fade - Enable traditional fade-transparency.",722],["alpha:premul - Enable premultiplied alpha transparency.",722],["alphatest:VariableName - Enable alpha cutout transparency. Cutoff value is in a float variable with VariableName. You'll likely also want to use addshadow directive to generate proper shadow caster pass.",722],["keepalpha - By default opaque surface shaders write 1.0 (white) into alpha channel, no matter what's output in the Alpha of output struct or what's returned by the lighting function. Using this option allows keeping lighting function's alpha value even for opaque surface shaders.",722],["decal:add - Additive decal shader (e.g. terrain AddPass). This is meant for objects that lie atop of other surfaces, and use additive blending.",722],["decal:blend - Semitransparent decal shader. This is meant for objects that lie atop of other surfaces, and use alpha blending.",722],["Custom modifier functions** can be used to alter or compute incoming vertex data, or to",722],["alter final computed fragment color.",722],["vertex:VertexFunction - Custom vertex modification function. This function is invoked at start of generated vertex shader, and can modify or compute per-vertex data See Surface Shader Examples.",722],["finalcolor:ColorFunction - Custom final color modification function. See Surface Shader Examples.",722],["Shadows and Tessellation** - additional directives can be given to control how shadows and tessellation is handled.",722],["addshadow - Generate a shadow caster pass. Commonly used with custom vertex modification, so that shadow casting also gets any procedural vertex animation. Often shaders don't need any special shadows handling, as they can just use shadow caster pass from their fallback.",722],["fullforwardshadows - Support all light shadow types in Forward rendering path. By default shaders only support shadows from one directional light in forward rendering (to save on internal shader variant count). If you need point or spot light shadows in forward rendering, use this directive.",722],["tessellate:TessFunction - use DX11 GPU tessellation; the function computes tessellation factors. See Surface Shader Tessellation for details.",722],["Code generation options** - by default generated surface shader code tries to handle all possible",722],["lighting/shadowing/lightmap scenarios. However in some cases you know you won't need some of them, and it is possible",722],["to adjust generated code to skip them. This can result in smaller shaders that are faster to load.",722],["exclude_path:deferred, exclude_path:forward, exclude_path:prepass  - Do not generate passes for given rendering path (Deferred Shading, Forward and Legacy Deferred respectively).",722],["noshadow - Disables all shadow receiving support in this shader.",722],["noambient - Do not apply any ambient lighting or light probes.",722],["novertexlights - Do not apply any light probes or per-vertex lights in Forward rendering.",722],["nolightmap - Disables all lightmapping support in this shader.",722],["nodynlightmap - Disables runtime dynamic global illumination support in this shader.",722],["nodirlightmap - Disables directional lightmaps support in this shader.",722],["nofog - Disables all built-in Fog support.",722],["nometa - Does not generate a \"meta\" pass (that's used by lightmapping &amp; dynamic global illumination to extract surface information).",722],["noforwardadd - Disables Forward rendering additive pass. This makes the shader support one full directional light, with all other lights computed per-vertex/SH. Makes shaders smaller as well.",722],["Miscellaneous options**",722],["softvegetation - Makes the surface shader only be rendered when Soft Vegetation is on.",722],["interpolateview - Compute view direction in the vertex shader and interpolate it; instead of computing it in the pixel shader. This can make the pixel shader faster, but uses up one more texture interpolator.",722],["halfasview - Pass half-direction vector into the lighting function instead of view-direction. Half-direction will be computed and normalized per vertex. This is faster, but not entirely correct.",722],["approxview - Removed in Unity 5.0. Use interpolateview instead.",722],["dualforward - Use dual lightmaps in forward rendering path.",722],["To see what exactly is different from using different options above, it can be helpful to use \"Show Generated Code\" button in the Shader Inspector.",722],["Surface Shader input structure",722],["The input structure Input generally has any texture coordinates needed by the shader. Texture coordinates must be named \"uv\" followed by texture name (or start it with \"uv2\" to use second texture coordinate set).",722],["Additional values that can be put into Input structure:",722],["float3 viewDir - will contain view direction, for computing Parallax effects, rim lighting etc.",722],["float4 with COLOR semantic - will contain interpolated per-vertex color.",722],["float4 screenPos - will contain screen space position for reflection or screenspace effects.",722],["float3 worldPos - will contain world space position.",722],["float3 worldRefl - will contain world reflection vector if surface shader does not write to o.Normal. See Reflect-Diffuse shader for example.",722],["float3 worldNormal - will contain world normal vector if surface shader does not write to o.Normal.",722],["float3 worldRefl; INTERNAL_DATA - will contain world reflection vector if surface shader writes to o.Normal. To get the reflection vector based on per-pixel normal map, use WorldReflectionVector (IN, o.Normal). See Reflect-Bumped shader for example.",722],["float3 worldNormal; INTERNAL_DATA - will contain world normal vector if surface shader writes to o.Normal. To get the normal vector based on per-pixel normal map, use WorldNormalVector (IN, o.Normal).",722],["Surface shaders and DirectX 11",722],["Currently some parts of surface shader compilation pipeline do not understand DirectX 11-specific HLSL syntax, so if you're using HLSL features like StructuredBuffers, RWTextures and other non-DX9 syntax, you have to wrap it into a DX11-only preprocessor macro. See Platform Specific Differences page for details.",722],["Surface Shaders with DX11 Tessellation",723],["Surface Shaders have some support for DirectX 11 GPU Tessellation. Idea is:",723],["Tessellation is indicated by tessellate:FunctionName modifier. That function computes triangle edge and inside tessellation factors.",723],["When tessellation is used, \"vertex modifier\" (vertex:FunctionName) is invoked after tessellation, for each generated vertex in the domain shader. Here you'd typically to displacement mapping.",723],["Surface shaders can optionally compute phong tessellation to smooth model surface even without any displacement mapping.",723],["Current limitations of tessellation support:",723],["Only triangle domain - no quads, no isoline tessellation.",723],["When tessellation is used, shader is automatically compiled into Shader Model 5.0 target, which means it will only work on DX11.",723],["No GPU tessellation, displacement in the vertex modifier",723],["Let's start with a surface shader that does some displacement mapping without using tessellation. It just moves vertices along their normals based on amount coming from a displacement map:",723],["Shader \"Tessellation Sample\" {",723],["Properties {",723],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",723],["_DispTex (\"Disp Texture\", 2D) = \"gray\" {}",723],["_NormalMap (\"Normalmap\", 2D) = \"bump\" {}",723],["_Displacement (\"Displacement\", Range(0, 1.0)) = 0.3",723],["_Color (\"Color\", color) = (1,1,1,0)",723],["_SpecColor (\"Spec color\", color) = (0.5,0.5,0.5,0.5)",723],["SubShader {",723],["Tags { \"RenderType\"=\"Opaque\" }",723],["LOD 300",723],["CGPROGRAM",723],["pragma surface surf BlinnPhong addshadow fullforwardshadows vertex:disp nolightmap",723],["pragma target 5.0",723],["struct appdata {",723],["float4 vertex : POSITION;",723],["float4 tangent : TANGENT;",723],["float3 normal : NORMAL;",723],["float2 texcoord : TEXCOORD0;",723],["};",723],["sampler2D _DispTex;",723],["float _Displacement;",723],["void disp (inout appdata v)",723],["float d = tex2Dlod(_DispTex, float4(v.texcoord.xy,0,0)).r * _Displacement;",723],["v.vertex.xyz += v.normal * d;",723],["struct Input {",723],["float2 uv_MainTex;",723],["};",723],["sampler2D _MainTex;",723],["sampler2D _NormalMap;",723],["fixed4 _Color;",723],["void surf (Input IN, inout SurfaceOutput o) {",723],["half4 c = tex2D (MainTex, IN.uvMainTex) * _Color;",723],["o.Albedo = c.rgb;",723],["o.Specular = 0.2;",723],["o.Gloss = 1.0;",723],["o.Normal = UnpackNormal(tex2D(NormalMap, IN.uvMainTex));",723],["ENDCG",723],["FallBack \"Diffuse\"",723],["The above shader is fairly standard, points of intetest:",723],["Vertex modifier disp samples the displacement map and moves vertices along their normals.",723],["It uses custom \"vertex data input\" structure (appdata) instead of default appdata_full. This is not needed yet, but it's more efficient for tessellation to use as small structure as possible.",723],["Since our vertex data does not have 2nd UV coordinate, we add nolightmap directive to exclude lightmaps.",723],["Here's how some simple objects would look like with this shader:",723],["Fixed amount of tessellation",723],["Let's add fixed amount of tessellation, i.e. the same tessellation level for the whole mesh. This approach is suitable if your model's faces are roughly the same size on screen. Some script could then change the tessellation level from code, based on distance to the camera.",723],["Shader \"Tessellation Sample\" {",723],["Properties {",723],["_Tess (\"Tessellation\", Range(1,32)) = 4",723],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",723],["_DispTex (\"Disp Texture\", 2D) = \"gray\" {}",723],["_NormalMap (\"Normalmap\", 2D) = \"bump\" {}",723],["_Displacement (\"Displacement\", Range(0, 1.0)) = 0.3",723],["_Color (\"Color\", color) = (1,1,1,0)",723],["_SpecColor (\"Spec color\", color) = (0.5,0.5,0.5,0.5)",723],["SubShader {",723],["Tags { \"RenderType\"=\"Opaque\" }",723],["LOD 300",723],["CGPROGRAM",723],["pragma surface surf BlinnPhong addshadow fullforwardshadows vertex:disp tessellate:tessFixed nolightmap",723],["pragma target 5.0",723],["struct appdata {",723],["float4 vertex : POSITION;",723],["float4 tangent : TANGENT;",723],["float3 normal : NORMAL;",723],["float2 texcoord : TEXCOORD0;",723],["};",723],["float _Tess;",723],["float4 tessFixed()",723],["return _Tess;",723],["sampler2D _DispTex;",723],["float _Displacement;",723],["void disp (inout appdata v)",723],["float d = tex2Dlod(_DispTex, float4(v.texcoord.xy,0,0)).r * _Displacement;",723],["v.vertex.xyz += v.normal * d;",723],["struct Input {",723],["float2 uv_MainTex;",723],["};",723],["sampler2D _MainTex;",723],["sampler2D _NormalMap;",723],["fixed4 _Color;",723],["void surf (Input IN, inout SurfaceOutput o) {",723],["half4 c = tex2D (MainTex, IN.uvMainTex) * _Color;",723],["o.Albedo = c.rgb;",723],["o.Specular = 0.2;",723],["o.Gloss = 1.0;",723],["o.Normal = UnpackNormal(tex2D(NormalMap, IN.uvMainTex));",723],["ENDCG",723],["FallBack \"Diffuse\"",723],["The tessellation function, tessFixed in our shader, returns four tessellation factors as a single float4 value: tree factors for each edge of the triangle, and one factor for the inside of the triangle. Here, we just return a constant value that is set in material properties.",723],["Distance-based tessellation",723],["We can also change tessellation level based on distance from the camera. For example, we could define two distance values; distance at which tessellation is at maximum (say, 10 meters), and distance towards which tessellation level gradually decreases (say, 20 meters).",723],["Shader \"Tessellation Sample\" {",723],["Properties {",723],["_Tess (\"Tessellation\", Range(1,32)) = 4",723],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",723],["_DispTex (\"Disp Texture\", 2D) = \"gray\" {}",723],["_NormalMap (\"Normalmap\", 2D) = \"bump\" {}",723],["_Displacement (\"Displacement\", Range(0, 1.0)) = 0.3",723],["_Color (\"Color\", color) = (1,1,1,0)",723],["_SpecColor (\"Spec color\", color) = (0.5,0.5,0.5,0.5)",723],["SubShader {",723],["Tags { \"RenderType\"=\"Opaque\" }",723],["LOD 300",723],["CGPROGRAM",723],["pragma surface surf BlinnPhong addshadow fullforwardshadows vertex:disp tessellate:tessDistance nolightmap",723],["pragma target 5.0",723],["include \"Tessellation.cginc\"",723],["struct appdata {",723],["float4 vertex : POSITION;",723],["float4 tangent : TANGENT;",723],["float3 normal : NORMAL;",723],["float2 texcoord : TEXCOORD0;",723],["};",723],["float _Tess;",723],["float4 tessDistance (appdata v0, appdata v1, appdata v2) {",723],["float minDist = 10.0;",723],["float maxDist = 25.0;",723],["return UnityDistanceBasedTess(v0.vertex, v1.vertex, v2.vertex, minDist, maxDist, _Tess);",723],["sampler2D _DispTex;",723],["float _Displacement;",723],["void disp (inout appdata v)",723],["float d = tex2Dlod(_DispTex, float4(v.texcoord.xy,0,0)).r * _Displacement;",723],["v.vertex.xyz += v.normal * d;",723],["struct Input {",723],["float2 uv_MainTex;",723],["};",723],["sampler2D _MainTex;",723],["sampler2D _NormalMap;",723],["fixed4 _Color;",723],["void surf (Input IN, inout SurfaceOutput o) {",723],["half4 c = tex2D (MainTex, IN.uvMainTex) * _Color;",723],["o.Albedo = c.rgb;",723],["o.Specular = 0.2;",723],["o.Gloss = 1.0;",723],["o.Normal = UnpackNormal(tex2D(NormalMap, IN.uvMainTex));",723],["ENDCG",723],["FallBack \"Diffuse\"",723],["Here the tessellation function takes three parameters; the vertex data of three triangle corners before tessellation. This is needed to compute tessellation levels, which depend on vertex positions now. We include a built-in helper file Tessellation.cginc and call UnityDistanceBasedTess function from it to do all the work. That function computes distance of each vertex to the camera and derives final tessellation factors.",723],["Edge length based tessellation",723],["Purely distance based tessellation is good only when triangle sizes are quite similar. In the image above, you can see that objects that have small triangles are tessellated too much, while objects that have large triangles aren't tessellated enough.",723],["Instead, tessellation levels could be computed based on triangle edge length on the screen - the longer the edge, the larger tessellation factor should be applied.",723],["Shader \"Tessellation Sample\" {",723],["Properties {",723],["_EdgeLength (\"Edge length\", Range(2,50)) = 15",723],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",723],["_DispTex (\"Disp Texture\", 2D) = \"gray\" {}",723],["_NormalMap (\"Normalmap\", 2D) = \"bump\" {}",723],["_Displacement (\"Displacement\", Range(0, 1.0)) = 0.3",723],["_Color (\"Color\", color) = (1,1,1,0)",723],["_SpecColor (\"Spec color\", color) = (0.5,0.5,0.5,0.5)",723],["SubShader {",723],["Tags { \"RenderType\"=\"Opaque\" }",723],["LOD 300",723],["CGPROGRAM",723],["pragma surface surf BlinnPhong addshadow fullforwardshadows vertex:disp tessellate:tessEdge nolightmap",723],["pragma target 5.0",723],["include \"Tessellation.cginc\"",723],["struct appdata {",723],["float4 vertex : POSITION;",723],["float4 tangent : TANGENT;",723],["float3 normal : NORMAL;",723],["float2 texcoord : TEXCOORD0;",723],["};",723],["float _EdgeLength;",723],["float4 tessEdge (appdata v0, appdata v1, appdata v2)",723],["return UnityEdgeLengthBasedTess (v0.vertex, v1.vertex, v2.vertex, _EdgeLength);",723],["sampler2D _DispTex;",723],["float _Displacement;",723],["void disp (inout appdata v)",723],["float d = tex2Dlod(_DispTex, float4(v.texcoord.xy,0,0)).r * _Displacement;",723],["v.vertex.xyz += v.normal * d;",723],["struct Input {",723],["float2 uv_MainTex;",723],["};",723],["sampler2D _MainTex;",723],["sampler2D _NormalMap;",723],["fixed4 _Color;",723],["void surf (Input IN, inout SurfaceOutput o) {",723],["half4 c = tex2D (MainTex, IN.uvMainTex) * _Color;",723],["o.Albedo = c.rgb;",723],["o.Specular = 0.2;",723],["o.Gloss = 1.0;",723],["o.Normal = UnpackNormal(tex2D(NormalMap, IN.uvMainTex));",723],["ENDCG",723],["FallBack \"Diffuse\"",723],["Here again, we just call UnityEdgeLengthBasedTess function from Tessellation.cginc to do all the actual work.",723],["For performance reasons, it's advisable to call UnityEdgeLengthBasedTessCull function instead, which will do patch frustum culling. This makes the shader a bit more expensive, but saves a lot of GPU work for parts of meshes that are outside of camera's view.",723],["Phong Tessellation",723],["Phong Tessellation modifies positions of the subdivided faces so that the resulting surface follows the mesh normals a bit. It's quite an effective way of making low-poly meshes become more smooth.",723],["Unity's surface shaders can compute Phong tessellation automatically using tessphong:VariableName compilation directive. Here's an example shader:",723],["Shader \"Phong Tessellation\" {",723],["Properties {",723],["_EdgeLength (\"Edge length\", Range(2,50)) = 5",723],["_Phong (\"Phong Strengh\", Range(0,1)) = 0.5",723],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",723],["_Color (\"Color\", color) = (1,1,1,0)",723],["SubShader {",723],["Tags { \"RenderType\"=\"Opaque\" }",723],["LOD 300",723],["CGPROGRAM",723],["pragma surface surf Lambert vertex:dispNone tessellate:tessEdge tessphong:_Phong nolightmap",723],["include \"Tessellation.cginc\"",723],["struct appdata {",723],["float4 vertex : POSITION;",723],["float3 normal : NORMAL;",723],["float2 texcoord : TEXCOORD0;",723],["};",723],["void dispNone (inout appdata v) { }",723],["float _Phong;",723],["float _EdgeLength;",723],["float4 tessEdge (appdata v0, appdata v1, appdata v2)",723],["return UnityEdgeLengthBasedTess (v0.vertex, v1.vertex, v2.vertex, _EdgeLength);",723],["struct Input {",723],["float2 uv_MainTex;",723],["};",723],["fixed4 _Color;",723],["sampler2D _MainTex;",723],["void surf (Input IN, inout SurfaceOutput o) {",723],["half4 c = tex2D (MainTex, IN.uvMainTex) * _Color;",723],["o.Albedo = c.rgb;",723],["o.Alpha = c.a;",723],["ENDCG",723],["FallBack \"Diffuse\"",723],["Here's a comparison between regular shader (top row) and one that uses Phong tessellation (bottom row). You can see that even without any displacement mapping,",723],["the surface becomes more round.",723],["Built-in shader variables",724],["Unity provides a handful of built-in global variables for your shaders: things like current object's transformation matrices, light parameters, current time and so on. You use them in shader programs like any other variable, the only difference is that you don't have to declare them - they are all declared in UnityShaderVariables.cginc include file that is included automatically.",724],["Transformations",724],["All these matrices are float4x4 type.",724],["",724],["Name Value ",724],["UNITY_MATRIX_MVP Current model * view * projection matrix. ",724],["UNITY_MATRIX_MV Current model * view matrix. ",724],["UNITY_MATRIX_V Current view matrix. ",724],["UNITY_MATRIX_P Current projection matrix. ",724],["UNITY_MATRIX_VP Current view * projection matrix. ",724],["UNITY_MATRIX_T_MV Transpose of model * view matrix. ",724],["UNITY_MATRIX_IT_MV Inverse transpose of model * view matrix. ",724],["_Object2World Current model matrix. ",724],["_World2Object Inverse of current world matrix. ",724],["Camera and screen",724],["These variables will correspond to the Camera that is rendering. For example during shadowmap rendering,",724],["they will still refer to the Camera component values, and not the \"virtual camera\" that is used for the shadowmap projection.",724],["",724],["Name Type Value ",724],["_WorldSpaceCameraPos float3 World space position of the camera. ",724],["_ProjectionParams float4 x is 1.0 (or -1.0 if currently rendering with a flipped projection matrix), y is the camera's near plane, z is the camera's far plane and w is 1/FarPlane. ",724],["_ScreenParams float4 x is the camera's render target width in pixels, y is the camera's render target height in pixels, z is 1.0 + 1.0/width and w is 1.0 + 1.0/height. ",724],["_ZBufferParams float4 Used to linearize Z buffer values. x is (1-far/near), y is (far/near), z is (x/far) and w is (y/far). ",724],["unity_OrthoParams float4 x is orthographic camera's width, y is orthographic camera's height, z is unused and w is 1.0 when camera is orthographic, 0.0 when perspective. ",724],["unity_CameraProjection float4x4 Camera's projection matrix. ",724],["unity_CameraInvProjection float4x4 Inverse of camera's projection matrix. ",724],["unity_CameraWorldClipPlanes[6] float4 Camera frustum plane world space equations, in this order: left, right, bottom, top, near, far. ",724],["Time",724],["",724],["Name Type Value ",724],["_Time float4 Time since level load (t/20, t, t*2, t*3), use to animate things inside the shaders. ",724],["_SinTime float4 Sine of time: (t/8, t/4, t/2, t). ",724],["_CosTime float4 Cosine of time: (t/8, t/4, t/2, t). ",724],["unity_DeltaTime float4 Delta time: (dt, 1/dt, smoothDt, 1/smoothDt). ",724],["Lighting",724],["Light parameters are passed to shaders in different ways depending on which Rendering Path is used,",724],["and which LightMode Pass Tag is used in the shader.",724],["Forward rendering (ForwardBase and ForwardAdd pass types):",724],["",724],["Name Type Value ",724],["_LightColor0 (declared in Lighting.cginc) fixed4 Light color. ",724],["_WorldSpaceLightPos0 float4 Directional lights: (world space direction, 0). Other lights: (world space position, 1). ",724],["_LightMatrix0 (declared in AutoLight.cginc) float4x4 World-to-light matrix. Used to sample cookie &amp; attenuation textures. ",724],["unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0 float4 (ForwardBase pass only) world space positions of first four non-important point lights. ",724],["unity_4LightAtten0 float4 (ForwardBase pass only) attenuation factors of first four non-important point lights. ",724],["unity_LightColor half4[4] (ForwardBase pass only) colors of of first four non-important point lights. ",724],["Deferred shading and deferred lighting, used in the lighting pass shader (all declared in UnityDeferredLibrary.cginc):",724],["",724],["Name Type Value ",724],["_LightColor float4 Light color. ",724],["_LightMatrix0 float4x4 World-to-light matrix. Used to sample cookie &amp; attenuation textures. ",724],["Spherical harmonics coefficients (used by ambient and light probes) are set up for ForwardBase, PrePassFinal and Deferred",724],["pass types. They contain 3rd order SH to be evaluated by world space normal (see ShadeSH9 from UnityCG.cginc).",724],["The variables are all half4 type, unity_SHAr and similar names.",724],["Vertex-lit rendering (Vertex pass type):",724],["Up to 8 lights are set up for a Vertex pass type; always sorted starting from the brightest one. So if you want",724],["to render objects affected by two lights at once, you can just take first two entries in the arrays. If there are less",724],["lights affecting the object than 8, the rest will have their color set to black.",724],["",724],["Name Type Value ",724],["unity_LightColor half4[8] Light colors. ",724],["unity_LightPosition float4[8] View-space light positions. (-direction,0) for directional lights; (position,1) for point/spot lights. ",724],["unity_LightAtten half4[8] Light attenuation factors. x is cos(spotAngle/2) or -1 for non-spot lights; y is 1/cos(spotAngle/4) or 1 for non-spot lights; z is quadratic attenuation; w is squared light range. ",724],["unity_SpotDirection float4[8] View-space spot light positions; (0,0,1,0) for non-spot lights. ",724],["Fog and Ambient",724],["",724],["Name Type Value ",724],["UNITY_LIGHTMODEL_AMBIENT fixed4 Ambient lighting color (Equator ambient in three-color lighting case). ",724],["unity_AmbientSky fixed4 Sky ambient lighting color in three-color lighting case. ",724],["unity_AmbientGround fixed4 Ground ambient lighting color in three-color lighting case. ",724],["unity_FogColor fixed4 Fog color. ",724],["unity_FogParams float4 Parameters for fog calculation: (density / sqrt(ln(2)), density / ln(2), -1/(end-start), end/(end-start)). x is useful for Exp2 fog mode, y for Exp mode, z and w for Linear mode. ",724],["Various",724],["",724],["Name Type Value ",724],["unity_LODFade float4 Level-of-detail fade when using LODGroup. x is fade (0..1), y is fade quantized to 16 levels, z and w unused. ",724],["ShaderLab: UsePass",725],["The UsePass command uses named passes from another shader.",725],["Syntax",725],["UsePass \"Shader/Name\"",725],["Inserts all passes with a given name from a given shader. Shader/Name contains the name of the shader and the name of the pass, separated by a slash character. Note that only first supported subshader is taken into account.",725],["Details",725],["Some of the shaders could reuse existing passes from other shaders, reducing code duplication. For example, you might have a shader pass that draws object outline, and you'd want to reuse that pass in other shaders. The UsePass command does just that - it includes a given pass from another shader. As an example the following command uses the pass with the name \"SHADOWCASTER\" from the built-in VertexLit shader:",725],["UsePass \"VertexLit/SHADOWCASTER\"",725],["In order for UsePass to work, a name must be given to the pass one wishes to use. The Name command inside the pass gives it a name:",725],["Name \"MyPassName\"",725],["Note that internally all pass names are uppercased, so UsePass must refer to the name in uppercase.",725],["Vertex and Fragment Shader Examples",726],["This section describes how to setup a basic scene in Unity that you can work with. The initial examples you are going to use are a plane and a camera pointing at the plane to show the different functionality of the fragment shaders. The setup of the plane and the camera is explained, moreover the shaders can work with any geometry without major modifications.",726],["Configuring a Unity Project",726],["After starting Unity, you will probably be viewing an empty project. If not, create a new project by choosing File &gt; New Project... from the menu. If you are not familiar with Unity's Scene View, Hierarchy View, Project View and Inspector View, now would be a good time to read the first two sections  (Unity Basics and Building Scenes) of the User Manual.",726],["Creating a Mesh",726],["The first step in this scene setup is to create a plane. Click on Create &gt; Plane in the menu Hierarchy View, or try out one of the other methods to do this in Unity. Then position the camera so it can show the plane. Double-click the Main Camera Object from the Hierarchy view and get a Scene View of the plane. Then select the Align with View option from the menu GameObject. Make sure the plane does not cover the entire screen so you can see the difference between rendering with a shader and without it. you should now see a gray sphere in the Preview section of the Inspector View for the material.",726],["Creating a Material",726],["Create a new Material by clicking Create in the Project View and choosing Material. A new material called New Material will appear in the Project View. Change the name of the Material to something more descriptive like Material-ShaderLab.",726],["Creating a Shader",726],["Create a Shader in the same way as a Material, but selecting Shader in the menu. Change the name of the Shader to something more descriptive like Shader-ShaderLab.",726],["Shader \"Custom/NewShader\" {",726],["Properties {",726],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",726],["SubShader {",726],["Tags { \"RenderType\" = \"Opaque\" }",726],["LOD 200",726],["CGPROGRAM",726],["pragma surface surf Lambert",726],["sampler2D _MainTex;",726],["struct Input {",726],["float2 uv_MainTex;",726],["};",726],["void surf (Input IN, inout SurfaceOutput o) {",726],["half4 c = tex2D (MainTex, IN.uvMainTex);",726],["o.Albedo = c.rgb;",726],["o.Alpha = c.a;",726],["ENDCG",726],["FallBack \"Diffuse\"",726],["The default surface shader is generated after the creation of a new shader. The text can be replaced by a new version of a vertex-fragment shader.",726],["Linking the Mesh, Material and Shader",726],["Link the Shader with the material in the inspector windows of the material. You can drag and drop the shader in the Project View over the material, or you can select the material in the Project View and then choose the shader from the drop-down list labeled Material-ShaderLab in the Inspector View. In either case, you should now see a gray sphere in the Preview section of the Inspector View for the material. If it doesn't show and an error message is displayed at the bottom of the Unity window, reopen the shader and check in the editor that the text is the same as that given in this lesson.",726],["Link the new material to a triangle mesh. To do this attach the material to the new plane by dragging and dropping the material from the Project View to the plane in the Hierarchy View. Alternatively you can drag and drop the material from the Project View to the plane in the Scene View. Another way would be to select the plane in the Hierarchy View, locate the Mesh Renderer component in the Inspector View (open it by clicking the title if it isn't open) and open the Materials setting of the Mesh Renderer by clicking it. Use whichever of these methods that works best for you. Change the Default-Diffuse material to the new material by clicking the dotted circle icon to the right of the material name and choosing the new material from the pop-up window. The plane in the Scene View should now have the same color as the preview in the Inspector View of the material. Changing the shader should (after saving and switching to Unity) change the appearance of the plane in the Scene View.",726],["Now you have the scene setup completed!*",726],["Empty Shader",726],["This will explain the four main parts of a Shader in ShaderLab that you can see in the code.",726],["Shader \"Custom/Empty\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["ENDCG",726],["Shader",726],["The Shader command contains a string with the name of the Shader. This name can be subdivided with the \"/\" character simulating a folder structure, simplifying the future reutilization of the Shader. The name should be unique in all shaders.",726],["SubShader",726],["A Shader can contain one or more SubShaders, which are primarily used to implement shaders for different GPU capabilities. All the SubShaders should present similar results using different techniques for each architecture. ShaderLab translates the code of the shader automatically to other architectures, but in some cases full functionality of the Shader in mobile architectures is not desired or some inputs are missing, You are going to work with a simple SubShader in the Shader and the lessons are implemented for desktop architectures.",726],["Pass",726],["Each SubShader is composed of a number of passes, and each Pass represents an execution of the Vertex and Fragment code for the same object rendered with the Material of the Shader. You should implement the shader with the smallest number of passes possible for performance reasons.",726],["CGPROGRAM .. ENDCG",726],["These directives define in ShaderLab the language used for the shader. Unity can work with the shader languages of Cg and GLSL. the Cg language is recommended, because several optimization steps are implemented for the different architectures.",726],["Simple Shader",726],["The difference between vertex and fragment shaders is the process developed in the render pipeline. Vertex shaders could be define as the shader programs that modifies the geometry of the scene and made the 3D projection. Fragment shaders are related to the render window and define the color for each pixel. Fragment and Vertex shader can present more functionality in new graphics cards like moving the vertex position or storing more data for each pixel.",726],["Shader \"Custom/SolidColor\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert",726],["pragma fragment frag",726],["float4 vert(float4 v:POSITION) : SV_POSITION {",726],["return mul (UNITY_MATRIX_MVP, v);",726],["fixed4 frag() : SV_Target {",726],["return fixed4(1.0,0.0,0.0,1.0);",726],["ENDCG",726],["pragma vertex vert",726],["Vertex Shader is a shader program to modify the geometry of the scene. It is executed for each vertex in the scene, and outputs are the coordinates of the projection, color, textures and other data passed to the fragment shader. The directive #pragma vertex [function name] is used to define the name of the vertex function.",726],["pragma fragment frag",726],["Fragment Shader is a shader program to modify image properties in the render window. It is executed for each pixel and the output is the color info of the pixel. The directive #pragma fragment defines the name of the function of the fragment shader.",726],["float4 vert(float4 v:POSITION) : SV_POSITION",726],["The variable v contains the values for the vertex, this function is called for each vertex of the scene rendered. The returned value is a float4 variable with the position of the vertex in the screen, the use of four float values to store an SV_POSITIONcoordinate in a 2D window is because the geometry of the projection is expected in homogeneous coordinates which use two values for the pixel in the screen (x,y), one value for the depth (z), and one value for the homogeneous space (w). You can transform homogeneous coordinates into 3D coordinates, but you will lose the ability to obtain the 3D position of the vertex in the future; also you can delete the z value, but you will lose the ability to perform depth testing in the final rendering. The homogeneous coordinates are used in almost all GPUs. Eliminating variables of the vertex shader output shaders doesn't represent any optimization of the code, instead making the code less generic and more difficult to understand.",726],["return mul (UNITY_MATRIX_MVP, v);",726],["This is the core of the vertex function, where a coordinate in 3D is projected into a 2D window. The process involves multiplying the 3D position with a matrix known as Model-View-Projection",726],["fixed4 frag() : COLOR",726],["This line defines the function frag, which is going to be used by the fragment shader as its main function. In this lesson, there are no input parameters for the fragment function, and the output is defined as a COLOR value defined in a fixed4 variable that contains the RGBA (red, green, blue, alpha) of the color. It's possible to use the color as a visualization of a float variable, or even to pass information between the vertex and fragment shaders. However the COLOR variable is clamped between the values 0 and 1 so it expects a change of the values in the COLOR variable.",726],["return fixed4(1.0,0.0,0.0,1.0)",726],["Fragment function core functionality, where for each pixel processed in the fragment shader a color red is defined.",726],["Window Coordinates",726],["This Shader defines a static color depending on the pixel coordinate of the window. This allows the definition of colors in the screen independent of the geometry rendered. If you move the plane you can see the colors change on the screen.",726],["Shader \"Custom/WindowCoordinates/Base\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert",726],["pragma fragment frag",726],["pragma target 3.0",726],["include \"UnityCG.cginc\"",726],["float4 vert(appdata_base v) : POSITION {",726],["return mul (UNITY_MATRIX_MVP, v.vertex);",726],["fixed4 frag(float4 sp:WPOS) : SV_Target {",726],["return fixed4(sp.xy/_ScreenParams.xy,0.0,1.0);",726],["ENDCG",726],["pragma target 3.0",726],["The target directive defines the hardware requirements to support the shader.",726],["include \"UnityCG.cginc\"",726],["Include the file \"UnityCG.cginc\" inside the code of the shader.",726],["appdata_base v",726],["Defines a default structure of Unity to set the input variables of the vertex shaders.",726],["WPOS",726],["Input argument for the frag function, which is declared as a float4 type and WPOS semantics. Semantics is a special clause of Cg to define the default input values of a fragment/vertex Shader. WPOS fills the variable with the values of the pixel coordinates in the screen of the rendered shader. This position needs to be divided by the screen size, the values are transformed into 0 and 1 values so they can be mapped as the RG components of the output color.",726],["ScreenParams",726],["The screen width and height values are stored in the variable _ScreenParams; this variable is declared in the UnityCG.cginc file.",726],["Examples",726],["Window coordinates are not commonly used in shaders, because normally the shaders work with the position of the texture as you will see in the next lessons. However some interesting effects like Render with a Mask or some other image effects use this property.",726],["Behind bars",726],["Shader \"Custom/WindowCoordinates/Bars\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert",726],["pragma fragment frag",726],["include \"UnityCG.cginc\"",726],["struct vertOut {",726],["float4 pos:SV_POSITION;",726],["float4 scrPos;",726],["};",726],["vertOut vert(appdata_base v) {",726],["vertOut o;",726],["o.pos = mul (UNITY_MATRIX_MVP, v.vertex);",726],["o.scrPos = ComputeScreenPos(o.pos);",726],["return o;",726],["fixed4 frag(vertOut i) : SV_Target {",726],["float2 wcoord = (i.scrPos.xy/i.scrPos.w);",726],["fixed4 color;",726],["if (fmod(20.0*wcoord.x,2.0)&lt;1.0) {",726],["color = fixed4(wcoord.xy,0.0,1.0);",726],["} else {",726],["color = fixed4(0.3,0.3,0.3,1.0);",726],["return color;",726],["ENDCG",726],["struct vertOut",726],["Defines a new type of variable; this is a compound type, which represents a set of other variables with native or compound types. The struct is used when more than a native data is needed to be passed from the vertex to the fragment shader. As the return data of a function is only a variable, with struct a set of values can be represented as an only value.",726],["ComputeScreenPos",726],["Function define in the UnityCG.cginc file, this function returns the screen position for the fragment shader. The difference with the previous example where a WPOS semantic variable was used, is that this function is multiplatform and it does not need target 3.0.",726],["Vignetting",726],["Shader \"Custom/WindowCoordinates/Vignetting\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert",726],["pragma fragment frag",726],["pragma target 3.0",726],["include \"UnityCG.cginc\"",726],["float4 vert(appdata_base v) : POSITION {",726],["return mul (UNITY_MATRIX_MVP, v.vertex);",726],["fixed4 frag(float4 sp:WPOS) : SV_Target {",726],["float2 wcoord = sp.xy/_ScreenParams.xy;",726],["float vig = clamp(3.0*length(wcoord-0.5),0.0,1.0);",726],["return lerp (fixed4(wcoord,0.0,1.0),fixed4(0.3,0.3,0.3,1.0),vig);",726],["ENDCG",726],["lerp",726],["Standard function of the Cg language, this function is a linear interpolation between the first two arguments given the third as a factor. Many functions are implemented in the Cg language as standard functions.",726],["Circles Mask",726],["Some shaders need external information given in types like Variables, Arrays, Textures. These cases are covered by the use of uniforms and properties in ShaderLab. Properties define a set of types which can be passed to the shader in every run. The variables can modify the behavior of the shader. The following example shows how to change the values of a shader mask full of circles. The number of rows and columns can also change the size of the circles.",726],["Shader \"Custom/WindowCoordinates/CirclesMask\" {",726],["Properties {",726],["_CirclesX (\"Circles in X\", Float) = 20",726],["_CirclesY (\"Circles in Y\", Float) = 10",726],["_Fade (\"Fade\", Range (0.1,1.0)) = 0.5",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert",726],["pragma fragment frag",726],["pragma target 3.0",726],["include \"UnityCG.cginc\"",726],["uniform float _CirclesX;",726],["uniform float _CirclesY;",726],["uniform float _Fade;",726],["float4 vert(appdata_base v) : POSITION {",726],["return mul (UNITY_MATRIX_MVP, v.vertex);",726],["fixed4 frag(float4 sp:WPOS) : SV_Target {",726],["float2 wcoord = sp.xy/_ScreenParams.xy;",726],["fixed4 color;",726],["if (length(fmod(float2(CirclesX*wcoord.x,CirclesY*wcoord.y),2.0)-1.0)&lt;_Fade) {",726],["color = fixed4(sp.xy/_ScreenParams.xy,0.0,1.0);",726],["} else {",726],["color = fixed4(0.3,0.3,0.3,1.0);",726],["return color;",726],["ENDCG",726],["uniform",726],["ShaderLab defines properties as values that are transferred from the application to the shader. Properties are defined with different types like Color, Float, 2D, and others. To use the properties values defined into the shader the keyword uniform should be use declaring the variables, so the compiler identify the variables as external values which should be transferred to the shader in each execution.",726],["Texture Coordinates",726],["This lesson presents a set of shaders which use texture coordinates to draw the faces of a mesh with different effects.",726],["Texture position in a mesh is given by the variable texcoord0, which is set for each vertex. The vertex and fragment shader can modify this variable. You should select in which shader you modify texcoord0, depending on the variables needed for the operation, the number of vertices in the scene and the screen resolution. You should select the modification of texcoord0 values looking for the smallest number of executions.",726],["Shader \"Custom/TextureCoordinates/Base\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert",726],["pragma fragment frag",726],["pragma target 3.0",726],["include \"UnityCG.cginc\"",726],["struct vertexInput {",726],["float4 vertex : POSITION;",726],["float4 texcoord0 : TEXCOORD0;",726],["};",726],["struct fragmentInput{",726],["float4 position : SV_POSITION;",726],["float4 texcoord0 : TEXCOORD0;",726],["};",726],["fragmentInput vert(vertexInput i){",726],["fragmentInput o;",726],["o.position = mul (UNITY_MATRIX_MVP, i.vertex);",726],["o.texcoord0 = i.texcoord0;",726],["return o;",726],["fixed4 frag(fragmentInput i) : SV_Target {",726],["return fixed4(i.texcoord0.xy,0.0,1.0);",726],["ENDCG",726],["The range of the values of texcoord0 is from 0 to 1 and they are mapped to a specific texture. Textures are images stored in the memory of the GPU representing a square or rectangular image, the textures in the fragment shader can be also used as procedural textures which uses mathematical functions to define the color of each pixel in the screen. In the code above you the texcoord0 values were used to set the colors of the Red and Green channels, given a gradient effect for each color.",726],["Examples",726],["Chess",726],["Shader \"Custom/TextureCoordinates/Chess\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert",726],["pragma fragment frag",726],["include \"UnityCG.cginc\"",726],["struct vertexInput {",726],["float4 vertex : POSITION;",726],["float4 texcoord0 : TEXCOORD0;",726],["};",726],["struct fragmentInput{",726],["float4 position : SV_POSITION;",726],["float4 texcoord0 : TEXCOORD0;",726],["};",726],["fragmentInput vert(vertexInput i){",726],["fragmentInput o;",726],["o.position = mul (UNITY_MATRIX_MVP, i.vertex);",726],["o.texcoord0 = i.texcoord0;",726],["return o;",726],["fixed4 frag(fragmentInput i) : SV_Target {",726],["fixed4 color;",726],["if ( fmod(i.texcoord0.x*8.0,2.0) &lt; 1.0 ){",726],["if ( fmod(i.texcoord0.y*8.0,2.0) &lt; 1.0 )",726],["color = fixed4(1.0,1.0,1.0,1.0);",726],["} else {",726],["color = fixed4(0.0,0.0,0.0,1.0);",726],["} else {",726],["if ( fmod(i.texcoord0.y*8.0,2.0) > 1.0 )",726],["color = fixed4(1.0,1.0,1.0,1.0);",726],["} else {",726],["color = fixed4(0.0,0.0,0.0,1.0);}",726],["return color;",726],["ENDCG",726],["Shader \"Custom/TextureCoordinates/ChessOpt\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert_img",726],["pragma fragment frag",726],["include \"UnityCG.cginc\"",726],["fixed4 frag(v2f_img i) : SV_Target {",726],["bool p = fmod(i.uv.x*8.0,2.0) &lt; 1.0;",726],["bool q = fmod(i.uv.y*8.0,2.0) > 1.0;",726],["return fixed4(fixed3((p &amp;&amp; q)    !(p    q)),1.0);",726],["ENDCG",726],["Mandelbrot Fractal",726],["Shader \"Custom/TextureCoordinates/Mandelbrot\" {",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert_img",726],["pragma fragment frag",726],["pragma target 3.0",726],["include \"UnityCG.cginc\"",726],["float4 frag(v2f_img i) : SV_Target {",726],["float2 mcoord;",726],["float2 coord = float2(0.0,0.0);",726],["mcoord.x = ((1.0-i.uv.x)*3.5)-2.5;",726],["mcoord.y = (i.uv.y*2.0)-1.0;",726],["float iteration = 0.0;",726],["const float _MaxIter = 29.0;",726],["const float PI = 3.14159;",726],["float xtemp;",726],["for ( iteration = 0.0; iteration &lt; _MaxIter; iteration += 1.0) {",726],["if ( coord.x*coord.x + coord.y*coord.y > 2.0*(cos(fmod(_Time.y,2.0*PI))+1.0) )",726],["break;",726],["xtemp = coord.x*coord.x - coord.y*coord.y + mcoord.x;",726],["coord.y = 2.0*coord.x*coord.y + mcoord.y;",726],["coord.x = xtemp;",726],["float val = fmod((iteration/MaxIter)+Time.x,1.0);",726],["float4 color;",726],["color.r = clamp((3.0*abs(fmod(2.0*val,1.0)-0.5)),0.0,1.0);",726],["color.g = clamp((3.0*abs(fmod(2.0*val+(1.0/3.0),1.0)-0.5)),0.0,1.0);",726],["color.b = clamp((3.0*abs(fmod(2.0*val-(1.0/3.0),1.0)-0.5)),0.0,1.0);",726],["color.a = 1.0;",726],["return color;",726],["ENDCG",726],["Texture",726],["Shader \"Custom/TextureCoordinates/ActualTexture\" {",726],["Properties {",726],["_MainTex (\"Base (RGB)\", 2D) = \"white\" {}",726],["SubShader {",726],["Pass {",726],["CGPROGRAM",726],["pragma vertex vert_img",726],["pragma fragment frag",726],["include \"UnityCG.cginc\"",726],["uniform sampler2D _MainTex;",726],["fixed4 frag(v2f_img i) : SV_Target {",726],["return tex2D(_MainTex, i.uv);",726],["ENDCG",726],["Providing vertex data to vertex programs",727],["For Cg/HLSL vertex programs, the vertex data must be passed in as a structure. Several commonly used vertex structures are defined in UnityCG.cginc include file, and in most cases it's enough just to use them. The structures are:",727],["appdata_base: vertex consists of position, normal and one texture coordinate.",727],["appdata_tan: vertex consists of position, tangent, normal and one texture coordinate.",727],["appdata_full: vertex consists of position, tangent, normal, four texture coordinates and color.",727],["For example, this shader colors the mesh based on it's normals and just uses appdata_base as vertex program input:",727],["Shader \"VertexInputSimple\" {",727],["SubShader {",727],["Pass {",727],["CGPROGRAM",727],["pragma vertex vert",727],["pragma fragment frag",727],["include \"UnityCG.cginc\"",727],["struct v2f {",727],["float4 pos : SV_POSITION;",727],["fixed4 color : COLOR;",727],["};",727],["v2f vert (appdata_base v)",727],["v2f o;",727],["o.pos = mul (UNITY_MATRIX_MVP, v.vertex);",727],["o.color.xyz = v.normal * 0.5 + 0.5;",727],["o.color.w = 1.0;",727],["return o;",727],["fixed4 frag (v2f i) : SV_Target { return i.color; }",727],["ENDCG",727],["If you want to access different vertex data, you have to declare vertex structure yourself, or add input parameters to the vertex shader. Vertex data is identified by Cg/HLSL semantics, and has to be from the following list:",727],["POSITION is the vertex position, typically a float4.",727],["NORMAL is the vertex normal, typically a float3.",727],["TEXCOORD0 is the first UV coordinate, typically a float2..float4.",727],["TEXCOORD1 .. TEXCOORD3 are the 2nd..4th UV coordinates.",727],["TANGENT is the tangent vector (used for normal mapping), typically a float4.",727],["COLOR is the per-vertex color, typically a float4.",727],["Examples",727],["Visualizing UVs",727],["The following shader example uses vertex position and first texture coordinate as vertex shader input (defined in structure appdata). It is very useful to debug UV coordinates of the mesh. UV coordinates are visualized as red and green colors, and coordinates outside of 0..1 range have additional blue tint applied.",727],["Shader \"Debug/UV 1\" {",727],["SubShader {",727],["Pass {",727],["Fog { Mode Off }",727],["CGPROGRAM",727],["pragma vertex vert",727],["pragma fragment frag",727],["// vertex input: position, UV",727],["struct appdata {",727],["float4 vertex : POSITION;",727],["float4 texcoord : TEXCOORD0;",727],["};",727],["struct v2f {",727],["float4 pos : SV_POSITION;",727],["float4 uv : TEXCOORD0;",727],["};",727],["v2f vert (appdata v) {",727],["v2f o;",727],["o.pos = mul( UNITY_MATRIX_MVP, v.vertex );",727],["o.uv = float4( v.texcoord.xy, 0, 0 );",727],["return o;",727],["half4 frag( v2f i ) : SV_Target {",727],["half4 c = frac( i.uv );",727],["if (any(saturate(i.uv) - i.uv))",727],["c.b = 0.5;",727],["return c;",727],["ENDCG",727],["Similarly, this shader vizualizes the second UV set of the model:",727],["Shader \"Debug/UV 2\" {",727],["SubShader {",727],["Pass {",727],["Fog { Mode Off }",727],["CGPROGRAM",727],["pragma vertex vert",727],["pragma fragment frag",727],["// vertex input: position, second UV",727],["struct appdata {",727],["float4 vertex : POSITION;",727],["float4 texcoord1 : TEXCOORD1;",727],["};",727],["struct v2f {",727],["float4 pos : SV_POSITION;",727],["float4 uv : TEXCOORD0;",727],["};",727],["v2f vert (appdata v) {",727],["v2f o;",727],["o.pos = mul( UNITY_MATRIX_MVP, v.vertex );",727],["o.uv = float4( v.texcoord1.xy, 0, 0 );",727],["return o;",727],["half4 frag( v2f i ) : SV_Target {",727],["half4 c = frac( i.uv );",727],["if (any(saturate(i.uv) - i.uv))",727],["c.b = 0.5;",727],["return c;",727],["ENDCG",727],["Visualizing vertex colors",727],["The following shader uses vertex position and per-vertex colors as vertex shader input (defined in structure appdata).",727],["Shader \"Debug/Vertex color\" {",727],["SubShader {",727],["Pass {",727],["Fog { Mode Off }",727],["CGPROGRAM",727],["pragma vertex vert",727],["pragma fragment frag",727],["// vertex input: position, color",727],["struct appdata {",727],["float4 vertex : POSITION;",727],["fixed4 color : COLOR;",727],["};",727],["struct v2f {",727],["float4 pos : SV_POSITION;",727],["fixed4 color : COLOR;",727],["};",727],["v2f vert (appdata v) {",727],["v2f o;",727],["o.pos = mul( UNITY_MATRIX_MVP, v.vertex );",727],["o.color = v.color;",727],["return o;",727],["fixed4 frag (v2f i) : SV_Target { return i.color; }",727],["ENDCG",727],["Visualizing normals",727],["The following shader uses vertex position and normal as vertex shader input (defined in structure appdata). Normal's X,Y,Z components are visualized as R,G,B colors. Because the normal components are in -1..1 range, we scale and bias them so that the output colors are in displayable 0..1 range.",727],["Shader \"Debug/Normals\" {",727],["SubShader {",727],["Pass {",727],["Fog { Mode Off }",727],["CGPROGRAM",727],["pragma vertex vert",727],["pragma fragment frag",727],["// vertex input: position, normal",727],["struct appdata {",727],["float4 vertex : POSITION;",727],["float3 normal : NORMAL;",727],["};",727],["struct v2f {",727],["float4 pos : SV_POSITION;",727],["fixed4 color : COLOR;",727],["};",727],["v2f vert (appdata v) {",727],["v2f o;",727],["o.pos = mul( UNITY_MATRIX_MVP, v.vertex );",727],["o.color.xyz = v.normal * 0.5 + 0.5;",727],["o.color.w = 1.0;",727],["return o;",727],["fixed4 frag (v2f i) : SV_Target { return i.color; }",727],["ENDCG",727],["Visualizing tangents and binormals",727],["Tangent and binormal vectors are used for normal mapping. In Unity only the tangent vector is stored in vertices, and binormal is derived from normal and tangent.",727],["The following shader uses vertex position and tangent as vertex shader input (defined in structure appdata). Tangent's X,Y,Z components are visualized as R,G,B colors. Because the normal components are in -1..1 range, we scale and bias them so that the output colors are in displayable 0..1 range.",727],["Shader \"Debug/Tangents\" {",727],["SubShader {",727],["Pass {",727],["Fog { Mode Off }",727],["CGPROGRAM",727],["pragma vertex vert",727],["pragma fragment frag",727],["// vertex input: position, tangent",727],["struct appdata {",727],["float4 vertex : POSITION;",727],["float4 tangent : TANGENT;",727],["};",727],["struct v2f {",727],["float4 pos : SV_POSITION;",727],["fixed4 color : COLOR;",727],["};",727],["v2f vert (appdata v) {",727],["v2f o;",727],["o.pos = mul( UNITY_MATRIX_MVP, v.vertex );",727],["o.color = v.tangent * 0.5 + 0.5;",727],["return o;",727],["fixed4 frag (v2f i) : SV_Target { return i.color; }",727],["ENDCG",727],["The following shader visualizes binormals. It uses vertex position, normal and tangent as vertex input. Binormal is calculated from normal and tangent. Just like normal or tangent, it needs to be scaled and biased into a displayable 0..1 range.",727],["Shader \"Debug/Binormals\" {",727],["SubShader {",727],["Pass {",727],["Fog { Mode Off }",727],["CGPROGRAM",727],["pragma vertex vert",727],["pragma fragment frag",727],["// vertex input: position, normal, tangent",727],["struct appdata {",727],["float4 vertex : POSITION;",727],["float3 normal : NORMAL;",727],["float4 tangent : TANGENT;",727],["};",727],["struct v2f {",727],["float4 pos : SV_POSITION;",727],["float4 color : COLOR;",727],["};",727],["v2f vert (appdata v) {",727],["v2f o;",727],["o.pos = mul( UNITY_MATRIX_MVP, v.vertex );",727],["// calculate binormal",727],["float3 binormal = cross( v.normal, v.tangent.xyz ) * v.tangent.w;",727],["o.color.xyz = binormal * 0.5 + 0.5;",727],["o.color.w = 1.0;",727],["return o;",727],["fixed4 frag (v2f i) : SV_Target { return i.color; }",727],["ENDCG",727],["Smart Merge",728],["Unity incorporates a tool called UnityYAMLMerge that can merge scene and prefab files in a semantically correct way. The tool can be accessed from the command line and is also available to third party version control software.",728],["Setting Up Smart Merging in Unity",728],["In the Editor Settings (menu: Edit &gt; Project Settings &gt; Editor), you have the option to select a third party version control tool (Perforce or PlasticSCM, for example). When one of these tools is enabled, you will see a Smart Merge menu under the Version Control heading. The menu has four options:",728],["Off: use only the default merge tool set in the preferences with no smart merging.",728],["Premerge: enable smart merging, accept clean merges. Unclean merges will create premerged versions of base, theirs and mine versions of the file. Then, use these with the default merge tool.",728],["Ask: enable smart merging but when a conflict occurs, show a dialog to let the user resolve it (this is the default setting).",728],["Setting up UnityYAMLMerge for Use with Third Party Tools",728],["The UnityYAMLMerge tool is shipped with the Unity editor; assuming Unity is installed in the standard location, the path to UnityYAMLMerge will be:",728],["C:\\Program Files\\Unity\\Editor\\Data\\Tools\\UnityYAMLMerge.exe",728],["or",728],["C:\\Program Files (x86)\\Unity\\Editor\\Data\\Tools\\UnityYAMLMerge.exe",728],["...on Windows and",728],["/Applications/Unity/Unity.app/Contents/Tools/UnityYAMLMerge",728],["...on Mac OSX (use the Show Package Contents command from the Finder to access this folder).",728],["UnityYAMLMerge is shipped with a default fallback file (called mergespecfile.txt, also in the Tools folder) that specifies how it should proceed with unresolved conflicts or unknown files. This also allows you to use it as the main merge tool for version control systems (such as git) that don't automatically select merge tools based on file extensions. The most common tools are already listed by default in mergespecfile.txt but you can edit this file to add new tools or change options.",728],["You can run UnityYAMLMerge as a standalone tool from the command line (you can see full usage instructions by running it without any arguments). Set-up instructions for common version control systems are given below.",728],["P4V",728],["Go to Preferences &gt; Merge.",728],["Select Other application.",728],["Click the Add button.",728],["In the extension field, type .unity.",728],["In the Application field, type the path to the UnityYAMLMerge tool (see above).",728],["In the Arguments field, type merge -p %b %1 %2 %r",728],["Click Save.",728],["Then, follow the same procedure to add the .prefab extension.",728],["Git",728],["Add the following text to your .git or .gitconfig file:",728],["[merge]",728],["tool = unityyamlmerge",728],["[mergetool \"unityyamlmerge\"]",728],["trustExitCode = false",728],["cmd = '' merge -p \"$BASE\" \"$REMOTE\" \"$LOCAL\" \"$MERGED\"",728],["Mercurial",728],["Add the following text to your .hgrc file:",728],["[merge-patterns]",728],[".unity = unityyamlmerge",728],[".prefab = unityyamlmerge",728],["[merge-tools]",728],["unityyamlmerge.executable = ",728],["unityyamlmerge.args = merge -p $base $other $local $output",728],["unityyamlmerge.checkprompt = True",728],["unityyamlmerge.premerge = False",728],["unityyamlmerge.binary = False",728],["SVN",728],["Add the following to your ~/.subversion/config file:",728],["[helpers]",728],["merge-tool-cmd = ",728],["TortoiseGit",728],["Go to Preferences &gt; Diff Viewer &gt; Merge Tool and click the Advanced button.",728],["In the popup, type .unity in the extension field.",728],["In the External Program field type:",728],[" merge -p %base %theirs %mine %merged",728],["Then, follow the same procedure to add the .prefab extension.",728],["PlasticSCM",728],["Go to Preferences &gt; Merge Tools and click the Add button.",728],["Select External merge tool.",728],["Select Use with files that match the following pattern.",728],["Add the .unity extension.",728],["Enter the command:",728],[" merge -p “@basefile” “@sourcefile”  “@destinationfile” “@output”",728],["Then, follow the same procedure to add the .prefab extension.",728],["SourceTree",728],["Go to Tools &gt; Options &gt; Diff.",728],["Select Custom in the Merge Tool dropdown.",728],["Type the path to UnityYAMLMerge in the Diff Command text field.",728],["Type merge -p $BASE $REMOTE $LOCAL $MERGED in the Arguments text field.",728],["Sparse Textures",729],["Sparse textures are textures where not the whole texture data can be present in memory at once. They are also commonly called \"tiled textures\" or \"mega textures\".",729],["Imagine a 16384x16384 texture at 32 bits per pixel - it would take 1GB of memory. The texture is broken down into rectangular \"tiles\", and each tile can either be present in memory or not. You can load &amp; unload these tiles as needed based on distance from the camera, sectors of the world that the player has to see, etc.",729],["Otherwise, the sparse textures behave just like any other texture in shaders - they can have mipmaps, can use all texture filtering modes, etc. If you happen to read from a tile that's not present, you can get undefined result (on many GPUs the result is a black color, but that's not guaranteed).",729],["Note that not all hardware and platforms support sparse textures. For example, on DirectX systems they require DX11.2 (Windows 8.1) and a fairly recent GPU; and on OpenGL they require ARB_sparse_texture extension support.",729],["See SparseTexture scripting class for more details.",729],["Example Code",729],["A small example usage might be a map-like application that creates a large texture, but only a small camera-visible portion needs to be in memory at any time.",729],["As the camera moves, newly visible tiles are loaded, and no longer visible tiles are unloaded.",729],["Sample project: SparseTextureExample.zip. In this example, a simple procedural texture pattern is generated for simplicity. Note that this will need a recent GPU and a DirectX 11.2 (Windows 8.1) system, or using OpenGL with ARB_sparse_texture support.",729],["Special Folder Names",730],["For the most part, you can choose any names you like for the folders you create to organise your project. However, there are a number of folder names that Unity will interpret as an instruction that the folders' contents should be treated in a special way. For example, editor scripts must be placed in a folder called Editor in order to work correctly. The full list of special folder names used by Unity is given below.",730],["Assets",730],["The Assets folder is the main folder that contains the assets that can be used by a Unity project. The contents of the Project view correspond directly to the contents of the Assets folder. Most API functions assume that everything is located in the Assets folder and so they don't require it to be mentioned explicitly. However, some functions do need to have the Assets folder included as part of a pathname (eg, certain functions in the AssetDatabase class).",730],["Editor",730],["All scripts that are placed in a folder called Editor (or a sub-folder within it) will be treated as editor scripts rather than runtime scripts. Such scripts are designed to add functionality to Unity itself during development and are not available to the finished game at runtime. More than one Editor folder can be used in the project at once but note that the exact location of a given Editor folder affects the time at which its scripts will be compiled relative to other scripts. See the page on Special Folders and Script Compilation Order for a full description of this.",730],["Editor Default Resources",730],["Editor scripts can make use of asset files loaded on-demand using the EditorGUIUtility.Load function. This function will look for the asset files in a folder called Editor Default Resources which should be placed directly within the Assets folder.",730],["Gizmos",730],["Unity's \"Gizmos\" allow you to add graphics to the scene view to help visualise design details that are otherwise invisible. The Gizmos.DrawIcon function places an icon in the scene to act as a marker for a special object or position. The image file used to draw this icon must be placed in a folder called Gizmos in order to be located by the DrawIcon function.",730],["Plugins",730],["Unity lets you add Plugins to a project to extend the features available to Unity. Plugins are native DLLs that are typically written in C/C++. They can access third party code libraries, system calls and other things that are not provided by Unity out of the box. Plugins must be placed in a folder called Plugins to be detected by Unity and like the Editor folder, this affects the order in which scripts are compiled. See the page on Special Folders and Script Compilation Order for further details.",730],["Resources",730],["Generally, you create instances of assets in a scene to use them in gameplay but Unity also lets you load assets on demand from a script. You do this by placing the assets in a folder called Resources or a sub-folder (you can actually have any number of Resources folders and place them anywhere in the project). These assets can then be loaded using the Resources.Load function.",730],["Standard Assets",730],["When you import a standard asset package (menu: Assets &gt; Import Package) the assets are placed in a folder called Standard Assets. As well as containing the assets, these folders also have an effect on script compilation order; see the page on Special Folders and Script Compilation Order for further details.",730],["StreamingAssets",730],["Most game assets are incorporated directly into the built player but there are some cases where you want the asset to be available as a separate file in its original format. For example, to play a video on iOS, you must access the video file from the filesystem rather than use it as a MovieTexture. If you place a file in a folder called StreamingAssets, it will be copied unchanged to the target machine where it will be available from a specific folder. See the page about Streaming Assets for further details.",730],["WebPlayerTemplates",730],["For webplayer builds, Unity lets you supply a custom host page to deliver the player. The host page is supplied in the form of a template that can incorporate specific information from the project such as its name. These templates must be placed in a folder called WebPlayerTemplates to be available to Unity; see the page about Using Web Player templates for further details. It is also worth noting that any scripts placed in the WebPlayerTemplates folder will be ignored by the compiler. Placing script files here can be a useful temporary way to stop them from being compiled, say if they contain incomplete code that will prevent the game running.",730],["Splitting Animations",731],["An animated character typically has a number of different movements that are activated in the game in different circumstances. These movements are called Animation Clips. For example, we might have separate animation clips for walking, running, jumping, throwing, dying, etc. Depending on the way the model was animated, these separate movements might be imported as distinct animation clips or as one single clip where each movement simply follows on from the previous one. In cases where there is only a single clip, the clip must be split into its component animation clips within Unity, which will involve some extra steps in your workflow.",731],["Working with models that have pre-split animations",731],["The simplest types of models to work with are those that contain pre-split animations. If you have an animation like that, the Animations tab in the Animation Importer Inspector will look like this:",731],["You will see a list available clips which you can preview by pressing Play in the Preview Window (lower down in the inspector). The frame ranges of the clips can be edited, if needed.",731],["Working with models that have unsplit animations",731],["For models where the clips are supplied as one continuous animation, the Animation tab in the Animation Importer Inspector will look like this:",731],["In cases like this, you can define the frame ranges that correspond to each of the separate animation sequences (walking, jumping, etc). You can create a new animation clip by pressing (+) and selecting the range of frames that are included in it.",731],["For example:",731],["walk animation during frames 1 - 33",731],["run animation during frames 41 - 57",731],["kick animation during frames 81 - 97",731],["In the Import Settings, the Split Animations table is where you tell Unity which frames in your asset file make up which Animation Clip. The names you specify here are used to activate them in your game.",731],["For further information about the animation inspector, see the Animation Clip component reference page.",731],["Animating objects and properties in Unity using Mecanim",731],["You can create animation clips which animate any object or component property using Unity's animation window. These animation clips can then be arranged into a state machine in exactly the same way as external animation clips such as character animations. For example, you could animate the motion of a camera, the colour of a light, the individual frames of a sprite animation, or a public property of a script.",731],["To set up a Character or other GameObject for animation, you need to follow this process:",731],["Create a New Animator Controller",731],["Open the Animator Window to edit the Animator Controller",731],["Drag the desired animation clip into the Animator Controller Window",731],["Drag the model asset into the Hierarchy.",731],["Add the animator controller to the Animator component of the asset.",731],["Importing Animations using multiple model files",731],["Another way to import animations is to follow a naming scheme that Unity allows for the animation files. You create separate model files and name them with the convention 'modelName@animationName.fbx'. For example, for a model called \"goober\", you could import separate idle, walk, jump and walljump animations using files named \"goober@idle.fbx\", \"goober@walk.fbx\", \"goober@jump.fbx\" and \"goober@walljump.fbx\". Only the animation data from these files will be used, even if the original files are exported with mesh data.",731],["Unity automatically imports all four files and collects all animations to the file without the @ sign in. In the example above, the goober.mb file will be set up to reference idle, jump, walk and wallJump automatically.",731],["For FBX files, simply export a model file with no animation ticked (eg, goober.fbx) and the 4 clips as goober@animname.fbx by exporting the desired keyframes for each (enable animation in the FBX dialog).",731],["Sprite Editor",732],["Sometimes a sprite texture will contain just a single graphic element but it is often more convenient to combine several related graphics together into a single image. For example, the image could contain component parts of a single character, as with a car whose wheels move independently of the body. Unity makes it easy to extract elements from a composite image by providing a Sprite Editor for the purpose.  Sprite textures with multiple elements will need the Sprite Mode to be set to Multiple in the import settings.",732],["Opening the Sprite Editor",732],["A button to open the Sprite Editor appears in the Texture import inspector whenever the texture type is set to Sprite. The window will look something like this:",732],["Along with the composite image, you will see a number of controls in the bar at the top of the window. The slider at the top right controls the zoom, while the color bar button to its left chooses whether you view the image itself or its alpha levels. The right-most slider controls the pixelation of the texure.  Moving th slider to the left reduces the resolution of the sprite texture. The most important control is the Slice menu at the top left, which gives you options for separating the elements of the image automatically. Finally, the Apply and Revert buttons allow you to keep or discard any changes you have made.",732],["Using the Editor",732],["The most direct way to use the editor is to identify the elements manually. If you click on the image, you will see a rectangular selection area appear with handles in the corners. You can drag the handles or the edges of the rectangle to resize it around a specific element. Having isolated an element, you can add another by dragging a new rectangle in a separate part of the image. You'll notice that when you have a rectangle selected, a panel appears in the bottom right of the window:",732],["The controls in the panel let you choose a name for the sprite graphic and set the position and size of the rectangle by its coordinates.  A border width, for left, top, right and bottom can be specified in pixels. There are also settings for the sprite's pivot, which Unity uses as the coordinate origin and main \"anchor point\" of the graphic. You can choose from a number of default rectangle-relative positions (eg, Center, Top Right, etc) or use custom coordinates.",732],["The Trim button next to the Slice menu item will resize the rectangle so that it fits tightly around the edge of the graphic based on transparency.",732],["Automatic slicing",732],["Isolating the sprite rectangles manually works well but in many cases, Unity can save you work by detecting the graphic elements and extracting them for you automatically. If you click on the Slice menu in the control bar, you will see this panel:",732],["With the slicing type set to Automatic, the editor will attempt to guess the boundaries of sprite elements by transparency. You can  set a default pivot for each identified sprite. The Method menu lets you choose how to deal with existing selections in the window. The Delete existing option will simply replace whatever is already selected, Smart will attempt to create new rectangles while retaining or adjusting existing ones, and Safe will add new rectangles without changing anything already in place.",732],["A Grid option is also available for the slicing type, which is very useful when the sprites have already been laid out in a regular pattern during creation:",732],["The Pixel Size values determine the height and width of the tiles in pixels. You can also use the Offset values to shift the grid position from the top-left of the image and the Padding values to inset the sprite rectangles slightly from the grid.",732],["Note that after either of the two automatic slicing methods has been used, the generated rectangles can still be edited manually. You can let Unity handle the rough definition of the sprite boundaries and pivots and then do any necessary fine tuning yourself.",732],["Sprite Packer",733],["When designing sprite graphics, it is convenient to work with a separate texture file for each character. However, a significant portion of a sprite texture will often be taken up by the empty space between the graphic elements and this space will result in wasted video memory at runtime. For optimal performance, it is best to pack graphics from several sprite textures tightly together within a single texture known as an atlas. Unity provides a Sprite Packer utility to automate the process of generating atlases from the individual sprite textures.",733],["Unity handles the generation and use of sprite atlas textures behind the scenes so that the user needs to do no manual assignment. The atlas can optionally be packed on entering Play mode or during a build and the graphics for a sprite object will be obtained from the atlas once it is generated.",733],["Users are required to specify a Packing Tag in the Texture Importer to enable packing for Sprites of that Texture.",733],["Using the Sprite Packer",733],["The Sprite Packer is disabled by default but you can configure it from the Editor settings (menu: Edit -&gt; Project Settings -&gt; Editor). The sprite packing mode can be changed from Disabled to Enabled for Builds (i.e. packing is used for builds but not Play mode) or Always Enabled (i.e. packing is enabled for both Play mode and builds).",733],["If you open the Sprite Packer window (menu: Window -&gt; Sprite Packer) and click the Pack button in the top-left corner, you will see the arrangement of the textures packed within the atlas.",733],["If you select a sprite in the Project panel, this will also be highlighted to show its position in the atlas. The outline is actually the render mesh outline and it also defines the area used for tight packing.",733],["The toolbar at the top of the Sprite Packer window has a number of controls that affect packing and viewing. The Pack buttons initiates the packing operation but will not force any update if the atlas hasn't changed since it was last packed. (A related Repack button will appear when you implement a custom packing policy as explained in Customizing the Sprite Packer below). The View Atlas and Page # menus allow you to choose which page of which atlas is shown in the window (a single atlas may be split into more than one \"page\" if there is not enough space for all sprites in the maximum texture size). The menu next to the page number selects which \"packing policy\" is used for the atlas (see below). At the right of the toolbar are two controls to zoom the view and to switch between color and alpha display for the atlas.",733],["Packing Policy",733],["The Sprite Packer uses a packing policy to decide how to assign sprites into atlases. It is possible to create your own packing policies (see below) but the Default Packer Policy and Tight Packer Policy options are always available. With these policies, the Packing Tag property in the Texture Importer directly selects the name of the atlas where the sprite will be packed and so all sprites with the same packing tag will be packed in the same atlas. Atlases are then further sorted by the texture import settings so that they match whatever the user sets for the source textures.  Sprites with the same texture compression settings will be grouped into the same atlas where possible.",733],["DefaultPackerPolicy will use rectangle packing by default unless \"[TIGHT]\" is specified in the Packing Tag (i.e. setting your packing tag to \"[TIGHT]Character\" will allow tight packing).",733],["TightPackerPolicy will use tight packing by default if Sprite have tight meshes. If \"[RECT]\" is specified in the Packing Tag, rectangle packing will be done (i.e. setting your packing tag to \"[RECT]UI_Elements\" will force rect packing).",733],["Customizing the Sprite Packer",733],["The DefaultPackerPolicy option is sufficient for most purposes but you can also implement your own custom packing policy if you need to. To do this, you need to implement the UnityEditor.Sprites.IPackerPolicy interface for a class in an editor script. This interface requires the following methods:",733],["GetVersion - return the version value of your packer policy. Version should be bumped if modifications are done to the policy script and this policy is saved to version control.",733],["OnGroupAtlases - implement your packing logic here. Define atlases on the PackerJob and assign Sprites from the given TextureImporters.",733],["DefaultPackerPolicy uses rect packing (see SpritePackingMode) by default. This is useful if you're doing texture-space effects or would like to use a different mesh for rendering the Sprite. Custom policies can override this and instead use tight packing.",733],["Repack button is only enabled when a custom policy is selected.",733],["OnGroupAtlases will not be called unless TextureImporter metadata or the selected PackerPolicy version values change.",733],["Use Repack button when working on your custom policy.",733],["Sprites can not be packed rotated.",733],["SpritePackingRotation is a reserved type for future Unity versions.",733],["Other",733],["Atlases are cached in Project\\Library\\AtlasCache.",733],["Deleting this folder and then launching Unity will force atlases to be repacked. Unity must be closed when doing so.",733],["Atlas cache is not loaded at start.",733],["All textures must be checked when packing for the first time after Unity is restarted. This operation might take some time depending on the total number of textures in the project.",733],["Only the required atlases are loaded.",733],["Default maximum atlas size is 2048x2048.",733],["When PackingTag is set, Texture will not be compressed so that the SpritePacker can grab original pixel values and then do compression on the atlas.",733],["DefaultPackerPolicy",733],["using System;",733],["using System.Linq;",733],["using UnityEngine;",733],["using UnityEditor;",733],["using UnityEditor.Sprites;",733],["using System.Collections.Generic;",733],["// DefaultPackerPolicy will pack rectangles no matter what Sprite mesh type is unless their packing tag contains \"[TIGHT]\".",733],["class DefaultPackerPolicySample : UnityEditor.Sprites.IPackerPolicy",733],["protected class Entry",733],["public Sprite            sprite;",733],["public AtlasSettings     settings;",733],["public string            atlasName;",733],["public SpritePackingMode packingMode;",733],["public int               anisoLevel;",733],["private const uint kDefaultPaddingPower = 2; // Good for base and two mip levels.",733],["public virtual int GetVersion() { return 1; }",733],["protected virtual string TagPrefix { get { return \"[TIGHT]\"; } }",733],["protected virtual bool AllowTightWhenTagged { get { return true; } }",733],["public void OnGroupAtlases(BuildTarget target, PackerJob job, int[] textureImporterInstanceIDs)",733],["List entries = new List();",733],["foreach (int instanceID in textureImporterInstanceIDs)",733],["TextureImporter ti = EditorUtility.InstanceIDToObject(instanceID) as TextureImporter;",733],["TextureImportInstructions ins = new TextureImportInstructions();",733],["ti.ReadTextureImportInstructions(ins, target);",733],["TextureImporterSettings tis = new TextureImporterSettings();",733],["ti.ReadTextureSettings(tis);",733],["Sprite[] sprites = AssetDatabase.LoadAllAssetRepresentationsAtPath(ti.assetPath).Select(x => x as Sprite).Where(x => x != null).ToArray();",733],["foreach (Sprite sprite in sprites)",733],["Entry entry = new Entry();",733],["entry.sprite = sprite;",733],["entry.settings.format = ins.desiredFormat;",733],["entry.settings.usageMode = ins.usageMode;",733],["entry.settings.colorSpace = ins.colorSpace;",733],["entry.settings.compressionQuality = ins.compressionQuality;",733],["entry.settings.filterMode = Enum.IsDefined(typeof(FilterMode), ti.filterMode) ? ti.filterMode : FilterMode.Bilinear;",733],["entry.settings.maxWidth = 2048;",733],["entry.settings.maxHeight = 2048;",733],["entry.settings.generateMipMaps = ti.mipmapEnabled;",733],["if (ti.mipmapEnabled)",733],["entry.settings.paddingPower = kDefaultPaddingPower;",733],["entry.atlasName = ParseAtlasName(ti.spritePackingTag);",733],["entry.packingMode = GetPackingMode(ti.spritePackingTag, tis.spriteMeshType);",733],["entry.anisoLevel = ti.anisoLevel;",733],["entries.Add(entry);",733],["Resources.UnloadAsset(ti);",733],["// First split sprites into groups based on atlas name",733],["var atlasGroups =",733],["from e in entries",733],["group e by e.atlasName;",733],["foreach (var atlasGroup in atlasGroups)",733],["int page = 0;",733],["// Then split those groups into smaller groups based on texture settings",733],["var settingsGroups =",733],["from t in atlasGroup",733],["group t by t.settings;",733],["foreach (var settingsGroup in settingsGroups)",733],["string atlasName = atlasGroup.Key;",733],["if (settingsGroups.Count() > 1)",733],["atlasName += string.Format(\" (Group {0})\", page);",733],["AtlasSettings settings = settingsGroup.Key;",733],["settings.anisoLevel = 1;",733],["// Use the highest aniso level from all entries in this atlas",733],["if (settings.generateMipMaps)",733],["foreach (Entry entry in settingsGroup)",733],["if (entry.anisoLevel > settings.anisoLevel)",733],["settings.anisoLevel = entry.anisoLevel;",733],["job.AddAtlas(atlasName, settings);",733],["foreach (Entry entry in settingsGroup)",733],["job.AssignToAtlas(atlasName, entry.sprite, entry.packingMode, SpritePackingRotation.None);",733],["++page;",733],["protected bool IsTagPrefixed(string packingTag)",733],["packingTag = packingTag.Trim();",733],["if (packingTag.Length &lt; TagPrefix.Length)",733],["return false;",733],["return (packingTag.Substring(0, TagPrefix.Length) == TagPrefix);",733],["private string ParseAtlasName(string packingTag)",733],["string name = packingTag.Trim();",733],["if (IsTagPrefixed(name))",733],["name = name.Substring(TagPrefix.Length).Trim();",733],["return (name.Length == 0) ? \"(unnamed)\" : name;",733],["private SpritePackingMode GetPackingMode(string packingTag, SpriteMeshType meshType)",733],["if (meshType == SpriteMeshType.Tight)",733],["if (IsTagPrefixed(packingTag) == AllowTightWhenTagged)",733],["return SpritePackingMode.Tight;",733],["return SpritePackingMode.Rectangle;",733],["TightPackerPolicy",733],["using System;",733],["using System.Linq;",733],["using UnityEngine;",733],["using UnityEditor;",733],["using UnityEditor.Sprites;",733],["using System.Collections.Generic;",733],["// TightPackerPolicy will tightly pack non-rectangle Sprites unless their packing tag contains \"[RECT]\".",733],["class TightPackerPolicySample : DefaultPackerPolicySample",733],["protected override string TagPrefix { get { return \"[RECT]\"; } }",733],["protected override bool AllowTightWhenTagged { get { return false; } }",733],["Standalone",734],["The \"Standalone\" platform refers to native non-webplayer builds for Mac, Windows and Linux.",734],["The Context and the Content",735],["When thinking about lighting in Unity 5, it is handy to divide concepts into what we call the Context, which is information on the lighting that exists in the scene (coming from the skybox, lights and shadows, GI, etc) and the Content, which is usually authored directly by you and describes what is in the environment (materials, geometries, animation, etc).",735],["Most times the distinction will be obvious, but not always. For instance, a skybox is graphical Content, that can control some of the lighting Context of your scene.",735],["The Context",735],["When lighting an object it is important to understand which sources of light are affecting the object. There are direct light sources in your scene - light Game Objects that you may have placed around your scene. There are also indirect light sources such as reflections and bounced light. These all have an effect on the object's material to give the final result that the camera sees across the surface of the object.",735],["The Default Lighting Context",735],["At startup, Unity 5 shows an empty scene. This scene already has a default lighting context available with ambient, skydome-based reflections and a directional light. Any object placed in that scene should, by default, have all lighting it needs to look correct.",735],["Let’s add a sphere to the scene, to see the effect of the default lighting context.",735],["The added sphere will be using the Standard shader by default. Focusing the camera on the sphere will result on something like this:",735],["Notice the reflection along the edges of the sphere as well as the subtle ambient, from brown (bottom) to the sky blue (top). By default, in an empty scene, all lighting context is derived from the skybox and a directional light (which is added to the Scene by default).",735],["Of course this is the default setup, a single lighting and sky reflection may not be enough in some cases. You can easily add more lighting and reflection probes:",735],["For an in-depth view on how reflection and light probes work please head for the documentation of light probes and reflection probes.",735],["Skyboxes",735],["A Skybox, baked or procedural, can be an integral part of your lighting setup. It can be used to control the ambient lighting and the reflections in your objects in addition to rendering the sky.",735],["Procedural Skyboxes also allow you to set the colours directly and create a sun disc instead of using a bitmap - more information can be found in the Skybox Documentation",735],["While reflecting the skybox can be useful for many objects in your scenes, particularly outdoor scenes, there are often cases where you need to vary the reflections an object uses - there may be dark areas in an outdoor scene, such as alleyways or dense forest, or you may have interior areas which require reflections to match each room.",735],["To meet the needs of these various reflective requirements, Unity has reflection probes which allow you to sample the environment in your scene at a certain point in space, for use as the ambient light and reflection source for any objects near that point instead of the default skybox. Reflection probes can be placed around your scene in any locations where the scene's skybox is not sufficient or appropriate.",735],["Global Illumination",735],["The concept of Global Illumination is integral to Unity 5. Both the Standard shader and Unity 5's GI systems have been designed to play well with each other. The GI system takes care of creating and tracking bounced light, light from emissive materials and light from the environment.",735],["You can find the details at http://mdeditor.infra.hq.unity3d.com/#GlobalIllumination",735],["The context is a critical part of the overall look of the image. In this example you can see how a scene reflects changes in context, while content and camera remains the same.",735],["The Content",735],["The content is the term used to describe the objects in your scene that are being rendered. Their appearance is a result of the lighting context acting on the materials that have been applied to the objects.",735],["The Material Editor",735],["When viewing a material in the inspector which uses the Standard Shader, the editor displays all parameters for the material including textures, blending modes, masking and secondary maps. At a glance you be able to see which features are used and preview the material.",735],["As the Standard shader is data-driven: Unity will only use the shader code required by the configuration the user has set for the material. In other words if a feature or texture slot of the material is not used, there is no cost for it and the shader combination is optimised behind the scenes.",735],["How to create a material",735],["The Standard shader allows for many configurations in order to represent a great variety of material types. Values can be set with texture maps or colour pickers and sliders. Generally UV mapping is required in conjunction with textures to describe which part of your mesh refers to which part of the texture map. The Standard Shader material allows you therefore to have different material properties across the same mesh when used in conjunction with specular and smoothness map or a metallic map. In other words you can create rubber, metal and wood on one mesh where the resolution of the texture can exceed the polygon topology allowing for smooth borders and transition between material types, of course this has implications for a greater complexity in the workflow, but this will depend on your texture creation method.",735],["Textures for your materials tend to be generated in one of two ways - painting and compositing in a 2D image editor like Photoshop, or rendering / baking from your 3D package, where you can also make use of higher resolution models to generate your normal maps and occlusion maps in addition to the albedo, specular and other maps. This workflow varies dependent on the external packages used.",735],["Generally no texture map should contain inherent lighting (shadows, highlights, etc). One of the advantages of PBS is that objects react to light as you would expect, which is not possible if maps already contain lighting information.",735],["Standard Shader Fundamentals",736],["The Standard shader makes PBS (Physically Based Shading) easily accessible to Unity users. It is designed with hard surfaces in mind (which are also known as \"architectural\" materials), and can deal with most real world materials like stone, ceramics, brass, silver or rubber. It will even do a decent job with non-hard materials like skin, hair or cloth.",736],["Unity uses PBS to create a user friendly way of achieving a consistent, plausible look under all lighting conditions. In order to do so it models how light behaves in reality and follows principles of physics.",736],["This is in contrast to older methods of shading used in earlier versions of Unity, where there was a large range of different types of shaders available to choose from. In this older method, each type of shader had its own special purposes - such as Diffuse, Specular, Bumped Specular, Reflective, etc.",736],["With the standard shader, all of these different requirements are combined into a single shader which is intended to be used across all material types. The benefit is that the same lighting calculations are used in all areas of your scene, which gives a realistic, consistent and believable distribution of light and shade across all models which use the shader.",736],["Terminology",736],["There are a number of concepts that are very useful when talking about Physically Based Shading (PBS) in Unity, we’d advise you to become familiar with them. These include:",736],["Energy conservation - Which points to the fact that objects never reflect more light than they receive. The more specular a material is, the less diffuse it should be; the smoother a surface is the stronger and smaller the highlight gets, and so on.",736],["HDR - High Dynamic Range, which refers to colours outside of the usual 0...1 range. For instance, the sun can easily be ten times brighter than a blue sky. For an in depth discussion please see the HDR manual page.",736],["Make your own",737],["The Standard shader is a solid example of a shader using the new PBS System and should be valuable for a range of uses, but you can of course build on this editing the shader and bringing more esoteric materials and workflows to suit your projects.",737],["The shader code source is provided here.",737],["Material charts",738],["Use these charts as reference for realistic settings:",738],["There are also hints on how to make realistic materials in these charts. In essence it is about choosing a workflow (default or metallic) and obtaining relevant values for your maps or colour pickers. For instance, if we wanted to make shiny white plastic, we would want a white Albedo. Since it is not a metal we would want a dark Specular (or a very low Metallic value) and finally a very high Smoothness.",738],["Material parameters",739],["Rendering Mode - Allows you to choose whether the object is blended or not, and if so, which type of blending mode to use. Use in combination with a transparency map.",739],["Albedo (RGB) - Controls the base color of the surface. Also commonly referred to as Diffuse Color.",739],["Albedo (A) - Contains the transparency map, a greyscale image in the alpha channel of the bitmap",739],["Specular - [specular workflow] (RGB)",739],["The RGB channel controls the specular reflectivity",739],["Smoothness - [specular workflow] (A)",739],["The grayscale map in the alpha channel controls the microsurface detail or smoothness across a surface.",739],["Metallic - [metallic workflow] (RA)",739],["The red channel controls how metallic the material is (if a texture is plugged, otherwise there’ll be an explicit slider). In both material channels the Alpha of the texture describes the surface's smoothness (if a texture is plugged, otherwise there’ll be an explicit slider)",739],["Occlusion - (G) Occludes indirect lighting of surface (ambient, reflections) It is normally extracted from the 3D model using the modeller or third party software.",739],["Emission - (RGB) Controls colour and intensity of light emitted from the surface.",739],["Normal Map - Describes relief/bumpiness of surface (in tangent space).",739],["Detail Mask - (A) Texture map to mask the secondary maps",739],["Secondary Maps",739],["Detail Albedo x2 - (RGB) Albedo to be overlaid with the primary one. All rules of the primary Albedo apply to this map as well.",739],["Normal Map - Relief combined with the primary normal. Follows the rules and behaviour of the main Normal Map. If you use a single normal map do ALWAYS plug it into the primary channel. The Secondary normal map channel is more expensive than the primary one but has the exact same effect.",739],["Fresnel",739],["One important visual cue of objects in the real world has to do with how they become more reflective at grazing angles (illustrated below). This is called the Fresnel effect.",739],["There are two things to note in this example; firstly, these reflections only appear around the edges of the sphere (that’s when its surface is at a grazing angle), and also that they become more visible and sharper as the smoothness of the material goes up.",739],["In the Standard shader there is no direct control over the Fresnel effect. Instead it is indirectly controlled through the smoothness of the material. Smooth surfaces will present a stronger Fresnel, totally rough surfaces will have no Fresnel.",739],["Metallic vs Specular Workflow",740],["Two workflows",740],["When creating a material using the Standard shader you will have the choice of using one of two flavours, \"Standard\" and \"Standard (Specular setup)\". They differ in the data they take as follows:",740],["Standard: The shader exposes a “metallic” value that states whether the material is metallic or not. In the case of a metallic material, the Albedo color will control the color of your specular reflection and most light will be reflected as specular reflections. Non metallic materials will have specular reflections that are the same color as the incoming light and will barely reflect when looking at the surface face-on.",740],["Standard (Specular setup): Choose this shader for the classic approach. A Specular color is used to control the color and strength of specular reflections in the material. This makes it possible to have a specular reflection of a different color than the diffuse reflection for instance.",740],["It is generally possible to achieve a good representation of most common material types using either method, so for the most part choosing one or the other is a matter of personal preference to suit your art workflow. For instance, to below is an example of a rubbery plastic material created in both Standard and Standard Specular workflows:",740],["The first image represents the metallic workflow, where we are setting this material to zero (non metallic). The second setup is nearly identical but we set the specular to nearly black (so we don’t get metallic mirror-like reflections)",740],["One might ask where do these values come from, what is “nearly black” and what makes grass different from aluminium exactly? In the world of Physically Based Shading we can use references from known real-world materials. Some of those references we have compiled into a handy set of charts you can use to create your materials.",740],["State Machine Basics",741],["The basic idea is that a character is engaged in some particular kind of action at any given time. The actions available will depend on the type of gameplay but typical actions include things like idling, walking, running, jumping, etc. These actions are referred to as states, in the sense that the character is in a \"state\" where it is walking, idling or whatever. In general, the character will have restrictions on the next state it can go to rather than being able to switch immediately from any state to any other. For example, a running jump can only be taken when the character is already running and not when it is at a standstill, so it should never switch straight from the idle state to the running jump state. The options for the next state that a character can enter from its current state are referred to as state transitions. Taken together, the set of states, the set of transitions and the variable to remember the current state form a state machine.",741],["The states and transitions of a state machine can be represented using a graph diagram, where the nodes represent the states and the arcs (arrows between nodes) represent the transitions. You can think of the current state as being a marker or highlight that is placed on one of the nodes and can then only jump to another node along one of the arrows.",741],["The importance of state machines for animation is that they can be designed and updated quite easily with relatively little coding. Each state has a Motion associated with it that will play whenever the machine is in that state. This enables an animator or designer to define the possible sequences of character actions and animations without being concerned about how the code will work.",741],["Mecanim State Machines",741],["Mecanim's Animation State Machines provide a way to overview all of the animation clips related to a particular character and allow various events in the game (for example user input) to trigger different animations.",741],["Animation State Machines can be set up from the Animator Controller Window, and they look something like this:",741],["State Machines consist of States, Transitions and Events and smaller Sub-State Machines can be used as components in larger machines. See the reference pages for Animation States and Animation Transitions for further information.",741],["State Machine Behaviours",742],["A State Machine Behaviour is a special class of script. In a similar way to attaching regular Unity scripts (MonoBehaviours) to individual GameObjects, you can attach a StateMachineBehaviour script to an individual state within a state machine. This allows you to write code that will execute when the state machine enters, exits or remains within a particular state. This means you do not have to write your own logic to test for and detect changes in state.",742],["A few examples for the use of this feature might be to:",742],["Play sounds as states are entered or exited",742],["Perform certain tests (eg, ground detection) only when in appropriate states",742],["Activate and control special effects associated with specific states",742],["State Machine Behaviours can be created and added to states in a very similar way to the way you would create and add scripts to GameObjects. Select a state in your state machine, and then in the inspector use the \"Add Behaviour\" button to select an existing StateMachineBehaviour or create a new one.",742],["State Machine Behaviour scripts have access to a number of events that are called when the Animator enters, updates and exits different states (or sub-state machines). There are also events which allow you to handle the Root motion and Inverse Kinematics calls.",742],["For more information see the State Machine Behaviour script reference.",742],["State Machine Transitions",743],["State Machine Transitions exist to help you simplify large or complex State Machines. They allow you to have a higher level of abstraction over the state machine logic.",743],["Each view in the animator window has an Entry and Exit node. These are used during State Machine Transitions.",743],["The Entry node is used when transitioning into a state machine. The entry node will be evaluated and will branch to the destination state according to the conditions set. In this way the entry node can control which state the state machine begins in, by evaluating the state of your parameters when when the state machine begins.",743],["Because state machines always have a default state, there will always be a default transition branching from the entry node to the default state.",743],["You can then add additional transitions from the Entry node to other states, to control whether the state machine should begin in a different state.",743],["The Exit node is used to indicate that a state machine should exit.",743],["Each sub-state within a state machine is considered a separate and complete state machine, so by using these entry and exit nodes, you can control the flow from a top-level state machine into its sub-state machines more elegantly.",743],["It is possible to mix state machine transitions with regular state transtitions, so it is possible to transition from state to state, from a state to a statemachine, and from one statemachine directly to another statemachine.",743],["Static GameObjects",744],["Many optimisations need to know if an object can move during gameplay. Information about a Static (ie, non-moving) object can often be precomputed in the editor in the knowledge that it will not be invalidated by a change in the object's position. For example, rendering can be optimised by combining several static objects into a single, large object known as a batch.",744],["The inspector for a GameObject has a Static checkbox and menu in the extreme top-right, which is used to inform various different systems in Unity that the object will not move. The object can be marked as static for each of these systems individually, so you can choose not to calculate static optimisations for an object when it isn't advantageous.",744],["Static Settings",744],["The Everything and Nothing enable or disable static status simultaneously for all systems that make use of it. These systems are:",744],["Lightmapping: advanced lighting for a scene;",744],["Occluder and Occludee: rendering optimization based on the visibility of objects from specific camera positions;",744],["Batching: rendering optimization that combines several objects into one larger object;",744],["Navigation: the system that enables characters to negotiate obstacles in the scene;",744],["Off-mesh Links: connections made by the Navigation system between discontinuous areas of the scene.",744],["Reflection Probe: captures a spherical view of its surroundings in all directions.",744],["See the pages about these topics for further details on how the static setting affects performance.",744],["Streaming Assets",745],["Most assets in Unity are combined into the project when it is built. However, it is sometimes useful to place files into the normal filesystem on the target machine to make them accessible via a pathname. An example of this is the deployment of a movie file on iOS devices; the original movie file must be available from a location in the filesystem to be played by the PlayMovie function.",745],["Any files placed in a folder called StreamingAssets in a Unity project will be copied verbatim to a particular folder on the target machine. You can retrieve the folder using the Application.streamingAssetsPath property. It's always best to use Application.streamingAssetsPath to get the location of the StreamingAssets folder, it will always point to the correct location on the platform where the application is running.",745],["For reference, the location of this folder varies per platform:",745],["On a desktop computer (Mac OS or Windows) the location of the files can be obtained with the following code:",745],["path = Application.dataPath + \"/StreamingAssets\";",745],["On iOS, you should use:",745],["path = Application.dataPath + \"/Raw\";",745],["On Android, you should use:",745],["path = \"jar:file://\" + Application.dataPath + \"!/assets/\";",745],["Note that on Android, the files are contained within a compressed .jar file (which is essentially the same format as standard zip-compressed files). This means that if you do not use Unity's WWW class to retrieve the file then you will need to use additional software to see inside the .jar archive and obtain the file.",745],["Structure of a Unity XCode Project",746],["When you build a project for the iOS platform Unity will create a folder that contains an XCode project. This project is required to compile and sign your app before deploying on devices, and it allows you to prepare and bundle your game for distribution on the App Store.",746],["Before building the iOS project make sure that you set the Bundle Identifier in Player Settings. You may also choose the SDK version to run the game on the device or simulator.",746],["Classes folder",746],["This contains code that integrates the Unity Runtime and Objective-C. The contained files main.mm and UnityAppController.mm/h are the entry point of the application, and you can create your own AppDelegate, derived from UnityAppController. If you have plugins including AppController.h you can simply include UnityAppController.h instead. If you have AppController.mm/h in Plugins/iOS folders you can merge and rename them.",746],["Also the iPhone_Profiler.h file defines a compiler conditional to enable the Internal Profiler. This is a folder for code that doesn't change often, and you can place your custom classes here. The changes to this folder are preserved between builds when the append mode is selected, but this function doesn't support multiple build targets and requires a fixed structure of the Libraries folder.",746],["The Internal Profiler is fast and unobtrusive, and feeds basic information:",746],["which subsystem is taking most of the frame time,",746],[".NET heap size,",746],["GC event count/duration.",746],["See built-in profiler for further information.",746],["Data folder",746],["This contains the serialized game assets, and .NET assemblies (dll files) as full code (or metadata if stripping is on). The machine.config file is the setup for various .NET services such as security, WebRequest, and more. The content of this folder is refreshed with each build, and you should not modify it.",746],["Libraries folder",746],["This contains the .NET assemblies translated into ARM assembler (s files). The libiPhone-lib.a file is the Unity Runtime static library, and RegisterMonoModules.cpp binds Unity native code with .NET. The content of this folder is refreshed with each build, and you should not modify it.",746],["Other newly created custom folders",746],["Your custom files can be placed here.",746],["Graphic files",746],["These are icons and splash screens (png files). These files are automatically managed by Unity. You can setup them in Player Settings.",746],["Property List file",746],["The info.plist is managed via Player Settings in Unity. This file is updated when building the player, instead of being replaced. You should not modify it unless it is really needed.",746],["Other files",746],["These include the XCode Project file (xcodeproj file), and framework links that are only shown in the Project Navigator.",746],["Rich Text",747],["The text for UI elements and text meshes can incorporate multiple font styles and sizes. Rich text is supported both for the UI System and the legacy GUI system. The Text, GUIStyle, GUIText and TextMesh classes have a Rich Text setting which instructs Unity to look for markup tags within the text. The Debug.Log function can also use these markup tags to enhance error reports from code. The tags are not displayed but indicate style changes to be applied to the text.",747],["Markup format",747],["The markup system is inspired by HTML but isn't intended to be strictly compatible with standard HTML. The basic idea is that a section of text can be enclosed inside a pair of matching tags:-",747],["&#160;&#160;&#160;We are &lt;b&gt;not&lt;/b&gt; amused",747],["As the example shows, the tags are just pieces of text inside the \"angle bracket\" characters, &lt; and &gt;. The text inside the tag denotes its name (which in this case is just b). Note that the tag at the end of the section has the same name as the one at the start but with the slash / character added. The tags are not displayed to the user directly but are interpreted as instructions for styling the text they enclose. The b tag used in the example above applies boldface to the word \"not\", so the text will appear onscreen as:-",747],["&#160;&#160;&#160;We are not amused",747],["A marked up section of text (including the tags that enclose it) is referred to as an element.",747],["Nested elements",747],["It is possible to apply more than one style to a section of text by \"nesting\" one element inside another",747],["&#160;&#160;&#160;We are &lt;b&gt;&lt;i&gt;definitely not&lt;/i&gt;&lt;/b&gt; amused",747],["The i tag applies italic style, so this would be presented onscreen as",747],["&#160;&#160;&#160;We are definitely not amused",747],["Note the ordering of the ending tags, which is in reverse to that of the starting tags. The reason for this is perhaps clearer when you consider that the inner tags need not span the whole text of the outermost element",747],["&#160;&#160;&#160;We are &lt;b&gt;absolutely &lt;i&gt;definitely&lt;/i&gt; not&lt;/b&gt; amused",747],["which gives",747],["&#160;&#160;&#160;We are absolutely definitely not amused",747],["Tag parameters",747],["Some tags have a simple all-or-nothing effect on the text but others might allow for variations. For example, the color tag needs to know which color to apply. Information like this is added to tags by the use of parameters:-",747],["&#160;&#160;&#160;We are &lt;color=green&gt;green&lt;/color&gt; with envy",747],["Note that the ending tag doesn't include the parameter value. Optionally, the value can be surrounded by quotation marks but this isn't required.",747],["Supported tags",747],["The following list describes all the styling tags supported by Unity.",747],["Tag Description Example Notes ",747],["b Renders the text in boldface. &#160;&#160;&#160;We are &lt;b&gt;not&lt;/b&gt; amused.  ",747],["i Renders the text in italics. &#160;&#160;&#160;We are &lt;i&gt;usually&lt;/i&gt; not amused.  ",747],["size Sets the size of the text according to the parameter value, given in pixels. &#160;&#160;&#160;We are &lt;size=50&gt;largely&lt;/size&gt; unaffected. Although this tag is available for Debug.Log, you will find that the line spacing in the window bar and Console looks strange if the size is set too large. ",747],["color Sets the color of the text according to the parameter value. The color can be specified in the traditional HTML format. &#160;&#160;&#160;#rrggbbaa ...where the letters correspond to pairs of hexadecimal digits denoting the red, green, blue and alpha (transparency) values for the color. For example, cyan at full opacity would be specified by &#160;&#160;&#160;&lt;color=#00ffffff&gt;... Another option is to use the name of the color. This is easier to understand but naturally, the range of colors is limited and full opacity is always assumed. &#160;&#160;&#160;&lt;color=cyan&gt;...  The available color names are given in the table below. ",747],["Color name Hex value Swatch ",747],["aqua (same as cyan) #00ffffff  ",747],["black #000000ff  ",747],["blue #0000ffff  ",747],["brown #a52a2aff  ",747],["cyan (same as aqua) #00ffffff  ",747],["darkblue #0000a0ff  ",747],["fuchsia (same as magenta) #ff00ffff  ",747],["green #008000ff  ",747],["grey #808080ff  ",747],["lightblue #add8e6ff  ",747],["lime #00ff00ff  ",747],["magenta (same as fuchsia) #ff00ffff  ",747],["maroon #800000ff  ",747],["navy #000080ff  ",747],["olive #808000ff  ",747],["orange #ffa500ff  ",747],["purple #800080ff  ",747],["red #ff0000ff  ",747],["silver #c0c0c0ff  ",747],["teal #008080ff  ",747],["white #ffffffff  ",747],["yellow #ffff00ff  ",747],["material",747],["This is only useful for text meshes and renders a section of text with a material specified by the parameter. The value is an index into the text mesh's array of materials as shown by the inspector.",747],["&#160;&#160;&#160;We are &lt;material=2&gt;texturally&lt;/material&gt; amused",747],["quad",747],["This is only useful for text meshes and renders an image inline with the text. It takes parameters that specify the material to use for the image, the image height in pixels, and a further four that denote a rectangular area of the image to display. Unlike the other tags, quad does not surround a piece of text and so there is no ending tag - the slash character is placed at the end of the initial tag to indicate that it is \"self-closing\".",747],["&#160;&#160;&#160;&lt;quad material=1 size=20 x=0.1 y=0.1 width=0.5 height=0.5 /&gt;",747],["This selects the material at position in the renderer's material array and sets the height of the image to 20 pixels. The rectangular area of image starts at given by the x, y, width and height values, which are all given as a fraction of the unscaled width and height of the texture.",747],["Editor GUI",747],["Rich text is disabled by default in the editor GUI system but it can be enabled explicitly using a custom GUIStyle. The richText property should be set to true and the style passed to the GUI function in question:-",747],["GUIStyle style = new GUIStyle ();",747],["style.richText = true;",747],["GUILayout.Label(\"Some RICH text\",style);",747],["Supported Events",748],["The Eventsystem supports a number of events, and they can be customised further in user custom user written InputModules.",748],["The events that are supported by the StandaloneInputModule and TouchInputModule are provided by interface and can be implemented on a MonoBehaviour by implementing the interface. If you have a valid EventSystem configured the events will be called at the correct time.",748],["\nIPointerEnterHandler - OnPointerEnter - Called when a pointer enters the object\n",748],["\nIPointerExitHandler - OnPointerExit - Called when a pointer exits the object\n",748],["\nIPointerDownHandler - OnPointerDown - Called when a pointer is pressed on the object\n",748],["\nIPointerUpHandler - OnPointerUp - Called when a pointer is released (called on the original the pressed object)\n",748],["\nIPointerClickHandler - OnPointerClick - Called when a pointer is pressed and released on the same object\n",748],["\nIInitializePotentialDragHandler - OnInitializePotentialDrag - Called when a drag target is found, can be used to initialise values\n",748],["\nIBeginDragHandler - OnBeginDrag - Called on the drag object when dragging is about to begin\n",748],["\nIDragHandler - OnDrag - Called on the drag object when a drag is happening\n",748],["\nIEndDragHandler - OnEndDrag - Called on the drag object when a drag finishes\n",748],["\nIDropHandler - OnDrop - Called on the object where a drag finishes\n",748],["\nIScrollHandler - OnScroll - Called when a mouse wheel scrolls\n",748],["\nIUpdateSelectedHandler - OnUpdateSelected - Called on the selected object each tick\n",748],["\nISelectHandler - OnSelect - Called when the object becomes the selected object\n",748],["\nIDeselectHandler - OnDeselect - Called on the selected object becomes deselected\n",748],["\nIMoveHandler - OnMove - Called when a move event occurs (left, right, up, down, ect)\n",748],["\nISubmitHandler - OnSubmit - Called when the submit button is pressed\n",748],["\nICancelHandler - OnCancel - Called when the cancel button is pressed\n",748],["Tags",749],["A Tag is a word which you link to one or more GameObjects. For instance, you might define \"Player\" and \"Enemy\" Tags for player-controlled characters and non-player characters respectively; a \"Collectable\" Tag could be defined for items the player can collect in the Scene; and so on. Clearly, Tags are intended to identify GameObjects for scripting purposes. We can use them to write script code to find a GameObject by looking for any object that contains our desired Tag. This is achieved using the GameObject.FindWithTag() function.",749],["For example:",749],["// Instantiates respawnPrefab at the location",749],["// of the game object with tag \"Respawn\"",749],["//JS",749],["var respawnPrefab : GameObject;",749],["var respawn = GameObject.FindWithTag (\"Respawn\");",749],["Instantiate (respawnPrefab, respawn.position, respawn.rotation);",749],["//C#",749],["using UnityEngine;",749],["using System.Collections;",749],["public class Example : MonoBehaviour {",749],["public GameObject respawnPrefab;",749],["public GameObject respawn;",749],["void Start() {",749],["if (respawn == null)",749],["respawn = GameObject.FindWithTag(\"Respawn\");",749],["Instantiate(respawnPrefab, respawn.transform.position, respawn.transform.rotation) as GameObject;",749],["This saves us having to manually add our GameObjects to a script's exposed properties using drag and drop -- a useful timesaver if the same script code is being used in a number of GameObjects. Another example is a TriggerCollider control script which needs to work out whether the player is interacting with an enemy, as opposed to, say, a random prop or collectable item. Tags make this kind of test easy.",749],["Applying a Tag",749],["The Inspector will show the Tag and Layer-&gt;Layers drop-down menus just below any GameObject's name. To apply a Tag to a GameObject, simply open the Tags drop-down and choose the Tag you require:",749],["The GameObject will now be associated with this Tag.",749],["Creating new Tags",749],["To create a new Tag, click the \"Add Tag...\" option at the end of the drop-down menu. This will open up the Tag Manager in the Inspector. The Tag Manager is described here.",749],["Layers appear similar to Tags, but are used to define how Unity should render GameObjects in the Scene. See the Layers page for more information.",749],["Hints",749],["A GameObject can only have one Tag assigned to it.",749],["Unity includes some built-in Tags which do not appear in the Tag Manager:",749],["\"Untagged\"",749],["\"Respawn\"",749],["\"Finish\"",749],["\"EditorOnly\"",749],["\"MainCamera\"",749],["\"Player\"",749],["and \"GameController\".",749],["You can use any word you like as a Tag. (You can even use short phrases, but you may need to widen the Inspector to see the tag's full name.)",749],["Target Matching",750],["Often in games, a situation arises where a character must move in such a way that a hand or foot lands at a certain place at a certain time. For example, the character may need to jump across stepping stones or jump and grab an overhead beam.",750],["You can use the Animator.MatchTarget function to handle this kind of situation. Imagine, for example, you want to arrange an situation where the character jumps onto a platform and you already have an animation clip for it called Jump Up. Firstly, you need to find the place in the animation clip at which the character is beginning to get off the ground, note in this case it is 14.1% or 0.141 into the animation clip in normalized time:-",750],["You also need to find the place in the animation clip where the character is about to land on his feet, which in this case is at 78.0% or 0.78.",750],["With this information, you can create a script that calls MatchTarget which you can attach to the model:-",750],["using UnityEngine;",750],["using System;",750],["[RequireComponent(typeof(Animator))]",750],["public class TargetCtrl : MonoBehaviour {",750],["protected Animator animator;",750],["//the platform object in the scene",750],["public Transform jumpTarget = null;",750],["void Start () {",750],["animator = GetComponent();",750],["void Update () {",750],["if(animator) {",750],["if(Input.GetButton(\"Fire1\"))",750],["animator.MatchTarget(jumpTarget.position, jumpTarget.rotation, AvatarTarget.LeftFoot,",750],["new MatchTargetWeightMask(Vector3.one, 1f), 0.141f, 0.78f);",750],["The script will move the character so that it jumps from its current position and lands with its left foot at the target. Bear in mind that the result of using MatchTarget will generally only make sense if it is called at the right point in gameplay.",750],["Grass and Other Details",751],["A terrain can have grass clumps and other small objects such as rocks covering its surface. Grass is rendered by using 2D images to represent the individual clumps while other details are generated from standard meshes.",751],["Enabling details",751],["The details button on the toolbar enables grass/detail painting.",751],["Initially, the terrain has no grass or details available but if you click the Edit Details button in the inspector, you will see the Add Grass Texture and Add Detail Mesh options on the menu that appears. A window will appear to let you choose the assets you want to add to the terrain for painting.",751],["For grass, the window looks like this:",751],["The Detail Texture is the texture that represents the grass. A few suitable textures are included in Unity's standard assets (menu: Assets > Import Package > Terrain Assets) but you can also create your own. The texture is simply a small image with alpha set to zero for the empty areas. (\"Grass\" is a generic term, of course - you can use the images to represent flowers, brush and perhaps even artificial objects like barbed wire coils.)",751],["The Min Width, Min Height, Max Width and Max Height values specify the upper and lower limits of the size of the clumps of grass that are generated. For an authentic look, the grass is generated in random \"noisy\" patterns that have bare patches interspersed with the grass.",751],["The Noise Spread value controls the approximate size of the alternating patches, with higher values indicating more variation within a given area. (Tech note: the noise is actually generated using Perlin noise; the noise spread refers to the scaling applied between the x,y position on the terrain and the noise image.) The alternating patches of grass are considered more \"healthy\" at the centres than at the edges and the Healthy/Dry Color settings show the health of grass clumps by their color.",751],["Finally, when the Billboard option is enabled, the grass images will rotate so that they always face the camera. This option can be useful when you want to show a dense field of grass because there is no possibility of seeing clumps side-on and therefore visibly two-dimensional. However, with sparse grass, the rotations of individual clumps can become apparent, creating a strange effect.",751],["For detail meshes, such as rocks, the selection window looks like this:-",751],["The Detail property is used to select a prefab from your project which will be scaled by the Random Width and Random Height values for individual instances. The Noise Spread and Healthy/Dry Color values work the same as they do for grass (although the concept of \"healthy\" is stretched somewhat when applied to objects like rocks!) The Render Mode can be set to Grass or Vertex Lit. In Grass Mode, the instances of detail objects in the scene will be flattened into 2D images that behave like the grass textures. In Vertex Lit mode, the details will be rendered as solid, vertex lit objects in the scene.",751],["Height Tools",752],["The first three tools on the terrain inspector toolbar are used to paint changes in height onto the terrain.",752],["From the left, the first button activates the Raise/Lower Height tool. When you paint with this tool, the height will be increased as you sweep the mouse over the terrain. The height will accumulate if you hold the mouse in one place, similar to the effect of the airbrush tools in image editors. If you hold down the shift key, the height will be lowered. The different brushes can be used to create a variety of effects. For example, you can create rolling hills by increasing the height with a soft-edged brush and then cut steep cliffs and valleys by lowering with a hard-edged brush.",752],["The second tool from the left, Paint Height is similar to the Raise/Lower tool except that it has an additional property to set the target height. When you paint on the object, the terrain will be lowered in areas above that height and raised in areas below it. You can use the Height property slider to set the height manually or you can shift-click on the terrain to sample the height at the mouse position (rather like the \"eyedropper\" tool in an image editor). Next to the Height property is a Flatten button that simply levels the whole terrain to the chosen height. This is useful to set a raised ground level, say if you want the landscape to include both hills above the level and valleys below it. Paint Height is handy for creating plateaux in a scene and also for adding artificial features like roads, platforms and steps.",752],["The third tool from the left, Smooth Height does not significantly raise or lower the terrain height but rather averages out nearby areas. This softens the landscape and reduces the appearance of abrupt changes, somewhat like the blur tool in an image editor. You might use this, for example, when you have painted detail using one of the noisier brushes in the available set. These brush patterns will tend to introduce sharp, jagged rocks into a landscape, but these can be softened using Smooth Height.",752],["Working with Heightmaps",752],["As noted above, the height tools are reminiscent of painting tools available in image editors. In fact, the terrain is implemented using a texture behind the scenes and so the tools are ultimately acting as texture painting tools.",752],["The height of each point on the terrain is represented as a value in a rectangular array. This array can be represented using a grayscale image known as a heightmap. It is sometimes useful to work on a heightmap image in an external editor, such as Photoshop, or obtain existing geographical heightmaps for use in your game. Unity provides the option to import and export heightmaps for a terrain; if you click on the Settings tool (the rightmost button in the toolbar) you will find buttons labelled Import RAW and Export RAW. These allow the heightmap to be read from or written to the standard RAW format, which is a 16-bit grayscale format compatible with most image and landscape editors.",752],["Terrain Settings",753],["The final tool on the terrain toolbar is for settings:",753],["Settings Inspector",753],["Settings are provided for a number of overall usage and rendering options as described below:",753],["Base Terrain",753],["Property: Function: ",753],["Draw Toggle the rendering of terrain on / off. ",753],["Pixel Error The accuracy of the mapping between the terrain maps (heightmap, textures, etc) and the generated terrain; higher values indicate lower accuracy but lower rendering overhead. ",753],["Base Map Distance The maximum distance at which terrain textures will be displayed at full resolution. Beyond this distance, a lower resolution composite image will be used for efficiency. ",753],["Cast Shadows Does the terrain cast shadows? ",753],["Material The material used to render the terrain. This will affect how the color channels of a terrain texture are interpreted. See Enabling Textures for details. Available options are: ",753],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Built In Standard This is the PBR (Physically-Based Rendering) material introduced in Unity 5.0. For each splat layer, you can use one texture for albedo and smoothness, one texture for normal and one scalar value to tweak the metalness. If 'Overwrite Smoothness' is checked, instead of reading from texture maps, the smoothness of the entire terrain will be controlled solely by the 'Smoothness' value specified here. For more information on PBR and the Standard shader, see Standard Shader. ",753],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Built In Legacy Diffuse This is the legacy built-in terrain material from Unity 4.x and before. It uses Lambert (diffuse term only) lighting model and has optional normal map support. ",753],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Built In Legacy Specular This built-in material uses BlinnPhong (diffuse and specular term) lighting model and has optional normal map support. You can specify the overall specular color and shininess for the terrain. ",753],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Custom Use a custom material of your choice to render the terrain. This material should use a shader that is specialised for terrain rendering (e.g. it should handle texture splatting properly). We suggest you get a look at the source code of our built-in terrain shaders and make modifications on top of them. ",753],["Reflection Probes  How reflection probes are used on terrain. Only effective when using built-in standard material or a custom material which supports rendering with reflection. Available options are: ",753],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Off Reflection probes are disabled, skybox will be used for reflection. ",753],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Blend Probes Reflection probes are enabled. Blending occurs only between probes. Default reflection will be used if there are no reflection probes nearby, but no blending between default reflection and probe will occur. ",753],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Blend Probes And Skybox Reflection probes are enabled. Blending occurs between probes or probes and default reflection. ",753],["&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Simple Reflection probes are enabled, but no blending will occur between probes when there are two overlapping volumes. ",753],["Thickness How much the terrain collision volume should extend along the negative Y-axis. Objects are considered colliding with the terrain from the surface to a depth equal to the thickness. This helps prevent high-speed moving objects from penetrating into the terrain without using expensive continuous collision detection. ",753],["Tree and Detail Objects",753],["Property: Function: ",753],["Draw Should trees, grass and details be drawn? ",753],["Detail Distance The distance (from camera) beyond which details will be culled. ",753],["Detail Density The number of detail/grass objects in a given unit of area. The value can be set lower to reduce rendering overhead. ",753],["Tree Distance The distance (from camera) beyond which trees will be culled. ",753],["Billboard Start The distance (from camera) at which 3D tree objects will be replaced by billboard images. ",753],["Fade length Distance over which trees will transition between 3D objects and billboards. ",753],["Max Mesh Trees The maximum number of visible trees that will be represented as solid 3D meshes. Beyond this limit, trees will be replaced with billboards. ",753],["Wind Settings",753],["Property: Function: ",753],["Speed The speed of the wind as it blows grass. ",753],["Size The size of the \"ripples\" on grassy areas as the wind blows over them. ",753],["Bending The degree to which grass objects are bent over by the wind. ",753],["Grass Tint Overall color tint applied to grass objects. ",753],["Resolution",753],["Property: Function: ",753],["Terrain Width Size of the terrain object in its X axis (in world units). ",753],["Terrain Length Size of the terrain object in its Z axis (in world units). ",753],["Terrain Height Difference in Y coordinate between the lowest possible heightmap value and the highest (in world units). ",753],["Heightmap Resolution Pixel resolution of the terrain's heightmap (should be a power of two plus one, eg, 513 = 512 + 1). ",753],["Detail Resolution Resolution of the map that determines the separate patches of details/grass. Higher resolution gives smaller and more detailed patches. ",753],["Detail Resolution Per Patch Length/width of the square of patches renderered with a single draw call. ",753],["Control Texture Resolution Resolution of the \"splatmap\" that controls the blending of the different terrain textures. ",753],["Base Texture Resolution Resolution of the composite texture used on the terrain when viewed from a distance greater than the Basemap Distance (see above). ",753],["Heightmap Import/Export Buttons",753],["The Import Raw and Export Raw buttons allow you to set or save the terrain's heightmap to an image file in the RAW grayscale format. RAW format can be generated by third party terrain editing tools (such as Bryce) and can also be opened, edited and saved by Photoshop. This allows for sophisticated generation and editing of terrains outside Unity.",753],["Textures",754],["You can add texture images to the surface of a terrain to create coloration and fine detail. Since terrains are such large objects, it is standard practice to use a texture that repeats seamlessly and tile it over the surface (the repeat generally isn't noticeable from a character's viewpoint close to the ground). One texture will serve as the \"background\" image over the landscape but you can also paint areas of different textures to simulate different ground surfaces such as grass, desert and snow. The painted textures can be applied with variable transparency so you can have a gradual transition between grassy countryside and a sandy beach, for example.",754],["Enabling Textures",754],["The paintbrush button on the toolbar enables texture painting.",754],["Initially, the terrain will have no textures assigned for painting. If you click the Edit Textures button and select Add Texture from the menu, you will see a window where you can set a texture and its properties.",754],["Depending on the material type you set in Terrain Settings (link to the doc of Terrain Settings), the color channels of the main texture map may have different uses.",754],["Standard: RGB channels are the albedo color of the terrain surface, while alpha channel controls the smoothness. There is also a 'Metallic' slider which controls the overall metalness of the surface.",754],["Diffuse: RGB channels are the diffuse color. Alpha channel is not used.",754],["Specular: RGB channels are the diffuse color. Alpha channel is the gloss map.",754],["Custom: How the splat map is used depends on your custom shader, but usually you want the RGB channels to be the base color.",754],["Besides the main texture map, you can also specify a normal texture for all of the 3 built-in material types. The texture type of the normal texture used here must be 'Normal Map' (you can change the texture type of a texture asset in its import settings). Shader code that handles normal map will be turned on only when at least one normal texture is set for the terrain, so you don't need to pay the performance cost of normal map if you don't use them.",754],["The Size property (just below the texture boxes) lets you set the width and height over which the image will stretch on the terrain's surface. The Offset property determines how far from the terrain's anchor point the tiling will start; you can set it to zero to start the tiling right in the corner. Once you have set the texture and properties to your liking, click the Add button to make the texture available to the terrain.",754],["To make changes to an added terrain texture, select its thumbnail, click the 'Edit Textures' button and select 'Edit Texture...' from the menu. Or, you can simply double click on its thumbnail. To remove a terrain texture, select its thumbnail, click the 'Edit Textures' button and select 'Remove Texture' from the menu.",754],["Texture painting",754],["The first texture you add will be used as a \"background\" to cover the terrain. However, you can add as many textures as you like; the subsequent ones will be available for painting using the familiar brush tools. Below the textures in the Terrain inspector, you will see the usual Brush Size and Opacity options but also an additional option called Target Strength. This sets the maximum opacity value that the brush will build up even if it passes over the same point repeatedly. This can be a useful way to add subtle patches of color variation within a single terrain type to break the monotony of a large, flat area with the same texture tile repeating over and over.",754],["Trees",755],["Unity terrains can be furnished with trees. Patches of trees can be painted onto a terrain in much the same way that heightmaps and textures are painted but the trees are solid 3D objects that grow from the surface. Unity uses optimisations (eg, billboarding for distant trees) to maintain good rendering performance, so you can have dense forests with thousands of trees and still keep an acceptable framerate.",755],["Enabling Trees",755],["The tree button on the toolbar enables tree painting.",755],["Initially, the terrain will have no trees available but if you click the Edit Trees button and select Add Tree you will see a window to select a tree asset from your project.",755],["Unity comes with several sample SpeedTree tree objects in the Standard Assets packages for prototyping purposes Assets > Import Package > Terrain Assets) but you can also create suitable objects with SpeedTree Modeler app, Unity Tree Creator tools or other 3D modelling apps.",755],["If the selected tree object is created by the Tree Creator, the window will show Bend factor for adjusting the wind responsiveness. See the section on Making trees bend in the wind below.",755],["Painting Trees",755],["With a tree selected, you can paint onto the landscape in the same way you paint textures or heightmaps. You can remove trees from an area by holding the shift key while you paint and remove just the currently selected tree type by holding down the control key. The familiar Brush Size option is available for tree painting but the Opacity property is replaced by Tree Density, which controls the average number of trees painted into a given unit of area.",755],["There is a ranged slider for you to control the tree's minimal height and maximal height. If you disable Random, you can specify a value for all tree's height. By default a tree's width is locked to height so that trees are always scaled uniformly. However you can disable Lock Width to Height option and specify the width separately.",755],["There is also a control for Color Variation and Random Tree Rotation. The variation options help to create the impression of a random, natural-looking forest rather than an artificial plantation of identical trees.",755],["The Mass Place Trees button is a very useful way to create an overall covering of trees without painting over the whole landscape. Following a mass placement, you can still use painting to add or remove trees to create denser or sparser areas.",755],["SpeedTree/LOD Trees",755],["From Unity 5, you can use SpeedTree Modeler from IDV, Inc. to create trees with advanced visual effects such as smooth LOD transition, fast billboarding and natural wind animation. Please refer to their site for detailed information. You can also freely import SpeedTree assets into your project folder from asset store packages or other third party sources.",755],["SpeedTree assets (.SPM files saved by Unity version of SpeedTree Modeler) are recognized and imported by Unity 5 just like other assets. Make sure the textures are reachable",755],["in the project folder and materials for each LOD will be generated automatically. There are import settings when you select .SPM assets for you to tweak the generated game object and materials. Materials will not be generated again on reimporting, unless you hit the Generate Materials or Apply &amp; Generate Materials button, therefore any customisations to the materials can be preserved.",755],["SpeedTree importer in the end generates a prefab with LODGroup component configured. The prefab can both be instantiated in a scene as a common prefab instance or be selected as a tree prototype on the terrain and paint massively. Additionally, terrain accepts any game object with an LODGroup component as a tree prototype, and put no limitation on the mesh size or number of materials being used (on contrast to the Tree Creator trees, described below). But be aware that SpeedTree trees usually use 3-4 different materials, results in a number of draw-calls being issued every frame. So try avoid heavy use of LOD trees on platforms that are sensible to draw-call numbers.",755],["Tree Creator trees",755],["Unity has its own Tree creator that you can use to produce new tree assets but you can also use a standard 3D modelling app for the task. The tree mesh should have fewer than 2000 triangles (for performance reasons) and the anchor point should be right at the base of the tree where it emerges from the ground. The mesh should always have exactly two materials, one for the tree body and the other for the leaves.",755],["Trees must use the Nature/Soft Occlusion Leaves and Nature/Soft Occlusion Bark shader. In order to use those shaders you also have to place the tree in a special folder that contains the name “Ambient-Occlusion”. When you place a model in such a folder and reimport it, Unity will calculate soft ambient occlusion in a way that is specifically designed for trees. The “Nature/Soft Occlusion” shaders rely on the folder naming convention and the tree won't render correctly if you don't follow it.",755],["When you save a tree asset from the modelling app, you will need to click the Refresh button (shown in the inspector when the tree painting tool is selected) in order to see the updated trees on your terrain.",755],["Using Colliders with Trees",755],["You can add a Capsule Collider to a new tree asset by instantiating it in the scene, adding the collider (menu: Component > Physics > Capsule Collider) and creating a new prefab for the modified tree object. When you add the tree to the terrain for painting, make sure you select the prefab with the collider rather than the original object. You should also enable Create Tree Colliders in the terrain's Terrain Collider component inspector.",755],["Making trees bend in the wind",755],["The first thing you will need to do is create a wind zone. You can do this by selecting from the menu: Game Object &gt; Create General &gt; Wind Zone.",755],["At this point, you will need to make sure that your trees are set to bend. Select your tree types, then select Edit Trees... -> Edit tree. Setting the bend value to 1 will cause the trees to adjust if you have not already done this.",755],["You may notice that your trees are moving about quite violently. To fix this, you can change your bend value, but it is probably easier to set the values on the \"Wind zone\" directly, keeping your tree bend value set to 1. To keep the trees from fluttering around too much, adjust the wind turbulence down to around 0.1 to 0.3 and everything will become much smoother. If you don't want the trees blowing all the way to one side, set the Wind Main value down to the same value as your turbulence.",755],["Creating and Editing Terrains",756],["You can add a terrain object to your scene by selecting GameObject &gt; 3D Object &gt; Terrain from the menu (this will also add a corresponding Terrain asset to the Project view). However, the landscape will initially be nothing more than a large, flat plane. However, if you look at the inspector when the terrain object is selected, you will see that it provides a number of tools you can use to create any landscape features you like.",756],["With the exception of the tree placement tool and the settings panel, all the tools on the toolbar provide a set of \"brushes\" and settings for brush size and opacity. It is no coincidence that these resemble the painting tools from an image editor because detail in the terrain is created precisely that way, by \"painting\" detail onto the landscape. If you select the leftmost tool on the bar (Raise/Lower Terrain) and move the mouse over the terrain in the scene view, you will see a cursor resembling a spotlight on the surface. When you click the mouse, you can paint gradual changes in height onto the landscape at the mouse's position. By selecting different options from the Brushes toolbar, you can paint with different shapes. The Brush Size and Opacity options vary the area of the brush and the strength of its effect respectively.",756],["The details of all of the tools will be given in subsequent sections. However, all of them are based around the concept of painting detail and with the exception of the tree placement tool, all have the same options for brushes, brush size and opacity. The tools can be used to set the height of the terrain and also to add coloration, plants and other objects.",756],["Terrain Keyboard Shortcuts",756],["You can use the following keyboard shortcuts in the terrain inspector:",756],["Pressing the keys from Q to Y with the shift key held down selects the corresponding terrain tool (eg, Shift-Q selects the Raise/Lower tool).",756],["Comma (,) and dot (.) cycle through the available brushes.",756],["Shift-comma (&lt;) and Shift-dot (&gt;) cycle through the available objects for trees, textures and details.",756],["Additionally, the standard F keystroke works slightly differently for terrains. Normally, it frames the selection around the whole object when the mouse is over the scene view. However, since terrains are typically very large, pressing F will focus the scene view on the area of terrain where the mouse/brush is currently hovering. This provides a very quick and intuitive way to jump to the area of terrain you want to edit. If you press F when the mouse is away from the terrain object, the standard framing behaviour will return.",756],["Wind Zones",757],["You can create the effect of wind on your terrain by adding one or more objects with Wind Zone components. Trees within a wind zone will bend in a realistic animated fashion and the wind itself will move in pulses to create natural patterns of movement among the tree.",757],["Using Wind Zones",757],["A wind zone object can be created directly (menu: GameObject &gt; Create General &gt; Wind Zone) or you can add the component to any suitable object already in the scene (menu: Component > Miscellaneous > Wind Zone). The inspector for the wind zone has a number of options to control its behaviour.",757],["The Mode can be set to Directional or Spherical. In Directional mode, the wind will affect the whole terrain at once while a Spherical wind blows outwards within a sphere defined by the Radius property. Directional winds are more useful for creating natural movement of the trees while spherical winds are more suitable for special effects like explosions.",757],["The Wind Main property determines the overall strength of the wind but this can be given a little random variation using Wind Turbulence. As mentioned above, the wind blows over the trees in pulses to create a more natural effect. The strength of the pulses and the time interval between them can be controlled using the Wind Pulse Magnitude and Wind Pulse Frequency properties.",757],["Particle Systems",757],["The main use of wind is to animate trees but it can also affect particles generated by a particle system using the External Forces module. See the reference page for Particle Systems for further details.",757],["Textual Scene File Format",758],["As well as the default binary format, Unity also provides a textual format for scene data. This can be useful when working with version control software, since textual files generated separately can be merged more easily than binary files. Also, the text data can be generated and parsed by tools, making it possible to create and analyze scenes automatically. The pages in this section provide some reference material for working with the format.",758],["See the Editor Settings page for how to enable this feature.",758],["Textures and Videos",759],["Normally, the mesh geometry of an object only gives a rough approximation of the shape while most of the fine detail is supplied by Textures. A texture is just a standard bitmap image that is applied over the mesh surface. You can think of a texture image as though it were printed on a rubber sheet that is stretched and pinned onto the mesh at appropriate positions. The positioning of the texture is done with the 3D modelling software that is used to create the mesh.",759],["Unity can import textures from most common image file formats.",759],["Textures are applied to objects using Materials. Materials use specialised graphics programs called Shaders to render a texture on the mesh surface. Shaders can implement lighting and colouring effects to simulate shiny or bumpy surfaces among many other things. They can also make use of two or more textures at a time, combining them for even greater flexibility.",759],["2D graphics",759],["In 2D games, the Sprites are implemented using textures applied to flat meshes that approximate the objects' shapes.",759],["An object in a 2D game may require a set of related graphic images to represent animation frames or different states of a character. Special techniques are available to allow these sets of images to be designed and rendered efficiently. See the manual page about the Sprite Editor for more information.",759],["Video",759],["Unity can use a video file in most places where it can use a static texture image. On a desktop platform, these Movie Textures can be used to play back video on objects in the scene, so you could have a TV screen within the game itself or use an abstract moving image to create \"chameleon\" effects on a object's surface. Mobile devices are limited to playing back a video full-screen, optionally with Play/Pause and other controls. See the Movie Textures reference page for further details about importing and using videos in Unity.",759],["Specialised Uses of Textures",759],["The most common use for a texture is to add detail to the surface of a scene object. However, images can have any number of uses within a game. Below, some of the more common alternative uses of images are discussed.",759],["GUI",759],["A game's graphic user interface (GUI) consists of graphics that are not used directly in the game scene but are there to allow the player to make choices and see information. For example, the score display and the options menu are typical examples of game GUI. These graphics are clearly very different from the kind used to detail a mesh surface but they are handled using standard Unity textures nevertheless. See the manual chapter on GUI Scripting Guide for further details about Unity's GUI system.",759],["Particles",759],["Meshes are ideal for representing solid objects but less suited for things like flames, smoke and sparkles left by a magic spell. This type of effect is handled much better by Particle Systems. A particle is a small 2D graphic representing a small portion of something that is basically fluid or gaseous, such as a smoke cloud. When many of these particles are created at once and set in motion, optionally with random variations, they can create a very convincing effect. For example, you might display an explosion by sending particles with a fire texture out at great speed from a central point. A waterfall could be simulated by accelerating water particles downward from a line high in the scene.",759],["Unity's particle systems have a wealth of options for creating all kinds of fluid effects. See the manual chapter on the subject for further information.",759],["Terrain Heightmaps",759],["Textures can even be used in cases where the image will never be viewed at all, at least not directly. In a greyscale image, each pixel value is simply a number corresponding to the shade of grey at that point in the image (this could be a value in the range 0..1 where zero is black and one is white, say). Although an image like this can be viewed, there is no reason why the numeric pixel values can't be used for other purposes as well, and this is precisely what is done with Terrain Heightmaps.",759],["A terrain is a mesh representing an area of ground where each point on the ground has a particular height from a baseline. The heightmap for a terrain stores the numeric height samples at regular intervals as greyscale values in an image where each pixel corresponds to a grid coordinate on the ground. The values are not shown in the scene as an image but are converted to coordinates that are used to generate the terrain mesh.",759],["Interestingly, even though a heightmap is not viewed directly as an image, there are still common image processing techniques that are useful when applied to the height data. For example, adding noise to a heightmap will create the impression of rocky terrain while blurring will smooth it out to produce a softer, rolling landscape.",759],["More information about terrains in Unity can be found in this section of the manual.",759],["The Component-Script Relationship",760],["When you create a script and attach it to a GameObject, the script appears in the GameObject's Inspector just like a Component. This is because scripts become Components when they are saved - a script is just a specific type of Component. In technical terms, a script compiles as a type of Component, and is treated like any other Component by the Unity engine. So basically, a script is a Component that you are creating yourself. You will define its members to be exposed in the Inspector, and it will execute whatever functionality you've written.",760],["Read more about creating and using scripts  the Scripting section of the manual.",760],["The GameObject-Component Relationship",761],["As described previously in GameObjects, a GameObject contains Components. We'll explore this relationship by discussing a GameObject and its most common Component -- the Transform Component. With any Unity Scene open, create a new GameObject (using Shift-Control-N on Windows or Shift-Command-N on Mac), select it and take a look at the Inspector.",761],["Notice that an empty GameObject still contains a Name, a Tag, and a Layer. Every GameObject also contains a Transform Component.",761],["The Transform Component",761],["It is impossible to create a GameObject in Unity without a Transform Component. The Transform Component is one of the most important Components, since all of the GameObject's Transform properties are enabled by its use of this Component. It defines the GameObject's position, rotation, and scale in the game world/Scene View. If a GameObject did not have a Transform Component, it would be nothing more than some information in the computer's memory. It effectively would not exist in the world.",761],["The Transform Component also enables a concept called Parenting, which is utilized through the Unity Editor and is a critical part of working with GameObjects. To learn more about the Transform Component and Parenting, read the Transform Component Reference page.",761],["Other Components",761],["The Transform Component is critical to all GameObjects, so each GameObject has one. But GameObjects can contain other Components as well.",761],["Looking at the Main Camera GameObject, you can see that it contains a different collection of Components. Specifically, a Camera Component, a GUILayer, a Flare Layer, and an Audio Listener. All of these Components provide additional functionality to the GameObject. Without them, there would be nothing rendering the graphics of the game for the person playing! Rigidbodies, Colliders, Particles, and Audio are all different Components (or combinations of Components) that can be added to any given GameObject.",761],["Time and Framerate Management",762],["The Update function allows you to monitor inputs and other events regularly from a script and take appropriate action. For example, you might move a character when the \"forward\" key is pressed. An important thing to remember when handling time-based actions like this is that the game's framerate is not constant and neither is the length of time between Update function calls.",762],["As an example of this, consider the task of moving an object forward gradually, one frame at a time. It might seem at first that you could just shift the object by a fixed distance each frame:",762],["//C# script example",762],["using UnityEngine;",762],["using System.Collections;",762],["public class ExampleScript : MonoBehaviour {",762],["public float distancePerFrame;",762],["void Update() {",762],["transform.Translate(0, 0, distancePerFrame);",762],["//JS script example",762],["var distancePerFrame: float;",762],["function Update() {",762],["transform.Translate(0, 0, distancePerFrame);",762],["However, given that the frame time is not constant, the object will appear to move at an irregular speed. If the frame time is 10 milliseconds then the object will step forward by distancePerFrame one hundred times per second. But if the frame time increases to 25 milliseconds (due to CPU load, say) then it will only step forward forty times a second and therefore cover less distance. The solution is to scale the size of the movement by the frame time which you can read from the Time.deltaTime property:",762],["//C# script example",762],["using UnityEngine;",762],["using System.Collections;",762],["public class ExampleScript : MonoBehaviour {",762],["public float distancePerSecond;",762],["void Update() {",762],["transform.Translate(0, 0, distancePerSecond * Time.deltaTime);",762],["//JS script example",762],["var distancePerSecond: float;",762],["function Update() {",762],["transform.Translate(0, 0, distancePerSecond * Time.deltaTime);",762],["Note that the movement is now given as distancePerSecond rather than distancePerFrame. As the framerate changes, the size of the movement step will change accordingly and so the object's speed will be constant.",762],["Fixed Timestep",762],["Unlike the main frame update, Unity's physics system does work to a fixed timestep, which is important for the accuracy and consistency of the simulation. At the start of the physics update, Unity sets an \"alarm\" by adding the fixed timestep value onto the time when the last physics update ended. The physics system will then perform calculations until the alarm goes off.",762],["You can change the size of the fixed timestep from the Time Manager and you can read it from a script using the Time.fixedDeltaTime property. Note that a lower value for the timestep will result in more frequent physics updates and more precise simulation but at the cost of greater CPU load. You probably won't need to change the default fixed timestep unless you are placing high demands on the physics engine.",762],["Maximum Allowed Timestep",762],["The fixed timestep keeps the physical simulation accurate in real time but it can cause problems in cases where the game makes heavy use of physics and the gameplay framerate has also become low (due to a large number of objects in play, say). The main frame update processing has to be \"squeezed\" in between the regular physics updates and if there is a lot of processing to do then several physics updates can take place during a single frame. Since the frame time, positions of objects and other properties are frozen at the start of the frame, the graphics can get out of sync with the more frequently updated physics.",762],["Naturally, there is only so much CPU power available but Unity has an option to let you effectively slow down physics time to let the frame processing catch up. The Maximum Allowed Timestep setting (in the Time Manager) puts a limit on the amount of time Unity will spend processing physics and FixedUpdate calls during a given frame update. If a frame update takes longer than Maximum Allowed Timestep to process, the physics engine will \"stop time\" and let the frame processing catch up. Once the frame update has finished, the physics will resume as though no time has passed since it was stopped. The result of this is that rigidbodies will not move perfectly in real time as they usually do but will be slowed slightly. However, the physics \"clock\" will still track them as though they were moving normally. The slowing of physics time is usually not noticeable and is an acceptable trade-off against gameplay performance.",762],["Time Scale",762],["For special effects, such as \"bullet-time\", it is sometimes useful to slow the passage of game time so that animations and script responses happen at a reduced rate. Furthermore, you may sometimes want to freeze game time completely, as when the game is paused. Unity has a Time Scale property that controls how fast game time proceeds relative to real time. If the scale is set to 1.0 then game time matches real time. A value of 2.0 makes time pass twice as quickly in Unity (ie, the action will be speeded-up) while a value of 0.5 will slow gameplay down to half speed. A value of zero will make time \"stop\" completely. Note that the time scale doesn't actually slow execution but simply changes the time step reported to the Update and FixedUpdate functions via Time.deltaTime and Time.fixedDeltaTime. The Update function is likely to be called more often than usual when game time is slowed down but the deltaTime step reported each frame will simply be reduced. Other script functions are not affected by the time scale so you can, for example, display a GUI with normal interaction when the game is paused.",762],["The Time Manager has a property to let you set the time scale globally but it is generally more useful to set the value from a script using the Time.timeScale property:",762],["//C# script example",762],["using UnityEngine;",762],["using System.Collections;",762],["public class ExampleScript : MonoBehaviour {",762],["void Pause() {",762],["Time.timeScale = 0;",762],["void Resume() {",762],["Time.timeScale = 1;",762],["//JS script example",762],["function Pause() {",762],["Time.timeScale = 0;",762],["function Resume() {",762],["Time.timeScale = 1;",762],["Capture Framerate",762],["A very special case of time management is where you want to record gameplay as a video. Since the task of saving screen images takes considerable time, the usual framerate of the game will be drastically reduced if you attempt to do this during normal gameplay. This will result in a video that doesn't reflect the true performance of the game.",762],["Fortunately, Unity provides a Capture Framerate property that lets you get around this problem. When the property's value is set to anything other than zero, game time will be slowed and the frame updates will be issued at precise regular intervals. The interval between frames is equal to 1 / Time.captureFramerate, so if the value is set to 5.0 then updates occur every fifth of a second. With the demands on framerate effectively reduced, you have time in the Update function to save screenshots or take other actions:",762],["//C# script example",762],["using UnityEngine;",762],["using System.Collections;",762],["public class ExampleScript : MonoBehaviour {",762],["// Capture frames as a screenshot sequence. Images are",762],["// stored as PNG files in a folder - these can be combined into",762],["// a movie using image utility software (eg, QuickTime Pro).",762],["// The folder to contain our screenshots.",762],["// If the folder exists we will append numbers to create an empty folder.",762],["string folder = \"ScreenshotFolder\";",762],["int frameRate = 25;",762],["void Start () {",762],["// Set the playback framerate (real time will not relate to game time after this).",762],["Time.captureFramerate = frameRate;",762],["// Create the folder",762],["System.IO.Directory.CreateDirectory(folder);",762],["void Update () {",762],["// Append filename to folder name (format is '0005 shot.png\"')",762],["string name = string.Format(\"{0}/{1:D04} shot.png\", folder, Time.frameCount );",762],["// Capture the screenshot to the specified file.",762],["Application.CaptureScreenshot(name);",762],["//JS script example",762],["// Capture frames as a screenshot sequence. Images are",762],["// stored as PNG files in a folder - these can be combined into",762],["// a movie using image utility software (eg, QuickTime Pro).",762],["// The folder to contain our screenshots.",762],["// If the folder exists we will append numbers to create an empty folder.",762],["var folder = \"ScreenshotFolder\";",762],["var frameRate = 25;",762],["function Start () {",762],["// Set the playback framerate (real time will not relate to game time after this).",762],["Time.captureFramerate = frameRate;",762],["// Create the folder",762],["System.IO.Directory.CreateDirectory(folder);",762],["function Update () {",762],["// Append filename to folder name (format is '0005 shot.png\"')",762],["var name = String.Format(\"{0}/{1:D04} shot.png\", folder, Time.frameCount );",762],["// Capture the screenshot to the specified file.",762],["Application.CaptureScreenshot(name);",762],["Although the video recorded using this technique typically looks very good, the game can be hard to play when slowed-down drastically. You may need to experiment with the value of Time.captureFramerate to allow ample recording time without unduly complicating the task of the test player.",762],["Toolbar",763],["The Toolbar consists of five basic controls. Each relate to different parts of the Editor.",763],[" Transform Tools -- used with the Scene View",763],[" Transform Gizmo Toggles -- affect the Scene View display",763],[" Play/Pause/Step Buttons -- used with the Game View",763],[" Layers Drop-down -- controls which objects are displayed in Scene View",763],[" Layout Drop-down -- controls arrangement of all Views",763],["Tracker Modules",764],["Tracker Modules are essentially just packages of audio samples that have been modeled, arranged and sequenced programatically. The concept was introduced in the 1980's (mainly in conjunction with the Amiga computer) and has been popular since the early days of game development and demo culture.",764],["Tracker Module files are similar to MIDI files in many ways. The tracks are scores that contain information about when to play the instruments, and at what pitch and volume and from this, the melody and rhythm of the original tune can be recreated. However, MIDI has a disadvantage in that the sounds are dependent on the sound bank available in the audio hardware, so MIDI music can sound different on different computers. In contrast, tracker modules include high quality PCM samples that ensure a similar experience regardless of the audio hardware in use.",764],["Supported formats",764],["Unity supports the four most common module file formats, namely Impulse Tracker (.it), Scream Tracker (.s3m), Extended Module File Format (.xm), and the original Module File Format (.mod).",764],["Benefits of Using Tracker Modules",764],["Tracker module files differ from mainstream PCM formats (.aif, .wav, .mp3, and .ogg) in that they can be very small without a corresponding loss of sound quality. A single sound sample can be modified in pitch and volume (and can have other effects applied), so it essentially acts as an \"instrument\" which can play a tune without the overhead of recording the whole tune as a sample. As a result, tracker modules lend themselves to games, where music is required but where a large file download would be a problem.",764],["Third Party Tools and Further References",764],["Currently, the most popular tools to create and edit Tracker Modules are MilkyTracker for OSX and OpenMPT for Windows. For more information and discussion, please see the blog post .mod in Unity from June 2010.",764],["Transforms",765],["The Transform is used to store a GameObject's position, rotation, scale and parenting state and is thus very important. A GameObject will always have a Transform component attached - it is not possible to remove a Transform or to create a GameObject without one.",765],["Editing Transforms",765],["Transforms are manipulated in 3D space in the X, Y, and Z axes or in 2D space in just X and Y. In Unity, these axes are represented by the colors red, green, and blue respectively.",765],["A Transform can be edited in the Scene View or by changing its properties in the Inspector. In the scene, you can modify Transforms using the Move, Rotate and Scale tools. These tools are located in the upper left-hand corner of the Unity Editor.",765],["The tools can be used on any object in the scene. When you click on an object, you will see the tool gizmo appear within it. The appearance of the gizmo depends on which tool is selected.",765],["When you click and drag on one of the three gizmo axes, you will notice that its color changes to yellow. As you drag the mouse, you will see the object translate, rotate, or scale along the selected axis. When you release the mouse button, the axis remains selected. If you subsequently drag with the middle mouse button, the axis last selected will be used regardless of the mouse position.",765],["There is also an additional option in Translate mode to lock movement to a particular plane (ie, allow dragging in two of the axes while keeping the third unchanged). The three small coloured squares around the center of the Translate gizmo activate the lock for each plane; the colors correspond to the axis that will be locked when the square is clicked (eg, blue locks the Z axis).",765],["Parenting",765],["Parenting is one of the most important concepts to understand when using Unity. When a GameObject is a Parent of another GameObject, the Child GameObject will move, rotate, and scale exactly as its Parent does. You can think of parenting as being like the relationship between your arms and your body; whenever your body moves, your arms also move along with it. Child objects can also have children of their own and so on. So your hands could be regarded as \"children\" of your arms and then each hand has several fingers, etc. Any object can have multiple children, but only one parent. These multiple levels of parent-child relationships form a Transform hierarchy. The object at the very top of a hierarchy (ie, the only object in the hierarchy that doesn't have a parent) is known as the root.",765],["You can create a Parent by dragging any GameObject in the Hierarchy View onto another. This will create a Parent-Child relationship between the two GameObjects.",765],["Note that the Transform values in the Inspector for any child GameObject are displayed relative to the Parent's Transform values. These values are referred to as local coordinates. Returning to the analogy of body and arms, the position of your body may move as you walk but your arms will still be attached at the same relative position. For scene construction, it is usually sufficient to work with local coordinates for child objects but in gameplay it is often useful to find their exact position in world space or global coordinates. The scripting API for the Transform component has separate properties for local and global position, rotation and scale and also allows you to convert any point between local and global coordinates.",765],["Performance Issues and Limitations with Non-Uniform Scaling",765],["Non-uniform scaling is when the Scale in a Transform has different values for x, y, and z; for example (2, 4, 2). In contrast, uniform scaling has the same value for x, y, and z; for example (3, 3, 3). Non-uniform scaling can be useful in a few specific cases but you should usually avoid it since it slows down graphic rendering. Also, it introduces a few oddities that don't occur with uniform scaling:-",765],["Certain components do not fully support non-uniform scaling. For example, some components have a circular or spherical element defined by a radius property, among them Sphere Collider, Capsule Collider, Light and Audio Source. In cases like this the circular shape will not become elliptical under non-uniform scaling as you would expect and will simply remain circular.",765],["When a child object has a non-uniformly scaled parent and is rotated relative to that parent, it may appear skewed or \"sheared\". There are components that support simple non-uniform scaling but don't work correctly when skewed like this. For example, a skewed Box Collider will not match the shape of the rendered mesh accurately.",765],["For performance reasons, a child object of a non-uniformly scaled parent will not have its scale automatically updated when it rotates. As a result, the child's shape may appear to change abruptly when the scale eventually is updated, say if the child object is detached from the parent.",765],["Importance of Scale",765],["The scale of the Transform determines the difference between the size of a mesh in your modeling application and the size of that mesh in Unity. The mesh's size in Unity (and therefore the Transform's scale) is very important, especially during physics simulation. By default, the physics engine assumes that one unit in world space corresponds to one metre. If an object is very large, it can appear to fall in \"slow motion\"; the simulation is actually correct since effectively, you are watching a very large object falling a great distance.",765],["There are three factors that can affect the scale of your object:",765],["The size of your mesh in your 3D modeling application.",765],["The Mesh Scale Factor setting in the object's Import Settings.",765],["The Scale values of your Transform Component.",765],["Ideally, you should not adjust the Scale of your object in the Transform Component. The best option is to create your models at real-life scale so you won't have to change your Transform's scale. The next best option is to adjust the scale at which your mesh is imported in the Import Settings for your individual mesh. Certain optimizations occur based on the import size, and instantiating an object that has an adjusted scale value can decrease performance. For more information, see the section about optimizing scale on the Rigidbody component reference page.",765],["Tips for Working with Transforms",765],["When parenting Transforms, it is useful to set the parent's location to &lt;0,0,0&gt; before adding the child. This means that the local coordinates for the child will be the same as global coordinates making it easier to be sure you have the child in the right position.",765],["Particle Systems are not affected by the Transform's Scale. In order to scale a Particle System, you need to modify the properties in the System's Particle Emitter, Animator and Renderer.",765],["If you are using Rigidbodies for physics simulation then be sure to read about the Scale property on the Rigidbody component reference page.",765],["You can change the colors of the Transform axes (and other UI elements) from the preferences (Menu: Unity &gt; Preferences and then select the Colors &amp; keys panel).",765],["Changing the Scale affects the position of child transforms. For example scaling the parent to (0,0,0) will position all children at (0,0,0) relative to the parent.",765],["Branch Group Properties",766],["Branch groups node is responsible for generating branches and fronds. Its properties appear when you have selected a branch, frond or branch + frond node.",766],["Distribution",766],["Adjusts the count and placement of branches in the group. Use the curves to fine tune position, rotation and scale. The curves are relative to the parent branch or to the area spread in case of a trunk.",766],["",766],["Group Seed The seed for this group of branches. Modify to vary procedural generation. ",766],["Frequency Adjusts the number of branches created for each parent branch. ",766],["Distribution The way the branches are distributed along their parent. ",766],["Twirl Twirl around the parent branch. ",766],["Whorled Step Defines how many nodes are in each whorled step when using Whorled distribution. For real plants this is normally a Fibonacci number. ",766],["Growth Scale Defines the scale of nodes along the parent node. Use the curve to adjust and the slider to fade the effect in and out. ",766],["Growth Angle Defines the initial angle of growth relative to the parent. Use the curve to adjust and the slider to fade the effect in and out. ",766],["Geometry",766],["Select what type of geometry is generated for this branch group and which materials are applied. LOD Multiplier allows you to adjust the quality of this group relative to tree's LOD Quality.",766],["",766],["LOD Multiplier Adjusts the quality of this group relative to tree's LOD Quality, so that it is of either higher or lower quality than the rest of the tree. ",766],["Geometry Mode Type of geometry for this branch group: Branch Only, Branch + Fronds, Fronds Only. ",766],["Branch Material The primary material for the branches. ",766],["Break Material Material for capping broken branches. ",766],["Frond Material Material for the fronds. ",766],["Shape",766],["Adjusts the shape and growth of the branches. Use the curves to fine tune the shape, all curves are relative to the branch itself.",766],["",766],["Length Adjusts the length of the branches. ",766],["Relative Length Determines whether the radius of a branch is affected by its length. ",766],["Radius Adjusts the radius of the branches, use the curve to fine-tune the radius along the length of the branches. ",766],["Cap Smoothing Defines the roundness of the cap/tip of the branches. Useful for cacti. ",766],["Growth Adjusts the growth of the branches. ",766],["Crinkliness Adjusts how crinkly/crooked the branches are, use the curve to fine-tune. ",766],["Seek Sun Use the curve to adjust how the branches are bent upwards/downwards and the slider to change the scale. ",766],["Surface Noise Adjusts the surface noise of the branches. ",766],["Noise Overall noise factor, use the curve to fine-tune. ",766],["Noise Scale U Scale of the noise around the branch, lower values will give a more wobbly look, while higher values gives a more stochastic look. ",766],["Noise Scale V Scale of the noise along the branch, lower values will give a more wobbly look, while higher values gives a more stochastic look. ",766],["Flare Defines a flare for the trunk. ",766],["Flare Radius The radius of the flares, this is added to the main radius, so a zero value means no flares. ",766],["Flare Height Defines how far up the trunk the flares start. ",766],["Flare Noise Defines the noise of the flares, lower values will give a more wobbly look, while higher values gives a more stochastic look. ",766],["Breaking Controls the breaking of branches. ",766],["Break Chance Chance of a branch breaking, i.e. 0 = no branches are broken, 0.5 = half of the branches are broken, 1.0 = all the branches are broken. ",766],["Break Location This range defines where the branches will be broken. Relative to the length of the branch. ",766],["These properties are for child branches only, not trunks.",766],["Welding _ _Defines the welding of branches onto their parent branch. Only valid for secondary branches. ",766],["Weld Length Defines how far up the branch the weld spread starts. ",766],["Spread Top Weld's spread factor on the top-side of the branch, relative to it's parent branch. Zero means no spread. ",766],["Spread Bottom Weld's spread factor on the bottom-side of the branch, relative to it's parent branch. Zero means no spread. ",766],["Fronds",766],["Here you can adjust the number of fronds and their properties. This tab is only available if you have Frond geometry enabled in the Geometry tab.",766],["",766],["Frond Count Defines the number of fronds per branch. Fronds are always evenly spaced around the branch. ",766],["Frond Width The width of the fronds, use the curve to adjust the specific shape along the length of the branch. ",766],["Frond Range Defines the starting and ending point of the fronds. ",766],["Frond Rotation Defines rotation around the parent branch. ",766],["Frond Crease Adjust to crease / fold the fronds. ",766],["Wind",766],["Adjusts the parameters used for animating this group of branches. The wind zones are only active in Play Mode.",766],["",766],["Main Wind Primary wind effect. This creates a soft swaying motion and is typically the only parameter needed for primary branches. ",766],["Edge Turbulence Turbulence along the edge of fronds. Useful for ferns, palms, etc. ",766],["Create Wind Zone Creates a Wind Zone. ",766],["Building Your First Tree",767],["We'll now walk you through the creation of your first Tree Creator Tree in Unity. First, make sure you have included the tree creator package in your project. If you don't, select Assets &gt; Import Package..., navigate to your Unity installation folder, and open the folder named Standard Packages. Select the Tree Creator.unityPackage package to get the needed assets into your project.",767],["Adding a new Tree",767],["To create a new Tree asset, select GameObject &gt; Create General &gt; Tree. You'll see a new Tree asset is created in your Project View, and instantiated in the currently open Scene. This new tree is very basic with only a single branch, so let's add some character to it.",767],["Adding Branches",767],["Select the tree to view the Tree Creator in the Inspector. This interface provides all the tools for shaping and sculpting your trees. You will see the Tree Hierarchy with two nodes present: the Tree Root node and a single Branch Group node, which we'll call the trunk of the tree.",767],["In the Tree Hierarchy, select the Branch Group, which acts as the trunk of the tree. Click on the Add Branch Group button and you'll see a new Branch Group appear connected to the Main Branch. Now you can play with the settings in the Branch Group Properties to see alterations of the branches attached to the tree trunk.",767],["After creating the branches that are attached to the trunk, we can now add smaller twigs to the newly created branches by attaching another Branch Group node. Select the secondary Branch Group and click the Add Branch Group button again. Tweak the values of this group to create more branches that are attached to the secondary branches.",767],["Now the tree's branch structure is in place. Our game doesn't take place in the winter time, so we should also add some Leaves to the different branches, right?",767],["Adding Leaves",767],["We decorate our tree with leaves by adding Leaf Groups, which basically work the same as the Branch groups we've already used. Select your secondary Branch Group node and then click the Add Leaf Group button. If you're really hardcore, you can add another leaf group to the tiniest branches on the tree as well.",767],["Right now the leaves are rendered as opaque planes. This is because we want to adjust the leaves' values (size, position, rotation, etc.) before we add a material to them. Tweak the Leaf values until you find some settings you like.",767],["Adding Materials",767],["In order to make our tree realistic looking, we need to apply Materials for the branches and the leaves. Create a new Material in your project using Assets &gt; Create &gt; Material. Rename it to \"My Tree Bark\", and choose Nature &gt; Tree Creator Bark from the Shader drop-down. From here you can assign the Textures provided in the Tree Creator Package to the Base, Normalmap, and Gloss properties of the Bark Material. We recommend using the texture \"BigTree_bark_diffuse\" for the Base and Gloss properties, and \"BigTree_bark_normal\" for the Normalmap property.",767],["Now we'll follow the same steps for creating a Leaf Material. Create a new Material and assign the shader as Nature &gt; Tree Creator Leaves. Assign the texture slots with the leaf textures from the Tree Creator Package.",767],["When both Materials are created, we'll assign them to the different Group Nodes of the Tree. Select your Tree and click any Branch or Leaf node, then expand the Geometry section of the Branch Group Properties. You will see a Material assignment slot for the type of node you've selected. Assign the relevant Material you created and view the results.",767],["To finish off the tree, assign your Materials to all the Branch and Leaf Group nodes in the Tree. Now you're ready to put your first tree into a game!",767],["Hints.",767],["Creating trees is a trial and error process.",767],["Don't create too many leaves/branches as this can affect the performance of your game.",767],["Check the alpha maps guide for creating custom leaves.",767],["Leaf Group Properties",768],["Leaf groups generate leaf geometry. Either from primitives or from user created meshes.",768],["Distribution",768],["Adjusts the count and placement of leaves in the group. Use the curves to fine tune position, rotation and scale. The curves are relative to the parent branch.",768],["",768],["Group Seed The seed for this group of leaves. Modify to vary procedural generation. ",768],["Frequency Adjusts the number of leaves created for each parent branch. ",768],["Distribution Select the way the leaves are distributed along their parent. ",768],["Twirl Twirl around the parent branch. ",768],["Whorled Step Defines how many nodes are in each whorled step when using Whorled distribution. For real plants this is normally a Fibonacci number. ",768],["Growth Scale Defines the scale of nodes along the parent node. Use the curve to adjust and the slider to fade the effect in and out. ",768],["Growth Angle Defines the initial angle of growth relative to the parent. Use the curve to adjust and the slider to fade the effect in and out. ",768],["Geometry",768],["Select what type of geometry is generated for this leaf group and which materials are applied. If you use a custom mesh, its materials will be used.",768],["",768],["Geometry Mode The type of geometry created. You can use a custom mesh, by selecting the Mesh option, ideal for flowers, fruits, etc. ",768],["Material Material used for the leaves. ",768],["Mesh Mesh used for the leaves. ",768],["Shape",768],["Adjusts the shape and growth of the leaves.",768],["",768],["Size Adjusts the size of the leaves, use the range to adjust the minimum and the maximum size. ",768],["Perpendicular Align Adjusts whether the leaves are aligned perpendicular to the parent branch. ",768],["Horizontal Align Adjusts whether the leaves are aligned horizontally. ",768],["Animation",768],["Adjusts the parameters used for animating this group of leaves. Wind zones are only active in Play Mode. If you select too high values for Main Wind and Main Turbulence the leaves may float away from the branches.",768],["",768],["Main Wind Primary wind effect. Usually this should be kept as a low value to avoid leaves floating away from the parent branch. ",768],["Main Turbulence Secondary turbulence effect. For leaves this should usually be kept as a low value. ",768],["Edge Turbulence Defines how much wind turbulence occurs along the edges of the leaves. ",768],["Tree Creator Basics",769],["With the Tree Creator package imported, you can select GameObject &gt; Create General &gt; Tree to add a new tree to the scene (this will also create a new Tree asset in the Project view). The tree this produces is initially little more than a single stalk with no leaves or branches. However, you will notice in the inspector that the object has a Tree component attached, and this will allow you to design the tree to your liking.",769],["At the top of the Tree component inspector is the tree structure editor where the basic arrangement of branches and leaves is specified.",769],["It is important to understand the concept of tree levels when working with the editor. The trunk has branches which, in turn, have sub-branches; this branching process continues until the terminal twig are produced. The trunk is regarded as the first level of the tree, and then any branches growing directly from the trunk comprise the second level. Any branches that grow from second level branches together form the third level, and so on.",769],["This notion of levels is reflected in the tree editor. Consider the following tree structure, for example:-",769],["The icons are connected by lines to show the branching levels of the tree. The icon right at the bottom (with the tree picture) denotes the \"root\" of the tree. When this icon is selected, the properties in the inspector panel below are the ones that apply to the tree as a whole. From this root extend the first and second levels of branching. The icons show several pieces of information:-",769],["The main picture shows which kind of element it is. The number in the top-right corner is the number of branches that exist at that level of the tree, as set by the Frequency property in the inspector. With a given icon selected, changing the Frequency value will change the number of branches at that level. The eye image just below the number denotes the visibility of the branches in the scene view; you click the eye to toggle visibility on or off.",769],["The arrangement of branch groups can be edited using the controls at the bottom-right of the tree editor:-",769],["Going from left to right, the first tool adds leaf groups to the tree. Leaves are arranged in levels as are branches but unlike branches, leaves cannot further subdivide into more levels. The second tool adds a new branch group at the current level (ie, it creates a new \"child\" for the selected branch icon). The third tool duplicates whichever group is selected while the fourth deletes a group from the tree. It is possible to have several groups at each level of a tree as in the following example:-",769],["This tree has a main trunk from which two different branch groups grow. The first has its own sub-groups of branches and leaves, while the second just has bare branches. The separate groups at a given level can each have their properties set differently in the inspector so you could, say, have a large number of short twigs sprouting from the trunk along with a smaller number of main branches.",769],["Hand Editing Branches and Leaves",769],["When a branch is selected in the tree structure view, it will also be highlighted in the scene view, as with this \"tree\" (which is just a bare trunk for now).",769],["The tree's single branch is shown with a number of boxes overlaid on the view. The boxes represent control points along the length of the branch (ie, the center line of the branch passes through all the points but is also smoothly curved between them). You can click and drag any of the boxes to move the control points and thus change the shape of the branch.",769],["Moving control points is actually just the first of three options available on the hand editing toolbar.",769],["The second tool allows you to bend the branch by rotating it at a given control point. The third tool allows you to start with the mouse at a given control point and from there on draw the branch freehand. The branching is still controlled from the structure view - only the shapes of branches can be redrawn. If a leaf group is selected in the structure view then a corresponding toolbar gives you options to move or rotate leaves around their parent branch.",769],["Note that some properties in the tree creator's inspector are related to procedural generation of trees (ie, the computer generates the shape itself randomly) and these will be disabled after you have hand edited the tree. There is a button which will restore a tree to procedural status but this will undo any edits you have made by hand.",769],["Trouble Shooting",770],["This section addresses common problems that can arise when using Unity. Each platform is dealt with separately below.",770],["Platform Trouble Shooting",770],["Geforce 7300GT on OSX 10.6.4",770],["Deferred rendering is disabled because materials are not displayed correctly for Geforce 7300GT on OX 10.6.4; This happens because of buggy video drivers.",770],["On Windows x64, Unity crashes when my script throws a NullReferenceException",770],["Please apply Windows Hotfix #976038.",770],["Script Editing",770],["Is there a way to get rid of the welcome page in MonoDevelop?",770],["Yes. In the MonoDevelop preferences, go to the Visual Style section, and uncheck \"Load welcome page on startup\".",770],["Why does my script open in MonoDevelop when I have selected Visual Studio as my script editor?",770],["This happens when VS reports that it failed to open your script. The most common cause for this is an external plugin (e.g. Resharper) popping up a dialog at startup, requesting input from the user - this will cause VS to report that it failed to open.",770],["Graphics",770],["Slow framerate and/or visual artifacts.",770],["This may occur if your video card drivers are not up to date. Make sure you have the latest official drivers from your card vendor.",770],["Shadows",770],["Shadows also require certain graphics hardware support. See Light Performance page for details.",770],["Check if shadows are not completely disabled in Quality Settings.",770],["Shadows on Android and iOS have these limitations: soft shadows are not available and in forward rendering rendering path only a single directional light can cast shadows. There is no limit to the number of lights casting shadows in the deferred rendering path.",770],["Some of my objects do not cast or receive shadows",770],["An object's Renderer must have Receive Shadows enabled for shadows to be rendered onto it. Also, an object must have Cast Shadows enabled in order to cast shadows on other objects (both are on by default).",770],["Only opaque objects cast and receive shadows. This means that objects using the built-in Transparent or Particle shaders will not cast shadows. In most cases it is possible to use Transparent Cutout shaders for objects like fences, vegetation, etc. If you use custom written Shaders, they have to be pixel-lit and use the Geometry render queue. Objects using VertexLit shaders do not receive shadows but are able to cast them.",770],["Only Pixel lights cast shadows. If you want to make sure that a light always casts shadows no matter how many other lights are in the scene, then you can set it to Force Pixel render mode (see the Light reference page).",770],["Troubleshooting Android development",771],["\"No Platforms Found\" error:",771],["Uninstall the current Android SDK and make sure that you don't have more than one copy of it.",771],["Update Java with a stable version. Bear in mind the latest version shouldn't have conflicts, but users have experienced problems in the past.",771],["Download a fresh copy of the latest ADT Bundle and install it following the instructions. This should configure the development tools correctly: http://developer.android.com/sdk/index.html",771],["Configure Unity with the installed Android SDK.",771],["Unity fails to install your application to your device",771],["Verify that your computer can actually see and communicate with the device. See the Publishing Builds page for further details.",771],["Check the error message in the Unity console. This will often help diagnose the problem.",771],["If you get an error saying \"Unable to install APK, protocol failure\" during a build then this indicates that the device is connected to a low-power USB port (perhaps a port on a keyboard or other peripheral). If this happens, try connecting the device to a USB port on the computer itself.",771],["Your application crashes immediately after launch.",771],["Ensure that you are not trying to use NativeActivity with devices that do not support it.",771],["Try removing any native plugins you have.",771],["Try disabling stripping.",771],["Use adb logcat to get the crash report from your device.",771],["Building DEX Failed",771],["This is an error which will produce a message similar to the following:-",771],["Building DEX Failed!",771],["G:\\Unity\\JavaPluginSample\\Temp/StagingArea> java -Xmx1024M",771],["-Djava.ext.dirs=\"G:/AndroidSDK/android-sdk_r09-windows\\platform-tools/lib/\"",771],["-jar \"G:/AndroidSDK/android-sdk_r09-windows\\platform-tools/lib/dx.jar\"",771],["--dex --verbose --output=bin/classes.dex bin/classes.jar plugins",771],["Error occurred during initialization of VM",771],["Could not reserve enough space for object heap",771],["Could not create the Java virtual machine.",771],["This is usually caused by having the wrong version of Java installed on your machine. Updating your Java installation to the latest version will generally solve this issue.",771],["The game crashes after a couple of seconds when playing video",771],["Make sure Settings-&gt;Developer Options-&gt;Don't keep activities isn't enabled on the phone. The video player is its own activity and therefore the regular game activity will be destroyed if the video player is activated.",771],["My game quits when I press the sleep button",771],["Change the activity tag in the AndroidManifest.xml to contain android:configChanges tag as described here.",771],["An example activity tag might look something like this:-",771],["",771],["android:label=\"@string/app_name\"",771],["android:configChanges=\"fontScale keyboard keyboardHidden locale mnc mcc navigation orientation screenLayout screenSize smallestScreenSize uiMode touchscreen\">",771],["",771],["",771],["",771],["",771],["",771],["Troubleshooting Editor",772],["The following sections explain how to troubleshoot and prevent problems with the Unity editor in different situations. In general, make sure your computer meets all the system requirements, it's up-to-date, and you have the required user permissions in your system. Also make backups regularly to protect your projects.",772],["Versions",772],["You can install different versions of the editor in different folders. However, make sure you backup your projects as these might be upgraded by a newer version, and you won't be able to open them in an older version of Unity. See the manual page on installing Unity for further information.",772],["Licenses of add-ons are valid only for the Unity versions that share the same major number, for example 3.x and 4.x. If you upgrade to a minor version of Unity, for example 4.0 to 4.1, the add-ons will be kept.",772],["Activation",772],["Internet Activation is the preferred method to generate your license of Unity. But if you are having problems follow these steps:",772],["Disconnect your computer from the network, otherwise you might get a \"tx_id invalid\" error.",772],["Select Manual Activation.",772],["Click on Save License Request.",772],["Choose a known save location, for example the Downloads folder.",772],["Reconnect to the network and open https://license.unity3d.com/",772],["In the file field click Browse, and select the license request file.",772],["Choose the required license for Unity and fill out the information requested.",772],["Click Download License and save the file.",772],["Go back to Unity and select Manual Activation if required.",772],["Click on Read License and then select the downloaded license file.",772],["If you still have problems with registering or logging in to your user account please contact support@unity3d.com.",772],["Failure to Start",772],["If Unity crashes when starting then firstly make sure that your computer meets the minimal system requirements. Also update to the latest graphic and sound drivers.",772],["If you get disk write errors, you should check your user account restrictions. When in MacOS, note the \"root user\" is not recommended and Unity hasn't been tested in this mode. Unity should always have write permissions for its folders, but if you are granting them manually check these folders:",772],["On Windows:",772],["Unity's installation folder",772],["%AllUsersProfile%\\Unity (typically C:\\ProgramData\\Unity)",772],["C:\\Documents and Settings\\&lt;user&gt;\\Local Settings\\Application Data\\Unity",772],["C:\\Users\\&lt;user&gt;\\AppData\\Local\\Unity",772],["MacOS:",772],["Package contents of Unity.app",772],["/Library/Application Support/Unity",772],["~/Library/Logs/Unity",772],["Some users have experienced difficulties when using hard disks formated with non-native partitions, and using certain software to translate data between storage devices.",772],["Fonts",772],["Corrupt fonts can crash Unity, you can find damaged files following these steps:",772],["On Windows:",772],["Open the fonts folder on your computer, located in the \"Windows\" folder.",772],["Select \"Details\" from the \"View\" menu.",772],["Check the \"Size\" column for fonts with a \"0\" size, which indicates a problematic file.",772],["Delete corrupt fonts and reinstall them.",772],["On MacOS:",772],["Launch your Font Book application.",772],["Select all the fonts.",772],["Open the \"File\" menu and choose \"Validate Fonts\" -> problematic fonts will be shown as invalid.",772],["Delete corrupt fonts and reinstall them.",772],["The system might have resources constrained, for example running in a virtual machine. Use the Task Manager to find processes consuming lots of memory.",772],["Corrupt Project or Installation",772],["Unity could try to open a project that is corrupt, this might include the default sample project. In such case rename or move the folder of the project. After Unity starts correctly you can restore the project's folder if wished.",772],["In the event of a corrupt installation, you may need to reinstall Unity - see the instructions below.",772],["In Windows, there could be problems like installation errors, registry corruption, conflicts, etc. For example, error 0xC0000005 means the program has attempted to access memory that it shouldn't. If you added new hardware or drivers recently, remove and replace the hardware to determine if it's causing the problem. Run diagnostics software and check information on trouble-shooting the operating system.",772],["Performance and Crashes",772],["If the editor runs slowly or crashes, particularly on builds, this might be caused by all of the available system resources being consumed. Close all other applications when you build the project. Clean up the system using its utilities, and consult the Task Manager (Windows) or Activity Monitor (MacOS) to find out if there are processes using lots of resources, for example memory. Sometimes virus protection software can slow down or even block the file system with its scanning process.",772],["Project Loss",772],["There are many factors that can destroy a project, you should constantly backup your projects to prevent unfortunate accidents. When in MacOS, activate the TimeMachine using an external hard disk reserved for this sole purpose. After a loss you can try any of the file recovery utilities that exist, but sometimes this is irreversible.",772],["Re-installation",772],["Follow these steps to reinstall the editor:",772],["Uninstall Unity. When in MacOS, drag the Unity app to trash.",772],["Delete these files if present:",772],["Windows:",772],["%AllUsersProfile%\\Unity\\ (typically C:\\ProgramData\\Unity)",772],["MacOS:",772],["/Library/Application Support/Unity/",772],["Restart the computer.",772],["Download the latest version from our website, since your original install might be corrupt: http://unity3d.com/unity/download/archive",772],["Reinstall Unity.",772],["Troubleshooting on iOS devices",773],["There are some situations with iOS where your game can work perfectly in the Unity editor but then doesn't work or maybe doesn't even start on the actual device.",773],["The problems are often related to code or content quality. This section describes the most common scenarios.",773],["The game stops responding after a while. Xcode shows \"interrupted\" in the status bar.",773],["There are a number of reasons why this may happen. Typical causes include:",773],["Scripting errors such as using uninitialized variables, etc.",773],["Using 3rd party Thumb compiled native libraries. Such libraries trigger a known problem in the iOS SDK linker and might cause random crashes.",773],["Using generic types with value types as parameters (eg, List&lt;int&gt;, List&lt;SomeStruct&gt;, List&lt;SomeEnum&gt;, etc) for serializable script properties.",773],["Using reflection when managed code stripping is enabled.",773],["Errors in the native plugin interface (the managed code method signature does not match the native code function signature).",773],["Information from the XCode Debugger console can often help detect these problems (Xcode menu: View &gt; Debug Area &gt; Activate Console).",773],["The Xcode console shows \"Program received signal: &#8220;SIGBUS&#8221; or EXC_BAD_ACCESS error.",773],["This message typically appears on iOS devices when your application receives a NullReferenceException. There two ways to figure out where the fault happened:",773],["Managed stack traces",773],["Unity includes software-based handling of the NullReferenceException. The AOT compiler includes quick checks for null references each time a method or variable is accessed on an object. This feature affects script performance which is why it is enabled only for development builds (enable the \"script debugging\" option in build settings dialog).",773],["If everything was done right and the fault actually is occurring in .NET code then you won't see EXC_BAD_ACCESS anymore. Instead, the .NET exception text will be printed in the Xcode console (or else your code will just handle it in a \"catch\" statement). Typical output might be:",773],["Unhandled Exception: System.NullReferenceException: A null value was found where an object instance was required.",773],["at DayController+$handleTimeOfDay$121+$.MoveNext () [0x0035a] in DayController.js:122",773],["This indicates that the fault happened in the handleTimeOfDay method of the DayController class, which works as a coroutine. Also if it is script code then you will generally be told the exact line number (eg, \"DayController.js:122\"). The offending line might be something like the following:",773],["Instantiate(_imgwww.assetBundle.mainAsset);",773],["This might happen if, say, the script accesses an asset bundle without first checking that it was downloaded correctly.",773],["Native stack traces",773],["Native stack traces are a much more powerful tool for fault investigation but using them requires some expertise. Also, you generally can't continue after these native (hardware memory access) faults happen. To get a native stack trace, type bt all into the Xcode Debugger Console. Carefully inspect the printed stack traces - they may contain hints about where the error occurred. You might see something like:",773],["...",773],["Thread 1 (thread 11523):",773],["0 0x006267d0 in m_OptionsMenu_Start ()",773],["1 0x002e4160 in wrapper_runtime_invoke_object_runtime_invoke_void__this___object_intptr_intptr_intptr ()",773],["2 0x00a1dd64 in mono_jit_runtime_invoke (method=0x18b63bc, obj=0x5d10cb0, params=0x0, exc=0x2fffdd34) at /Users/mantasp/work/unity/unity-mono/External/Mono/mono/mono/mini/mini.c:4487",773],["3 0x0088481c in MonoBehaviour::InvokeMethodOrCoroutineChecked ()",773],["...",773],["First of all you should find the stack trace for \"Thread 1\", which is the main thread. The very first lines of the stack trace will point to the place where the error occurred. In this example, the trace indicates that the NullReferenceException happened inside the \"OptionsMenu\" script's \"Start\" method. Looking carefully at this method implementation would reveal the cause of the problem. Typically, NullReferenceExceptions happen inside the Start method when incorrect assumptions are made about initialization order.",773],["In some cases only a partial stack trace is seen on the Debugger Console:",773],["Thread 1 (thread 11523):",773],["0 0x0062564c in start ()",773],["This indicates that native symbols were stripped during the Release build of the application. The full stack trace can be obtained with the following procedure:",773],["Remove application from device.",773],["Clean all targets.",773],["Build and run.",773],["Get stack traces again as described above.",773],["EXC_BAD_ACCESS starts occurring when an external library is linked to the Unity iOS application.",773],["This usually happens when an external library is compiled with the ARM Thumb instruction set. Currently such libraries are not compatible with Unity. The problem can be solved easily by recompiling the library without Thumb instructions. You can do this for the library's Xcode project with the following steps:",773],["in Xcode, select \"View\" &gt; \"Navigators\" &gt; \"Show Project Navigator\" from the menu",773],["select the \"Unity-iPhone\" project, activate \"Build Settings\" tab",773],["in the search field enter : \"Other C Flags\"",773],["add -mno-thumb flag there and rebuild the library.",773],["If the library source is not available you should ask the supplier for a non-thumb version of the library.",773],["The Xcode console shows \"WARNING -&gt; applicationDidReceiveMemoryWarning()\" and the application crashes immediately afterwards",773],["(Sometimes you might see a message like Program received signal: \"0\".)",773],["This warning message is often not fatal and merely indicates that iOS is low on memory and is asking applications to free up some memory. Typically, background processes like Mail will free some memory and your application can continue to run. However, if your application continues to use memory or ask for more, the OS will eventually start killing applications and yours could be one of them. Apple does not document what memory usage is safe, but empirical observations show that applications using less than 50% MB of all device RAM (roughly 200-256 MB for 2nd generation ipad) do not have major memory usage problems.",773],["The main metric you should rely on is how much RAM your application uses. Your application memory usage consists of three major components:",773],["application code (the OS needs to load and keep your application code in RAM, but some of it might be discarded if really needed)",773],["native heap (used by the engine to store its state, your assets, etc. in RAM)",773],["managed heap (used by your Mono runtime to keep C# or JavaScript objects)",773],["GLES driver memory pools: textures, framebuffers, compiled shaders, etc.",773],["Your application memory usage can be tracked by two Xcode Instruments tools: Activity Monitor, Object Allocations and VM Tracker. You can start from the Xcode Run menu: Product &gt; Profile and then select specific tool. Activity Monitor tool shows all process statistics including Real memory which can be regarded as the total amount of RAM used by your application. Note: OS and device HW version combination might noticeably affect memory usage numbers, so you should be careful when comparing numbers obtained on different devices.",773],["Note: The internal profiler shows only the heap allocated by .NET scripts. Total memory usage can be determined via Xcode Instruments as shown above. This figure includes parts of the application binary, some standard framework buffers, Unity engine internal state buffers, the .NET runtime heap (number printed by internal profiler), GLES driver heap and some other miscellaneous stuff.",773],["The other tool displays all allocations made by your application and includes both native heap and managed heap statistics (don't forget to check the Created and still living box to get the current state of the application). The important statistic is the Net bytes value.",773],["To keep memory usage low:",773],["Reduce the application binary size by using the strongest iOS stripping options, and avoid unnecessary dependencies on different .NET libraries. See the player settings and player size optimization manual pages for further details.",773],["Reduce the size of your content. Use PVRTC compression for textures and use low poly models. See the manual page about reducing file size for more information.",773],["Don't allocate more memory than necessary in your scripts. Track mono heap size and usage with the internal profiler",773],["Note: with Unity 3.0, the scene loading implementation has changed significantly and now all scene assets are preloaded. This results in fewer hiccups when instantiating game objects. If you need more fine-grained control of asset loading and unloading during gameplay, you should use Resources.Load and Object.Destroy.",773],["Querying the OS about the amount of free memory may seem like a good idea to evaluate how well your application is performing. However, the free memory statistic is likely to be unreliable since the OS uses a lot of dynamic buffers and caches. The only reliable approach is to keep track of memory consumption for your application and use that as the main metric. Pay attention to how the graphs from the tools described above change over time, especially after loading new levels.",773],["The game runs correctly when launched from Xcode but crashes while loading the first level when launched manually on the device.",773],["There could be several reasons for this. You need to inspect the device logs to get more details. Connect the device to your Mac, launch Xcode and select Window &gt; Organizer from the menu. Select your device in the Organizer's left toolbar, then click on the \"Console\" tab and review the latest messages carefully. Additionally, you may need to investigate crash reports. You can find out how to obtain crash reports here: http://developer.apple.com/iphone/library/technotes/tn2008/tn2151.html.",773],["The Xcode Organizer console contains the message \"killed by SpringBoard\".",773],["There is a poorly-documented time limit for an iOS application to render its first frames and process input. If your application exceeds this limit, it will be killed by SpringBoard. This may happen in an application with a first scene which is too large, for example. To avoid this problem, it is advisable to create a small initial scene which just displays a splash screen, waits a frame or two with yield and then starts loading the real scene. This can be done with code as simple as the following:",773],["function Start() {",773],["yield;",773],["Application.LoadLevel(\"Test\");",773],["Type.GetProperty() / Type.GetValue() cause crashes on the device",773],["Currently Type.GetProperty() and Type.GetValue() are supported only for the .NET 2.0 Subset profile. You can select the .NET API compatibility level in the Player Settings.",773],["Note: Type.GetProperty() and Type.GetValue() might be incompatible with managed code stripping and might need to be excluded (you can supply a custom non-strippable type list during the stripping process to accomplish this). For further details, see the iOS player size optimization guide.",773],["The game crashes with the error message \"ExecutionEngineException: Attempting to JIT compile method 'SometType`1&lt;SomeValueType&gt;:.ctor ()' while running with --aot-only.\"",773],["The Mono .NET implementation for iOS is based on AOT (ahead of time compilation to native code) technology, which has its limitations. It compiles only those generic type methods (where a value type is used as a generic parameter) which are explicitly used by other code. When such methods are used only via reflection or from native code (ie, the serialization system) then they get skipped during AOT compilation. The AOT compiler can be hinted to include code by adding a dummy method somewhere in the script code. This can refer to the missing methods and so get them compiled ahead of time.",773],["void _unusedMethod() {",773],["var tmp = new SomeType();",773],["Note: value types are basic types, enums and structs.",773],["Various crashes occur on the device when a combination of System.Security.Cryptography and managed code stripping is used",773],[".NET Cryptography services rely heavily on reflection and so are not compatible with managed code stripping since this involves static code analysis. Sometimes the easiest solution to the crashes is to exclude the whole System.Security.Crypography namespace from the stripping process.",773],["The stripping process can be customized by adding a custom link.xml file to the Assets folder of your Unity project. This specifies which types and namespaces should be excluded from stripping. Further details can be found in the iOS player size optimization guide.",773],["link.xml",773],["",773],["",773],["",773],["",773],["",773],["Application crashes when using System.Security.Cryptography.MD5 with managed code stripping",773],["You might consider advice listed above or can work around this problem by adding extra reference to specific class to your script code:",773],["object obj = new MD5CryptoServiceProvider();",773],["\"Ran out of trampolines of type 0/1/2\" runtime error",773],["This error usually happens if you use lots of recursive generics. You can hint to the AOT compiler to allocate more trampolines of type 0, type 1 or type 2. Additional AOT compiler command line options can be specified in the \"Other Settings\" section of the Player Settings. For type 1 trampolines, specify nrgctx-trampolines=ABCD, where ABCD is the number of new trampolines required (i.e. 4096). For type 2 trampolines specify nimt-trampolines=ABCD and for type 0 trampolines specify ntrampolines=ABCD.",773],["After upgrading Xcode Unity iOS runtime fails with message \"You are using Unity iPhone Basic. You are not allowed to remove the Unity splash screen from your game\"",773],["With some latest Xcode releases there were changes introduced in PNG compression and optimization tool. These changes might cause false positives in Unity iOS runtime checks for splash screen modifications. If you encounter such problems try upgrading Unity to the latest publicly available version. If it does not help you might consider following workaround:",773],["Replace your Xcode project from scratch when building from Unity (instead of appending it)",773],["Delete already installed project from device",773],["Clean project in Xcode (Product-&gt;Clean)",773],["Clear Xcode's Derived Data folders (Xcode-&gt;Preferences-&gt;Locations)",773],["If this still does not help try disabling PNG re-compression in Xcode:",773],["Open your Xcode project",773],["Select \"Unity-iPhone\" project there",773],["Select \"Build Settings\" tab there",773],["Look for \"Compress PNG files\" option and set it to NO",773],["App Store submission fails with \"iPhone/iPod Touch: application executable is missing a required architecture. At least one of the following architecture(s) must be present: armv6\" message",773],["You might get such message when updating already existing application, which previously was submitted with armv6 support. Unity 4.x and Xcode 4.5 does not support armv6 platform anymore. To solve submission problem just set Target OS Version in Unity Player Settings to 4.3 or higher.",773],["WWW downloads are working fine in Unity Editor and on Android, but not on iOS",773],["Most common mistake is to assume that WWW downloads are always happening on separate thread. On some platforms this might be true, but you should not take it for granted. Best way to track WWW status is either to use yield statement or check status in Update method. You should not use busy while loops for that.",773],["\"PlayerLoop called recursively!\" error occurs when using Cocoa via a native function called from a script",773],["Some operations with the UI will result in iOS redrawing the window immediately (the most common example is adding a UIView with a UIViewController to the main UIWindow). If you call a native function from a script, it will happen inside Unity's PlayerLoop, resulting in PlayerLoop being called recursively. In such cases, you should consider using the performSelectorOnMainThread method with waitUntilDone set to false. It will inform iOS to schedule the operation to run between Unity's PlayerLoop calls.",773],["Profiler or Debugger unable to see game running on iOS device",773],["Check that you have built a Development build, and ticked the \"Enable Script Debugging\" and \"Autoconnect profiler\" boxes (as appropriate).",773],["The application running on the device will make a multicast broadcast to 225.0.0.222 on UDP port 54997. Check that your network settings allow this traffic. Then, the profiler will make a connection to the remote device on a port in the range 55000 - 55511 to fetch profiler data from the device. These ports will need to be open for UDP access.",773],["Missing DLLs",773],["If your application runs ok in editor but you get errors in your iOS project this may be caused by missing DLLs (e.g. I18N.dll, I19N.West.dll). In this case, try copying those dlls from within the Unity.app to your project's Assets/Plugins folder. The location of the DLLs within the unity app is:",773],["Unity.app/Contents/Frameworks/Mono/lib/mono/unity",773],["You should then also check the stripping level of your project to ensure the classes in the DLLs aren't being removed when the build is optimised. Refer to the iOS Optimisation Page for more information on iOS Stripping Levels.",773],["Xcode Debugger console reports: ExecutionEngineException: Attempting to JIT compile method '(wrapper native-to-managed) Test:TestFunc (int)' while running with --aot-only",773],["Typically such message is received when managed function delegate is passed to the native function, but required wrapper code wasn't generated when building application. You can help AOT compiler by hinting which methods will be passed as delegates to the native code. This can be done by adding \"MonoPInvokeCallbackAttribute\" custom attribute. Currently only static methods can be passed as delegates to the native code.",773],["Sample code:",773],["using UnityEngine;",773],["using System.Collections;",773],["using System;",773],["using System.Runtime.InteropServices;",773],["using AOT;",773],["public class NewBehaviourScript : MonoBehaviour {",773],["[DllImport (\"__Internal\")]",773],["private static extern void DoSomething (NoParamDelegate del1, StringParamDelegate del2);",773],["delegate void NoParamDelegate ();",773],["delegate void StringParamDelegate (string str);",773],["[MonoPInvokeCallback(typeof(NoParamDelegate))]",773],["public static void NoParamCallback() {",773],["Debug.Log (\"Hello from NoParamCallback\");",773],["[MonoPInvokeCallback(typeof(StringParamDelegate))]",773],["public static void StringParamCallback(string str) {",773],["Debug.Log(string.Format(\"Hello from StringParamCallback {0}\", str));",773],["// Use this for initialization",773],["void Start() {",773],["DoSomething(NoParamCallback, StringParamCallback);",773],["Xcode throws compilation error: \"ld : unable to insert branch island. No insertion point available. for architecture armv7\", \"clang: error: linker command failed with exit code 1 (use -v to see invocation)\"",773],["That error usually means there is just too much code in single module. Typically it is caused by having lots of script code or having big external .NET assemblies included into build. And enabling script debugging might make things worse, because it adds quite few additional instructions to each function, so it is easier to hit that limit.",773],["Enabling managed code stripping in player settings might help with this problem, especially if big external .NET assemblies are involved. But if the issue persists then the best solution is to split user script code into multiple assemblies. The easiest way to this is move some code to Plugins folder. Code at this location is put to different assembly. Also check the information about how special folder names affect script compilation:",773],["Troubleshooting Webplayer",774],["Support for a given game will be handled by the developer or publisher. If you have a general problem using the Unity webplayer plugin follow these steps:",774],["Windows:",774],["Close all browsers.",774],["Use Control Panel to uninstall the Unity Web Player.",774],["Reboot your machine.",774],["Download a new copy of the latest webplayer plugin from: http://unity3d.com/webplayer/",774],["Again close all browsers.",774],["Run the webplayer installer.",774],["MacOS",774],["Log onto MacOS with a user account that has admin privileges.",774],["Close all web browsers.",774],["Delete the file: /Library/Internet Plug-Ins/Unity Web Player.plugin",774],["Empty the trash.",774],["Reboot and log in with an admin account.",774],["Download a new copy of the latest webplayer plugin from: http://unity3d.com/webplayer/",774],["Again close all browsers.",774],["Run the webplayer installer.",774],["Once the installer has finished, test with the demos at: http://unity3d.com/gallery/demos/live-demos",774],["If the webplayer has installed correctly, and your machine is capable of playing Unity content, then you should see the demos running in your browser, and other games should run also. If you do not see the demos running, please send us an email to support@unity3d.com, telling in as much detail as possible what happens at each of the steps above.",774],["Javascript errors",774],["Many Unity webplayer games make use of Javascript hosting scripts called UnityObject.js or UnityObject2.js. These scripts are responsible for checking whether the webplayer is installed, and placing it into the webpage. If any scripting errors happen in any other Javascript on the page (perhaps analytics or tracking scripts) this can prevent Javascript from running. In turn, this can leave a message displayed saying the webplayer is not installed. This message comes from the &lt;div class=\"missing\"&gt; HTML element. If UnityObject.js or UnityObject2.js runs correctly and the gamer has the webplayer installed, then this div is hidden.",774],["Player, Plugin, Mono",774],["The webplayer is built from 3 components, the plugin, the player, and Mono. The Player is the Unity runtime that executes your game, and loads assets for you. It's the same runtime (more or less) as the one that is created if you make a standalone. This runtime needs Mono to run correctly. (Since your game will use Javascript or C# scripts that depend on Mono.) Finally, the Plugin is the glue that connects the web browser to the runtime. The Plugin is either an ActiveX control (OCX) on Windows if you are using Internet Explorer, or a NPAPI-style DLL for other Windows browsers, or a .plugin on a Mac.",774],["PC WebPlayer Installer",774],["On a PC, the webplayer installer installs only the Plugin component. The Player and Mono components are fetched on demand when the Plugin is first asked to play content. So, installing the web player plugin and disconnecting from the internet will leave the plugin unable to fetch these two critical components. This can result in a failure message. Visiting the webplayer page should show which versions of these components are installed. Note that Unity Engine means the player. These components are installed by default to c:\\Users\\{you}\\AppData\\LocalLow\\Unity\\WebPlayer where {you} means your username. If you look at this location you will see three folders, with the contents of loader being the plugin itself. If your plugin has not downloaded Mono and Player then you will miss folders called mono and player.",774],["Note: The webplayer can be installed into c:\\Program Files\\ if the installer is run from a command prompt and given the /AllUsers flag. You need to be an Admin user to perform this task.",774],["Mac WebPlayer Installer",774],["On a Mac, the installer will install all 3 components, so the web player is ready to play content immediately after the install finishes. The plugin can be found at /Library/Internet Plug-Ins/Unity Web Player.plugin, and Mono and the Player will be in the /Library/Internet Plug-Ins/Unity Web Player.plugin/Contents/Frameworks folder.",774],["Animation Integration",775],["Animation allows for each transition between control states to be fully animated using Unity's animation system.  This is the most powerful of the transition modes due the the number of properties that can be animated simultaneously.",775],["To use the Animation transition mode, an Animator Component needs to be attached to the controller element. This can be done automatically by clicking \"Auto Generate Animation\".  This also generates an Animator Controller with states already set up, which will need to be saved.",775],["The new Animator controller is ready to use straight away. Unlike most Animator Controllers, this controller also stores the animations for the controller's transitions and these can be customised, if desired.",775],["For example, if a Button element with an Animator controller attached is selected, the animations for each of the button's states can be edited by opening the Animation window (Window&gt;Animation).",775],["There is an Animation Clip pop-up menu to select the desired clip. Choose from \"Normal\", \"Highlighted\", \"Pressed\" and \"Disabled\".",775],["The Normal State is set by the values on button element itself and can be left empty. On all other states, the most common configuration is a single keyframe at the start of the timeline. The transition animation between states will be handled by the Animator.",775],["As an example, the width of the button in the Highlighted State could be changed by selecting the Highlighted state from the Animation Clip pop up menu and with the playhead at the start of the time line:",775],["Select the record Button",775],["Change the width of the Button in the inspector",775],["Exit the record mode.",775],["Change to play mode to see how the button grows when highlighted.",775],["Any number of properties can have their parameters set in this one keyframe.",775],["Several buttons can share the same behaviour by sharing Animator Controllers.",775],["Auto Layout",776],["The Rect Transform layout system is flexible enough to handle a lot of different types of layouts and it also allows placing elements in a complete freeform fashion. However, sometimes something a bit more structured can be needed.",776],["The auto layout system provides ways to place elements in nested layout groups such as horizontal groups, vertical groups, or grids. It also allows elements to automatically be sized accoring to the contained content. For example a button can be dynamically resized to exactly fit its text content plus some padding.",776],["The auto layout system is a system built on top of the basic Rect Transform layout system. It can optionally be used on some or all elements.",776],["Understanding Layout Elements",776],["The auto layout system is based on a concept of layout elements and layout controllers. A layout element is an Game Object with a Rect Transform and optionally other components as well. The layout element has certain knowledge about which size it should have. Layout elements don't directly set their own size, but other components that function as layout controllers can use the information they provide in order to calculate a size to use for them.",776],["A layout element has properties that defines its own:",776],["Minimum width",776],["Minimum height",776],["Preferred width",776],["Preferred height",776],["Flexible width",776],["Flexible height",776],["Examples of layout controller components that use the information provided by layout elements are Content Size Fitter and the various Layout Group components. The basic principles for how layout elements in a layout group are sized is as follows:",776],["First minimum sizes are allocated.",776],["If there is sufficient available space, preferred sizes are allocated.",776],["If there is additional available space, flexible size is allocated.",776],["Any Game Object with a Rect Transform on it can function as a layout element. They will by default have minimum, preferred, and flexible sizes of 0. Certain components will change these layout properties when added to the Game Object.",776],["The Image and Text components are two examples of components that provide layout element properties. They change the preferred width and height to match the sprite or text content.",776],["Layout Element Component",776],["If you want to override the minimum, preferred, or flexible size, you can do that by adding a Layout Element component to the Game Object.",776],["The Layout Element component lets you override the values for one or more of the layout properties. Enable the checkbox for a property you want to override and then specify the value you want to override with.",776],["See the reference page for Layout Element for more information.",776],["Understanding Layout Controllers",776],["Layout controllers are components that control the sizes and possibly positions of one or more layout elements, meaning Game Objects with Rect Transforms on. A layout controller may control its own layout element (the same Game Object it is on itself) or it may control child layout elements.",776],["A component that functions as a layout controller may also itself function as a layout element at the same time.",776],["Content Size Fitter",776],["The Content Size Fitter functions as a layout controller that controls the size of its own layout element. The simplest way to see the auto layout system in action is to add a Content Size Fitter component to a Game Object with a Text component.",776],["If you set either the Horizontal Fit or Vertical Fit to Preferred, the Rect Transform will adjust its width and/or height to fit the Text content.",776],["See the reference page for Content Size Fitter for more information.",776],["Aspect Ratio Fitter",776],["The Aspect Ratio Fitter functions as a layout controller that controls the size of its own layout element.",776],["It can adjust the height to fit the width or vice versa, or it can make the element fit inside its parent or envelope its parent. The Aspect Ratio Fitter does not take layout information into account such as minimum size and preferred size.",776],["See the reference page for Aspect Ratio Fitter for more information.",776],["Layout Groups",776],["A layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.",776],["A layout group doesn't control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.",776],["Whatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.",776],["See the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.",776],["Driven Rect Transform properties",776],["Since a layout controller in the auto layout system can automatically control the sizes and placement of certain UI elements, those sizes and positions should not be manually edited at the same time through the Inspector or Scene View. Such changed values would just get reset by the layout controller on the next layout calculation anyway.",776],["The Rect Transform has a concept of driven properties to address this. For example, a Content Size Fitter which has the Horizontal Fit property set to Minimum or Preferred will drive the width of the Rect Transform on the same Game Object. The width will appear as read-only and a small info box at the top of the Rect Transform will inform that one or more properties are driven by Conten Size Fitter.",776],["The driven Rect Transforms properties have other reasons beside preventing manual editing. A layout can be changed just by changing the resolution or size of the Game View. This in turn can change the size or placement of layout elements, which changes the values of driven properties. But it wouldn't be desirable that the Scene is marked as having unsaved changes just because the Game View was resized. To prevent this, the values of driven properties are not saved as part of the Scene and changes to them do not mark the scene as changed.",776],["Technical Details",776],["The auto layout system comes with certain components built-in, but it is also possible to create new components that controls layouts in custom ways. This is done by having a component implement specific interfaces which are recognized by the auto layout system.",776],["Layout Interfaces",776],["A component is treated as a layout element by the auto layout system if it implements the interface ILayoutElement.",776],["A component is expected to drive the Rect Transforms of its children if it implements the interface ILayoutGroup.",776],["A component is expected to drive its own RectTransform if it implements the interface ILayoutSelfController.",776],["Layout Calculations",776],["The auto layout system evaluates and executes layouts in the following order:",776],["The minimum, preferred, and flexible widths of layout elements are calculated by calling CalculateLayoutInputHorizontal on ILayoutElement components. This is performed in bottom-up order, where children are calculated before their parents, such that the parents may take the information in their children into account in their own calculations.",776],["The effective widths of layout elements are calculated and set by calling SetLayoutHorizontal on ILayoutController components. This is performed in top-down order, where children are calculated after their parents, since allocation of child widths needs to be based on the full width available in the parent. After this step the Rect Transforms of the layout elements have their new widths.",776],["The minimum, preferred, and flexible heights of layout elements are calculated by calling CalculateLayoutInputVertical on ILayoutElement components. This is performed in bottom-up order, where children are calculated before their parents, such that the parents may take the information in their children into account in their own calculations.",776],["The effective heights of layout elements are calculated and set by calling SetLayoutVertical on ILayoutController components. This is performed in top-down order, where children are calculated after their parents, since allocation of child heights needs to be based on the full height available in the parent. After this step the Rect Transforms of the layout elements have their new heights.",776],["As can be seen from the above, the auto layout system evaluates widths first and then evaluates heights afterwards. Thus, calculated heights may depend on widths, but calculated widths can never depend on heights.",776],["Triggering Layout Rebuild",776],["When a property on a component changes which can cause the current layout to no longer be valid, a layout recalculation is needed. This can be triggered using the call:",776],["LayoutRebuilder.MarkLayoutForRebuild (transform as RectTransform);",776],["The rebuild will not happen immediately, but at the end of the current frame, just before rendering happens. The reason it is not immediate is that this would cause layouts to be potentially rebuild many times during the same frame, which would be bad for performance.",776],["Guidelines for when a rebuild should be triggered:",776],["In setters for properties that can change the layout.",776],["In these callbacks:",776],["OnEnable",776],["OnDisable",776],["OnRectTransformDimensionsChange",776],["OnValidate (only needed in the editor, not at runtime)",776],["OnDidApplyAnimationProperties",776],["Basic Layout",777],["In this section we'll look at how you can position UI elements relative to the Canvas and each other. If you want to test yourself while reading, you can create an Image using the menu GameObject -> UI -> Image.",777],["The Rect Tool",777],["Every UI element is represented as a rectangle for layout purposes. This rectangle can be manipulated in the Scene View using the Rect Tool in the toolbar. The Rect Tool is used both for Unity's 2D features and for UI, and in fact can be used even for 3D objects as well.",777],["The Rect Tool can be used to move, resize and rotate UI elements. Once you have selected a UI element, you can move it by clicking anywhere inside the rectangle and dragging. You can resize it by clicking on the edges or corners and dragging. The element can be rotated by hovering the cursor slightly away from the corners until the mouse cursor looks like a rotation symbol. You can then click and drag in either direction to rotate.",777],["Just like the other tools, the Rect Tool uses the current pivot mode and space, set in the toolbar. When working with UI it's usually a good idea to keep those set to Pivot and Local.",777],["Rect Transform",777],["The Rect Transform is a new transform component that is used for all UI elements instead of the regular Transform component.",777],["Rect Transforms have position, rotation, and scale just like regular Transforms, but it also has a width and height, used to specify the dimensions of the rectangle.",777],["Resizing Versus Scaling",777],["When the Rect Tool is used to change the size of an object, normally for Sprites in the 2D system and for 3D objects it will change the local scale of the object. However, when it's used on an object with a Rect Transform on it, it will instead change the width and the height, keeping the local scale unchanged. This resizing will not affect font sizes, border on sliced images, and so on.",777],["Pivot",777],["Rotations, size, and scale modifications occur around the pivot so the position of the pivot affects the outcome of a rotation, resizing, or scaling. When the toolbar Pivot button is set to Pivot mode, the pivot of a Rect Transform can be moved in the Scene View.",777],["Anchors",777],["Rect Transforms include a layout concept called anchors. Anchors are shown as four small triangular handles in the Scene View and anchor information is also shown in the Inspector.",777],["If the parent of a Rect Transform is also a Rect Transform, the child Rect Transform can be anchored to the parent Rect Transform in various ways. For example, the child can be anchored to the center of the parent, or to one of the corners.",777],["The anchoring also allows the child to stretch together with the width or height of the parent. Each corner of the rectangle has a fixed offset to its corresponding anchor, i.e. the top left corner of the rectangle has a fixed offset to the top left anchor, etc. This way the different corners of the rectangle can be anchored to different points in the parent rectangle.",777],["The positions of the anchors are defined in fractions (or percentages) of the parent rectangle width and height. 0.0 (0%) corresponds to the left or bottom side, 0.5 (50%) to the middle, and 1.0 (100%) to the right or top side. But anchors are not limited to the sides and middle; they can be anchored to any point within the parect rectangle.",777],["You can drag each of the anchors individually, or if they are together, you can drag them together by clicking in the middle in between them and dragging. If you hold down Shift key while dragging an anchor, the corresponding corner of the rectangle will move together with the anchor.",777],["A useful feature of the anchor handles is that they automatically snap to the anchors of sibling rectangles to allow for precise positioning.",777],["Anchor presets",777],["In the Inspector, the Anchor Preset button can be found in the upper left corner of the Rect Transform component. Clicking the button brings up the Anchor Presets dropdown. From here you can quickly select from some of the most common anchoring options. You can anchor the UI element to the sides or middle of the parent, or stretch together with the parent size. The horizontal and vertical anchoring is independent.",777],["The Anchor Presets buttons displays the currently selected preset option if there is one. If the anchors on either the horizontal or vertical axis are set to different positions than any of the presets, the custom options is shown.",777],["Anchor and position fields in the Inspector",777],["You can click the Anchors expansion arrow to reveal the anchor number fields if they are not already visible. Anchor Min corresponds to the lower left anchor handle in the Scene View, and Anchor Max corresponds to the upper right handle.",777],["The position fields of rectangle are shown differently depending on whether the anchors are together (which produces a fixed width and height) or separated (which causes the rectangle to stretch together with the parent rectangle).",777],["When all the anchor handles are together the fields displayed are Pos X, Pos Y, Width and Height. The Pos X and Pos Y values indicate the position of the pivot relative to the anchors.",777],["When the anchors are separated the fields can change partially or completely to Left, Right, Top and Bottom. These fields define the padding inside the rectangle defined by the anchors. The Left and Right fields are used if the anchors are separated horizontally and the Top and Bottom fields are used if they are separated vertically.",777],["Note that changing the values in the anchor or pivot fields will normally counter-adjust the positioning values in order to make the rectangle stay in place. If cases where this is not desired, the Raw Mode can be enabled using a small button in the Inspector. This causes the anchor and pivot value to be able to be changed without any other values changing as a result. This will likely cause the rectangle to be visually moved or resized, since its position and size is dependent on the anchor and pivot values.",777],["Canvas",778],["The Canvas is the area that all UI elements should be inside. The Canvas is a Game Object with a Canvas component on it, and all UI elements must be children of such a Canvas.",778],["Creating a new UI element, such as an Image using the menu GameObject > UI > Image, automatically creates a Canvas, if there isn't already a Canvas in the scene. The UI element is created as a child to this Canvas.",778],["The Canvas area is shown as a rectangle in the Scene View. This makes it easy to position UI elements without needing to have the Game View visible at all times.",778],["Draw order of elements",778],["UI elements in the Canvas are drawn in the same order they appear in the Hierarchy. The first child is drawn first, the second child next, and so on. If two UI elements overlap, the later one will appear on top of the earlier one.",778],["To change which element appear on top of other elements, simply reorder the elements in the Hierarchy by dragging them. The order can also be controlled from scripting by using these methods on the Transform component: SetAsFirstSibling, SetAsLastSibling, and SetSiblingIndex.",778],["Render Modes",778],["The Canvas has a Render Mode setting which can be used to make it render in screen space or world space.",778],["Screen Space - Overlay",778],["This render mode places UI elements on the screen rendered on top of the scene. If the screen is resized or changes resolution, the Canvas will automatically change size to match this.",778],["Screen Space - Camera",778],["This is similar to Screen Space - Overlay, but in this render mode, the Canvas is placed a given distance in front of a specified Camera. The UI elements are rendered by this camera, which means that the Camera settings affect the appearance of the UI. If the Camera is set to Perspective, the UI elements will be rendered with perspective, and the amount of perspective distortion can be controlled by the Camera Field of View. If the screen is resized or changes resolution, or the camera frustrum changes, the Canvas will automatically change size to match as well.",778],["World Space",778],["In this render mode, the Canvas will behave as any other object in the scene. The size of the Canvas can be set manually using its Rect Transform, and UI elements will render in front of or behind other objects in the scene based on 3D placement. This is useful for UIs that are meant to be a part of the world. This is also known as a \"diegetic interface\".",778],["UI How Tos",779],["In this section you can learn about solutions to common UI tasks.",779],["Interaction Components",780],["This section covers components in the UI system that handles interaction, such as mouse or touch events and interaction using a keyboard or controller.",780],["The interaction components are not visible on their own, and must be combined with one or more visual elements in order to work correctly.",780],["Common Functionality",780],["Most of the interaction components have some things in common. They are selectables, which means they have shared built-in functionality for visualising transitions between states (normal, highlighted, pressed, disabled), and for navigation to other selectables using keyboard or controller. This shared functionality is described on the Selectable page.",780],["Button",780],["A Button has an OnClick UnityEvent to define what it will do when clicked.",780],["See the Button page for details on using the Button component.",780],["Toggle",780],["A Toggle has an Is On checkbox that determines whether the Toggle is currently on or off. This value is flipped when the user clicks the Toggle, and a visual checkmark can be turned on or off accordingly. It also has an OnValueCHanged UnityEvent to define what it will do when the value is changed.",780],["See the Toggle page for details on using the Toggle component.",780],["Toggle Group",780],["A Toggle Group can be used to group a set of Toggles that are mutually exclusive. Toggles that belong to the same group are constrained so that only one of them can be selected at a time - selecting one of them automatically deselects all the others.",780],["See the ToggleGroup page for details on using the Toggle Group component.",780],["Slider",780],["A Slider has a decimal number Value that the user can drag between a minimum and maximum value. It can be either horizontal or vertical. It also has a OnValueChanged UnityEvent to define what it will do when the value is changed.",780],["See the Slider page for details on using the Slider component.",780],["Scrollbar",780],["A Scrollbar has a decimal number Value between 0 and 1. When the user drags the scrollbar, the value changes accordingly.",780],["Scrollbars are often used together with a Scroll Rect and a Mask to create a scroll view. The Scrollbar has a Size value between 0 and 1 that determines how big the handle is as a fraction of the entire scrollbar length. This is often controlled from another component to indicate how buig a proportion of the content in a scroll view is visible. The Scroll Rect component can automatically do this.",780],["The Scrollbar can be either horizontal or vertical. It also has a OnValueChanged UnityEvent to define what it will do when the value is changed.",780],["See the Scrollbar page for details on using the Scrollbar component.",780],["Scroll Rect",780],["A Scroll Rect can be used when content that takes up a lot of space needs to be displayed in a small area. The Scroll Rect provides functionality to scroll over this content.",780],["Usually a Scroll Rect is combined with a Mask in order to create a scroll view, where only the scrollable content inside the Scroll Rect is visible. It can also additionally be combined with one or two Scrollbars that can be dragged to scroll horizontally or vertically.",780],["See the ScrollRect page for details on using the Scroll Rect component.",780],["Input Field",780],["An Input Field is used to make the text of a Text Element editable by the user. It has a UnityEvent to define what it will do when the text content is changed, and an another to define what it will do when the user has finished editing it.",780],["See the InputField page for details on using the Input Field component.",780],["UI Overview",781],["In this overview we'll go through the basics of the UI System. We'll start by introducing the Canvas, inside which all UI elements are placed. We will discuss the Rect Tool and the Rect Transform used for element layout. Then we'll look at visual elements such as Text and Image, as well as interaction controls such as Button and Slider.",781],["UI Reference",782],["This section goes into more depth about Unity’s UI features.",782],["UI",783],["The UI system allows you to create User Interfaces (UIs) fast and intuitively. This is an introduction to the major features of Unity’s new UI system.",783],["Visual Components",784],["With the introduction of the UI system, new Components have been added that will help you create GUI specific functionality. This section will cover the basics of the new Components that can be created.",784],["Text",784],["The Text component, which is also known as a Label, has a Text area for entering the text that will be displayed. It is possible to set the font, font style, font size and whether or not the text has rich text capability.",784],["There are options to set the alignment of the text, settings for horizontal and vertical overflow which control what happens if the text is larger than the width or height of the rectangle, and a Best Fit option that makes the text resize to fit the available space.",784],["Image",784],["An Image has a Rect Transform component and an Image component. A sprite can be applied to the Image component under the Target Graphic field, and its colour can be set in the Color field. A material can also be applied to the Image component. The Image Type field defines how the applied sprite will appear, the options are:",784],["Simple - Scales the whole sprite equally.",784],["Sliced - Utilises the 3x3 sprite division so that resizing does not distort corners and only the center part is stretched.",784],["Tiled - Similar to Sliced, but tiles (repeats) the center part rather than stretching it. For sprites with no borders at all, the entire sprite is tiled.",784],["Filled - Shows the sprite in the same way as Simple does except that it fills in the sprite from an origin in a defined direction, method and amount.",784],["The option to Set Native Size, which is shown when Simple or Filled is selected, resets the image to the original sprite size.",784],["Images can be imported as UI sprites by selecting Sprite( 2D / UI) from the 'Texture Type' settings. Sprites have extra import settings compared to the old GUI sprites, the biggest difference is the addition of the sprite editor. The sprite editor provides the option of 9-slicing the image, this splits the image into 9 areas so that if the sprite is resized the corners are not stretched or distorted.",784],["Raw Image",784],["The Image component takes a sprite but Raw Image takes a texture (no borders etc). Raw Image should only be used if necessary otherwise Image will be suitable in the majority of cases.",784],["Mask",784],["A Mask is not a visible UI control but rather a way to modify the appearance of a control’s child elements. The mask restricts (ie, “masks”) the child elements to the shape of the parent. So, if the child is larger than the parent then only the part of the child that fits within the parent will be visible.",784],["Effects",784],["Visual components can also have various simple effects applied, such as a simple drop shadow or outline. See the Effects reference page for more information.",784],["Understanding Automatic Memory Management",785],["When an object, string or array is created, the memory required to store it is allocated from a central pool called the heap. When the item is no longer in use, the memory it once occupied can be reclaimed and used for something else. In the past, it was typically up to the programmer to allocate and release these blocks of heap memory explicitly with the appropriate function calls. Nowadays, runtime systems like Unity's Mono engine manage memory for you automatically. Automatic memory management requires less coding effort than explicit allocation/release and greatly reduces the potential for memory leakage (the situation where memory is allocated but never subsequently released).",785],["Value and Reference Types",785],["When a function is called, the values of its parameters are copied to an area of memory reserved for that specific call. Data types that occupy only a few bytes can be copied very quickly and easily. However, it is common for objects, strings and arrays to be much larger and it would be very inefficient if these types of data were copied on a regular basis. Fortunately, this is not necessary; the actual storage space for a large item is allocated from the heap and a small \"pointer\" value is used to remember its location. From then on, only the pointer need be copied during parameter passing. As long as the runtime system can locate the item identified by the pointer, a single copy of the data can be used as often as necessary.",785],["Types that are stored directly and copied during parameter passing are called value types. These include integers, floats, booleans and Unity's struct types (eg, Color and Vector3). Types that are allocated on the heap and then accessed via a pointer are called reference types, since the value stored in the variable merely \"refers\" to the real data. Examples of reference types include objects, strings and arrays.",785],["Allocation and Garbage Collection",785],["The memory manager keeps track of areas in the heap that it knows to be unused. When a new block of memory is requested (say when an object is instantiated), the manager chooses an unused area from which to allocate the block and then removes the allocated memory from the known unused space. Subsequent requests are handled the same way until there is no free area large enough to allocate the required block size. It is highly unlikely at this point that all the memory allocated from the heap is still in use. A reference item on the heap can only be accessed as long as there are still reference variables that can locate it. If all references to a memory block are gone (ie, the reference variables have been reassigned or they are local variables that are now out of scope) then the memory it occupies can safely be reallocated.",785],["To determine which heap blocks are no longer in use, the memory manager searches through all currently active reference variables and marks the blocks they refer to as \"live\". At the end of the search, any space between the live blocks is considered empty by the memory manager and can be used for subsequent allocations. For obvious reasons, the process of locating and freeing up unused memory is known as garbage collection (or GC for short).",785],["Optimization",785],["Garbage collection is automatic and invisible to the programmer but the collection process actually requires significant CPU time behind the scenes. When used correctly, automatic memory management will generally equal or beat manual allocation for overall performance. However, it is important for the programmer to avoid mistakes that will trigger the collector more often than necessary and introduce pauses in execution.",785],["There are some infamous algorithms that can be GC nightmares even though they seem innocent at first sight. Repeated string concatenation is a classic example:",785],["//C# script example",785],["using UnityEngine;",785],["using System.Collections;",785],["public class ExampleScript : MonoBehaviour {",785],["void ConcatExample(int[] intArray) {",785],["string line = intArray[0].ToString();",785],["for (i = 1; i &lt; intArray.Length; i++) {",785],["line += \", \" + intArray[i].ToString();",785],["return line;",785],["//JS script example",785],["function ConcatExample(intArray: int[]) {",785],["var line = intArray[0].ToString();",785],["for (i = 1; i &lt; intArray.Length; i++) {",785],["line += \", \" + intArray[i].ToString();",785],["return line;",785],["The key detail here is that the new pieces don't get added to the string in place, one by one. What actually happens is that each time around the loop, the previous contents of the line variable become dead - a whole new string is allocated to contain the original piece plus the new part at the end. Since the string gets longer with increasing values of i, the amount of heap space being consumed also increases and so it is easy to use up hundreds of bytes of free heap space each time this function is called. If you need to concatenate many strings together then a much better option is the Mono library's System.Text.StringBuilder class.",785],["However, even repeated concatenation won't cause too much trouble unless it is called frequently, and in Unity that usually implies the frame update. Something like:",785],["//C# script example",785],["using UnityEngine;",785],["using System.Collections;",785],["public class ExampleScript : MonoBehaviour {",785],["public GUIText scoreBoard;",785],["public int score;",785],["void Update() {",785],["string scoreText = \"Score: \" + score.ToString();",785],["scoreBoard.text = scoreText;",785],["//JS script example",785],["var scoreBoard: GUIText;",785],["var score: int;",785],["function Update() {",785],["var scoreText: String = \"Score: \" + score.ToString();",785],["scoreBoard.text = scoreText;",785],["...will allocate new strings each time Update is called and generate a constant trickle of new garbage. Most of that can be saved by updating the text only when the score changes:",785],["//C# script example",785],["using UnityEngine;",785],["using System.Collections;",785],["public class ExampleScript : MonoBehaviour {",785],["public GUIText scoreBoard;",785],["public string scoreText;",785],["public int score;",785],["public int oldScore;",785],["void Update() {",785],["if (score != oldScore) {",785],["scoreText = \"Score: \" + score.ToString();",785],["scoreBoard.text = scoreText;",785],["oldScore = score;",785],["//JS script example",785],["var scoreBoard: GUIText;",785],["var scoreText: String;",785],["var score: int;",785],["var oldScore: int;",785],["function Update() {",785],["if (score != oldScore) {",785],["scoreText = \"Score: \" + score.ToString();",785],["scoreBoard.text = scoreText;",785],["oldScore = score;",785],["Another potential problem occurs when a function returns an array value:",785],["//C# script example",785],["using UnityEngine;",785],["using System.Collections;",785],["public class ExampleScript : MonoBehaviour {",785],["void RandomList(int numElements) {",785],["var result = new float[numElements];",785],["for (int i = 0; i &lt; numElements; i++) {",785],["result[i] = Random.value;",785],["return result;",785],["//JS script example",785],["function RandomList(numElements: int) {",785],["var result = new float[numElements];",785],["for (i = 0; i &lt; numElements; i++) {",785],["result[i] = Random.value;",785],["return result;",785],["This type of function is very elegant and convenient when creating a new array filled with values. However, if it is called repeatedly then fresh memory will be allocated each time. Since arrays can be very large, the free heap space could get used up rapidly, resulting in frequent garbage collections. One way to avoid this problem is to make use of the fact that an array is a reference type. An array passed into a function as a parameter can be modified within that function and the results will remain after the function returns. A function like the one above can often be replaced with something like:",785],["//C# script example",785],["using UnityEngine;",785],["using System.Collections;",785],["public class ExampleScript : MonoBehaviour {",785],["void RandomList(float[] arrayToFill) {",785],["for (int i = 0; i &lt; arrayToFill.Length; i++) {",785],["arrayToFill[i] = Random.value;",785],["//JS script example",785],["function RandomList(arrayToFill: float[]) {",785],["for (i = 0; i &lt; arrayToFill.Length; i++) {",785],["arrayToFill[i] = Random.value;",785],["This simply replaces the existing contents of the array with new values. Although this requires the initial allocation of the array to be done in the calling code (which looks slightly inelegant), the function will not generate any new garbage when it is called.",785],["Requesting a Collection",785],["As mentioned above, it is best to avoid allocations as far as possible. However, given that they can't be completely eliminated, there are two main strategies you can use to minimise their intrusion into gameplay:-",785],["Small heap with fast and frequent garbage collection",785],["This strategy is often best for games that have long periods of gameplay where a smooth framerate is the main concern. A game like this will typically allocate small blocks frequently but these blocks will be in use only briefly. The typical heap size when using this strategy on iOS is about 200KB and garbage collection will take about 5ms on an iPhone 3G. If the heap increases to 1MB, the collection will take about 7ms. It can therefore be advantageous sometimes to request a garbage collection at a regular frame interval. This will generally make collections happen more often than strictly necessary but they will be processed quickly and with minimal effect on gameplay:",785],["if (Time.frameCount % 30 == 0)",785],["System.GC.Collect();",785],["However, you should use this technique with caution and check the profiler statistics to make sure that it is really reducing collection time for your game.",785],["Large heap with slow but infrequent garbage collection",785],["This strategy works best for games where allocations (and therefore collections) are relatively infrequent and can be handled during pauses in gameplay. It is useful for the heap to be as large as possible without being so large as to get your app killed by the OS due to low system memory. However, the Mono runtime avoids expanding the heap automatically if at all possible. You can expand the heap manually by preallocating some placeholder space during startup (ie, you instantiate a \"useless\" object that is allocated purely for its effect on the memory manager):",785],["//C# script example",785],["using UnityEngine;",785],["using System.Collections;",785],["public class ExampleScript : MonoBehaviour {",785],["void Start() {",785],["var tmp = new System.Object[1024];",785],["// make allocations in smaller blocks to avoid them to be treated in a special way, which is designed for large blocks",785],["for (int i = 0; i &lt; 1024; i++)",785],["tmp[i] = new byte[1024];",785],["// release reference",785],["tmp = null;",785],["//JS script example",785],["function Start() {",785],["var tmp = new System.Object[1024];",785],["// make allocations in smaller blocks to avoid them to be treated in a special way, which is designed for large blocks",785],["for (var i : int = 0; i &lt; 1024; i++)",785],["tmp[i] = new byte[1024];",785],["// release reference",785],["tmp = null;",785],["A sufficiently large heap should not get completely filled up between those pauses in gameplay that would accommodate a collection. When such a pause occurs, you can request a collection explicitly:",785],["System.GC.Collect();",785],["Again, you should take care when using this strategy and pay attention to the profiler statistics rather than just assuming it is having the desired effect.",785],["Reusable Object Pools",785],["There are many cases where you can avoid generating garbage simply by reducing the number of objects that get created and destroyed. There are certain types of objects in games, such as projectiles, which may be encountered over and over again even though only a small number will ever be in play at once. In cases like this, it is often possible to reuse objects rather than destroy old ones and replace them with new ones.",785],["Further Information",785],["Memory management is a subtle and complex subject to which a great deal of academic effort has been devoted. If you are interested in learning more about it then memorymanagement.org is an excellent resource, listing many publications and online articles. Further information about object pooling can be found on the Wikipedia page and also at Sourcemaking.com.",785],["Understanding the View Frustum",786],["The word frustum refers to a solid shape that looks like a pyramid with the top cut off parallel to the base. This is the shape of the region that can be seen and rendered by a perspective camera. The following thought experiment should help to explain why this is the case.",786],["Imagine holding a straight rod (a broom handle or a pencil, for example) end-on to a camera and then taking a picture. If the rod were held in the centre of the picture, perpendicular to the camera lens, then only its end would be visible as a circle on the picture; all other parts of it would be obscured. If you moved it upward, the lower side would start to become visible but you could hide it again by angling the rod upward. If you continued moving the rod up and angling it further upward, the circular end would eventually reach the top edge of the picture. At this point, any object above the line traced by the rod in world space would not be visible on the picture.",786],["The rod could just as easily be moved and rotated left, right, or down or any combination of horizontal and vertical. The angle of the \"hidden\" rod simply depends on its distance from the centre of the screen in both axes.",786],["The meaning of this thought experiment is that any point in a camera's image actually corresponds to a line in world space and only a single point along that line is visible in the image. Everything behind that position on the line is obscured.",786],["The outer edges of the image are defined by the diverging lines that correspond to the corners of the image. If those lines were traced backwards towards the camera, they would all eventually converge at a single point. In Unity, this point is located exactly at the camera's transform position and is known as the centre of perspective. The angle subtended by the lines converging from the top and bottom centres of the screen at the centre of perspective is called the field of view (often abbreviated to FOV).",786],["As stated above, anything that falls outside the diverging lines at the edges of the image will not be visible to the camera, but there are also two other restrictions on what it will render. The near and far clipping planes are parallel to the camera's XY plane and each set at a certain distance along its centre line. Anything closer to the camera than the near clipping plane and anything farther away than the far clipping plane will not be rendered.",786],["The diverging corner lines of the image along with the two clipping planes define a truncated pyramid - the view frustum.",786],["Understanding Vector Arithmetic",787],["Vector arithmetic is fundamental to 3D graphics, physics and animation and it is useful to understand it in depth to get the most out of Unity. Below are descriptions of the main operations and some suggestions about the many things they can be used for.",787],["Addition",787],["When two vectors are added together, the result is equivalent to taking the original vectors as \"steps\", one after the other. Note that the order of the two parameters doesn't matter, since the result is the same either way.",787],["If the first vector is taken as a point in space then the second can be interpreted as an offset or \"jump\" from that position. For example, to find a point 5 units above a location on the ground, you could use the following calculation:-",787],["var pointInAir = pointOnGround + new Vector3(0, 5, 0);",787],["If the vectors represent forces then it is more intuitive to think of them in terms of their direction and magnitude (the magnitude indicates the size of the force). Adding two force vectors results in a new vector equivalent to the combination of the forces. This concept is often useful when applying forces with several separate components acting at once (eg, a rocket being propelled forward may also be affected by a crosswind).",787],["Subtraction",787],["Vector subtraction is most often used to get the direction and distance from one object to another. Note that the order of the two parameters does matter with subtraction:-",787],["// The vector d has the same magnitude as c but points in the opposite direction.",787],["var c = b - a;",787],["var d = a - b;",787],["As with numbers, adding the negative of a vector is the same as subtracting the positive.",787],["// These both give the same result.",787],["var c = a - b;",787],["var c = a + -b;",787],["The negative of a vector has the same magnitude as the original and points along the same line but in the exact opposite direction.",787],["Scalar Multiplication and Division",787],["When discussing vectors, it is common to refer to an ordinary number (eg, a float value) as a scalar. The meaning of this is that a scalar only has \"scale\" or magnitude whereas a vector has both magnitude and direction.",787],["Multiplying a vector by a scalar results in a vector that points in the same direction as the original. However, the new vector's magnitude is equal to the original magnitude multiplied by the scalar value.",787],["Likewise, scalar division divides the original vector's magnitude by the scalar.",787],["These operations are useful when the vector represents a movement offset or a force. They allow you to change the magnitude of the vector without affecting its direction.",787],["When any vector is divided by its own magnitude, the result is a vector with a magnitude of 1, which is known as a normalized vector. If a normalized vector is multiplied by a scalar then the magnitude of the result will be equal to that scalar value. This is useful when the direction of a force is constant but the strength is controllable (eg, the force from a car's wheel always pushes forwards but the power is controlled by the driver).",787],["Dot Product",787],["The dot product takes two vectors and returns a scalar. This scalar is equal to the magnitudes of the two vectors multiplied together and the result multiplied by the cosine of the angle between the vectors. When both vectors are normalized, the cosine essentially states how far the first vector extends in the second's direction (or vice-versa - the order of the parameters doesn't matter).",787],["It is easy enough to think in terms of angles and then find the corresponding cosines using a calculator. However, it is useful to get an intuitive understanding of some of the main cosine values as shown in the diagram below:-",787],["The dot product is a very simple operation that can be used in place of the Mathf.Cos function or the vector magnitude operation in some circumstances (it doesn't do exactly the same thing but sometimes the effect is equivalent). However, calculating the dot product function takes much less CPU time and so it can be a valuable optimization.",787],["Cross Product",787],["The other operations are defined for 2D and 3D vectors and indeed vectors with any number of dimensions. The cross product, by contrast, is only meaningful for 3D vectors. It takes two vectors as input and returns another vector as its result.",787],["The result vector is perpendicular to the two input vectors. The \"left hand rule\" can be used to remember the direction of the output vector from the ordering of the input vectors. If the first parameter is matched up to the thumb of the hand and the second parameter to the forefinger, then the result will point in the direction of the middle finger. If the order of the parameters is reversed then the resulting vector will point in the exact opposite direction but will have the same magnitude.",787],["The magnitude of the result is equal to the magnitudes of the input vectors multiplied together and then that value multiplied by the sine of the angle between them. Some useful values of the sine function are shown below:-",787],["The cross product can seem complicated since it combines several useful pieces of information in its return value. However, like the dot product, it is very efficient mathematically and can be used to optimize code that would otherwise depend on slow transcendental functions.",787],["Unity Remote 3 (DEPRECATED)",788],["Unity Remote 3 (further refered to as Unity Remote) is an application that allows you to use your iOS device as a remote control for your project in Unity. This is useful during development since it is much quicker to test your project in the editor with remote control than to build and deploy it to the device after each change.",788],["DEPRECATED",788],["We are replacing Unity Remote 3 with new Unity Remote 4.",788],["Where can I find Unity Remote?",788],["Unity remote is available for download from the AppStore at no charge. If you prefer to build and deploy the application yourself, you can download the source from the Unity Learn section at the Unity website.",788],["How do I build Unity Remote?",788],["First, download the project source code here and unzip it to your preferred location. The zip file contains an XCode project to build Unity Remote and install it on your device.",788],["Assuming you have already created the provisioning profile and successfully installed iOS builds on your device, you just need to open the Xcode project file UnityRemote.xcodeproj. Once XCode is launched, you should click \"Build and Go\" to install the app on your iOS device. If you have never built and run applications before, we recommend that you try building some of the Apple examples first to familiarize yourself with XCode and iOS.",788],["Once Unity Remote is installed, make sure your device is connected via Wi-Fi to the same network as your development machine or else connected to the machine directly via USB. Launch Unity Remote on your iPhone/iPad while Unity is running on your computer and select your computer from the list that appears. Now, whenever you enter Play mode in the Editor, your device will act as a remote control that you can use for developing and testing your game. You can control the application with the device wirelessly and you will also see a low-res version of the app on the device's screen.",788],["Note: The Unity iOS editor cannot emulate the device's hardware perfectly, so you may not get the exact behavior (graphics performance, touch responsiveness, sounds playback, etc) that you would on a real device.",788],["Xcode shows strange errors while deploying Unity Remote to my device. What should I do?",788],["This indicates that the default Identifier in the Unity Remote project is not compatible with your provisioning profile. You will have to alter this Identifier manually in your XCode project. The Identifier must match your provisioning profile.",788],["You will need to create an AppID with an trailing asterisk if you have not already done so; you can do this in the Program Portal on Apple's iPhone Developer Program. First, go to the Program Portal and choose the AppIDs tab. Then, click the Add ID button in the top right corner and type your usual bundle identifier followed by dot and asterisk (eg, com.mycompany.*) in the App ID Bundle Seed ID and Bundle Identifier field. Add the new AppID to your provisioning profile, then download and reinstall it. Don't forget to restart Xcode afterwards. If you have any problems creating the AppID, consult the Provisioning How-to section on Apple's website.",788],["Open the Unity Remote project with XCode. From the menu, select Project-&gt;Edit Active Target \"Unity Remote\". This will open a new window entitled Target \"Unity Remote\" Info. Select the Properties tab. Change the Identifier property field from com.unity3d.UnityRemote to the bundle identifier in your AppID followed by \".\" (dot) followed by \"UnityRemote\". For example, if your provisioning profile contains ######.com.mycompany.* AppID, then change the Identifier field to com.mycompany.UnityRemote.",788],["Next, select Build-&gt;Clean all targets from the menu, and compile and install Unity Remote again. You may also need to change the active SDK from Simulator to Device - 2.0   Release. There is no problem using SDK 2.0 even if your device runs a newer version of the OS.",788],["I'm getting really poor graphics quality when running my game in Unity Remote. What can I do to improve it?",788],["When you use Unity Remote, the game actually runs on your Mac while its visual content is heavily compressed and streamed to the device. As a result, what you see on the device screen is just a low-res version of what the app would really look like. You should check how the game runs on the device occasionally by building and deploying the app (select File-&gt;Build &amp; Run in the Unity editor).",788],["Unity Remote is laggy. Can I improve it?",788],["The performance of Unity Remote depends heavily on the speed of the Wi-Fi network, the quality of the networking hardware and other factors. For the best experience, create an ad-hoc network between your Mac and iOS device. Click the Airport icon on your Mac and choose \"Create Network\". Then, enter a name and password and click OK. On the device, choose Settings-&gt;Wi-Fi and select the new Wi-Fi network you have just created. Remember that an ad-hoc network is really a wireless connection that does not involve a wireless access point. Therefore, you will usually not have internet access while using ad-hoc networking.",788],["Turning Bluetooth off on both on your iPhone/iPad and on Mac should also improve connection quality.",788],["If you do not need to see the game view on the device, you can turn image synchronization off in the Remote machine list. This will reduce the network traffic needed for the Remote to work.",788],["The connection to Unity Remote is easily lost",788],["This can be due to a problem with the installation or other factors that prevent Unity Remote from functioning properly. Try the following steps in sequence, checking if the performance improves at each step before moving on to the next:-",788],["First of all, check if Bluetooth is switched on. Both your Mac and iOS device should have Bluetooth disabled for best performance.",788],["Delete the settings file located at ~/Library/Preferences/com.unity3d.UnityEditoriPhone.plist",788],["Reinstall the game on your iPhone/iPad.",788],["Reinstall Unity on your Mac.",788],["As a last resort, performing a hard reset on the iOS device can sometimes improve the performance of Unity Remote.",788],["If you still experience problems then try installing Unity Remote on another device (in another location if possible) and see if it gives you better results. There could be problems with RF interference or other software influencing the performance of the wireless adapter on your Mac or iOS device.",788],["Unity Remote doesn't see my Mac. What should I do?",788],["Check if Unity Remote and your Mac are connected to the same wireless network.",788],["Check your firewall settings, router security settings, and any other hardware/software that may filter packets on your network.",788],["Leave Unity Remote running, switch off your Mac's Airport for a minute or two, and switch on again.",788],["Restart both Unity and Unity Remote. Sometimes you also need to cold-restart your iPhone/iPad (hold down the menu and power buttons simultaneously).",788],["Unity Remote uses the Apple Bonjour service, so check that your Mac has it switched on.",788],["Reinstall Unity Remote from the latest Unity iOS package.",788],["Unity 5.0 Activation - Overview",789],["What is the Activation system?",789],["With our Licensing System, we allow you, the user, to manage your Unity license independently. Contacting the Support Team when you need to switch machine is a thing of the past! The system allows instant, automated migration of your machine, with a single click. Read Managing your Unity License for more information.",789],["If you are looking for step-by-step guides to Activation of Unity, please see the child pages.",789],["FAQ",789],["How many machines can I install my copy of Unity on?",789],["Every paid commercial Unity license allows a single person to use Unity on two machines that they have exclusive use of. Be it a Mac and a PC or your Home and Work machines.",789],["Educational licenses sold via Unity or any one of our resellers are only good for a single activation. The same goes for Trial licenses, unless otherwise stated.",789],["The free version of Unity may not be licensed by a commercial entity with annual gross revenues (based on fiscal year) in excess of US$100,000, or by an educational, non-profit or government entity with an annual budget of over US$100,000.",789],["If you are a Legal Entity, you may not combine files developed with the free version of Unity with any files developed by you (or by any third party) through the use of Unity Pro.",789],["See our EULA for further information regarding license usage.",789],["I need to use my license on another machine, but I get that message that my license has been 'Activated too many times'. What should I do?",789],["You will need to 'Return' your license. This enables you to return the license on the machine you no longer require, which in turn enables you to reactivate on a new machine. Refer to  Managing your Unity License, for more information.",789],["My account credentials aren’t recognised when logging in during the Activation process?",789],["Ensure that your details are being entered correctly. Passwords ARE case sensitive, so check you are typing exactly as you registered. You can reset your password using this link.",789],["If you are still having issues logging in, contact 'support@unity3d.com'",789],["Can I use Unity 5.x with my 4.x Serial number?",789],["No, you cannot. In order to use Unity 5.x, you will need to upgrade to a 5.x license. You can do this Online, via our Web Store",789],["I am planning to replace an item of hardware and/or my OS. What should I do?",789],["As with changing machine, you will need to 'Return' your license before making any hardware or OS changes to your machine. If you fail to 'Return' the license, our server will see a request from another machine and inform you that you have reached your activation limit for the license. Refer to the Managing your Unity License, for more information regarding the return of a license.",789],["My machine died without me being able to 'Return' my license, what now?",789],["First, try visiting:",789],["This page should allow you to return activations, through use of the \"Disable all activations\" button.",789],["If the online page doesn't help you, then email support@unity3d.com explaining your situation. Include the details below.",789],["\nThe serial number you were using on the machine.\n",789],["\nThe (local network) name of the machine that died.\n",789],["\nThe order or invoice number used to make the purchase.\n",789],["The Support Team will then be able to 'Return' your license manually. This can take some time.  Note that this process is not possible for licenses that have not been purchased.",789],["I have two licenses, each with an add-on I require, how do I activate them in unison on my machine?",789],["You cannot. A single license may only be used on one machine at any one time.",789],["Where is my Unity 5.x license file stored?",789],["\n/Library/Application Support/Unity/Unity_v5.x.ulf (OS X)\n",789],["\nC:\\ProgramData\\Unity (Windows)\\\n",789],["\nC:\\Users\\(username)\\AppData\\Local\\VirtualStore\\ProgramData\\Unity, if Windows User Account Control (UAC) has restricted your access to C:\\ProgramData\\Unity. (This can happen if the folder is deleted or Unity is started with administrative permissions first time.)\n",789],["For any further assistance, please contact at support@unity3d.com.",789],["Unity Basics",790],["This section is your key to getting started with Unity. It will explain the Unity interface, menu items, using assets, creating scenes, and publishing builds.",790],["When you are finished reading this section, you will understand how Unity works, how to use it effectively, and the steps to put a basic game together.",790],["UnityEvents",791],["UnityEvents are a way of allowing user driven callback to be persisted from edit time to run time without the need for additional programming and script configuration.",791],["UnityEvents are useful for a number of things:",791],["\nContent driven callbacks\n",791],["\nDecoupling systems\n",791],["\nPersistent callbacks\n",791],["\nPreconfigured call events\n",791],["UnityEvents can be added to any MonoBehaviour and are executed from code like a standard .net delegate. When a UnityEvent is added to a MonoBehaviour it appears in the Inspector and persistent callbacks can be added.",791],["Using UnityEvents",791],["To configure a callback in the editor there are a few steps to take:",791],["Make sure your script imports/uses UnityEngine.Events.",791],["Select the + icon to add a slot for a callback",791],["Select the UnityEngine.Object you wish to receive the callback (You can use the object selector for this)",791],["Select the function you wish to be called",791],["You can add more then one callback for the event",791],["When configuring a UnityEvent in the Inspector there are two types of function calls that are supported:",791],["\nStatic. Static calls are preconfigured calls, with preconfigured values that are set in the UI. This means that when the callback is invoked, the target function is invoked with the argument that has been entered into the UI.\n",791],["\nDynamic. Dynamic calls are invoked using an argument that is sent from code, and this is bound to the type of UnityEvent that is being invoked. The UI filters the callbacks and only shows the dynamic calls that are valid for the UnityEvent.\n",791],["Generic UnityEvents",791],["By default a UnityEvent in a Monobehaviour binds dynamically to a void function. This does not have to be the case as dynamic invocation of UnityEvents supports binding to functions with up to 4 arguments. To do this you need to define a custom UnityEvent class that supports multiple arguments. This is quite easy to do:",791],["[Serializable]",791],["public class StringEvent : UnityEvent  {}",791],["By adding an instance of this to your class instead of the base UnityEvent it will allow the callback to bind dynamically to string functions.",791],["This can then be invoked by calling the Invoke() function with a string as argument.",791],["UnityEvents can be defined with up to 4 arguments in their generic definition.",791],["Unity Hotkeys",792],["This page gives an overview of the default Unity Hotkeys. You can also download a PDF of the table for Windows and MacOSX. Where a command has CTRL/CMD as part of the keystroke, this indicates that the Control key should be used on Windows and the Command key on MacOSX.",792],["",792],["Tools ",792],["Keystroke Command ",792],["Q Pan ",792],["W Move ",792],["E Rotate ",792],["R Scale ",792],["T Rect Tool ",792],["Z Pivot Mode toggle ",792],["X Pivot Rotation Toggle ",792],["V Vertex Snap ",792],["CTRL/CMD+LMB Snap ",792],["",792],["",792],["GameObject ",792],["CTRL/CMD+SHIFT+N New game object ",792],["CTRL/CMD+ALT+F Move to view ",792],["CTRL/CMD+SHIFT+F Align with view ",792],["SHIFT+F or double-F Locks the scene view camera to the selected GameObject ",792],["",792],["",792],["Window ",792],["CTRL/CMD+1 Scene ",792],["CTRL/CMD+2 Game ",792],["CTRL/CMD+3 Inspector ",792],["CTRL/CMD+4 Hierarchy ",792],["CTRL/CMD+5 Project ",792],["CTRL/CMD+6 Animation ",792],["CTRL/CMD+7 Profiler ",792],["CTRL/CMD+9 Asset store ",792],["CTRL/CMD+0 Version Control ",792],["CTRL/CMD+SHIFT+C Console ",792],["",792],["",792],["Edit ",792],["CTRL/CMD+Z Undo ",792],["CTRL+Y (Windows only) Redo ",792],["CMD+SHIFT+Z (Mac only) Redo ",792],["CTRL/CMD+X Cut ",792],["CTRL/CMD+C Copy ",792],["CTRL/CMD+V Paste ",792],["CTRL/CMD+D Duplicate ",792],["SHIFT+Del Delete ",792],["F Frame (centre) selection ",792],["CTRL/CMD+F Find ",792],["CTRL/CMD+A Select All ",792],["CTRL/CMD+P Play ",792],["CTRL/CMD+SHIFT+P Pause ",792],["CTRL/CMD+ALT+P Step ",792],["",792],["",792],["Selection ",792],["CTRL/CMD+SHIFT+1 Load Selection 1 ",792],["CTRL/CMD+SHIFT+2 Load Selection 2 ",792],["CTRL/CMD+SHIFT+3 Load Selection 3 ",792],["CTRL/CMD+SHIFT+4 Load Selection 4 ",792],["CTRL/CMD+SHIFT+5 Load Selection 5 ",792],["CTRL/CMD+SHIFT+6 Load Selection 6 ",792],["CTRL/CMD+SHIFT+7 Load Selection 7 ",792],["CTRL/CMD+SHIFT+8 Load Selection 8 ",792],["CTRL/CMD+SHIFT+9 Load Selection 9 ",792],["CTRL/CMD+ALT+1 Save Selection 1 ",792],["CTRL/CMD+ALT+2 Save Selection 2 ",792],["CTRL/CMD+ALT+3 Save Selection 3 ",792],["CTRL/CMD+ALT+4 Save Selection 4 ",792],["CTRL/CMD+ALT+5 Save Selection 5 ",792],["CTRL/CMD+ALT+6 Save Selection 6 ",792],["CTRL/CMD+ALT+7 Save Selection 7 ",792],["CTRL/CMD+ALT+8 Save Selection 8 ",792],["CTRL/CMD+ALT+9 Save Selection 9 ",792],["",792],["",792],["Assets ",792],["CTRL/CMD+R Refresh ",792],["Unity Manual",793],["Unity is made to empower you to create the best interactive entertainment or multimedia experience that you can. This manual is designed to help you learn how to use Unity, from basic to advanced techniques. It can be read from start to finish or used as a reference.",793],["If you find that any question you have is not answered in this manual please ask on Unity Answers or Unity Forums. You will be able to find your answer there.",793],["",793],["",793],["Overview###",793],["This section is your key to getting started with Unity.",793],["",793],["",793],["Editor###",793],["Working with the panels, tabs and views of the Unity Editor.",793],["",793],["",793],["Graphics###",793],["The visual side of Unity including Cameras and Lighting.",793],["",793],["",793],["Physics###",793],["Physics in Unity, including working with rigid bodies and manipulating them in 3D space.",793],["",793],["",793],["Scripting###",793],["Programming your games by using Scripting in Unity.",793],["",793],["",793],["Audio###",793],["Audio in Unity, including clips, sources, listeners, importing and sound settings.",793],["",793],["",793],["Animation###",793],["Animation in Unity.",793],["",793],["",793],["Navigation###",793],["Navigation in Unity, including AI and pathfinding.",793],["",793],["",793],["UI###",793],["Unity's new UI system.",793],["",793],["",793],["Architecture###",793],["Setting up the architecture of your project.",793],["",793],["",793],["Platform Specific###",793],["Specific information for the many non-desktop and web platforms supported by Unity.",793],["",793],["",793],["Unity Overview",794],["Unity is a powerful engine with a variety of tools that can be utilised to meet your specific needs. The editor is intuitive and customisable allowing you a greater freedom in your workflow.",794],["This section  is your key to getting started with Unity. It will follow through the important steps for creating a game in Unity; starting with the asset workflows, then how to build up your scenes and finally to publishing your build.",794],["Unity Remote 4",795],["Unity Remote (currently at version 4), is a downloadable app designed to help with Android or iOS development. The app connects with Unity while you are running your project in Play mode from the editor. The visual output from the editor is sent to the device's screen and the live inputs are sent back to the running project in Unity. This allows you to get a good impression of how your game really looks and handles on the target device without the nuisance of a full build for each test.",795],["With version 4, Unity Remote has been completely rewritten and replaces the separate iOS and Android Remote apps used with earlier versions.",795],["Device and Feature Support",795],["Unity Remote currently supports Android devices (on Windows and OSX via a USB connection) and iOS devices (iPhone, iPad and iPod touch, through USB and only on OSX)",795],["The Game view of the running Unity project is duplicated on the device screen but at a reduced framerate. The following input data from the device is also streamed back to the editor:",795],["Touch input",795],["Accelerometer",795],["Gyroscope",795],["Device camera streams",795],["Compass",795],["GPS",795],["Note that the Remote app simply shows the visual output on the device and takes input from it. The game's actual processing is still done by the Unity editor on the desktop machine and so its performance is not a perfect reflection of the built app.",795],["Obtaining and Using Unity Remote",795],["Unity Remote can be downloaded for free in the form of a Unity project that you build yourself or as a pre-built app from the device's app store:",795],["Unity Project (requires custom building) from the Asset Store: ",795],["Android App from Google Play: ",795],["iOS App from the App Store: ",795],["Having downloaded the app, you should install and run it on your device and also connect the device to your computer using a USB cable.",795],["To enable Unity to work with your device, you should open the Editor Settings in Unity (menu: Edit &gt; Project Settings &gt; Editor) and select the device to use from the Unity Remote section:",795],["If you now click the Play button in the editor, you should see your game appear on the device as well as the Unity game window as Unity connects to the Remote app. While the game plays, input from the device (accelerometer, etc) will be sent to your scripts as if they were running on the device itself.",795],["Troubleshooting",795],["I have more than one device plugged in but only one of them works with Unity",795],["Currently Unity Remote doesn't support multiple connected devices of the same kind (ie, two iPhones or two Androids) and to resolve this, it will automatically pick the first device it finds. However, it is fine to have one iOS and one Android device connected at the same time since you can select which one to use from the Editor Settings mentioned above (menu: Edit &gt; Project Settings &gt; Editor).",795],["I'm getting really poor graphics quality when running my game in Unity Remote",795],["When you use Unity Remote, the game actually runs in the Unity editor while its visual content is streamed to the target device. Since the bandwidth between editor and device is limited, the stream must be compressed heavily for transmission and this compression inevitably reduces the image quality.",795],["In the Unity Remote section of the Editor settings (menu: Edit &gt; Project Settings &gt; Editor), you can switch the compression method between JPEG and PNG and also optionally downsize the resolution of the screen image. PNG compression is \"lossless\" (ie, image quality doesn't degrade) but uses more bandwidth than JPEG. A downsized image has lower bandwidth requirements than one at full resolution. By changing these settings, you can trade image accuracy off against framerate as necessary.",795],["However, you should bear in mind that Unity Remote is only really intended to give a quick approximate check of how your game will look and feel when running on the device. You should make sure that you occasionally do a full build and test the \"real\" app.",795],["The editor doesn't connect to the iOS device on OSX",795],["To establish the connection to the iOS device through USB, Unity uses a 3rd party utility (iproxy) which is known to misbehave occasionally. You can try the following to fix the problem:",795],["Reconnect the device.",795],["Restart the device.",795],["Go to the Editor settings (menu: Edit &gt; Project Settings &gt; Editor) and in the  Unity Remote settings, briefly switch the device to Any Android Device and then back to Any iOS Device.",795],["Restart the Unity editor.",795],["Quit the Unity editor, open the Terminal and execute the command killall unityiproxy. Then, restart the editor again.",795],["In most cases reconnecting or restarting the iOS device is enough to restore the connection.",795],["Unity Web Player and browser communication",796],["The HTML page that contains Unity Web Player content can communicate with that content and vice versa. Basically there are two communication directions:",796],["The web page calls functions inside the Unity web player content.",796],["The Unity web player content calls functions in the web page.",796],["Each of these communication directions is described in more detail below.",796],["Calling Unity web player content functions from the web page",796],["The Unity Web Player object has a function, SendMessage(), that can be called from a web page in order to call functions within Unity web player content. This function is very similar to the GameObject.SendMessage function in the Unity scripting API. When called from a web page you pass an object name, a function name and a single argument, and SendMessage() will call the given function in the given game object.",796],["In order to call the Unity Web Player's SendMessage() function you must first get a reference to the Unity web player object. You can use the GetUnity() function in the default html generated by Unity to obtain a reference to the object. Here is an example JavaScript function that would execute the SendMessage() function on the Unity web player; in turn SendMessage() will then call the function MyFunction() on the game object named MyObject, passing a piece of string data as an argument:",796],["",796],["//initializing the WebPlayer",796],["var u = new UnityObject2();",796],["u.initPlugin(jQuery(\"#unityPlayer\")[0], \"Example.unity3d\");",796],["function SaySomethingToUnity()",796],["u.getUnity().SendMessage(\"MyObject\", \"MyFunction\", \"Hello from a web page!\");",796],["-->",796],["",796],["Inside of the Unity web player content you need to have a script attached to the GameObject named MyObject, and that script needs to implement a function named MyFunction:",796],["function MyFunction(param : String)",796],["Debug.Log(param);",796],["Note: keep in mind that if the function doesn't have any arguments, then an empty string (\"\") should be passed as an argument.",796],["A single string, integer or float argument must be passed when using SendMessage(), the parameter is required on the calling side. If you don't need it then just pass a zero or other default value and ignore it on the Unity side. Additionally, the game object specified by the name can be given in the form of a path name. For example, /MyObject/SomeChild where SomeChild must be a child of MyObject and MyObject must be at the root level due to the '/' in front of its name.",796],["Note: u.getUnity() might return null if the game isn't fully loaded yet, so it's a good idea to check if it's value is not null before using SendMessage(). Or wait for your game to be fully loaded before trying to communicate with it.",796],["Calling web page functions from Unity web player content",796],["In order to call a web page function from within your Unity web player content you must use the Application.ExternalCall() function. Using that function you can call any JavaScript function defined in the web page, passing any number of parameters to it. Here is an example Unity script that uses the Application.ExternalCall() function to call a function named SayHello() found within the web page, passing a piece of string data as an argument:",796],["Application.ExternalCall( \"SayHello\", \"The game says hello!\" );",796],["The web page would need to define the SayHello() function, for example:",796],["",796],["function SayHello( arg )",796],["// show the message",796],["alert( arg );",796],["-->",796],["",796],["Executing arbitrary browser code from Unity web player content",796],["You don't even have to define functions in the embedding web page, instead you can use the Application.ExternalEval() function to execute arbitrary browser code from the web player content.",796],["The following example checks that the page embedding the web player content is fetched from a certain host (unity3d.com), if that's not the case then it will redirect to another URL. This technique can be used to prevent deep linking to your web player content:",796],["Application.ExternalEval(",796],["\"if(document.domain != 'unity3d.com') { document.location='http://unity3d.com'; }\"",796],[");",796],["Upgrade Guide from Unity 3.5 to 4.0",797],["GameObject active state",797],["Unity 4.0 changes how the active state of GameObjects is handled. GameObject's active state is now inherited by child GameObjects, so that any GameObject which is inactive will also cause its children to be inactive. We believe that the new behavior makes more sense than the old one, and should have always been this way. Also, the upcoming new GUI system heavily depends on the new 4.0 behavior, and would not be possible without it. Unfortunately, this may require some work to fix existing projects to work with the new Unity 4.0 behavior, and here is the change:",797],["The old behavior:",797],["Whether a GameObject is active or not was defined by its .active property.",797],["This could be queried and set by checking the .active property.",797],["A GameObject's active state had no impact on the active state of child GameObjects. If you want to activate or deactivate a GameObject and all of its children, you needed to call GameObject.SetActiveRecursively.",797],["When using SetActiveRecursively on a GameObject, the previous active state of any child GameObject would be lost. When you deactivate and then activated a GameObject and all its children using SetActiveRecursively, any child which had been inactive before the call to SetActiveRecursively, would become active, and you had to manually keep track of the active state of children if you want to restore it to the way it was.",797],["Prefabs could not contain any active state, and were always active after prefab instantiation.",797],["The new behavior:",797],["Whether a GameObject is active or not is defined by its own .activeSelf property, and that of all of its parents. The GameObject is active if its own .activeSelf property and that of all of its parents is true. If any of them are false, the GameObject is inactive.",797],["This can be queried using the .activeInHierarchy property.",797],["The .activeSelf state of a GameObject can be changed by calling GameObject.SetActive. When calling SetActive (false) on a previously active GameObject, this will deactivate the GameObject and all its children. When calling SetActive (true) on a previously inactive GameObject, this will activate the GameObject, if all its parents are active. Children will be activated when all their parents are active (i.e., when all their parents have .activeSelf set to true).",797],["This means that SetActiveRecursively is no longer needed, as active state is inherited from the parents. It also means that, when deactivating and activating part of a hierarchy by calling SetActive, the previous active state of any child GameObject will be preserved.",797],["Prefabs can contain active state, which is preserved on prefab instantiation.",797],["Example:",797],["You have three GameObjects, A, B and C, so that B and C are children of A.",797],["Deactivate C by calling C.SetActive(false).",797],["Now, A.activeInHierarchy == true, B.activeInHierarchy == true and C.activeInHierarchy == false.",797],["Likewise, A.activeSelf == true, B.activeSelf == true and C.activeSelf == false.",797],["Now we deactivate the parent A by calling A.SetActive(false).",797],["Now, A.activeInHierarchy == false, B.activeInHierarchy == false and C.activeInHierarchy == false.",797],["Likewise, A.activeSelf == false, B.activeSelf == true and C.activeSelf == false.",797],["Now we activate the parent A again by calling A.SetActive(true).",797],["Now, we are back to A.activeInHierarchy == true, B.activeInHierarchy == true and C.activeInHierarchy == false.",797],["Likewise, A.activeSelf == true, B.activeSelf == true and C.activeSelf == false.",797],["The new active state in the editor",797],["To visualize these changes, in the Unity 4.0 editor, any GameObject which is inactive (either because it's own .activeSelf property is set to false, or that of one of it's parents), will be greyed out in the hierarchy, and have a greyed out icon in the inspector. The GameObject's own .activeSelf property is reflected by it's active checkbox, which can be toggled regardless of parent state (but it will only activate the GameObject if all parents are active).",797],["How this affects existing projects:",797],["To make you aware of places in your code where this might affect you, the GameObject.active property and the GameObject.SetActiveRecursively() function have been deprecated.",797],["They are, however still functional. Reading the value of GameObject.active is equivalent to reading GameObject.activeInHierarchy, and setting GameObject.active is equivalent to calling GameObject.SetActive(). Calling GameObject.SetActiveRecursively() is equivalent to calling GameObject.SetActive() on the GameObject and all of it's children.",797],["Exiting scenes from 3.5 are imported by setting the selfActive property of any GameObject in the scene to it's previous active property.",797],["As a result, any project imported from previous versions of Unity should still work as expected (with compiler warnings, though), as long as it does not rely on having active children of inactive GameObjects (which is no longer possible in Unity 4.0).",797],["If your project relies on having active children of inactive GameObjects, you need to change your logic to a model which works in Unity 4.0.",797],["Changes to the asset processing pipeline",797],["During the development of 4.0 our asset import pipeline has changed in some significant ways internal in order to improve performance, memory usage and determinism. For the most part these changes does not have an impact on the user with one exception: Objects in assets are not made persistent until the very end of the import pipeline and any previously imported version of an assets will be completely replaced.",797],["The first part means that during post processing you cannot get the correct references to objects in the asset and the second part means that if you use the references to a previously imported version of the asset during post processing do store modification those modifications will be lost.",797],["Example of references being lost because they are not persistent yet",797],["Consider this small example:",797],["public class ModelPostprocessor : AssetPostprocessor",797],["public void OnPostprocessModel(GameObject go)",797],["PrefabUtility.CreatePrefab(\"Prefabs/\" + go.name, go);",797],["In Unity 3.5 this would create a prefab with all the correct references to the meshes and so on because all the meshes would already have been made persistent, but since this is not the case in Unity 4.0 the same post processor will create a prefab where all the references to the meshes are gone, simply because Unity 4.0 does not yet know how to resolve the references to objects in the original model prefab. To correctly copy a modelprefab in to prefab you should use OnPostProcessAllAssets to go through all imported assets, find the modelprefab and create new prefabs as above.",797],["Example of references to previously imported assets being discarded",797],["The second example is a little more complex but is actually a use case we have seen in 3.5 that broke in 4.0. Here is a simple ScriptableObject with a references to a mesh.",797],["public class Referencer : ScriptableObject",797],["public Mesh myMesh;",797],["We use this ScriptableObject to create an asset with references to a mesh inside a model, then in our post processor we take that reference and give it a different name, the end result being that when we have reimported the model the name of the mesh will be what the post processor determines.",797],["public class Postprocess : AssetPostprocessor",797],["public void OnPostprocessModel(GameObject go)",797],["Referencer myRef = (Referencer)AssetDatabase.LoadAssetAtPath(\"Assets/MyRef.asset\", typeof(Referencer));",797],["myRef.myMesh.name = \"AwesomeMesh\";",797],["This worked fine in Unity 3.5 but in Unity 4.0 the already imported model will be completely replaced, so changing the name of the mesh from a previous import will have no effect. The Solution here is to find the mesh by some other means and change its name. What is most important to note is that in Unity 4.0 you should ONLY modify the given input to the post processor and not rely on the previously imported version of the same asset.",797],["Mesh Read/Write option",797],["Unity 4.0 adds a \"Read/Write Enabled\" option in Mesh import settings. When this option is turned off, it saves memory since Unity can unload a copy of mesh data in the game.",797],["However, if you are scaling or instantiating meshes at runtime with a non-uniform scale, you may have to enable \"Read/Write Enabled\" in their import settings. The reason is that non-uniform scaling requires the mesh data to be kept in memory. Normally we detect this at build time, but when meshes are scaled or instantiated at runtime you need to set this manually. Otherwise they might not be rendered in game builds correctly.",797],["Mesh optimization",797],["The Model Importer in Unity 4.0 has become better at mesh optimization. The \"Mesh Optimization\" checkbox in the Model Importer in Unity 4.0 is now enabled by default, and will reorder the vertices in your Mesh for optimal performance. You may have some post-processing code or effects in your project which depend on the vertex order of your meshes, and these might be broken by this change. In that case, turn off \"Mesh Optimization\" in the Mesh importer. Especially, if you are using the SkinnedCloth component, mesh optimization will cause your vertex weight mapping to change. So if you are using SkinnedCloth in a project imported from 3.5, you need to turn off \"Mesh Optimization\" for the affected meshes, or reconfigure your vertex weights to match the new vertex order.",797],["Mobile input",797],["With Unity 4.0 mobile sensor input got better alignment between platforms, which means you can write less code when handling typical input on mobile platforms. Now acceleration and gyro input will follow screen orientation in the same way both on iOS and Android platforms. To take advantage of this change you should refactor your input code and remove platform and screen orientation specific code when handling acceleration and gyro input. You still can get old behavior on iOS by setting Input.compensateSensors to false.",797],["Using Components",798],["Components are the nuts &amp; bolts of objects and behaviors in a game. They are the functional pieces of every GameObject. If you don't yet understand the relationship between Components and GameObjects, read the GameObjects page before going any further.",798],["A GameObject is a container for many different Components. By default, all GameObjects automatically have a Transform Component. This is because the Transform dictates where the GameObject is located, and how it is rotated and scaled. Without a Transform Component, the GameObject wouldn't have a location in the world. Try creating an empty GameObject now as an example. Click the GameObject-&gt;Create Empty menu item. Select the new GameObject, and look at the Inspector.",798],["Remember that you can always use the Inspector to see which Components are attached to the selected GameObject. As Components are added and removed, the Inspector will always show you which ones are currently attached. You will use the Inspector to change all the properties of any Component (including scripts).",798],["Adding Components",798],["You can add Components to the selected GameObject through the Components menu. We'll try this now by adding a Rigidbody to the empty GameObject we just created. Select it and choose Component-&gt;Physics-&gt;Rigidbody from the menu. When you do, you will see the Rigidbody's properties appear in the Inspector. If you press Play while the empty GameObject is still selected, you might get a little surprise. Try it and notice how the Rigidbody has added functionality to the otherwise empty GameObject. (The y-component of the GameObject starts to decrease. This is because the physics engine in Unity is causing the GameObject to fall under gravity.)",798],["Another option is to use the Component Browser, which can be activated with the Add Component button in the object's inspector.",798],["The browser lets you navigate the components conveniently by category and also has a search box that you can use to locate components by name.",798],["You can attach any number or combination of Components to a single GameObject. Some Components work best in combination with others. For example, the Rigidbody works with any Collider. The Rigidbody controls the Transform through the NVIDIA PhysX physics engine, and the Collider allows the Rigidbody to collide and interact with other Colliders.",798],["If you want to know more about using a particular Component, you can read about any of them in the relevant Component Reference page. You can also access the reference page for a Component from Unity by clicking on the small ? on the Component's header in the Inspector.",798],["Editing Components",798],["One of the great aspects of Components is flexibility. When you attach a Component to a GameObject, there are different values or",798],["Properties in the Component that can be adjusted in the editor while building a game, or by scripts when running the game. There are two main types of Properties: Values and References.",798],["Look at the image below. It is an empty GameObject with an Audio Source Component. All the values of the Audio Source in the Inspector are the default values.",798],["This Component contains a single Reference property, and seven Value properties. Audio Clip is the Reference property. When this Audio Source begins playing, it will attempt to play the audio file that is referenced in the Audio Clip property. If no reference is made, an error will occur because there is no audio to be played. You must reference the file within the Inspector. This is as easy as dragging an audio file from the Project View onto the Reference Property or using the Object Selector.",798],["Components can include references to any other type of Component, GameObjects, or Assets. You can read more about assigning references on the page about Editing Properties.",798],["The remaining properties on the Audio Clip are all Value properties. These can be adjusted directly in the Inspector. The Value properties on the Audio Clip are all toggles, numeric values, drop-down fields, but value properties can also be text strings, colors, curves, and other types. You can read more about these and about editing value properties on the page about editing value properties.",798],["Component Context Menu commands",798],["The context menu for a component has a number of useful commands.",798],["The same commands are also available from the \"gear\" icon in the extreme top-right of the component's panel in the inspector.",798],["Reset",798],["This command restores the values the component's properties had before the most recent editing session.",798],["Remove",798],["A Remove Component command is available for cases where you no longer need the component attached to the GameObject. Note that there are some combinations of components that depend on each other (eg, Hinge Joint only works when a Rigidbody is also attached); you will see a warning message if you try to remove components that others depend on.",798],["Move Up/down",798],["The Image Effects components each apply a specific visual effect to the rendered view, but the order in which the effects are applied is important. The context menu has Move Up and Move Down",798],["Copy/Paste",798],["The Copy Component command stores the type and current property settings of a component. These can then be pasted into another component of the same type with Paste Component Values. You can also create a new component with the copied values on an object by using Paste Component As New",798],["Testing out Properties",798],["While your game is in Play Mode, you are free to change properties in any GameObject's Inspector. For example, you might want to experiment with different heights of jumping. If you create a Jump Height property in a script, you can enter Play Mode, change the value, and press the jump button to see what happens. Then without exiting Play Mode you can change it again and see the results within seconds. When you exit Play Mode, your properties will revert to their pre-Play Mode values, so you don't lose any work. This workflow gives you incredible power to experiment, adjust, and refine your gameplay without investing a lot of time in iteration cycles. Try it out with any property in Play Mode. We think you'll be impressed.",798],["Managed Plugins",799],["Usually, scripts are kept in a project as source files and compiled by Unity whenever the source changes. However, it is also possible to compile a script to a dynamically linked library (DLL) using an external compiler. The resulting DLL can then be added to the project and the classes it contains can be attached to objects just like normal scripts.",799],["It is generally much easier to work with scripts than DLLs in Unity. However, you may have access to third party Mono code which is supplied in the form of a DLL. When developing your own code, you may be able to use compilers not supported by Unity (F#, for example) by compiling the code to a DLL and adding it to your Unity project. Also, you may want to supply Unity code without the source (for an Asset Store product, say) and a DLL is an easy way to do this.",799],["Creating a DLL",799],["To create a DLL, you will first need a suitable compiler. Not all compilers that produce .NET code are guaranteed to work with Unity, so it may be wise to test the compiler with some available code before doing significant work with it. If the DLL contains no code that depends on the Unity API then you can simply compile it to a DLL using the appropriate compiler options. If you do want to use the Unity API then you will need to make Unity's own DLLs available to the compiler. On a Mac, these are contained in the application bundle (you can see the internal structure of the bundle by using the Show Package Contents command from the contextual menu; right click or ctrl-click the Unity application):-",799],["The path to the Unity DLLs will typically be",799],["/Applications/Unity/Unity.app/Contents/Frameworks/Managed/",799],["...and the two DLLs are called UnityEngine.dll and UnityEditor.dll.",799],["On Windows, the DLLs can be found in the folders that accompany the Unity application. The path will typically be",799],["C:\\Program Files\\Unity\\Editor\\Data\\Managed",799],["...while the names of the DLLs are the same as for Mac OS.",799],["The exact options for compiling the DLL will vary depending on the compiler used. As an example, the command line for the Mono C# compiler, mcs, might look like this on Mac OS:-",799],["mcs -r:/Applications/Unity/Unity.app/Contents/Frameworks/Managed/UnityEngine.dll -target:library ClassesForDLL.cs",799],["Here, the -r option specifies a path to a library to be included in the build, in this case the UnityEngine library. The -target option specifies which type of build is required; the word \"library\" is used to select a DLL build. Finally, the name of the source file to compile is ClassesForDLL.cs (it is assumed that this file is in the current working folder, but you could specify the file using a full path if necessary). Assuming all goes well, the resulting DLL file will appear shortly in the same folder as the source file.",799],["Using the DLL",799],["Once compiled, the DLL file can simply be dragged into the Unity project like any other asset. The DLL asset has a foldout triangle which can be used to reveal the separate classes inside the library. Classes that derive from MonoBehaviour can be dragged onto Game Objects like ordinary scripts. Non-MonoBehaviour classes can be used directly from other scripts in the usual way.",799],["Step by Step Guide for MonoDevelop and Visual Studio",799],["This section explains how to build and integrate a simple DLL example with MonoDevelop and Visual Studio and also how to prepare a debugging session for the DLL.",799],["Setting Up the Project",799],["First, open MonoDevelop or Visual Studio and create a new project. In MonoDevelop, you do this by selecting File &gt; New &gt; Solution and then choosing C# &gt; Library. In Visual Studio, you should select File &gt; New &gt; Project and then choose Visual C# &gt; Class Library.",799],["You then need to fill out the information for the new library:",799],["Name is the namespace (for this example use \"DLLTest\" as the name).",799],["Location is the parent folder of the project.",799],["Solution name is the folder of the project.",799],["Next, you should add references to the Unity DLLs. In MonoDevelop, you should open the contextual menu For References in the Solution Browser and choose Edit References. Then, choose the option .Net Assembly tab &gt; File System &gt; select file. In Visual Studio, open the contextual menu For References in the Solution Explorer and choose Add Reference. Then, choose the option Browse &gt; Browse &gt; select file.",799],["At this stage, you will have the option to select the required DLL file. On Mac OSX, the file can be found at",799],["Applications/Unity.app/Contents/Frameworks/Managed/UnityEngine.dll",799],["...while on Windows, the path is",799],["Program Files\\Unity\\Editor\\Data\\Managed\\UnityEngine.dll",799],["Code",799],["For this example, rename the class to \"MyUtilities\" in the Solution browser and replace its code with the following:",799],["using System;",799],["using UnityEngine;",799],["namespace DLLTest {",799],["public class MyUtilities {",799],["public int c;",799],["public void AddValues(int a, int b) {",799],["c = a + b;",799],["public static int GenerateRandom(int min, int max) {",799],["System.Random rand = new System.Random();",799],["return rand.Next(min, max);",799],["With the code in place, build the project to generate the DLL file along with its debug symbols.",799],["Using the DLL in Unity",799],["For this example, create a new project in Unity and copy the built file &lt;project folder&gt;/bin/Debug/DLLTest.dll into the Assets folder. Then, create a C# script called \"Test\" in Assets, and replace its contents with the following code:",799],["using UnityEngine;",799],["using System.Collections;",799],["using DLLTest;",799],["void Start () {",799],["MyUtilities utils = new MyUtilities();",799],["utils.AddValues(2, 3);",799],["print(\"2 + 3 = \" + utils.c);",799],["void Update () {",799],["print(MyUtilities.GenerateRandom(0, 100));",799],["When you attach this script to an object in the scene and press Play, you will see the output of the code from the DLL in the Console window.",799],["Setting Up a Debugging Session for the DLL",799],["Firstly, you should repare the debug symbols for the DLL. In MonoDevelop, copy the built file &lt;project folder&gt;/bin/Debug/DLLTest.dll.mdb into the Assets/Plugins folder. In Visual Studio, execute",799],["Program Files\\Unity\\Editor\\Data\\Mono\\lib\\mono\\2.0\\pdb2mdb.exe",799],["in the command prompt, passing &lt;project folder&gt;\\bin\\Debug\\DLLTest.pdb as a parameter. Then, copy the converted file &lt;project folder&gt;\\bin\\Debug\\DLLTest.dll.mdb into Assets/Plugins.",799],["Next, open the \"Test\" script in MonoDevelop. Make sure the Unity debugger is enabled from the Tools menu (Windows) or MonoDevelop-Unity menu (MacOS). The option you need from this menu is Add-in Manager &gt; Installed tab &gt; Unity &gt; select Mono Soft Debugger Support for Unity &gt; Enable.",799],["With this setup completed, you can debug code that uses the DLL in Unity in the usual way. See the Scripting Tools section for further information about debugging.",799],["Using Humanoid Characters",800],["In order to take full advantage of Mecanim's humanoid animation system and retargeting, you need to have a rigged and skinned humanoid type mesh.",800],["A character model is generally made up of polygons in a 3D package or converted to polygon or triangulated mesh, from a more complex mesh type before export.",800],["A joint hierarchy or skeleton which defines the bones inside the mesh and their movement in relation to one another, must be created to control the movement of the character. The process for creating the joint hierarchy is known as rigging.",800],["The mesh or skin must then be connected to the joint hierarchy in order to define which parts of the character mesh move when a given joint is animated. The process of connecting the skeleton to the mesh is known as skinning.",800],["How to obtain humanoid models",800],["There are three main ways to obtain humanoid models for with the Mecanim Animation system:",800],["Use a procedural character system or character generator such as Poser, Makehuman or Mixamo. Some of these systems will rig and skin your mesh (eg, Mixamo) while others will not. Furthermore, these methods may require that you reduce the number of polygons in your original mesh to make it suitable for use in Unity.",800],["Purchase demo examples and character content from the Unity Asset Store.",800],["Also, you can of course prepare your own character from scratch.",800],["Export &amp; Verify",800],["Unity imports a number of different generic and native 3D file formats. The format we recommend for exporting and verifying your model is FBX 2012 since it will allow you to:",800],["Export the mesh with the skeleton hierarchy, normals, textures and animation",800],["Re-import into your 3D package to verify your animated model has exported as you expected",800],["Export animations without meshes",800],["Using Lights",801],["Lights are very easy to use in Unity - you simply need to create a light of the desired type (eg, from the menu GameObject &gt; Light &gt; Point Light) and place it where you want it in the scene. If you enable scene view lighting (the \"sun\" button on the toolbar) then you can see a preview of how the lighting will look as you move light objects and set their parameters.",801],["A directional light can generally be placed anywhere in the scene (except when it is using a Cookie) with the forward/Z axis indicating the direction. A spot light also has a direction but since it has a limited range, its position does matter. The shape parameters of spot, point and area lights can be adjusted from the inspector or by using the lights' Gizmos directly in the scene view.",801],["Guidelines for Placing Lights",801],["A directional light often represents the sun and has a significant effect on the look of a scene. The direction of the light should point slightly downwards but you will usually want to make sure that it also makes a slight angle with major objects in the scene. For example, a roughly cubic object will be more interestingly shaded and appear to \"pop\" out in 3D much more if the light isn't coming head-on to one of the faces.",801],["Spot lights and point lights usually represent artificial light sources and so their positions are usually determined by scene objects. One common pitfall with these lights is that they appear to have no effect at all when you first add them to the scene. This happens when you adjust the range of the light to fit neatly within the scene. The range of a light is the limit at which the light's brightness dims to zero. If you set, say, a spot light so the base of the cone neatly lands on the floor then the light will have little or no effect unless another object passes underneath it. If you want the level geometry to be illuminated then you should expand point and spot lights so they pass through the walls and floors.",801],["Color and Intensity",801],["A light's color and intensity (brightness) are properties you can set from the inspector. The default intensity and white color are fine for \"ordinary\" lighting that you use to apply shading to objects but you might want to vary the properties to produce special effects. For example, a glowing green forcefield might be bright enough to bathe surrounding objects in intense green light; car headlights (especially on older cars) typically have a slight yellow color rather than brilliant white. These effects are most often used with point and spot lights but you might change the color of a directional light if, say, your game is set on a distant planet with a red sun.",801],["Using the Inspector",802],["The Inspector is used to view and edit object properties and also preferences and other settings within Unity.",802],["When you select a GameObject in the Hierarchy or Scene View, the Inspector will show the Properties of all Components and Materials on that object and allow you to edit them. For a custom Script component, the public variables of that script are also shown in the inspector and can be viewed and edited like the properties of Unity's built-in components. This allows you to set parameters and default values in your scripts easily without modifying the code.",802],["Additionally, the Inspector is used to edit import options for Assets (files containing textures, 3D models, fonts, etc). Some scene and project-wide settings are also viewed in the inspector, the Settings Managers being the main example.",802],["This section of the manual explains the various things the inspector can do and how you can make use of them.",802],["Using the Mesh Class",803],["The Mesh class is the basic script interface to an object's mesh geometry. It uses arrays to represent the vertices, triangles, normals and texture coordinates and also supplies a number of other useful properties and functions to assist mesh generation.",803],["Accessing an Object's Mesh",803],["The mesh data is attached to an object using the Mesh Filter component (and the object will also need a Mesh Renderer to make the geometry visible). This component is accessed using the familiar GetComponent function:-",803],["var mf: MeshFilter = GetComponent.();",803],["// Use mf.mesh to refer to the mesh itself.",803],["Adding the Mesh Data",803],["The Mesh object has properties for the vertices and their associated data (normals and UV coordinates) and also for the triangle data. The vertices may be supplied in any order but the arrays of normals and UVs must be ordered so that the indices all correspond with the vertices (ie, element 0 of the normals array supplies the normal for vertex 0, etc). The vertices are Vector3s representing points in the object's local space. The normals are normalised Vector3s representing the directions, again in local coordinates. The UVs are specified as Vector2s, but since the Vector2 type doesn't have fields called U and V, you must mentally convert them to X and Y respectively.",803],["The triangles are specified as triples of integers that act as indices into the vertex array. Rather than use a special class to represent a triangle the array is just a simple list of integer indices. These are taken in groups of three for each triangle, so the first three elements define the first triangle, the next three define the second triangle, and so on. An important detail of the triangles is the ordering of the corner vertices. They should be arranged so that the corners go around clockwise as you look down on the visible outer surface of the triangle, although it doesn't matter which corner you start with.",803],["See Also",803],["Anatomy of a Mesh page.",803],["Mesh scripting class reference.",803],["Using the Scene View",804],["TheScene View is your interactive sandbox. You will use the Scene View to select and position environments, the player, the camera, enemies, and all other GameObjects. Manoeuvring and manipulating objects within the Scene View are some of the most important functions in Unity, so it's important to be able to do them quickly.",804],["Using the Chain of Trust system in the Web Player",805],["In this section you will learn how to create strongly-named assemblies and use them, in conjunction with Javascript, to interact with your own custom back-ends.",805],["The Chain of Trust system allows external internet applications to trust requests which originate from within a Unity Web Player. This is useful if you wish to provide a full-featured API to Unity Developers creating games within the Unity Web Player. To use the Chain of Trust system, you must have some sort of internet application backend which accepts requests; the most common example would be a web application with a REST API. You must also have a Managed C# assembly which contains code for calling your internet application.",805],["Generate a key pair",805],["The first step in establishing a chain of trust is to create the cryptographic key pair needed to sign your assembly. Do this on Windows, OS X or Linux using the SN tool.",805],["To create a new key pair, open a command line terminal and type:",805],["sn -k myNewKey.snk",805],["Replace myNewKey.snk with the file name you'd prefer for your key pair. The file name does not matter from the point of view of the Chain of Trust system.",805],["Keep your .SNK file secure! If this file is leaked, a malicious developer can spoof your assembly.",805],["Sign your assembly",805],["Next take your Managed C# assembly (which you will use to call your backend), and sign it using the key pair you generated. You will need to use the al tool, which is included with Windows, OS X and Linux.",805],["Signing the assembly is a simple process.",805],["Open a command line terminal, navigate to your Managed C# assembly and type:",805],["al /out:mySignedAssembly.dll myUnsignedAssembly.dll /keyfile:myNewSky.snk",805],["mySignedAssembly.dll is the desired, final name of your assembly.",805],["myUnsignedAssembly.dll is name of your normal, unsigned Managed C# assembly.",805],["myNewKey.snk is name of your cryptographic key pair file.",805],["Once al finishes running, your signed assembly will be ready. Drop it into your Unity project for use with the Chain of Trust system.",805],["Inject your secret",805],["You can inject secrets into the Unity Web Player at any time after your Unity game has loaded. This is done with the Javascript SendMessage function exposed on the UnityObject2 Javascript object.",805],["When you pass a specially-formatted message to a certain game object, the Chain of Trust system detects that you want to inject a secret and intercept the message. You do not need to create or rename any game objects to use this system. With a UnityObject2 instance called u the Javascript call will be:",805],["u.GetUnity().SendMessage(\"ChainOfTrust_SetValueASDF\", \".\", \"name=mySecretDataName;value=mySecretValue;publickey=publicKeyTokenOfMyAssembly\");",805],["The SendMessage function is similar to the standard MonoBehaviour/SendMessage function. It takes three nominal arguments:",805],["the name of the target game object,",805],["the name of the method to invoke, and",805],["a string argument.",805],["With the Chain of Trust system, the name of the method is ignored entirely. The name of the target game object must begin with ChainOfTrust_SetValue, however, any characters appended after ChainOfTrust_SetValue will be safely ignored.",805],["The formatting of the string argument is very important. The Chain of Trust system will split it into three parts, separated by semicolons. It expects:",805],["a name,",805],["a value and",805],["a publickey.",805],["Capitalization is important! All three of these keywords must be lower case and followed by an equals sign (=).",805],["You may provide any name for your secret data. Simply replace mySecretDataName in the example above.",805],["The value is your shared key, or other secret data that you wish to store in the Chain of Trust system. Precisely what this value consists of is specific to your particular application. Replace mySecretDataValue in the example above.",805],["The publickey is the public key token with which you signed your Managed C# assembly. You can find it on your signed assembly using the sn tool:",805],["sn -T mySignedAssembly.dll",805],["Copy the entire public key token, without leading or trailing whitespace, and replace myPublicKeyToken in the example above.",805],["Add random data to the Virtual Game Object's name. You cannot ensure that everyone using the Web Player has the latest version of the Web Player runtime, meaning that not all Web Players will intercept your SendMessage call. If a malicious developer looks at your Javascript and sees the name of the virtual game object and function which you are using, they could create a Unity game which contains a game object with that name and implements that method. In the very specific case that this malicious developer's code runs on an outdated version of the Web Player, then their code could intercept your shared secret and use it to make unwanted calls to your backend. By randomizing the game object's name, it makes it more difficult for someone to intercept your Chain of Trust calls in older runtimes.",805],["Retrieve your secret",805],["Once a secret has been injected into the Unity Web Player, you can only retrieve it with a cryptographically-signed (\"strong named\") Managed C# assembly with a matching public key token.",805],["The Managed C# assembly must call Security.GetChainOfTrustValue to retrieve the secret. GetChainOfTrustValue requires you to pass in the name of the secret, as specified at injection time in the name= clause of the payload.",805],["GetChainOfTrustValue returns the value of your secret as a clear-text string, which you can then use within your assembly.",805],["For an injection payload name=mySecret;value=superSecretData;publickey=A92181sn828O, the code to retrieve your secret within your Managed C# assembly will be:",805],["string myValue = Security.GetChainOfTrustValue(\"mySecret\");",805],["As you've gone through a lot of trouble to keep the value of your secret secure, you should not return the secret's value to any functions or code outside your Managed C# assembly.",805],["Any attempts to call Security.GetChainOfTrustValue from code that is not within a signed assembly, or from within a signed assembly whose signature does not match the secret's specified public key, will generate an error in the logs and Security.GetChainOfTrustValue will return an empty string.",805],["Using Webplayer Templates",806],["When you build a webplayer project, Unity embeds the player in an HTML page so that it can be played in the browser. The default page is very simple, with just a white background and some minimal text. There are actually three different variations of this page which can be selected from the Player Settings inspector (menu: Edit &gt; Project Settings &gt; Player).",806],["The built-in HTML pages are fine for testing and demonstrating a minimal player but for production purposes, it is often desirable to see the player hosted in the page where it will eventually be deployed. For example, if the Unity content interacts with other elements in the page via the external call interface then it must be tested with a page that provides those interacting elements. Unity allows you to supply your own pages to host the player by using webplayer templates.",806],["Structure of a Webplayer Template",806],["Custom templates are added to a project by creating a folder called \"WebPlayerTemplates\" in the Assets folder - the templates themselves are sub-folders within this folder. Each template folder contains an index.html or index.php file along with any other resources the page needs, such as images or stylesheets.",806],["Once created, the template will appear among the options on the Player Settings inspector. (the name of the template will be the same as its folder). Optionally, the folder can contain a file named thumbnail.png, which should have dimensions of 128x128 pixels. The thumbnail image will be displayed in the inspector to hint at what the finished page will look like.",806],["Template Tags",806],["During the build process, Unity will look for special tag strings in the page text and replace them with values supplied by the editor. These include the name, onscreen dimensions and various other useful information about the player.",806],["The tags are delimited by percent signs (%) in the page source. For example, if the product name is defined as \"MyPlayer\" in the Player settings:-",806],["%UNITY_WEB_NAME%",806],["...in the template's index file will be replaced with",806],["MyPlayer",806],["...in the host page generated for the build. The complete set of tags is given below:-",806],["UNITY_WEB_NAME: Name of the webplayer.",806],["UNITY_WIDTH and UNITY_HEIGHT: Onscreen width and height of the player in pixels.",806],["UNITY_WEB_PATH: Local path to the webplayer file.",806],["UNITY_UNITYOBJECT_LOCAL: A browser JavaScript file called UnityObject2.js is generally used to embed the player in the host page and provide part of the interaction between Unity and the host's JavaScript. This is normally supplied to a page by downloading from Unity's website. However, this requires an internet connection and causes problems if the page is to be deployed offline from the user's hard drive. This tag provides the local path to the UnityObject.js file, which will be generated if the Offline Deployment option is enabled in the Build Settings.",806],["UNITY_UNITYOBJECT_URL: By default, the webpage will download UnityObject2.js from Unity's website as necessary (ie, the Offline Deployment option is disabled). This tag provides the URL that will be used to download the file.",806],["UNITY_UNITYOBJECT_DEPENDENCIES: The UnityObject2.js file has dependencies; this tag will be replaced with those dependencies.",806],["UNITY_BETA_WARNING: If the webplayer has been built with a beta version of Unity, this tag will be replaced with a short warning message about the fact. Otherwise, it is replaced with nothing.",806],["UNITY_CUSTOM_SOME_TAG: If you add a tag to the index file with the form UNITY_CUSTOM_XXX, then this tag will appear in the Player Settings when your template is selected. For example, if something like",806],["Unity Web Player   %UNITY_CUSTOM_MYTAG%",806],["...is added to the source, the Player Settings will look like this:-",806],["The textbox next to the tag's name contains the text that the custom tag will be replaced with during the build.",806],["Example",806],["To illustrate the use of the template tags, here is the HTML source that Unity uses for its default webplayer build.",806],["",806],["",806],["",806],["",806],["Unity Web Player   %UNITY_WEB_NAME%",806],["%UNITY_UNITYOBJECT_DEPENDENCIES%",806],["",806],["var unityObjectUrl = \"%UNITY_UNITYOBJECT_URL%\";",806],["if (document.location.protocol == 'https:')",806],["unityObjectUrl = unityObjectUrl.replace(\"http://\", \"https://ssl-\");",806],["document.write('&lt;\\/script>');",806],["-->",806],["",806],["",806],["jQuery(function() {",806],["var config = {",806],["width: %UNITY_WIDTH%,",806],["height: %UNITY_HEIGHT%,",806],["params: %UNITY_PLAYER_PARAMS%",806],["};",806],["var u = new UnityObject2(config);",806],["var $missingScreen = jQuery(\"#unityPlayer\").find(\".missing\");",806],["var $brokenScreen = jQuery(\"#unityPlayer\").find(\".broken\");",806],["$missingScreen.hide();",806],["$brokenScreen.hide();",806],["u.observeProgress(function (progress) {",806],["switch(progress.pluginStatus) {",806],["case \"broken\":",806],["$brokenScreen.find(\"a\").click(function (e) {",806],["e.stopPropagation();",806],["e.preventDefault();",806],["u.installPlugin();",806],["return false;",806],["});",806],["$brokenScreen.show();",806],["break;",806],["case \"missing\":",806],["$missingScreen.find(\"a\").click(function (e) {",806],["e.stopPropagation();",806],["e.preventDefault();",806],["u.installPlugin();",806],["return false;",806],["});",806],["$missingScreen.show();",806],["break;",806],["case \"installed\":",806],["$missingScreen.remove();",806],["break;",806],["case \"first\":",806],["break;",806],["});",806],["u.initPlugin(jQuery(\"#unityPlayer\")[0], \"%UNITY_WEB_PATH%\");",806],["});",806],["-->",806],["",806],["",806],["body {",806],["font-family: Helvetica, Verdana, Arial, sans-serif;",806],["background-color: white;",806],["color: black;",806],["text-align: center;",806],["a:link, a:visited {",806],["color: #000;",806],["a:active, a:hover {",806],["color: #666;",806],["p.header {",806],["font-size: small;",806],["p.header span {",806],["font-weight: bold;",806],["p.footer {",806],["font-size: x-small;",806],["div.content {",806],["margin: auto;",806],["width: %UNITY_WIDTH%px;",806],["div.broken,",806],["div.missing {",806],["margin: auto;",806],["position: relative;",806],["top: 50%;",806],["width: 193px;",806],["div.broken a,",806],["div.missing a {",806],["height: 63px;",806],["position: relative;",806],["top: -31px;",806],["div.broken img,",806],["div.missing img {",806],["border-width: 0px;",806],["div.broken {",806],["display: none;",806],["div#unityPlayer {",806],["cursor: default;",806],["height: %UNITY_HEIGHT%px;",806],["width: %UNITY_WIDTH%px;",806],["-->",806],["",806],["",806],["",806],["Unity Web Player   %UNITY_WEB_NAME%\n\n%UNITY_BETA_WARNING%",806],["",806],["",806],["",806],["",806],["",806],["",806],["",806],["",806],["",806],["",806],["",806],["",806],["",806],["",806],["&laquo; created with Unity &raquo;",806],["",806],["",806],["Variables and the Inspector",807],["When creating a script, you are essentially creating your own new type of component that can be attached to Game Objects just like any other component.",807],["Just like other Components often have properties that are editable in the inspector, you can allow values in your script to be edited from the Inspector too.",807],["using UnityEngine;",807],["using System.Collections;",807],["public class MainPlayer : MonoBehaviour {",807],["public string myName;",807],["// Use this for initialization",807],["void Start () {",807],["Debug.Log(\"I am alive and my name is \" + myName);",807],["// Update is called once per frame",807],["void Update () {",807],["This code creates an editable field in the Inspector labelled \"My Name\".",807],["Unity creates the Inspector label by introducing a space wherever a capital letter occurs in the variable name. However, this is purely for display purposes and you should always use the variable name within your code. If you edit the name and then press Play, you will see that the message includes the text you entered.",807],["In C#, you must declare a variable as public to see it in the Inspector. In UnityScript, variables are public by default unless you specify that they should be private:",807],["pragma strict",807],["private var invisibleVar: int;",807],["function Start () {",807],["Unity will actually let you change the value of a script's variables while the game is running. This is very useful for seeing the effects of changes directly without having to stop and restart. When gameplay ends, the values of the variables will be reset to whatever they were before you pressed Play. This ensures that you are free to tweak your object's settings without fear of doing any permanent damage.",807],["Vector Cookbook",808],["Although vector operations are easy to describe, they are surprisingly subtle and powerful and have many uses in games programming. The following pages offer some suggestions about using vectors effectively in your code.",808],["Check For Updates",809],["Unity checks whether updates are available. This check happens either when Unity is started, or when you choose the Help-&gt;Check for Updates menu item. The update check sends the current Unity revision number (the five digit number that appears in brackets after the version name in the About Unity dialog) to the update server where is it compared with the most-up-to-date released version. If a newer version of Unity is available the following dialog is shown:",809],["If the version in use is the most up-to-date then the following dialog is shown:",809],["Click the Download new version button to be taken to the website where you can download the new version.",809],["Update Check Frequency",809],["The response from the server also contains a time interval which suggests when the next update check should be made. This allows the update check to be made less frequently when Unity is not expecting updates to be made available.",809],["Skipping Update Versions",809],["If you are in the middle of a project you may not want to update to a new version of Unity. Ticking the Skip this version button on the Unity Editor Update Check dialog will prevent Unity from telling you about this update.",809],["Disabling the Update Check",809],["It is not possible to disable the check for updates. The Check For Updates tick box on the dialog controls whether you are notified of updates (if they are available) when Unity starts. Even if you have unticked the Check for Updates option you can still check for updates by using the Help-&gt;Check for Updates menu item.",809],["Version Control",810],["You can use Unity in conjunction with most common version control tools, including Perforce and PlasticSCM. This section gives details of the tools and options available and how to work with them.",810],["Version control integration (Unity Pro Only)",811],["Unity supports version control integration with Perforce and Plastic SCM, refer to these pages for specific information regarding your choice of version control.",811],["Why should I use version control?",811],["Using a version control system makes it easier for a user/multiple users to manage their code. It is a repository of files with monitored access, which in the case of Unity, will be all the files associated with a Unity project. With version control it is possible to follow every change to the source along with information on who made the change, why they made it and what they changed/added. This makes it easy to revert back to an earlier version of the code or to compare differences in versions. It also becomes easier to locate when a bug first occurred along with what code might have caused it.",811],["Setting up your version control in Unity",811],["Follow these steps once you have your version control software setup according to their own instructions:",811],["Setup or sync a workspace on your computer using your chosen client (refer to the Plastic SCM Integration guide or the Perforce Integration guide for help with this step).",811],["Copy an existing project into the workspace or start Unity and create a new project in the workspace.",811],["Open the project and go to the Edit-&gt;Project Settings-&gt;Editor menu.",811],["Choose your version control Mode according to the version control system that you chose.",811],["Fill out your version control settings, such as username / password / server / workspace.",811],["Keep Automatic add checked if you want your files to be automatically added to version control when they're added to the project (or the folder on disk). Otherwise you will have to add new files manually.",811],["You have to option to work in offline. This mode is only recommended to advanced users who know how to manually integrate changes back into their choice of version control (Working offline with Perforce).",811],["The Asset Serialization, Default Behaviour Mode and Sprite Packer options can be edited to suit your team's preferences and choice of version control.",811],["Click connect and verify that \"Connected\" is displayed above the connect button after a short while.",811],["Use your standard client (e.g. p4v) to make sure that all files in the Assets and ProjectSettings folders (including files ending with .meta) are added.",811],["N.B. At any point you can go to the Prefences menu and select External Tools and adjust your Revision Control Diff/Merge tool.",811],["Using version control",811],["At this point you should be able to do most of the important version control operations directly by right-clicking on the assets in the project view, instead of going through the version control client. The version control operations vary depending on which version control you choose, this table shows what actions are directly available for each version control:",811],["",811],["Version Control Operation Description Perforce Plastic SCM ",811],["Check Out Allows changes to be made to the file Yes Yes ",811],["Diff against head Compares differences between file locally and in the head Yes Yes ",811],["Get Latest Pull the latest changes and update file Yes No* ",811],["Lock Prevents other users from making changes to file Yes No** ",811],["Mark Add Add locally but not into version control Yes Yes ",811],["Resolve Conflicts To resolve conflicts on a file that has been changed by multiple users Yes No*** ",811],["Revert Discards changes made to open changed files Yes Yes ",811],["Revert Unchanged Discards changes made to open unchanged files Yes Yes ",811],["Submit Submits current state of file to version control Yes Yes ",811],["Unlock Releases lock and allows changes to be made by anyone Yes No** ",811],["* To get the latest changes and update the file using Plastic SCM, you need to use the version control window.",811],["** Locking and Unlocking using Plastic SCM require you to edit a specific Plastic SCM lock file externally, see the Plastic SCM Integration page for more information.",811],["*** Conflicts are shown within the version control menu but resolved in the Plastic SCM GUI.",811],["Version Control Window",811],["You can overview the files in your changelist from the Version Control Window (Window-&gt;Version Control). It is shown here docked next to Inspector in the editor:",811],["The 'Outgoing' tab lists all of the local changes that are pending a commit into version control whereas the 'Incoming' tab lists all of the changes that need to be pulled from version control.",811],["By right clicking assets or changelists in this window you perform operations on them. To move assets between changelists just drag the assets from one changelist to the header of the target changelist.",811],["Icons",811],["The following icons are displayed in Unity editor to visualize version control status for files/assets:",811],["",811],["Icon Meaning Additional information ",811],[" File added locally Pending add into version control ",811],[" File added to version control by another user Pending add into version control ",811],[" File is checked out by you Checked out locally ",811],[" File is checked out by another user Checked out remotely ",811],[" There has been a conflict merging this file Needs to be resolved ",811],[" File has been deleted by you Pending deletion in version control ",811],[" File has been deleted by another user Pending deletion in version control ",811],[" File is not yet under version control n/a ",811],[" File is locked by you Cannot be modified by other users ",811],[" File is locked by another user Cannot be modified by you ",811],[" Another user has checked in a new version of this file Use \"Apply Incoming Changes\" to get latest version ",811],["Things to note:",811],["Certain version controls will not allow you to edit assets until they're marked as Checked out (unless you have Work offline checked).",811],["When saving changes to a .scene file it will automatically be checked out.",811],["Project Settings inspectors have a checkout button in the bottom right that allow you to checkout settings.",811],["A yellow warning will often appear to remind you to check out items in order to make changes to them, this mostly applies to Project Settings inspectors.",811],["In Plastic SCM automatically generated assets such as light maps are automatically added/checked out.",811],["Automatic revert of unchanged files on submit",811],["When working with assets, Unity automatically checks out both the asset file as well as the associated .meta file. In most situations however, the .meta file is not modified, which might cause some extra work e.g. when merging branches at a later point.",811],["Offline Mode",811],["Unity supports working in offline mode, e.g. to continue working without a network connection to your version control repository.",811],["Select Work offline from Version Control Settings if you want to be able to work disconnected from version control.",811],["Troubleshooting",811],["If Unity for some reason cannot commit your changes to your version control client, e.g. if server is down or license issues, your changes will be stored in a separate changeset.",811],["Working with the Asset Server",811],["For work with the Asset Server (Unity's internal Version Control System) refer to the Asset Server documentation.",811],["Working with other version control systems",811],["In order to work with a version control system unsupported by Unity, select MetaData as the Mode for Version Control in the Editor Settings. This allows you to manage the source assets and metadata for those assets with a version control system of your choice. For more on this, see the documentation for External Version Control Systems",811],["Scene View Control Bar",812],["The Scene View control bar lets you choose various options for viewing the scene and also control whether lighting and audio are enabled. These controls only affect the scene view during development and have no effect on the built game.",812],["Draw Mode",812],["The first drop-down menu selects which Draw Mode will be used to depict the scene. The available options are:",812],["Textured: show surfaces with their textures visible.",812],["Wireframe: draw meshes with a wireframe representation.",812],["Textured Wire: show meshes textured and with wireframes overlaid.",812],["Deferred Diffuse:",812],["Deferred Specular:",812],["Deferred Smoothness:",812],["Deferred Normal:",812],["Shadow Cascades: show directional light shadow cascades.",812],["Render Paths: show the rendering path for each object using a color code: Blue indicates deferred shading, Green indicates deferred lighting, yellow indicates forward rendering and red indicates vertex lit.",812],["Alpha Channel: render colors with alpha.",812],["Overdraw: render objects as transparent \"silhouettes\". The transparent colors accumulate, making it easy to spot places where one object is drawn over another.",812],["Mipmaps: show ideal texture sizes using a color code: red indicates that the texture is larger than necessary (at the current distance and resolution); blue indicates that the texture could be larger. Naturally, ideal texture sizes depend on the resolution at which the game will run and how close the camera can get to particular surfaces.",812],["GI - Charting:",812],["GI - Systems:",812],["GI - Albedo:",812],["GI - Emissive:",812],["GI - Irradiance:",812],["GI - Directionality:",812],["GI - Baked:",812],["2D, Lighting and Audio Switches",812],["To the right of the render mode menu are three buttons that switch certain scene view options on or off:",812],["2D: switches between 2D and 3D view for the scene. In 2D mode the camera is oriented looking towards positive z, with the x axis pointing right and the y axis pointing up.",812],["Lighting: turns scene view lighting (lights, object shading, etc) on or off.",812],["Audio: turns scene view audio effects on or off.",812],["Effects Button and Menu",812],["The menu (activated by the small arrow to the right of the word \"Effects\") has options to enable or disable rendering effects in the scene view.",812],["Skybox: a skybox texture rendered in the scene's background",812],["Fog: gradual fading of the view to a flat color with distance from the camera.",812],["Flares: lens flares on lights.",812],["Animated Materials: should animated materials show the animation?",812],["The Effects button itself acts as a switch that enables or disables all the effects at once.",812],["Gizmos Menu",812],["Gizmos are graphics added to the scene (either by Unity itself or from your own scripts) that help with visualisation and identification of items in the game world. For example, you can add icons to help identify your game objects and use simple wireframe graphics to show otherwise invisible paths and positioning elements. See the Script Reference page for the OnDrawGizmos function for further information about implementing custom gizmos in your scripts.",812],["Clicking the Gizmos popup will show a menu with a number of options:",812],["The 3D Gizmos checkbox determines whether gizmos are shown in true 3D (with correct obscuration and perspective) or as a simple overlay on top of other scene graphics. The slider to its right adjusts the scale of gizmo icons relative to other objects. The Show Grid checkbox below switches the standard scene measurement grid on and off.",812],["Beneath these options is a table of component names with Icon and Gizmo columns to the right. The list is subdivided into user scripts and built-in components and will also maintain a section of recently changed items as you make modifications.",812],["The Icon column lets you select the gizmo icon displayed for particular component types. For built-in components, the only options are to have no icon (as with Colliders, where only a wireframe gizmo is shown) or simply to switch the standard icon on and off (as with Cameras, Lights and Audio Sources, among others). For user scripts, clicking the icon column will bring up a menu to select the desired icon:",812],["This lets you select from a variety of simple standard icon shapes in different colors that you can use to identify particular script types. The Other button will bring up a texture selector from which you can choose any texture you like to use as the icon for your script.",812],["The Gizmo column in the table contains a checkbox that lets you choose whether gizmo graphics will be drawn for a particular Component type. For example, Colliders have a predefined wireframe gizmo to show their shape while user scripts can draw custom gizmos appropriate to their purpose; these gizmos can be turned on or off by clicking in this column.",812],["Search Box",812],["The rightmost item on the control bar is a search box that lets you filter items in the scene view by their names and/or types (you can select which with the small menu at the left of the search box). The set of items that match the search filter will also be shown in the Hierarchy view which, by default, is located to the left of the Scene view.",812],["Visual Studio C# Integration",813],["What does this feature get me?",813],["A more sophisticated C# development environment.",813],["Think smart autocompletion, computer-assisted changes to source files, smart syntax highlighting and more.",813],["What's the difference between Express and Pro?",813],["VisualStudio C# 2010 is a product from Microsoft. It comes in an Express and a Profesional edition.",813],["The Express edition is free, and you can download it from here: http://www.microsoft.com/express/vcsharp/",813],["The Professional edition is not free, you can find out more information about it here: http://www.microsoft.com/visualstudio/en-us/products/professional/default.mspx",813],["Unity's VisualStudio integration allows you to create and maintain VisualStudio project files automatically. Also, VisualStudio will open when you double click on a script or on an error message in the Unity console.",813],["I've got Visual Studio Express, how do I use it?",813],["In Unity, select from the menu Assets-&gt;Sync MonoDevelop Project",813],["Find the newly created .sln file in your Unity project (one folder up from your Assets folder)",813],["Open that file with Visual Studio Express.",813],["You can now edit all your script files, and switch back to Unity to use them.",813],["I've got Visual Studio Profesional, how do I use it?",813],["In Unity, go to Edit-&gt;Preferences, and make sure that Visual Studio is selected as your preferred external editor.",813],["Doubleclick a C# file in your project. Visual Studio should automatically open that file for you.",813],["You can edit the file, save, and switch back to Unity.",813],["A few things to watch out for:",813],["Even though Visual Studio comes with its own C# compiler, and you can use it to check if you have errors in your c# scripts, Unity still uses its own C# compiler to compile your scripts. Using the Visual Studio compiler is still quite useful, because it means you don't have to switch to Unity all the time to check if you have any errors or not.",813],["Visual Studio's C# compiler has some more features than Unity's C# compiler currently has. This means that some code (especially newer c# features) will not give an error in Visual Studio but will give an error in Unity.",813],["Unity automatically creates and maintains a Visual Studio .sln and .csproj file. Whenever somebody adds/renames/moves/deletes a file from within Unity, Unity regenerates the .sln and .csproj files. You can add files to your solution from Visual Studio as well. Unity will then import those new files, and the next time Unity creates the project files again, it will create them with this new file included.",813],["Unity does not regenerate the Visual Studio project files after an AssetServer update, or a SVN update. You can manually ask Unity to regenerate the Visual Studio project files trough the menu: Assets-&gt;Sync MonoDevelop Project",813],["WebGL: Building &amp; Running",814],["The following is a step-by-step guide to build and run a new project exported to WebGL.",814],["Create your Unity content.",814],["Choose File-&gt;Build Settings to bring up the Build Settings dialog and add your scene(s).",814],["Change the Platform to WebGL",814],["Press the Build &amp; Run button.",814],["Unity will build a folder with an index.html file which embeds your content in a web page, as well as:",814],["a JavaScript file containing the converted code of your content.",814],["a .mem file containing a binary image to initialize the heap memory of your content.",814],["a .data file containing the content asset data and scenes.",814],["some supporting .js files to initialize and load the content",814],["To view your WebGL content you can open the index.html file in Firefox. Note that other browsers may require you to host the file on a local http server due to access restrictions on file:// urls. The Build &amp; Run button will do that for you, it will spawn a local web server hosting the content, and open it in your default brower. Make sure your default browser supports running Unity WebGL content (currently supported browsers are Firefox and Chrome).",814],["As with the other build targets, there are Player settings that you can specify.",814],["The Build Process",814],["When running a build for Unity WebGL, Unity will first run all your script assemblies (your C#/UnityScript code) through our IL2CPP compiler to generate corresponding C++ source files. Then it will run the emscripten compiler to compile these into JavaScript, along with the Unity runtime.",814],["Build Player Options",814],["WebGL allows you to select an Optimization level in the Build Player window. These correspond to optimization flags (-O1 - -O3) passed to the emscripten compiler. In general, \"Slow\" produces unoptimized builds, but has much lower build times then the other options, so it can be used for iterating on code issues. \"Fast\" produces optimized builds, and \"Fastest\" enabled some additional optimizations, but makes your builds take very long to complete (so you might want to use it only for final releases).",814],["When you tick the \"Development Build\" checkbox, Unity will generate a development builds (with Profiler support and the development console for errors, like on other platforms). Additionally, Development builds are non-minified, so the generated JavaScript is human-readable and preserves function names (so you will get useful stack traces for errors), but very large to distribute.",814],["The \"Autoconnect Profiler\" checkbox must be used when you want to profile your Unity WebGL content. It is not possible to connect the Profiler to a running build like on other platforms, as the profiler connection is handled using WebSockets on WebGL, but the browser will only allow outgoing connections from the content, so the only way to use the Profiler in WebGL is to check \"Autoconnect Profiler\" to have the content connect to the Editor.",814],["Player Settings",814],["WebGL has some additional options in the Player Settings (Edit menu->Project Settings->Player).",814],["The \"Stripping Level\" popup in \"Other Settings\" lets you enable code stripping for WebGL. Note that WebGL does not differentiate between different stripping levels, it is either enabled or not. If you enable Stripping, Unity will not include code for any classes you don't use - so if you don't use any physics components or methods for instance, the whole physics engine will be stripped from your build.",814],["The \"WebGL memory size\" field in \"Publishing Settings\" lets you specifiy how much memory (in MB) the content should allocate for it's heap. If this value is too low, you will get out of memory errors when your loaded content and scenes would not fit into the available memory. But if you set this value too high, your content might fail to load in some browsers or on some machines, because the browser might not have enough available memory to allocate the requested heap size.",814],["The \"Enable Exceptions\" popup in \"Publishing Settings\" lets you enable exception support in WebGL. It is advised to set this to \"None\" and not to use exceptions in WebGL for best performance. Any exception thrown will cause your content to stop with an error in that setting. But if you must use exceptions, you can set it to:",814],["\"Explicitly Thrown Exceptions Only\", which will allow catching exceptions which are explictly thrown from a \"throw\" statement. This will make the generated JavaScript code bigger and slower.",814],["\"Full\", which, additional to the above, will also generate exceptions for Null References and for out of bounds array access. These are generated by embedding checks for any access to references into the generated code, so it will cause additional code size increases and slowdowns. Also, this will add managed stack traces to exceptions. It is advisable to use this mode only when you need to debug issues in your code.",814],["Distribution size",814],["When publishing for WebGL, it is important to keep your build size low so people get reasonable download times before the content will start. For generic tips on reducing asset sizes, see here. Some additonal comments specific to WebGL:",814],["Don't build Development builds, they are unminified to preserve function names.",814],["Set Optimization Level to \"Fastest\"",814],["Set \"Enable Exceptions\" in Player Settings to \"None\"",814],["Enable \"Stripping Level\" in Player Settings.",814],["Note that Unity does not compress either the generated code or data for distribution. The reason for this is that the http protocol actually supports gzip compression on a protocol level, which is then handled natively by the browser, and thus decompresses faster then Unity could handle decompression by itself in JavaScript code. However, this means that you need to make sure that your http server actually compresses the transfers. You can check that by loading your content and inspecting network transfers in your browsers development tools. You should find \"Content-Encoding: gzip\" in the response headers for the js and data downloads. If you are hosting your files on an Apache web server, Unity will write an invisible .htaccess file into the build results folder, which tells Apache to compress the transfers, so this should just work. If you are using other web servers, check your servers manual.",814],["Example Build Errors and Warnings",814],["Below are some common errors/warnings you may encounter when using the WebGL export. We also have sections on the Forums and Answers dedicated to WebGL export which may be of help if your error is not listed below.",814],["To do.",814],["Getting Started with WebGL Development",815],["What is Unity WebGL?",815],["The WebGL build option allows Unity to publish content as JavaScript programs using HTML5 and WebGL, which can then be run by supported web browsers. To build and test your content for WebGL, just chose the WebGL build target in the Build Player window, and hit Build &amp; Run. Note that WebGL in Unity 5.0 is an early-access preview release and has some functionality limitations.",815],["Early-Access",815],["Early-Access means that Unity is capable of publishing content to WebGL, but there are some limitations in features and in browser compatibility. In particular, the following features are not supported:",815],["Runtime generation of Substance textures",815],["MovieTextures",815],["Networking other then WWW class",815],["Support for WebCam and Microphone access",815],["Most of the non-basic audio features (anything beyond basic positional playback of audio is not supported).",815],["Script debugging",815],["Threads",815],["Any .NET features requiring dynamic code generation (just as on other AOT platforms like iOS)",815],["Runtime GI",815],["In terms of browser support, this initial version only supports the desktop versions of Firefox and Chrome (other browsers might work for some content, but only these two are officially supported).",815],["We expect to resolve most of those limitations (except for things which are restrictions imposed by the platform) during the 5.x release cycle, and to be able to support a wider range of browsers as well, as the platform matures – at which point we will drop the early-access label and make WebGL a fully supported build platform in Unity.",815],["Technical details",815],["To run in WebGL, all our code needs to be JavaScript. We use the emscripten compiler toolchain to cross-compile the Unity runtime code (written in C and C++) into asm.js JavaScript. asm.js is a very optimizable subset of JavaScript which allows JavaScript engines to AOT-compile asm.js code into very performant native code.",815],["To convert the .NET game code (your C# and UnityScript scripts) into JavaScript, we use a technology which we call IL2CPP. IL2CPP takes .NET bytecode and converts it to corresponding C++ source files, which we then compile using emscripten to get your scripts converted to JavaScript. This conversion process might run into some compatibility issues with your script code in the early-access release, which we will work on resolving, but as long as you don't require threads or dynamic code generation features it is expected to work.",815],["WebGL: Interacting with browser scripting",816],["When building content for the web, you might need to communicate with other elements on your web page. Or you might want to implement functionality using Web APIs which Unity does not currently expose by default. In both cases, you need to directly interface with the browser's JavaScript engine. Unity WebGL provides different methods to do this.",816],["Calling between JavaScript code from Unity",816],["The first is the same as for the Web Player. You can use the Application.ExternalCall()  and Application.ExternalEval()  functions to invoke JavaScript code on the embedding web page. To call methods on GameObjects in your content from browser JavaScript, you can use the following code:",816],["SendMessage ('MyGameObject', 'MyFunction', 'foobar');",816],["Calling JavaScript functions from a plugin",816],["The other way to use browser JavaScript in your project is to add your JavaScript sources to your project, and then call those functions directly from your script code. To do so, place files with JavaScript code using the .jslib extension (as the normal .js would be picked up by the UnityScript compiler) into a \"Plugins/WebGL\" folder in your Assets folder. The file needs to have a syntax like this:",816],["Assets/Plugins/WebGL/MyPlugin.jslib",816],["var MyPlugin = {",816],["Hello: function()",816],["window.alert(\"Hello, world!\");",816],["},",816],["HelloString: function(str)",816],["window.alert(Pointer_stringify(str));",816],["},",816],["PrintFloatArray: function(array, size)",816],["for(var i=0;i",816],["console.log(HEAPF32[(array>>2)+size]);",816],["},",816],["AddNumbers: function(x,y)",816],["return x + y;",816],["},",816],["StringReturnValueFunction: function()",816],["var returnStr = \"bla\";",816],["var buffer = _malloc(returnStr.length + 1);",816],["writeStringToMemory(returnStr, buffer);",816],["return buffer;",816],["};",816],["mergeInto(LibraryManager.library, MyPlugin);",816],["Then you can call these functions from your C# scripts like this:",816],["using UnityEngine;",816],["public class NewBehaviourScript : MonoBehaviour {",816],["[DllImport(\"__Internal\")]",816],["private static extern void Hello();",816],["[DllImport(\"__Internal\")]",816],["private static extern void HelloString(string str);",816],["[DllImport(\"__Internal\")]",816],["private static extern void PrintFloatArray(float[] array, int size);",816],["[DllImport(\"__Internal\")]",816],["private static extern int AddNumbers(int x, int y);",816],["[DllImport(\"__Internal\")]",816],["private static extern string StringReturnValueFunction();",816],["void Start() {",816],["Hello();",816],["HelloString(\"This is a string.\");",816],["float[] myArray = new float[10];",816],["PrintFloatArray(myArray, myArray.Length);",816],["int result = AddNumbers(5, 7);",816],["Debug.Log(result);",816],["Debug.Log(StringReturnValueFunction());",816],["Simple numeric types can be passed to JavaScript in function parameters without requiring any conversion. Other data types will be passed as a pointer in the emscripten heap (which is really just a big array in JavaScript). For strings, you can use the Pointer_stringify helper function to convert to a JavaScript string. To return a string value you need to call _malloc to allocate some memory and the writeStringToMemory helper function to write a JavaScript string to it. If the string is a return value, then the il2cpp runtime will take care of freeing the memory for you. For arrays of primitive types, emscripten provides different ArrayBufferViews into it's heap for different sizes of integer, unsigned integer or floating point representations of memory: HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64.",816],["Calling C++ functions from a plugin",816],["Since Unity compiles your sources into JavaScript from C++ code using emscripten, you can also write plugins in C or C++ code, and call these functions from C#. So, instead of the jslib file in the example above, you could have a c file like below in your project - it will automatically get compiled with your scripts, and you can call functions from it, just like in the JavaScript example above.",816],["Assets/Plugins/WebGL/MyPlugin.c",816],["include ",816],["void Hello ()",816],["printf(\"Hello, world!\\n\");",816],["int AddNumbers (int x, int y)",816],["return x + y;",816],["WebGL Networking",817],["No direct socket access",817],["Due to security implications, JavaScript code does not have direct access to IP Sockets to implement network connectivity. As a result, the .NET networking classes (ie, everything in the System.Net namespace, particularly System.Net.Sockets) are non-functional in WebGL. The same applies to Unity's UnityEngine.Network* classes, which are not available when building for WebGL.",817],["If you need to use Networking in WebGL, you currently have the options to use the WWW class in Unity, or to implement your networking using WebSockets or WebRTC in JavaScript.",817],["Using the WWW class in WebGL",817],["The Unity WWW",817],["class is supported in WebGL. It is implemented using the XMLHttpRequest class in JavaScript, using the browser to handle WWW requests. This imposes some security restrictions on accessing cross-domain resources. Basically any WWW request to a server which is different from the server hosting the WebGL content needs to be authorized by the server you are trying to access. This is similar to the crossdomain.xml requirement in the Unity Web Player, but the protocol is different. To access cross-domain WWW resources in WebGL, the server you are trying to access needs to authorize this using CORS.",817],["If you try to access content using WWW, and the remote server does not have CORS set up or configured correctly, you will see and error like this in the browser console:",817],["Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://myserver.com/. This can be fixed by moving the resource to the same domain or enabling CORS.",817],["CORS stands for Cross-Origin Resource Sharing, and is documented here. Basically, the server needs to add some Access-Control headers to the http responses it sends out, which will tell browsers that it is allowed to let web pages access the content on the server. Here's an example of a header setup, which would allow Unity WebGL to access resources on a web server from any origin, with common request headers and using the http GET, POST or OPTIONS methods:",817],["\"Access-Control-Allow-Credentials\": \"true\",",817],["\"Access-Control-Allow-Headers\": \"Accept, X-Access-Token, X-Application-Name, X-Request-Sent-Time\",",817],["\"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",",817],["\"Access-Control-Allow-Origin\": \"*\",",817],["Note that WWW.responseHeaders is limited to a subset of the actual response headers, according to 7.1.1 of the CORS specification.",817],["Also note that XMLHttpRequest does not allow streaming of data, thus the WWW class on WebGL will only process any data once the download has finished (so AssestBundles cannot be decompressed and loaded while downloading as on other platforms).",817],["Using Web Sockets or WebRTC from JavaScript",817],["As written above, direct access to IP Sockets is not possible in WebGL. However, if you need networking capabilities beyond the WWW class, it is possible to use Web Sockets or WebRTC, both networking protocols supported by browsers. Web Sockets has wider support, but WebRTC allows p2p connections between browsers and unreliable connections. Neither of these protocols are exposed through built-in APIs in Unity yet, but it is possible to use a JavaScript plugin to implement this. A sample of a plugin which implements WebSocket networking in Unity WebGL can be found here.",817],["WebGL performance considerations",818],["What kind of performance can you expect on WebGL?",818],["This is a bit difficult to answer, as it depends on many factors.",818],["In general, you can assume that you will get performance close to native apps for the GPU side, as the WebGL graphics API uses your GPU for hardware accelerated rendering - there is just a little overhead for translating WebGL API calls and shaders to your OS graphics API (typically DirectX on Windows or OpenGL on Mac or Linux).",818],["For the CPU side, all your code is translated into asm.js JavaScript. So what kind of performance you can expect depends a lot on the JavaScript engine of the web browser used, and there are some pretty significant differences there currently. At the point of this writing (Jan 2015), Firefox delivers the best performance on Unity code, as Firefox is currently the only browser which makes use of the asm.js spec to use an optimized AOT compilation path of JavaScript code in that case, which delivers performance within a factor of less then 2x slowdown compared to native code for many programming benchmarks - and that factor also matches results we've seen from different unity content we deployed to WebGL and ran in Firefox.",818],["There are some other considerations, though. Currently, the JavaScript language does neither support multi-threading, nor SIMD. So, any code which benefits from these features will see bigger slowdowns then other code. You cannot write threading or SIMD code in WebGL in your scripts, but some engine parts are normally multi-threaded or SIMD optimized, and will run less performant on WebGL because of this. An example is the skinning code, which is both multi-threaded and SIMD-optimized. You can use the new timeline profiler in Unity to see how Unity distributes work to different threads on non-WebGL platforms. Longer term, we are hoping that these features will become available on WebGL as well.",818],["WebGL-specific settings which affect performance",818],["For best performance, set the optimization level to \"Fastest\" in the Build Player dialog, and set \"Exception support\" to \"None\" in the player settings for WebGL.",818],["Profiling WebGL",818],["You can use the Unity profiler on WebGL, just like on any other platform. One important distinction is that you cannot attach to running players in WebGL, though, as WebGL uses WebSockets for communication, which will not allow incoming connections on the browser side. Instead, you need to use the \"Autoconnect profiler\" checkbox in the build settings.",818],["Customizing the Unity Web Player's Behavior",819],["The Unity Web Player allows developers to use a few optional parameters to easily control its behavior in a few ways:",819],["disableContextMenu: This parameter controls whether or not the Unity Web Player displays a context menu when the user right- or control-clicks on the content. Setting it to true prevents the context menu from appearing and allows content to utilize right-mouse behavior. To enable the context menu don't include this parameter.",819],["disableExternalCall: This parameter controls whether or not the Unity Web Player allows content to communicate with browser-based JavaScript. Setting it to true prevents browser communication and so content cannot call or execute JavaScript in the browser, the default is false.",819],["disableFullscreen: This parameter controls whether or not the Unity Web Player allows content to be viewed in fullscreen mode. Setting it to true prevents fullscreen viewing and removes the \"Go Fullscreen\" entry from the context menu, the default is false.",819],["Using UnityObject2 you control those parameters like this:",819],["var params = {",819],["disableContextMenu: true",819],["};",819],["var u = UnityObject2({ params: params });",819],["u.initPlugin(jQuery(\"#unityPlayer\")[0], \"Example.unity3d\");",819],["In the above example you'll notice that neither disableExternalCall nor disableFullscreen are specified, therefore their default values are used.",819],["See UnityObject2 for more details.",819],["Example setting all the behavior options:",819],["",819],["",819],["",819],["Unity Web Player   \"Sample\"",819],["",819],["",819],["var unityObjectUrl = \"http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js\";",819],["if (document.location.protocol == 'https:')",819],["unityObjectUrl = unityObjectUrl.replace(\"http://\", \"https://ssl-\");",819],["document.write('&lt;\\/script>');",819],["-->",819],["",819],["",819],["var params = {",819],["disableContextMenu: true,",819],["disableExternalCall: false,",819],["disableFullscreen: false,",819],["};",819],["var u = new UnityObject2({ params: params });",819],["u.observeProgress(function (progress) {",819],["var $missingScreen = jQuery(progress.targetEl).find(\".missing\");",819],["switch(progress.pluginStatus) {",819],["case \"unsupported\":",819],["showUnsupported();",819],["break;",819],["case \"broken\":",819],["alert(\"You will need to restart your browser after installation.\");",819],["break;",819],["case \"missing\":",819],["$missingScreen.find(\"a\").click(function (e) {",819],["e.stopPropagation();",819],["e.preventDefault();",819],["u.installPlugin();",819],["return false;",819],["});",819],["$missingScreen.show();",819],["break;",819],["case \"installed\":",819],["$missingScreen.remove();",819],["break;",819],["case \"first\":",819],["break;",819],["});",819],["jQuery(function(){",819],["u.initPlugin(jQuery(\"#unityPlayer\")[0], \"Example.unity3d\");",819],["});",819],["",819],["",819],["",819],["",819],["Unity Web Player   WebPlayer",819],["",819],["",819],["",819],["",819],["",819],["",819],["",819],["",819],["",819],["",819],["&laquo; created with Unity &raquo;",819],["",819],["Webplayer Release Channels",820],["Whenever a new major version of Unity is released, the webplayer plugin for the browser is also updated to take advantage of the latest features. The plugin checks for new releases as it starts up and will automatically upgrade itself when necessary.",820],["Although Unity does take backward compatibility very seriously, it is still possible that a new release could introduce bugs that cause problems with existing webplayers. Since the plugin updates automatically, such bugs could leave a user unable to play a web game until they are fixed and in the meantime, there may be no way to get the working version of the runtime back.",820],["To avoid problems like this, the plugin is designed to keep a number of different versions of the Unity runtime, which are called Release Channels. When an update to the runtime is released, the plugin automatically retrieves it but also retains a copy of the previous version. The latest channel is named Release while the previous one is named Stable. By default, the plugin will use the oldest channel that supports all the features needed by a given webplayer. This enables new games to make use of new features but avoids the risk that new bugs will take down existing games.",820],["Some time after a release, when the Release channel has been thoroughly tested for stability, it will be migrated to Stable status and it will be used as the default for all players from then on.",820],["Selecting a channel",820],["Although the channel system avoids problems with upgrading, it is still useful to be able to test your game with the latest runtime. The Unity browser plugin lets you select the desired channel from the context menu (alt+right-click on the content area in the web page).",820],["The channels are listed in order with the most recent at the top. When you select an item from the menu, it will be used as the minimum version for running webplayer content (so if you select the Release channel, the older Stable channel will not be used). You can simply select the oldest version to restore the default channel selection. Normally, just the Release and Stable channels will be available but the system is open-ended so other channels (say for Beta testing) may appear from time to time.",820],["Additionally, the menu gives you the option to switch to Development mode, which enables debugging and profiling in the webplayer and also offers an error console will appear whenever the player's code throws exceptions.",820],["Web Player Deployment",821],["When building a Web Player, Unity automatically generates an HTML file next to the player data file. It contains the default HTML code to load the web player data file.",821],["It is possible to further tweak and customize the generated HTML file to make it fit better with the containing site's design, to add more HTML content, etc. The following pages discuss the related subjects in depth:",821],["Web Player Streaming",822],["Web Player Streaming is critical for providing a great web gaming experience for the end user. The idea behind web games is that the user can view your content almost immediately and start playing the game as soon as possible instead of making him wait for a progress bar. This is very achievable, and we will explain how.",822],["Tuning for Portals",822],["This section will focus on publishing to online game portals. Streaming is useful for all kinds of contents, and it can easily be applied to many other situations.",822],["Online game portals expect that some form of game play really starts after downloading at most 1 MB of data. If you don't reach this makes it that much less likely for a portal to accept your content. From the user's perspective, the game needs to start quickly. Otherwise his time is being wasted and he might as well close the window.",822],["On a 128 kilobit cable connection you can download 16 KB per second or 1 MB per minute. This is the low end of bandwidth online portals target.",822],["The game would optimally be set up to stream something like this:",822],["50 KB display the logo and menu (4 seconds)",822],["320 KB let the user play a tiny tutorial level or let him do some fun interaction in the menu (20 seconds)",822],["800 KB let the user play the first small level (50 seconds)",822],["Finish downloading the entire game within 1-5 MB (1-5 minutes)",822],["The key point to keep in mind is to think in wait times for a user on a slow connection. Never let him wait.",822],["Now, don't panic if your web player currently is 10 MB. It seems daunting to optimize it, but it turns out that with a little effort it is usually quite easy to structure your game in this fashion. Think of each above step as an individual scene. If you've made the game, you've done the hard part already. Structuring some scenes around this loading concept is a comparative breeze!",822],["If you open the console log (Open Editor Log button in the Console window(Desktop Platforms); Help -&gt; Open Editor console log menu OSX) after or during a build, you can see the size of each individual scene file. The console will show something like this:",822],["Player size statistics***",822],["Level 0 'Main Menu' uses 95.0 KB compressed.",822],["Level 1 'Character Builder' uses 111.5 KB compressed.",822],["Level 2 'Level 1' uses 592.0 KB compressed.",822],["Level 3 'Level 2' uses 2.2 MB compressed.",822],["Level 4 'Level 3' uses 2.3 MB compressed.",822],["Total compressed size 5.3 MB. Total decompressed size 9.9 MB.",822],["This game could use a little more optimization! For more information, we recommend you read the reducing file size page.",822],["The Most Important Steps",822],["Load the menu first. Showing an animated logo is a great way to make time go by unnoticed, thus letting the download progress further.",822],["Make the first level be short and not use a lot of assets. This way, the first level can be loaded quickly, and by keeping the player occupied playing it for a minute or two you can be sure that the download of all remaining assets can be completed in the background. Why not have a mini tutorial level where the user can learn the controls of the game? No reason for high-res textures here or loads of objects, or having all your enemies in the first level. Use the one with the lowest poly-count. And yes, this means you might have to design your game with the web player experience in mind.",822],["There is no reason why all music must be available when the game starts. Externalize the music and load it via the WWW class. Unity compresses audio with the high quality codec, Ogg Vorbis. However even when compressed, audio takes up a lot of space, and if you have to fit things into 3 MB, if you have 5 minutes of music all the compression in the world won't save you. Sacrifices are needed. Load a very short track that you can loop until more music has been downloaded. Only load more music when the player is hooked on the first level.",822],["Optimize your textures using their Import Settings. After you externalize music, textures easily take up 90% of the game. Typical texture sizes are too big for web deployment. In a small browser window, sometimes big textures don't even increase the visual fidelity at all. Make sure you use textures that are only as big as they must be (and be ready for more sacrifices here). Halving the texture resolution actually makes the texture size a quarter of what it was. And of course all textures should be DXT compressed.",822],["Generally reduce the size of your web players. There is a manual page committed to the utilities Unity offers for optimizing file size here. Although Unity uses cutting edge LZMA-based compression which usually compresses game data to anywhere from one half to a third of the uncompressed size, you'll need to try everything you can.",822],["Try to avoid Resources.Load. While Resources.Load can be very handy, Unity will not be able to order your assets by when they are first used when you use Resources.Load, because any script could attempt to load the Resource. You can set which level will include all assets that can be loaded through Resources.Load in the Edit-&gt;Project Settings-&gt;Player using the First Streamed Level With Resources property. Obviously you want to move Resources.Load assets as late as possible into the game or not use the feature at all.",822],["Publishing Streaming Web Players",822],["Streaming in Unity is level based, and there is an easy workflow to set this up. Internally, Unity does all the dirty work of tracking assets and organizing them in the compressed data files optimally, ordering it by the first scene that uses them. You simply have to ensure that the first levels in the Build Settings use as few assets as possible. This comes naturally for a \"menu level\", but for a good web experience you really need make sure that the first actual game levels the player is going to play are small too.",822],["In order to use streaming in Unity, you select Web Player Streamed in the Build Settings. Then the content automatically starts as soon as all assets used by the first level are loaded. Try to keep the \"menu level\" to something like 50-100 KB. The stream continues to load as fast as it can, and meanwhile live decompresses. When you look at the Console during/after a build, you can see how large the streamed data is.",822],["You can query the progress of the stream by level, and once a level is available it can be loaded. Use GetStreamProgressForLevel for displaying a progress bar and CanStreamedLevelBeLoaded to check if all the data is available to load a specific level.",822],["This form of streaming is of course linear, which matches how games work in most cases. Sometimes that's not enough. Therefore Unity also provides you with API's to load a .unity3d file manually using the WWW class. Video and audio can be streamed as well, and can start playing almost immediately, without requiring the movie to be downloaded first. Finally Textures can easily be downloaded via the WWW class, as can any textual or binary data your game might depend on.",822],["AppCallbacks class",823],["You could call it a bridge between your main application and Unity engine. Here, we'll try to explain what every call to AppCallbacks exactly does. Let's build solution and explore App.xaml.cs file.",823],["sealed partial class App : Application",823],["private WinRTBridge.WinRTBridge _bridge;",823],["private AppCallbacks appCallbacks;",823],["public App()",823],["this.InitializeComponent();",823],["appCallbacks = new AppCallbacks(false);",823],["protected override void OnLaunched(LaunchActivatedEventArgs args)",823],["Frame rootFrame = Window.Current.Content as Frame;",823],["if (rootFrame == null)",823],["var mainPage = new MainPage();",823],["Window.Current.Content = mainPage;",823],["Window.Current.Activate();",823],["_bridge = new WinRTBridge.WinRTBridge();",823],["appCallbacks.SetBridge(_bridge);",823],["appCallbacks.SetSwapChainBackgroundPanel(mainPage.GetSwapChainBackgroundPanel());",823],["appCallbacks.SetCoreWindowEvents(Window.Current.CoreWindow);",823],["appCallbacks.InitializeD3DXAML();",823],["Window.Current.Activate();",823],["private WinRTBridge.WinRTBridge _bridge;",823],["So first of all, what is WinRTBridge, it's used internally by Unity, to perform some of native-to-managed, managed-to-native operations, it's not intended to be used by developers. Due some WinRT platform restrictions, it cannot be created from Unity engine code, that's why WinRTBridge is being created here and is passed to Unity engine via appCallbacks.SetBridge(_bridge) instead.",823],["appCallbacks = new AppCallbacks(false);",823],["Now, let's take a closer look at AppCallbacks class. When you create it, you specify that your game will run on different thread, for backward compatibility reasons you can also specify that your application can run on UI thread, but that's not recommended, because there's a restriction from Microsoft - if your application won't become responsive after 5 seconds you'll fail to pass WACK (Windows Application Certification), read more here - http://msdn.microsoft.com/en-us/library/windowsphone/develop/hh184840(v=vs.105).aspx, imagine if your first level is pretty big, it might take significant amount of time to load it, because your application is running on UI thread, UI will be unresponsive until your level is fully loaded. That's why it's recommend to always run your game on different thread.",823],["Read more on UI thread here - http://msdn.microsoft.com/en-us/library/windows/apps/hh994635.aspx",823],["Note: Code located in App.xaml.cs, MainPage.xaml.cs is always running on UI thread, unless called from InvokeOnAppThread function.",823],["appCallbacks.SetSwapChainBackgroundPanel(mainPage.GetSwapChainBackgroundPanel());",823],["This simply passes a XAML control to Unity which will be used as a render target for DirectX 11.",823],["appCallbacks.SetCoreWindowEvents(Window.Current.CoreWindow);",823],["Sets the core window for Unity, Unity subscribes to the following events (there may be more, depending on when this information was updated) :",823],["VisibilityChanged",823],["Closed",823],["PointerCursor",823],["SizeChanged",823],["Activated",823],["CharacterReceived",823],["PointerPressed",823],["PointerReleased",823],["PointerMoved",823],["PointerCaptureLost",823],["PointerWheelChanged",823],["AcceleratorKeyActivated",823],["appCallbacks.InitializeD3DXAML();",823],["This is main initialization function for Unity, it does following things:",823],["Parse command line arguments, set by AppCallbacks.AddCommandLineArg()",823],["Initialize DirectX 11 device",823],["Load first level",823],["At this point, when Unity finishes loading first level, it enters main loop.",823],["Other functions",823],["void InvokeOnAppThread(AppCallbackItem item, bool waitUntilDone)",823],["Invokes a delegate on application thread, useful when you want to call your script function from UI thread.",823],["void InvokeOnUIThread(AppCallbackItem item, bool waitUntilDone)",823],["Invokes a delegate on UI thread, useful when you want to invoke something XAML specific API from your scripts.",823],["bool RunningOnAppThread()",823],["Returns true, if you're currently running in application thread.",823],["bool RunningOnUIThread()",823],["Returns true, if you're currently running in UI thread.",823],["void InitializeD3DWindow()",823],["Initialization function for D3D application.",823],["void Run()",823],["Function used by D3D application, for entering main loop.",823],["bool IsInitialized()",823],["Returns true, when first level is fully loaded.",823],["void AddCommandLineArg(string arg)",823],["Sets a command line argument for application, must be called before InitializeD3DWindow, InitializeD3DXAML.",823],["void LoadGfxNativePlugin(string pluginFileName)",823],["Sets a native rendering plugin, must be called before InitializeD3DWindow, InitializeD3DXAML.",823],["void ParseCommandLineArgsFromFiles(string fileName)",823],["Parses command line arguments from a file, arguments must be separated by white spaces.",823],["bool UnityPause(int pause)",823],["Pauses Unity if you pass 1, unpauses if you pass 0, useful if you want to temporary freeze your game, for ex., when your game is snapped.",823],["void UnitySetInput(bool enabled)",823],["Enables/Disables input.",823],["bool UnityGetInput()",823],["Returns true, if Unity will process incoming input.",823],["void SetKeyboardTriggerControl(Windows.UI.Xaml.Controls.Control ctrl)",823],["Sets the control to be used for triggering on screen keyboard. This control will simply receive focus, when on screen keyboard is requested in scripts. Should be called with control, that does open keyboard on focus.",823],["Windows.UI.Xaml.Controls.Control GetKeyboardTriggerControl()",823],["Returns control, currently used control for triggering keyboard input. See SetKeyboardTriggerControl.",823],["void SetCursor(Windows.UI.Core.CoreCursor cursor)",823],["Sets system cursor. The given curosr is set for both CoreWindow and independent input source (if used).",823],["void SetCustomCursor(unsigned int id)",823],["Sets system cursor to custom. Parameter is cursor resource ID. Cursor is set for both CoreWindow and independent input source (if used).",823],["Windows Store Apps: Association launching",824],["The API allows you to launch the user's default app for a file type or protocol. Check out - UnityEngine.WSA.Launcher for more information.",824],["You can also enable your app to be the default app for a file type or protocol. You can set this information in Player Settings (More settings are available in Package.appxmanifest -> Declarations)",824],["You can download an example project here.",824],["You can read more here - Assocation launching.",824],["Windows Store Apps: Command line arguments",825],["Windows Store Apps don't accept command line arguments by default, so to pass them you have to call a special function from App.xaml.cs/cpp or App.cs/cpp. For ex., appCallbacks.AddCommandLineArg(\"-nolog\");",825],["You have to call it before appCallbacks.Initialize() function.",825],["Arguments",825],["-nolog - Don't produce UnityPlayer.log.",825],["-force-driver-type-warp - Force DirectX 11.0 WARP device (More info http://msdn.microsoft.com/en-us/library/gg615082.aspx)",825],["-force-gfx-direct - Force single threaded rendering.",825],["-force-d3d11-no-singlethreaded - Force DirectX 11.0 to be created without D3D11_CREATE_DEVICE_SINGLETHREADED flag.",825],["DirectX feature levels",825],["For further information about DirectX feature levels, see  http://msdn.microsoft.com/en-us/library/windows/desktop/ff476876(v=vs.85).aspx)",825],["-force-feature-level-9-1 - Force DirectX 11.0 feature level 9.1.",825],["-force-feature-level-9-2 - Force DirectX 11.0 feature level 9.2.",825],["-force-feature-level-9-3 - Force DirectX 11.0 feature level 9.3.",825],["-force-feature-level-10-0 - Force DirectX 11.0 feature level 10.0.",825],["-force-feature-level-10-1 - Force DirectX 11.0 feature level 10.1.",825],["-force-feature-level-11-0 - Force DirectX 11.0 feature level 11.0.",825],["Windows Store Apps: Debugging",826],["When you have a crash, or a weird behavior, always check the player log which is located here - &lt;user&gt;\\AppData\\Local\\Packages\\. When submitting a bug, please include the player log as well, it can give invaluable information.",826],["Currently it's only possible to debug C# scripts.",826],["Note: Windows Store Apps are running with Microsoft .NET, that's why it's not possible to debug scripts with MonoDevelop, instead you have to use Visual Studio 2013.",826],["Here are simple steps how to do it:",826],["When building to Windows Store Apps, check Unity C# projects",826],["This will create Assembly-CSharp-* projects compatible with Windows Store Apps",826],["Note: if previously Unity C# projects was unchecked, build to empty folder or delete *.sln and *.csproj, because Unity needs to add references to those files, but if they'll be present - Unity won't overwrite them",826],["Open the solution, you should see Assembly-CSharp-* projects included",826],["Place breakpoints in places of interest, and simply start application with the debugger",826],["Exceptions",826],["When you run the application, you can tell Visual Studio to stop during exception. Go to Debug -> Exceptions:",826],["Enable Common Language Runtime Exceptions and Managed Debugging Assistants - for managed exceptions",826],["Enable all exceptions if you're getting exception in some unknown place",826],["Note: enabling all exceptions will make Visual Studio to stop even at the harmless exceptions like WinRT originate error, WinRT transform error, ignore those and simply continue",826],["Resolving callstack from UnityPlayer.dll",826],["There will be cases when you'll have a crash in Unity engine itself, you can get useful information if you're able to resolve the callstack, and provide it in the bug report if needed.",826],["Note: Callstacks from Unity engine can be resolved if *.pdb files are available, Unity provides *.pdb files for Debug configuration.",826],["Suppose you've encountered a crash in Unity engine and hit the breakpoint (Note: Visual Studio can stop at the crash if you enable all exceptions via Debug -> Exceptions menu), go to Debug -> Windows -> Call Stack, Call Stack window should open up, if you don't see function names from UnityPlayer.dll, that means the symbols weren't loaded, to fix that, right click on that function and Load Symbols, UnityPlayer.pdb file will be located in [PathToYourProject]>\\Players\\[Windows80 or Windows81]\\[X86 or ARM or X64]\\debug.",826],["Advanced Debugging",826],["Sometimes there are cases where application doesn't crash with the debugger attached. Or application crashes on a remote device, where debugger is not available. You can still get useful information, if you can get the dump file. Here are simple steps how to do it.",826],["Open the registry.",826],["Navigate to HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting",826],["Create LocalDumps folder if it's not there.",826],["Add following keys:",826],["\"DumpFolder\"=&lt;FolderPath goes here&gt; , for example, C:\\Temp",826],["\"DumpCount\"=dword:00000010",826],["\"DumpType\"=dword:00000002",826],["Launch the application (it can be anything that runs on Windows - Windows Store App or Windows Standalone Executable)",826],["Reproduce the crash, the dump file should be created in your specified folder. You can either open the dump file with Visual Studio or WinDbg.",826],["Microsoft-Windows-TWinUI",826],["This is a log which might provide information why your application didn't launch without debugger, it can be found in:",826],["Control Panel -> Administrative Tools -> Event Viewer -> Applications And Services Log -> Microsoft -> Windows -> Apps -> Microsoft-Windows-TWinUI/Operational",826],["Windows Store Apps: Deployment",827],["How to deploy Windows Store Application",827],["Go to Build Settings, choose SDK version and build your project to a folder",827],["Visual Studio solution will be generated",827],["Running on local machine:",827],["Make sure, that selected solution platform is x86 and Debug target is set to \"Local machine\"",827],["Press F5 or go to Debug -&gt; Start debugging",827],["Running on remote machine (handheld device):",827],["First time you'll have to install remote debugging tools (see http://msdn.microsoft.com/en-us/library/bt727f1t.aspx for more information) on a remote machine (Note: for ARM tablets you'll need ARM remote debugging tools, for ex., rtools_setup_arm.exe)",827],["If you are deploying to ARM architecture device, make sure that ARM is selected as Solution Platform",827],["Start Visual Studio Remote debugger on a remote machine",827],["Go to Visual Studio project settings -&gt; Debug",827],["Set target device to \"Remote machine\"",827],["Find a remote machine in the list and select it",827],["Press F5 or go to Debug -&gt; Start debugging",827],["Note: If you cannot connect to a remote machine, make sure that Firewal does not block it",827],["Running in simulator:",827],["Set Debug Target to \"Simulator\"",827],["Press F5 or go to Debug -&gt; Start debugging",827],["Windows Store Apps: Examples",828],["Shows how to communicate between Unity and Windows Store App, see Readme.txt file.",828],["Example showing how to use native DLLs on Windows Store Apps. Example produces two Plugins.dll with same functionality - one for Desktop and the other one for Windows Store Apps, when you test your plugin in Editor - Desktop plugin is used, when you test a Window Store App - the other Plugins.dll is used.",828],["Example showing how to use Settings menu together with Unity, it also shows how to communicate between UI thread and application thread.",828],["Example showing how to use WSA live tiles API.",828],["Example showing how to start application with XAML page not containing Unity window. Basically you have two XAML pages - StartPage.xaml and MainPage.xaml, StartPage.xaml is the initial window from where you can navigate to MainPage.xaml containing Unity window.",828],["FAQ",829],["Unsupported classes and functions",829],["Not everything is supported in .NET for Windows Store Apps, see this link for supported classes http://msdn.microsoft.com/en-us/library/windows/apps/br230232.aspx. Same is for CRT functions http://msdn.microsoft.com/en-us/library/hh674596(v=vs.110).aspx",829],["How to create AppX package from Visual Studio ?",829],["After building the project from Unity Editor",829],["Open it with VS2012",829],["In the solution explorer, right click on the project",829],["Store -&gt; Create App Packages",829],["Do you want to build packages to upload to the Windows Store? Choose No, then Next",829],["Pick appropriate platform, for ex., ARM Release",829],["Don't include public symbol files, this will make package smaller",829],["Create",829],["Locate folder which is named something like YourApp_1.0.0.0_ARM_Test, check that it has Add-AppDevPackage.ps1 file",829],["Copy the folder contents to the target machine, then on the target machine right click on Add-AppDevPackage.ps1 -&gt; Run with PowerShell",829],["Follow the steps, you might need an internet connection to install Developper License, this will require for you to have Microsoft account",829],["If everything is okay, your app should appear on the start menu",829],["How to install an appx file on your machine?",829],["Open Windows PowerShell from start menu, navigate to your appx file, execute Add-AppxPackage &lt;yourappx&gt;.appx, if the appx was signed, it will be installed on your machine. Note: if you're installing appx file again, you have to uninstall the previous one, simply right-click on the icon, and click Uninstall.",829],["I am getting an error \"DEP0600: incorrect parameter\" while deploying an application.",829],["Something is wrong with your certificate, try creating a new by clicking on Package.appxmanifest -&gt; Packaging -&gt; Choose Certificate -&gt; Configure Certificate -&gt; Create Test Certificate",829],["Debug.Log doesn't write anything in Visual Studio Output Window",829],["Set Debugger type to Mixed or Native, because internally Debug.Log uses OutputDebugString, and that function only works for Native or Mixed debuggers.",829],["How to use Visual Studio's graphical debugger on ARM?",829],["Read this post http://msdn.microsoft.com/en-us/library/hh780905(v=vs.110).aspx . You will need to create a WinRT component, and reference it from main module.",829],["If you have Windows 8 N version (the one for Europe) and even the empty project doesn't compile",829],["Install this - http://www.microsoft.com/en-us/download/details.aspx?id=30685",829],["How to deploy a project on a tablet PC?",829],["Deployment on tablet PC is done via Visual Studio Remote Debugger",829],["Getting Started",830],["Currently if you want to build a Windows Store Apps player, you have to do it on Windows 8 or Windows 8.1 (Windows 8.1 is needed if you're targeting SDK 8.1). On Windows Store Apps platform we don't use Mono, we use Microsoft's .NET together with WinRT. This allows you to debug your scripts with Visual Studio.",830],["Unity supports three Windows Store Apps targets: X86, X64 and ARM.",830],["The player log is located under &lt;user&gt;\\AppData\\Local\\Packages\\&lt;productname&gt;\\TempState.",830],["Things that are not yet supported:",830],["Network classes, WWW is supported though",830],["GameObject.SendMessage (partially works, but function which accepts the message must match the message sent, because the argument conversion doesn't work)",830],["You can't access C# classes from JS scripts, you should be able to access JS classes from C#",830],["Fog doesn't work on devices with feature level &lt; 9.3, you need to implement it manually, see Custom Fog Shader",830],["Requirements when targeting Windows SDK 8.0:",830],["Windows 8 (Note: Windows 8 N users should install this patch http://www.microsoft.com/en-us/download/details.aspx?id=30685)",830],["Visual Studio 2012 (11.0.50727.1 or higher) or Visual Studio 2013 + Windows SDK 8.0 http://msdn.microsoft.com/en-us/library/windows/desktop/hh852363.aspx",830],["Requirements when targeting Windows SDK 8.1:",830],["Windows 8.1 (Note: Windows 8.1 N users should install this patch http://www.microsoft.com/en-us/download/details.aspx?id=40744)",830],["Visual Studio 2013 (12.021005.1 or higher)",830],["Before you can proceed you need to acquire Windows 8 developer license, this can be done in two following ways:",830],["Build an empty Windows Store application from Visual Studio and deploy it, if you're doing this first time, a dialog window for getting developer license should open, follow the steps.",830],["See this link - http://msdn.microsoft.com/en-us/library/windows/apps/hh974578.aspx#getting_a_developer_license_by_using_visual_studio",830],["Helpful links",830],["Generic Windows Store Apps samples for Windows 8.0 http://code.msdn.microsoft.com/windowsapps/Windows-8-app-samples-4d76cbbf",830],["Generic Windows Store Apps samples for Windows 8.1 http://code.msdn.microsoft.com/windowsapps/Windows-8-Modern-Style-App-Samples",830],["Generic forum for Windows Store Apps http://social.msdn.microsoft.com/Forums/windowsapps/en-US/home?category=windowsapps",830],["Unity forum dedicated to Windows Store Apps and Windows Phone 8 http://forum.unity3d.com/forums/50-Windows-Development",830],["Windows Store Apps: Missing .NET Types",831],["On Windows Store Apps Microsoft .NET is used instead of Mono. There is a special .NET version for this platform, which is not entirely compatible with Mono.",831],["In particular some data types are missing and some other classes don't have certain methods, that the same classes do have in Mono.",831],["To make porting existing games to Windows Store Apps easier, some of the missing .NET types are provided by Unity. In addition some extension methods and replacement types were added to make migration easier.",831],["Types, provided by Unity include:",831],["System.Collections.ArrayList",831],["System.Collections.Hashtable",831],["System.Collections.Queue",831],["System.Collections.SortedList",831],["System.Collections.Stack",831],["System.Collections.Specialized.HybridDictionary",831],["System.Collections.Specialized.ListDictionary",831],["System.Collections.Specialized.NameValueCollection",831],["System.Collections.Specialized.OrderedDictionary",831],["System.Collections.Specialized.StringCollection",831],["System.IO.Directory",831],["System.IO.File",831],["System.IO.FileStream",831],["System.Xml.XmlDocument",831],["System.Xml.XmlTextReader",831],["System.Xml.XmlTextWriter",831],["In addition to these a namespace WinRTLegacy is added to provide additional classes and extention methods. Among there are:",831],["Extention methods Close() for most System.IO classes (alternatively you can use Dispose(), which is available on both Mono and .NET for Windows Store Apps)",831],["WinRTLegacy.TypeExtensions has methods GetConstructor(), GetMethod(), GetProperty() for System.Type",831],["WinRTLegacy.IO.StreamReader class, that is compatible with Mono System.IO.StreamReader",831],["WinRTLegacy.IO.StreamWriter class, that is compatible with Mono System.IO.StreamWriter",831],["WinRTLegacy.Xml.XmlReader class, that is compatible with Mono System.Xml.XmlReader",831],["WinRTLegacy.Xml.XmlWriter class, that is compatible with Mono System.Xml.XmlWriter",831],["The simplest way to use the replacement classes from WinRTLegacy is via using directive:",831],["```C#",831],["if NETFX_CORE",831],["using XmlReader = WinRTLegacy.Xml.XmlReader;",831],["else",831],["using XmlReader = System.Xml.XmlReader;",831],["endif",831],["This way you can use XmlReader class, which will be taken from WinRTLegacy.Xml namespace on Windows Store and from System.Xml namespace elsewhere.",831],["Windows Store Apps: Plugins",832],["Managed Plugins",832],["You cannot use Windows Store Apps specific plugins if you use Windows Store Apps API like this http://msdn.microsoft.com/en-us/library/windows/apps/br211377.aspx in Unity Editor, so we changed a bit how Unity Editor handles them. So basically you make two versions of plugins:",832],["One for Unity Editor",832],["The other one for Windows Store Apps",832],["Both of them must share the same name and have the same assembly version. For example, you should place Editor compatible plugin in Assets\\Plugins\\MyPlugin.dll, and Windows Store Apps specific plugin in Assets\\Plugins\\WSA\\MyPlugin.dll.",832],["Go to Assets\\Plugins\\MyPlugin.dll, select Editor as the only compatible platform",832],["Go to Assets\\Plugins\\WSA\\MyPlugin.dll, select Windows Store Apps as the only compatible platform, now go to Windows Store Apps plugin settings",832],["Pick 'Assets\\Plugins\\MyPlugin.dll' in the placeholder field, this means that when building to Windows Store apps 'Assets\\Plugins\\MyPlugin.dll' will be used when compiling your scripts, but 'Assets\\Plugins\\WSA\\MyPlugin.dll' will be copied to final folder instead of 'Assets\\Plugins\\MyPlugin.dll'. This achieves two things - Unity Editor will successfully compile your scripts, but during the game you'll be using API from Windows Store Apps specific plugin.",832],["Don't process option",832],["This option is used when you don't want for Unity to patch your assemblies, usually this option should be applied for plugins which contain heavy Windows Runtime API, and Unity fails to patch them.",832],["Windows Store Apps Plugin Settings",832],["Property: Function: ",832],["SDK Limits plugin to Windows Store Apps built with SDK 8.0 or SDK 8.1. ",832],["CPU limit plugin to 32 bit, 64 bit or ARM players. ",832],["Don't process (Only applies for managed assemblies) Disables patching for this assembly. Patching is needed when assemblies contains classes serializable by Unity. In these cases, additional IL code is injected into the assemblies. If you know that assemblies doesn't have such classes then it's safe to disable the patching. Note: if the assembly isn't patched and Unity tries to serialize at runtime, you'll get an 'Out of bounds' error or something similar. ",832],["Placeholder (Only applies for managed assemblies). With Windows Store Apps you can have plugins compiled against .NET Core, but because the Unity Editor runs on Mono, it will fail to recognize such assemblies. As a result, C# or JS files won't be able to reference them. To overcome this, you have to provide an assembly compiled against .NET 3.5 with identical API which would act as a placeholder for the real plugin. ",832],["Placeholder Example",832],["For example, let's say you have two assemblies:",832],["Plugins\\WSA\\MyPlugin.dll** - assembly compiled against .NET Core with Windows Runtime API inside.",832],["Plugins\\MyPlugin.dll** - assembly compiled against .NET 3.5 which has identical public API with dummy function implementations.",832],["Click on Plugins\\WSA\\MyPlugin.dll, select Placeholder and pick Plugins\\MyPlugin.dll.",832],["This way when Unity compile scripts it will reference Plugins\\MyPlugin.dll file, but when Unity will copy plugins to final directory, it will copy Plugins\\WSA\\MyPlugin.dll instead of Plugins\\MyPlugin.dll.",832],["What happens if Unity won't patch your assemblies?",832],["Unity injects serialization code into your assemblies, meaning if you have a class derived from MonoBehaviour in your plugin, and Unity doesn't patch it, you might get a serialization error during runtime.",832],["Both of them must share the same name. For example, you should place an Editor compatible plugin at Assets\\Plugins\\MyPlugin.dll, and a Windows Store Apps specific plugin at Assets\\Plugins\\WSA\\MyPlugin.dll. When you're working in Editor the Assets\\Plugins\\MyPlugin.dll will be used, and when you're building to a Windows Store Apps app the Assets\\Plugins\\WSA\\MyPlugin.dll will copied over to the build.",832],["Windows Store Apps: Profiler",833],["You can connect Unity's profiler to running Windows Store Application.",833],["Perform the following steps:",833],["Go to Player Settings -> Publishing Settings -> Capabilities",833],["Enable Internet (Client &amp; Server)",833],["Enable Private Networks (Client &amp; Sever)",833],["Build Windows Store App Visual Studio solution from Unity.",833],["Build and run the application",833],["If you've checked Autoconnect Profiler checkbox, the profiler should connect automatically to Windows Store App, if not - you have to explicitly pick it in Unity (Window -&gt; Profiler -&gt; Active Profiler), for ex., MetroPlayerX86 (MyDevice)",833],["Note: Profiler doesn't work on Master configuration",833],["Note: Due Windows Store Apps restrictions, you won't be able to connect the profiler if the application is running on the same machine. For ex., if you're running Unity editor and Windows Store App on the same PC, you won't able to connect. You have to run Unity editor on one machine, and Windows Store App on another machine.",833],["Note: Also ensure that machine where Unity Editor is running and machine where Windows Store App is running - are on the same subnet.",833],["Windows Store Apps: Project description",834],["Unity generates an XAML C# Visual Studio solution. With XAML C# solution generated you are able to use managed assemblies, such as UnityEngine.dll, Assembly-CSharp.dll, etc. with XAML code on top.",834],["Unity will create files like resources, vcproj, xaml files. If you build a project on top of the same directory, these files will not be overwritten:",834],["Project files &amp; solution files (.vcproj, .sln, etc.)",834],["Source files (App.xaml.cs, App.xaml.cpp)",834],["XAML files (App.xaml, MainPage.xaml, etc.)",834],["Image files (Assets\\SmallTile.png, Assets\\StoreLogo.png, etc.)",834],["Manifest file - Package.appxmanifest",834],["It is safe for you to modify these files, and if you want to revert to previous state, just remove the file, and build your project on top of the folder.",834],["Note: Unity doesn't modify solution and project files if they already exist on the disk. Visual Studio takes the whole Data folder, instead of individual files, so if new file is added to Data folder, it's automatically picked.",834],["Configurations",834],["Generated Visual Studio projects have three configurations: Debug, Release and Master. Debug configuration has various safety checks and runs slower, Release configuration removes all those checks, but leaves profiler enabled. Master configuration should be used for final build that you submit to Store.",834],["If you see Development Build text on the lower left corner, it means the game was not build for submission. This text will be shown, if you select Development Build when building form Unity, or if you've build Debug or Release configuration.",834],["Windows Store Apps: WinRT API in C# scripts",835],["It is possible to use WinRT API directly in Unity scripts. However there are limitations and requirements for this:",835],["Scripts must be written in C#, it's not possible to use WinRT API from UnityScript",835],["Scripts must be compiled using Microsoft's compiler, not Mono. This requires to set compilation overrides to Use .NET Core or Use .NET Core Partially, in the later case scripts must not be under Plugins or Standard Assets folders",835],["Because the same script code is also used by Unity Editor (which always uses Mono), all code that uses WinRT API must be under NETFX_CORE define",835],["Note, that NETFX_CORE is defined by Visual Studio when compiling code for Windows Store Apps, so it can be used in any C# code, not just Unity scripts.",835],["Bellow is an example for getting advertising is using WinRT API directly:",835],["```C#",835],["using UnityEngine;",835],["public class WinRTAPI : MonoBehaviour {",835],["void Update() {",835],["auto adId = GetAdvertisingId();",835],["// ...",835],["string GetAdvertisingId() {",835],["if NETFX_CORE",835],["return Windows.System.UserProfile.AdvertisingManager.AdvertisingId;",835],["else",835],["return \"\";",835],["endif",835],["Windows Universal Applications: FAQ",836],["How do I build a Universal Windows Phone/Store 8.1 application from Unity?",836],["Select \"Universal 8.1\" SDK under Windows Store platform.",836],["Help! There's too many defines! Which are defined for which platform?",836],["No worries. Here's all of them:",836],["",836],["UNITY_WP8 defined on Windows Phone 8.0 apps only; ",836],["UNITY_WP_8_1 defined on Windows Phone 8.1 apps; ",836],["UNITY_WSA defined on Windows Phone 8.1, Windows Store 8.0, Windows Store 8.1 and Universal 8.1 apps; ",836],["UNITY_WSA_8_0 defined on Windows Store 8.0 apps; ",836],["UNITY_WSA_8_1 defined on Windows Store 8.1 apps; ",836],["UNITY_WINRT defined on both Windows Phone and Windows Store apps, regardless of version; ",836],["UNITY_WINRT_8_0 defined on Windows Phone 8.0 and Windows Store 8.0 apps; ",836],["UNITY_WINRT_8_1 defined on Windows Phone 8.1, Windows Store 8.1 and Universal apps regardless of device it's running on; ",836],["NETFX_CORE defined on Windows Store 8.0, Windows Store 8.1, Windows Phone 8.1 and Universal 8.1 scripts that are compiled using Microsoft C# compiler. ",836],["Where do I put my plugins for Windows Phone 8.1 or Universal Apps?",836],["Please check PluginInspector.html",836],["Note: We do not support Windows Phone 8.1 silverlight assemblies as plugins for Windows Phone 8.1.",836],["Windows Universal Applications: Getting Started",837],["Unity exposes a way to build Universal Windows Store/Phone 8.1 applications, through selecting \"Universal 8.1\" SDK in build window. Upon building such a project, Unity creates a Universal Visual Studio project, which then can be built to both Windows and Windows Phone devices.",837],["How does it work?",837],["Windows Phone 8.1 and Windows 8.1 are still not binary compatible - you cannot run a single DLL on both platforms unless it is a portable class library, which would mean you would not be able to access platform specific APIs on them (like SMS API on the Windows Phone and mouse API on Windows). Therefore, we compile two versions of assemblies.",837],["There are two main differences between assemblies compiled for the phone and the store: preprocessor directives and target SDK. Windows gets to target Windows .NET Core, while the Phone targets Phone .NET Core. They're almost identical, although there are some very minor differences.",837],["Universal Project folder structure looks like this:",837],["UniversalApp1 - (solution directory)",837],["UniversalApp1.Windows - (here goes windows specific files, all Windows DLLs)",837],["UniversalApp1.WindowsPhone - (here goes windows phone specific files, all Windows Phone DLLs)",837],["UniversalApp1.Shared - (here goes shared files)",837],["When you build a Universal Application, you will produce two binaries out of single project - one for Windows and one for Windows Phone. Neither AppX package has redundant files left from over the other platform - all thanks to the project structure.",837],["Prerequisites",837],["In order to build applications for Windows Phone 8.1, Visual Studio 2013 installation with Windows Phone 8.1 support is required.",837],["Windows Universal Applications",838],["Windows Universal Applications is a way to target both Windows Store and Windows Phone target with a - single Visual Studio project that works on both Windows 8.1 and Windows Phone 8.1: desktops, laptops, tablets and phones. It is a direct result of platform convergence movement.",838],["You can read more about Windows Universal Applications here: http://dev.windows.com/en-us/develop/Building-universal-Windows-apps",838],["Ragdoll Wizard",839],["Unity has a simple wizard that lets you quickly create your own ragdoll. You simply have to drag the different limbs on the respective properties in the wizard. Then select create and Unity will automatically generate all Colliders, Rigidbodies and Joints that make up the Ragdoll for you.",839],["Creating the Character",839],["Ragdolls make use of Skinned Meshes, that is a character mesh rigged up with bones in the 3D modeling application. For this reason, you must build ragdoll characters in a 3D package like Maya or Cinema4D.",839],["When you've created your character and rigged it, save the asset normally in your Project Folder. When you switch to Unity, you'll see the character asset file. Select that file and the Import Settings dialog will appear inside the inspector. Make sure that Mesh Colliders is not enabled.",839],["Using the Wizard",839],["It's not possible to make the actual source asset into a ragdoll. This would require modifying the source asset file, and is therefore impossible. You will make an instance of the character asset into a ragdoll, which can then be saved as a Prefab for re-use.",839],["Create an instance of the character by dragging it from the Project View to the Hierarchy View. Expand its Transform Hierarchy by clicking the small arrow to the left of the instance's name in the Hierarchy. Now you are ready to start assigning your ragdoll parts.",839],["Open the Ragdoll Wizard by choosing GameObject &gt; 3D Object &gt; Ragdoll... from the menu bar. You will now see the Wizard itself.",839],["Assigning parts to the wizard should be self-explanatory. Drag the different Transforms of your character instance to the appropriate property on the wizard. This should be especially easy if you created the character asset yourself.",839],["When you are done, click the Create Button. Now when you enter Play Mode, you will see your character go limp as a ragdoll.",839],["The final step is to save the setup ragdoll as a Prefab. Choose Assets -&gt; Create -&gt; Prefab from the menu bar. You will see a New Prefab appear in the Project View. Rename it to \"Ragdoll Prefab\". Drag the ragdoll character instance from the Hierarchy on top of the \"Ragdoll Prefab\". You now have a completely set-up, re-usable ragdoll character to use as much as you like in your game.",839],["Note",839],["For Character Joints made with the Ragdoll wizard, take a note that the setup is made such that the joint's Twist axis corresponds with the limb's largest swing axis, the joint's Swing 1 axis corresponds with limb's smaller swing axis and joint's Swing 2 is for twisting the limb. This naming scheme is for legacy reasons.",839],["Working with UnityObject2",840],["UnityObject2 is a JavaScript script that simplifies Unity content embedding into HTML and allows you to customize the install process. Having a custom install UI that matches your game and website, will create a more engaging and pleasurable experience for the end-user. It has functions to detect the Unity Web Player plugin, initiate Web Player installation and embed Unity content. Although it's possible to deploy UnityObject2.js file on the web server alongside the HTML file it's best to load it directly from the Unity server at http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js or https://ssl-webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js for https support. That way you will always reference the most up to date version of UnityObject2. Please note that the UnityObject2.js file hosted on the Unity server is minified to make it smaller and save traffic. If you want to explore the source code you can find the original file in the Data\\Resources folder on Windows and the Contents/Resources folder on Mac OS X. UnityObject2 by default sends anonymous data to GoogleAnalytics which is used to help us identify installation type and conversion rate. UnityObject2 depends on jQuery.",840],["Constructor",840],["You will need to create a new instance of the unityObject2 for each Unity content present on the page.",840],["Parameters:",840],["configuration - An object containing the configuration for this instance. Those are the available members:",840],["width - Default: 100%, Width of Unity content. Can be specified in pixel values (e.g. 600, \"450\") or in percentage values (e.g. \"50%\", \"100%\"). Note that percentage values are relative to the parent element.",840],["height - Default: 100%, Height of Unity content. Can be specified in pixel values (e.g. 600, \"450\") or in percentage values (e.g. \"50%\", \"100%\"). Note that percentage values are relative to the parent element.",840],["fullInstall - Default: false, Installs the full Web Player if not available. Normally only a small part of the Web Player is installed and the remaining files are automatically downloaded later.",840],["enableJava - Default: true, Enables Java based installation. Some platforms doesn't support this feature.",840],["enableClickOnce - Default: true, Enables ClickOnce based installation. Only works on Internet Explorer browsers.",840],["enableUnityAnalytics - Default: true, Notifies Unity about Web Player installation. This doesn't do anything if the Web Player is already installed.",840],["enableGoogleAnalytics -Default: true, Notifies Unity about Web Player installation using Google Analytics. This doesn't do anything if the Web Player is already installed.",840],["params - Default: {}, Extra parameters to be used when embedding the Player. Those are usefull to customize the Unity experience:",840],["backgroundcolor - Default: \"FFFFFF\", The background color of the web player content display region during loading, the default is white. Pro Only",840],["bordercolor - Default: \"FFFFFF\", The color of the one pixel border drawn around the web player content display region during loading. Pro Only",840],["textcolor - Default: \"000000\", The color of error message text (when data file fails to load for example). Pro Only",840],["logoimage - Default: unity Logo, The path to a custom logo image, the logo image is drawn centered within the web player content display region during loading. Pro Only",840],["progressbarimage - The path to a custom image used as the progress bar during loading. The progress bar image width is clipped based on the amount of file loading completed, therefore it starts with a zero pixel width and animates to its original width when the loading is complete. The progress bar is drawn beneath the logo image. Pro Only",840],["progressframeimage - The path to a custom image used to frame the progress bar during loading. Pro Only",840],["disableContextMenu - This parameter controls whether or not the Unity Web Player displays a context menu when the user right- or control-clicks on the content. Setting it to true prevents the context menu from appearing and allows content to utilize right-mouse behavior. To enable the context menu don't include this parameter.",840],["disableExternalCall - This parameter controls whether or not the Unity Web Player allows content to communicate with browser-based JavaScript. Setting it to true prevents browser communication and so content cannot call or execute JavaScript in the browser, the default is false.",840],["disableFullscreen - This parameter controls whether or not the Unity Web Player allows content to be viewed in fullscreen mode. Setting it to true prevents fullscreen viewing and removes the \"Go Fullscreen\" entry from the context menu, the default is false.",840],["attributes - Default: {}, Object containing list of attributes. These will be added to underlying &lt;object&gt; or &lt;embed&gt; tag depending on the browser.",840],["debugLevel - Default: 0, Enables/Disables logging, useful when developing to be able to see the progress on the browser console. Set it greater to 0 to enable.",840],["Notes:",840],["All color values provided must be 6-digit hexidecimal colors, (eg. FFFFFF, 020F16, etc.). The image paths provided can be either relative or absolute links and all image files must be RGB (without transparency) or RGBA (with transparency) 8-bit/channel PNG files. Finally, the progressframeimage and the progressbarimage should be the same height.",840],["Functions",840],["observeProgress",840],["You can register a callback that will receive notifications during the plugin installation and/or initialization.",840],["Parameters:",840],["callback - Callback function that will receive information about the plugin installation/initialization. This callback will receive an progress object.",840],["progress - It contains information about the current step of the plugin installation/initialization.",840],["pluginStatus - Will contain a string identifying the plugin status, can be one of those:",840],["unsupported` - The current Browser/OS is not supported",840],["missing - Supported platform, but the plugin haven't be installed yet.",840],["installed - The plugin have finished installing, or was already installed.",840],["first - called after the plugin have been installed at the first frame of the game is played (This will not be called if the plugin was already installed previously)",840],["targetEl - The DOM Element serving as a container for the webplayer (This is the same element you pass to UnityObject2.initPlugin)",840],["bestMethod - If the plugin is missing will contain the best installation path for the current platform, can be one of the following strings:",840],["JavaInstall - It will use our \"One Click\" Java Applet to install the plugin",840],["ClickOnceIE - It will use Internet Explorer's Click Once install",840],["Manual - It will ask the user to download a file and install it manually.",840],["unityObj- A reference to the previously created unityObject2 instance responsible for this callback",840],["ua - Contains some User Agent information used to decide the pluginStatus and bestMethod.",840],["initPlugin",840],["This will actually try to start up your game. And call the callback you previously registered at the appropriated moments. Note that",840],["Parameters:",840],["containerElement - The DOM Element serving as a container for the webplayer",840],["gameURL - URL to the web player data file (.unity3d). Can be relative or absolute.",840],["Notes:",840],["This function should be called after the containerElement is present on the DOM, to be safe, you could wait for the DOM to load completely before calling it.",840],["installPlugin",840],["Tries to install the plugin using the specified method. If no method is passed, it will try to use this.getBestInstallMethod().",840],["Parameters:",840],["method - Default: this.getBestInstallMethod(). A string specifying which method to use for installation. It can be one of the following values: JavaInstall, ClickOnceIE, Manual.",840],["Notes:",840],["Not all methods are available in every platform/browser. Manual will download an exe/dmg installer and the user will need to perform a manual installation.",840],["getUnity",840],["This will return a reference to the player, so you can Call SendMessage from it for instance.",840],["Notes:",840],["Will return null if the WebPlayer has not been initialized yet.",840],["Example:",840],["This exemplifies a very simple UnityObject2 usage. If the user already has the plugin installed, the WebPlayer will load normally, otherwise it will reveal a hidden div.missing and attach a click event to the install button. After installation is succeeded, the screen is hidden, and the webplayer is loaded normally.",840],["",840],["",840],["",840],["Unity Web Player   \"Sample\"",840],["",840],["",840],["var unityObjectUrl = \"http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js\";",840],["if (document.location.protocol == 'https:')",840],["unityObjectUrl = unityObjectUrl.replace(\"http://\", \"https://ssl-\");",840],["document.write('&lt;\\/script>');",840],["-->",840],["",840],["",840],["var u = new UnityObject2();",840],["u.observeProgress(function (progress) {",840],["var $missingScreen = jQuery(progress.targetEl).find(\".missing\");",840],["switch(progress.pluginStatus) {",840],["case \"unsupported\":",840],["showUnsupported();",840],["break;",840],["case \"broken\":",840],["alert(\"You will need to restart your browser after installation.\");",840],["break;",840],["case \"missing\":",840],["$missingScreen.find(\"a\").click(function (e) {",840],["e.stopPropagation();",840],["e.preventDefault();",840],["u.installPlugin();",840],["return false;",840],["});",840],["$missingScreen.show();",840],["break;",840],["case \"installed\":",840],["$missingScreen.remove();",840],["break;",840],["case \"first\":",840],["break;",840],["});",840],["jQuery(function(){",840],["u.initPlugin(jQuery(\"#unityPlayer\")[0], \"Example.unity3d\");",840],["});",840],["",840],["",840],["",840],["",840],["Unity Web Player   WebPlayer",840],["",840],["",840],["",840],["",840],["",840],["",840],["",840],["",840],["",840],["",840],["&laquo; created with Unity &raquo;",840],["",840],["",840],["Windows Phone 8.1: FAQ",841],["How do I build to Windows Phone 8.1 platform from Unity?",841],["To build a Windows Phone 8.1 application, select \"Phone 8.1\" SDK under Windows Store platform.",841],["Which player settings do I set for Windows Phone 8.1 games? Windows Store or Windows Phone 8?",841],["Windows Store.",841],["Which platform defines are defined for Windows Phone 8.1?",841],["UNITY_METRO, UNITY_WP_8_1, UNITY_WINRT, UNITY_WINRT_8_1. Additionally, NETFX_CORE is defined when compiling scripts with Microsoft .NET compiler.",841],["How do I choose which compiler to use for my C# scripts?",841],["Under publishing settings on Windows Store player settings, there's a drop down menu called \"Compilation overrides\". There are 3 settings:",841],["None. All C# scripts will get compiled with Mono C# compiler;",841],["Use Net Core Partially. Scripts that are in folders “Assets/Plugins”, “Assets/Standard Assets” and “Assets/Pro Standard Assets” will get compiled with Mono C# compiler, while the rest will be compiled with Microsoft C# compiler;",841],["Use Net Core. All scripts will get compiled with Microsoft C# compiler.",841],["Both compilers have their ups and downs. Compiling scripts with the Mono C# compiler will allow them to be referenced by JavaScript scripts, which, for example, is needed for Angry Bots (hence you have to set it to none). However, using the Microsoft C# compiler will allow you to use Microsoft specific APIs without the need for plugins - just wrap the code in #if NETFX_CORE/#endif, and it will compile and work just fine.",841],["Windows Phone 8.1: Getting Started",842],["Windows Phone 8.1 brings many changes to Unity for Windows Phone. Due to the convergence effort, Windows Phone 8.1 is considered to be a part of Windows Store Apps family, rather than being an extension to Windows Phone 8. As such, it behaves much  more like Windows Store Apps behave on Unity.",842],["Here are some of the bigger changes that Windows Phone 8.1 brought to Unity:",842],["As in Windows Store applications, scripts may now be compiled with Microsoft C# compiler, which means one can access phone specific APIs in scripts. For more info, check FAQ.",842],["For Windows Phone 8.1 projects, preprocessor define UNITY_WP8 is not defined anymore. These preprocessor defines are present: UNITY_METRO, UNITY_WP_8_1, UNITY_WINRT, UNITY_WINRT_8_1. When compiling scripts with",842],["Microsoft C# compiler, additionally NETFX_CORE is defined as well.",842],["Building Windows Phone 8.1 project is located under \"Windows Store\" platform. To build a Windows Phone 8.1 application, select \"Phone 8.1\" SDK.",842],["In addition, UnityEngine.WSA namespace is available to Windows Phone 8.1 games, while UnityEngine.WindowsPhone is not anymore.",842],["Unity exposes a way to build Universal Windows Store/Phone 8.1 applications, through selecting \"Universal 8.1\" SDK in build window. Upon building such a project, Unity creates a Universal Visual Studio project, which then can be built to both Windows and Windows Phone devices.",842],["Prerequisites",842],["In order to build applications for Windows Phone 8.1, Visual Studio 2013 installation with Windows Phone 8.1 support is required.",842],["Windows Phone 8.1",843],["Windows Phone 8.1 is the latest edition of Microsoft's Windows Phone mobile operating system, succeeding Windows Phone 8. Windows Phone 8.1 focuses a lot on convergence between Windows Phone and Windows Store platforms into a single developer platform that runs the same types of apps. Windows Phone 8.1 and Windows Store share a similar app model and life cycle, a shared toolset, a common XAML UI framework and CLR runtime (which replaced Silverlight, used in Windows Phone 8.0). Windows Phone 8.1 uses AppX packaging for applications, rather than the old XAP package.",843],["Windows Phone 8.1 introduces a new notification center, along with a set of capabilities developers can use to manage toast notifications through local API calls or by using push. Through these APIs and mechanisms, an app can manage the toast notifications they send to users. Operations include add, remove, replace, and expire. All notification classes are in the Windows.UI.Notifications namespace.",843],["Windows Phone 8.1 supports many more DirectX features when compared to Windows Phone 8. These include:",843],["Direct2D APIs",843],["DirectWrite APIs",843],["Windows Imaging Component APIs",843],["Runtime shader compilation and reflection",843],["GPU access to YUV shaders",843],["GPU performance counters",843],["Graphics diagnostics support",843],["Windows Phone 8.1 has adopted the SwapChainPanel XAML control in favor of BackgroundDrawingSurfaceGrid, which was used on Windows Phone 8.",843],["Windows Phone 8.1 provides APIs that you can use to create an app that records images or videos of the phone’s screen activity. This way games can upload and share in-game activities. This feature is enabled through enhancements to the Windows.Media.Capture APIs already available to Windows Store apps.",843],["Windows Phone 8.1 emulator adds support for SD card emulation, and multi-touch with mouse, improved networking support to simplify setup, configuration, and access to network resources and to reduce troubleshooting.",843],["Windows Phone 8.1 adds support for remote performance monitoring, ETW logging, and App Verifier. Existing Windows Phone 8 command-line tools – Isolated Storage Explorer, the deployment tool, and the phone registration tool – are still supported. The Simulation Dashboard is not updated for Windows Phone (code-named \"Blue\").",843],["Windows Phone 8: Debugging",844],["Visual Studio can be used to debug C# scripts:",844],["Build Visual Studio project.",844],["Open generated solution.",844],["Click FILE -&gt; Add -&gt; Exiting Project..., navigate to Unity project folder and select Assembly-CSharp.csproj file.",844],["Go to BUILD -&gt; Configuration Manager... and make sure ARM platform is selected for your project.",844],["Optionally uncheck Build flag for Assembly-CSharp since it has already been built by Unity.",844],["Add breakpoint(s) to your script file(s).",844],["Make sure phone is connected to PC and is unlocked.",844],["Make sure debugger type is set to Managed Only (default).",844],["Hit F5 to build, deploy, run and debug your app.",844],["If debugging doesn't help to resolve your issue it might be useful to examine UnityPlayer.log file. It's located on the phone and can be retrieved by utility called Windows Phone Power Tools. Don't forget to include this file with your bugs reports.",844],["Windows Phone 8: Deployment",845],["To deploy Windows Phone 8 app on your phone follow these steps:",845],["Open Build Settings.",845],["Optionally check Development Build if you want to profile your game.",845],["Make sure phone is connected to PC and is unlocked.",845],["Click Build And Run.",845],["Select folder to build Visual Studio project to.",845],["Once the project is built and app is deployed to your phone it should appear on the screen.",845],["This is the fastest way to deploy your app. However you might want to modify exported Visual Studio project first. In that case do the following:",845],["Click Build instead of Build and Run.",845],["Select folder to build Visual Studio project to.",845],["Open generated Visual Studio solution.",845],["Modify project if needed.",845],["Select desired build configuration.",845],["Build and deploy project to your phone.",845],["There are three build configurations you can choose from. Debug should be used to debug your scripts. Release optimizes code for better performance. Master configuration build should be used to submit your app to the Store. It has profiler support stripped out.",845],["Unity will not overwrite changes made to Visual Studio project.",845],["Build Settings window has Development Build checkbox that selects Release configuration instead of Master in case build and run is clicked. Otherwise configuration can be freely chosen from Visual Studio. Additionally Development Build checkbox enables development build. In that case Debug.isDebugBuild will be enabled.",845],["WP8 Examples",846],["NativeBattery is an example project that shows how to invoke native code from Unity on Windows Phone.",846],["WindowsPhoneUnityConnection is an example project that shows how to communicate between Unity and Windows Phone.",846],["Shows how to properly use Asset Bundles on Windows Phone 8.",846],["Windows Phone 8: FAQ",847],["Why am I getting errors like \"type Foo.Bar doesn't exist in target framework\"?",847],["It's because Windows Phone 8 uses a different flavor of .NET called .NET for Windows Phone which is missing some of the types available on other platforms. You'll have to either replace these types with different ones or implement them yourself.",847],["If you aren't using them, one of the scripting assemblies you're using is. Remove them one by one to find out which one it is.",847],["Is there a platform define for Windows Phone 8?",847],["Yes, it's UNITY_WP8.",847],["How do I change screen orientation?",847],["It has to be changed both in Unity Player Settings and Visual Studio MainPage.xaml file.",847],["What are graphic capabilities of Windows Phone 8 devices?",847],["All Windows Phone 8 devices have GPUs that support feature level 9_3 of Microsoft Direct3D 11. Higher or lower feature levels are not available.",847],["Is Windows Phone 7.5 supported?",847],["No.",847],["How do I make \"Development build\" watermark go away?",847],["For that watermark you go away, you have to build the project in Master configuration in Visual Studio.",847],["Windows Phone 8: Getting Started",848],["Building games for Windows Phone 8 is very similar to building games for Windows Store. The process is not identical though. Some of the differences include different Visual Studio project exported by the Editor, scripting based on .NET for Windows Phone instead of .NET for Windows Store and hardware more similar to that of iOS or Android.",848],["Prerequisites",848],["Download the Windows Phone SDK 8.0 which includes Microsoft Visual Studio Express 2012 for Windows Phone. If you already have Visual Studio 2012 Professional or higher, the SDK templates and tools are integrated into your existing installation of Visual Studio. Windows Phone SDK 8.0 requires 64-bit Windows 8 Pro or higher. You can't develop Windows Phone 8 apps on Windows 7, XP, OS X or Linux. Registered Windows Phone 8 device is needed to test your apps. Instructions on phone registration can be found here. Windows Phone Emulator will be supported in future Unity releases.",848],["Windows Phone 8: Missing .NET Types",849],["On Windows Phone 8 Microsoft .NET is used instead of Mono. There is a special .NET version for this platform, which is not entirely compatible with Mono.",849],["The issues encountered due to incompatibility are mostly the same as in Windows Store Apps. For solution, please, refer to this page.",849],["Windows Phone 8: C++ Plugins",850],["In this guide we will create a Unity Plugin for Windows Phone using C++. The plugin itself will have one function: it will add two numbers together and return the result.",850],["First, we will create a new Unity project and add this script to the camera:",850],["using UnityEngine;",850],["public class SceneScript : MonoBehaviour",850],["private readonly Rect m_FirstTextAreaLocation = new Rect(Screen.width / 5, Screen.height / 2, Screen.width / 5, Screen.height / 10);",850],["private readonly Rect m_SecondTextAreaLocation = new Rect(3 * Screen.width / 5, Screen.height / 2, Screen.width / 5, Screen.height / 10);",850],["private readonly Rect m_CalculateButtonLocation = new Rect(2 * Screen.width / 5, 4 * Screen.height / 5, Screen.width / 5, Screen.height / 10);",850],["private readonly Rect m_ResultLabelLocation = new Rect(2 * Screen.width / 5, 3 * Screen.height / 5, Screen.width / 5, Screen.height / 10);",850],["private GUIStyle m_GuiStyle;",850],["private string m_FirstNumber, m_SecondNumber;",850],["private string m_Result;",850],["public delegate int AddFunction(int first, int second);",850],["private AddFunction addFunction;",850],["void Start()",850],["m_GuiStyle = new GUIStyle { alignment = TextAnchor.MiddleCenter, fontSize = 32 };",850],["void OnGUI()",850],["m_FirstNumber = GUI.TextArea(m_FirstTextAreaLocation, m_FirstNumber ?? \"\");",850],["m_SecondNumber = GUI.TextArea(m_SecondTextAreaLocation, m_SecondNumber ?? \"\");",850],["int first, second;",850],["bool firstParsed = false,",850],["secondParsed = false;",850],["if (int.TryParse(m_FirstNumber, out first))",850],["firstParsed = true;",850],["if (int.TryParse(m_SecondNumber, out second))",850],["secondParsed = true;",850],["if (firstParsed &amp;&amp; secondParsed)",850],["if (GUI.Button(m_CalculateButtonLocation, \"Calculate\"))",850],["if (addFunction != null)",850],["m_Result = \"Result: \" + addFunction(first, second).ToString();",850],["else",850],["m_Result = \"Add function wasn't set!\";",850],["GUI.Label(m_ResultLabelLocation, m_Result, m_GuiStyle);",850],["public void SetAddFunction(AddFunction func)",850],["addFunction = func;",850],["The script draws two text areas on the screen, and if parsable numbers are filled into both of them, displays a button to calculate the result with an AddFunction. Our addFunction can be set with SetAddFunction method, which will be exposed to use in our generated Visual Studio solution. Don't forget to attach this script to the main camera in the scene. Export the project and open generated Visual Studio solution. In the generated solution, add a new project of type C++ -&gt; Windows Phone -&gt; Windows Phone Runtime Component:",850],["Next, add a reference of our newly created plugin to your generated Visual Studio project:",850],["It will be listed under Solution category:",850],["Rename class from WindowsPhoneRuntimeComponent to NumberManager, to reflect the purpose of it:",850],["Add a method to add two numbers in NumberManager class:",850],["Finally, set the addFunction to our script in Unity_Loaded() method:",850],["You're done! Run the project and observe the results:",850],["Attachments",850],["Windows Phone 8: C# Plugins",851],["In this guide we will create a Unity Plugin for Windows Phone which uses Windows Phone specific API to get device name. On other devices such information is not available, so we will return \"Not Windows Phone\" string instead.",851],["To create a plugin specific to Windows Phone, create a new solution in Visual Studio. Select Other Project Types -&gt; Visual Studio Solutions -&gt; Blank Solution:",851],["Next, you'll need to add two projects, one for Windows Phone (real DLL) and one for Editor (fake DLL). In Solution Explorer, right click the newly created solution and select add project:",851],["Select Windows Phone Class Library template. We'll name the project \"RealDLL\" for clarity sakes:",851],["When prompt, make sure to select Windows Phone 8.0 OS, rather than Windows Phone 7.1:",851],["Once the project is created, go to its properties and change Assembly name and Default namespace to your solution name:",851],["Next, open file \"Class1.cs\" and change its namespace to solution name as well:",851],["Add Windows Phone specific functionally to the project. In this example, we'll make a property to get device name:",851],["Build the Solution. 2 files should be created:",851],["Alright, the first part is done. Now we need to create the fake DLL for the editor to use. Create a new project again, and this time, select Windows -&gt; Class Library template. Make sure to change the .NET framework to 3.5!",851],["Once again, change Assembly name and Default namespace in project properties and change the namespace of the class. Next, implement identical non-private methods/fields/properties as in the real DLL:",851],["Build the solution. 2 more files should be created:",851],["That's it! The plugins were created. To import them to your Unity project, copy the FakeDLL to &lt;UnityProjectPath&gt;/Assets/Plugins:",851],["And the RealDLL to &lt;UnityProjectPath&gt;/Assets/Plugins/WP8:",851],["Finally, write a script to make use of the new plugin (and don't forget to attach it to the camera!):",851],["Results:",851],["Attachments:",851],["Windows Phone 8: Plugins",852],["Windows Phone 8 plugins work almost identically to Windows Store plugins. They enable access to types in .NET for Windows Phone that would otherwise be inaccessible from Unity. Two assemblies must be compiled with identical names and interfaces. By interface we mean public type names, methods, properties, etc. One of them is placed in Assets\\Plugins folder and is used by the Editor. Another one (with Windows Phone 8 specific implementation) should be placed in Assets\\Plugins\\WP8 folder. During the build process it will overwrite default plugin and will be used on the actual device.",852],["Windows Phone 8: Profiler",853],["One of the simplest ways to profile Windows Phone 8 app is over WiFi. Build your app with Development Build enabled in Build Settings (or choose Debug or Release configuration if you're building from Visual Studio). Deploy and run the app. Open Profiler window in Unity and select WP8Player from Active Profiler menu. Incoming data will appear on the screen. Please keep in mind that GPU profiling is not yet support on Windows Phone 8 platform.",853],["Troubleshooting",853],["If WP8Player option doesn't appear in Active Profiler menu you can try connecting directly to the phone by manually specifying IP address. Also make sure that Unity Editor is not blocked by the firewall. Profiler might also not work if connected to the public network.",853],["Interaction between Unity and Windows Phone",854],["In this guide we will interact between Unity and Windows Phone by making Windows Phone aware of game state. Specifically, we will have a sphere moving on the screen which can be stopped/made to move using Unity GUI.Button. Windows Phone will display a XAML text block which will accurately say the current state of the sphere (whether it's moving or not).",854],["We begin by creating a new Unity Project. Add a sphere and a new C# script to the scene, and add this code to the script:",854],["using System;",854],["using UnityEngine;",854],["public class SphereScript : MonoBehaviour",854],["private bool m_IsMoving = true;",854],["private bool m_IsMovingLeft = false;",854],["public Camera GameCamera;",854],["public event Action SphereStateChanged;",854],["public bool IsSphereMoving { get { return m_IsMoving; } }",854],["void Start()",854],["if (GameCamera == null)",854],["throw new Exception(\"Camera is not attached to the sphere script!\");",854],["void FixedUpdate()",854],["if (!m_IsMoving)",854],["return;",854],["if (m_IsMovingLeft)",854],["transform.position -= new Vector3(0.2f, 0.0f);",854],["if (GameCamera.WorldToScreenPoint(transform.position).x &lt; 100.0f)",854],["m_IsMovingLeft = false;",854],["else",854],["transform.position += new Vector3(0.2f, 0.0f);",854],["if (GameCamera.WorldToScreenPoint(transform.position).x > Screen.width - 100.0f)",854],["m_IsMovingLeft = true;",854],["void OnGUI()",854],["var buttonText = m_IsMoving ? \"Stop sphere\" : \"Start sphere movement\";",854],["if (GUI.Button(new Rect(0, 0, Screen.width, 40), buttonText))",854],["m_IsMoving = !m_IsMoving;",854],["if (SphereStateChanged != null)",854],["SphereStateChanged(m_IsMoving);",854],["Don't forget to attach main camera to the sphere script in the inspector.",854],["Build the project for Windows Phone 8 and open the resulting Visual Studio solution.",854],["Add a TextBlock XAML element to MainPage.xaml file:",854],["Add sphere state changed event handling method. Remember, XAML can only be interacted with through the UI thread, so we use Dispatcher to execute our method there:",854],["Finally, attach that handler method to our sphere state changed event which we declared in the script.",854],["Result",854],["Attachments",854],["An Example of a YAML Scene File",855],["An example of a simple but complete scene is given below. The scene contains just a camera and a cube object. Note that the file must start with the two lines",855],["%YAML 1.1",855],["%TAG !u! tag:unity3d.com,2011:",855],["...in order to be accepted by Unity. Otherwise, the import process is designed to be tolerant of omissions - default values will be supplied for missing property data as far as possible.",855],["%YAML 1.1",855],["%TAG !u! tag:unity3d.com,2011:",855],["--- !u!header",855],["SerializedFile:",855],["m_TargetPlatform: 4294967294",855],["m_UserInformation:",855],["--- !u!29 &amp;1",855],["Scene:",855],["m_ObjectHideFlags: 0",855],["m_PVSData:",855],["m_QueryMode: 1",855],["m_PVSObjectsArray: []",855],["m_PVSPortalsArray: []",855],["m_ViewCellSize: 1.000000",855],["--- !u!104 &amp;2",855],["RenderSettings:",855],["m_Fog: 0",855],["m_FogColor: {r: 0.500000, g: 0.500000, b: 0.500000, a: 1.000000}",855],["m_FogMode: 3",855],["m_FogDensity: 0.010000",855],["m_LinearFogStart: 0.000000",855],["m_LinearFogEnd: 300.000000",855],["m_AmbientLight: {r: 0.200000, g: 0.200000, b: 0.200000, a: 1.000000}",855],["m_SkyboxMaterial: {fileID: 0}",855],["m_HaloStrength: 0.500000",855],["m_FlareStrength: 1.000000",855],["m_HaloTexture: {fileID: 0}",855],["m_SpotCookie: {fileID: 0}",855],["m_ObjectHideFlags: 0",855],["--- !u!127 &amp;3",855],["GameManager:",855],["m_ObjectHideFlags: 0",855],["--- !u!157 &amp;4",855],["LightmapSettings:",855],["m_ObjectHideFlags: 0",855],["m_LightProbeCloud: {fileID: 0}",855],["m_Lightmaps: []",855],["m_LightmapsMode: 1",855],["m_BakedColorSpace: 0",855],["m_UseDualLightmapsInForward: 0",855],["m_LightmapEditorSettings:",855],["m_Resolution: 50.000000",855],["m_LastUsedResolution: 0.000000",855],["m_TextureWidth: 1024",855],["m_TextureHeight: 1024",855],["m_BounceBoost: 1.000000",855],["m_BounceIntensity: 1.000000",855],["m_SkyLightColor: {r: 0.860000, g: 0.930000, b: 1.000000, a: 1.000000}",855],["m_SkyLightIntensity: 0.000000",855],["m_Quality: 0",855],["m_Bounces: 1",855],["m_FinalGatherRays: 1000",855],["m_FinalGatherContrastThreshold: 0.050000",855],["m_FinalGatherGradientThreshold: 0.000000",855],["m_FinalGatherInterpolationPoints: 15",855],["m_AOAmount: 0.000000",855],["m_AOMaxDistance: 0.100000",855],["m_AOContrast: 1.000000",855],["m_TextureCompression: 0",855],["m_LockAtlas: 0",855],["--- !u!196 &amp;5",855],["NavMeshSettings:",855],["m_ObjectHideFlags: 0",855],["m_BuildSettings:",855],["cellSize: 0.200000",855],["cellHeight: 0.100000",855],["agentSlope: 45.000000",855],["agentClimb: 0.900000",855],["ledgeDropHeight: 0.000000",855],["maxJumpAcrossDistance: 0.000000",855],["agentRadius: 0.400000",855],["agentHeight: 1.800000",855],["maxEdgeLength: 12",855],["maxSimplificationError: 1.300000",855],["regionMinSize: 8",855],["regionMergeSize: 20",855],["tileSize: 500",855],["detailSampleDistance: 6.000000",855],["detailSampleMaxError: 1.000000",855],["accuratePlacement: 0",855],["m_NavMesh: {fileID: 0}",855],["--- !u!1 &amp;6",855],["GameObject:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["importerVersion: 3",855],["m_Component:",855],["\n4: {fileID: 8}\n",855],["\n33: {fileID: 12}\n",855],["\n65: {fileID: 13}\n",855],["\n23: {fileID: 11}\n",855],["m_Layer: 0",855],["m_Name: Cube",855],["m_TagString: Untagged",855],["m_Icon: {fileID: 0}",855],["m_NavMeshLayer: 0",855],["m_StaticEditorFlags: 0",855],["m_IsActive: 1",855],["--- !u!1 &amp;7",855],["GameObject:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["importerVersion: 3",855],["m_Component:",855],["\n4: {fileID: 9}\n",855],["\n20: {fileID: 10}\n",855],["\n92: {fileID: 15}\n",855],["\n124: {fileID: 16}\n",855],["\n81: {fileID: 14}\n",855],["m_Layer: 0",855],["m_Name: Main Camera",855],["m_TagString: MainCamera",855],["m_Icon: {fileID: 0}",855],["m_NavMeshLayer: 0",855],["m_StaticEditorFlags: 0",855],["m_IsActive: 1",855],["--- !u!4 &amp;8",855],["Transform:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 6}",855],["m_LocalRotation: {x: 0.000000, y: 0.000000, z: 0.000000, w: 1.000000}",855],["m_LocalPosition: {x: -2.618721, y: 1.028581, z: 1.131627}",855],["m_LocalScale: {x: 1.000000, y: 1.000000, z: 1.000000}",855],["m_Children: []",855],["m_Father: {fileID: 0}",855],["--- !u!4 &amp;9",855],["Transform:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 7}",855],["m_LocalRotation: {x: 0.000000, y: 0.000000, z: 0.000000, w: 1.000000}",855],["m_LocalPosition: {x: 0.000000, y: 1.000000, z: -10.000000}",855],["m_LocalScale: {x: 1.000000, y: 1.000000, z: 1.000000}",855],["m_Children: []",855],["m_Father: {fileID: 0}",855],["--- !u!20 &amp;10",855],["Camera:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 7}",855],["m_Enabled: 1",855],["importerVersion: 2",855],["m_ClearFlags: 1",855],["m_BackGroundColor: {r: 0.192157, g: 0.301961, b: 0.474510, a: 0.019608}",855],["m_NormalizedViewPortRect:",855],["importerVersion: 2",855],["x: 0.000000",855],["y: 0.000000",855],["width: 1.000000",855],["height: 1.000000",855],["near clip plane: 0.300000",855],["far clip plane: 1000.000000",855],["field of view: 60.000000",855],["orthographic: 0",855],["orthographic size: 100.000000",855],["m_Depth: -1.000000",855],["m_CullingMask:",855],["importerVersion: 2",855],["m_Bits: 4294967295",855],["m_RenderingPath: -1",855],["m_TargetTexture: {fileID: 0}",855],["m_HDR: 0",855],["--- !u!23 &amp;11",855],["Renderer:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 6}",855],["m_Enabled: 1",855],["m_CastShadows: 1",855],["m_ReceiveShadows: 1",855],["m_LightmapIndex: 255",855],["m_LightmapTilingOffset: {x: 1.000000, y: 1.000000, z: 0.000000, w: 0.000000}",855],["m_Materials:",855],["\n{fileID: 10302, guid: 0000000000000000e000000000000000, type: 0}\n",855],["m_SubsetIndices:",855],["m_StaticBatchRoot: {fileID: 0}",855],["m_LightProbeAnchor: {fileID: 0}",855],["m_UseLightProbes: 0",855],["m_ScaleInLightmap: 1.000000",855],["--- !u!33 &amp;12",855],["MeshFilter:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 6}",855],["m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}",855],["--- !u!65 &amp;13",855],["BoxCollider:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 6}",855],["m_Material: {fileID: 0}",855],["m_IsTrigger: 0",855],["m_Enabled: 1",855],["importerVersion: 2",855],["m_Size: {x: 1.000000, y: 1.000000, z: 1.000000}",855],["m_Center: {x: 0.000000, y: 0.000000, z: 0.000000}",855],["--- !u!81 &amp;14",855],["AudioListener:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 7}",855],["m_Enabled: 1",855],["--- !u!92 &amp;15",855],["Behaviour:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 7}",855],["m_Enabled: 1",855],["--- !u!124 &amp;16",855],["Behaviour:",855],["m_ObjectHideFlags: 0",855],["m_PrefabParentObject: {fileID: 0}",855],["m_PrefabInternal: {fileID: 0}",855],["m_GameObject: {fileID: 7}",855],["m_Enabled: 1",855],["--- !u!1026 &amp;17",855],["HierarchyState:",855],["m_ObjectHideFlags: 0",855],["expanded: []",855],["selection: []",855],["scrollposition_x: 0.000000",855],["scrollposition_y: 0.000000",855]];
common = {"the":1,"you":1,"a":1,"both":1,"that":1,"not":1,"print":1,"see":1,"if":1,"on":1,"or":1,"in":1,"this":1,"also":1,"only":1,"returns":1,"ref":1,"for":1,"by":1,"be":1,"used":1,"wiki":1,"class":1,"with":1,"and":1,"none":1,"function":1,"of":1,"are":1,"attached":1,"is":1,"to":1,"use":1,"will":1,"from":1,"var":1,"at":1,"get":1,"set":1,"when":1,"it":1,"can":1,"as":1,"an":1};
searchIndex = {"greeting":[15246],"9f":[13078],"stereoscopic":[4694],"proven":[8161,13287],"unsure":[277,15196],"issue":[982,1017,4960,7308,9623,10414,11155,11541,12213,13310,14037,14315,14687,17349,19391,22305,22522,24563],"supplied":[158,181,2005,4909,5399,5765,6492,6960,7773,11228,11287,11606,12640,12820,13330,14241,14902,17237,21370,21377,21960,23299,23392,23452,24716],"subdiv":[3633,9321],"richer":[2559],"engineered":[11805],"pings":[11729],"emissions":[14056],"implementation":[8292,9612,10349,10846,12230,13285,13727,13770,14068,14104,14186,15463,15491,15515,15914,16061,16568,16578,16674,17173,17199,22412,24669],"nearest":[4983,5598,11193,12368,12884,13160,14842],"taken":[179,942,1297,3994,4603,6450,6724,6727,6960,10803,11158,11193,11951,12229,12698,13872,13922,14291,14829,15443,16083,16665,16772,17055,18142,18677,18872,19047,19230,19588,20772,21413,21617,22877,23393,23611,24271],"rgba":[236,5638,5670,5695,7001,10773,13927,15355,18272,18319,18866,19123,19140,19299,20849,24416],"london":[1524],"websockets":[23776,23875,23899],"load":[28,247,747,752,1233,1625,1843,1958,2280,3257,3503,3841,4208,4771,4884,5461,6997,7258,7897,9923,10004,10034,10514,10977,11119,11259,11286,11351,11413,11646,11753,12768,12787,13295,13453,13466,13630,13746,13927,13973,15146,15193,15346,16215,16436,16797,17246,17524,18959,20424,20722,21343,21358,22006,22266,22432,23059,23768,23987,24012,24046,24145,24391],"idrophandler":[21763],"cinema":[585,9399],"updateposition":[12998,13211],"rotation":[303,391,434,458,581,639,693,2166,2199,2841,2870,2974,3085,3467,3487,3703,3827,3969,4035,4120,4277,4574,4978,5139,5395,5745,5817,6986,7911,7975,9210,9356,9378,9393,9405,9432,9482,9523,9552,10175,10291,10970,11344,11508,11639,12249,13314,13459,13703,14071,14110,14176,14206,14214,14306,14750,14790,15584,15596,15960,16070,16518,17134,17204,21779,21825,21921,21987,22101,22133,22201,22214,22638,23016],"diagonal":[16163],"hgrc":[21308],"constrained":[2801,2961,11132,13149,13171,16737,16952,17082,22362,22692],"potentially":[1165,2604,5310,6414,11155,13285,13445,13842,13985,14913,15109,15949,15985,22625],"omitted":[367,2620,4958,5876,8781,17685,17905,20209],"zipped":[10951],"unitywwwrequestprovider":[10373],"exportassetpath1":[6509],"respawned":[13565],"hash":[1867,2056,9761,11354,14558],"def-finger_middle":[1680],"mypublickeytoken":[23435],"cbuffer_start":[18337],"nbsp":[6469],"counted":[458],"experts":[11954],"waypoint":[6780],"gray":[1762,4296,4586,5616,7002,17496,19152,19879,20468,20784],"deltaposition":[11619,13004],"clang":[22520],"asap":[6717],"declared":[1230,3365,5205,6684,6876,6967,7776,8399,8718,8815,10578,12688,13615,13735,14502,14677,14716,15617,19189,19388,20136,20692,20874,24709],"post-process":[11249],"fast-moving":[1458,5163,14076,16567],"embedding":[9924,17943,19459,23202,23783,23816,24391],"-buildosxplayer":[6499],"unity-generated":[10835],"sgx543mp3":[10620],"motionless":[6444],"guitexture":[3423,5969,19531],"shorthand":[5417,18947],"artistic":[14923],"relieves":[10136],"photograph":[13822,16786],"exercise":[12186],"cachedresponse":[10362],"mylogo":[7002],"shlighting":[12150],"forums":[15230,23083,23792,24234],"spellings":[4156],"readjust":[7186,16341],"wait":[857,1247,1623,3862,5086,6718,7255,7929,11271,12435,13455,13613,15090,15144,15199,17244,23190,23990,24441],"non-additive":[571],"computescreenpos":[20894],"longest":[12454],"md5cryptoserviceprovider":[22471],"installations":[13315],"favor":[4017,24548],"dx10":[19474],"rarely":[160,173,3428,15068,19047],"rightforearm":[6667],"bytecode":[4356,4541,4638,10921,17943,23812],"k":[5065,5507],"sparsetextureexample":[21350],"satisfying":[16201],"id":[1613,3901,5875,6387,6424,8058,8718,9934,10639,11353,22918,24104,24210,24223],"address":[867,972,997,1021,1033,1041,1044,1079,1606,2022,7309,9623,11527,11730,13309,13351,13439,14823,15639,15809,16188,17391,22607,24673],"portal":[221,1000,4008,10432,10560,13861,22918,23993],"equator":[20759],"blackberry-tools":[1543],"considers":[13155],"overheads":[2628,15001],"jquery":[7012,9936,23180,23485,23910,24391],"disassemble":[11590],"chip":[10411,10616,11729,11965],"unrealistic":[2801,14076],"reacting":[7797],"fair":[14842],"endcg":[12104,17952,18246,18526,18595,18643,18747,19467,19616,19804,20182,20389,20502,20805,21103],"surfaces":[184,2346,2357,2732,3008,3578,3633,5419,6447,7825,9301,9321,11200,11230,11919,12800,12904,13148,13264,16658,16673,17567,18037,18384,20403,21573,21607,21897,21962,23694],"spotlights":[5580],"ensures":[2712,5062,6495,7950,10915,12940,13068,13448,15624,17338,23605],"project":[22,47,158,198,205,234,259,279,289,310,324,368,398,437,442,477,589,612,682,752,821,833,931,995,1051,1109,1139,1204,1393,1464,1488,1516,1548,1555,1598,1613,1662,1799,1860,1979,2031,2430,2460,2597,2613,2697,2815,3064,3185,3246,3305,3424,3505,3631,3636,3776,3878,3954,4109,4134,4168,4717,4854,4896,4909,4932,5168,5209,5215,5427,5442,5488,5513,5707,6430,6494,6597,6625,6712,6739,6808,6859,6931,6947,6981,7275,7378,7483,7761,7765,7941,7980,8179,8281,8821,9189,9233,9307,9324,9346,9365,9374,9389,9401,9460,9480,9520,9547,9559,9568,9588,9592,9677,9874,9882,9959,10043,10082,10155,10422,10468,10484,10562,10835,10844,10878,10951,11052,11057,11239,11260,11286,11338,11424,11606,11793,11937,11944,12194,12640,12687,12747,12952,13426,13430,13638,13758,14000,14332,14456,14464,14496,14512,14676,14715,14785,14796,14827,14851,14901,15066,15096,15191,15236,15345,15405,15570,15615,15617,15836,17187,17261,17278,17384,17518,17824,17943,18371,18561,18957,19082,20781,21277,21350,21352,21417,21655,21665,21839,21915,21939,22191,22242,22363,22422,22906,23033,23123,23134,23239,23281,23298,23416,23446,23615,23623,23743,23759,23819,24017,24109,24162,24189,24310,24361,24374,24380,24532,24554,24570,24583,24599,24601,24609,24652,24676],"sided":[9881],"advise":[21578],"100hz":[4338,4620],"cool":[3483,5141,7418,14054,17912],"estimate":[5189,10953,16080],"win81":[14480],"share":[149,2017,3161,3658,5431,6728,7312,10778,10810,13305,13771,13873,13907,15230,15445,17421,18347,22323,22565,24277,24538],"pvs-based":[13866],"ints":[10416],"option":[149,213,241,288,377,462,1109,1178,1412,1535,1606,1733,1753,1843,1848,2124,2160,2276,2621,2734,3006,3226,3397,3529,3535,3734,3897,4145,4227,4557,4656,4671,4824,4961,5002,5298,5615,6509,6679,6810,6858,7120,7958,7968,7994,8037,8462,9111,9715,9952,10056,10068,10373,10846,11204,11353,11399,11605,11836,12642,12931,14036,14071,14140,14279,14338,14526,14802,15001,15101,15211,15399,15599,15873,16061,16513,16759,16999,17046,17062,17262,17795,19474,20411,20784,21277,21408,21426,21715,21795,21837,21847,21910,21919,22024,22107,22226,22396,22656,22719,22760,23260,23273,23310,23461,23617,23632,23796,23985,24281,24673],"guilayer":[5940,21991],"death":[10198,14264,14304],"destroyanimationclip":[15031],"audiolowpassfilter":[6005],"proof":[18311],"co-workers'":[983],"indirect":[8091,8164,11209,15479,21546,21597],"graphs":[12526,22444],"multiplies":[1211,16620,16771,16939,18028,19263],"guidserializer":[6080],"up-to-date":[22320,23610],"submeshes":[3758],"reimporting":[1804,14460,21926],"fps":[578,10451,10603,13724,15090,15443,16610],"ot":[9694],"assetbundle":[31,747,1617,1788,1905,5979,7221,10484,10974,11258,11290,11835,15138,17246,22401],"keypad":[6846,9947],"corewindow":[24040],"staircase":[15904],"bounce-back":[2903],"joystickbutton7":[1484],"flail":[5283],"lies":[165,7826,15332],"authoring":[1847],"arraylist":[24241],"appropriate":[164,217,1014,1068,1556,2029,4090,4507,5198,5431,6521,6763,7378,7767,8693,9329,9509,9617,9738,9979,11124,11417,11599,12653,13880,13932,14125,14174,14694,14781,14868,14966,15398,16351,18041,18936,21558,21628,21960,21993,22492,22603,22735,23301,23732,24194,24385],"gone":[11963,22740,23249,23443],"rate":[309,578,1256,2248,2264,2312,2378,2386,2394,2401,2419,2439,2447,2456,2467,4082,4953,5385,5772,7909,9240,9322,10451,10774,10805,10849,11948,12324,14056,14069,14107,14184,14304,14958,15087,15875,16725,22026,24391],"gamepad":[3523,6804,15774],"dramatically":[532,13927,16167],"owned":[5204],"ran":[15673,22472,23894],"tinted":[16168],"m_mesh":[24909],"cutoff":[2380,2388,2396,2413,2433,2441,2451,2592,18089,20410],"ondisconnectedfromserver":[13515],"preprocessor":[6635,7129,14358,18256,18285,18684,18935,19099,20454,24364,24530],"automate":[1741,14543,21413],"density":[2523,2545,3095,3716,9253,9728,11742,11881,16090,16412,18670,20763,21873,21919],"failfront":[19564],"recognised":[1084,9276,22955],"_cutoff":[18093],"conditions":[309,605,2223,5004,5756,9183,11166,11198,12333,14452,16261,19060,21574,21636],"protection":[4444,4714,11549,22368],"penalty":[4121,4142,5513,17685],"recover":[902],"splitting":[250,462,3649,11501,21371],"floatvalue":[18671],"stair":[2794],"suse":[17385],"sink":[14037],"spectra":[1298],"idles":[15611],"symlinking":[14730],"passwordfield":[11696],"outcome":[9191,13297,15250,22646],"striking":[11230],"xy":[5178,6632,11658,12012,14880,15853,15894,18276,18333,18799,19917,20488,20865,21133,22871],"m_istrigger":[24917],"smartphone":[11861],"m_layer":[8051,24809],"namespace":[1232,10844,11530,12689,13640,22461,23318,23874,24257,24533,24539,24656],"imovehandler":[21768],"customised":[10027,16761,21752,22555],"peter":[18046],"separating":[8138,13274,21401],"powder":[14266],"hacked":[11550],"allowing":[329,366,690,1165,1355,1400,1470,1850,2425,2619,2633,3430,8128,9184,11451,12456,13274,14730,15137,16175,21569,22981,23131],"-password":[1544],"assetbundles":[26,740,1619,1787,1857,2306,7219,10482,10973,11264,11839,15139,15346,16796,17238],"tangential":[17167],"subsurface":[20209],"recalculation":[3869,22623],"hh994635":[24047],"unity_4lightposz0":[20735],"hear":[1112,2581],"spheres":[3676,5440,11195,12482,14872,18449,19787],"'copy":[1144],"hotkeys":[23005],"etc1":[213,5671,12184,15374],"unity4":[10103],"capitalization":[23430],"reducing":[3832,6868,7136,7308,8126,10852,10913,11746,13774,14103,15341,15673,16164,20774,22441,22836,23785,24010],"show":[309,489,634,672,682,852,935,1005,1139,1204,1343,1401,1804,1878,2160,2213,2641,3056,3439,4023,4107,4292,4504,4586,5230,5273,5630,5668,5693,6519,6672,6677,6695,6874,7053,7131,7396,7485,7663,7852,7906,7942,8086,8126,8170,8799,9210,9374,9389,9401,9520,9547,9630,9741,10036,10054,10300,10840,11120,11247,11345,11694,11913,11992,12227,12509,12680,13024,13276,13872,14405,14796,14862,15009,15038,15051,15081,15101,15663,15943,16032,16314,16561,16637,17096,17232,17259,17943,18077,18403,18537,19149,19385,20441,20780,21280,21419,21792,21836,21917,22246,22423,22548,23197,23270,23301,23382,23505,23694,23949,24002,24484],"submits":[23649],"skinning":[341,464,1633,4518,4612,4693,4769,5288,10794,11785,12490,13914,14825,23361,23895],"casts":[3553,4128,8154,17003,22279],"audio-":[2599],"ellipsoidparticleemitter":[5890],"methodname1":[14724],"eliminates":[3303,6495],"wheel":[5157,5766,5800,10908,11454,12449,15846,16726,16993,21764,22895],"even":[78,185,462,532,588,605,639,741,836,1096,1247,1930,2017,2131,2223,2559,2734,2750,3178,3252,3551,3736,3839,3866,4020,4403,4531,5077,5247,5277,5649,6443,6512,6700,6856,7323,7419,9191,9249,9318,9478,9614,9679,9724,9981,10020,10033,10071,10338,10417,10449,10616,10801,10852,10940,11119,11152,11202,11247,11286,11454,11499,11729,11836,11876,11951,12210,12542,12608,12695,13217,13285,13451,13749,13773,13889,14071,14155,14184,14285,14325,14580,14942,15211,15278,15461,15489,15867,16080,16246,16260,16385,16578,16710,17234,17348,17421,17798,17993,18077,18400,18557,18650,19221,19419,19438,20411,20459,20849,21394,21573,21807,21834,21910,21962,22368,22383,22637,22744,22920,23202,23617,23754,24014,24141,24209],"combiner":[17901,17997,19257],"crease":[16271,22183],"specularity":[11903,20356],"breath":[309],"ftp":[746,10964],"msaa":[11739,19122],"decoupling":[22984],"immediately":[451,822,885,2801,2876,3520,4055,4107,4129,5125,6464,6495,7909,10167,11718,12733,12916,13722,14005,14782,15583,16725,21617,22290,22428,22551,22625,23990],"acceptance":[982],"fresh":[11593,12456,22284,22817],"involve":[1460,6447,6675,7109,13311,13455,14254,18040,21372,22924],"lmindtex":[12013],"advisable":[1843,2283,4469,4727,6494,7970,13942,14597,17800,18056,18140,18860,19088,19256,20652,22448,23783],"gather":[16079,16297],"editorusersettings":[5998],"p":[1238,1665,9607,21029,23536],"uncheck":[4106,9420,11852,12898,22266,24558],"internals":[12548],"'spacebar'":[5479],"6th":[15782],"float2":[12082,18012,18269,18326,18517,18589,18618,18841,19817,20177,20483,20799,21107],"springjoint":[5982],"handling":[394,448,833,1290,4358,4640,7812,9777,10028,10341,10845,10871,11528,11697,12470,13326,14010,18329,18376,20419,21993,22396,23266,24708],"regionmergesize":[24792],"cmd+4":[23032],"guitest":[8363,8519,8792,8904,9011],"stochastic":[22162],"repeating":[3736,8402,9265,14279,16511,21910],"leftarm":[6667],"blinnphong":[20133,20251,20396,20477,21861],"widen":[7159,21807],"explode":[12367,14112,14266],"g643":[10630],"gamecamera":[24682],"megabytes":[4807,13982],"y":[140,187,658,693,1480,1743,1757,2122,2172,2653,2657,2675,2799,2879,2979,3078,3210,3357,3397,3407,3477,3696,4080,4395,4522,4971,5138,5748,6469,6811,7114,7393,7598,7826,8067,8944,9860,10120,10892,11543,11648,12091,13015,14005,14036,14152,14160,14191,14229,14271,14297,15233,15329,15594,15740,16402,16414,16646,18400,19077,20712,20845,21195,21744,21836,21888,21944,22103,22660,23392,23715,23832,24841],"m_aocontrast":[24774],"rocks":[2713,5658,13932,14204,14213,21829,21844],"#0000a0ff":[21722],"smcs":[14456],"mydevice":[24306],"unitydistancebasedtess":[20583],"editing":[314,692,971,1417,1701,2593,3048,3299,4856,4934,5397,6949,7336,7374,7462,9963,12526,14788,14845,14922,16173,16524,21582,21895,21938,22102,22251,22264,22608,22707,23277],"bugreporting":[11332],"gvim":[14812],"redify":[18506],"non-moving":[11789,13956,21643],"3dsmax":[7968,8006,9480,14827],"unity_3_5":[14394],"two-touch":[11614],"supply":[1111,3200,3249,4889,7399,7826,13363,21370,22454,23299,23447],"l33t":[13343],"-buildosx64player":[6500],"urn":[170],"final":[52,469,1288,1533,1909,2633,3092,3374,3713,4168,4634,5234,5598,5668,5693,5726,6726,7275,8037,8116,9157,9187,9737,9846,9911,10004,10556,10899,10915,11226,11628,11952,12042,13169,14110,14730,15218,15276,15467,15969,16001,17017,17524,17943,18043,18057,18359,19055,19246,19588,20044,20415,20603,20845,21546,21849,23413,23774,24280,24321,24387],"setareacost":[12902],"irreversible":[22370],"clickonceie":[24431],"panel":[461,676,764,1392,1464,1570,1613,1822,3620,3999,4934,6770,6931,6947,7381,8085,9776,10042,10852,11052,12642,14282,14451,14817,15038,15041,15094,15098,15342,16563,21403,21419,21940,22128,22246,22527,23286,24159],"surprise":[23272],"menus":[3985,7384,10456,21420,21792],"plane-like":[9896],"excess":[22950],"uv2":[20443],"cubenormal":[18748],"d3d":[19074,24081],"already":[30,158,503,698,753,846,963,994,1055,1166,1599,1613,2072,2601,2737,3181,3194,3620,3909,4060,4107,4459,4717,5163,6428,6561,6717,6859,7220,7508,7776,8023,9267,9324,9710,9743,9852,9993,10471,10476,10922,10977,11187,11296,11393,11499,11868,11925,11963,12313,13249,14008,14070,14171,14353,14602,15132,15677,16061,17209,17288,17413,18077,18180,18336,18600,19438,19582,21289,21408,21548,21617,21810,21936,21951,22200,22477,22554,22658,22665,22913,23249,24001,24319,24401,24549,24558,24603],"getmonoheapsize":[12562],"remapped":[16260],"differently":[221,655,1351,2449,2887,4094,5166,5310,6455,6963,6990,7091,7792,8718,9559,10558,11293,11966,13311,14687,14906,15514,16167,16815,18605,21947,22250,22659],"concave":[18077],"rts":[4291,4502,4584],"knowledge":[929,1667,6622,8138,11464,12199,13770,17402,17822,17940,21643,22571],"fumes":[14071],"inserted":[3389,5479,15808,18652],"ceramics":[21573],"reserves":[15044,17187],"display'":[1145],"concepts":[401,1198,1328,1446,1757,3553,3892,5178,6976,13281,13769,14011,14326,15603,16391,17235,17815,19220,21543,21578,22109],"single-file":[1602],"exchange":[13284,13327],"overlaid":[634,692,1314,5396,8212,14198,15967,15999,17015,21602,22253,23696],"eg":[299,394,586,2131,2842,4093,4317,4521,4615,5289,5397,5561,6442,6780,7001,7795,8128,10103,10970,11349,12602,12688,14010,14062,14069,14107,14204,14244,14279,14467,14783,14836,16054,16687,16999,17078,17195,17262,21354,21396,21404,21628,21889,21912,21944,22050,22107,22389,22738,22879,22918,23290,23364,23373,24416],"heavily":[6444,6702,9625,10925,11955,12490,13447,15332,16074,22461,22922,23158,23209],"square":[168,1096,2990,4096,5598,5733,7109,11428,12391,14010,14878,18075,18866,19154,20984,21891,22107],"tap":[276,2244,2260,9615,10604],"arms":[343,603,1670,2619,6675,8023,14007,14836,15852,15893,22109],"reminds":[13816],"imageeffects":[4291,4502],"morphing":[9323,9529],"prerequisites":[8173,10440,24371,24535,24602],"degenerate":[3663],"subdivided":[9449,20654,20820,23729],"envy":[21707],"pile":[4145,12242],"q10":[1551],"farplane":[18621,20712],"i'm":[8786,22921,23157],"environments":[6979,11928,15838,23398],"sees":[208,2122,8116,13722,15773,21546,23436],"favouring":[4325],"template1":[911],"headers":[10343,15343,23790,23881],"detects":[7797,13179,13439,16385,23419],"registry":[22366,24148],"myrandomwritetexture":[19103],"deal":[1683,2064,9256,10846,10927,12878,13318,13451,13805,16837,18617,21408,21573,22864],"infrequently":[11286,13303],"writestringtomemory":[23838],"varies":[1734,11189,11614,14288,16516,21570,21657],"audioclips":[1352],"personal":[6412,13351,14851,21613],"disposal":[13752],"repositioned":[670,12454],"owner":[17293],"meshtype":[21524],"'lib'":[14509],"cone's":[14239],"viewer's":[2121],"parallelization":[10776],"requireoptions":[19059],"custompropertydrawer":[7583],"15f":[13006],"beautifully":[464],"tagname1":[19042,19752],"insofar":[12695],"getplatformdata":[4814],"effectdata-":[1251],"users'":[879],"compromise":[5285,11169,16027],"meantime":[3802,23979],"gravityweight":[15606],"00ms":[15036],"bi-directional":[4018],"yellow":[11094,11195,11454,12886,13813,14749,21738,22106,23379,23677,23702],"suspension":[5773,5801],"createfromfile":[134,11835,15169],"directwrite":[24542],"whenever":[151,605,822,860,1324,1878,2008,2223,2229,4166,4833,5085,5224,5420,5649,6679,7446,8243,9363,9376,9391,9403,9550,10399,11251,11293,11356,11501,11630,11961,12184,12227,12617,12688,12915,13855,14698,15339,21400,21619,22109,22914,23298,23756,23978],"synths":[1324],"heapu8":[23863],"propelled":[22879],"impacts":[10165],"overlapping":[8944,12790,18448,21867],"exposure":[17096],"b":[597,1484,1586,2484,6649,6843,8947,10890,12934,15778,15950,17926,18369,18952,19016,21061,21138,21297,21692,22883,23223,23333,23636,24734],"trading":[13068],"loadlevel":[8354,13481,15193,22451],"logic":[388,581,656,1355,3654,3868,5094,5457,7550,7811,7908,8377,9675,10027,10198,12739,13166,13297,14543,14743,14956,21428,21625,21634,23240],"'bypass":[11255],"keyword":[3625,13988,14479,17858,18528,18947,19195,20956],"recursive-up":[8019],"flowchart-like":[392],"hscrollbarvalue":[8666],"targetmat":[18536],"delay":[1281,2247,2263,2315,2336,2348,2520,2540,6899,6932,7926,13293,13721,14117,14172,14728],"unity_output_depth":[18619],"v5":[14464],"modeler":[10203,21916],"web":[4208,4771,6502,6991,7243,7934,8661,8775,9924,10076,11244,11283,11289,11419,12653,12752,13294,14370,14965,15189,15647,15711,16042,17275,21370,22527,22959,23127,23169,23399,23466,23764,23796,23814,23878,23894,23900,23979,23986,23989,24391],"seconds":[720,1091,1513,2490,2517,2537,3074,3692,3870,4124,5722,5861,6520,9539,10075,10161,10782,10856,12408,12499,14038,14071,14107,14172,14304,16772,22306,23296,23996,24046],"d3d11_create_device_singlethreaded":[6571,24118],"partly":[9615,11437,14067,15325,16995,18044],"references":[353,395,607,625,696,826,2072,2224,5207,6680,6730,7376,9968,10423,10968,10986,11351,11837,12207,12567,13791,14737,15343,16798,21615,22098,22396,22740,23243,23279,23321,23783,24134],"onprerender":[7916],"teach":[17235,17819,17915],"assembly-csharp":[1511,24311,24556],"administrated":[17384],"job":[470,11464,21462,21573],"rainbow":[5737,14054],"reflectionprobe":[4991,6033],"animationlayers":[11511],"divisions":[4003],"met":[17322,19060],"favourites":[15100],"non-optimized":[5310],"disproportionate":[12194,14829],"geforce2":[16576],"blocky":[5108,5492,5535],"closable":[4006],"fixedin":[11783],"white":[1280,4003,4094,4294,4586,5659,6866,6995,9183,9303,9571,11097,12055,14047,14054,14108,15969,16001,16136,16223,16441,16589,16771,17017,17104,17367,17805,17844,18001,18108,18416,18508,18580,18896,19152,19187,19210,19298,19433,19793,20171,20411,20467,20791,21586,21737,21976,23379,23446,24091,24404],"armeabi":[14475],"activeself":[7087,23217],"missile":[2694,6934],"capture":[297,391,1133,1335,2121,2665,2994,4222,4605,4669,5013,8096,8584,9250,10593,11200,12283,12526,14017,15060,15600,17106,18555,22041,24549],"wonder":[9679,10160],"steerangle":[5782],"sampled":[355,577,656,4333,4620,11193,11223,11506],"joystickbutton3":[1479],"representation":[661,2076,3055,3673,4902,5630,5668,5693,7389,8075,9184,12885,13158,14581,15209,16193,16755,16840,21613,23695],"getassetbundle":[10507,11000],"preprocessing":[4483,4739,15234],"fidelity":[2293,3165,3569,4198,4686,4762,11978,12335,15406,24015],"processcallback":[1263],"gl_depthrange":[19110],"susceptible":[7133,11155],"gracefully":[4603,10846],"referred":[187,2124,4156,6444,8135,12689,12955,13453,15867,16162,16259,21589,21617,21695,22111],"getcomponents":[3983],"detached":[7083,10856,22116],"rigidbody":[166,2139,2202,2729,2790,2826,2969,2983,3028,3128,3450,3487,3675,3909,4119,4141,5120,5177,5330,5359,5375,5799,5804,5913,6442,6683,6742,7785,8155,10113,10451,10907,10970,11798,12448,12477,13191,13702,14010,14326,15073,15583,17205,22123,23272],"mymethod":[6533],"skydome-based":[21548],"eliminated":[5862,19433,22831],"anticipate":[5289,9566,11353],"jslib":[23819],"runstate":[11485],"parties":[13576,13749],"facilitate":[1417],"that's":[1068,1294,1557,4485,4741,4814,6412,9737,9837,11733,11948,12051,12611,13938,15524,17993,18557,20433,21344,23203,24022,24044,24130,24663],"sight":[18037,22744],"dragged":[637,755,1428,1464,2601,4507,5210,6780,6931,7344,8631,15093,16175,16700,16716,16949,22704,23312],"hlslsupport":[18248,18311],"judiciously":[3617],"raycastcollider":[5977],"protected":[1533,10310,14621,21452,21817,24031],"objectid":[14560],"perfect":[2286,2741,3426,3447,4154,12038,12456,12552,14098,23145],"recreating":[16658],"advertised":[991,13749],"driven":[440,5128,9545,13067,15606,19154,22605,22981],"objectfield":[9846],"nodynlightmap":[20430],"birth":[14264],"provider":[941,1043,10399],"sourcefile":[21334],"enviroment":[1844],"unityplayeractivity":[14610],"texel":[8197,12029,13930,19077],"illusion":[12039,12304],"right-":[23902,24410],"codesigning":[1599],"webpage":[267,971,4173,22544,23462],"box-shaped":[2655],"hiccups":[11265,12576,15009,22443],"randomize":[4885],"x++":[10121],"joysticks":[1473,3518,6806],"circlesx":[20949],"custom-styled":[3375],"monotony":[12305,21910],"materialcopy":[807],"retweaking":[9559],"int64converter'":[10422],"sd-card":[4401,4529],"targeted":[4320,4617,8307,17537,17821],"transit":[3624],"gl_pointsize":[19117],"contrails":[5730],"collapsible":[4106,14281],"tracker":[1465,2272,12557,22091,22436],"they'll":[24134],"flashing":[8378],"vista":[6623,7121,11313,17385],"mainly":[2790,2822,5149,8224,10482,11217,11729,13639,14596,16167,22092],"m_quality":[24766],"rag-dolls":[464],"touchscreen":[9597,11610,14635,22313],"byproduct":[16386],"anytime":[733],"attach":[575,1070,1112,2421,2601,3134,3142,3370,3480,3545,3776,4058,5174,5283,5731,5853,6436,6458,6960,7583,7766,7823,8373,8885,9191,9363,9898,10158,10304,10425,10465,10970,12645,13591,14876,14971,17232,20810,21625,21812,21981,23275,23350,23899,24453,24642,24665,24705],"windows-8-app-samples-4d76cbbf":[24232],"regular":[585,3652,3766,4861,4960,5096,5779,6599,6988,7677,7777,7917,8275,8537,9163,10473,11169,11198,12496,12745,15625,16285,16555,17464,19200,19246,19380,19443,19739,20136,20689,21409,21625,21641,21977,22023,22307,22641,22737],"pre-built":[17347,23147],"middle-click":[15852],"gizmo's":[14760],"keystore":[4425,4554],"discontinuously":[3759],"relief":[21599],"wet":[1178,1386,1427,2244,2260,2353],"unity_winrt_8_0":[24354],"signals":[1166,1348,2372,2380,2388,2396],"no":[151,181,197,275,316,455,490,588,659,684,753,828,847,1011,1071,1171,1230,1352,1446,1475,1533,1667,1695,1757,1798,1851,2018,2272,2340,2352,2423,2499,2549,2576,2615,2669,2748,2774,2852,3136,3250,3308,3563,3652,3676,3707,3758,3763,3836,3897,4040,4154,4198,4539,4620,4669,4762,4930,4963,5005,5108,5125,5187,5258,5359,5395,5440,5466,5513,5678,5700,5731,5751,6359,6442,6494,6760,6824,6976,7091,7153,7766,8008,8029,8335,8522,8773,9000,9198,9412,9571,9614,9643,9685,9711,9817,10067,10109,10354,10444,10538,10921,10978,11154,11226,11344,11390,11477,11499,11731,11750,11903,12194,12477,12551,12837,13044,13158,13297,13341,13443,13464,13466,13659,13712,13775,13791,13839,13941,13985,14067,14140,14403,14467,14609,14701,14876,14924,15211,15234,15417,15455,15483,15532,15588,15692,15716,15794,16080,16123,16164,16246,16476,16512,16538,16556,16681,16750,16759,16793,16999,17045,17085,17325,17472,17520,17582,17642,17732,17762,17796,17911,17931,18043,18056,18140,18375,18557,18650,18678,18860,18943,19049,19106,19250,19256,19390,19489,19520,19738,19783,20353,20461,20849,21278,21349,21396,21414,21567,21607,21743,21832,21865,21900,21915,21940,21976,22024,22165,22242,22275,22281,22484,22623,22724,22735,22910,22954,23213,23281,23301,23377,23643,23691,23873,23979,24013,24193,24346,24443,24597],"non-native":[22349],"host's":[17331,23461],"communicates":[9422,9539,13426,19233],"multi-select":[13847],"mixes":[2254,2270,14067],"animationname":[21394],"nested-braces":[19376],"dlls":[1206,4449,4567,4656,10921,15390,21362,22494,23299,24181,24367],"two-dimensional":[2121,21837],"ratios":[2757,4234,4675,7155,8120,9722,16132],"uvs":[3663,7998,8204,9379,9406,9514,9553,9979,19874,20356,21112,23392],"left_shoulder":[528],"dxt1":[5637,5669,5698,15354],"duplicated":[11195,17259,23138],"xcode":[897,1285,4349,4631,10421,10430,10461,10468,10562,10835,10913,11331,11582,12513,12748,13431,14676,14715,21665,22385,22912],"countryside":[21897],"flares":[3142,3181,3532,9560,15938,15974,19764,22165,23722],"deploy":[259,842,1542,1596,1606,6390,10406,12457,22906,24161,24211,24229,24391,24562,24565,24671],"object":[41,179,328,352,366,439,581,586,603,605,624,639,666,676,682,823,1063,1112,1142,1459,1558,1618,1650,1695,1792,1948,2076,2122,2193,2223,2361,2580,2619,2706,2737,2765,2772,2803,2852,2875,2974,2992,3031,3092,3125,3241,3397,3457,3487,3543,3553,3615,3629,3645,3673,3684,3713,3759,3839,3870,3890,3985,4015,4059,4069,4119,4156,4954,4978,4983,5124,5178,5205,5277,5330,5359,5378,5389,5433,5728,5745,5775,5801,5836,6442,6683,6744,6874,6926,6960,7002,7090,7102,7158,7222,7308,7378,7403,7543,7786,7896,7981,8037,8039,8086,8099,8112,8128,8186,8287,8462,9180,9183,9208,9302,9361,9514,9678,9694,9731,9842,9868,9894,9968,10020,10033,10053,10114,10292,10373,10456,10515,10970,10974,11051,11119,11126,11149,11195,11259,11286,11354,11424,11542,11651,11761,11889,12200,12453,12496,12880,13089,13119,13133,13222,13227,13354,13448,13457,13565,13591,13739,13777,13822,13846,13900,13984,14008,14039,14062,14076,14105,14179,14279,14281,14325,14535,14725,14749,14781,14868,15052,15335,15350,15411,15455,15483,15514,15558,15583,15594,15859,15867,16060,16170,16241,16284,16320,16384,16537,16549,16561,16645,16733,16792,16975,17004,17087,17119,17204,17232,17248,17257,17470,17520,17550,17558,17567,17751,17834,17954,18033,18080,18267,18394,18574,18692,18768,18866,18980,19053,19230,19388,19517,19738,19773,19808,20749,20774,20784,21360,21386,21414,21546,21588,21643,21754,21772,21818,21843,21886,21917,21939,21951,21960,21994,22105,22242,22277,22303,22396,22571,22644,22664,22735,22867,22881,22992,23022,23175,23281,23350,23376,23381,23388,23418,23702,24384,24395,24713],"crossfade":[474],"pre-configured":[3533],"rotatetowards":[13055],"pinch":[9615],"denoted":[2622,8058,11193,12346],"face-lift":[8819],"old-style":[19257],"distort":[9908,16397,17550,19169,22723],"-default":[24402],"poly":[22441],"material-shaderlab":[20786],"readmask":[19546],"multi-person":[860],"textassets":[742,15139,17239],"previewed":[633,717],"hideinput":[11711],"simulation":[2729,2890,4132,4148,5151,7968,9236,9533,11640,11923,12480,13193,13289,13898,14062,14071,14180,14283,14325,15013,15233,17095,22020,22118,24551],"adapt":[9719,16132,16256],"addcommandlinearg":[6565,24067,24112],"go":[267,401,586,661,693,848,1488,1599,1638,2027,2581,3467,4034,4100,4125,5088,5324,5417,5614,5788,6661,6693,6726,6814,6940,7367,7978,8036,8136,8155,8335,9229,9420,9502,9748,9970,10100,10431,10515,11226,11350,11392,11580,11731,11970,11978,12192,12557,12604,12840,13061,13375,13513,13764,13789,13842,14070,14105,14307,14351,15084,15713,16763,17208,17254,17331,17806,17869,18031,18429,18561,19211,19390,19763,21292,21617,22266,22334,22710,22913,23165,23247,23393,23628,23750,23904,24012,24138,24162,24278,24301,24386,24412,24557,24598,24656],"morphed":[2559],"register":[1599,3518,5369,10399,10431,13644,15713,24419],"brilliant":[23379],"captureframerate":[22043],"reflections":[2519,2539,2725,2991,3755,4983,5096,5526,11762,11918,13906,18718,19945,20404,21546,21597,21611],"re-parented":[1668],"asterisk":[22918],"recommendation":[10978],"monodevelop-unity":[23355],"translating":[23893],"restoring":[17412],"anti-piracy":[11548],"exportfilename":[6509],"nat":[13309,13326,13439,13773],"tree":[151,353,407,1063,1127,1734,1758,1780,1931,2636,5405,5438,5763,5819,6017,6856,12957,13843,14147,14730,15132,16842,18078,19532,20554,21869,21914,21940,21949,22145,22190,22241],"third":[52,2894,4874,6653,8462,11168,14749,15170,15384,17348,19644,20926,21275,21362,21597,21844,21895,21924,22098,22107,22244,22951,23299,24016],"superseded":[16319],"formated":[22349],"mocca-":[9412],"presets":[2532,14850,16175,22654],"shadowmaps":[18314],"imperfections":[9867],"daunting":[24001],"dilate":[9222],"sphere's":[184,5838],"p-invoke":[12785],"locators":[9412],"one-by-one":[8082],"setpass":[15078],"route":[1130,1336,1397,3849,12818,13183,13267],"graphical":[833,2641,2706,2772,3056,3553,3631,4932,5785,5817,8082,8128,8341,8343,9950,10020,10032,11861,11991,13887,15457,15485,17234,21544,24207],"casting":[1279,5782,11066,11171,15340,18046,20419,22275],"m_finalgatherinterpolationpoints":[24771],"per-vertex":[3586,12043,13921,15430,15516,17834,18152,18281,18878,19026,19404,19437,20018,20416,21110],"thunder":[2358],"behind":[581,1231,1611,2131,2449,2752,3892,5399,5716,6774,7833,9421,9538,9877,10021,12207,13462,13570,15402,16246,16563,18397,18704,19231,20879,21414,21567,21846,22677,22743,22869,23990],"num":[3524,6395,6831],"nsurlrequest":[10373],"darkblue":[21722],"appcallbacks":[6565,24023,24112],"printf_console":[10369],"kerning":[3204],"bad":[185,1280,6716,10135,10873,11501,13724,22625],"clamped":[4141,8254,15969,16001,16067,16722,17017,19284,20849],"translucency":[18603],"dstblend":[19155],"a5x":[10699,11861],"camerarig's":[6440],"m_navmeshlayer":[8055,24813],"something":[401,445,521,860,1135,1288,1372,1735,1759,1801,2028,2088,2131,3501,3941,4459,4717,5848,6430,6913,6936,6952,7139,7797,8060,8701,9218,9303,9651,9688,9857,9871,9962,10102,10366,10925,11256,11589,11921,11955,11978,12196,12456,12502,12810,13193,13366,13779,14334,15251,15936,16105,16242,16794,17214,17338,19327,19770,20786,21400,21550,21622,21973,22310,22400,22567,22735,23465,23995,24075,24197,24287],"ipackerpolicy":[21426],"+1g":[11646],"pingpong":[452],"_unusedmethod":[22457],"raycasters":[7817,15334,16964,17111],"pulling":[13075],"materialpropertyblock":[5399],"getcommandlineargs":[6508],"mortar":[14913],"addmixingtransform":[519],"depict":[13119,14017,23693],"hot":[14054,14066,14102,14155,16797],"beams":[4097,6865],"incidentally":[19522],"utf-8":[14735],"bottom-right":[7826,8410,16159,22248],"gl_ext_texture_filter_anisotropic":[1504],"stabilization":[10675],"-force-feature-level-11-0":[6577,24126],"geometry+500":[19774],"gl_vertex":[18687],"meter_size":[9860],"'n'":[12411],"belong":[5561,7767,11048,13844,15097,17082,17263,19758,22692],"predefined":[5268,6645,6661,10105,12685,14884,18241,18285,18687,19759,23732],"character":[323,343,361,366,384,464,586,603,605,610,624,674,830,2137,2192,2223,2426,2619,2630,2693,2788,2789,2821,3190,3389,3649,3837,3866,4927,5289,5405,5475,5561,6443,6673,6774,6865,7400,7795,7911,7981,8023,8112,8890,9249,9952,10046,10197,10292,10873,11286,11473,11496,12227,12482,12598,12611,12684,12687,12956,13087,13147,13162,13196,13273,13314,13451,13724,14007,14098,14278,14824,14891,15562,15585,15591,16525,17030,17088,17207,17355,20772,20820,21372,21398,21413,21617,21693,21809,21965,21993,22193,23359,24378],"addfunction":[24619],"enter":[314,709,851,962,1150,1434,1460,1604,2639,3226,5119,5417,5457,6378,6436,6453,6841,6948,8075,8121,8373,9857,9947,10048,10135,10339,10432,10463,11707,13880,14452,14990,15126,15601,15841,16528,17263,17362,17391,21333,21617,22425,22914,23296,24386],"foreign":[17360],"movment":[16985,17125],"per-material":[17537,19433,20166],"pointeffector2d":[6061],"closely":[6641,15078,16606],"unity_shar":[20745],"age":[14259],"waterfall":[3111,3732,14307,21973],"tex2dlod":[19097,20488],"singleton":[1378],"p_num":[1216],"bodied":[12043],"averages":[21844],"plain":[9113,17984],"bleeding":[8226,9191],"lxo":[7992,9547],"autodestruct":[3116,3745,4041,5728],"expanded":[1533,4106,15132,24946],"popup":[436,716,1103,1735,4093,5234,8123,14022,14059,14861,15084,21324,23727,23779],"4d":[585,9399,19140],"geometry+2":[19647],"build-it":[12892],"transcendental":[12391,13941,22904],"zoomspeed":[2102],"higher":[269,352,489,1288,1602,2003,2276,2386,2394,2401,2413,2433,2441,2451,2464,2579,2717,2833,2977,3055,3165,3430,3458,3586,3673,3774,3833,4114,4142,4395,4522,4947,5008,5285,5371,5385,5396,5739,7145,7970,8199,9714,10405,10849,10907,11122,11148,11202,11736,12030,12448,12681,12878,13871,13913,15043,15113,15462,15490,15555,15689,16027,16037,16066,16284,16571,16595,16679,16760,17093,17171,17329,17795,19284,19449,19482,19775,21570,21634,21836,21855,22145,22486,24224,24595,24603],"musky":[3094,3715],"draft":[960,1039],"distorted":[9908,14828,17552,22727],"well-defined":[14017],"tests":[6508,21628],"filemerge":[897],"createfrommemory":[11835,15153],"pixel-lit":[11175,17467,17522,22278],"landscape":[3806,4275,4498,4574,9254,9721,11562,14147,16134,21843,21897,21919,21939,21978],"selectively":[731,2715,3573,5138,8125,11055,14384,15695,16246,17683],"results":[464,1127,2017,2156,2277,3485,5004,5164,5259,5285,6664,7530,7782,9184,9258,9312,9536,11211,11224,11976,12194,12473,12504,12606,12810,12889,13761,13843,13918,14102,14777,14842,14958,15016,15132,15237,15340,15444,15520,15584,16032,16065,16170,16286,16321,16660,17000,18030,20822,21927,22205,22443,22817,22879,22934,23296,23790,23894,24648,24666],"cache5":[2036],"downloader":[257],"late":[2521,2541,24017],"we'll":[1047,2870,3308,6738,7403,7675,7826,8375,8746,8965,9028,9855,9974,11603,16763,17825,17942,19457,19793,20168,21984,22191,22635,22710,23272,24024,24654],"matching":[216,345,3199,8222,11522,13327,14069,17996,18303,19182,21691,21808,23438],"minimise":[10417,11416,22831],"simplelambert":[20192],"pixelsize":[11160],"foot":[314,2634,5410,11344,13209,14839,15607,21809],"audiomixersnapshotcontroller":[6056],"tiles":[5105,5532,10766,11803,12797,14271,16081,16513,21343,21410,22724,24183],"stored":[72,179,399,846,1063,1232,1614,2008,2167,3252,4983,5205,5687,7001,7471,7980,8037,8093,8162,8633,9478,9962,10538,10922,11296,11314,11350,12585,13439,13630,14315,14884,15139,15592,16838,17323,20273,20876,21221,22049,22738,22972,23685],"tex":[5463,11998,18332,19097],"plan":[1209,3636,3870,4227,4671,9745,11870,12456,13285,13961],"stopall":[6392],"buildassetbundleoptions":[43,1832,1917,10494,11353],"printfloatarray":[23828],"dev":[10430,11807,24375],"ticking":[23615],"listlocks":[14352],"shudder":[14278],"sums":[487],"portraitupsidedown":[11561],"replaced":[883,9177,9179,9264,9565,9615,9934,10114,10925,12190,12199,12688,14806,15099,17437,19512,20807,21685,21875,21919,22817,23242,23455,24538],"crinkly":[22158],"higher-quality":[16328],"-djava":[22299],"css":[4778,8775],"lod_fade_percentage":[3625],"hostinfo":[13381],"interval+1":[12420],"generating":[534,1653,4104,7997,10770,13916,16199,16347,17013,18353,21413,22131,22862],"equation":[11223,18889],"tandem":[16556],"mangled":[11585],"waypoints":[6780,11199],"dimly":[9183,16261],"preloading":[3256,4795,15222],"persists":[14098,14155,22522],"validate":[8737,22360],"establishment":[13749],"setters":[22627],"sheet":[187,629,687,6447,12292,14267,21960],"siblings":[16546,16735],"gets":[826,1290,2016,2250,2266,2811,3098,3719,3772,3867,5107,5373,5534,5792,7104,7243,7462,7506,8347,8737,11889,12227,12846,13249,13630,13647,13724,13766,14454,15296,15659,16060,16793,17381,17464,17795,20419,21579,22760,24364],"sensibly":[9242,11788,13846],"oncontrollercolliderhit":[2803],"right":[157,187,254,314,366,408,535,687,887,1051,1150,1296,1344,1394,1462,1481,1654,1734,1755,1786,1800,1907,2076,2185,2590,2622,2630,2810,2993,3288,3358,3419,3636,3806,4266,4498,4574,4707,4803,4973,5165,5478,5788,5817,6447,6742,6845,7365,7380,7765,7781,7834,8085,8121,8199,9217,9256,9598,9664,9686,9698,9725,9837,9873,10046,10053,10075,10135,10304,10432,10873,10978,11047,11394,11562,11648,11903,11950,12353,12644,12681,12959,13275,13448,13568,13576,13839,14072,14108,14264,14283,14302,14517,14701,14737,14827,14864,14868,15038,15084,15098,15332,15342,15440,15727,15841,15865,16175,16243,16505,16700,16735,16841,16949,17090,17260,17377,18048,18078,18597,19206,20718,20810,21401,21420,21768,21827,21907,21929,22125,22198,22246,22397,22651,22868,22918,23301,23657,23714,24145,24191,24653],"dos":[13185],"highlighting":[7158,18428,23738],"construction":[6962,8084,9321,14925,22111],"chainoftrust_setvalue":[23425],"controltexture":[8435],"selectable":[408,4234,9745,16741,16757,22684],"necessary":[183,242,263,400,434,1283,1559,1942,3686,3869,4098,4449,4656,5414,5602,6462,7942,8163,8772,9210,9336,9617,9710,10209,10451,10928,11168,11198,11606,11759,12496,12608,12695,12740,12788,12802,12843,13182,13293,13455,13630,13839,13911,14112,14614,15276,16165,16513,16834,17088,17387,19195,19455,20146,21411,22442,22729,22737,23159,23310,23462,23705,23978],"unconcerned":[9848],"versionname":[4395,4522],"interopservices":[12760,22504],"2-button":[15879],"protecting":[13310,15136,17377],"unclean":[21279],"arb_sparse_texture":[21345],"reacts":[6780,10209,17069,18880,19230],"non-unity-serializer-friendly":[16932],"administrator":[851,17387],"pot":[8113],"charts":[6466,8204,21584,21615],"tail":[2213,5737],"unity_webplayer":[14370],"precompute":[8163],"extent":[11158,12688,16246,16397],"fix":[234,4263,4547,4647,4704,4800,4930,6673,9356,9543,9651,10578,12306,12589,13164,13782,21937,23162,23209,24145],"allusersprofile":[22342],"importexample":[759],"percentage-value":[1230],"desiredcolorspace":[11247],"non-dx9":[7129,19099,20454],"four":[311,325,369,408,438,532,1522,2679,4949,5102,5285,7152,7825,8401,9721,10477,10630,11127,11156,11400,12652,13576,13949,14846,15018,15297,15457,15485,16175,17187,17865,18281,18866,18941,19142,19589,19759,20554,20735,20813,21083,21277,21395,21743,22095,22648],"occluded":[4003,10766,13846,15461,15489],"c++-":[18561],"dtx":[5602],"surfaceoutputstandardspecular":[20377],"networkpeertype":[13483],"introduce":[1111,1198,2065,2286,6899,7993,11046,11978,12317,14786,15388,16172,16374,16678,17929,21844,22743,23979],"loadassetasync":[11261],"redirect":[23203],"k_closedstatename":[9768],"fire":[426,1324,6603,10164,10873,12454,13501,13878,14038,14105,14155,14279,14307,21973],"capturescreenshot":[22064],"superclass":[10377],"folder's":[9959],"fills":[1231,5204,6633,12746,16507,16555,18412,20356,20874,22725],"reposition":[1156,6444,9020],"cascaded":[7152,18051,18314],"drawback":[11388,15169],"glsl":[5235,11750,13950,17822,18301,18679,19105,19484,20826],"fixedupdate":[2202,5710,7782,7909,10795,12400,15013,22024,24688],"lightingsimplelambert":[20193],"high-quality":[11932],"terminology":[401,1471,8135,15571,21577],"meat":[17802,19207],"launchd":[17297],"movetowards":[13058],"kernelone":[6636],"y-axis":[4112,4137,5773,9357,12303,14750,21868],"svg":[14921],"assetbundlemanifest":[1880,6068],"radial360":[16504],"affected":[521,2138,2765,2804,3098,3346,3418,3573,3652,3719,4913,5036,5127,5183,5282,6458,7154,8004,10928,11149,11786,11889,13844,13921,14155,14325,15524,17271,17529,17558,17795,18859,19034,19783,19945,20748,22026,22126,22154,22879,23264],"xmltextwriter":[24256],"--aot-only":[22455],"c-based":[12753],"autorotatetolandscaperight":[11565],"linearly":[2219,12330],"setswapchainbackgroundpanel":[24039],"experience":[1209,2425,2559,6976,9981,13318,13763,14596,14924,16314,17347,22093,22924,23082,23990,24391],"partitions":[22349],"individual":[213,379,589,690,747,878,1288,1426,1735,1759,2009,2160,2426,2559,2626,2762,3098,3156,3271,3433,3529,3580,3719,3840,3888,4071,4113,4138,5004,5152,5205,5259,5405,6603,6778,6936,6979,8082,8775,9268,9688,10086,10135,10291,11452,11753,12465,12685,12818,13303,13327,13428,13846,13902,13974,14110,14281,14306,14338,14748,14786,14835,15007,15061,15099,15343,15856,16188,16760,17203,17397,18039,18137,18375,19420,21386,21413,21625,21829,22123,24001,24319],"242kbits":[13448],"meshrenderer's":[8187],"framebuffer":[8085,11228,18318],"artists":[391,5629,9233,11959,13816,14923,17863,19125],"madfinger":[12053],"escapes":[14073],"unsightly":[14828],"encoding":[1111,3228,4395,4522,8075,15473],"seller":[15713],"topic":[11945,13769,15711],"monobehaviours":[10030,11535,13706,21625],"primaries":[16168],"clusterrenderer":[6436],"conversations":[17045],"alpha-only":[4930],"chained":[1211],"unsaved":[22608],"decode_eyedepth":[18621],"transformer":[11861],"installs":[210,10088,22548,24398],"rockets":[2969,2982,10162],"purchased":[1006,4444,4714,11401,22969],"shafts":[16994],"mercifully":[13839],"divergence":[1165,1390],"desired":[179,661,852,1181,1435,2189,2926,3025,3028,3133,4927,5286,5383,5815,6437,7370,7381,7767,8393,9210,9743,10847,11247,11302,13094,13166,13330,13460,13764,14062,14776,15194,15329,15578,15757,16646,17100,17216,17263,17911,20822,21390,21772,22555,22662,22860,23373,23413,23730,23983,24577],"beach":[21897],"tonemappers":[17105],"metalness":[21859,21902],"mastering":[1125,1330,1461],"html5":[23796],"woken":[5193,15588],"fixup":[5587],"bricks":[10135,11917,14889],"-z":[5322,5586],"hair":[21573],"usenat":[13333],"dontdestroyonload":[13478,15219],"categorizes":[19777],"emerging":[16256],"bottom-most":[3415],"shaders":[2004,3179,3251,3445,3579,3631,4090,4199,4687,4763,4795,4909,4966,5213,5293,5401,5513,5719,6621,7118,7325,8008,8174,8306,9264,9477,9889,10616,11175,11349,11422,11741,11873,11965,11978,12282,12491,12602,13897,13974,15048,15343,15468,15496,15547,16205,17469,17513,17566,17638,17683,17731,17750,17785,17792,17818,17914,18056,18140,18180,18251,18329,18376,18412,18554,18678,18680,18711,18860,18935,19029,19047,19083,19125,19202,19230,19256,19376,19418,19431,19456,19512,19758,19791,20132,20165,20351,20455,20692,20774,20780,21344,21575,21862,21930,21962,22278,22435,23893,24545],"glint":[15938,15975,16007],"allocrequestforhttpmethod":[10347],"madbubblesmashgame":[13372],"routine":[13366,13441,15153],"database":[805,836,1919,2051,6366,13437,17387],"coils":[21834],"functionname":[19996,20457],"brick-wall":[1194],"wheeljoint2d":[6050],"sortedbillboard":[4078],"non-technical":[11870],"a92181sn828o":[23441],"rum_update_or_add_row":[13438],"premerged":[21279],"redify_on":[18514],"real-world":[2124,5096,8443,21615],"gl_oes_depth24":[1499],"buildassetbundles":[1859,7767],"walkies":[1280],"as_backup":[17406],"funky":[4925],"existant":[17167],"jobs":[8170,15014],"xml":[5446,10417,10923,10968,11588,14513,15396,17280,22309,22462,23878,24254],"transitons":[9740],"disabling":[176,1179,2362,2368,12657,12831,15234,16197,22293,22480,23616],"chances":[3428,6667],"gl_amd_compressed_3dc_texture":[1504],"achieves":[24280],"inevitably":[877,9619,23158],"blocking":[13267,13308,13351,17013],"interactive":[1551,8112,8168,8510,8914,12456,15838,17442,23082,23398],"yoursubset":[4264,4548,4648,4705,4801],"invoked":[204,2072,6634,10474,12570,13578,14462,14664,14741,16050,16534,16706,16731,16956,17074,20416,20458,22996],"unityiproxy":[23167],"tuned":[11749,14098,19436],"lightmapped":[3587,7324,7998,8113,8187,11193,11872,11995,13916,15528,19056,19248],"calculate":[534,1276,1460,3654,3822,3993,4842,5048,5151,5361,5400,7168,7597,7818,8003,8099,9860,11126,11156,11193,11899,12333,12884,13212,13869,15217,15584,16964,16999,17111,17524,18048,21267,21644,21930,22571,24634],"leading":[15971,16003,16842,17019,23435],"shoot":[468,11630],"formatted":[15808],"self-host":[6708],"synchronizes":[13297,13743],"indication":[16246],"double-clicking":[314,637,670,3296,6484,7343,17824],"ambiences":[1362],"advance":[7790],"script-selectablenavigation":[16047],"inspectorexpandedstate":[6096],"hdr":[2691,3021,4964,5016,9184,11198,11248,15473,15501,15907,15938,15975,16008,16283,17092,17171,19164,21580],"pre":[960,1039],"t1":[16830],"emergent":[5198],"helvetica":[23528],"forcerebuildassetbundle":[1930],"elliptical":[22114],"verticalbillboard":[4079],"player":[241,288,327,393,489,753,1376,1515,1596,1603,1967,2118,2427,2665,2790,3426,3483,3529,3802,3866,4167,4493,4568,4659,4749,4779,4998,5202,5247,5397,6437,6496,6597,6681,6763,6913,6988,6991,7105,7120,7934,8096,8099,8116,8183,8401,8890,9745,9924,10076,10409,10452,10811,10844,10873,10912,11061,11124,11139,11239,11289,11305,11577,11605,12287,12453,12611,12644,12687,12752,12819,13196,13284,13326,13464,13565,13576,13721,13727,14139,14370,14517,14689,14947,14965,15067,15081,15189,15245,15346,15405,15838,16256,16645,17088,17234,17265,18558,21343,21368,21667,21772,21971,22083,22307,22440,22527,23169,23398,23399,23446,23770,23796,23816,23878,23897,23901,23986,23989,24108,24128,24214,24301,24391,24516,24593],"diameter":[14872],"popping":[4002,15526,22268],"action":[532,2130,3887,4603,6465,6856,6868,6961,7792,8737,9216,9846,10135,10377,10879,10978,11793,12459,12611,13182,13273,13305,13448,15036,15617,15879,16042,16217,16438,21617,21993,22593,24683],"ruining":[16314],"thread-safe":[12504],"shine":[12039,17454,17639],"setvalue":[10356],"n2":[12345],"brightly":[11198,12284,14047],"#008080ff":[21736],"opponent":[12459,13724],"leveraging":[10405],"intensive":[2363,2369,14733],"finite":[9091],"atmosphere":[3532,3578,6856,6990,11934,11960,14066,14109,16134,18040],"ssaa":[15909],"slave":[6368,6389,6408],"scripts":[34,224,285,305,406,639,753,821,836,1112,1203,1432,1615,1848,2003,2033,2146,2735,2776,2818,3018,3199,3244,3365,3529,3659,4403,4531,4605,4731,4966,5147,5209,5602,5876,6449,6763,6807,6939,6977,6982,7314,7533,7901,8113,9357,9889,10032,10056,10177,10423,10453,10484,10566,10800,10921,10962,11965,11978,12191,12487,12490,12612,12645,12687,12733,12754,12952,13094,13457,13466,13706,13735,13896,14033,14325,14358,14494,14698,14787,14904,15005,15193,15343,15568,15758,16801,17188,17199,17203,17234,17237,17238,17786,17943,21352,21625,21981,22437,22544,23153,23270,23298,23382,23726,23754,23812,23842,23895,24075,24129,24214,24280,24323,24356,24519,24529,24553,24579],"heapu16":[23863],"filestream":[10544,24253],"icon_16x16":[9631],"bare":[8345,21835,22250],"sun-style":[3165],"otherexample":[18656],"toms":[15081],"surprised":[6962],"wanting":[1180],"getvalue":[22452],"disconnected":[10866,11193,13483,18046,23683],"emitter":[3067,3685,4058,6603,8226,9574,14105,14236,22126],"0-i":[21045],"recalibrate":[9617],"delegates":[16392,22499],"svn":[7946,21318,23757],"considerably":[4903,7892,10818,13448,14067],"fraction":[2283,3619,4940,4975,5809,9183,13927,14026,14073,14109,14162,14202,15250,16506,16708,21745,22699],"interpolation":[182,657,1194,2220,2645,3756,5130,10451,11193,12335,13723,15024,16170,19266,20926],"unwrapped":[16195],"recompiled":[5262],"shaderlab-fu":[18053],"corridors":[12811],"utility":[1210,2969,2982,9215,10918,11306,21413,22050,23162,24563],"act":[259,318,434,2764,3241,5121,6462,7445,14844,17364,21360,22914,23393,24288],"inventory":[9688],"mapping-":[6672],"throw":[6508,7235,11016,12481,23782,24687],"tryparse":[24629],"0f":[1222,1713,5504,7170,7669,8254,8643,8882,8905,9075,10883,12757,13006,20118,24692],"exact":[379,579,685,1290,2806,2870,3101,3428,3722,3997,5371,5609,5703,6442,11257,12294,12681,13724,14073,14109,14279,14304,14315,14828,15440,16170,21356,21603,22111,22400,22889,22915,23308],"yieldinstruction":[7923],"x+90":[7600],"recovering":[839],"_lightmatrix0":[20734],"provide":[393,750,972,1018,1043,1210,1329,1674,1915,2076,2882,3322,3365,3426,3621,3806,4109,4134,4463,4721,6738,6828,6856,6940,7508,8097,8168,8462,8554,8914,9334,9623,9696,9849,10373,10447,10782,11519,11986,12754,13424,14325,14461,14546,14835,15012,15215,15233,15473,15504,16357,17026,17201,17346,17391,21621,21940,21957,21991,22571,23401,23461,24143,24257,24288],"watching":[22118],"file-":[1610,9417,9489,14676,15190,15833,18561,22922,23761],"particles-":[3091,4090,9587],"stylesheets":[23449],"320x480":[4303,4510,4593,10589,11606],"hoses":[14184],"stereographic":[18369],"xmltextreader":[24255],"dosomething":[10178,22508],"lacking":[11553],"retransmitted":[13449],"soft-body":[12480],"becauses":[8885],"wheels":[166,3501,4141,5767,11454,14062,14876,21398],"two-column":[15116],"perlin":[21836],"gettag":[19756],"parenthesis":[18866],"programmable":[15547,17800,17822,17939,18056,18140,18860,19087,19248,19256,19451,19457],"clashes":[12687],"exporting":[591,1853,2074,9317,9354,9358,9412,9441,9481,9529,10483,12702,15345,21396,23368],"quads":[3196,5498,11937,14880,15475,15509,20461],"marketplace":[1548,11573],"stack":[1343,4145,4451,4658,9224,11350,11597,12585,15396,22395,23775,24145,24245],"vertexlmrgbm":[19057,19237],"receives":[487,1153,2421,2745,3520,10027,13289,13331,13630,15588,16392,17338,22394],"cmd+a":[23052],"thrown":[3708,5283,6464,10976,14038,14107,17337,23781],"component's":[3227,5492,8124,23276],"preview":[386,595,680,1701,1737,1763,2272,3999,4779,4863,5516,6418,7765,8121,10209,11206,11710,16077,17055,17212,19787,20784,21375,21566,23373,23796],"acks":[13717],"movie's":[3794],"implications":[4379,17279,21569,23874],"enable_d3d11_debug_symbols":[18568,19482],"achievements":[13636],"selecting":[155,279,377,433,612,637,670,704,862,1139,1393,1652,1735,2614,3006,3580,3619,3878,5168,5414,5518,6947,7352,7487,7942,8138,9543,10206,13275,14036,14317,14676,14785,14866,15007,15038,16692,16755,16958,17088,17395,20788,21378,21935,21939,22226,22559,22692,22727,23316,23982,24361,24534],"interpolates":[11146,19266],"tempstate":[24216],"terrain's":[12636,21889,21907,21933],"dirtolight":[12096],"understanding":[631,861,2076,2128,8341,10782,11590,11921,12194,12457,12586,13285,14337,16157,16258,17822,22570,22734,22865,22873],"damaged":[22351],"lte":[10705],"awesomemesh":[23258],"imported":[296,307,321,365,383,434,447,578,584,823,847,931,995,1051,1109,1284,1465,1613,1633,1842,2008,2157,2221,2293,2609,2642,3004,3183,3394,3638,3758,3767,5166,5301,5442,5489,5513,5686,5750,6538,6859,7943,7980,8022,9270,9331,9356,9374,9389,9401,9432,9482,9520,9547,9568,9965,11476,12182,12608,12698,14829,14870,15001,15139,15345,15565,15600,16498,21372,21925,22123,22242,22727,23238],"unobtrusive":[21671],"identified":[146,13567,15081,21104,21408,22737],"physics-ready":[5143],"quiz":[16825],"generics":[22473],"tonemaplight":[20326],"unit's":[1156],"software":[22,198,580,585,2074,2302,5764,6424,6550,9235,9334,12182,14842,14868,16189,21275,21597,21664,21957,21960,22050,22349,22934,23625,24149],"add-appxpackage":[24202],"character's":[341,393,439,2138,2199,2630,2693,2799,5283,6464,6661,7786,10303,12684,12898,14830,21897],"0x0000b":[13781],"focused":[3341,16079,16286],"league":[11925],"fast":[471,908,1783,2047,2465,2579,3517,4122,4141,4360,4642,5133,5683,5705,7309,8200,10558,10846,10944,11193,11600,11793,11861,11870,11948,11978,12199,12451,13937,14066,14102,14766,15087,15532,16007,16060,16683,17088,18955,21671,21924,22026,22714,22832,23774,24020],"shows":[396,705,822,946,1004,1154,1334,1393,1522,1604,1633,1736,1762,1850,2076,2193,2501,2640,3619,3662,4106,4863,6667,6677,6727,6856,7389,7509,8084,8122,8210,8284,9568,10053,10168,10573,11120,11671,11798,11976,12511,12650,12810,12886,13276,13571,13997,14566,14925,14985,15009,15043,15071,15098,15239,15351,15440,16196,16330,16661,17347,18716,19408,20928,21548,21693,22247,22385,22725,22916,22997,23145,23638,24180,24583],"sobeldepththin":[16382],"succeed":[13310],"notepad++":[14815],"specular":[778,3008,4890,5638,5695,8091,8339,9276,11441,11903,11995,12614,15465,15493,15535,15560,17447,17476,17501,17505,17525,17542,17575,17611,17616,17629,17648,17670,17674,17690,17699,17708,17725,17738,17757,17776,17851,17933,18358,18464,18875,19023,19054,19243,19289,19427,19437,20133,20250,20363,20499,21569,21575,21586,21591,21608,21861,21904,23698],"friction":[2659,2860,3041,4150,4163,4848,5767,6447,10135],"3th":[11606],"patching":[24287],"matchtargetweightmask":[21826],"highscoreprovider":[17285],"viewnormal":[12092],"spotlight":[5580,6860,9571,11147,15898,21940],"issuepluginevent":[12734],"description":[593,971,997,1057,1612,2211,3529,3574,3847,3875,4028,4494,4569,4660,4750,4780,5666,5691,6727,7773,8038,9189,12653,12923,12945,13114,13128,13145,13227,15113,15934,16240,16456,16487,16548,16562,17086,17151,17202,17431,21356,21711,23640,24310],"fixed-function":[10770,19408],"installplugin":[7050,23502,23946,24442],"server-side":[17383],"flexibility":[1919,6442,9621,10020,10199,16007,17800,21962,23278],"numparams":[1219],"browser-like":[156],"'default'":[14348],"'mypassword'":[911],"addatlas":[21510],"flame":[14102,14259,14279],"currentgear":[9604],"refactorings":[6714],"tagmanager":[5930],"l-shape":[3039],"shopping":[157],"crashlog":[11590],"series":[7309,10449,10769,11182,15681],"getkeyboardtriggercontrol":[24100],"bottom-up":[22617],"statemachinebehaviour":[21625],"adopting":[12688],"constructor":[6962,7002,8507,10422,10539,14535,15617,24392],"to-ports":[17339],"sbsar":[14902],"purchase":[834,943,1016,2026,5206,10477,15114,22968,23365],"frond":[22131],"running":[72,208,219,263,329,366,532,652,846,1091,1598,2030,2293,2630,3148,3483,3778,4179,4502,4623,4667,4811,5249,5277,6377,6517,6883,6976,7121,7282,8082,8243,8376,9458,10410,10442,10778,10782,10940,11167,11215,11331,12378,12606,12959,13284,13327,13448,13457,13704,13729,13772,13876,13892,14375,14510,14721,14917,14965,15067,15081,15247,15616,15636,15700,15836,16159,17220,17323,17391,18346,18558,19292,19541,21290,21370,21372,21617,21656,22362,22455,22542,22914,23134,23279,23416,23605,23758,23899,23984,24046,24130,24164,24299,24355],"realign":[14790],"resource":[1823,9619,10519,11287,11835,16798,22864,23880,24017,24105],"compressor":[1165,2307,2367],"sidebar":[1103,6722,6726],"frontbuffer":[11168],"aligned":[181,1247,2176,2634,3386,4079,5478,14071,16646,16739,17211,22233],"eventsystems":[9753,11530],"outlines":[4107,16272,16365],"pointerpressed":[24059],"combination":[532,1112,1280,1909,3141,4933,5023,5221,6442,8016,9738,10949,12320,12650,13982,14307,14543,14919,18078,19016,21567,21588,22436,22868,22879,23275],"host_10_1_0_132":[1566],"awkward":[9254],"clashing":[12688],"cross-fade":[3624],"tint":[3150,3412,5319,9909,15962,15996,16158,16591,16760,17006,20046,21113,21883],"audiomixercontroller":[6053],"notation":[14564,18075,18947],"createasset":[772],"faster":[367,1843,2464,2620,2974,3519,3572,4034,4360,4642,5172,5777,7139,7331,10201,10846,11215,11746,11867,11910,11948,11978,12201,12468,13892,14283,14543,15200,15385,15516,15689,15865,16015,16036,16327,16681,17000,19436,20399,23790],"buig":[22699],"'a'":[18320],"clone":[6692,6698,6701,10177,11044,15034],"stereo":[1281,1348,2272,2431,2466,2559,9993,15799],"augment":[318],"assignments":[9478],"extrapolate":[5132,5189],"recipients":[13575],"200kb":[22833],"models":[350,587,741,821,931,1051,1471,1522,1632,1693,3117,4954,5656,5788,6581,7979,8306,9208,9233,9354,9357,9364,9517,9543,10586,11232,11349,11903,12598,13914,14829,14868,15137,15388,15555,15562,15678,15760,17167,18252,18361,19791,20132,20165,20367,21373,21570,21574,22123,22441,23362,23383],"axial":[17167],"xmldocument":[24254],"endgroup":[9020],"robertscrossdepthnormals":[16386],"bumpmap":[12003,17660,19175,19829],"modules":[1465,2272,4106,7804,10028,14014,14186,14281,16392,22091],"compliant":[10504,15923,16088,16186,16281,16317,16354,16389,16418,16671,16690,17022,17060],"those":[188,236,253,439,580,658,677,712,874,1064,1112,1180,1297,1350,1613,1760,2052,2712,2765,3098,3200,3428,3719,3814,4956,5210,5295,5393,6618,6969,6994,7133,7313,7339,8126,8772,8890,9326,9710,9737,9741,10047,10056,10161,10558,10925,11083,11155,11351,11491,11564,11600,12185,12459,12688,13298,13439,13498,13923,14035,14288,14550,14874,14933,14958,15400,15600,15913,16061,16164,16763,16799,17369,17552,18036,18053,18685,19047,19182,19391,19588,21374,21495,21615,21930,22456,22606,22639,22858,22870,23243,23447,23689,23756,23809,23819,23905,24134,24321,24395],"autobuilduser":[6539],"away":[1762,2580,2802,2876,3096,3157,3543,3708,5654,7133,8168,9256,9872,10021,10075,11121,11155,11198,11747,11921,11950,12408,12485,12796,13075,13107,13318,13841,13923,14102,14259,15247,15479,15588,17090,18044,18077,18383,21947,22236,22555,22638,22871,24598],"texcoord2":[12086],"screen-space":[15465,15493,19246],"heights":[17152,22619,23296],"xcodebuild":[10918],"indirectfade":[20153,20289],"cmd+6":[23034],"processauthentication":[13644],"tab":[177,308,322,444,854,933,980,1002,1020,1035,1044,1516,1639,2363,2369,2609,3119,3389,4813,5479,6378,6681,6818,7082,7964,7984,8022,8136,8186,9366,9885,10054,10916,11338,12649,12684,12890,12931,13852,14317,14467,15119,17208,17394,18557,21374,22177,22424,22918,23321,23656],"investigate":[197,234,13294,13999,16834,22446],"intel":[8096,8311,9920,11183,14366,15459,15487,16205],"engage":[6738],"hardcore":[22200],"original":[462,580,902,1063,1109,1186,1613,1786,2169,2243,2259,2342,2354,2375,2906,5232,5750,6443,6931,6999,7090,7987,9727,10201,10331,11947,12218,13163,13631,14783,15170,15325,15577,15600,16158,16188,16219,16246,16260,16440,16502,16611,21368,21394,21442,21655,21757,21933,22093,22380,22726,22760,22876,23249,23364,24391],"tile-based":[10765],"multi-head":[6547],"'default":[10422,16115],"increase":[1166,1281,2294,2577,2728,3663,4395,4522,4745,5045,5425,7134,7397,7892,8881,9124,10848,10952,11155,11356,11499,11965,12335,12495,12801,12888,13449,13574,13907,13976,14073,14199,14307,15093,15236,15875,16158,16246,16260,16293,16700,16949,17908,18040,24015],"ridiculous":[11882],"magenta":[16606,21723],"picked":[407,1459,2425,2474,6791,8244,12477,13576,13816,18936,23819,24319],"'edit'":[15867],"retailer":[941],"bob":[17367],"amountrect":[7598],"accessors":[12378],"absolute":[6839,7001,20042,24416],"aliasing":[4963,7133,11155,12408,15905,15942],"structs":[648,10949,12223,12585,16810,22459],"brick":[10112,11349,14912,17454],"dirty":[6866,11978,14072,14140,24019],"'realism'":[16079],"providing":[1042,1683,3585,8819,8934,9157,15693,17204,21079,21398,23990],"refunded":[963],"cross-platform":[135,193,4177,9593,10437,18248],"pathfinder":[4019,12882,13183],"getallassetnames":[1956],"project-":[18561,22919],"chunk":[12333],"destroyed":[1379,2852,2965,3136,4041,5728,7930,10114,11044,11301,12205,12702,14139,14603,15058,15219,22307,22862],"crashreport":[4605],"buying":[11951,15114],"setpixels":[5509,5602],"blurring":[5002,7153,8290,9191,15961,15995,16246,16284,16320,17009,17165,21978],"embedded":[3804,4778,13438],"_screenparams":[20713,20865],"a0a0a0":[7002],"published":[30,253,947,1003,1029,1043,4454,4565,6597,8116,8401,8772,15218],"util":[14606],"brushes":[21842,21940],"months":[935],"single-channel":[18319],"widely":[2124,2604,9559,11568],"frank":[17368],"playerprefs":[15803],"subversion":[7941,21319],"feedback":[2250,2266,2408,3426,4415,4543,6718,13206],"squared":[3828,4137,7110,20754],"b+e":[18954],"text-heavy":[5457],"early-access":[23796],"tricks":[2135,11991,12460,13752,13919,18372],"alt+right-click":[14965,23983],"left-hand":[713,6722,22104],"x64":[4821,14472,22262,24145,24215],"recurring":[6680],"bold":[3393,17032,19808,23539],"m_staticeditorflags":[8056,24814],"sampling":[576,1256,4203,5609,10852,11228,11506,11683,16083,16285,16374,18331,19076,19489],"online":[906,2026,9258,11407,13875,22864,22959,23992],"yuv":[16606,24545],"voxels":[12800],"ethernet":[2047],"gl_eyeplaner":[19119],"oscillating":[5371],"metal":[5173,11454,12723,18293,19088,19502,20372,21569,21586],"lookobj":[10313],"unity_audiodsp_result":[1248],"depth-based":[5397,16169,16357,16384],"full-size":[12916],"trail":[3593,5715,7333,10113,13276,14071,15101],"unity_initialize_output":[18328,19094,20034],"understand":[693,2136,3892,4263,4547,4647,4704,4800,6545,6988,7129,8110,10032,10105,11581,11921,12684,12883,13173,13263,13573,13769,13839,13907,19099,20454,20845,21546,21715,22109,22244,22874,22979,23268],"os":[219,895,1547,1551,2049,3200,3804,4222,4502,4631,4669,5488,6536,6702,7387,9961,10085,10538,10854,11184,11311,11840,12542,12748,13426,13431,13758,13878,14366,14467,14496,14522,14674,14862,15044,15897,17347,17385,18610,18681,21658,22430,22838,22920,22960,23307,23403,23893,24391,24603,24655],"one-texture":[18708],"gl_clipvertex":[19108],"subfolder":[8018,10473,14472,14737],"ra":[21595],"subtracts":[19265],"traps":[13180],"past":[1604,22283,22735,22944],"incoming":[181,1211,2140,6457,7797,13311,13568,13756,14335,15583,19996,20414,21611,23672,23899,24097,24671],"untick":[177],"refund":[966,1016],"canopy":[6856],"accumulate":[13724,21842,23704],"passed":[52,329,666,1178,1256,1427,2070,5163,6653,6994,7271,7776,10766,11241,11527,11620,13022,13330,13614,14660,16710,16956,17077,17987,18689,19617,20019,20145,20727,20841,21080,21747,22024,22499,22817,23188,23774,23863,24044,24443],"enhancements":[24549],"4096x4096":[9258],"defringe":[9221],"hwnd":[6562],"gave":[12201],"preferences":[177,206,279,1638,2017,4178,6951,7387,9420,9629,12642,14791,14851,15101,15385,15898,21278,22128,22266,22930,23381,23633,23750],"b+-c":[19281],"layoutparams":[14564],"unity-built":[10427,10443],"google-play-obb-downloader":[254],"programmer":[12204,12687,22735],"hosted":[170,252,3060,6698,17275,23447,24391],"bug":[196,230,3804,10425,10460,10575,11589,15005,19123,23623,24128],"live-demos":[22541],"overlay'":[16121],"spherestatechanged":[24683],"predicate":[5759],"periodically":[6913,7792],"simplifying":[20820],"improper":[908],"mini-map":[12680],"vert_img":[21025],"under":[195,213,241,269,288,755,882,1408,1607,1655,1693,1762,2097,2284,2363,2369,2622,3234,5032,5121,5178,5259,5283,6463,6485,6698,6711,7759,7765,7795,8084,9231,9373,9547,9846,9871,11235,11399,11605,11683,11979,12810,12887,12931,13149,13310,13749,13984,14307,14925,15039,15068,15075,15335,15411,15867,16090,17537,18378,18558,19385,21277,21574,22114,22721,23272,23669,24216,24326,24344,24515,24532,24644],"fxaa":[15908],"indexof":[18538],"trouble-shooting":[277,22366],"materialproperty":[18501],"synthesize":[12456],"harder":[25,9289,9617,13291,14076,17798],"inaccuracies":[15388],"communicate":[355,1598,6520,6719,9924,12983,13309,14598,15017,17364,18985,22287,23170,23814,23903,24180,24411,24584],"inches":[9237],"data-":[1270],"uninstaller":[10075],"sequence":[603,704,4086,5405,5586,5742,5876,6868,8039,8085,11718,12818,13160,13449,14272,15280,16047,16195,16531,16697,16946,17067,19257,22048,22928],"move":[314,728,772,823,1156,1198,1428,1460,1615,1646,1763,1802,2097,2122,2362,2368,2711,2796,2875,3035,3047,3086,3447,3612,3704,3830,3861,4002,4020,4030,4400,4528,4855,5027,5121,5178,5279,5330,5491,5652,5716,5778,5801,6444,6603,6826,7159,7328,7911,7942,8086,8944,9346,9463,9785,9961,10022,10873,11198,11239,11419,11651,11747,12287,12454,12876,12916,12949,13103,13120,13135,13155,13195,13248,13271,13293,13721,14047,14110,14155,14180,14215,14240,14252,14259,14775,14828,15029,15075,15237,15526,15584,15594,15749,15843,15863,16724,16965,17204,17207,17421,17815,17835,19220,19434,20853,21398,21643,21768,21809,21940,21949,21993,22104,22253,22364,22522,22638,23011,23291,23361,23373,23657,24017,24675],"walking-jumping":[358],"facto":[236],"preceded":[19275],"decides":[11840,19758],"attenuation":[1127,1151,1337,1418,2426,2464,16683,18320,20207,20734],"lightwave":[17,9280,9427],"distinct":[182,364,3094,3715,5142,13913,14076,15018,16703,21372],"earlier":[875,1230,1570,2713,3804,3913,7091,8778,9385,14186,14469,17188,21575,22668,23135,23623],"mycamera":[16823],"converts":[9187,9573,18270,23812],"'outgoing'":[23656],"depressed":[8522],"preserved":[2286,6898,12182,15971,16003,17019,21670,21926,23220],"determined":[742,1312,2078,2579,3433,3570,3631,3806,4045,5289,5721,5790,7826,9617,10291,11149,11294,13227,13297,13448,13713,15137,15456,15484,16241,16259,16365,16488,16708,16950,17152,17187,18043,22437,23377],"allocateviewid":[13571],"surround":[12225,14035,18684,21743],"animationstatemachines":[11511],"moments":[2634,24436],"adapters":[6547],"fk":[9408,9500,9526,12608],"union":[1242],"bitmaps":[14919,16118],"randwithincircle":[15333],"world-to-light":[20734],"enormous":[14266],"stringcollection":[24250],"windowfunction":[8725],"cryptographically-signed":[23438],"visualized":[351,632,1762,2828,21113],"nullreferenceexception":[13777,22262,22394],"buildings":[2713,9254,11349,13846,13932],"accessed":[246,406,931,1613,2146,2776,3252,3625,4778,5459,6807,7308,10505,11251,11287,11306,12617,12650,13183,14281,14580,15470,15636,17294,18695,19153,21275,22396,22738,23388],"deployed":[30,202,4323,10469,13426,14676,14721,23447,23894,24571],"materialpropertydrawers":[18548],"windscreens":[18449],"xb1":[15438],"pronounced":[6942,13160],"textureimporter":[1840,6074,21431],"angle":[181,2128,2575,2675,2754,2841,2963,3455,3497,3558,3649,3771,4165,4978,5111,5184,5336,5538,5811,8003,8104,8141,9913,10255,11132,11454,13822,14069,14176,14228,15233,15851,15892,16686,16961,17134,17177,18400,19846,20229,21606,21693,22141,22222,22868,22897,23376],"seperate":[16869],"sidestep":[12035],"grabpassinvert":[18700],"theora":[3774],"ignoreraycast":[11114],"2g":[10684],"accepted":[1005,1040,6719,24716],"androidprofiler":[14988],"orientations":[3806,4280,4576,19073,19513],"softness":[16277,16595],"instantiates":[9675,10109,12484,21774],"downwards":[5773,13839,15936,19068,22159,23376],"-force-driver-type-warp":[6569,24116],"getassetbundlehash":[1952],"compute":[1743,1767,4966,6621,7118,12957,15466,15615,17988,18281,18604,19433,19945,20414,20459],"dissipation":[5737],"canstreamedlevelbeloaded":[15204,24021],"wraplambert":[20212],"movie":[238,283,3764,5512,9620,10583,10958,14880,15795,21655,21967,22050,24022],"gamecompany":[17283],"probe's":[5002],"hierarchy":[340,434,617,676,682,823,1055,1139,1329,1402,1661,1695,1799,2613,2626,2765,3125,3794,6442,6672,6770,6969,6981,7090,8023,8085,9207,9476,9506,9521,9745,9978,10156,11424,11527,12604,12964,13314,13757,13842,14785,14835,14853,15004,15038,15101,15563,15867,16733,16979,17119,17209,17259,20782,21391,22109,22195,22668,23032,23220,23360,23382,23734,24383],"app-store":[10406],"records":[11339,15010,15090,24549],"uncleaned":[11856],"jump":[364,589,605,2156,2223,3784,10873,12892,12928,13132,13263,13724,14806,15128,15605,16610,21394,21617,21809,21947,22877,23296],"end":[313,448,550,694,860,1194,1198,1467,1557,2156,2569,2689,3031,3194,3491,3603,3624,3762,3836,4016,4156,5204,5237,5333,5378,5417,5429,5523,5724,5761,5806,6805,7121,7142,7361,7397,7906,8402,8703,8898,9031,9183,9263,9451,10103,10291,10348,10970,11299,11345,11454,11750,11860,11923,11950,12342,12652,12789,13061,13138,13206,13287,13923,13985,14045,14054,14072,14170,14211,14250,14524,14829,15084,15689,15838,16535,16708,16950,17212,17327,17387,17929,18346,18875,19257,19390,20763,21693,21795,21927,22625,22741,22867,23242,23990],"ports":[12532,14973,17329,17438,22493],"z-axis":[2977,9357,14750],"px":[23544],"miss":[22548],"theory":[1457,12588],"diffusion":[2523,2545],"qa":[1533],"sending":[177,3909,5874,7802,13451,13510,13565,13575,13719,13732,13766,13900,16972,21973],"lookattargetposition":[13016],"unresponsive":[24046],"voila":[998],"fits":[291,3549,5848,6672,7159,9513,16558,21405,22731],"wave_hand":[524],"shadesh9":[12165,20744],"sparkles":[21973],"myunsignedassembly":[23412],"unity_compiler_hlsl":[18329],"purely":[188,1437,1460,5817,13923,14943,16686,20605,22838,23600],"creators":[12182,12454],"reliable":[2031,3890,3898,7909,9426,13447,13701,22444],"dominates":[1764],"lend":[11199,12229,22097],"_reflectioncolor":[12027],"conceptually":[11826,12916],"expansion":[241,4433,4561,14102,22658],"discern":[11965],"initializations":[7790],"beautiful":[6559],"without":[53,442,521,1360,1456,1674,1734,1786,2018,2124,2138,2293,2595,2689,2741,2759,2847,3125,3377,3430,3439,3587,3675,4053,5049,5133,5202,5399,5640,5678,5700,6444,6555,6590,6665,6924,6936,7001,7110,7582,7845,7993,8135,8772,9224,9354,9593,9966,10033,10061,10109,10451,10901,11136,11286,11416,11483,11621,11798,11909,12194,12592,12617,12650,12894,12916,13153,13175,13196,13352,13628,13715,13749,14013,14110,14313,14566,14828,15104,15295,15462,15490,15585,15617,15876,16314,16511,17331,17413,18104,18345,18448,18949,19588,20184,20459,20780,21290,21395,21408,21619,21868,21922,21987,22083,22097,22101,22402,22662,22666,22838,22894,22962,22981,23134,23209,23269,23299,23371,23382,23435,23605,23682,23863,24022,24118,24158,24416,24525],"building-universal-windows-apps":[24375],"strips":[3663,15346],"disperse":[14073,14259],"textanchor":[24622],"rigidbody2d":[2982,3031,3491,4112,5333,5378,5910,10875,17205],"repeatbuttons":[8539],"downs":[24525],"low-bandwidth":[13763],"strike":[5202],"profiled":[11792,15084],"loadgfxnativeplugin":[24088],"noncachingloadexample":[7227],"uniformly":[182,2673,9860,11306,15859,21920],"fine-tuning":[2805,3887],"brightened":[16168],"wounded":[364],"fireflies":[3094,3715],"symbol":[22638,24195],"spurting":[3098,3719],"side1":[6651],"combines":[52,10405,12640,20068,21649,22904],"reduction":[456,4354,4539,4636,5425,7970,9195,10942,15389,16168,16246,17552],"stiffness":[5796],"visualise":[14005,15250,21360],"positionhandle":[7459],"visualize":[1288,4001,4887,12041,16291,16330,16755,17993,23234,23659],"living":[12556,22438],"follow":[221,265,880,1247,1598,1968,2140,2693,3086,3704,5344,5487,5731,6360,6643,6668,6717,6842,7947,8060,9498,9729,10339,10427,10560,10856,11577,11923,12628,13079,13883,14342,14772,14827,14963,15600,17207,21299,21387,21930,22204,22325,22524,23132,23266,23623,24199,24229,24565],"continued":[22867],"apple's":[897,2285,3804,4443,4713,10428,10465,10476,10560,11861,12518,22918],"selects":[447,2218,3056,3296,3772,4987,5104,5531,10471,12820,14022,14153,14161,14232,14274,14298,14790,17685,21420,21745,21944,23693,24581],"urls":[23769],"pushes":[4142,22895],"androidplayer":[14612],"strength":[1099,2852,2904,3136,3154,3564,5363,10111,14109,16070,16308,16401,16653,17057,17168,18040,21612,21910,21940,21953,22895],"rapid":[259],"unitywebplayer":[10078,11319],"sticky":[3134],"extention":[3503,24257],"watermark":[24598],"randomness":[4885,14140],"invokeonappthread":[24048],"getallassetbundles":[1949],"fixes":[12341,18556],"0xc0000135":[926],"asm":[23811,23894],"recenter":[3517],"image":[187,289,706,975,2078,2361,2367,3055,3147,3181,3209,3338,3428,3650,4171,4508,4584,4679,4890,4964,4983,5216,5395,5512,5683,5705,5792,6408,6589,6612,6858,6998,7122,7158,7852,7919,8285,8320,8421,9049,9184,9224,9304,9495,9560,9571,9630,9678,9700,9852,9868,9981,10573,10603,11047,11198,11400,11864,11887,12041,12284,12491,13822,14007,14188,14268,14808,14870,14886,15351,15479,15546,15750,15799,15861,15903,15938,15975,16007,16022,16031,16062,16090,16136,16188,16209,16241,16245,16256,16273,16284,16320,16356,16365,16397,16406,16426,16494,16563,16567,16578,16602,16615,16632,16636,16648,16658,16673,16692,16719,16786,16934,16941,16995,17050,17070,17094,17134,17159,17177,17298,17796,17974,18044,18371,18692,19071,19221,19458,20605,20843,21360,21398,21562,21590,21614,21743,21834,21842,21856,21897,21940,21960,22050,22247,22584,22635,22665,22710,22720,22869,22926,23158,23280,23450,23766,24316,24407],"nsmutableurlrequest":[10347],"resistance":[2905,5125,14164],"shaded":[181,7845,14188,23376],"neighbours":[13158,16246],"queued":[3913],"fractions":[22651],"onbackpressed":[14626],"compensatesensors":[23266],"bottlenecks":[11966,13890],"tank":[3871,14112],"bumpy":[21962],"multi-pass":[3758,7325,13963],"practice":[860,2066,2716,2812,4451,4658,5252,5649,9232,9318,10925,11169,11211,11748,12044,12887,13309,14595,16295,18104,21897],"ctrl+d":[11195],"terraincollider":[5990],"order":[343,470,682,833,1112,1205,1428,1535,1558,1742,1763,2003,2189,2361,2367,2475,2633,2665,2850,3397,3428,3463,3676,3707,3841,3893,3990,4006,4263,4547,4647,4704,4800,5002,5151,5208,5299,5322,5393,5430,5440,5580,5876,6398,6463,6521,6622,6653,6667,6698,6874,7329,7366,7471,7766,7790,7826,7893,7995,8163,8584,8965,9301,9530,9623,9677,9694,9860,9951,10075,10451,10776,11126,11294,11414,11480,11763,11894,12206,12504,12734,12753,12819,12886,12917,12929,13311,13449,13574,13846,13900,14198,14342,14685,14842,14887,15044,15113,15194,15233,15251,15343,15445,15520,15576,15713,15812,15897,16125,16461,16520,16716,16762,16802,17186,17329,17528,17935,18412,18607,19755,20718,20776,21352,21569,21574,21930,22126,22203,22277,22412,22571,22662,22667,22682,22876,22959,23175,23242,23292,23358,23392,23677,23984,24017,24372,24536,24716],"accepts":[6425,9934,21927,23401,24219],"prints":[197,4415,4543,4602,6974,11580,12518,12775,13421],"rescaled":[2752,16502],"bundled":[1801],"parent":[674,1409,1669,2693,2747,2765,3620,3636,4968,5160,5731,5751,6442,6562,6780,6988,7089,7589,8019,9210,9359,9507,9681,9691,9723,10291,10907,11205,12264,14062,14180,15128,15931,16558,16734,17187,22109,22133,22214,22255,22598,22649,22731,23227,23319,24396],"definitely":[12030,15230,18045,21698],"indistinguishable":[1360,6442,16162],"they're":[585,658,11836,11924,23631,24364],"fed":[2250,2266,14139],"scrollposition_y":[24949],"inputfield":[22708],"_maintex":[12026,17844,17996,18083,18234,18416,18508,18580,18779,18921,19287,19746,19811,20171,20467,20791],"succession":[7797],"yourapp_1":[24197],"opposed":[5205,5268,21790],"div":[9934,22544,23542,24453],"repath":[3836],"semitransparency":[20404],"old-fashioned":[11978],"stringparamcallback":[22515],"shader_api_ps3":[18297],"preferrably":[9704],"versions":[15,150,828,839,1352,1600,2031,3676,4331,4522,4624,5440,5610,7091,9299,9334,9385,9548,9623,10101,10201,10900,11356,11449,11780,13330,13441,13954,14010,14186,14403,14464,15039,17421,19280,21279,21434,21575,22321,22548,23135,23239,23614,23623,23808,23980,24274,24363],"premul":[20407],"meta-data":[14660],"f2":[6852,15129],"registrations":[13354],"gicache":[8250],"ccclusion":[13961],"extrusion":[19995],"counter-adjust":[22662],"decremented":[19541],"back":[170,198,436,577,656,733,826,879,1068,1247,1360,1616,1650,2250,2266,2278,2559,2702,2876,2993,3199,3802,4400,4528,5232,5288,6693,6726,6740,7605,7776,7955,9184,9374,9389,9401,9491,9520,9547,9621,9734,9764,9855,10021,10331,10414,10873,11129,11247,11350,11407,11767,13061,13292,14069,14259,14268,14351,14594,14722,14790,14799,15084,15474,15783,16421,16737,16797,17378,17404,18116,18383,18995,19701,21967,22334,23134,23231,23623,23748,23979],"request-host":[17321],"succesfully":[17318],"gradient":[7389,14044,14052,14072,14108,14291,14848,20984],"sample-based":[1324],"_someglobalvalue":[18339],"savings":[9256],"viewpos":[12093],"141f":[21826],"pointerpress":[16980,17120],"error-prone":[14441],"fov":[2128,7159,8104,10022,22870],"swapchain":[4489,4745],"quad-core":[10645],"d":[6809,10068,10369,12936,14625,15122,15525,16800,18198,18953,20488,21578,22882],"identifiers":[153],"swicthed":[17090],"shadowgun":[11868,11893,11976],"interested":[1297,4871,11136,13328,15804,15913,22864],"serializing":[16833],"masking":[365,389,2619,16246,16561,21566],"preprocess":[4483,4739],"growing":[931,22244],"shadows":[2696,3553,3751,4069,4198,4686,4762,4922,4945,5272,6856,7132,7326,8162,11147,11209,11217,11762,11865,11890,11986,13906,13985,14106,14200,15404,15455,15483,15528,15545,15560,17525,17795,18032,19238,19781,20418,21543,21857,22272],"half3":[12011,18269,19442,19727,20137,20193,20371],"ndk":[11585,14501],"windbg":[24156],"pathway":[3849,13118],"binormal":[21221],"theirs":[21279],"normalizedtime":[568],"integration":[1417,6508,7941,8165,10476,12640,14308,14327,14729,22552,23620,23735],"repeat":[5105,5532,6382,6645,6860,9265,9879,11051,14170,21897],"span":[4034,10840,21701,23538],"customers":[1002,1015,6738,9559],"dictassetbundlerefs":[10987],"jerks":[468],"conversion":[17,9187,9280,9614,9986,10416,11228,23812,23863,24219,24391],"misbehave":[23162],"eternal":[19391],"synchronized":[5005,6409,11511,13314,13446,13701,13739],"sphere":[184,3068,3673,5072,5154,5345,5440,5582,6442,6863,8295,11158,11662,13103,13133,14105,14225,14304,14750,14868,15330,19669,20784,21549,21606,21952,22114,24675],"variables":[131,234,305,318,406,639,666,6764,6961,7339,7675,7826,10033,10056,10223,10578,11837,12567,12650,12688,13639,13778,13945,14911,17189,17297,17996,18241,18336,18687,19198,20043,20395,20691,20845,22387,22740,23382,23587],"eliminate":[11747],"pausing":[4667],"plans":[1326],"kind":[606,625,742,836,1456,2128,2224,2609,2693,2748,3522,3631,3906,5151,6742,6875,6960,7778,8113,8377,10455,10856,11423,12196,12702,12818,13298,13701,13769,14923,15585,16170,17203,17516,19378,19423,21617,21790,21810,21971,22247,23156,23891],"vector's":[165,7106,15332,22892],"underneath":[1232,2131,7390,15852,23377],"lower-density":[9728],"predictively":[13178],"type-":[9543],"backup":[837,1604,9566,10538,14715,17404,22322],"addnumbers":[23832],"smoke":[3095,3716,4037,4096,6603,14017,14054,14062,14063,14155,14184,14259,14266,14302,21973],"npr":[16272],"raycast":[2078,2764,4127,4144,4956,5817,6458,11069,11637,12396,12981,13227,14125,16420,17111],"faq":[26,976,1520,2050,5078,6705,6732,6740,11471,22946,24185,24342,24513,24529,24586],"sure":[52,198,207,234,263,269,327,470,906,1071,1247,1600,1646,1905,2604,2717,2807,2977,3232,3549,4023,4362,4645,4717,4927,5167,5313,5327,6442,6521,6716,6719,7137,7942,8179,9262,9317,9464,9542,9629,9706,9745,9891,10075,10198,10303,10421,10504,10840,11173,11260,11344,11354,11515,11577,11735,11861,12496,12644,12941,13218,13439,13466,13743,14252,14343,14603,14773,14965,15196,15296,15346,15575,15663,16209,16427,16569,16762,16889,17094,17209,17272,18028,18048,18377,18384,19092,19439,19758,20784,21667,21925,22125,22191,22271,22282,22320,22836,22914,22990,23160,23355,23376,23635,23750,23769,24013,24165,24380,24557,24568,24655,24673],"_redify":[18549],"fieldtypes":[16808],"getstatic":[14569],"child":[439,675,684,1407,1510,1733,1753,1784,1797,2747,3620,3793,4968,5145,5299,6442,6779,7090,7594,9210,9363,9678,9699,10113,10291,10907,11205,12448,14076,14751,15132,15574,16446,16485,16558,16734,16794,17089,17149,18557,19380,22109,22171,22249,22590,22649,22665,22731,22945,23189,23209],"comfort":[17277],"grown":[16556],"ddms":[11336,11584],"culled":[3674,11919,13846,18388,21872],"strongly":[233,9425,10103,11589,14147],"pre-pass":[18361],"jemast":[9643],"pretty":[1915,7156,10873,10917,23894,24046],"subtly":[3532,6747,7158],"licensed":[22,3194,6715,9286,11235,22950],"arrows":[2641,7189,7390,14264,15865,21618],"invocation":[17268,19240,22520,22999],"mesh3dsimporter":[6073],"copyfileordirectory":[1980],"bounds'":[24287],"mysecretvalue":[23420],"criticial":[7759],"checkbox":[364,411,1742,2300,2605,2626,3986,4106,4822,4933,7087,7329,8126,8582,10302,11255,14964,15082,15197,16554,17062,17211,17396,18537,21644,22587,22689,23234,23728,23775,23899,24306,24581],"composite":[12042,21398,21856],"don't":[12,213,219,259,276,554,885,1209,2049,2205,2281,2595,2617,2707,2809,2969,2982,3086,3198,3397,3546,3650,3704,3909,4004,4037,4106,4190,4504,4586,4739,4756,4895,4948,5135,5646,5737,6444,6516,6698,6839,6856,6976,7594,7774,8012,8075,8112,8377,8738,8997,9268,9412,9536,9559,9621,9679,9728,9841,9852,9879,9925,9962,10020,10105,10540,10778,10852,10945,11114,11188,11454,11491,11515,11614,11837,11922,11954,11985,12229,12570,12604,12611,12920,13291,13351,13854,13907,14036,14070,14139,14580,14715,15065,15073,15218,15346,15859,16313,16382,16454,16485,17149,17196,17364,17464,17552,17685,17869,18028,18040,18073,18383,18600,18860,19097,19391,19484,19763,20143,20419,20692,21289,21354,21906,21930,22113,22191,22282,22438,22571,22760,22918,23189,23268,23754,23779,23812,23902,23993,24112,24145,24195,24214,24238,24281,24410,24563,24642,24665,24705],"specially-formatted":[23419],"document":[739,1198,7022,7999,8039,9224,9925,12949,14535,17272,19231,22430,23205,23479,23921,24461],"php":[9643,11814,17285,23449],"whole":[409,826,883,931,1355,2160,2759,4231,4674,4797,5241,5475,6509,6659,7090,7133,7159,7852,7987,9316,9700,10766,11155,11214,11939,12511,12657,12801,13155,13448,13715,13854,14272,14285,14827,14878,16165,16799,16952,17526,17981,19457,20510,21342,21701,21843,21922,21947,21952,22097,22246,22461,22722,22760,23779,24319],"multiples":[10805],"aberration":[17158],"ff476876":[24120],"centre":[184,3759,5774,10336,11205,13822,14103,14196,14234,17134,17177,22867,23050],"shadowmap":[18332,19053,20707],"removerpcsingroup":[13488],"atlasing":[7313],"org":[6721,11585,17442,22864],"extremumvalue":[5791],"colliders":[575,2139,2655,2788,2795,3178,3551,3643,3665,4128,5134,5199,5419,5438,5783,5857,6441,7988,10207,10907,11055,11797,11882,12448,13187,14032,15074,21932,21991,23275,23730,24377],"burst":[14054,14100],"default":[147,213,276,288,316,408,449,496,701,761,1064,1109,1147,1204,1396,1640,1695,1848,2036,2145,2243,2259,2311,2319,2325,2332,2339,2351,2375,2383,2391,2399,2407,2416,2423,2436,2444,2454,2466,2490,2497,2506,2514,2533,2570,2700,2829,2892,3004,3063,3181,3200,3249,3320,3338,3392,3439,3453,3524,3546,3560,3621,3734,3759,3866,3954,3989,4009,4017,4096,4113,4138,4169,4498,4573,4664,4754,4896,4919,4933,5045,5134,5209,5224,5288,5324,5401,5408,5602,5665,5690,5779,6464,6510,6592,6671,6808,6899,6951,6983,6992,7120,7391,7487,7819,8002,8192,8772,9111,9221,9237,9489,9723,9849,9967,10022,10068,10341,10410,10474,10835,10845,10873,11149,11205,11307,11477,11605,11702,11850,12244,12642,12657,12787,12801,13090,13120,13424,13448,13497,13778,13822,13854,13983,14071,14105,14204,14345,14468,14614,14689,14790,14796,15090,15385,15411,15497,15555,15600,15763,16114,16159,16367,16511,16580,16708,16958,17329,17437,17834,18060,18141,18389,18496,18666,18880,19135,19286,19408,19419,19436,19479,19548,19761,20374,20506,20807,21278,21357,21404,21417,21547,21586,21637,21747,21865,21920,21957,22021,22118,22277,22364,22548,22583,22917,22999,23006,23176,23264,23269,23379,23382,23446,23601,23633,23734,23742,23769,23814,23903,23980,23987,24107,24112,24391,24561,24656,24669,24716],"phones":[1280,9947,11868,11947,24374],"lifetimes":[12306,14155,14266,14307],"256k":[11805],"beginhoriztontal":[9112],"re-used":[587],"mimimum":[16489,17153],"shifts":[13839],"xap":[24538],"delayedcallmanager":[5945],"organise":[9270,21352],"limitations":[2022,2282,2874,3675,8148,8255,11893,11959,13938,14726,15400,16838,20460,22112,22275,22456,23796,24324],"send":[170,1127,1159,1342,1423,3513,3890,3897,4342,5864,6464,6495,7802,10030,10464,11542,13103,13297,13438,13497,13576,13715,13752,14033,14724,14799,14969,15727,16534,16706,16731,16956,16975,17074,17119,17338,17524,22542,24539],"ad-hoc":[22924],"unity_lightmapind":[12013],"scaleperbasisvector":[12019,20295],"create-":[3202,3268,5114,5219,8821,9586,9880,11424,17824],"'shader":[4398],"m_lightmapsmode":[24754],"falloff":[2559,4930,5824,11231,17007],"develop":[53,1233,7761,11602,11950,12199,17375,24046,24375,24603],"-i":[920],"colorpart":[17904],"manipulate":[837,1700,1920,3091,3713,5141,6742,11212,12685,14748,15856,17204],"eventtrigger":[16058],"gpus":[5671,10765,11181,11743,12180,13921,15459,15487,15550,19449,20845,21344,24595],"experienced":[6962,11305,22283,22349],"initialization":[234,419,1290,6956,7789,13787,22302,22412,23594,24066,24419],"'reference":[16114],"buffermesh":[11773],"integers":[179,5204,7663,7834,8401,11484,14704,15304,22738,23393],"cmd+alt+6":[23073],"behaves":[1351,2131,2582,2887,3141,5104,5531,5735,15237,16815,21574,24527],"sequenced":[15199,22092],"enddrag":[16992,17132],"illuminated":[10603,11135,11158,15444,15461,15489,18035,19240,19527,23377],"him":[3843,6675,13576,23990],"rgba16":[213,5685,11850],"facebook":[6700],"unity_no_rgbm":[18316],"wide":[931,3165,5117,6591,9180,9719,9860,10022,10416,12955,17038],"noshadow":[20426],"deemed":[17268,18044],"richness":[1360],"one-":[15116],"callstatic":[14590],"octaves":[2498],"finger":[1519,1675,9614,11613,15749,22902],"crunching":[10451],"exportassetbundles":[37,1795],"precomputed":[8170,13860,21643],"compatibility":[138,442,2005,4258,4535,4627,4698,4791,5698,9937,10405,10947,11573,14480,15398,22453,23798,23979,24046],"srgb":[5609,11228],"popularly":[2712],"drawing":[2677,5017,5474,5659,7921,8125,11062,11994,12515,13900,15009,16351,18394,19774],"passname":[18962],"geotagging":[10604],"regions":[3428,7139,11198,12796,13873,15949,15985,19669],"your":[4,28,155,197,205,220,259,265,285,288,305,310,318,324,340,361,367,394,434,468,587,603,626,639,693,741,752,821,836,931,933,980,989,995,1015,1028,1034,1043,1049,1071,1112,1145,1205,1352,1403,1460,1471,1488,1516,1533,1551,1555,1597,1618,1632,1692,1743,1755,1801,1919,2003,2018,2118,2132,2191,2284,2425,2466,2532,2597,2611,2620,2645,2665,2757,2804,2854,2870,3091,3133,3142,3185,3249,3267,3404,3428,3445,3482,3503,3505,3532,3615,3629,3633,3678,3686,3761,3766,3887,3893,3997,4030,4100,4178,4502,4584,4671,4756,4797,4814,4893,4926,4933,4991,5096,5121,5205,5215,5296,5316,5400,5417,5429,5442,5491,5512,5665,5690,5707,5735,5817,5832,6364,6375,6430,6463,6496,6581,6590,6603,6625,6661,6677,6691,6698,6701,6714,6719,6724,6728,6740,6776,6858,6940,6976,6979,7044,7081,7120,7154,7274,7316,7357,7436,7465,7533,7761,7816,7833,7909,7939,7941,7968,7980,8022,8112,8116,8204,8277,8334,8341,8421,8720,8771,8888,8996,9179,9208,9216,9233,9301,9317,9346,9357,9370,9374,9388,9400,9438,9480,9519,9547,9559,9568,9597,9630,9678,9727,9845,9852,9870,9878,9891,9950,9959,10030,10032,10051,10105,10404,10427,10442,10461,10475,10558,10616,10782,10848,10901,10925,10962,10974,11050,11117,11119,11167,11202,11211,11261,11293,11305,11356,11389,11412,11426,11493,11501,11549,11577,11605,11729,11745,11870,11945,11978,12192,12451,12558,12608,12611,12644,12700,12751,12804,12906,12934,13061,13087,13148,13155,13263,13269,13271,13285,13427,13570,13732,13763,13770,13779,13844,13878,13887,13985,13999,14007,14072,14107,14315,14334,14358,14465,14497,14505,14692,14711,14746,14787,14824,14854,14934,14956,15003,15041,15081,15097,15137,15189,15233,15387,15404,15457,15485,15564,15585,15647,15677,15757,15808,15838,15897,16135,16200,16208,16351,16431,16762,16801,17013,17024,17187,17203,17207,17237,17239,17266,17391,17470,17518,17567,17790,17795,17819,17943,18040,18053,18241,18336,18377,18428,18485,18496,18573,18860,18968,19072,19158,19206,19280,19391,19421,19538,19756,20136,20396,20510,20692,21301,21352,21372,21422,21544,21576,21581,21586,21611,21625,21636,21666,21834,21847,21862,21905,21915,21939,21949,22109,22190,22242,22268,22286,22320,22383,22528,22836,22906,22944,22978,22990,23083,23131,23134,23190,23236,23296,23299,23364,23379,23382,23398,23400,23447,23588,23607,23621,23726,23746,23760,23796,23814,23875,23893,23940,23983,23990,24024,24108,24156,24162,24181,24200,24214,24280,24318,24377,24391,24557,24565,24603,24643,24656,24671],"1000ms":[10805],"extern":[12706,12772,14503,14678,14711,22508,23846],"exhaustive":[3636],"inspector":[72,310,324,368,400,437,461,592,595,678,682,764,1053,1096,1138,1283,1340,1687,1695,1733,1753,1848,2131,2272,2362,2368,2600,2614,2626,2640,2670,2774,2820,3012,3048,3186,3265,3307,3370,3534,3590,3627,3631,3769,3901,4106,4156,4854,4861,4932,4991,5098,5164,5207,5210,5224,5406,5515,5818,6434,6443,6666,6742,6841,6859,6969,6983,7087,7329,7339,7375,7446,7465,7533,7765,7939,7984,8779,9238,9305,9343,9366,9533,9572,9578,9725,9846,9871,9881,9893,9993,10031,10050,10108,11195,11213,11292,11424,11983,12684,12820,12920,13121,13137,13757,13805,13839,13847,14110,14166,14241,14264,14281,14463,14748,14786,14866,14911,15104,15443,15595,15856,16174,16792,16953,16965,17208,17262,17515,17821,17943,18039,18373,18904,19125,19377,19457,19787,20441,20782,21374,21400,21566,21630,21644,21740,21792,21832,21841,21850,21910,21931,21939,21951,21981,21984,22104,22195,22242,22561,22606,22648,22987,23031,23234,23269,23374,23380,23446,23587,23655,24380,24705],"lying":[12481],"normal-mapped":[8008,11994,12338,17931],"bone":[340,439,1470,1643,2611,2626,5268,6661,8023,8138,9426,9486,11499,12604,12684,14835,15562,15615],"'western'":[9947],"consequences":[14958],"obliqueness":[13823],"mytex":[6644],"actual":[164,202,364,465,661,1081,1230,1471,1615,2595,3519,3619,4350,4632,4901,7475,8336,8421,8584,9612,10469,10560,10767,10872,11798,12192,12620,12940,13896,14288,14510,14697,14721,14758,15067,15221,15350,16170,16823,17102,17239,17423,17802,17866,18312,18379,19207,19283,19378,19457,19515,20184,20357,20651,22383,22737,23145,23886,24019,24382,24669],"explodes":[14118],"infantry":[3871],"itunes":[4603,10429,10556],"iphones":[23156],"namevaluecollection":[24248],"demanded":[13284],"autocompletion":[23738],"obscure":[5396],"loudness":[1320,1458],"accordingly":[465,1459,2122,2582,5211,7186,7984,9732,10336,11807,11870,13085,22018,22689],"instantiate":[67,329,3969,5204,6926,7238,9677,9934,10106,10517,10885,11302,11639,12225,12464,13456,13570,13741,14125,14564,16794,17253,18503,21779,22401,22838],"preservation":[10928],"differ":[693,1754,5498,7313,10558,13722,15938,16162,16259,19067,19513,21610,22097],"fields":[151,329,685,1760,1783,3278,5205,7448,7594,12596,14748,15856,16823,19142,22657,23283,23392,24661],"interchangeably":[17942],"annotationmanager":[6097],"pbs":[21571,21573,21582],"defines":[1150,1736,2122,2160,2191,2466,2943,3161,3203,3333,3538,3988,4010,4130,4146,5206,5616,5774,5829,6641,6969,7446,7975,8001,8099,8401,8693,8776,9911,10477,11423,11535,12910,14360,14510,15958,15993,16151,16590,17013,17103,17275,17516,17692,17701,17710,17727,17778,17834,18286,18666,18990,19047,19126,19278,19385,19735,20021,20843,21419,21670,21987,22139,22220,22572,22721,23360,24345,24518,24530],"ferry":[13466],"upward-pointing":[7390],"'out":[24287],"_fade":[20933],"begins":[1096,2006,2710,3778,6961,7911,11344,13279,14304,16524,21636,23281],"swaps":[9612],"proportional":[5371,15456,15484],"incredibly":[483,13732,14766],"special":[52,394,653,694,1064,1096,1283,2139,2203,2633,3007,3226,3837,4909,5002,5096,5417,5459,5767,6356,6540,6606,6851,6976,7369,8112,8159,8347,9243,10208,10355,10923,11249,11449,12602,13183,14007,14545,14878,16459,16578,17186,17551,17557,17912,18376,18391,18553,18692,19036,19084,19458,19524,19771,20419,20874,21351,21575,21625,21930,21952,21965,22026,22522,22845,23379,23393,23452,24112,24237,24605],"firework":[14164],"zwrite":[18128,18377,18392,19000,19674],"speedier":[2604],"criteria":[7316],"devkit":[11857],"ultimately":[6708,8306,9184,21846],"ingored":[1929],"voices":[2426,2473,14998],"compliment":[2449],"sinf":[1270],"morph-targets":[3652],"merge-patterns":[21309],"overrideexample":[14615],"adaptive":[4145,17095],"iscrollhandler":[21764],"multiplatform":[14707,20908],"onnetworkloadedlevel":[13514],"reflects":[2346,2357,2361,2367,6667,18719,21562],"brokenscreen":[23493],"sn":[23403],"sparsetexture":[6007,21346],"256x128":[3209],"you're":[198,269,860,998,1068,1735,1759,2870,3255,3981,4483,4739,5249,5684,6719,7129,7419,7908,8492,9018,9883,10137,10444,11589,11745,12041,12457,12537,12636,12930,13871,13892,15225,15581,17203,17391,18252,18311,18394,18565,19073,19292,20133,20454,21429,22200,24077,24140,24202,24214,24297,24308,24589,24648,24671],"picky":[19089],"accidentally":[5065,10538,12652],"audience":[2118],"money":[942,15249],"dpi'":[16115],"thresholds":[1740,1760,3619,15950],"setfloat":[413,13014],"folder":[34,208,279,589,698,752,822,837,1051,1205,1491,1543,1558,1613,1685,1795,1860,1979,2047,2601,3179,3185,3445,3550,3636,3766,4090,4826,5259,5442,5518,6364,6508,6858,6948,7222,7438,7471,7705,7766,7980,8172,8821,9216,9324,9355,9370,9374,9388,9400,9456,9490,9519,9547,9559,9630,9878,9959,10068,10344,10471,10501,10922,11293,11314,12918,13878,14454,14469,14506,14689,14715,14810,14851,14903,15098,15196,15343,15477,15511,17187,17347,18498,20820,21288,21351,21437,21656,21666,21924,22049,22191,22329,22462,22551,22975,23310,23449,23631,23746,23764,23819,24134,24162,24197,24280,24318,24365,24380,24391,24556,24570,24669],"use-cases":[1198],"sits":[17362],"handles":[694,5309,6590,7368,7451,9180,9725,12541,13094,13289,13426,13429,14244,14906,15858,16177,16742,20068,21403,21414,21906,22648,22681,23134,24274],"alignment":[3352,3386,5478,9679,9711,15936,16454,16485,17037,17149,22719,23266,24622],"underscore":[19149],"gen":[10661,11606],"palms":[22188],"30hz":[4336,4620],"consistent":[3503,4050,5397,11683,13292,14204,14836,15456,15484,17640,21574],"containers":[3241,8113,8718,10949,15396],"containerelement":[24438],"-p":[17438,21297],"3m":[13953],"traveling":[12882],"m_icon":[8054,24812],"methodname":[6508,14727],"-buildwindowsplayer":[6505],"volume-filling":[14302],"interreflections":[5042],"sm3":[15542],"eight":[2272,5102,5431,7001,13448],"makehuman":[1635,23364],"navmeshobstacle":[6028],"grayed":[2547,2769,5616],"sensor":[10603,23266],"interpret":[3503,21352],"forward":[166,427,1755,1850,2122,2170,2688,2977,2993,3582,4199,4687,4763,4930,4939,5780,6425,6775,7190,7325,7784,7847,7968,8086,8178,9201,10176,10291,11076,11132,11177,11755,12250,12607,13003,13293,13721,13908,14240,14991,15084,15406,15457,15485,15512,15543,15600,15865,16999,17521,17795,18277,18354,18424,19050,19230,19439,19588,20068,20138,20166,20352,20729,21993,22275,22879,23374,23702],"integrate":[1326,10476,12751,15217,23314,23632],"ilayoutcontroller":[22618],"gameobjects":[149,303,821,1063,2064,3241,3592,3617,3675,4057,5121,6741,6925,6940,6985,7086,8039,8109,9210,10032,10105,11047,11195,11452,11527,12581,12820,13512,14036,14745,15838,16793,21625,21642,21772,21984,22110,23209,23268,23398,23816],"compared":[181,739,2277,3455,3662,7133,8156,9855,10587,11155,11749,11948,13445,13712,16083,16246,18043,18057,19545,22727,23609,23894,24540],"1e-5f":[13009],"cap":[10906,12447,14832,22156],"ts":[13185],"blown":[5820,14147,14306],"'add":[1161,1407],"controller1":[12689],"welcome":[6738,15640,22265],"combinations":[518,5159,5737,6466,8113,8174,8776,13988,16461,16505,18951,21991,23290],"relationship":[1401,6547,7141,10032,11423,13284,16158,17199,17514,17788,21980,21983,22109,23268],"did":[580,4061,5247,8737,10952,11095,17269,17912,19280,21987],"unityeditoriphone":[22930],"bugs":[195,231,10459,11955,12653,23979,24563],"lightmapsettings":[5993,24750],"meets":[5513,22320],"_maxiter":[21048],"sake":[1795,7403,14597],"cull":[2151,2713,11744,12796,13862,13931,18117,18386,18994,19452,19564,19979],"method":[147,289,448,755,1290,1798,1897,2219,2280,2621,3570,6508,6981,9256,9612,9681,9946,10179,10291,10343,10422,11146,11260,11354,11456,12620,13075,13171,13309,13392,13716,13772,14535,14711,15139,15335,15760,15944,15980,16501,17038,17268,21408,21569,21575,21613,22325,22391,22725,23159,23423,24443,24642,24708],"randvec":[15328],"heap8":[23863],"x1300":[8316,15459,15487,16205],"splat":[16285,21859,21905],"rubbery":[21613],"any":[75,158,179,215,243,265,289,316,327,394,436,468,591,617,629,670,710,742,836,1002,1017,1029,1049,1112,1128,1156,1203,1339,1456,1488,1533,1577,1602,1614,1633,1786,1790,1848,2003,2016,2076,2238,2272,2362,2368,2421,2578,2642,2665,2750,2803,2847,2874,3025,3095,3133,3143,3188,3264,3293,3348,3380,3430,3503,3518,3546,3579,3620,3636,3716,3752,3776,3893,4002,4045,4088,4119,4141,4172,4544,4618,4701,4775,4797,4813,4843,4882,4958,5121,5205,5269,5344,5365,5416,5513,5680,5702,5753,5870,6442,6495,6591,6647,6679,6712,6742,6849,6858,6868,6940,6981,7082,7316,7382,7446,7465,7766,7790,7899,7941,8024,8118,8158,8170,8303,8336,8376,8727,8815,8934,9113,9184,9210,9336,9461,9517,9542,9617,9684,9705,9743,9863,9934,9959,10033,10102,10166,10292,10352,10427,10453,10849,10872,10922,10979,11071,11135,11152,11193,11212,11286,11349,11401,11412,11424,11483,11544,11606,11761,11896,12213,12542,12600,12611,12650,12734,12934,12962,13140,13153,13158,13218,13289,13330,13441,13448,13497,13628,13713,13736,13769,13777,13844,13885,13889,13981,14013,14036,14204,14236,14304,14311,14330,14369,14464,14495,14563,14681,14748,14782,14829,14868,14902,15005,15084,15098,15169,15189,15345,15467,15528,15624,15672,15677,15775,15842,15893,15905,16159,16285,16397,16420,16461,16495,16537,16555,16579,16637,17071,17093,17187,17203,17239,17259,17268,17387,17470,17526,17550,17639,17685,17863,17939,18035,18073,18254,18428,18485,18503,18860,18943,18968,19016,19157,19238,19382,19421,19737,19758,20019,20356,20459,20692,20780,21137,21290,21344,21352,21386,21401,21420,21548,21617,21656,21772,21926,21939,21951,21969,21981,21984,22105,22205,22244,22292,22370,22544,22564,22583,22651,22677,22741,22867,22895,22918,22949,22987,23083,23165,23188,23209,23268,23312,23392,23418,23449,23588,23636,23731,23754,23779,23806,23863,23878,23895,24017,24328],"post-release":[28],"define":[179,1128,1212,1336,1403,2003,2122,2621,2872,3091,3204,3365,3505,3624,4132,4148,4210,4522,4625,4696,4773,4789,5200,5206,5392,5596,5753,6442,6619,6635,6962,7939,8462,8597,8773,9020,10033,10836,11199,11211,11294,11452,11529,11807,12876,13157,13460,13843,14023,14244,14288,14363,14506,14694,14711,14755,17464,17567,17863,17986,18496,18684,18860,18949,18985,19125,19230,19382,19738,20229,20356,20556,20826,21378,21428,21619,21772,21981,22661,22686,22872,22999,23194,23361,23393,24327,24530,24590],"choir":[2252,2268],"synchronizing":[1323,13314,13448,13565],"experimenting":[3892,12457],"more":[54,168,187,223,283,342,362,386,465,606,632,690,745,918,959,1038,1063,1092,1123,1128,1198,1329,1462,1607,1614,1705,1764,1962,2005,2051,2118,2128,2134,2141,2154,2189,2220,2224,2281,2346,2357,2386,2394,2401,2419,2431,2439,2447,2456,2559,2626,2630,2698,2756,2770,2812,3055,3121,3147,3234,3244,3269,3334,3381,3408,3458,3501,3519,3532,3567,3589,3592,3636,3665,3711,3758,3791,3843,3870,3899,3996,4017,4038,4100,4114,4142,4191,4522,4654,4718,4778,4854,4859,4954,5008,5124,5268,5371,5397,5497,5526,5678,5700,5739,5782,5832,6442,6562,6634,6714,6760,6839,6875,6931,6976,6981,7013,7113,7139,7328,7384,7449,7506,7759,7776,7833,7909,7982,8094,8114,8116,8168,8279,8306,8343,8773,8997,9183,9211,9233,9310,9370,9383,9545,9569,9612,9706,9725,9934,9952,9977,10021,10032,10054,10105,10343,10407,10447,10565,10768,10818,10903,10956,11139,11143,11163,11211,11224,11267,11299,11345,11403,11441,11501,11569,11629,11733,11893,11950,11989,12197,12454,12542,12602,12628,12654,12749,12802,12818,12878,12934,13113,13127,13141,13148,13155,13213,13274,13284,13331,13497,13565,13699,13719,13733,13771,13793,13822,13843,13889,14035,14047,14054,14076,14100,14147,14195,14220,14252,14281,14309,14328,14441,14514,14753,14786,14846,14878,14904,14957,15005,15067,15078,15087,15107,15194,15245,15400,15409,15450,15462,15487,15514,15555,15583,15617,15693,15737,15818,15899,15952,15986,16007,16026,16036,16066,16134,16189,16246,16283,16319,16357,16384,16442,16464,16495,16520,16554,16572,16606,16793,17010,17088,17094,17167,17205,17393,17446,17450,17456,17460,17465,17500,17504,17508,17512,17532,17541,17546,17554,17558,17564,17567,17610,17615,17620,17624,17628,17632,17636,17639,17669,17673,17677,17681,17689,17694,17698,17703,17707,17712,17716,17720,17724,17729,17751,17780,17784,17795,17835,17924,18040,18104,18336,18394,18547,18684,18696,18941,19073,19220,19391,19433,19457,19589,19738,19759,19945,20134,20402,20506,20786,21346,21356,21398,21420,21552,21579,21582,21603,21632,21640,21677,21697,21772,21836,21859,21939,21949,21957,21962,21982,21987,22021,22099,22123,22162,22197,22242,22282,22404,22546,22567,22682,22712,22733,22743,22879,22944,22994,23155,23173,23209,23276,23359,23376,23436,23652,23737,23912,23988,24010,24046,24107,24116,24168,24375,24391,24527,24540,24601,24662],"island":[8113,8206,22520],"cross":[2615,3000,5396,5586,6653,6662,11750,14516,14700,15474,15509,16382,17260,21268,22900],"subjects":[319,23988],"logicaland":[18200],"'louder'":[2577],"stenciloperation":[19556],"opt":[17408],"underarms":[14831],"mini":[10411,10737,11606,22409,24013],"patterns":[1324,6866,18044,21835,21844,21949],"androidsdk":[22299],"srcblend":[19155],"boo":[10404,12211,15393],"re-added":[902,15094],"curious":[887],"amazing":[6977,11211,15230],"integer":[409,666,3208,4395,4522,6557,7714,8599,9605,11484,13451,15241,16952,19154,19541,19771,23189,23393,23863],"xsi":[5307],"io":[7568,10544,14574,22059,24251],"tooltips":[6832],"samplers":[6642,18343],"carbon":[14676],"disproportionately":[7141],"modulates":[2252,2268,3578],"hoping":[23895],"-b":[22888],"params":[7002,22409,23489,23906,24403],"chargeback":[941],"report":[198,231,285,4267,4551,4602,4708,4804,7797,10425,10460,10575,10962,11683,12698,13293,13667,14496,14956,16128,16794,17362,22268,22294,24143],"aniso":[3771,5111,5538,6644,11823,21505],"alias":[4431,4559],"hemisphere":[14225,14304],"realtime":[1148,4200,4688,4764,4944,4987,5099,7153,8004,8192,11147,11215,11756,11865,12042,13934,15043,15408,15440,15461,15489,15545,15635,16658,16673,19250,20146],"m_tagstring":[8053,24811],"operational":[10114,24159],"thousands":[12343,13975,21912],"getstyle":[8880],"brackets":[1096,8141,18866,19154,23609],"fgimage":[9050],"demonstrate":[6692,8965,12282,12611,16138,17050,17938],"col":[430],"geteffectdata":[1260],"simpler":[442,3617,3711,5314,6887,8205,9686,9914,11747,12201,13306,14278,14878,15909,15938,16224,16329,17001,17813,18548,19218],"tx_id":[22326],"tabs":[863,1001,3118,7082,12647,23091],"usage":[170,1092,1145,1447,2047,2131,2363,2369,3548,4255,4545,4644,4702,4776,5206,6522,6683,7776,8523,9200,9993,10482,11028,11555,12544,12801,13449,13753,14075,14111,14323,14495,15000,15002,15041,15093,15447,17267,17513,21290,21348,21851,22430,22952,23242,24453],"steeper":[16165],"640p":[4328,4618],"threads":[9651,11840,23805,23895],"gameobject":[45,327,395,431,434,480,681,1055,1705,1799,2191,2225,2425,2599,2727,2737,2759,2776,3116,3141,3236,3240,3370,3425,3476,3534,3590,3613,3620,3673,3684,3745,3776,3893,4041,5115,5121,5205,5490,5731,5745,5853,5867,5879,6457,6742,6926,6960,6983,7087,7795,7804,7899,8041,8086,8110,8373,8885,9208,9360,9506,9731,9763,9852,9897,10018,10032,10113,11057,11212,11276,11292,11527,11631,12205,13089,13249,13512,13628,13732,13789,14008,14071,14105,14166,14281,14725,14748,14781,14868,15218,15573,15605,15842,15867,16391,16563,16615,16794,16934,17253,17515,20784,21387,21644,21772,21939,21951,21981,21984,22101,22193,22242,22635,22665,23021,23175,23208,23268,23373,23382,24219,24384,24799],"uvbumpmap":[12003,19842],"m_localposition":[8068,24842],"problematic":[4002,22355],"playerenergy":[9051],"panes":[4864],"low-quality":[5632,5681,5703],"unitygetaudioeffectdefinitions":[1232],"dumptype":[24154],"guaranteeing":[13292],"gfxdevicerenderer":[12711],"scene1":[1849,1976,11375,16798],"potioningredients":[7548],"_sintime":[20723],"activate":[6363,7091,9781,9951,10053,10839,11402,11407,13876,14774,14819,21383,21629,22107,22370,22392,22970,23213,24036],"environment's":[5160],"html-style":[3395],"effector":[2227,2661,2862,3043,4157,4831,4850,5418],"navmeshdata":[6051],"degamma":[11249],"rocky":[21978],"extends":[3159,5513,5773,7440,7473,7543,11530,14620,18485,22897],"particle":[309,654,3067,3609,3629,3685,4029,4065,4103,4956,5719,5856,6602,7333,9574,9983,10113,10448,11175,11446,11631,11785,11880,12282,12478,14012,14014,14016,14030,14041,14052,14056,14064,14100,14152,14166,14185,14191,14207,14246,14254,14261,14278,14280,14301,19528,19763,21954,21973,22126,22278],"importer's":[444],"measurement":[14952,23728],"forming":[343],"enemyai":[12371],"uri":[170,6380],"emission+ambient+reflections+lightmaps":[15506],"platform's":[4174,5627],"sounds":[323,1110,1358,1456,2252,2268,2278,2308,2329,2421,2449,2459,6581,9113,9984,10032,10942,21627,22093,22915],"transmitted":[3979,4145,13448,15137],"gamecenter":[13638],"logwarning":[6677],"flanger":[2253,2269],"processor-intensive":[6442,11138,12495],"bonjourtest":[14743],"icon_256x256":[9637],"weights":[484,1665,1700,3652,4952,5054,5285,13085,16591,23264],"editorutility":[1823,1975,7444,10492,21465],"employees":[1007],"software-based":[22396],"fillwithred":[6628],"relevant":[639,1315,2367,5431,6858,7942,10135,12051,12633,13301,13421,13453,13852,13914,14843,15345,17943,21586,22205,23276],"classname":[6508],"finder":[823,3867,5488,9961,14862,21288],"low-detail":[3617],"smoothly":[462,470,2632,3830,7366,8885,11944,12194,15580,17212,22253],"#00ff00ff":[21727],"symmetrically":[13822],"isintransition":[9825],"phase":[404,2245,2261,5002,7790,8306,10921,11622,14264,17187],"ugly":[17879],"updatecloth":[15023],"avd":[4398],"silently":[2282,10071,15001,17373],"fftanalyzer":[1312],"platform":[53,269,603,1203,1509,1610,2015,2285,2602,2696,3199,4157,4172,4533,4625,4696,4773,4789,4813,4894,4933,5626,5665,5690,7129,8335,9267,9612,10014,10405,10960,11122,11179,11338,11578,11608,11808,11959,11986,12606,12644,12733,12781,12927,13120,13132,13937,14357,14464,14510,14687,14709,15196,15404,15470,15665,15677,15775,17943,18271,18287,19064,19284,20454,21541,21656,21666,21810,21967,22258,22486,23126,23266,23762,23809,23899,24044,24165,24194,24214,24237,24278,24344,24363,24374,24425,24514,24532,24538,24557,24590,24605,24671],"procedure":[3893,6360,6543,9498,11408,13301,13563,13573,13734,13771,17413,21299,22416],"neither":[648,2074,4434,4562,8004,11175,11198,13315,13896,16314,18048,18940,19241,21993,23889,23895,23911,24370],"eclipseplugin":[1573],"anticipation":[13028],"part":[166,170,352,360,399,410,462,518,821,836,1159,1602,1633,2026,2128,2213,2632,3244,3269,3553,3629,3633,3800,3846,3874,4923,5149,5500,5671,6412,6684,6742,6856,7141,7308,7942,8058,8099,9615,9846,10043,10201,10425,10429,10854,11055,11211,11286,11353,11585,11893,11966,11983,12312,12490,12685,12748,13127,13763,13847,13922,14232,14846,15092,15596,16459,16558,16646,16699,16794,16948,17187,17975,18497,19457,21352,21403,21555,21613,21988,22608,22677,22723,22760,23006,23220,23461,24001,24398,24527,24660],"m_staticbatchroot":[24899],"playoneshot":[14998],"allocations":[10830,12553,15044,16825,22436,22741],"editorapplication":[6508,15625],"onpointerclick":[21758],"miraculously":[12456],"where":[84,185,236,253,271,314,351,394,456,469,595,637,670,684,933,1051,1109,1153,1247,1342,1403,1460,1488,1559,1607,1736,1762,2020,2076,2225,2238,2282,2345,2356,2497,2549,2578,2617,2679,2747,2762,2827,2890,3032,3133,3165,3206,3311,3397,3492,3505,3619,3663,3740,3759,3830,3866,3985,4352,4634,4843,4960,4968,5004,5164,5206,5268,5334,5379,5417,5501,5564,5774,5806,5838,6443,6515,6694,6744,6839,6860,6876,7091,7141,7158,7287,7343,7400,7774,7776,7811,7906,7952,8017,8033,8085,8099,8402,8738,8776,8890,9018,9183,9248,9333,9544,9575,9641,9675,9725,9934,9962,10027,10080,10111,10336,10453,10460,10502,11069,11136,11197,11226,11305,11345,11454,11756,11917,11957,12180,12204,12453,12517,12698,12777,12797,12878,12916,12931,12969,13136,13157,13209,13227,13273,13293,13426,13438,13448,13565,13615,13717,13749,13773,13819,13822,13855,13888,14071,14125,14222,14252,14264,14278,14304,14469,14564,14810,14831,14880,15003,15060,15086,15100,15196,15234,15335,15349,15444,15562,15585,15600,15788,15906,15938,15975,16007,16165,16189,16246,16313,16331,16365,16414,16452,16716,16754,16794,17038,17076,17139,17181,17187,17275,17384,17524,17994,18080,18316,18369,18505,18603,18678,18692,18860,19057,19071,19230,19309,19391,19496,19513,19773,20209,20395,20847,21342,21368,21372,21422,21557,21575,21614,21617,21656,21715,21763,21809,21900,21929,21947,21967,22023,22097,22170,22243,22383,22548,22617,22662,22704,22735,22909,22972,23006,23189,23236,23269,23373,23447,23609,23704,24013,24147,24184,24309,24357],"unity_proj_coord":[18324],"unscaled":[2203,21745],"flame's":[14108],"iii":[15908],"gl_point":[19116],"mangling":[12781,14502,14677,14716],"introductory":[15481],"hosts":[13328,13438,17438],"left":[156,187,215,314,326,535,676,684,1162,1312,1426,1480,1677,1699,1734,1755,2076,2185,2590,2622,2630,2796,2993,3287,3358,3418,3487,4106,4182,4498,4574,4973,5330,5405,5430,5478,5616,6653,6845,6876,6947,7365,7834,7958,8086,8208,9256,9426,9598,9686,9698,9725,10041,10431,10830,10873,11228,11344,11454,11563,12358,12454,12608,12647,12681,12959,13137,13839,14073,14108,14283,14776,14836,14864,15098,15296,15400,15727,15865,16179,16243,16505,16646,16700,16735,16949,17260,17396,18078,18566,18880,20718,21401,21768,21827,21842,21973,22249,22446,22558,22650,22868,22902,23734,24322,24370,24383],"experiment":[2735,9310,10033,10848,11758,13093,14790,15388,22083,22866,23296],"dependencies":[1797,1861,2063,9354,9962,10490,10946,10968,11296,11348,15396,18553,22440,23463],"fact":[580,901,5658,6442,6898,9183,12378,14495,16060,16319,18037,18347,18383,21579,21846,22637,22817,23464],"contributers":[6737],"succeeds":[3642,6661],"windows80":[24145],"mysignedassembly":[23412],"gl_eyeplanet":[19119],"stylize":[8772],"seen":[456,1154,1378,1845,2192,2284,3735,4927,5277,5396,6874,7133,7159,7308,7776,9260,9855,11119,11155,11454,11903,12496,12657,12917,13439,13451,13839,13841,14125,15000,15237,16286,16321,17374,22413,22621,22866,23251,23894],"materialpropertydrawer":[18552,19159],"managedassetbundleexample":[11030],"delegate":[10399,10414,15625,22499,22987,24073,24619],"knows":[1283,1355,1613,3867,6428,8890,13124,13722,22740],"inline":[16823,20286,21743],"visual":[387,603,606,625,639,893,2136,2224,2449,3426,4458,4716,4960,5285,5578,6587,6615,7158,7389,8096,8269,9184,9569,12182,12684,12748,13433,13924,14073,14337,14495,14888,16172,16284,16320,16520,16755,17239,17526,18044,18104,18554,19482,21605,21924,22266,22682,22710,22715,22922,23095,23134,23292,23313,23735,24015,24130,24163,24188,24214,24304,24311,24328,24361,24374,24534,24553,24570,24593,24601,24642,24652,24671,24706],"right-dragging":[7357],"jungles":[5764],"architectures":[6622,11749,12185,13300,14366,14692,20822],"brace":[18713,19177],"platform-tools":[197,208,1072,11334,22299],"getcompatiblewithplatform":[4814],"resumed":[6883],"pref's":[1492],"getcurrentanimatorstateinfo":[9826],"rim":[12311,13919,19845,20445],"a5":[10609],"defaultpackerpolicysample":[21451],"noisy":[11670,11749,16347,16661,16681,21835],"buildingassetbundles":[1846],"hitches":[12225],"sweep":[6653,21842],"batchmode":[53],"intelligently":[9249,13155,13271],"better_shading":[18942],"smallestscreensize":[14635,22313],"recorded":[684,938,1318,4545,4644,4702,4776,12358,15084,22083],"loadallassetrepresentationsatpath":[764,21470],"structural":[11978],"backgrounds":[3426,16080],"obb":[240],"emmisive":[17842,18454,18919,19355],"prerequisite":[10427],"digram":[9256],"foo_on":[18943],"glslprogram":[18683],"deltatime":[2107,7190,7780,7909,9125,10451,11620,12271,13006,17230,22006],"prefix":[1284,7276,8075,12689,13503,14509,14697],"sway":[603],"sometimes":[236,364,434,573,693,1103,1843,1968,2076,3001,4098,4263,4547,4647,4704,4800,4948,5397,6458,6675,6680,6763,7114,7152,7330,7370,7786,8099,9543,9562,9692,10053,10223,10417,10484,10928,11302,11731,11858,11978,12226,12917,12955,13182,13453,13773,13844,14032,14874,14958,15245,15617,16164,17207,17348,18044,18496,19065,19738,20134,21398,21655,21847,22026,22368,22429,22567,22833,22899,22933,24015,24147],"confused":[4156],"remainder":[1324,2006,16687],"unnoticed":[24012],"schema":[17275],"decompositions":[12051],"game's":[2118,3887,4498,4574,9617,10343,13732,13887,17943,21971,21993,23145],"streamlined":[1448,9981],"non-webplayer":[21541],"commonstate":[19734],"vertex-lighting-based":[11903],"drag":[480,592,637,682,823,1055,1156,1289,1399,1595,1686,1695,1737,1763,1799,2236,2284,2601,2641,2977,3012,3142,3205,3609,3794,3909,4030,4156,4264,4548,4648,4705,4801,4840,4926,5038,5118,5125,5181,5210,5415,6770,6862,6981,7276,7345,7436,9208,9307,9362,9365,9375,9390,9402,9492,9521,9549,9577,9677,9846,9874,9886,9978,10033,10133,11345,11424,12260,14749,14783,14903,15100,15192,15845,15872,16537,16724,16981,17121,17205,17219,20809,21390,21403,21759,21790,22106,22253,22373,22638,22695,23657,24377],"explosion":[1365,3105,3726,4058,5202,5283,5854,6464,10165,11130,12408,14099,14164,14220,14252,21973],"rearrange":[15194],"installers":[10086],"initplugin":[7012,9934,23180,23522,23910,24428],"align":[14771,17212,20784,22233,23024],"cacti":[22156],"eighty":[2005,11435],"pvrtc_rgb2":[1813],"targetpath":[18563],"enablegoogleanalytics":[24402],"referencevalue":[19544],"microsoft's":[17800,18329,19090,24214,24326,24538],"meet":[5282,8382,8888,12457,13464,21558,23131],"misinterpret":[1615],"border-width":[23558],"seven":[23281],"checbkoxes":[4814],"good":[366,825,860,941,1064,1186,1315,1471,2284,2471,2716,2795,3133,3585,3611,3771,3849,4096,4199,4658,4687,4763,5111,5252,5285,5328,5538,5730,6443,6709,6727,6791,6866,6949,6988,7137,7312,7438,9189,9240,9318,9495,9619,9857,10412,10538,10925,11156,11199,11239,11345,11748,11870,11955,11978,12199,12456,12520,12604,12801,13085,13090,13120,13267,13438,13770,13844,13887,14073,14107,14204,14736,14844,15350,15445,15537,15599,16027,16295,16579,17201,17525,17558,17796,17837,18089,18375,19437,19513,19783,20605,20782,21458,21613,21912,22083,22444,22639,22949,23134,23190,24019],"instructing":[15013],"buildsettings":[5978],"lower-case":[1850],"backtrace":[11597],"sidewalks":[12888],"coprocessing":[10779],"documentation":[750,764,1109,1794,1968,2605,3567,3815,6714,7223,7531,7816,9189,9438,10083,10477,10580,10901,11544,11696,11814,11987,12785,13153,13571,13980,14013,14311,14330,15710,17822,17932,19381,19458,21553,23687],"serializedversion":[1866],"text-align":[23531],"dependent":[1941,2826,2929,3125,3450,4210,4533,4625,4696,4773,4789,4879,8997,9612,9962,10872,14357,14510,15461,15489,15516,16014,16686,20138,21570,22093,22662],"bmp":[5646],"based'":[4398],"solved":[13180,14339,18548,22422],"sendmessage":[11527,13514,23175,23418,23817,24219,24449],"concern":[5298,16801,22833],"thickness":[16272,21868],"suspend":[4341,4624,7923],"systematic":[3707],"textured":[3196,3593,8209,9233,9590,11436,14870,17998,23694],"screen":[211,228,287,865,1519,1556,2097,2121,2665,2740,3055,3098,3148,3380,3407,3619,3678,3719,3802,4066,4169,4498,4574,4664,4754,4963,5288,5324,5610,6414,6437,6557,6805,6865,6991,7159,7274,7308,7485,7919,8401,8693,8890,9020,9612,9652,9719,9740,9863,10446,10565,10589,11147,11556,11604,11612,11713,11745,11887,12453,12657,12969,13484,13900,14196,14750,14880,15093,15221,15335,15447,15473,15508,15671,15749,15815,15944,15980,16014,16084,16094,16351,16608,16647,16657,16672,17001,17139,17163,17181,17378,17524,17901,18055,18180,18371,18603,18692,19038,19071,19283,19433,19899,20447,20510,20706,20784,21967,22042,22448,22671,22868,22914,23134,23266,24099,24453,24549,24571,24592,24612,24671,24675],"customising":[10340],"non-compressed":[2286],"utilized":[21988],"shares":[3385,5477,7328,16386],"high-frequency":[2516,2535,12041],"getmethodid":[14538],"pipe":[14066],"stays":[6457,7331,12207,12804,19449,19582],"audiomixereffectcontroller":[6055],"worldparticlecollider":[5929],"roll":[2582,5354,5785,14213],"animationcurve":[7339],"state":[309,350,358,392,406,595,602,606,617,625,654,698,1248,1335,2156,2194,2224,2632,3234,3338,3893,5405,5753,6458,6556,6834,7090,7778,7813,7906,8090,8172,8582,8775,9673,9741,10801,11493,11520,11620,11753,12484,12611,12649,12964,13219,13273,13289,13448,13464,13501,13563,13628,13639,13700,13732,13772,14184,14283,14304,15013,15060,15219,16744,16757,17074,17085,17216,17821,17946,18137,18650,18968,19028,19457,19564,19735,21386,21616,21624,21633,22101,22433,22558,23208,23649,24318,24675],"cpu-based":[14896],"lightwave3d":[9456],"sand":[5658],"restored":[901],"scrubbed":[14283],"maintexture":[3780],"click-drag":[15844,15872],"layer-":[9221,21792],"delayed":[2372,13448,13717,15028,17095],"heard":[1112,1353,1421,1458],"internalregistereffectdefinition":[1218],"instance's":[24383],"temporarycachepath":[10539,14582],"qualitysettings":[5907,11247],"numerous":[394,1112,11177,14186,15343],"plenty":[2066,9111,13451,17816,19221],"associated":[181,825,1231,1861,2448,2628,2633,7942,8124,12887,13361,15095,17526,18503,21619,21629,21793,23392,23623],"listing":[1279,3762,8082,22864],"arena-camera":[5113],"intersects":[4127,4144,4919,15474],"horizontallt":[16619],"elbow":[5282],"dstfactora":[18184],"adaption":[15909,17095],"myuser":[13759],"plugins-":[9412,14506],"-nolegacy":[2039],"variablename":[18075,20410,20655],"fastest":[13847,13876,13916,14252,15559,15910,23774,23897,24572],"win32":[6502],"triggering":[2650,2781,3668,5349,6961,12225,22622,24099],"'built-in":[18547],"modify":[78,318,720,752,1159,1968,2072,2360,2366,2586,2806,3370,3509,3550,3985,4438,4739,4926,5209,5296,5796,6714,6940,7942,7994,8300,8815,9357,9376,9391,9403,9542,9550,9643,9783,9925,10032,10108,11065,12612,12820,13426,13441,13852,13923,14138,14184,14461,14644,14786,14866,15028,15350,15477,15511,15851,15892,16558,17082,17207,18659,19588,19996,20416,20841,21677,22104,22135,22216,22731,23259,24318,24572],"reused":[179,3503,11454,14110,14781],"postprocessorder":[2003],"unity_sample_tex2d_sampler":[18351],"encodefloatrg":[18274],"windowsphone81":[14480],"gettotalmemory":[12545],"behavior":[214,364,516,610,2296,2426,2475,2801,2829,2870,3063,3453,3866,5596,5779,6463,6592,6742,6940,7487,7778,8597,9684,9691,12888,12969,13195,13724,13981,16958,17082,19290,20928,22915,23209,23900,24128,24410],"unzipped":[1555],"conversely":[2464,10022,10848,13719],"4mb":[5204],"backfaces":[18402],"file":[2,47,201,231,244,310,324,368,434,478,585,771,823,839,1051,1108,1205,1456,1488,1533,1557,1604,1613,1618,1638,1694,1825,1852,1979,2008,2160,2272,2562,2609,3121,3141,3185,3503,3634,3766,4178,4536,4628,4671,4778,4792,4814,5211,5220,5280,5442,5488,5513,5876,6385,6515,6625,6712,6949,6979,6997,7231,7677,7773,7942,7970,7981,8039,9213,9246,9318,9352,9365,9374,9388,9400,9444,9481,9519,9547,9612,9643,9925,9965,10036,10434,10473,10501,10575,10835,10928,10977,11286,11314,11354,11412,11586,11812,12182,12299,12636,12644,12696,12918,13438,13782,14343,14406,14465,14496,14513,14697,14711,14783,14806,14850,14902,15068,15153,15191,15341,15477,15511,15663,15803,16213,16434,16795,17189,17208,17266,17421,17859,17984,18251,18370,18547,18617,19126,19376,20134,20603,20692,20782,21080,21279,21360,21383,21413,21655,21670,21895,21956,21961,22063,22095,22331,22441,22535,22912,22972,23281,23310,23368,23406,23449,23641,23746,23764,23819,23987,24002,24024,24107,24145,24180,24197,24252,24294,24317,24380,24391,24556,24593,24657,24707,24712],"come":[271,391,966,5159,5518,6398,6839,7154,7834,9513,10106,10339,10415,10439,10848,11136,11465,11745,14543,14836,15476,15510,15588,17348,17525,18213,18377,18687,19073,19391,21615],"loads":[288,764,2293,4884,7790,11605,11683,12226,13984,15219,18684,22546,24013],"outdated":[23436],"linuxuniversal":[6502],"browser-":[9924],"preparation":[829,3647,8022],"buildoptions":[1978],"insertion":[1181,22520],"bundles":[28,250,738,745,1794,1847,3252,4827,7220,7765,10979,11287,11349,11832,12591,14676,24585],"repro":[198],"least":[252,269,1174,1407,2118,2570,2812,4379,6442,6634,6667,7121,9398,9414,9545,9715,10302,10970,11202,11966,12034,12680,12811,13318,13907,14076,14563,14846,15230,15457,15485,15773,17883,19292,19390,19436,19483,21906,21976,22485],"getbutton":[21824],"less":[25,367,1764,2219,2581,2620,2793,2852,3136,3518,3617,3993,4040,4903,4940,5008,5124,5639,5759,5842,6396,7134,7309,9183,9289,9614,10201,10696,10951,10968,11193,11509,11596,11749,12397,12934,13285,13721,13871,13895,14102,14278,14441,14885,15251,15387,15520,15588,16162,16259,16322,16361,16771,17567,17751,18040,18068,18305,18396,18998,19418,19435,19570,20748,20845,21579,21973,22006,22430,22546,22735,22899,23266,23613,23894,23993],"lodfading":[19779],"filemode":[10544],"ids":[147,1905,3888,5876,9515,11352],"keyboardhidden":[14635,22313],"depending":[79,181,221,1111,2029,2549,2696,2748,3230,3570,3615,3759,4895,5016,5521,5837,6455,6997,7384,8113,8335,9018,9678,9705,9727,9922,11217,11456,11557,11729,11850,12748,13333,13953,14072,14283,14384,14469,14687,15092,15214,15233,15404,15514,15596,15691,15715,15859,16164,16319,16505,16658,16745,16757,17516,18271,18331,18379,18604,18666,19141,19284,19538,19589,20145,20727,20853,21372,21439,21901,22659,23308,23638,24052,24413],"triggerstays":[15020],"insideunitsphere":[15330],"skin's":[3329],"postgres":[17425],"comp":[19545],"insects":[14278],"loadassetatpath":[78,764,7279,23257],"-parenthwnd":[6562],"blendshapeexample":[1709],"helpers":[18310,21320],"refraction":[8284,9908,19170],"laquo":[7079,23584,23975,24510],"tall":[5117,5167,5289,17039],"myassetbundle":[40],"keywork":[18943],"resetting":[909],"sprite's":[5392,5564,21404],"projections":[2124],"declaration":[1096,8375,12695,18341,19385,20135],"unfortunately":[984,11396,17375,23209],"changelist":[23655],"bellow":[24329],"backlog":[12225],"executeineditmode":[7419],"nine-sliced":[16512],"viewpoints":[5002],"unity_audiodsp_ok":[1255],"cls":[14606],"renderdoc":[8096],"notes":[1324,9200,9559,9847,10899,12637,18943,21711,24415],"troubleshoot":[25,9242,22320],"window-":[155,680,849,1698,5323,9884,10431,13850,14972,17390,23655],"getfloatparametercallback":[1299],"almost":[1108,2138,2878,3997,4143,7325,9655,11179,12602,13311,13573,16834,20845,23990,24364,24669],"sculpting":[22195],"endtogglegroup":[7529],"psd":[2008,5513,9229,9259],"navmeshareas":[5964],"instruments":[1465,12513,22093,22436],"transaction":[941,1012],"usedheapsize":[12549],"contacts":[2820,2850,3471,4143,15018,15074],"toward":[1751,2882,4954,5743,6824,11649,15332],"value":[314,329,407,579,649,669,685,1157,1230,1613,1736,1783,2003,2041,2209,2284,2325,2332,2345,2356,2384,2392,2402,2417,2437,2445,2457,2464,2572,2641,2684,2748,2762,2793,2841,2882,2979,3210,3249,3360,3458,3513,3560,3624,3774,3833,3996,4017,4040,4081,4116,4139,4154,4395,4522,4895,4958,5008,5134,5205,5286,5371,5425,5429,5712,5739,5750,5760,5772,5818,6386,6742,6818,6868,7090,7110,7373,7390,7975,7993,8584,8914,9124,9615,9736,9875,9907,9968,10384,10451,10802,10949,11154,11228,11481,11509,11645,11718,12358,12542,12650,12657,12796,12933,13448,13766,13839,13863,14071,14107,14145,14178,14196,14286,14317,14472,14548,15009,15193,15241,15343,15585,15969,16001,16158,16220,16295,16341,16361,16517,16524,16554,16682,16700,16725,16771,16849,16941,17017,17069,17103,17171,17339,17834,18040,18057,18213,18303,18369,18400,18603,18659,18878,18985,19060,19123,19135,19309,19408,19418,19518,19541,19781,20019,20410,20554,20696,20845,21427,21586,21611,21708,21836,21847,21859,21910,21920,21976,22020,22113,22165,22238,22247,22389,22587,22662,22689,22736,22891,23189,23237,23281,23420,23605,23780,23863],"circle":[412,1426,1763,2552,2857,4023,5200,5817,6442,7380,10244,12916,14225,14750,15332,15524,16349,17134,17177,20810,22867],"vertexinputsimple":[21085],"blurs":[5110,5537,15909,16022,16031,16070,16319,17050],"finding":[168,1452,3642,3834,6667,6779,12876,13159,13310,14535,14842],"inputs":[3520,6829,9612,10444,11223,12504,18140,18687,20357,20822,21993,23134],"objectreference":[12204],"adreno200performanceoptimizationopenglestipsandtricksmarch10":[11812],"batches":[7331,13893,15078,15445],"msdn":[4460,4718,6569,12785,14441,24046,24116,24168,24187,24224,24274],"died":[22962],"webgame":[17368],"m_bounces":[24767],"_costime":[20724],"twelve":[9268],"preload":[3257,4795,13990,15223],"unordered":[6641,13717],"cast":[3563,3751,4069,5272,5581,6865,11067,11152,12403,14106,14200,15304,15946,15982,16309,18033,19781,21857,22275],"bus":[1127],"polymorphism":[16835],"subsystems":[16834],"tricky":[271],"hit":[203,481,902,998,2078,4127,4144,5005,6458,7277,10209,10470,11077,11409,11638,11798,12402,13236,14134,14971,15101,16203,16217,16420,16438,17391,18035,18557,18882,21926,22521,23796,24145,24562],"fitter":[9692,15924,16229,16459,22579],"closecurrent":[9783],"worldpositionstays":[9681],"mspx":[23742],"science":[12346],"discblur":[16297],"descriptions":[1204,15012,17045,22874],"merely":[12818,22430,22738],"mul":[12020,17968,18638,18736,19612,20083,20297,20836,21098],"ffffff":[7001,24404],"self-hosted":[6707],"cmd+shift+6":[23064],"account'":[13883],"libraryassetimporter":[6089],"anti":[4963],"everywhere":[8020,9922,11863,12481,15555],"make":[48,174,187,216,225,247,263,316,327,343,470,651,693,819,821,837,941,1064,1071,1109,1144,1208,1413,1543,1608,1646,1783,1905,2009,2163,2314,2569,2633,2665,2790,2870,2977,3026,3089,3181,3196,3303,3365,3483,3546,3633,3686,3779,4017,4035,4094,4142,4449,4656,4923,4966,5034,5113,5121,5282,5327,5457,5486,5616,5716,5788,5855,6443,6508,6581,6591,6692,6700,6702,6716,6719,6740,6742,6961,6976,6981,7136,7223,7323,7367,7418,7471,7594,7774,7786,7911,7942,7984,8094,8113,8118,8179,8347,8584,8785,8914,8997,9208,9260,9302,9317,9357,9464,9480,9542,9567,9574,9597,9629,9675,9694,9743,9868,9876,9891,9924,9966,10022,10025,10030,10033,10075,10136,10300,10373,10421,10450,10840,11046,11130,11173,11215,11232,11260,11286,11341,11344,11349,11454,11506,11577,11665,11731,11735,11870,11952,11976,12199,12451,12496,12608,12611,12644,12941,13134,13216,13278,13285,13434,13565,13724,13732,13822,13846,13889,14010,14073,14100,14220,14282,14343,14460,14469,14543,14773,14781,14831,14872,14958,15082,15196,15325,15343,15575,15594,15663,15736,15888,15928,15938,15975,16126,16134,16209,16260,16361,16382,16391,16427,16461,16520,16556,16569,16608,16740,16762,16801,17024,17088,17093,17209,17262,17272,17795,17819,18028,18048,18089,18179,18377,19092,19154,19230,19274,19433,19574,19740,19758,19898,20166,20437,20784,21358,21383,21570,21581,21586,21646,21655,21667,21790,21827,21862,21907,21925,21962,22026,22191,22271,22282,22320,22493,22544,22598,22662,22671,22707,22817,22914,22968,22990,23160,23236,23301,23364,23376,23384,23388,23436,23635,23729,23750,23769,23809,23980,23988,24012,24141,24165,24195,24239,24274,24377,24391,24557,24568,24598,24655,24673],"playercontroller":[12688],"m":[2483,14730,18851],"onpostprocessassetbundlenamechanged":[1897],"slashed":[14564],"robust":[2879,12689,13171,13209,13285],"big":[24,249,825,1288,3867,5135,7310,9246,9696,9859,10022,11148,11798,11965,12589,12889,14139,15938,15975,16295,16468,16555,16842,22521,22699,23863,24015,24046],"burning":[14047,14139,14259],"wwdr":[10434],"worry":[3650,5258,6709,8997,10778,11934,12036,13455,13570,15201,17552],"dpkg":[920],"passing":[75,1153,1458,5133,5846,7366,8914,10918,13287,14035,14584,22737,23176,23354],"input":[193,223,263,414,471,1079,1235,1348,1418,1473,1540,1606,2085,2421,2763,3504,3761,3784,3920,4486,4742,5456,5791,5818,6414,6517,6655,6742,6803,6885,6940,7190,7393,7780,7802,7920,8226,8737,8888,9594,9946,10023,10027,10181,10437,10447,10848,10854,11223,11541,11609,11694,12247,12979,13208,13235,13289,13457,13722,14135,14644,15335,15643,15690,15714,16045,16158,16519,16695,16736,16744,16944,16962,17065,17109,17171,17234,17988,18262,18326,18516,18588,19093,19263,19722,19799,20176,20356,20490,20798,21084,21621,21824,22268,22448,22706,22901,23138,23259,24095],"catapulted":[5202],"#ffa500ff":[21732],"mygame_standard_13":[15666],"gl_oes_rgb8_rgba8":[1501],"decoder":[1109,2285],"tip":[571,5207,5730,22156],"layout":[603,1372,1417,3001,3156,3362,3503,4968,5586,6609,7082,7920,8179,8399,8510,8994,9683,9696,9720,11506,11699,15116,15497,15935,16103,16233,16445,16480,16539,16838,17144,17430,18553,22090,22566,22634,22710],"proximitycheck":[6914],"leaving":[1771,5061,11826,12227,16567,17095],"unity_framebuffer_fetch_available":[18318],"customeditor":[7439,18484,18503,19384],"world's":[2296],"multi-scene":[15192],"top-down":[22618],"fundamentally":[13290],"displayed":[229,288,959,1038,1053,1230,2122,2712,3228,3316,3407,3511,3629,4071,4240,4586,4681,5280,5395,5414,5735,6678,6818,7939,7971,7984,8087,8231,8393,8554,9047,9934,10033,10471,11342,11605,13880,14302,15044,15078,15092,15113,15440,15861,15894,16361,16511,16715,17029,19135,19457,19787,20809,21689,21856,22089,22111,22261,22544,22660,22703,22718,23450,23634,23730],"_reflectiontex":[19172],"spm":[21925],"acheive":[12331],"affects":[2475,3992,4097,4145,5008,5125,5825,6860,7972,8195,8303,10848,11153,13767,14032,14244,15948,15984,16076,16090,16298,18978,21356,21653,22129,22396,22646,23235],"transformation":[19280,20692],"crate":[2655,3849,13118,13267],"def-upper_arm":[1670],"exportresource":[39,1816],"postprocess":[1972,23255],"secondary":[2894,3515,4222,4669,7998,9276,18142,21566,21600,22172,22197,22239],"24-bit":[4379],"some":[136,173,185,211,219,256,265,355,366,394,471,586,595,674,836,988,1092,1194,1198,1349,1456,1633,1968,2064,2124,2138,2225,2363,2369,2617,2619,2719,2752,2801,2870,2977,3103,3142,3196,3250,3318,3428,3539,3633,3675,3724,3802,3835,4003,4034,4090,4359,4641,4885,4923,5093,5149,5215,5282,5396,5457,5649,5876,6443,6508,6643,6702,6706,6726,6734,6793,6926,6988,7129,7330,7384,7508,7765,7776,7941,7986,8075,8140,8248,8274,8320,8421,8524,9156,9187,9208,9258,9357,9385,9426,9517,9543,9593,9700,9893,9937,9968,10039,10111,10384,10414,10427,10852,10904,10917,10968,10970,10979,11115,11146,11199,11226,11263,11286,11449,11496,11527,11550,11582,11614,11733,11951,11978,12207,12497,12598,12688,12733,12797,12818,12889,12926,13149,13285,13423,13451,13565,13573,13725,13775,13846,13887,13974,14110,14252,14282,14315,14358,14542,14704,14730,14842,14933,15005,15051,15114,15237,15239,15388,15430,15453,15487,15516,15585,15596,15617,15711,15838,15931,16027,16165,16246,16256,16356,16397,16572,16800,17045,17187,17201,17235,17257,17267,17525,17798,17822,18040,18089,18141,18306,18375,18448,18496,18574,18603,18863,19045,19065,19182,19220,19391,19419,19453,19458,19513,19738,19773,19791,20134,20165,20354,20456,20774,20822,21354,21372,21439,21544,21615,21617,21706,21799,21957,21969,21987,22114,22193,22256,22276,22349,22383,22568,22655,22684,22744,22874,22913,22969,23209,23275,23301,23364,23383,23398,23401,23446,23607,23680,23755,23768,23796,23863,23878,23894,23981,23993,24044,24140,24238,24364,24399,24528,24588,24601],"hashappended":[1871],"arrangement":[587,1416,2009,11122,14266,21418,22090,22243],"legends":[11925],"notably":[2617,11177,15551,19088],"sidestepping":[11978],"somehow":[836,17371,20352],"film":[6856,12456,15938,16578],"unrestricted":[2872,16722],"handed":[1312],"avatars":[11487],"re-sampling":[581],"non-webgl":[23895],"standardspecular":[20367],"improvement":[16658],"command-delete":[15195],"loadassetfromassetbundle":[7285],"ahead":[5210,10405,10776,16838,17331,22456],"hitting":[203,10470,11129,15213,15814,18886],"_projectionparams":[20712],"ones":[272,364,648,878,2570,3550,5687,6667,7465,11301,11435,11965,12180,12325,12589,12926,13305,13614,13932,14252,14384,15078,15346,15459,17194,18104,18141,18247,18645,19759,20396,21408,21910,22246,22862,23270,24588],"respect":[595,3803,4899,11921,12681,15600,16126,17336,18400],"virtualgloss":[12124],"fails":[279,3636,6521,6661,6997,10422,11407,13331,14982,18057,19560,22286,22474,24282,24406],"configure":[1551,1687,2036,2612,2829,2892,3453,5361,6418,6661,6805,8036,10782,11723,14317,17786,18183,19457,21417,22284,22989,24204],"heapu32":[23863],"glass":[6866,8286,17751,18447,19763],"mip-map":[5610],"vertexlm":[19058,19237],"squeezed":[16163,22023],"certainly":[487,3501,6714,6739,9621,11757,14781,15226],"plays":[2421,2559,5289,17372,23153],"mymaterial":[779],"interpolated":[182,314,685,2219,2645,4072,5186,6667,11198,20446],"music":[1324,1364,1417,1456,2277,2367,2426,2570,4339,4621,9990,10452,15219,15343,17078,22093,24014],"serializer":[16795],"originates":[2076,5564,14117],"carefully":[10103,11919,12287,16345,22404],"getfiltered":[41,1826],"playing":[392,434,469,1112,1148,1420,1456,2282,2459,2564,3773,4002,4339,4621,6988,8116,11499,12457,12818,13024,13729,14846,14996,15199,15449,17078,21967,21991,22306,22542,23281,23990],"'baked":[11209],"narrowing":[2308],"engine":[577,601,1324,1460,1507,1614,2574,2650,2781,3198,3668,4114,4797,5121,5178,5283,5349,5440,5783,6444,7308,7782,7987,9951,9979,10800,10903,11729,11934,12444,12548,14010,14062,14072,14384,14951,14999,15073,15402,15445,15584,15591,17023,17199,17205,18985,19040,19532,19750,21981,22021,22118,22433,22548,22735,23131,23272,23779,23814,23894,24024,24143],"back-faces":[18479],"onbecamevisible":[7914,12496],"uncaught":[4604,11599],"inverts":[11089],"lists":[5205,8510,12577,13635,15343,16833,17045,23656],"anisolevel":[21457],"benefits":[688,12229,12633,13961,14899,22096,23895],"invokemethodorcoroutinechecked":[22410],"brush":[13197,21834,21842,21910,21919,21940],"myunityproject":[7946],"somevaluetype":[22455],"scratch":[265,294,9895,10106,10373,12952,14825,14918,16609,17235,22476,23366],"basis":[844,3365,6875,10341,11149,11239,11565,13352,13712,14890,15043,16199,18528,20273,22737],"dram":[10660],"163ppi":[10589],"tessfixed":[20524],"hue":[16606],"dotted":[14564,20810],"atlases":[11753,19785,21413],"improve":[170,2300,3676,5085,5440,6667,7136,9627,10451,10810,11119,11217,11508,12408,13026,13774,13844,13924,14204,14598,14939,14958,15952,15986,16351,18053,22921,23242],"discard":[366,589,856,2619,2706,12180,13943,14338,15068,16384,20405,21401],"bla":[23836],"unityplayer":[6409,6568,9630,9937,14567,24115,24142,24563],"suspect":[231],"redrawn":[16159,22255],"draws":[3592,7704,20774,24642],"aspect":[1349,2128,2757,3004,4234,4675,4915,6661,8107,8120,9722,12457,14054,14227,15924,16104,16502,22596],"n++":[1271],"anchored":[9723,22649],"strings":[147,3404,5205,5469,11518,12212,14580,14735,18985,22737,23283,23452,23863,24429],"allegorithmic":[14893],"rely":[151,4451,4658,5310,9597,10918,12460,13287,13718,16658,16822,16999,21930,22431,23239],"func":[24640],"autobuildproject":[6539],"kinds":[1612,2074,2631,5500,7339,7786,10477,12295,13563,14307,14494,14878,16648,20402,21974,23992],"resources":[78,244,749,906,1145,2031,2815,3179,3445,4208,4771,5257,5460,6945,7279,7308,10765,11155,11285,11837,12653,13294,14934,15064,15214,15343,15477,15511,17816,19221,21357,21488,22362,22443,23449,23878,24017,24312,24391,24550],"barely":[11895,15087,21611],"bitstream":[3919],"climax":[12456],"airmouseconnected":[15718],"lengths":[15329],"equivalents":[13938,14010],"screenmemory":[11169],"vector":[166,181,305,2076,2972,5400,6646,7103,8693,11662,12057,12308,14184,14306,14921,15329,15600,16188,16938,17865,18324,18687,19139,19185,19438,19945,20438,21109,22873,23606],"t3":[16832],"struck":[5283],"m_optionsmenu_start":[22407],"deliver":[2293,5164,8161,9628,14594,21370],"webstreamed":[6502],"detected":[1051,1284,2999,5194,5248,6452,6690,7797,7906,7994,9965,10870,12926,14033,15585,21362],"selling":[1004],"ubuntu":[17385],"supervises":[6780],"gems":[12457],"anded":[15107],"regenerates":[23756],"somebody":[23756],"revamped":[10404],"_imgwww":[22401],"cluttered":[3866,16347],"physics2draycaster":[15337],"flarelayer":[5962],"socialexample":[13672],"adjustment":[1423,7786,12934,16134,16256,16586,17105,18321],"streamwriter":[24261],"blows":[21880,21952],"titled":[10046,13879],"analysing":[2611],"resized":[3394,5354,9698,15099,15927,16242,22568,22662,22673,22727],"mylevel":[13472],"levels":[1154,1320,1337,1418,1976,3007,3615,4357,4542,4639,4797,4933,5003,5110,5537,5703,6979,8090,9184,9922,10924,11122,11201,11350,11733,12889,13455,13708,13746,13846,13961,14032,15199,15343,16158,16201,16256,16833,19486,20603,20767,21401,21458,21843,22109,22244,22444,23779,24019,24119,24595],"velocities":[654,1779,3092,3713,5788,14294,15237],"variation":[2235,4838,5425,8537,12043,14054,14110,14279,14285,15971,16003,16083,16798,17019,17454,21836,21910,21921,21953],"gl_qcom_perfmon_global_mode":[1503],"bindings":[18140],"unity'":[13879],"skinnedmesh":[1712],"ondrawgizmos":[7921,23726],"rapidly":[5828,8086,14066,14102,14164,22817],"multi_compile":[12136,18936,19481],"accurate":[3055,3665,3992,4114,4148,5164,6443,7782,10020,11923,12802,13147,13843,14876,22023],"frustrum":[13860,22675],"lf":[2526,2536,15644],"planes'":[14036],"unity_audiodsp_err_unsupported":[1306],"remove":[151,454,1163,1412,1851,2065,2604,3047,3243,3318,3397,3619,3684,4212,4544,4643,4701,4775,4798,4855,5429,5788,6780,7056,8075,9266,9321,9566,9578,10048,10075,10946,11027,11257,11388,11514,12196,12590,12608,13310,13631,13867,14832,14945,15093,15195,15344,15585,16351,16538,17263,17398,18214,18550,21908,21919,22101,22366,22417,23266,23289,23517,23952,24318,24487,24539,24589],"modeling":[464,1049,3663,3738,5167,7310,7987,12597,13913,22118,24379],"c4d":[591,7992,9400],"viewer":[13822,16565,17212,18383,21323,24159],"hitinfo":[12974],"emerge":[1460],"shift-command-n":[21984],"dangerdistance":[6916],"hump":[14259],"appcontroller":[14611,21669],"scattering":[16081,16134,16313,16995,20209],"mycustomcontrol":[3323],"negate":[19584],"intense":[13923,23379],"isolating":[8093,21407],"shift":[1289,1658,2503,3047,6847,7348,11073,12353,14766,15119,15859,15865,16322,16709,17049,21410,21842,21919,21944,21994,22652],"reloadassembly":[1508],"mind":[3203,4822,5169,9623,9745,10413,11044,11388,11840,12229,12917,12939,13316,13448,13844,13938,14462,14598,14828,15346,15559,15936,16242,18376,18955,19434,21573,21827,22283,23160,23188,24000,24671],"y-component":[23272],"self-closing":[21743],"creative":[8936,11235,11959,13576],"beginproperty":[7589],"buttons":[156,314,687,875,1419,1473,1641,3275,3407,3521,3627,4872,5430,6805,7401,8086,8118,8524,8997,9688,9720,9839,10039,11410,11705,12652,14283,14789,15108,15727,16042,17045,17398,21401,21420,21847,21894,22088,22565,22656,22939,23714],"proximity":[7110,8224,10637,12456],"decorate":[22200],"corrupt":[1614,22351],"forge":[1633],"packaging":[3194,4461,4719,13982,24204,24538],"property's":[690,6742,14286,22043],"-80db":[1153],"baseanimationtrack":[5950],"older":[403,882,4489,4745,4932,5649,7774,8334,9548,9920,10900,11146,11614,11947,13441,14182,14644,15938,16319,17814,19219,19283,19391,21575,22322,23379,23436,23984],"bending":[21882],"audiochorusfilter":[6002],"ordinary":[1465,6858,14266,14898,22891,23312,23379],"devoted":[22864],"digits":[19444,21715],"bat":[1545,1557],"masterip":[6399],"nickname":[1523],"#800000ff":[21729],"racing":[2693,5798,11199,13718,13822,14771],"etw":[24551],"font-size":[23537],"import":[17,308,319,322,367,436,444,591,742,755,820,829,833,1050,1108,1456,1586,1613,1633,1694,1970,2010,2152,2160,2221,2272,2426,2597,2620,2998,3185,3380,3636,3766,5168,5223,5269,5488,5513,5764,6430,6514,6858,6988,7947,7968,7983,8022,9189,9212,9238,9305,9313,9346,9364,9383,9410,9428,9533,9557,9564,9871,9976,10036,10582,11124,11475,13642,14070,14105,14617,14797,14829,14902,15001,15350,16201,16226,17213,21366,21383,21398,21422,21834,21847,21894,21906,21916,21961,22121,22191,22727,23242,23383,23756,24015,24380,24663,24716],"shader_api_opengl":[18290],"saves":[52,3254,7506,7994,13925,15111,20652,21790,23261],"importerversion":[8045,24803],"ideas":[14097,14137],"destruction":[4059],"manual":[607,1066,1462,2617,2830,2893,3058,3244,3454,3503,3553,3631,4104,4132,4148,4174,4713,5627,5765,7394,7941,9438,9612,9696,9977,10025,10039,10417,10563,11141,11220,11406,11697,12204,12799,13565,13846,13933,14011,14015,14748,14787,15229,16421,18031,20782,21414,21580,21965,21982,22322,22440,22608,22743,23081,23384,23790,24016,24432],"anchor":[2827,2890,3032,3385,3451,3492,3756,3839,4073,4974,5038,5334,5360,5379,5477,5727,5806,9686,9725,11205,14830,21404,21907,21929,22648],"monomanager":[1508,5954],"meshparticleemitter":[5935],"break":[90,827,1064,1919,2604,2836,2965,3125,3403,3472,5367,5457,5494,7042,7325,9266,9803,10971,13761,14220,14279,15310,15456,15484,16179,16385,21053,21910,22148,23506,23938,24473],"parseatlasname":[21484],"onmouseover":[7795],"lowering":[2253,2269,13448,21842],"half-spheres":[2778],"ztest":[18130,18395,18997,19695],"dylib":[1203],"weapon":[2706,6791,12484,13291],"v0":[20580],"'void'":[14550],"sobel":[5544,16376],"teammates":[1007],"lower":[496,1298,1600,1668,2003,2277,2380,2388,2396,2419,2439,2447,2456,2464,2801,2832,2906,2977,3237,3498,3519,3833,4116,4395,4522,4940,4974,5341,5365,5393,5612,5684,5696,5739,5799,7136,7271,7834,7970,9619,9686,9725,10043,10767,10809,10848,10905,11121,11155,11499,11793,12041,12204,12681,12685,12876,13871,13892,14032,14047,14164,14199,14288,15001,15003,15078,15092,15406,15591,16015,16074,16264,16327,16950,17000,17106,21375,21835,21842,21855,21940,22021,22145,22658,22867,23159,23430,23774,24322,24595],"isactive":[9801],"worthwhile":[9597,11951],"nextposition":[13000,13212],"genric":[9480],"comprising":[8164],"specific":[214,271,333,399,434,462,573,587,661,731,879,1198,1367,2232,2275,2364,2370,2602,3141,3192,3337,3435,3455,3636,3835,3983,4161,4172,4494,4569,4660,4750,4780,4816,4836,4894,5152,5205,5417,5423,5500,5513,5665,5690,6451,6616,6643,6675,6680,6789,6850,7129,7384,7533,8125,8208,8336,8377,8738,8886,9112,9242,9346,9440,9612,9860,10028,10035,10243,10410,10841,10970,11046,11067,11117,11256,11260,11412,11455,11542,11557,11808,11983,12194,12460,12812,12876,12969,13271,13285,13568,13575,13709,13772,14062,14184,14332,14387,14467,14518,14996,15027,15694,16069,16284,16320,16476,17257,17384,17516,17898,17943,18161,18329,19064,19737,20454,20984,21368,21403,21629,21648,21981,22113,22180,22436,22610,22716,22737,23127,23131,23266,23292,23432,23621,23785,24021,24075,24274,24363,24525,24529,24651,24669],"callintmethod":[14560],"pc":[1111,1545,2021,3761,7223,10558,10616,11592,11802,11948,13897,14895,14980,15436,15459,15487,15550,16205,17297,18558,19057,19250,19292,22547,22948,24211,24308,24560,24568],"pointerenter":[11541,16979,17119],"physics":[2086,2118,2138,2148,2202,2650,2657,2729,2764,2781,2790,2858,2891,2983,3028,3039,3125,3487,3644,3668,3849,4108,4133,4149,4797,4846,5121,5178,5283,5330,5349,5375,5436,5710,5767,5817,6444,6597,7782,7821,7909,7987,9236,10153,10450,10778,10814,10902,11052,11069,11637,11791,11883,11965,12196,12469,12490,12981,13117,13186,13237,13267,13292,13896,14009,14135,14178,14318,14320,14322,14324,14874,15005,15069,15337,15584,16621,16626,17205,21574,21933,22020,22118,22874,23099,23272,23779],"design":[2719,3550,5764,6780,6858,8128,8997,9612,10020,11745,11952,12198,12451,13285,14922,21360,22242,23988,24013],"lit":[182,2687,3759,4198,4686,4762,7139,8163,9183,11198,11917,12282,12476,15416,15516,15544,15556,16261,17520,18044,18283,19045,19237,19523,20353,21839,23702],"latency":[2468,4488,4744,12408,13721,14644],"stencilbuffervalue":[19548],"ideally":[5648,12604,13844,22123],"ser":[1905],"harmony":[12457],"embeddedwindow":[6562],"npot":[5649],"joystickbutton1":[1477],"trashcan":[4933],"identically":[6680,8663,11127,14071,15971,16003,16167,17019,24669],"package":[9,201,937,981,995,1040,1049,3142,3533,4458,4716,5216,5764,6430,6509,6988,7310,7968,9189,9274,9340,9348,9454,9559,9976,12190,14070,14105,14525,14827,15113,15217,15917,15939,15976,16017,16023,16033,16062,16139,16190,16209,16247,16257,16273,16287,16323,16358,16366,16398,16407,16427,16569,16581,16603,16649,16659,16675,16787,16996,17051,17097,17136,17160,17178,17816,18547,19221,21288,21366,21570,21834,21916,22191,22242,22346,22941,23301,23359,24108,24188,24317,24370,24379,24538],"m_ismoving":[24680],"vorbis":[1111,2282,9985,10579,15001,24014],"becomes":[1360,1427,1791,2031,3153,3615,3849,4017,4999,5108,5535,6868,7131,7914,8003,9843,11825,13163,13267,13721,15613,15917,15939,15976,16017,16023,16033,16062,16139,16190,16247,16257,16273,16287,16323,16358,16366,16398,16407,16581,16603,16649,16659,16675,16787,16823,16996,17051,17097,17136,17160,17178,18459,19585,20690,21766,23623],"layermask":[11070],"exporter":[1051,9318,9373,9425,9443,9488,9547,11361],"traverse":[3835,4023],"novertexlights":[20428],"selectables":[9799,22684],"skyscraper":[5166],"android-sdk_r09-windows":[22299],"components":[11,318,350,639,674,1063,1178,1209,1797,2065,2360,2366,2765,3092,3141,3183,3241,3629,3644,3713,3818,4797,6442,6580,6583,6585,6588,6598,6601,6603,6605,6607,6611,6613,6615,6619,6698,6708,6738,6741,6931,6940,6983,7274,7333,7339,7375,7403,7802,8039,8113,8123,9689,9714,9978,10030,10032,10060,10105,10923,10970,11527,12041,12207,12541,13022,13117,13184,13591,13702,14008,14160,14319,14321,14323,14325,14781,15329,15569,15583,16241,16615,16742,16793,16934,16964,17905,17990,18333,18659,19140,20874,21195,21623,21949,21981,21984,22114,22431,22546,22571,22680,22715,22879,23267,23382,23589,23729,23779],"stripping":[3253,4353,4538,4635,4797,10417,10913,10968,11576,11859,13978,14441,21677,22293,22390,23779],"setaslastsibling":[9786,22669],"glows":[12325],"ridges":[6866],"renderingcommandbuffers":[8282],"animatable":[629,715,8024],"evenly":[1742,9254,14751,15936,22179],"concept":[342,391,483,1185,1352,2064,2748,5395,6739,7778,9210,10105,10482,12040,13453,13564,13778,16793,17364,19457,21560,21839,21941,21988,22092,22244,22571,22648,22879,24001],"emscripten":[23772,23811,23863],"syncdb":[6366],"npcs":[1370,11198,12818,14786,15296],"downloads":[73,945,1003,1556,10980,11840,17373,22329,22487,23790],"substancearchive":[6012],"smoothdt":[20725],"shattered":[10199],"clusteradmin":[6357],"shader_api_d3d11_9x":[18294],"occurred":[197,11305,22302,22404,23623],"kinks":[9254],"hashcode":[14558],"pulses":[21949],"sender":[13621],"corrected":[11228,13722,16188],"low-power":[22289],"arb_depth_texture":[18610],"'unity":[11408,13883],"lpddr2":[10621],"source's":[1459],"unity_android":[193,14374],"licenses":[1565,22323,22949],"term":[332,1348,8039,8206,9948,15036,15107,16284,16320,18333,18383,21564,21834,21860,23895],"colorspace":[21476],"unity_3_0_0":[14389],"instancing":[6980],"udp":[13713,17275,22493],"except":[151,494,658,1230,1364,1760,2293,4263,4547,4647,4704,4800,5004,6990,7462,8289,11083,11182,13311,14244,14326,14459,14495,14883,15169,15555,16763,17339,17975,19070,19275,21843,22725,23374,23809],"repack":[21420],"timetillimpact":[12415],"loud":[329,2308,2571],"audioimporter":[6078],"menu":[45,155,173,211,279,370,436,610,637,670,680,887,995,1064,1103,1142,1364,1516,1735,1796,1850,2132,2362,2368,2430,2612,2638,2737,2776,3011,3243,3425,3534,3619,3878,4092,4109,4134,4150,4168,4674,4932,5152,5209,5220,5323,5414,5519,5707,5764,6597,6665,6677,6814,6947,6979,7343,7387,7485,7765,7942,8084,8123,8136,8335,8353,8821,9360,9412,9579,9688,9731,9880,10035,10054,10302,10501,10575,10839,10844,10878,10916,11057,11195,11212,11338,11424,12642,12905,13275,13878,14008,14059,14070,14105,14225,14281,14764,14857,14868,14965,15084,15103,15190,15342,15867,16175,16537,16563,17257,17835,20782,21277,21366,21401,21417,21644,21795,21832,21900,21933,21939,21951,21971,22128,22354,22392,22557,22635,22665,22919,22978,23152,23269,23301,23373,23446,23609,23628,23693,23745,23902,23983,23996,24145,24182,24200,24384,24410,24521,24671],"dex":[22295],"permanently":[901,3133,12612],"reordered":[14863,15006],"cpu-player":[10786],"initiative":[6738],"setactiverecursively":[7091,23213],"turbulence":[5828,21937,21953,22188,22236],"captures":[4983,21652],"deactivatechildren":[7093],"mini-views":[2694],"shadowgun's":[11921],"graphically":[3674,15078,17069],"aggressive":[11989],"target":[53,204,573,1111,1194,1283,1400,2009,2229,2487,2690,2882,3200,3459,3495,3986,4166,4168,4617,4833,4894,4958,5003,5116,5338,5385,5420,5626,5665,5690,5776,5814,6502,6826,7105,7158,7442,7786,8089,8272,9206,10088,10304,10472,10484,10558,11122,11135,11249,11294,11305,11522,11527,11572,11606,11944,12408,12644,12781,13249,13843,13953,14117,14204,14405,14464,14517,14701,14714,14992,15090,15213,15404,15440,15555,15663,15833,16135,16294,16327,16595,16766,17265,18144,18272,18287,18536,18681,19097,19474,20462,20713,20860,21368,21462,21655,21759,21808,21843,21910,22486,22721,22919,22996,23134,23422,23657,23796,23994,24050,24165,24198,24364,24374,24587],"pipelines":[17822],"committed":[872,24016],"view":[47,158,310,317,324,368,398,437,579,592,610,629,676,679,821,861,935,1035,1051,1137,1139,1312,1331,1403,1615,1799,2076,2121,2136,2152,2431,2601,2613,2669,2750,2992,3047,3186,3305,3424,3444,3535,3794,3890,3891,3990,4854,4870,4914,4983,5152,5220,5280,5372,5427,5488,5518,6436,6641,6665,6694,6859,6981,7082,7141,7159,7338,7436,7763,7765,7921,7981,8082,8099,8115,8179,9347,9374,9389,9401,9492,9520,9547,9588,9677,9725,9874,9882,9959,10020,10039,10155,10292,10502,10839,11136,11158,11198,11260,11293,11341,11424,11925,12525,12657,12685,12889,13280,13447,13567,13628,13701,13732,13771,13822,13841,13998,14005,14024,14069,14244,14282,14564,14748,14785,14858,15042,15089,15097,15191,15350,15440,15470,15837,15862,16261,16330,16692,16716,17004,17159,17209,17259,17423,17446,17450,17460,17465,17500,17504,17508,17512,17541,17546,17554,17560,17564,17610,17615,17620,17624,17628,17632,17636,17669,17673,17677,17681,17689,17694,17698,17703,17707,17712,17716,17720,17724,17729,17780,17784,17824,17943,18037,18275,18365,18719,19437,19846,20138,20437,20652,20697,20782,21354,21401,21420,21553,21635,21652,21939,21987,22086,22104,22193,22242,22354,22392,22606,22637,22666,22699,22865,22926,23023,23138,23281,23373,23381,23397,23406,23638,23690,23769,23990,24383,24875],"runosx":[2037],"fiscal":[22950],"unsplit":[21376],"worldspacelightdir":[18279],"tries":[2796,3199,3462,5371,7334,13175,13217,13818,16080,16737,17167,17330,20422,24287,24443],"outbuffer":[1266],"unitypause":[24092],"trackpad":[7357,15895],"mycolor":[8939,20054],"0a1":[1507],"entered":[685,1044,1603,4048,5425,13880,16975,17362,17391,21627,22956,22996,23600],"discovered":[12688],"pre-designed":[8997],"step-by-step":[221,10560,11406,11945,13875,22945,23759],"file's":[439,6387,6948],"occupy":[7159,14259,22737],"circlecollider2d":[5917],"sms":[24363],"icancelhandler":[21770],"policies":[17275,21422],"mymesh":[23253],"custommessagetarget":[11536],"conserve":[7241,11281],"powerful":[318,1355,1456,3892,5842,8097,8306,10558,10780,11733,12284,13921,14770,15106,15562,16158,16313,17820,22404,22553,23131,23607],"skybox's":[5328],"manner":[1473,4906,11195,13462,15104,16550,17338],"finer":[379,9111],"transform":[167,370,436,519,659,714,2076,2166,2626,2754,3125,3243,3385,3413,3476,3673,3748,3824,3853,3909,4967,5128,5474,5744,5882,6444,6742,6916,6986,7095,7114,7164,7321,7382,7407,7781,8037,8062,9211,9359,9681,9691,9786,9857,10033,10124,10312,10885,11076,11205,11506,11639,12031,12249,12826,13000,13099,13140,13201,13253,13314,13448,13702,14748,14790,14830,15237,15299,15580,15584,15590,15856,15877,15936,16132,16242,16294,16733,16841,17003,17204,17229,20845,21789,21819,21984,22001,22086,22101,22567,22640,22669,22710,22721,22870,23269,24141,24383,24692,24836],"advertising":[24329],"shader_api_psp2":[18299],"androidjnihelper":[14542],"radeon":[8310,9920,11181,15459,15487,16205,16576],"ascii":[3203,9446,17295],"widest":[15559],"wraps":[188,14872,20209],"spews":[11970],"lookatcooltime":[13036],"merged":[9224,14513,14730,21306,21957],"wanted":[366,2706,15477,15511,18553,21586],"exemplifies":[24453],"--verbose":[22301],"tiff":[5513],"exit":[4341,4603,4855,5758,6495,8118,11247,12611,12962,14339,15661,15757,21635,22520,22562,23296],"assetbundlemanager":[10985],"drifts":[2961],"exclusively":[5001,9993,11950,13628,14358],"culture":[22092],"write":[53,265,1290,1488,1533,1845,2818,3134,3529,3582,4227,4532,4671,5217,5411,5456,5602,6936,6977,7024,7471,7816,7994,8075,8253,8996,9931,9950,10504,11249,11750,11921,11986,12204,12451,12612,12753,13942,15555,16197,16890,17235,17269,17795,17822,17915,18127,18329,18377,18412,18715,19179,19292,19458,19522,19580,19763,20185,20353,21625,21772,22339,23260,23481,23790,23863,23895,23923,24205,24463,24665],"movements":[366,532,585,2214,2634,4948,5282,6667,12368,12955,14278,14834,21372],"icon_512x512":[9639],"analogous":[6452,10770,14326],"curve":[309,407,629,715,1288,1699,2207,2448,2586,5790,7339,7393,11230,11345,11492,11506,14062,14073,14108,14164,14211,14249,14254,14275,14287,14848,16031,16138,17213,22140,22221],"muting":[595,2483],"commercial":[931,22948],"fullforwardshadows":[3582,8178,11177,20420,20477],"guide":[231,242,317,842,1092,1633,2154,2593,2702,3269,3334,3892,4399,4527,4859,5325,6620,6737,8399,8510,8996,9178,9232,9311,10417,10585,11044,11398,11406,11465,11569,11810,11943,12949,13294,13733,13768,13875,14335,19206,21971,22210,22454,23207,23313,23626,23759,24608,24651,24675],"unitywwwcustomconnectiondelegate":[10359],"referring":[535,9262],"intetest":[20504],"softvegetation":[19061,20436],"outchannels":[1268],"exploding":[10114],"sockpol":[17347],"worse":[6458,10953,11786,12375,13721,15350,22521],"enableclickonce":[24400],"icon":[312,615,1394,1783,1968,3619,4170,4505,4587,4676,4933,6484,7380,7766,8124,8179,8446,10035,10053,10302,14335,14857,15104,20810,21360,22246,22924,22991,23234,23286,23661,23729,24202],"ttf":[3185,5488],"cartoon-style":[11448],"broken":[603,863,1211,1348,6452,7043,7370,7797,8010,9385,9425,9962,10199,13846,15022,15343,16179,21343,22148,23264,23493,23939,24474],"10mb":[243],"struct":[1236,10831,12080,12214,13392,13615,16880,17962,18262,18516,18588,18632,18730,19604,19799,20176,20359,20479,20798,21092,22738],"--output":[22301],"directives":[6625,12698,14358,17948,18935,19463,20388,20826,24364],"pointer_stringify":[23826],"choice":[741,1533,1743,1767,1802,3870,4267,4551,4651,4708,4804,4954,6364,9977,10056,10848,11418,11978,14244,14304,14561,15250,15345,15912,17088,19738,21610,21862,23621],"esoteric":[21582],"holes":[13179,14832,16658,16673],"impl_www_delegate_subclass":[10371],"bitmap":[9266,14886,21556,21590,21960],"hasn't":[6761,11627,21420,22339],"repeatedly":[5385,12696,13227,14112,14781,21910,22817],"loudspeakers":[1280],"apple-designed":[10619],"sdk80":[14480],"preventing":[11354,13167,18030,22608],"recent":[1004,4395,4522,21345,23288,23984],"so-called":[606,625,2224,4961,6442,12647,13293,16516],"read-only":[2642,3901,15068,22607],"bob's":[17368],"worth":[7985,8402,10245,10856,11198,12185,14598,15936,16242,21370],"concentrated":[9612],"newer":[6543,9559,10770,11585,11614,16674,22322,22920,23609,23755],"possibilities":[2840],"armature":[1633],"kdefaultpaddingpower":[21458],"sharp":[5544,8009,14139,15535,16179,16246,18040,21844],"inviting":[1848,13773],"draging":[6672],"retains":[882,6679,7373,23980],"mecanim":[330,381,407,442,603,626,830,1469,1632,1876,2187,2611,3503,3647,5415,6579,6661,8024,8134,9383,10292,11344,11471,11496,12683,12951,13170,13274,14835,15562,21385,21620,23363],"-screen-fullscreen":[6556],"occlusionarea":[6016,13853],"duplicating":[3550],"sources":[294,391,583,1106,1112,1459,2252,2268,2272,2425,2464,2594,3437,4090,6866,8165,9233,9898,11130,13311,13924,14928,14996,17093,18161,20046,21546,21924,23107,23377,23730,23819],"in-editor":[16796],"mimic":[8775,11923],"accomplished":[203,2121,5399,7160,10470],"scenes":[244,581,741,826,1231,1611,1791,1965,2130,2730,3062,3252,3615,5004,5387,5578,5832,6418,6527,6978,7833,9424,9453,9569,10458,10571,11234,12207,12589,12787,13462,13570,13961,13981,15190,15434,16008,16074,16567,16796,17257,19231,20782,21414,21557,21846,21957,22743,22978,23132,23238,23767,24001],"iupdateselectedhandler":[21765],"mali-450":[15682],"frequently-used":[15100],"expands":[14102,16464,18312,18621,18949],"bake":[175,2167,3840,4991,7968,8168,9412,9450,9533,11202,11922,11976,12339,12794,12909,12934,13141,13149,13856,13916,14898,15598],"followed":[1230,1418,1577,6635,7920,14353,15910,17858,18983,19274,20443,22918,23430],"gl_clipplane":[19118],"tangent":[663,2220,3082,3649,3700,5419,5791,7319,7365,12031,16177,18149,18263,18687,20361,20481,21082,21599],"m_secondnumber":[24617],"sharply":[16284,16320],"unity_camerainvprojection":[20717],"project-relative":[7774],"retargeting":[338,384,1470,15561,15591,23358],"jmethodid":[14538],"sprite":[2216,2657,2858,3028,3039,3065,3487,4846,5198,5330,5375,5386,5430,5525,6031,6443,9679,11912,12037,12286,14007,16100,16495,16637,16761,19785,21386,21397,21412,21965,22584,22721,23633],"jog":[1751],"megabyte":[15396],"third-party":[394,14496],"optical":[15938,15975,16007],"hellostring":[23825],"pursuing":[6763],"rightdelay":[2410],"simulate":[364,653,1280,1459,2296,2327,2334,2358,2449,2464,2671,3008,3086,3532,3704,4037,5712,5796,5801,5872,6420,6447,8288,10199,10444,11136,11521,11798,11922,13766,14047,14103,14307,15013,15897,16081,16319,16602,17159,17640,21897,21962],"dragging":[670,875,1065,1154,1288,1409,1464,1615,1739,1766,2226,2601,3619,3759,4854,5430,5488,5761,6969,7346,7378,9386,9725,9882,11205,14244,14283,14750,14785,14863,15006,16941,16963,17087,17110,20810,21403,21760,22107,22638,22669,23281,24383],"unity_3_3":[14392],"scales":[1320,3562,5169,5475,6442,11432,12330,14178,16070,16099,16512,17170,18400,22722],"'eclipseplugin'":[1571],"decide":[175,991,1185,1423,3905,4400,4528,5756,6653,9278,9856,10136,10978,11513,11568,13351,14790,15596,16385,19309,19541,21422,24434],"kgfxrendereropengles30":[12719],"customizes":[7002],"ton":[4362],"upside":[4274,4498,4574,11561,19070],"graphics-related":[3246,8338],"readnodefromserializednodes":[16906],"erratic":[13724],"approaching":[5383,11861],"indicating":[323,2030,4395,4522,14036,16291,19471,21836,23374],"directed":[6541,19669],"latecoming":[13630],"unity-mono":[22409],"-projectpath":[6494,13758],"suitable":[367,1754,2620,3397,5272,5523,5678,5696,6443,6667,7114,10968,13423,13947,14070,14105,14870,15599,17470,18324,20510,21834,21916,21951,22729,23301,23364],"ontop":[16791],"refuse":[880,17413],"flare's":[3155,3538],"grenade":[3134,14117],"co-linear":[7366],"intz":[18607],"meant":[823,833,1047,3428,11464,13638,19764,20412,22677],"optimizing":[174,3246,5236,7993,8122,8196,10616,10902,10910,10912,11150,11577,11934,11956,11978,12191,12487,12495,13886,13973,14961,15440,18959,20043,22123,24016],"layer-based":[4130,4146,11045],"capability":[2671,10593,11948,18615,19486,19538,22718],"spin":[3152,3460,5792],"bigtree_bark_diffuse":[22203],"short-lived":[13448],"oblique":[13821],"ignores":[2203,16457],"r":[1669,3785,6494,8943,14748,15950,18369,18848,19016,20488,21059,21195,21297,23013,24734],"dt":[20725],"websocket":[23889],"marker":[672,5429,8058,11345,12647,13140,15014,21360,21618],"unity_atten_channel":[18320],"rect":[2679,2754,3360,4967,7587,8353,8515,8786,8895,9000,9683,9691,9857,11718,12680,13484,15857,15928,16132,16242,16513,16698,16714,16947,21424,22567,22636,22677,22699,22710,22721,23014,24612,24701],"straight":[343,1734,1755,3039,3592,3741,5344,9213,13919,15599,16159,18035,18872,21617,22555,22867],"abandoned":[1547,6866],"previewing":[588,2475],"navigator":[21687,22423],"incompatible":[6543,10002,22454],"playersettings":[5967,9662,11297,15835],"providade":[9796],"hf":[2516,2535],"snapshots":[1132,1144,1335,1431,1450,16060],"aka":[7157,16082],"ideal":[6961,9993,10456,10846,12606,12819,14017,21973,22226,23705],"masked":[2621,16564,19529],"deciding":[3210,11149,13290,13716,13752,15087],"form":[252,585,659,1786,2076,2209,2226,2991,3663,5282,6380,6408,6723,6856,7350,8085,8172,10502,11197,11419,13289,13330,13843,14278,14494,14921,15904,16841,18695,19135,20395,21370,21617,22109,22244,23147,23189,23299,23465,23993,24322],"panning":[2296,7362,18046],"node-based":[14922],"0db":[2311],"give":[151,166,181,394,1446,1462,1848,2118,2840,2870,3091,3177,3211,3243,3437,3715,3887,4035,5322,6466,6647,8102,9184,9301,9621,10435,10810,10848,10928,11214,11234,11903,11992,12322,12495,12598,12657,13110,13453,13576,13907,14103,14325,14844,15060,15153,15903,16026,16065,16164,16468,16679,16886,17010,17093,17329,17996,21546,22162,22886,23160,23254,23755,24128],"callstack":[12441,24142],"render":[2124,2665,2740,3191,3264,3397,3430,3439,3538,3567,3593,3753,4923,4932,5001,5095,5268,5320,5389,5721,6408,6436,6590,6599,6641,7139,7309,8082,8272,8334,9253,9513,9854,9910,10201,10765,10794,11055,11119,11147,11247,11447,11758,11903,11965,12029,12287,12733,12904,13122,13900,14191,15009,15404,15443,15459,15487,15517,16327,16367,16595,16687,17042,17055,17446,17450,17460,17508,17512,17541,17546,17554,17560,17564,17620,17624,17628,17632,17636,17677,17681,17689,17694,17698,17703,17707,17712,17716,17720,17780,17784,17822,18037,18060,18272,18383,18534,18603,18666,18706,18892,18983,19047,19066,19238,19513,19568,19738,19758,20399,20713,20828,21419,21796,21839,21858,21930,21962,22278,22448,22670,22871,23702,24050],"jdk":[14525],"unique":[188,249,587,1613,2118,2665,3888,3901,4454,4565,6386,6603,6977,6979,8058,10842,10911,11617,13330,13567,17393,20820],"blendmode":[546],"strongly-named":[23400],"abandon":[885],"numberpad":[11706],"confirmation":[1032,4429,4557,6543],"human-like":[2806],"raquo":[7079,23584,23975,24510],"figure":[3209,3254,11602,11963,12196,12567,13175,13896,15335,16792,17423,18078,22394],"command-line":[24551],"annual":[22950],"'+'":[1394],"degratations":[16842],"unresolved":[21289],"node":[433,1733,1753,2640,6361,6377,6414,6436,8025,8137,9440,9507,9531,12537,12884,12960,15615,16848,21618,21635,22131,22195,22221],"256x1":[16219,16440],"mobiles":[5309,8335,9597,11745,11871,11943,12444,12458,12570],"being":[78,485,603,701,908,1005,1096,1159,1349,1420,2138,2198,2426,2449,2748,3092,3397,3573,3663,3713,3752,3871,3890,4003,4039,4958,5023,5160,5283,6550,6710,6874,7277,7446,7942,8245,8539,9193,9515,9617,9934,10109,10456,10539,10828,10952,10979,11121,11206,11223,11572,11850,11868,11921,11960,12509,12611,12645,12812,12934,13149,13276,13328,13448,13466,13627,13739,13778,13921,13975,14047,14073,14107,14462,14806,14884,15014,15099,15137,15250,15713,16079,16345,16708,16794,17094,17111,17189,17378,17496,18055,18329,19434,19515,21370,21564,21617,21685,21790,21927,22109,22368,22490,22548,22760,22879,22956,22997,23244,23383,23993,24044,24527],"non-uniform":[5169,6442,7322,7994,16126,22112,23262],"constructed":[1329,7825,8082,8128,9848,17326],"fooon":[18944],"4th":[9912,10663,11606,15780,21108],"lie":[15329,20412],"costs":[11825,12875,12924,13888],"utils":[23345],"-input":[11660],"encryption":[10953,15137],"sethttpshouldhandlecookies":[10354],"interpolations":[661],"heap16":[23863],"only_renderers":[19479],"initialise":[21759],"nand":[18201],"relaunch":[15672],"netbooks":[11944],"overwhelming":[13746],"windows":[164,209,221,269,706,889,1203,1557,1972,2049,3280,3405,3584,3767,4204,4547,4647,4660,4800,4820,5488,6484,6623,6702,6866,7083,7120,7346,7464,7939,8718,9268,9458,9961,10063,10157,11180,11244,11307,11454,11799,12520,12642,12748,13426,13758,13878,14364,14478,14516,14674,14806,14895,15213,15436,15550,15641,16797,17347,17385,18254,18294,18555,18606,20134,20809,21286,21345,21541,21658,21984,22099,22262,22340,22525,22974,23006,23137,23305,23403,23893,24046,24106,24111,24127,24160,24179,24187,24214,24236,24272,24298,24310,24323,24342,24360,24373,24391,24513,24526,24537,24552,24564,24583,24586,24600,24604,24607,24650,24668,24670,24674],"opponents":[13724],"assignable":[11458],"rectangle":[2657,2694,4968,6865,7350,8099,8402,9692,9723,11138,12525,12680,15927,16495,16637,17038,21403,21423,22637,22666,22719],"refreshed":[21677],"hiccup":[10979,12575,13986],"http":[117,242,834,1078,1556,1619,4399,4527,4718,6569,7021,9643,9928,10100,10509,11235,11585,11810,13321,14441,15140,15648,16081,17240,17280,17442,21561,22284,22380,22446,22529,23480,23741,23769,23880,23920,24046,24116,24168,24187,24223,24274,24375,24391],"maintains":[4340,4623,6702,6898,18077,23756],"walls":[2138,2801,6444,13846,14036,14870,23377],"fine-grained":[22443],"triangulated":[3633,23359],"webstore":[11391],"pdf":[9438,11811,16084,17368,23006],"twist":[2828,2946,24389],"may":[166,179,197,221,252,271,367,398,434,534,586,603,661,674,693,906,982,1091,1103,1247,1458,1602,1613,1652,1845,1849,2097,2130,2138,2209,2619,2723,2870,3133,3381,3408,3529,3612,3759,3802,3843,3866,4141,4379,4654,4713,4932,5004,5143,5648,5688,5876,6436,6443,6547,6647,6681,6719,6730,6739,6780,6856,6962,7091,7797,7909,7981,8403,8885,9183,9256,9593,9675,9692,9724,10020,10504,10616,10852,11127,11146,11205,11239,11286,11332,11349,11401,11600,11729,11793,12185,12196,12453,12572,12606,12687,12790,12797,12889,12916,13068,13149,13195,13273,13318,13330,13451,13464,13631,13639,13724,13771,13908,14032,14072,14139,14278,14283,14349,14495,14545,14704,14923,15001,15036,15087,15245,15343,15585,15596,15711,15736,15897,15911,15931,15938,15975,16164,16341,16526,16737,17294,18035,18557,19284,19391,19419,21420,21546,21667,21807,21809,21901,21937,21965,22026,22111,22236,22271,22365,22386,22590,22862,22879,22915,22950,23209,23299,23364,23392,23431,23615,23769,23979,24052,24529],"leads":[532,3485,7970,9191,11234,13195],"m_size":[24920],"permission":[17393],"lamps":[3746,11130],"spoof":[23407],"rt0":[8093,15498],"executing":[4190,4756,6519,7776,10800,11544,12650,13303,14366,23201],"operations":[771,1288,1353,2034,5431,6495,7761,10780,11555,12180,12345,13565,13850,13940,14704,15036,15838,15869,16038,16300,17347,17912,18186,19256,22490,22874,23607,23638,24044,24539],"build-":[22920],"capsulecollider":[5974],"planes":[184,2126,2676,5021,11047,11909,13869,14022,15474,15859,16170,22201,22871],"different":[11,72,188,221,320,328,358,388,434,498,588,603,739,750,762,833,935,1056,1077,1133,1154,1208,1343,1431,1522,1557,1613,1652,1733,1753,1804,1905,2005,2062,2131,2165,2631,2668,2757,2878,3008,3058,3092,3161,3226,3302,3426,3505,3561,3615,3713,3840,3849,3927,4094,4237,4507,4589,4678,4797,4885,4926,4933,5002,5098,5141,5204,5209,5324,5396,5430,5456,5515,5665,5690,5737,5764,5782,6463,6603,6618,6702,6712,6747,6990,7141,7309,7337,7394,7908,7984,8112,8120,8197,8376,8510,8773,8996,9189,9238,9334,9346,9428,9515,9593,9678,9719,9894,9983,10020,10112,10558,10587,10970,11139,11198,11213,11230,11259,11289,11349,11432,11568,11802,11966,11981,12196,12456,12602,12611,12655,12683,12687,12738,12787,12924,12955,13155,13185,13267,13301,13330,13430,13453,13638,13729,13805,13841,13889,13975,14017,14103,14204,14266,14279,14285,14326,14353,14746,14842,14976,15005,15060,15092,15189,15244,15404,15445,15477,15511,15679,15715,15856,15903,15945,15981,16083,16126,16138,16259,16365,16461,16510,16526,16610,16648,16745,16754,16757,16794,17046,17095,17195,17259,17349,17421,17454,17516,17683,17793,17821,18184,18329,18361,18605,18935,19073,19202,19391,19451,19457,19513,19874,20352,20727,20780,21104,21372,21429,21569,21575,21612,21621,21631,21638,21644,21842,21892,21897,21927,21940,21965,21991,22085,22093,22113,22198,22250,22320,22436,22567,22650,23254,23269,23368,23446,23731,23779,23814,23878,23894,23980,24046,24377,24588,24601],"displays":[654,955,1127,3380,3631,5099,5228,5469,6408,6992,7446,7485,8375,10032,10056,10800,13816,14665,14880,14957,14995,15003,15078,15092,15654,15851,15892,16495,16637,16792,17026,17552,17640,17997,19748,21566,22438,22656,23902,24410,24642],"changes'":[14336],"forking":[6724,6740],"gravel":[14038],"license'":[11402,11412],"designate":[5096],"libmono":[11589],"body's":[15600],"mid":[12047,16590],"unloadasset":[11838,21488],"crucial":[1616,10616,12199],"distinctions":[2048],"forearm":[14837],"oncollisionstay":[6452,7797,15021],"serves":[1444,2467,15153],"retreived":[6780],"remap":[5299,11657,13217,16426],"convention":[1232,3503,6842,9020,11123,12628,12688,14069,14836,21394,21930],"laptop's":[15747],"formulas":[11923,19274],"stopdz":[7180],"debuglevel":[24414],"framerate-independent":[5710],"blocks":[2156,4451,4658,5166,5405,12542,13180,13804,15088,17861,17932,18978,22735],"rebounds":[14027],"resubmitting":[959,1038],"formats":[0,237,585,1109,1233,1456,1522,2272,3123,3185,3814,5442,5598,5678,5700,9278,9480,9981,10582,10773,10956,12185,13959,15345,15487,15550,21961,22094,23368],"gesturemode":[15761],"holds":[5205,8272,13615],"lighting":[180,2132,2689,3248,3553,3631,3649,3754,4198,4686,4762,4925,4966,5004,5231,5323,5395,5578,6606,6856,6990,8004,8091,8161,8269,8296,8341,9183,9236,9569,9884,11125,11140,11142,11146,11193,11215,11221,11443,11888,11960,11976,12284,13915,14196,15408,15451,15484,15528,15542,15558,15861,16009,16361,17523,17640,17795,17833,17915,18089,18251,18320,18361,18408,18505,18858,18990,19045,19142,19230,19255,19395,19436,19458,19524,19588,19745,19791,20132,20164,20352,20726,21543,21574,21597,21647,21860,21962,23095,23373,23691],"gpu's":[10766],"layoutrebuilder":[22624],"atan":[7173,8105],"adjoin":[15903],"worldreflectionvector":[11985,19945,20451],"casual":[1632],"treetransparentcutout":[19533],"pvr":[12182],"--remote-tab-silent":[14812],"myprefab":[119],"gl_oes_texture_half_float":[1501],"walk":[323,333,361,464,588,603,605,1751,1755,1783,2138,2223,2634,2801,4017,11200,11344,12876,12912,13727,15599,21380,22111,22191],"illustration":[10300],"discrete":[580,991,2219,2296,3548,5134,5195,7782,12961,15550,16060],"number":[72,409,469,588,699,883,940,1001,1021,1103,1131,1140,1208,1348,1458,1531,1739,1760,1783,1845,2060,2212,2283,2473,2498,2509,2665,2870,3076,3146,3186,3346,3418,3509,3598,3663,3694,3832,3885,3902,4084,4114,4317,4521,4602,4939,5211,5276,5425,5431,5563,5707,5720,5758,5877,6396,6442,6635,6678,6763,6844,6924,6926,7151,7223,7331,7391,7465,7894,8058,8510,8773,8888,8997,9256,9627,9679,9979,10103,10410,10451,10565,10796,10848,10856,10909,10942,11119,11148,11198,11336,11391,11442,11498,11547,11621,11752,12180,12207,12517,12602,12687,12733,13197,13273,13327,13567,13574,13842,13880,13893,14007,14059,14107,14182,14266,14271,14281,14304,14597,14704,14748,14792,14835,14868,14912,14998,15058,15072,15078,15109,15296,15411,15443,15455,15483,15516,15856,15952,15986,16026,16031,16076,16175,16264,16455,16510,16525,16679,16703,16746,16760,16973,16999,17389,17518,18075,18884,18955,18985,19132,19418,19442,20824,21352,21372,21401,21420,21578,21631,21752,21790,21851,21919,21939,21951,21969,22023,22136,22217,22247,22275,22323,22386,22553,22658,22695,22862,22891,22958,22982,23192,23275,23364,23386,23609,23727,23980],"int":[61,305,328,409,666,1218,1710,5502,6786,6915,6929,7251,7545,7835,8610,8882,9604,9762,10128,10993,11079,11255,12348,12561,12708,12827,13359,13459,13474,13594,14558,15270,16812,17380,18549,19134,21457,22054,22389,22749,23332,23603,23850,24092,24619],"nevertheless":[1319,21971],"atlasgroup":[21493],"classtypes":[1872],"_rimpower":[19852],"optimized":[464,833,2049,2363,2369,5235,5310,5513,8037,8218,10707,10849,11506,11750,11963,12196,12490,13938,14951,15908,15938,16006,16021,16030,16188,16319,17024,18681,23774,23894],"unity_matrix_mvp":[12090,17968,18638,18736,19612,20083,20697,20836,21098],"shadow-casting":[3751,15462,15490],"organization":[822,10062],"banner":[4240,4681],"remember":[875,1033,1284,1352,1675,5147,7091,7845,8914,9031,9478,9697,9960,10201,11197,11837,12453,13871,17516,21617,21993,22737,22902,22924,23270,24708],"mindist":[20581],"-x":[5322,5586,10918,12442],"un-textured":[10135],"component-script":[21980],"assetname":[84,7229],"unity_editor_osx":[14365],"population":[19391],"tapcount":[11621],"computes":[5783,8295,15237,15473,15508,15532,18279,18618,18690,18828,20207,20421,20457],"universal":[1283,2840,4825,10410,13308,14366,14690,24342,24360,24373,24534],"coastal":[15107],"test":[78,221,257,471,1686,1843,4001,4471,4729,6484,6627,6692,6712,6721,7768,8120,8336,9951,10108,10366,10411,10444,10556,11136,11759,13312,13351,13763,13943,14353,14359,14829,15191,15278,15474,15509,16826,17835,18055,19541,21625,21790,22083,22451,22541,22635,22906,23134,23301,23796,23983,24181,24204,24603],"produce":[532,1075,1131,1577,2156,5004,5840,6554,6667,9702,9737,10405,11388,11749,11961,12041,14076,14140,14266,14273,14781,15465,15493,16037,16060,16188,16295,18940,19284,19777,21929,21978,22296,23301,23379,24115,24370],"gl_frontlightmodelproduct":[19113],"m_secondtextarealocation":[24613],"gross":[935,1002,22950],"wrecked":[10114],"notifications":[6719,24419,24539],"biased":[4954,15332,21246],"undo":[22256,23042],"maintextexelsize":[19079],"nfc":[10655],"column":[717,1741,3000,3210,4930,4933,12555,15009,15119,16453,22355,23730],"left-dragging":[7363],"margins":[3348],"mac's":[22938],"helmet":[11925],"how":[31,174,225,256,262,329,391,406,471,603,630,692,737,830,841,933,988,989,1008,1129,1159,1209,1471,1534,1612,1633,1704,1737,1754,1793,1878,2006,2019,2126,2136,2154,2191,2250,2266,2386,2394,2401,2419,2439,2447,2456,2465,2571,2641,2651,2706,2782,2797,2885,3091,3141,3189,3271,3354,3381,3408,3469,3503,3517,3540,3557,3615,3629,3669,3716,3772,3818,3873,3887,3907,3992,4027,4040,4075,4122,4142,4173,4511,4586,4674,4800,4814,4882,4909,4941,4968,4998,5104,5125,5186,5236,5350,5385,5436,5474,5518,5714,5739,5765,5790,5829,6357,6455,6678,6695,6716,6736,6838,6945,7220,7341,7509,7533,7774,7811,7825,7939,7975,8001,8082,8110,8118,8128,8226,8276,8334,8338,8403,8522,8774,8888,8997,9181,9212,9300,9326,9345,9356,9364,9383,9558,9567,9574,9628,9689,9695,9727,9741,9859,9866,9876,9887,9974,10151,10300,10408,10446,10476,10567,10782,10848,10856,10909,10927,11120,11136,11149,11345,11356,11398,11407,11452,11491,11527,11557,11614,11749,11861,11870,11945,11976,12192,12459,12518,12650,12748,12793,12800,12821,12876,12910,12943,13110,13125,13143,13155,13265,13290,13331,13438,13445,13571,13641,13732,13771,13822,13876,13897,14013,14032,14049,14062,14072,14139,14157,14188,14275,14283,14304,14313,14405,14497,14566,14741,14828,14852,14956,15009,15043,15087,15189,15239,15351,15456,15484,15532,15589,15625,15861,15885,15927,16077,16093,16138,16208,16232,16246,16321,16555,16571,16683,16725,16746,16749,16801,17013,17024,17048,17095,17199,17235,17272,17520,17786,17819,17915,18034,18078,18139,18180,18371,18397,18716,18880,18937,19040,19065,19159,19230,19260,19382,19589,19750,19791,20184,20355,20508,20780,21289,21408,21422,21553,21574,21586,21596,21619,21653,21796,21858,21905,21958,22026,22139,22220,22279,22320,22431,22563,22579,22635,22678,22699,22721,22897,22911,22947,22979,23082,23132,23134,23209,23269,23314,23362,23373,23384,23400,23619,23632,23705,23744,23780,23895,23990,24131,24161,24180,24188,24274,24343,24362,24514,24583,24592],"flavours":[21610],"cutoffvalue":[19007],"non-hdr":[15501],"identical":[462,837,1533,2372,2879,4906,5260,7313,7845,9593,9684,14326,16159,21614,21921,24288,24364,24601,24661,24669],"bias":[1751,3566,3619,4954,11122,14196,16170,17990,18042,21195],"event":[324,620,666,1324,2188,2358,2744,5405,5758,6451,7775,7813,7893,10027,10414,11527,12702,13576,14627,15729,16053,16390,16534,16622,16627,16706,16731,16956,16975,17074,17117,21674,21768,22365,22994,24159,24453,24683],"gpu":[236,1521,3663,4489,4518,4612,4693,4769,5238,5649,6517,6622,7121,7308,8096,8162,10601,10782,11153,11785,11948,12179,12226,12491,13889,13974,14934,15037,15137,15406,15532,15542,15677,18614,20421,20456,20822,21345,23893,24545,24671],"armv8-a":[10643],"retained":[403,1517],"aif":[2272,22097],"cameraevent":[8279],"korean":[9947],"unobstructed":[12929],"therefore":[685,906,1843,2009,2723,2879,3529,3712,5598,6739,6988,6999,7279,7312,9627,11156,11251,11289,12184,13438,13445,14102,14180,14198,15068,15073,15456,15484,16713,17364,18957,21569,21837,21926,22006,22118,22307,22833,22924,23911,24022,24363,24382,24408],"excludes":[15243],"up":[52,182,220,243,263,314,327,374,407,462,481,595,610,704,821,840,993,1072,1131,1154,1230,1418,1459,1471,1558,1597,1616,1633,1755,1822,1962,2018,2122,2160,2213,2272,2314,2319,2362,2368,2425,2503,2572,2611,2720,2756,2765,2794,2823,2993,3098,3153,3200,3291,3359,3439,3477,3487,3526,3545,3633,3719,3758,3839,3913,4001,4026,4090,4436,4654,4711,5108,5204,5246,5427,5456,5527,5788,6376,6404,6427,6462,6495,6603,6661,6719,6759,6845,6961,6976,7146,7189,7223,7319,7339,7384,7833,7899,7959,7981,8023,8086,8113,8170,8286,8799,8996,9208,9214,9258,9323,9357,9374,9389,9401,9433,9499,9520,9547,9677,9727,9746,9865,9879,9900,10032,10108,10293,10410,10435,10439,10502,10559,10766,10831,10877,11046,11117,11120,11160,11299,11309,11419,11522,11594,11613,11750,11894,12194,12457,12541,12611,12641,12837,12912,12930,12952,13092,13139,13149,13164,13206,13273,13291,13326,13443,13576,13773,13816,13845,13876,13900,13975,14074,14102,14155,14220,14259,14261,14279,14283,14304,14310,14329,14524,14771,14829,14885,15000,15005,15128,15153,15190,15234,15251,15343,15457,15485,15516,15588,15592,15623,15663,15727,15841,15865,16103,16164,16391,16468,16576,16646,16709,16715,16755,16958,16979,17090,17119,17201,17349,17382,17786,17910,18062,18346,18468,18497,18936,18987,19149,19261,19385,19421,19515,19589,19737,19774,19793,20437,20743,21276,21383,21413,21606,21622,21695,21768,21795,21810,21910,22024,22166,22268,22368,22430,22554,22655,22703,22735,22867,22902,22999,23123,23132,23291,23315,23359,23624,23715,23746,23761,23819,23879,23978,23995,24145,24377,24391],"oxygen":[14047],"deactivate":[7091,9819,15035,23213],"having":[72,182,361,486,688,1396,1662,2979,3094,3715,4954,6442,6738,9246,9745,10386,11259,11354,11608,11785,12457,12593,12687,12959,13206,13309,13901,14071,14110,14220,15585,16125,16537,19474,21403,21790,22305,22325,22521,22608,22860,22957,23151,23239,23605,24013,24391],"self-illumination":[9513,17639,19308],"aiff":[1110,1464,2293,9988],"king":[12193],"intermittently":[7776],"cease":[3103,3724],"overriding":[574,7090,8800,14790],"tumble":[5354],"sse":[12490],"only'":[11209],"2x":[4942,9632,18229,19274,23894],"indoor":[2130],"tvs":[15813],"question":[4264,4548,4648,4705,4801,6592,6714,8113,10034,11403,11923,11951,12285,14335,17374,21747,23083],"64x64":[3209,9982],"terrains":[5440,12904,16079,17024,21895,21897,21912,21938,21979],"compiler":[285,4348,4630,4725,5255,6679,10405,10578,10962,12698,14442,14496,14527,18312,19089,20357,20956,21370,21670,22396,23239,23298,23754,23772,23811,23819,24326,24356,24519,24529],"transform_tex":[18018],"asymptoteslip":[5791],"shaping":[22195],"reutilization":[20820],"pivot":[2806,3824,4971,5564,9378,9393,9405,9432,9482,9523,9552,9685,9697,10336,14758,15842,15873,15936,16242,16739,21404,22639,23015],"pressure":[5799,5827,15068],"3rd-party":[299,6708],"carried":[3636,6913,7774,7790,14155,17095],"winds":[21952],"specifiy":[23780],"animals":[16821],"'expose":[1189],"makes":[170,259,367,573,837,1247,1471,1843,2124,2421,2620,2725,3401,3455,4040,4098,4487,4743,5125,5659,5777,6517,6839,6926,6960,7133,7994,8112,8819,8997,9502,9706,9851,9868,10953,11155,11746,11978,12201,12818,13273,13289,13330,13466,13743,13771,13782,13822,13938,14037,14110,14332,14766,14923,15068,15237,15474,15509,15693,15912,16066,16094,16406,16572,16793,17277,17454,18046,18383,18875,18946,19135,20017,20353,20652,21398,21573,21612,22023,22666,22719,23209,23376,23436,23623,23774,23894,23993],"tablet":[24211],"wired":[10856],"sound":[304,407,652,821,1055,1106,1110,1324,1355,1403,1456,2252,2268,2275,2322,2329,2336,2348,2360,2366,2426,2441,2477,2562,6451,6584,9256,9973,12041,22093,22338,23107],"max'":[9513],"power-of-two":[5101,5598],"#800080ff":[21733],"completes":[7776,13639,16053],"3'":[24008],"trajectories":[9502,12932],"nonlinear":[18604],"billboardrenderer":[6042],"related":[197,1357,2006,5561,6641,6732,6765,11336,12527,14281,20828,21398,21420,21621,21965,22256,22384,23988],"maroon":[21729],"disableexternalcall":[23903,24411],"ps":[916],"reaching":[550,2329,2441,3830,11129],"sub-namespace":[13640],"typetree":[1964],"schematic":[9506],"lower-levels":[13300],"unitysetup64":[10070],"geographic":[13421],"mess":[1360,13749],"appstore":[11549,22910],"enclosed":[188,10505,21691],"cmd+lmb":[23018],"allowtightwhentagged":[21461],"ingame":[7508],"documented":[6832,23881],"improving":[2048,13025,15232],"crashed":[15660],"tree's":[21920,22143,22198,22253],"phases":[8306,14264,17187],"animator's":[5860],"connections":[826,1071,2611,6778,6961,11731,13182,13311,13326,17275,17400,21651,23776,23889,23899],"statuscode":[10369,17305],"pay":[9698,11807,11959,17685,21906,22444,22860],"descendent":[9210],"deserialize":[16794],"client-side":[13293,13722],"importasset":[755,1804],"correspond":[164,179,580,603,1739,1760,1783,2878,3163,5563,7391,8401,9506,9728,9878,10020,11124,14010,14727,20707,21354,21378,21715,22107,22870,23392,23774],"transpose":[20702],"like":[168,184,211,285,361,445,516,596,615,677,753,828,878,1008,1065,1174,1205,1370,1400,1456,1519,1533,1614,1703,1735,1759,1801,1861,2008,2124,2252,2268,2294,2595,2626,2694,2754,2840,2969,2982,3094,3134,3142,3199,3302,3447,3501,3663,3715,3776,3866,4045,4237,4547,4589,4678,4800,4861,4960,4983,5096,5238,5268,5354,5371,5466,5537,5684,5731,5792,5832,6430,6443,6593,6667,6683,6712,6769,6834,6875,6936,6940,6981,7083,7091,7110,7129,7380,7446,7465,7774,7776,7859,7952,8058,8085,8347,8776,8936,9109,9208,9218,9256,9301,9349,9465,9515,9560,9612,9643,9727,9857,9871,10022,10032,10056,10102,10135,10293,10393,10558,10801,10881,10928,10962,10974,11124,11132,11212,11249,11438,11585,11682,11733,11861,11887,11976,12194,12456,12490,12648,12655,12688,12756,12889,13227,13315,13366,13565,13574,13640,13717,13779,13822,13900,14017,14107,14184,14252,14266,14278,14304,14340,14452,14495,14506,14694,14735,14781,14878,14902,15153,15209,15234,15251,15343,15588,15600,15625,15677,15735,15867,16077,16160,16208,16310,16427,16520,16569,16733,16794,17187,17214,17268,17514,17732,17802,17863,17940,18046,18412,18555,18613,18884,18938,19043,19073,19207,19241,19257,19443,19457,19515,19753,19806,20184,20389,20508,20692,20786,21246,21344,21352,21374,21400,21429,21550,21573,21617,21706,21807,21833,21843,21910,21925,21939,21952,21973,21981,21993,22109,22201,22278,22310,22366,22400,22638,22735,22866,22904,22922,22987,23298,23382,23450,23588,23731,23775,23806,23819,23879,23899,23905,23980,23995,24141,24197,24274,24312,24363,24379,24527,24587],"ranged":[21920],"valuestr":[1303],"wav":[1110,1464,2272,9989,22097],"loadallassetsatpath":[764],"m_":[8060],"blinn-phong":[12309,15477,19249],"latitude-longitude":[3001],"comparisonfunction":[19548],"internal-flare":[3179],"undersampling":[16299],"b-c":[19281],"passdef":[19734],"openmpt":[22099],"maxspeed":[10875],"managing":[358,7813,9749,11348,11389,12343,13303,13746,14007,15647,17392,22944],"'z-fighting'":[4379],"include":[52,197,216,250,296,335,684,742,1283,1551,1641,1756,1791,2670,3143,3194,3397,3569,3633,4797,5344,6913,6961,8320,9319,9448,9559,10345,10415,10502,11154,11294,11349,11401,11517,11984,12229,12908,13429,13985,14105,14459,14494,14509,14697,14842,15052,15110,15396,15443,15705,16042,16189,16692,16941,17077,17088,17239,17816,17961,18240,18311,18370,18617,18685,18729,20572,20692,20861,21080,21578,21617,21669,21708,21843,22093,22364,22386,22648,22738,22965,23282,23452,23779,23867,23902,24017,24128,24195,24240,24410,24539,24563,24601],"ignoring":[18400],"ps4":[6502,8313,14485,15438,19085,19492],"cut":[300,518,589,2128,8099,11930,12041,12199,12657,16646,18104,21842,22866,23045],"papers":[16081],"his":[343,2619,5289,6675,11953,12484,13576,21811,23993],"#000080ff":[21730],"activated":[4019,4206,4692,4768,5414,6969,7485,7776,10920,11401,11717,12454,12600,18940,21372,22307,23214,23273,23719,24057],"plugged":[21596,23155],"def-shin":[1673],"decrwrap":[19586],"limiting":[366,2873],"fuchsia":[21723],"playerloop":[15010,22489],"stronger":[16259,21579,21607],"broom":[22867],"reliability":[13707],"discards":[16383,23647],"loadachievements":[13653],"appdata_base":[17966,18262,18636,20862,21081],"shipping":[10430],"myprogressframe":[7002],"prevents":[2811,3804,4444,4714,12894,12959,13749,15607,23644,23902,24410],"awesome":[1315,12456],"tiling":[9265,9875,11432,11826,16598,19162,19874,21907],"texcoord0":[12082,18012,18157,18634,18732,20483,20959,21107],"skinnedmeshrenderers":[8037],"comparisons":[16252],"disperses":[14074],"centimetres":[9237],"join":[1652,3759,11205,13630,13773],"username":[868,6378,6494,11312,22548,22975,23630],"pointerup":[16989,17129],"mf":[7863,23389],"illustrates":[1185,2555,19898],"adobe":[17265],"authentic":[3673,9184,21835],"maya":[17,298,340,391,578,585,1049,1692,2074,2160,5302,7968,8006,9237,9323,9518,14827,24379],"distribute":[1742,15713,16493,17157,23775],"right-most":[3416,21401],"plains":[2131],"packed":[5562,12304,15215,18281,18365,19785,21414],"myscene":[6527],"finishing":[7963,14064],"reassign":[9505],"lequal":[18069,18396,18998,19571],"meaning":[185,693,1736,1762,1848,4193,5417,6967,9612,12185,22590,22869,22891,23436,23661,24296],"hierarchies":[1397,9245,12608],"standalones":[1111,11329],"french":[3226],"cmd+c":[23046],"uber":[18935],"terrain":[5432,5658,5764,8257,9867,11445,14147,14306,17023,17464,18253,19527,20412,21829,21841,21848,21897,21912,21939,21949,21975],"traditionally":[2748,10244],"likes":[9544],"tripod":[4923],"multicastport":[12534],"finishes":[3773,7918,9815,11731,16535,21762,22551,23416,24070],"depend":[1284,1878,2754,2870,6714,11349,12819,13872,14107,15878,16686,17348,17520,20603,21569,21617,22546,22621,22904,23264,23290,23705,24022],"cangjie":[9948],"device":[197,202,219,257,259,265,1069,1488,1528,1551,1596,1597,2421,3054,3523,3761,3798,4273,4526,4574,4932,6517,6825,7222,7818,9183,9612,9654,9841,9947,10001,10024,10411,10427,10465,10469,10539,10560,10587,10782,11247,11305,11546,11578,11606,11609,11729,11833,11944,12185,12514,12701,12754,14379,14510,14721,14872,14969,15067,15081,15835,16065,16128,16283,16964,21667,22286,22383,22906,23134,24068,24116,24147,24167,24355,24603,24651,24669],"camera":[579,1112,1459,2075,2118,2120,2135,2421,2664,2740,3024,3178,3263,3397,3532,3612,3615,3990,4074,4923,4948,4983,5115,5277,5324,5395,5654,5743,5894,6386,6417,6428,6591,6988,7133,7158,7436,7786,7908,8098,8116,8183,8273,9186,10021,10593,10816,10951,11064,11119,11154,11454,11636,12057,12303,12654,12734,12980,13227,13823,13841,13919,14005,14135,14191,14590,14853,15009,15405,15473,15504,15759,15796,15838,15865,16059,16134,16216,16245,16283,16319,16365,16437,16568,16686,16799,16999,17093,17159,17464,17518,18036,18267,18361,18400,18604,18659,19514,19589,20510,20706,20780,21343,21386,21546,21648,21837,21872,21991,22674,22866,23025,23142,23398,23705,24609,24665,24682,24713],"extracted":[5559,7271,12800,21597],"osx":[275,1203,4660,4824,6499,12525,12644,14365,14464,14676,14798,15039,15125,15637,21288,22099,22260,23137,23322,24002],"unit":[333,1151,1423,2571,5166,5371,5563,6508,7546,7987,9237,10764,11662,14059,14069,14762,14829,14870,15329,16100,19447,21873,21919,22118],"illuminate":[7133,11055,11130,11155,11761,13921,18035],"_dirlightmap":[20158],"pain":[3659,14542],"page":[190,196,223,277,283,367,462,464,591,762,841,946,990,1019,1035,1049,1464,1551,1788,2027,2119,2128,2141,2154,2431,2620,2645,2698,2756,2776,3025,3234,3244,3257,3271,3398,3580,3763,3791,3979,4104,4191,4494,4569,4660,4750,4780,4949,4981,5152,5222,5397,5414,5429,5497,5523,5666,5691,5714,5833,6390,6452,6582,6675,6681,6699,6702,6722,6726,6851,6977,6986,7124,7341,7394,7531,7774,7776,7825,7978,8110,8116,8158,8507,8817,9175,9211,9268,9568,9625,9706,9725,9888,9976,10034,10105,10432,10447,10460,10563,10782,10842,10956,11120,11141,11150,11220,11329,11441,11496,11870,11949,11976,12225,12457,12583,12754,13227,13331,13462,13564,13710,13727,13770,13935,13996,14039,14281,14311,14325,14330,14499,14674,14709,14753,14787,14954,14959,15211,15409,15452,15481,15513,15557,15648,15923,16088,16132,16186,16208,16281,16317,16354,16389,16418,16512,16671,16690,16740,17022,17046,17060,17446,17450,17460,17465,17500,17504,17508,17512,17516,17541,17546,17554,17560,17564,17610,17615,17620,17624,17628,17632,17636,17669,17673,17677,17681,17689,17694,17698,17703,17707,17712,17716,17720,17724,17729,17780,17784,17986,18050,18716,18914,18990,19180,19380,19458,19538,20165,20396,21356,21384,21420,21580,21796,21955,21958,21965,21988,22123,22265,22287,22322,22441,22544,22588,22684,22733,22864,22964,23006,23170,23268,23395,23446,23652,23726,23764,23814,23983,24010,24184,24393,24606],"longs":[10416],"spatial":[1356,3818],"readonly":[16806,24612],"overwhelmed":[11944],"subtraction":[7114,22880],"glowing":[14047,16578,23379],"th":[21401],"alpha-tested":[12180,19762],"fruits":[22226],"menubar":[849,2598,3268,5143,9348,17824],"newobject":[14539],"anonymous":[170,4342,13773,24391],"completion":[6533,6868,11277],"command-clicking":[9226],"socket":[6380,17274,23873],"uses":[213,327,358,395,449,603,752,1051,1533,1587,1754,2034,2219,2280,2601,2621,2747,2767,3103,3203,3252,3303,3439,3593,3617,3631,3644,3724,3899,4006,4104,4465,4584,4723,4963,5118,5136,5268,5396,5642,5678,5700,5801,6404,6445,6864,7146,7309,7338,7387,7534,7776,7924,8161,8781,9197,9210,9213,9514,9894,10341,10450,11199,11506,11527,11750,11986,12192,12533,12604,12748,12800,12884,13160,13249,13271,13309,13356,13437,13466,13717,13820,13843,13907,13980,14017,14054,14108,14461,14495,14817,14951,15087,15350,15603,16081,16245,16313,16319,16367,16580,16796,16964,17111,17199,17400,17454,17515,17837,17933,18037,18173,18281,18485,18690,18695,18719,19026,19082,19295,19382,19589,19761,19793,20143,20168,20391,20506,20769,20984,21084,21404,21422,21557,21574,21582,21860,21901,21912,21968,22431,22639,22940,22990,23159,23192,23356,23386,23470,23607,23754,23893,24004,24206,24327,24538,24588,24651],"gl_objectplaner":[19120],"shape":[181,633,1288,1695,2122,2655,2657,2778,2808,2858,3039,3346,3673,3839,3851,4846,5153,5200,5268,5433,5792,6442,6865,7365,8299,9256,9911,10043,10907,11158,11211,12448,13122,14017,14069,14105,14221,14307,14868,15904,16175,16285,16558,18047,21960,22114,22150,22229,22253,22731,22866,23374,23732],"assigning":[3142,3888,5211,8226,11051,11059,12636,12878,13570,14220,14842,23282,24383],"played":[366,577,656,733,1159,1360,2145,2278,2473,2559,3804,5282,5758,9621,10001,11511,11730,13455,14268,21655,23281,23446,24427],"access-control-allow-origin":[23885],"unaffected":[12222,16073,18875,21714],"equivalent":[4156,6447,6690,9477,9617,10107,10578,10918,12041,12227,12687,12916,14319,14321,14382,14593,15250,17205,17456,17467,18072,19451,19486,22876,23237],"mobility":[9617],"apply":[367,384,518,823,1064,1125,1153,1324,1362,1460,2199,2229,2327,2334,2360,2366,2611,2620,2764,2803,3100,3189,3267,3376,3496,3638,3721,3985,4021,4030,4166,4833,4933,5339,5365,5375,5397,5420,5510,5799,5872,6453,6691,6862,6984,7401,8815,9221,9475,10428,10463,10803,11424,11509,11671,12310,13568,13724,14100,14467,14789,15400,15475,15532,15562,15584,15711,16201,16208,16436,16499,16538,16641,16681,17048,17232,17235,17265,17901,18410,19028,19260,20427,21401,21602,21697,21792,21926,22203,22246,22263,23292,23379,23672],"badly":[11169],"shift-comma":[21946],"manually":[249,434,484,658,694,805,875,1150,1542,1614,1845,2615,2776,2829,2892,3255,3303,3453,3684,3806,4854,4991,5211,5252,5372,6375,6436,6668,7127,7994,8075,8250,9180,9354,9386,9408,9487,9691,9962,10166,10916,11407,11723,12204,12793,12943,12964,13571,13904,14689,14990,15088,15169,15346,15600,15646,17329,18323,18604,19047,19073,21403,21790,21843,22339,22445,22602,22677,22838,22917,22969,23214,23631,23757,24022,24221,24432,24673],"supplier":[22427],"evil":[3746,17368],"overwrite":[878,3758,4459,4717,6591,10102,17413,18104,24134,24580,24669],"shade4pointlights":[18281],"rightmost":[4933,5616,12652,13138,15111,21847,23734],"zw":[12101],"script":[34,243,316,327,406,466,655,665,748,755,1089,1096,1188,1205,1339,1464,1586,1795,1854,2029,2089,2131,2199,2713,2776,2801,3023,3133,3228,3243,3255,3308,3365,3763,3778,3909,4358,4640,4723,5001,5202,5204,5208,5221,5292,5460,5500,5714,5799,5818,6373,6436,6450,6495,6640,6680,6742,6817,6938,6947,7002,7087,7191,7276,7310,7339,7396,7403,7467,7536,7767,7776,7823,7859,7894,8060,8128,8140,8347,8737,8873,8916,9180,9206,9675,9750,9896,9924,10033,10074,10133,10293,10343,10456,10501,10565,10782,10843,10944,11133,11199,11290,11361,11541,11547,11599,11630,11694,11859,11867,11898,11966,12031,12196,12477,12541,12617,12642,12657,12687,12700,12753,12820,12890,12984,13087,13227,13249,13344,13517,13578,13729,13782,13832,13933,13990,14039,14077,14112,14279,14408,14495,14506,14694,14725,14805,14885,15005,15086,15099,15197,15251,15584,15616,15800,16061,16395,16424,16495,16537,16625,16630,16635,16637,16790,16968,17114,17186,17207,17235,18362,18498,19434,20510,21356,21386,21426,21625,21772,21812,21981,21993,22262,22389,22745,22981,23185,23296,23298,23382,23386,23481,23588,23726,23743,23772,23804,23819,23923,24017,24073,24327,24391,24559,24609,24665,24676],"swift":[10710],"example":[3,34,166,188,309,323,352,358,366,393,407,435,466,587,597,603,605,684,755,1047,1096,1135,1159,1198,1342,1433,1454,1460,1488,1554,1613,1677,1705,1734,1756,1793,1861,1968,2064,2078,2124,2223,2346,2357,2361,2367,2426,2449,2549,2619,2630,2713,2815,2884,2994,3095,3134,3203,3241,3307,3426,3503,3626,3645,3716,3837,3849,3922,4012,4058,4106,4362,4522,4731,4889,4954,5096,5149,5202,5204,5215,5289,5373,5396,5460,5714,5735,5759,5786,6447,6522,6592,6626,6675,6683,6692,6704,6740,6742,6839,6865,6868,6997,7114,7156,7159,7224,7330,7378,7403,7472,7540,7776,7824,7945,7986,8039,8087,8099,8128,8140,8274,8320,8348,8512,8843,8890,8996,9237,9344,9354,9562,9576,9595,9678,9698,9860,9867,9936,9948,10020,10069,10201,10338,10341,10451,10485,10784,10856,10923,10968,10970,11028,11048,11068,11124,11136,11169,11198,11267,11286,11344,11349,11484,11499,11541,11629,11711,11893,11970,11992,12196,12452,12496,12606,12611,12657,12687,12734,12754,12788,12812,12818,12877,12917,12952,13117,13131,13149,13182,13266,13273,13291,13331,13448,13464,13466,13565,13575,13641,13712,13746,13781,13822,13896,13975,14007,14035,14054,14062,14069,14125,14155,14164,14244,14252,14259,14266,14278,14302,14326,14344,14405,14496,14535,14697,14721,14771,14868,14907,14956,15009,15084,15114,15169,15245,15345,15406,15444,15524,15585,15596,15625,15907,15936,16009,16134,16196,16223,16243,16286,16321,16406,16441,16580,16645,16682,16708,16719,16822,17094,17196,17282,17438,17454,17464,17640,17685,17863,17931,18078,18142,18230,18303,18371,18400,18491,18504,18569,18603,18653,18689,18698,18941,18968,18987,19082,19150,19182,19377,19419,19433,19510,19513,19590,19741,19765,19794,20169,20449,20556,20707,20774,20908,21084,21277,21345,21352,21372,21398,21562,21582,21606,21613,21617,21643,21655,21693,21773,21809,21842,21897,21971,21993,22113,22245,22310,22323,22412,22556,22568,22649,22744,22867,22877,22919,23176,23222,23269,23299,23376,23383,23401,23447,23726,23791,23865,23881,23895,23910,24109,24152,24181,24277,24329,24406,24525,24583,24658,24712],"objspaceviewdir":[18268,18740],"bumpyness":[9310],"discussed":[875,5205,8399,13727,21969],"virus":[906,22368],"cylinder's":[10336],"envelopestbc":[9450],"inset":[3413,18045,21410],"cut-off":[10612],"june":[22099],"value1":[19042,19752],"exception":[1350,1533,1964,4358,4603,4808,6495,6634,7235,7322,8663,10845,11016,13776,13930,15223,17324,19707,21940,22397,23242,23781,23897,24138,24687],"in-scene":[19246],"physicsupdatebehaviour2d":[6057],"falling":[1458,5354,22118],"codesign":[9670],"edgecollider2d":[5925],"evocative":[16261],"setsiblingindex":[22669],"xmlhttprequest":[23878],"forth":[1247,4400,4528,10873],"explicitly":[234,314,887,1285,1940,3914,5143,6692,6887,6967,7329,8178,8377,9867,10423,10578,10846,10901,12650,14942,15470,15588,16754,17438,18650,19248,19496,19564,21354,21747,22456,22735,23782,24306],"logicalandreverse":[18206],"shift+del":[23049],"logicalxor":[18204],"charater":[12816],"verdana":[23528],"dockable":[7506],"alternatives":[13772],"dx9-style":[17942],"grounded":[5767,10882],"collision":[11,414,2647,2838,2967,3131,3474,3487,3644,3665,3824,3870,4058,4122,4142,4162,4794,4956,5133,5194,5346,5369,5433,5767,5861,6449,6933,7797,7997,11045,11793,12327,12470,13166,14018,14123,14264,14279,15234,15588,17205,21868],"16-bit":[236,4291,4502,4584,12182,13948,17092,21847],"combining":[1388,7310,9911,13907,14007,16168,18950,19028,19055,19246,21643,21962],"existed":[403,1919,19283],"cmd+shift+p":[23054],"slices":[16195,19971],"waves":[9907],"softening":[16578],"gaps":[11175,12916],"unversioned":[7959],"rotate":[728,2122,2943,3037,3152,3476,3487,3612,4035,5079,5159,5178,5282,5584,5743,6673,6988,7329,9361,9863,10336,12283,14204,14215,14747,15114,15856,17204,21837,22104,22255,22638,23012],"kgfxdeviceeventafterreset":[12730],"modeled":[5166,22092],"cancelled":[11629],"setfloatparameter":[1293],"dock":[4233,4674,7082],"accelerometer":[263,4333,4620,9616,10446,10565,10683,10848,11610,15692,23140],"beginhorizontal":[9122,13377,13485,16860],"cylindrical":[3001,5583,10300,14069,14876],"time":[279,313,323,367,391,464,655,692,750,841,938,1128,1233,1705,1771,1782,2009,2107,2163,2203,2283,2474,2490,2517,2537,2620,2632,2733,3062,3072,3257,3485,3519,3587,3652,3690,3802,3832,3862,3993,4030,4090,4114,4395,4522,4716,5000,5164,5190,5204,5210,5241,5269,5596,5688,5704,5706,5722,5753,5798,5829,6464,6495,6590,6727,6742,6868,6932,6940,6976,7084,7190,7308,7338,7389,7765,7780,7815,7909,7994,8306,8381,8522,8881,9125,9246,9422,9539,9614,9857,10047,10165,10405,10429,10451,10616,10800,10905,10974,11117,11119,11193,11226,11286,11353,11504,11620,11792,11889,11965,11986,12194,12453,12511,12600,12652,12657,12698,12733,12937,12962,13087,13163,13194,13293,13453,13631,13704,13841,13973,14049,14059,14098,14107,14155,14164,14169,14259,14275,14281,14304,14460,14580,14940,14956,15003,15038,15058,15086,15189,15325,15389,15443,15473,15508,15588,15952,15986,16026,16060,16256,16340,16574,16687,16772,16793,16961,17010,17082,17230,17235,17259,17430,17835,17938,18617,18709,18959,19065,20692,20782,21348,21356,21439,21617,21672,21753,21809,21953,21962,21992,22198,22396,22559,22591,22692,22743,22899,22969,22981,23156,23262,23296,23418,23613,23754,23981,23993,24046,24168,24229,24660],"punching":[13727],"round":[6865,9128,9259,12934,20690],"patched":[24287],"gl_oes_texture_npot":[1502],"modelprefab":[23249],"joint-related":[2868],"'remove":[1163,21908],"auto-mapping":[6672],"normalinrnmbasis":[12020,20297],"java":[224,243,6942,11588,14512,22283,24399],"approximations":[13938],"shortly":[23310],"retrieve":[74,1618,3524,6508,6761,10465,10974,11273,11558,11613,13883,17246,21656,23437],"truecolor":[4904,5632,5679,5701],"internal_data":[19945,20451],"plugin'":[1554],"human":[345,377,985,1644,2124,2807,3502,5167,6495,9183,11925,12819,17095],"bin":[1543,14512,17406,22301,23340],"you'll":[213,241,370,439,595,994,1051,2717,4002,4449,4656,4729,4964,5025,5142,6692,6702,6724,6727,8373,9688,9962,10159,11211,12636,14461,14746,15226,15856,17201,17287,18448,19097,20410,21403,22193,23296,23911,24016,24046,24143,24168,24280,24380,24588,24653],"personality":[3094,3715],"spark":[11130,14184],"twice":[1783,3165,3663,5167,5659,5688,10462,11919,12485,12887,13948,18104,19644,22026],"untracked":[15051],"-screen-height":[6557],"evaluating":[11511,21636],"chinese":[9947],"framework":[10900,11527,14676,21687,22437,24538,24587,24660],"participate":[13773],"geometry":[185,588,1460,2662,2863,3044,3196,3617,3748,3841,3851,4851,4919,4966,5008,5469,5787,6443,7125,7310,7917,7997,8085,8127,8163,8303,9249,10780,10809,11175,11785,11872,11995,12800,12904,13157,13264,13271,13846,13909,15234,16365,17883,18410,18702,18861,18980,19122,19474,19564,19761,20780,21960,22142,22205,22212,22278,23377,23386],"wouldn't":[1614,2619,10849,22608,23269],"locate":[205,279,1557,2078,4178,4778,6778,7382,7989,8086,9242,9612,10045,13108,14613,20810,22737,23274,23623,24197],"'cancel'":[11411],"frag":[12108,17950,18630,18728,19465,19603,20834,21090],"astcimporter":[6101],"prone":[12182,13163],"hills":[21842],"types'":[1532],"coupling":[1288,12948,13213],"nsurl":[10347],"violently":[21937],"instrumentation":[14958],"namedobject":[5968],"wifi":[1608,4340,4623,10684,14969,24671],"tan":[7170,8101,11782,13941],"revisions":[887],"predictable":[12482,12818,15280,15456,15484,17520],"documentations":[11988],"complex":[221,358,387,595,639,1131,1153,1198,1329,3167,3592,3686,4966,5159,5282,5322,6404,7384,9545,10166,10435,10560,10597,11441,11506,11825,11930,13273,13285,13940,14015,14266,14916,15087,15476,15510,15943,15979,16167,16442,16822,17257,17795,17835,18030,18376,18412,18553,19409,20352,21634,22864,23251,23359],"iterative":[78,8169],"xcodeproj":[21687,22913],"unity_3_2":[14391],"unitystandardassetssetup":[10081],"dirt":[6866,14062],"realtimeonly":[3574],"cell":[4003,12368,13843,16450],"computations":[15456,15484,19433,20043],"photoshop":[1614,5513,9213,9303,9571,9981,12041,15345,16189,16208,16432,21570,21847,21895],"namephonepad":[11708],"trivial":[11528,17349],"phone":[276,1608,9721,10431,11186,11707,11733,11947,14380,14478,18294,22307,24235,24343,24361,24374,24513,24526,24537,24552,24564,24583,24586,24600,24604,24607,24650,24668,24670,24674],"apparent":[11825,12229,14204,21837],"explaining":[2006,17913,22965],"pvrtextool":[12182],"components-":[2735,3091,5143,6988],"createjavaobject":[14536],"breaks":[3404,5496,6984,10373,15018,16528],"3gs":[2302,10588,11947],"overshoot":[4117,5385],"snapdragon":[1525,5676,12185],"arr":[12348],"checklist":[10941,11575,11607,11751,13952,15674],"largest":[2856,5739,6839,12347,13865,14202,24389],"o":[1580,11997,12345,12561,17967,18519,18591,18618,18735,19093,19611,19802,20180,20395,20496,20801,21097],"guiskins":[3267,8778],"unzip":[1555,2028,22912],"has":[74,207,254,314,327,343,377,381,439,480,617,625,632,666,684,739,753,846,958,981,1037,1055,1112,1152,1203,1424,1456,1547,1609,1613,1637,1695,1736,1762,1792,1849,2008,2139,2224,2282,2423,2448,2574,2612,2626,2702,2737,2774,2882,3119,3196,3243,3267,3341,3397,3546,3620,3652,3759,3776,3869,3890,3898,3995,4058,4093,4106,4113,4138,4395,4522,4864,4930,4940,5023,5128,5204,5211,5217,5298,5578,5703,5728,5745,5767,5824,6394,6452,6495,6645,6678,6692,6722,6776,6808,6863,6876,6932,7091,7118,7155,7158,7271,7308,7365,7400,7445,7776,7911,8009,8023,8123,8141,8226,8507,8718,8996,9177,9179,9191,9233,9308,9464,9481,9539,9569,9630,9684,9694,9735,9848,9859,9926,9983,10048,10053,10106,10301,10449,10707,10849,10947,10968,10974,11121,11132,11152,11193,11212,11230,11349,11417,11424,11493,11499,11581,11620,11825,11891,11985,12196,12481,12657,12684,12702,12751,12788,12810,12876,12917,12962,13171,13224,13284,13328,13439,13510,13576,13712,13860,13880,13897,13986,14010,14015,14036,14047,14054,14071,14102,14304,14334,14543,14725,14748,14782,14829,14958,15001,15009,15106,15193,15440,15456,15484,15550,15559,15562,15585,15617,15716,15856,15863,16026,16053,16100,16164,16201,16246,16513,16555,16687,16708,16733,16762,16801,16956,16973,17010,17077,17199,17204,17209,17265,17396,17524,17822,17943,18035,18057,18140,18331,18370,18428,18503,18555,18615,18652,18709,18875,18947,19045,19092,19230,19255,19391,19451,19520,19732,19781,19922,20395,21104,21277,21343,21372,21411,21420,21548,21603,21619,21635,21644,21693,21832,21843,21860,21929,21951,21977,21990,22023,22092,22109,22242,22366,22443,22533,22571,22642,22671,22686,22718,22864,22882,22940,22953,22996,23006,23135,23175,23242,23272,23312,23370,23374,23392,23418,23463,23646,23719,23755,23774,23796,23887,23981,24014,24197,24259,24292,24321,24370,24377,24391,24548,24558,24579,24593],"string":[40,328,666,776,1284,1339,1619,1792,1901,1976,3228,3337,3384,3510,4316,4520,4614,4732,5454,6527,6817,7228,7514,7544,8058,8421,8552,8781,8896,9767,10492,10994,11483,12212,13357,13472,13583,14553,14704,14725,15140,16534,16812,17240,17346,17858,19060,19152,20820,21455,22053,22312,22510,22735,23002,23176,23424,23593,23848,24086,24336,24423,24617,24651],"turned":[234,1089,2465,3859,3955,4917,6389,7994,8037,8179,10578,10951,12800,13846,15387,15605,18362,18666,18963,18987,21906,22689,23261,23732],"cram":[12460],"quickstart":[5067,8160],"dominant":[2641],"rigged":[399,464,1633,10198,23358,24379],"sheared":[22115],"sdk81":[14480],"convincing":[2346,2357,5198,6464,7845,9184,10022,11130,12684,12818,14035,14098,14100,14325,21973],"animated":[309,323,333,436,464,586,603,624,629,674,680,1280,2154,2206,2815,3766,4083,4279,4575,5289,7338,8037,9383,9411,10449,11876,12286,12472,13026,14180,14278,14825,14890,21372,21949,22553,23361,23723,24012],"beginsample":[12507,15088],"_specrange":[12058],"element":[2655,2737,2770,3147,3208,3509,4968,5429,5721,7397,7833,8341,9676,9691,9745,9852,9934,10021,13376,14660,14835,15241,15935,16233,16421,16450,16492,16520,16539,16719,16964,17111,17156,17324,21398,21695,22114,22247,22544,22554,22571,22637,22665,22707,22710,23392,24396,24707],"cheapest":[16385],"poly-count":[24013],"deactivates":[2475],"dozens":[393,13937],"moveforce":[10876],"macro":[7129,18028,18303,18618,18943,19099,20146,20273,20454],"apart":[661,3028,3125,4037,4142,5166,5375,10970,13922,14139,15234,16260],"dalvik's":[11588],"synthesizers":[1324],"connection-":[14317],"entitled":[10501,22919],"frustumheight":[8101],"cuts":[2380,2388,2396,13982],"-silent-crashes":[6516],"responsive":[4487,4743,12955,24046],"sub-sections":[14281],"normal-based":[11232],"m_material":[24916],"yz":[2945],"tin":[11402],"thescene":[23398],"separation":[4121,5383,8775,13290,16259,17034,17159],"alert":[7044,10471,11286,11725,23198,23823,23940,24475],"slows":[14066,14164,22113],"resellers":[22949],"flares'":[9191],"manually-positioned":[9092],"meter":[1154,1343,1418,2571,2807,5166,7992,8198,14829],"vcsharp":[23741],"1134x750":[10641],"tablets":[11861,24168,24374],"changesets":[872,6695,6727],"scripting":[72,191,192,223,284,319,355,463,737,762,1702,1794,1911,1968,2466,2568,2803,3096,3228,3244,3269,3334,3404,3426,3510,3717,3763,3818,3875,4028,4141,4156,4210,4533,4625,4696,4773,4787,4884,4993,5121,5198,5206,5496,5782,5864,6449,6603,6620,6640,6742,6806,6977,7223,7894,8132,8146,8278,8345,9175,9178,9187,9674,10404,10436,10447,10565,10597,10961,11544,11545,11698,12201,12450,12609,12947,12950,13115,13129,13146,13571,13699,13990,14451,14752,15087,15228,15586,17198,17201,17206,17233,17236,19514,21346,21772,21971,21982,22111,22387,22544,22669,23103,23175,23356,23396,23813,24589,24601],"anamorphic":[15956,15990],"slash":[1850,11705,15101,20772,21693],"useful":[259,314,364,483,595,674,731,1103,1108,1174,1208,1423,1632,1704,2076,2136,2203,2283,2617,2655,2722,3006,3243,3503,3518,3759,3761,4017,4097,4433,4561,4713,4961,5128,5186,5236,5268,5324,5456,5609,5714,5764,6458,6484,6647,6675,6680,6778,6866,6913,6961,7155,7389,7786,7825,7993,8087,8099,8122,8128,8334,9560,9684,10051,10068,10247,10292,10444,10484,10571,10916,11130,11154,11199,11257,11261,11286,11331,11517,11557,11723,11944,11983,12496,12626,12651,12680,12818,12894,13158,13274,13421,13630,13718,13730,14036,14062,14112,14164,14220,14266,14279,14282,14545,14752,14786,14868,14900,15086,15106,15218,15400,15440,15617,15660,15711,15906,15969,16001,16061,16165,16516,17013,17045,17088,17257,17640,17993,18278,18412,19496,19524,19773,20209,20763,21113,21370,21409,21429,21557,21578,21655,21740,21790,21837,21843,21910,21922,21952,21957,21978,22026,22111,22156,22653,22677,22838,22874,22906,22982,23285,23386,23401,23452,23605,23754,23775,23983,23992,24073,24143,24414,24563],"enable_internal_profiler":[10836],"pop-up":[6555,20810,22557],"arm_r":[14836],"cross-references":[11401],"raycasting":[2077,5431,7808,11055,12408,16421],"reliant":[9621],"referential":[15613],"rid":[11670,22265],"unitrect":[7599],"pushing":[6740,9619],"mscorlib":[4357,4542,4639,10923,15392],"graphics":[217,281,580,1506,2124,2750,3245,3430,4330,4525,4619,4963,5213,5395,5430,5663,6517,6597,6599,6612,6622,7118,7134,7308,7389,7906,8096,8122,8268,8270,8305,8337,8340,8342,9184,9258,9733,9877,9920,10025,10591,10955,11146,11228,11451,11580,11744,11869,11976,12527,12701,12754,13841,13886,13981,14006,14017,14110,14196,14279,14961,15406,15459,15487,15538,15673,15903,16065,16185,16205,16280,16283,16353,16388,16417,16420,16576,16579,16632,16670,16687,17021,17059,17524,17786,17814,17821,17921,18077,18139,18180,18555,18607,18987,19072,19219,19253,19283,19419,19457,19732,20828,21360,21398,21413,21962,21991,22023,22269,22874,22915,23157,23726,23893,24547],"reliably":[3979,13449,13713],"++page":[21513],"vert":[3211,12088,17949,18629,18727,19093,19464,19602,20005,20833,21089],"bundleloader":[59],"continue":[442,521,3355,3802,4339,4621,5026,5513,6876,7925,10198,10462,12652,14170,16724,18375,22404,23682,24141],"lined":[2131],"trombone":[7157],"class1":[24657],"fancy_stuff_on":[18939],"sufficiently":[10849,22858],"band":[1288],"modelpostprocessor":[23246],"gamemanager":[5886,24747],"library":[161,394,588,826,925,931,1104,1232,1587,1614,3202,4460,4718,4826,5259,6569,7943,8250,10091,10452,10538,10923,11311,11465,12753,13429,14441,14501,14676,14850,15396,17406,21436,21679,22347,22421,22535,22930,22973,23298,23841,24046,24116,24168,24187,24224,24274,24363,24654],"enums":[22459],"universalsdk81":[14480],"ample":[22083],"x-axis":[313,14750],"utilities":[22368,24016],"lightwave_content":[9463],"sealed":[24025],"encrypts":[1533,10953],"isolate":[166,8090,9612,17262],"jpg":[147,761,5646,9267,17299],"overrides":[213,1193,3391,4465,4723,4892,5625,5664,5689,6556,7090,14614,24326,24521],"ensuring":[1633,1693,11224,12740,13717],"infinitely":[3543,14036],"i19n":[22495],"acr":[15165],"fileutil":[1980],"hierachy":[14836],"lodgroup":[3620,4958,6025,20767,21927],"apple":[2300,2605,3767,4316,4520,4614,4713,9628,10001,10406,10428,10441,10477,10559,10600,10854,10953,11947,11988,19123,22430,22913],"week":[982,17080,17088],"half-vector":[19438],"shallow":[12878,16163],"one-to-one":[6547,14546],"decompressing":[2281,5688],"iphone3gs":[19292],"until":[73,582,1049,1353,2078,2294,2477,2820,3862,3913,4231,4674,5288,6464,6868,6969,7776,7899,8597,8996,9859,10831,10979,11051,11287,11718,11731,12435,12542,12652,12884,13160,13249,13309,13449,13466,13713,13984,14304,15194,15251,15350,15588,16136,16201,16261,16516,16556,22020,22201,22244,22638,22740,23242,23674,23979,24014,24046],"activating":[6356,23220],"handler":[4604,16981,17121,24709],"secondparsed":[24628],"gl_oes_egl_image_external":[1500],"servers":[252,1598,2044,4255,6548,13293,13427,13748,13771,17348,17421,23790],"goals":[11514,15592],"system's":[14282,14304,22126],"unity_dirbasis":[12014,20273],"unreliable":[3890,3899,13447,13701,22444,23889],"files":[1,159,241,345,585,741,752,821,833,1107,1207,1464,1533,1600,1615,1845,1878,2044,2213,2277,2597,2627,3062,3184,3250,3305,3502,3652,3767,4433,4561,4713,4757,4810,4820,5442,5512,5686,6352,6488,6581,6625,6681,6693,7001,7767,7942,7968,7980,8997,9208,9238,9312,9347,9373,9388,9400,9430,9480,9519,9547,9566,9959,10068,10415,10472,10484,10580,11124,11287,11304,11477,11844,11984,12595,12620,12642,12695,13430,14316,14331,14381,14512,14681,14715,14805,14905,15138,15192,15343,15663,17349,17387,17800,17943,18240,18685,19376,20136,21275,21358,21393,21655,21669,21925,21957,22049,22093,22351,22484,22549,22951,23298,23383,23623,23738,23768,23812,23819,24019,24134,24195,24288,24312,24367,24398,24659],"transforms":[573,5142,5311,6442,9330,12820,13703,14023,16189,22100,22590,22642,24385],"decomposes":[1281],"getruntimememorysize":[12561],"_envtex":[12027],"snaps":[2962],"achievement":[11991,13665],"lamp":[3746],"product-":[22478],"m_useduallightmapsinforward":[24756],"cyan":[16168,21715],"mindful":[14829],"ilayoutelement":[22612],"trance":[1324],"runningonappthread":[24076],"minutes":[23999],"editorguiutility":[21358],"administrating":[17388],"self-contained":[8916],"doesn":[13068,16792],"imposes":[17276,23878],"box":[177,314,671,698,935,1014,1157,1607,1639,1693,2127,2208,2646,2656,3265,3274,3619,3673,3759,3851,3989,4009,5010,5117,5153,5200,5322,5431,5614,6442,6865,7390,8299,8352,8785,9028,10027,10048,10207,11205,11247,11711,12227,13122,13727,13880,14010,14225,14304,14870,15106,16313,16508,17259,17348,21362,22115,22438,22607,23274,23617,23733],"com'":[22957,23205],"backgroundcolor":[6995,24404],"shiny":[11903,19944,21586,21962],"annoying":[17365],"pan":[2574,7363,15852,15865,18046,23010],"gl_oes_mapbuffer":[1505],"opacity":[2762,5737,6868,14098,16653,21715,21910,21919,21940],"suitably":[13331],"lightprobegroup":[6035],"forces":[2228,2802,2876,2969,2982,4037,4145,4166,4603,4832,4995,5121,5184,5330,5419,5774,5832,6460,6560,14141,14149,14306,14325,15584,17205,21955,22879],"alien":[12456],"dispersing":[14103],"we'd":[5684],"distant":[7142,8126,11136,11154,13962,18043,18078,21912,23379],"truncate":[17039],"transitioned":[1335],"otf":[3185],"customguistyle":[3368],"charge":[22910],"onenddrag":[21762],"beginchangecheck":[18539],"drops":[5862],"suspended":[4341,4624],"reverting":[879,9807],"rep":[14345],"sampler3d":[19200],"tweakable":[4862,11674,15908,18089],"you'd":[2693,5649,19760,20458,20774,23406],"collections":[58,416,1446,1708,2080,2700,3917,6954,7162,7227,7479,7553,8362,8518,8791,8903,9010,9559,9625,9754,10307,10796,10983,11289,12659,12824,13031,13097,13337,13469,13580,13785,13825,13987,14080,14425,16844,17223,17393,21449,21782,21997,22502,22747,23342,23591,24241],"rare":[211,1471,4899,9543,11600],"heading":[311,325,369,438,7105,21277],"grabbed":[12309],"switches":[4961,5202,9842,10916,11753,12196,16329,17082,23713],"collider's":[2657,2784,2798,2858,3039,4846],"ismessagequeuerunning":[13502],"'maximize":[18557],"facility":[15106],"6kbits":[13448],"inferior":[8334],"modifier":[3084,3702,5009,6847,9509,14071,19092,19995,20414,20457],"synctime":[15089],"lightest":[16259],"minimalistic":[18361],"typical":[743,2118,2767,5161,5246,8375,8522,10202,12604,13639,13890,13982,14958,15411,16053,16211,16431,16578,16710,16959,17077,18104,18162,19388,21617,21971,22386,22833,23266,24015],"unity_declare_tex2d":[18348],"onrenderobject":[7917],"asserts":[1488,3457],"kgfxrenderermetal":[12723],"directcompute":[6622],"momentum":[2138],"getallscenepaths":[1957],"fellow":[838],"m_lightmapindex":[24894],"replace":[500,1919,2601,7023,9566,9612,9664,9930,10199,10341,10472,11527,12180,12318,13069,13104,15346,16172,17404,18563,19545,21408,22366,22476,22862,22960,23327,23406,23452,23922,24462,24539,24588],"randomized":[4037,14304],"editorstyles":[7524],"ice":[6447],"columns":[1766,1783,8614,15009,15119,16455,20928,23729],"clustertools":[6430],"fullinstall":[24398],"bumpmaps":[10596,11863,11902],"mini-clouds":[14302],"observed":[3900,13451,13568,13701,13739,15938],"heatmaps":[14842],"binds":[17899,21679,22999],"growth":[22140,22221],"hardcoded":[17939],"playerbullet":[3960],"decompress":[236,2281,10004,11854,12595],"wp8player":[24671],"dlaa":[15909],"taps":[11621,11696,16298],"spans":[16164],"uni-directional":[9478],"del2":[22508],"mouseposition":[2085,9614,12980,13237,14135,15753],"established":[13284],"light_attenuation":[12009],"searching":[13160,15100,17256],"message":[151,196,872,1509,4449,4656,5864,6673,6680,6974,6997,7400,9937,10393,11286,11415,11529,13303,13438,13466,13779,14315,14405,14591,14724,15220,15640,15758,18566,20809,22288,22394,22544,22953,23197,23290,23419,23464,23600,23743,24219,24406],"sayhello":[23192],"via":[239,286,395,1007,1035,1070,1188,1283,1329,1606,1968,2803,3767,4605,4778,4993,5121,5354,6410,6603,6703,8208,9924,10029,10423,10432,10449,10476,10584,10916,10963,11294,11331,11401,11419,11530,11611,11792,11898,11983,12650,13139,13309,14008,14036,14241,14281,14723,14790,14971,15237,15636,15809,16188,16285,16516,16965,19233,19482,19971,21655,21685,22026,22437,22738,22914,22949,23137,23447,24014,24044,24145,24212,24264],"hard-coded":[3199],"subclass":[10373,14580],"multi-line":[8567,11711],"whoowhoo":[14590],"owns":[6702,13772],"animationevent":[581,666],"tessphong":[20655],"transparencies":[20365],"screen-sized":[18367],"chops":[16081],"sunlight":[7133,17095],"progressframeimage":[7000,24409],"cmd+alt+8":[23075],"rendertocubemap":[3024],"mipmaps":[3016,5611,11746,13926,15384,21344,23705],"intuitive":[342,663,12640,21947,22879,23131],"conservation":[21579],"darkest":[16259],"unity-related":[9934],"manages":[606,625,1612,2224,2473],"swap":[984,7998,16135,16761],"noisier":[21844],"unity_4_6":[14401],"sub-state":[398,13272,21623,21631,21640],"perform":[603,1125,1353,1461,1578,2031,2078,2604,2870,6508,7908,9641,10135,10696,11253,11921,11966,13289,13326,13443,13565,14597,15869,16202,16300,16834,17391,20845,21628,22020,22549,23657,24044,24300,24447],"greenish":[9224],"doubled-up":[185,13912],"issued":[7906,10399,11527,13630,15339,17111,21927,22043],"accompany":[16168,23305],"involves":[221,465,1602,7466,8106,10844,12611,13448,14535,14842,20847,22461],"mysecret":[23441],"discarding":[19540,19972],"continual":[2290,13739],"hard-to-serialize":[16840],"xyz":[12027,18795,19096,20011,20489,21099],"magical":[15938,15975,16833],"fxaaii":[15910],"ipad2":[10696,11825,19122],"offmeshlink":[4012,6015],"addpass":[20412],"planets":[14872],"inc":[21924],"nearby":[1763,3570,6913,8126,18033,18078,21844,21865],"range":[187,693,1112,1446,1480,1738,2076,2126,2308,2319,2383,2391,2399,2407,2416,2436,2444,2454,2490,2497,2506,2691,3112,3557,3833,4117,4900,5016,5365,6591,6825,7112,7663,9182,9598,10906,11129,11441,12056,12447,12606,12683,12810,12820,12955,13839,14044,14184,14211,14249,14835,15241,15473,15504,15613,15945,15981,16163,16256,16506,16643,16701,16941,17092,17337,17843,17990,18062,18272,18333,18370,18455,18496,18604,18673,18920,19132,19199,19284,19444,19589,19852,20363,20470,20754,20933,21113,21378,21575,21582,21715,21976,22170,22232,22493,23374,23809],"1920x1080":[10642],"invincibility":[12611],"myobject":[11276,23176],"memset":[1250],"semantics":[19083,20874,21104],"1-far":[20714],"calculates":[3621,8003,11146,13923,16328,16460,18269,18861],"particularly":[227,1469,2049,9719,10103,12180,18375,21557,22368,23874],"some_define":[6636],"moved":[797,828,2820,2885,3590,3867,4020,4129,5160,5185,5330,6458,6838,7189,7384,7786,7911,8168,8511,11622,12969,13171,13631,14059,14302,14325,14749,15099,15583,16052,16179,16260,16565,16964,22646,22867],"effect":[151,182,329,407,1068,1131,1144,1208,1337,1423,1458,2006,2124,2239,2256,2307,2315,2321,2335,2361,2367,2371,2379,2395,2403,2412,2432,2449,2450,2465,2486,2493,2502,2510,2529,2549,2574,2633,2693,3096,3133,3532,3621,3717,4059,4323,4618,4909,4932,5202,5283,5580,5739,5817,5824,6451,6589,6611,6742,6874,7089,7146,7157,7786,7845,8086,8112,9187,9559,9714,9916,10021,10208,10801,11139,11155,11193,11454,11925,12039,12282,12650,12888,12917,13285,13448,13457,13822,13919,14035,14054,14071,14103,14142,14164,14220,14259,14282,14300,14302,14644,14751,14872,14958,15456,15484,15897,15902,15938,15975,16007,16022,16031,16060,16134,16188,16208,16245,16260,16280,16283,16319,16356,16364,16397,16406,16426,16516,16567,16578,16602,16615,16632,16648,16658,16673,16786,16934,16995,17048,17050,17094,17134,17159,17177,17187,17464,17567,17751,17798,17911,17931,18044,18056,18140,18371,18652,18709,18860,19071,19256,19391,19439,19669,19738,19874,20209,20984,21366,21546,21603,21706,21837,21842,21940,21949,21973,22140,22221,22833,22899,23259,23292,23376,23691],"transmission":[1456,2327,2334,13717,14886,23158],"full-body":[352],"ismemberofclass":[10368],"stay":[1324,2577,2977,3401,4020,4141,7892,9698,13466,14204,15598,16739,22662],"unity_4_0":[14395],"rpc's":[13501],"perhaps":[2630,10782,12649,14054,14098,14100,14155,21701,21834,22289,22544],"'ok'":[11415,13879],"unchecked":[3639,4300,4590,4822,15234,24134],"prefabutility":[23248],"blindly":[11786],"pop":[2286,6495,11350,12457,16825,22559,23376],"gunshots":[1370],"jumping":[352,366,4012,5417,13131,13182,13266,13271,13305,13451,21372,21617,23296],"sudden":[468],"setcorewindowevents":[24040],"pyramidal":[2128],"3rd":[250,391,2246,2262,4263,4547,4647,4704,4800,9334,9672,9912,10412,10656,11947,15779,20744,22388,23162],"_colortint":[20050],"shader_target_glsl":[18301],"graphics###":[23094],"cmd+alt+1":[23068],"chessopt":[21021],"src2":[19263],"jointed":[15234],"activation'":[11404,11409],"png":[1613,3055,5016,5646,7001,9260,9631,15345,16214,16435,21683,22049,22475,23159,23450,24316,24416],"lay":[3611,5512,13846,17869],"quadratic":[20754],"samsungtvplayer":[15701],"pixel's":[16134,16220,16441,18659],"ramps":[12912],"fixeddeltatime":[11793,12401,22021],"placing":[2770,3766,6856,6985,8234,9982,10243,10928,12959,13916,14076,14281,14464,14614,15477,15511,15749,17196,17374,21364,22021,22544,22567,23375],"md5":[2056,22469],"adjoining":[3759,11205],"auto-braking":[12831],"multi-layer":[5513,15345],"primary":[2870,3549,5322,5827,7805,7998,9924,11644,14611,16453,17857,18103,18142,18441,18933,19268,21602,22147,22238],"audiounits":[1233],"place":[254,342,481,605,661,906,933,1162,1208,1352,1460,1548,1555,1613,1648,1878,2048,2130,2223,2284,2549,2634,2665,2759,3185,3660,4973,5837,6451,6508,6610,6667,6710,6866,6868,6961,6979,7274,7778,7913,8138,8819,9054,9388,9400,9506,9519,9698,9891,9937,10028,10244,10473,10501,11197,11345,11399,11493,11921,12242,12600,12702,12818,12885,12957,13136,13148,13326,13438,13445,13749,13770,13919,14005,14125,14464,14689,14736,14746,15217,15856,16052,16256,16453,17220,17286,17404,18498,18652,19257,21364,21408,21655,21670,21809,21842,21922,22023,22198,22412,22568,22662,22760,22899,23338,23373,23819,24136,24277],"instruction":[5251,6366,10780,14660,17938,18313,21352,22422],"obscured":[2752,5397,13841,16995,18043,22867],"ored":[15110],"ylimit":[2879],"uninitialized":[22387],"cos":[10256,11782,13941,20754,21052,22899],"merge":[878,983,3658,9223,13844,14334,14809,21274,21669,23636],"vector3field":[7442],"unicode":[3225],"help":[170,198,231,875,933,1017,1078,1615,1635,3818,5207,5832,6739,7462,7989,8403,9233,9312,9612,9729,10051,10417,10575,10887,10980,11496,11581,11608,11622,11744,11957,12457,12653,13265,13285,13424,13749,13848,13929,13986,14038,14205,14220,14278,14462,14831,14886,15226,15234,15863,16074,16300,17347,17943,18311,21360,21634,21921,22288,22392,22716,22866,22965,23082,23134,23626,23726,23792,24002,24345,24391,24563],"redownload":[72],"unity_standalone_linux":[14368],"watersimple":[9898],"f":[6870,7355,15118,15842,15867,21947,23050],"one'":[1144],"positional":[5181,23803],"back-facing":[18442,19564],"resolving":[839,14333,14535,23812,24142],"480p":[10604],"colouring":[21962],"benchmarks":[10587,23894],"real-time":[3302,5096,5523,5712,7326,8161,9910,11209,11426,11919,11961,11993,15060,15084,16022,16674],"dllimport":[1284,12766,14507,14695,14712,22507,23845],"semicolons":[14452,23426],"belongs":[4017,8231,12918,17071,18694],"mnc":[14635,22313],"drifting":[15611],"companyname":[4447,4565,4654,11327],"infamous":[22744],"wobbly":[22162],"cope":[833],"veryslowbehaviourdonotdothis":[16846],"middle-dragging":[7363],"recommend":[1204,2005,2813,5684,9425,10103,10105,10435,10561,17815,19220,22203,22913,23368,24010,24046],"timesaver":[21790],"learned":[466,7220,14828,15226],"assistants":[24139],"aid":[6677,16455,17943,18256],"email":[986,997,22542,22965],"how-tos":[13152,14012],"million":[5204,13897],"constraint":[13068,16455,17090],"completeassets":[44,1832,1929,10494,11370],"unsigned":[1244,4434,4562,23414,23863,24104],"malicious":[23407],"ctrl-click":[23301],"serve":[217,1315,1417,3526,21897],"overview###":[23086],"locating":[9354,14349,15106,17422,22741],"obviously":[1257,2655,14872,16833,24017],"bumpmapping":[10696,11874],"cable":[263,1071,10431,14971,23151,23994],"chunky":[7133,11155],"obsolete":[3676,5440,6682,9566],"targeting":[214,1111,1535,5684,7795,8335,11968,12185,12606,14407,24214],"findwithtag":[6797,12374,21772],"materials":[318,836,2071,3596,3629,3639,3753,4071,4859,4983,5214,5274,5652,5719,5796,6446,7311,7984,8182,9263,9396,9407,9435,9484,9525,9554,9899,9979,10810,11209,11349,11422,11501,11752,12601,12628,13905,13980,14200,14881,15055,15445,17514,18490,18946,19515,19787,20810,21543,21573,21582,21586,21611,21740,21926,21962,22143,22202,22224,22261,23382,23723],"unityexampleprojectsetup":[10084],"-dirtolight":[12097],"tied":[9725,11046],"flapping":[14278],"practical":[581,10974,11943,12600,17942,19898],"processloadedachievements":[13653],"postprocessbuild":[2002],"awakes":[7790],"assetdatabase":[751,1804,1893,6072,10049,11373,21354,21470,23257],"visualstudio":[23740],"low-intensity":[3585],"atlasgroups":[21490],"watertight":[14032],"30-day":[13881],"consistently":[3759,9235],"inserting":[3404,5496],"verified":[1021],"applydamage":[7800],"maxedgelength":[24789],"ir-ltd":[11235],"access":[154,222,245,276,677,749,752,821,836,1071,1298,1432,1467,1533,1604,1641,1702,2430,3018,3200,3763,3878,4023,4208,4531,4729,4771,5602,6603,6641,6681,6692,6698,6744,6806,7271,7314,7446,7833,8128,10004,10049,10452,10541,10565,10878,10974,11289,11547,11610,12207,12701,12753,13308,13615,13633,13777,14495,14529,15097,15189,15237,15506,15648,15803,15812,17280,17390,19182,21104,21288,21362,21631,22366,22404,22924,22975,23276,23299,23623,23769,23802,23873,24220,24363,24529,24545,24669],"affiliate":[15713],"beforehand":[13312],"board":[12525],"figures":[935,13166,13897,16392,18141,20357],"tagprefix":[21460],"lofinator":[1280],"probes":[3007,3589,3754,4072,4944,4983,5275,5661,8163,11192,12042,12337,15424,15453,15501,19244,20046,20427,20743,21552,21863],"vertices":[179,3611,3652,3707,5282,7825,9379,9394,9553,10776,10801,11146,11775,12516,13897,14225,14771,14828,15078,15411,15446,15534,15558,17523,19434,19997,20464,20959,21221,23264,23386],"land":[1351,12934,13136,21811],"meshdata":[15048],"boxcollider2d":[5920],"editable":[1147,5431,8552,9446,11696,14781,15190,16520,22707,23589],"elaborate":[8935],"animationstate":[519],"onscreen":[2078,2694,2752,3095,3631,3716,4954,5395,7143,7159,10022,11158,12282,12476,12606,12680,13883,21693,23452],"add-in":[23355],"overheadcamera":[12662],"multithreaded":[8037,12700,14707],"lots":[828,906,3578,3659,9962,10203,10809,11198,11790,11879,11996,12212,12459,12606,13900,14107,14746,15856,22362,22473],"casters":[7335,11165,15476,15510],"mytexture":[147,2058],"mid_javaclass":[14538],"gamer":[22544],"placed":[34,398,637,753,875,1096,1795,2131,2743,3477,3746,4968,5044,6442,6586,7276,7343,7483,7677,7792,7980,8376,8769,9092,9934,10344,11135,11307,11711,11842,11919,12886,12968,14343,14464,14518,14694,15139,15211,15936,16313,16524,16735,17293,17944,19257,20389,21352,21546,21618,21656,21681,21743,22675,22710,23374,24669],"indented":[7594],"snip":[17884],"ctor":[10422,22455],"skeleton":[335,1470,2626,3503,5282,6667,8037,8136,10291,14834,23360],"37ad974993dbaa77485dd2a0c38f347a":[1870],"cookie":[3561,5527,6856,9567,20734,23374],"setting":[131,206,220,449,840,993,1157,1231,1343,1597,1641,1734,1758,1930,2020,2132,2254,2270,2294,2702,2756,2769,2795,2875,3037,3113,3191,3640,3832,3887,3997,4026,4048,4090,4272,4538,4573,4954,5008,5126,5202,5286,5323,5385,5389,5522,5714,5735,5796,6376,6427,7090,7114,7136,7372,7397,8124,9186,9214,9238,9537,9681,9694,9733,9746,9865,10004,10166,10556,10559,10844,10905,11049,11173,11297,11425,11525,11564,11711,12446,12641,12680,12797,12933,13094,13124,13149,13249,13326,13766,13773,13845,13900,14220,14259,14310,14329,14467,14781,14944,15001,15233,15327,15344,15520,15600,15625,16100,16172,16961,17085,17277,17382,17834,18040,18528,18887,20810,21276,21423,21614,21653,21689,21936,22024,22121,22671,23123,23237,23315,23624,23781,23902,24410],"rainbow-colored":[3167],"upright":[2139,3839,4273,11560,11647,14191,14220,14830],"authority":[13721],"ifndef":[12070],"richtext":[21747],"trigger":[412,1363,2229,2650,2660,2781,2820,2861,3042,3668,4127,4144,4166,4833,4849,5032,5175,5349,5420,5758,6449,6940,7468,7797,9846,11553,12229,12962,15036,16781,17171,21621,22388,22743],"outstanding":[1005],"zombies":[12459,12879],"dpi":[9641,16113],"simulated":[6460,6517,12485,13169,13205,14307,17102,21973],"observer":[6414],"globalmaximumlod":[19420],"windowsapps":[24232],"direaction":[9698],"minval":[1295],"picking":[8092,12790,15241],"context":[637,887,1208,2362,2368,2638,4439,5220,5414,7343,7400,8039,9720,10035,11424,12283,12644,13275,13923,14857,21542,23284,23902,23983,24410],"kgfxrendereropengles20":[12718],"amplifies":[2308],"situation":[2225,5202,5417,9202,11226,11881,16834,17038,17189,18505,21809,22735,22965],"note":[76,276,316,582,622,663,870,1051,1091,1104,1204,1373,1519,1522,1598,1668,1739,1784,2018,2282,2467,2547,2601,2645,2657,2712,2762,2820,2856,3019,3028,3039,3194,3381,3408,3582,3619,3676,3765,3992,4059,4145,4156,4191,4562,4645,4714,4797,4814,4846,4861,4927,4955,5027,5126,5210,5310,5415,5431,5440,5492,5513,5786,5838,5876,6387,6442,6495,6633,6680,6760,6866,6931,6961,6993,7090,7121,7137,7272,7314,7401,7757,7774,7790,7892,7901,7987,8039,8190,8335,9224,9439,9513,9566,9888,9953,10014,10054,10064,10429,10456,10484,10561,10805,10918,10979,11120,11156,11267,11295,11329,11354,11454,11499,11551,11711,11731,11989,12205,12504,12619,12737,12752,12797,13149,13249,13276,13309,13648,13841,13913,14062,14110,14252,14326,14403,14479,14509,14674,14731,14752,14783,14865,14876,14958,15001,15039,15084,15110,15243,15343,15443,15453,15510,15526,15606,15699,15736,15853,15890,16164,16351,16383,16538,16687,16692,16735,16823,16999,17090,17093,17197,17207,17239,17259,17295,17421,17444,17448,17452,17458,17462,17469,17498,17502,17506,17510,17539,17543,17548,17556,17562,17566,17608,17612,17617,17622,17626,17630,17634,17638,17667,17671,17675,17679,17687,17691,17696,17700,17705,17709,17714,17718,17722,17726,17731,17750,17777,17782,17943,18056,18140,18548,18557,18678,18695,18860,18963,19045,19256,19494,19538,19755,20020,20143,20185,20353,20772,21345,21356,21411,21606,21664,21693,21810,21836,22018,22111,22256,22339,22436,22548,22662,22876,22915,22969,23145,23188,23259,23290,23673,23769,23796,23886,24048,24130,24168,24202,24223,24287,24307,24319,24328,24359,24388,24391,24713],"supported":[236,250,280,638,833,1049,1113,1315,1536,1602,2065,2306,2999,3185,3634,3675,3767,4181,4502,4669,5163,5442,5645,5669,5698,6495,7816,8135,8163,9199,9275,9535,9593,9953,9976,10292,10418,10473,10582,10770,10954,11146,11242,11569,11807,11947,12185,13333,13727,14358,14495,14516,14731,14894,15457,15485,15553,15560,15793,15907,16538,17339,19060,19390,19419,19486,20772,21689,21751,22094,22453,22995,23127,23299,23769,23796,23878,24187,24217,24424,24551,24596,24603],"nature":[2136,2633,9091,11445,11923,13155,14017,14828,21930,22203],"there":[4,54,179,197,219,265,316,328,361,367,487,753,836,982,1010,1051,1071,1103,1108,1127,1142,1230,1349,1407,1522,1571,1633,1742,1755,1789,1878,2018,2121,2252,2268,2549,2586,2617,2620,2669,2737,2776,2870,3118,3133,3142,3208,3243,3302,3622,3636,3675,3758,3763,3836,3913,4060,4090,4109,4134,4168,4551,4651,4708,4804,4815,4932,5023,5248,5282,5395,5440,5457,5513,5739,5753,5788,6442,6513,6634,6656,6681,6760,6919,6932,6945,6976,6988,6994,7091,7221,7310,7337,7384,7462,7765,7819,7894,7981,8126,8339,8395,8510,8799,8888,8996,9189,9346,9426,9498,9614,9679,9702,9960,10027,10135,10381,10410,10427,10471,10830,10909,10916,11117,11200,11213,11286,11305,11344,11356,11416,11423,11477,11501,11530,11547,11603,11713,11750,11923,11948,11983,12194,12454,12539,12600,12635,12642,12688,12788,12801,12892,13094,13155,13287,13330,13451,13464,13497,13565,13573,13717,13752,13770,13778,13846,13908,13989,14007,14017,14100,14186,14225,14252,14290,14326,14342,14403,14494,14524,14749,14825,14868,14929,15018,15041,15100,15137,15192,15234,15335,15455,15483,15524,15551,15585,15607,15677,15911,16080,16175,16365,16459,16538,16552,16661,16684,16745,16757,16822,16991,17093,17131,17187,17207,17262,17518,17883,18031,18162,18180,18363,18383,18650,18678,18941,19036,19065,19230,19434,19759,20019,20352,20748,20849,21352,21372,21404,21420,21546,21575,21586,21596,21631,21637,21743,21837,21865,21902,21920,21971,21991,22023,22107,22255,22265,22366,22383,22557,22581,22656,22665,22719,22740,22871,22920,22989,23083,23170,23278,23363,23446,23666,23770,23798,23893,23979,24014,24052,24143,24237,24324,24364,24521,24579,24590,24605,24708],"glitches":[11136],"amend":[1008,10870],"firefox":[23769,23808,23894],"1e1":[8080],"eye":[1438,2124,2693,9183,11925,16256,17095,18048,18618,22247],"63px":[23553],"keeping":[652,2097,2281,2813,3430,4822,6442,7908,9318,10201,10973,11302,12596,12818,13466,15219,15342,15456,15484,15931,16242,20411,21937,22107,22644,24013],"perfection":[6976],"jungle":[6856],"snappy":[13721],"market":[217,4454,4565,10558,10597,11861,11923,11947,12185],"cars'":[1460,13924],"preloaded":[13990,15224,22443],"labelfield":[7720],"backend":[4254,4787,10404,16795,23401],"m_linearfogend":[24738],"shader-capable":[10596],"undoable":[12620],"_specoffset":[12057],"workaround":[153,9231,12567,22475],"race":[5788,13194],"stepwise":[12652],"firstpersoncamera":[12661],"sorting":[5392,5427,11790,12347,14199],"implicit":[15644,17045],"partially":[4470,4728,6672,15234,15461,15489,19096,22661,24219,24326,24523],"cgincludes":[18254,20134],"provides":[156,223,381,589,626,752,1103,1297,1467,1469,1516,1632,1861,2076,2208,5764,6418,6610,6738,6763,8226,9704,9950,9966,10384,10565,10773,10812,10970,11336,11344,11527,11641,11978,12525,13153,13312,13327,13429,13638,13748,14007,14230,14285,14545,14792,15104,15343,15450,15591,15838,15869,16715,16763,17095,17203,18496,19106,20692,21413,21847,21939,21957,22043,22195,22568,22703,22727,23447,23814,24022,24144,24549],"top":[187,360,366,408,534,874,991,996,1142,1279,1341,1394,1661,1736,1762,1783,2076,2122,2619,2684,3420,3758,4165,4182,4498,4574,4714,4932,4973,5210,6623,6653,6947,8086,8126,8212,8965,9111,9725,9872,9881,9926,10041,10053,11206,11428,11480,11561,11641,11711,11879,11978,12229,12651,12681,12696,12894,12920,13118,13135,13157,13276,13839,13841,14072,14108,14283,14466,14543,14872,15041,15084,15102,15342,15440,15828,15936,16505,16700,16735,16796,16949,17152,17195,17262,17465,17639,18322,18400,18566,18863,19068,20689,20718,21401,21420,21551,21862,22109,22174,22243,22569,22650,22668,22866,22918,23549,23728,23984,24311,24387],"computing":[6646,8162,12295,13916,19026,20043,20437],"incidate":[19779],"cross-compile":[18681,23811],"audiomixergroupcontroller":[6054],"-jar":[22300],"certain":[323,391,589,605,1137,1178,2136,2223,2467,2621,2665,2759,3028,4021,4200,4688,4764,4900,5330,5375,6763,7318,7533,7776,8099,10971,11158,11711,11833,11912,11983,12192,12542,12700,12754,12894,13220,13639,14062,14261,14752,14874,14958,15408,15588,15760,15794,16061,16195,16556,17093,18062,21354,21558,21628,21809,22114,22273,22349,22571,22862,22871,23203,23419,23674,23714,24238],"barrel":[674,3109,3730,3849,13267,14266],"readily":[14928],"asking":[6543,15044,22430],"professional":[7759,16189,23742,24603],"programatically":[22092],"non-sleeping":[10909],"uv's":[9394,12313],"arm64":[10410],"labelslider":[8895],"bunch":[1210,9354,10243,12301,17796],"varying":[2633,7393,11568,14140,14284,16081,18689],"printfloat":[668],"directly":[52,160,166,184,225,318,685,837,931,1051,1148,1352,1396,1595,2283,2593,2748,3047,3545,3634,3909,4461,4719,5141,5764,6592,6776,6947,7114,7141,7279,8037,8206,9202,9424,9480,9924,10033,10056,10319,10444,10567,11356,11452,11506,11645,11750,12182,12204,13068,13287,13443,13773,13839,13919,14008,14580,14748,14830,14868,14903,15068,15110,15585,15758,15853,16563,16842,17364,17402,17900,17986,18044,18324,18377,18680,21354,21422,21543,21641,21693,21937,21951,21971,22244,22571,22738,22914,23283,23312,23374,23605,23638,23814,24324,24391,24673],"eclipse":[269,11336,14526],"rootframe":[24032],"appdelegate":[21669],"prefences":[23636],"m_bounceintensity":[24763],"laser":[2078,4097,13227],"iachievement":[13657],"10f":[6754,10187],"cold-restart":[22939],"subclasses":[14546],"shrunken":[12916],"--dex":[22301],"comfortably":[2283],"rival":[11861],"es":[1497,4331,4525,4619,5235,5671,8312,10801,11750,12184,12513,12718,13950,15437,15459,15551,17943,18291,18613,18681,19067,19292,19500],"direct3d":[4204,4690,4766,5249,6510,7308,12702,15550,17820,17943,18288,18376,18606,18859,19034,19067,19249,19488,24595],"rundown":[11894],"cls_javaclass":[14537],"mecanim's":[603,6661,15591,21621,23358],"occurs":[856,4150,4960,4989,6467,6495,7141,7776,8522,11228,11541,11586,12408,15758,16183,17139,17181,17189,21280,21768,21865,22240,22489,22801,23600],"bottom-side":[22175],"in'":[18428],"designing":[2136,2757,6979,9718,12451,12598,13451,15009,15087,16132,21413],"government":[22950],"stl100-1":[1524],"'choose":[13879],"triangulate":[9321,9542],"6-sided":[9877],"bryce":[21895],"zero-terminated":[17347],"diagnostics":[1970,18565,22366,24547],"pointer":[1232,7795,7818,9841,12702,15752,16724,16964,17110,21754,22737,23863],"ui_elements":[21424],"pluginname":[12770,14507,14695],"sci-fi":[3746,17751],"colored":[630,13873,14750,17998,19395],"blowing":[652,15234,21937],"squeezing":[10571],"killing":[22430],"face-on":[21611],"output_log":[6554,11326],"appopriate":[3004],"clipped":[2126,2706,6999,9046,14037,24408],"loadimage":[5464],"contact":[958,980,1016,1037,1044,2229,2634,2850,3471,4121,4166,4833,5195,5420,5790,6357,6443,7797,10412,11129,11405,11421,13309,13885,14037,14066,14117,15074,22336,22957],"16384x16384":[21343],"webserver":[15211,17294],"audiogroup":[1138,1329,1393,1449],"j1":[5508],"profilerdata":[15050],"should":[4,53,166,184,209,231,263,279,289,323,374,391,447,574,637,742,752,860,981,995,1017,1037,1044,1051,1075,1104,1209,1533,1571,1604,1614,1633,1735,1755,1795,1848,2028,2147,2189,2192,2294,2426,2465,2621,2645,2696,2741,2794,2884,2998,3056,3194,3435,3476,3494,3524,3592,3645,3684,3830,3849,4003,4023,4098,4107,4163,4169,4500,4575,4664,4765,4784,4888,4943,4968,5016,5124,5298,5320,5337,5361,5381,5396,5410,5440,5474,5562,5733,5785,5804,5838,5861,6360,6386,6430,6442,6487,6653,6675,6686,6692,6702,6715,6859,6974,7001,7090,7277,7308,7343,7445,7533,7774,7786,7942,7970,7987,8034,8205,8336,9206,9216,9465,9489,9571,9582,9612,9679,9698,9728,9747,9857,9872,9897,9934,9982,10022,10105,10336,10393,10410,10430,10444,10465,10484,10782,10846,10887,11064,11152,11204,11234,11263,11350,11408,11452,11473,11499,11527,11551,11603,11682,11718,11729,11757,11870,11944,11992,12213,12496,12600,12642,12681,12698,12734,12754,12790,12802,12907,12934,12962,13109,13117,13136,13149,13178,13203,13267,13282,13330,13434,13448,13574,13719,13805,13848,13907,14035,14071,14103,14180,14200,14231,14252,14266,14307,14353,14461,14501,14682,14721,14751,14795,14828,14876,14958,15060,15084,15233,15332,15344,15404,15445,15453,15570,15584,15599,15640,15973,16005,16019,16029,16040,16126,16196,16226,16254,16270,16299,16351,16363,16392,16404,16444,16502,16528,16542,16561,16580,16613,16656,16668,16682,16733,16789,16793,16952,17013,17035,17076,17094,17143,17175,17185,17216,17234,17295,17404,17454,17470,17640,17859,17931,18044,18075,18142,18311,18388,18553,18566,18604,18650,18715,18957,18987,19060,19084,19159,19292,19377,19541,19763,20019,20352,20606,20784,21289,21352,21427,21548,21579,21582,21617,21638,21660,21677,21747,21796,21862,21929,22113,22198,22238,22284,22339,22412,22542,22571,22664,22729,22836,22866,22913,22953,23006,23151,23188,23209,23316,23376,23393,23443,23450,23600,23613,23622,23723,23751,23780,24015,24099,24135,24200,24220,24277,24306,24321,24385,24416,24571,24659,24669],"eyelinear":[18801],"allocating":[12209,13570],"he":[521,2138,2619,2630,5167,6675,7114,10198,11550,11622,12204,12484,13305,13439,13576,13721,17209,17364,19292,23993],"speedtreewindasset":[6043],"standard_14":[15707],"puzzle":[2693,11991],"unitysrv":[911],"oscillation":[5371,5382,5810],"tortoisegit":[21322],"textures'":[21908],"seek":[22159],"clicks":[7792,9613,9846,15764,16050,22689],"mention":[1298,12688],"cheetah3d":[17,9280,9387],"_circlesy":[20932],"officially":[250,23808],"liquid":[17567],"bar":[156,1418,1533,1607,1737,1860,3425,3534,3619,3781,3878,4092,4106,4179,4499,4581,4674,5210,6992,7390,8119,8179,8821,9578,9880,12647,13276,15094,15101,15209,15860,16708,21401,21714,21940,22385,23690,23990,24384,24408,24587],"standaloneinputmodule":[9838,21753],"chainoftrust_setvalueasdf":[23420],"reflector":[4263,4547,4647,4704,4800],"lockserver":[14345],"interest":[1437,8086,13028,24136],"frequently":[860,1613,2817,3887,6647,6706,6732,6913,7909,10852,13306,13445,13719,22023,22761,23613],"computer-assisted":[23738],"scenesettings":[5901],"pre-publish":[53],"hide":[1657,3048,3178,3542,4856,5658,9210,10870,11723,13326,15952,15986,18078,18397,22867,23494],"screen's":[2750,9020],"answered":[23083],"download":[56,157,253,266,466,863,949,994,1199,1554,1602,1621,1843,2027,2815,3198,3405,3767,5495,6357,6702,7221,7928,9438,9488,9623,10059,10430,10442,10505,10569,10917,10978,11269,11286,11811,12185,13877,14525,14886,15114,15142,15199,15642,17242,17305,17386,18547,22097,22284,22333,22529,22910,23006,23462,23611,23741,23785,23887,23994,24109,24210,24223,24432,24603],"undesirable":[5169,13761,13986,16126,16737],"_data":[6554],"voxelization":[12800,12934],"shopcontents":[5206],"drives":[2887,15658],"waiting":[982,9673,10802,13449,13713,15090,17362],"lifecycle":[7936],"unhandled":[4603,22398],"doors":[3447,5344,12879,13271],"automation":[14543],"multi-platform":[18256],"unity_lightmap":[12012],"properly":[277,926,2425,3211,3659,4023,4929,6400,6661,8138,8720,9513,9545,9748,10444,11197,11247,11344,12684,12934,15907,16799,17093,17211,19090,20020,21862,22928,24585],"meanwhile":[24020],"assets-":[1694,3234,3268,4090,5114,5168,5219,6988,8821,9348,9564,9568,9586,9880,9892,10210,11424,14506,14694,14903,16214,16435,17824,23745],"cachepolicy":[10353],"installing":[221,268,2032,6351,9216,9566,10058,10430,12182,17391,22322,22548,22934,24202,24426],"fire1":[426,514,3965,6810,10181,12247,21824],"build":[38,174,199,265,367,1089,1283,1533,1551,1558,1597,1618,1643,1789,1857,1966,1967,2009,2475,2620,3194,3254,3746,4168,4516,4610,4692,4767,4794,4958,5025,5247,5466,6356,6383,6437,6496,7220,7310,7767,7994,8096,8335,8965,9248,9346,9663,10117,10410,10427,10444,10466,10484,10563,10840,10913,11148,11243,11290,11353,11499,11599,11842,12644,12796,12914,12929,13087,13143,13271,13426,13434,13842,13976,14405,14501,14690,14714,14781,14896,14964,15082,15189,15341,15440,15665,15833,16791,17265,18575,18946,19392,19793,21414,21582,21666,21910,22289,22368,22396,22906,23132,23134,23262,23310,23446,23759,23796,23897,24002,24024,24134,24162,24193,24214,24297,24304,24312,24343,24361,24379,24514,24532,24554,24566,24598,24659,24669,24671,24706],"subtracting":[22885],"coefficient":[4153,5181],"sliced":[300,16501,22644,22723],"timescales":[2203],"sv_positioncoordinate":[20845],"index":[1301,1679,3147,3203,4208,4771,6386,6436,7310,11073,11617,11814,12820,15193,15241,16220,16441,16909,19771,21740,22284,23449,23764],"decryption":[15153],"prepares":[744,13900],"cartoon":[11933],"encompass":[19457],"captions":[17026],"-force-d3d9":[6510],"'assets":[614,24280],"non-muscle":[2213],"locationofnuclearbombs":[17368],"buffers":[2700,4503,4585,7309,8091,8270,9197,11249,11506,11825,12517,15425,15459,15487,15945,15981,16074,16340,18336,19253,22437],"assestbundles":[23887],"proposed":[13068],"off":[234,455,470,1519,1539,2128,2380,2388,2396,2426,2465,2565,2626,2804,2961,2977,3483,3676,3734,3835,3871,3882,3897,4061,4116,4148,4204,4690,4766,5010,5202,5299,5440,5739,5855,6453,6876,7091,7179,7970,7994,8099,8582,10578,10951,11132,11148,11600,11742,11959,11991,12242,12801,12934,13137,13185,13628,13822,13846,13900,14038,14067,14103,14178,15084,15385,15585,15605,15763,15861,15911,16052,16226,16518,16646,17062,17082,17268,17524,17939,18035,18059,18182,18377,18387,18627,18649,18665,18871,18940,18968,18992,19591,19745,19979,21117,21278,21810,21854,22020,22206,22247,22689,22866,22925,23159,23261,23714],"subscriptions":[10481],"sgx554mp4":[10711],"pre-constructed":[3243],"scriptableobject":[5203,16837,23251],"executable":[243,1543,6554,10060,10484,11328,12764,15051,15214,17239,17347,21313,22485,24155],"mp3":[1111,1464,2272,2604,9990,10579,10960,11854,12595,22097],"unclear":[3981],"unityeditor":[36,757,1809,1855,1986,6524,7478,7610,10488,11029,11364,15619,18499,21426,23304],"switching":[234,3676,3803,5440,8843,12656,13022,14279,15104,17078,20810],"word":[3188,3296,3353,3620,8661,17046,21693,21772,22866,23310,23719],"additional":[221,244,271,309,323,461,532,661,674,983,1235,1360,1606,1612,1780,1878,2018,2402,2457,3293,4348,4630,4741,6442,6492,6681,6863,6983,7085,7316,7508,7786,8274,8633,9712,9909,10039,10135,10384,10456,10942,10968,11232,11350,11499,11573,11889,12033,12226,12640,12812,12919,13320,13575,13710,13925,14261,14467,14510,14721,15114,15425,15470,15523,15979,16061,16170,16486,16544,16609,16763,17150,17262,17384,17454,17464,17524,20418,21113,21638,21664,21843,21910,21991,22107,22473,22582,22981,23661,23774,24257,24287],"distanceperframe":[21999],"visits":[12884],"equality":[19617],"insider":[11810],"gl_amd_program_binary_z400":[1498],"signedkeys":[1599],"shadowed":[7139,8199],"splatting":[16297,21862],"assumption":[6458],"misaligned":[5492],"1gb":[10621,21343],"shell":[910,9514,10840,14231],"tessellate":[20421,20457],"trunks":[22171],"sqrmagnitude":[7110,11663,12394],"reporting":[175,195,4129,4255,4600,10459,10574,16128,24149],"touchscreenkeyboard":[11698],"human-readable":[23775],"perfect-looping":[2604],"floating-point":[1312,18075],"frustum":[2076,2128,2712,2752,4003,4909,5289,7141,7159,8098,10816,11156,11744,13821,13841,20652,20718,22865],"scrollbar's":[16700],"interact":[1351,2148,2232,3686,4161,4836,5121,5402,5423,5837,6444,6702,11053,13453,14035,14669,15230,15455,15483,17798,17915,19047,19436,19458,20352,23275,23400,24675],"non-rectangle":[21536],"all_databases__view'":[17425],"preloaddata":[5987],"containskey":[11010],"visualising":[14282,22684],"straightforward":[318,1467,2097,5500,6765,9183,9614,11199,13310,13457,16322],"meshcollider":[5922],"improves":[3254,4963,8037,10578,22928],"freezing":[8172],"d24x8":[15550],"'eye'":[1443],"slide":[2801,5330,5792,14073,16164],"two-player":[2118,2720],"dashboard":[24551],"lightingstandard":[20281],"onanimatorik":[10317,13050],"denotes":[1427,4933,21693,22246],"progresses":[1379,12229,14109,14184,14275],"crooked":[22158],"clusters":[6404,8226],"knee":[20313],"assetbundleref":[10991],"infrastructure":[11199],"messes":[9543],"cube-shaped":[2647],"physically-based":[21859],"macosx":[4674,23006],"registermonomodules":[21679],"tonemapping":[9187,15945,15981,17091],"preforming":[12035],"array's":[15241],"result":[168,571,704,1296,1458,1613,1905,2708,3519,3887,4114,4903,4960,4983,6458,6655,6742,6825,7103,7143,7158,8226,9515,9617,9702,9735,10022,10405,10852,10925,11155,11193,11223,11349,11454,11683,12189,12310,12600,13205,13227,13289,13663,13722,14037,14077,14266,14524,15087,15235,15243,15471,15530,15588,15945,15981,16026,16126,16189,16220,16327,16441,16489,16661,17017,17103,17153,17207,17323,17430,17880,17974,18044,18612,19263,19668,20424,21344,21413,21546,21827,22021,22097,22116,22490,22548,22662,22807,22876,22922,23239,23860,23874,24288,24374,24608,24710],"re-checking":[10856],"impressed":[23296],"player_lod0":[11124],"showoverheadview":[12663],"alpha":[236,2762,3561,4046,4094,4291,4502,4584,4889,5402,5530,5671,5700,5725,6858,6868,7391,8090,8222,9212,9264,9573,9913,10773,11437,11759,12008,13943,14054,14072,14306,15358,15954,15988,16561,16620,16771,16939,17013,17454,17472,17544,17567,17613,17618,17639,17692,17701,17710,17727,17734,17751,17778,17834,17990,18054,18184,18468,18522,18594,18659,18987,19088,19266,19450,19728,19762,20129,20197,20365,20686,20804,21401,21420,21590,21715,21834,21902,22210,23703],"text":[156,314,878,1065,1150,1607,1845,1861,2065,3062,3183,3278,3337,3379,4778,5220,5431,5441,5468,6612,6949,6997,7384,7525,7720,7773,7942,8375,8552,8816,8895,9446,9597,9678,9693,9733,10048,11338,11710,11844,11970,12640,13583,14454,14785,14814,15106,15852,15893,16118,16241,16520,16615,16632,16692,16795,16934,17025,17239,17262,17943,19459,20807,21301,21688,21957,22397,22568,22707,22710,22717,22760,23283,23446,23600,24322,24406,24642,24675],"ambientanddiffuse":[18877,19025],"shurikens":[14204],"samplercube":[12069,18744,19194,19938],"headroom":[15090],"sports":[2725,14098],"voxel":[12798,12934],"mytransform":[12382],"api-compatible":[10414],"automatically":[133,234,272,470,694,755,823,880,1064,1284,1612,2008,2145,2218,2225,2586,2611,2737,2802,2829,2892,2999,3116,3185,3439,3453,3545,3636,3683,3745,3776,3835,3898,4027,4277,4531,4854,4989,5211,5226,5269,5361,5646,6494,6610,6667,6679,6719,6727,7316,7367,7980,8170,9092,9187,9370,9374,9389,9401,9491,9520,9547,9573,9625,9683,9692,9757,9959,10215,10578,10810,10960,10971,11124,11149,11228,11407,11476,11694,11744,12617,12650,12790,12815,12818,12925,12997,13122,13141,13157,13224,13249,13264,13271,13316,13366,13443,13567,13615,13712,13841,13990,14181,14332,14513,14701,14730,14795,14989,15093,15223,15406,15600,15669,15929,15938,15975,16083,16206,16295,16576,16740,17082,17795,17943,18248,18375,19230,19474,20146,20462,20692,20822,21289,21395,21401,21683,21926,21957,22116,22554,22568,22653,22665,22692,22735,23156,23269,23631,23743,23865,23978,23987,24020,24306,24319,24377,24398],"'":[1493,3389,5479,7022,9929,11399,11408,13883,14509,17355,21908,22061,22455,23189,23479,23921,24461],"newanimationtrack":[5956],"disc":[2282,14228,16285,21556],"ultra-low-frequency":[12046],"gdb":[10839,11331,11582],"unitygui":[3228,3264,3269,3333,3381,3408,6617,7508,8345,8524,8772,8996,10454,12213],"ghosting":[15956,15990,16075],"findfirstenabledselectable":[9794],"hotfix":[22263],"coolgame":[17370],"positioned":[1342,2296,3209,3339,3397,4968,9018,9180,9683,9851,11195],"persist":[2850,3471,12229,13766,14139,14184,14848,15803],"xaml":[6564,24024,24112,24184,24311,24538,24593,24675],"-the":[15716],"jni_env-":[14537],"devicegeneration":[11568],"gl_oes_vertex_half_float":[1502],"per":[73,422,464,982,1235,1749,1770,2340,2352,2688,2801,2872,3083,3701,3826,3885,3954,4137,4335,4941,5255,5371,5383,5631,5669,5694,5814,6824,6913,6958,7001,7272,7318,7909,7984,8179,9407,9435,9484,9525,9554,9617,9979,10797,10844,11665,11757,12033,12391,12485,12518,12602,12801,12890,13448,13712,13900,14041,14059,14207,14218,14246,14279,14304,14733,14842,15043,15351,15443,16100,16351,17411,17869,18355,18528,18696,19051,19240,19420,19438,19540,20438,21343,21657,21891,22006,22179,23597,23994],"m_pvsportalsarray":[24729],"sendmessageoptions":[13514],"networks":[11729,13311,13466,13771,24303],"interval":[3890,5710,12411,21953,22043,22833,23613],"performed":[200,340,659,1230,1393,3020,3062,3407,3887,4447,4654,5501,5710,5782,6508,7158,7911,9934,10073,10560,11232,14334,15099,15342,15473,16151,16188,16661,16682,18397,19433,22617],"unity_4_0_1":[14396],"fewer":[10201,11753,12604,21929,22443],"horizontalslider":[8631,8890,9129],"whereas":[7319,12606,14880,18400,20405,22891,23656],"frivolous":[11957],"everything":[244,828,836,931,980,1633,6710,6988,7159,9119,9180,9494,9679,9733,11089,11263,11294,11757,11890,12223,12525,13094,13466,13717,13727,15215,15592,16090,16794,17207,17820,18566,21354,21646,21937,22397,22869,23874,24016,24187],"setkeyboardtriggercontrol":[24098],"autodesk's":[9514],"behave":[655,2272,2660,2861,2928,3042,3092,3713,4130,4146,4849,5032,5143,6449,6990,7465,7811,9559,9727,12215,12819,14325,16126,16180,16801,19065,21344,21839,22677,24527],"weld's":[22174],"computed":[1153,8162,13916,15456,15484,15516,15594,17987,18859,19034,19438,20018,20133,20415,20606],"system-wide":[14940],"chimney":[14062],"3ds":[6,298,578,7992,9291,9481],"certificate":[4316,4520,4614,4720,10433,24204],"interaction":[353,1364,2763,3676,5440,6613,9614,12456,14522,16520,16742,16766,17203,17795,20133,22026,22680,22710,23461,23997,24674],"add-":[14737],"propertydrawer":[7586],"_lod2":[11124],"center":[290,2131,2176,2497,2652,2783,2797,2890,3089,3148,3557,3746,3853,3989,4009,4048,4447,4511,4654,5012,5351,5478,5564,5775,5824,8138,9021,9361,9698,9723,10430,11129,12910,12959,13122,14205,14749,15591,15842,15867,15936,16243,16503,17004,17050,17141,17183,18078,20068,21404,22107,22253,22649,22723,23531,24539],"physical":[221,1288,2140,3761,4132,4148,4277,5202,5466,6442,7987,11412,13318,14325,15583,15727,16096,17234,22023],"trunk":[22133,22195,22244],"arrange":[624,2223,6679,8996,11198,13318,14215,14830,17234,21810],"prev":[15655],"archive":[210,4865,10915,12185,14902,15662,18547,21664,22380],"paramdefs":[1220],"'manual":[11404,11409],"g-buffer":[8087,8275,15493,18356,18361,19052],"dll'":[24280],"cmd+alt+f":[23023],"low-resolution":[17464],"higher-end":[11891],"p4v":[893,14315,21291,23635],"setcursor":[15751,24102],"clients":[13284,13326,13440,13448,13457,13504,13564,13575,13721,13727,13771],"sensitive":[914,9183,11723,16361,22956],"configuring":[1404,6660,20781,22995],"displayresolution":[4223],"indicated":[1433,2793,4048,6634,20457],"deviations":[12940,13163],"cachingloadexample":[7248],"saturation":[15962,16136],"mm":[10344,14611,14677,14716,21669],"m_cullingmask":[24879],"coins":[12282,12459],"noticable":[9310],"packingtag":[21442],"power":[665,4451,4658,5596,5801,6432,7328,8135,9258,9619,9982,10767,10848,11749,11861,12236,12653,13174,14064,14771,15465,18031,19852,20363,21889,22024,22895,22939,23296,24563],"business":[973],"imperceptibly":[9625],"reception":[1211],"-wl":[10918],"clustered":[6427,8226],"important":[234,314,531,693,836,1290,1349,1586,2124,2361,2367,2570,2631,3244,3252,3571,3707,3877,4090,4156,5008,5166,5396,5512,5788,6455,6661,6738,6860,6990,7137,7314,7776,7987,8110,8199,8772,9031,9236,9559,9612,9734,9745,9868,9934,9960,10032,10201,10434,10439,10578,10696,11149,11256,11344,11888,11965,12360,12619,12649,13028,13171,13192,13306,13333,13445,13573,13719,13732,13771,13844,13907,14054,15239,15342,15446,15517,15838,16165,16762,17200,17516,17901,18077,18381,19240,19446,19538,21401,21546,21605,21987,21993,22101,22244,22438,22743,23132,23259,23292,23393,23398,23426,23638,23785,23899,24011],"samples":[581,1256,1465,2604,4335,4620,5102,6452,8287,11193,11683,13153,14566,16076,16386,16679,17055,18028,18333,20386,20505,21977,22092,24232],"getunusedassetbundlenames":[1924],"kgfxrendererxenon":[12717],"windzone":[6010],"recipe":[7561,8113,17207],"scene1assetbundle":[1883],"comparison":[839,7110,12231,13844,15419,16311,18045,18061,19565,20689],"folders":[164,826,833,1615,1850,4470,4728,6509,8019,11287,11307,14464,14513,15098,17186,21352,21669,22322,22479,22548,23305,23635,24326,24523],"lfo's":[2247,2263],"texturesetup":[18982],"gyroscope":[1539,9616,15719,23141],"ls":[1563],"cmd+shift+8":[23066],"all":[22,34,173,179,201,219,243,311,325,369,382,438,447,464,588,595,629,666,674,684,752,821,836,935,978,998,1043,1064,1112,1133,1142,1207,1332,1393,1534,1614,1641,1763,1784,1797,1916,2006,2009,2130,2193,2358,2421,2441,2459,2484,2565,2625,2633,2669,2737,2759,2776,2796,2868,3087,3159,3198,3264,3271,3350,3394,3413,3503,3505,3538,3563,3611,3636,3705,3758,3841,3884,3913,4012,4034,4079,4112,4137,4208,4547,4647,4704,4771,4800,4824,4870,4909,4953,4983,5134,5205,5210,5231,5279,5417,5457,5518,5671,5796,5836,6382,6414,6455,6517,6581,6586,6590,6601,6606,6608,6664,6730,6738,6780,6806,6860,6931,6969,6990,7001,7090,7118,7158,7273,7322,7339,7389,7438,7766,7786,7809,7845,7901,7950,8019,8075,8099,8110,8123,8170,8275,8399,8510,8773,8890,9020,9199,9210,9223,9274,9318,9346,9358,9378,9393,9405,9432,9482,9523,9552,9569,9593,9667,9688,9698,9731,9745,9855,9868,9877,9925,9950,9962,10030,10032,10114,10411,10444,10463,10468,10484,10560,10797,10856,10915,10979,11068,11117,11119,11127,11154,11202,11223,11262,11296,11315,11345,11349,11395,11424,11527,11580,11684,11711,11744,11917,11946,11978,12204,12454,12507,12602,12642,12655,12695,12739,12887,12904,12946,12983,13114,13128,13131,13153,13160,13266,13284,13328,13428,13449,13457,13466,13564,13575,13713,13727,13766,13844,13900,13984,14013,14102,14184,14205,14237,14279,14302,14336,14406,14467,14510,14721,14749,14781,14897,15009,15067,15074,15081,15110,15169,15199,15251,15335,15343,15411,15455,15483,15522,15558,15598,15650,15760,15838,15877,15964,15997,16019,16029,16040,16084,16099,16136,16189,16209,16243,16254,16260,16363,16391,16404,16406,16420,16427,16454,16485,16555,16569,16587,16613,16656,16734,16742,16759,16789,16794,17094,17143,17149,17175,17185,17193,17203,17234,17262,17275,17387,17454,17523,17550,17786,17858,17931,18037,18060,18158,18180,18334,18383,18490,18603,18645,18681,18702,18860,18943,18978,19017,19047,19071,19135,19230,19257,19376,19419,19479,19513,19584,19737,19758,20143,20352,20603,20692,20772,20820,21344,21356,21395,21420,21546,21574,21602,21621,21646,21710,21906,21920,21940,21974,21987,22090,22129,22151,22195,22253,22320,22404,22526,22558,22569,22641,22664,22692,22710,22724,22740,22867,22920,22964,23052,23213,23269,23301,23377,23382,23392,23398,23430,23623,23724,23748,23772,23811,23894,23913,23980,23992,24044,24140,24321,24327,24346,24367,24377,24416,24522,24539,24595],"periods":[22833],"british":[11953],"overflow":[3349,17038,22719],"gimbal":[661],"plants":[18104,21941,22139,22220],"outbound":[14973],"landscapeleft":[11562],"attain":[3115,3462,3744,5815],"texures":[9343],"toolset":[24538],"adaptation":[16264],"bend":[5268,21917,21949,22255],"units":[693,1158,1423,1751,2578,2663,2864,2902,3826,4137,5124,5338,5563,6774,6824,7987,8100,9234,10020,10780,14041,14105,14207,14246,14829,14874,16128,16411,16555,18399,21886,22877],"logcat":[197,4415,4543,10840,11334,11582,14624,22294],"quickest":[846,5683,5705,11136],"nh":[20258],"speaking":[4132,4148,4932],"exportassetpath":[6509],"0x18b63bc":[22409],"ox":[22261],"inherited":[18137,23209],"fortunately":[532,9543,14530,14782,22043,22737],"notable":[11187],"practically":[579,2118,3302,11826,13718,14681],"surface's":[21596],"iphone":[211,2302,3801,4299,4589,10002,10411,10428,10441,10467,10494,10558,10588,10785,11187,11569,11606,11613,11947,14415,15081,22446,22833,22914,23137],"exampleloadingbundle":[116],"bundleurl":[7228],"devicename":[11547],"consoles":[1111,3200,8161,8313,11190,11861,14898,15438,15541,15559,16205,19250],"noop":[18198],"total":[133,956,1247,2212,2340,2352,2785,5205,5528,5720,7318,7834,8401,10796,10909,11168,11840,12367,12514,13453,14028,14067,14996,15010,15047,15074,15250,15384,15444,16013,16293,18954,21439,22436,24009],"contains":[170,327,352,395,439,589,618,696,772,826,1128,1143,1208,1333,1423,1558,1919,2134,2209,2288,3161,3199,3307,3509,3533,3578,3707,3759,3804,3877,4107,4444,4602,4714,4870,5215,5320,5405,5457,5586,5739,6588,6601,6606,6608,6866,7712,8058,8198,8779,9208,9231,9541,9925,10071,10113,10291,10580,11143,11205,11496,12655,13354,13462,13735,13846,14166,14186,14467,14594,14692,14880,14904,15098,15214,15297,15441,15573,15647,16256,17208,17347,17516,17816,17943,18241,18320,18556,18603,18880,18983,19221,20772,20820,21354,21450,21590,21666,21772,21930,21984,22447,22912,23170,23281,23298,23401,23449,23613,23732,23987,24287,24422,24713],"nscachedurlresponse":[10362],"sub-materials":[9515],"m7":[10629],"development":[196,218,259,744,897,1071,1204,1533,1550,1608,4403,4531,4658,6714,6738,7279,8334,9623,10070,10431,10557,10840,11305,11599,11944,12525,12640,13938,14004,14036,14681,14870,14964,15082,15197,15345,15647,15676,15809,18256,21356,22092,22280,22396,22906,23134,23242,23691,23737,23775,23794,23985,24322,24567,24598,24671],"diff":[888,6727,14809,20117,20215,21323,23636],"someassetbundle":[10509],"mine":[21279],"limitation":[2879,5090,8267,11839,13318,14161,15800,16837,17267,17740,17759,21927],"splits":[12517,22727],"add":[30,269,309,323,360,462,519,630,670,712,825,875,965,1007,1055,1091,1161,1284,1408,1460,1606,1614,1644,1699,1735,1759,1797,1850,1968,2064,2132,2226,2358,2449,2485,2729,2776,2979,3091,3142,3185,3252,3334,3397,3480,3532,3590,3619,3661,3684,3905,4240,4681,4933,5070,5143,5323,5430,5496,5578,5730,5820,5868,6379,6463,6508,6590,6634,6727,6758,6814,6856,6983,7082,7276,7343,7451,7465,7766,7804,7943,8113,8188,8277,9256,9476,9569,9597,9694,9845,9965,10054,10103,10161,10384,10432,10453,10461,10501,10979,11136,11195,11212,11361,11393,11528,11798,11983,12284,12647,12941,12952,13091,13118,13132,13187,13280,13316,13739,13900,14008,14036,14062,14064,14105,14278,14451,14480,14496,14613,14704,14715,14783,14856,15005,15094,15103,15192,15251,15396,15467,15495,15600,15944,15980,16058,16158,16216,16437,16564,16587,16865,17001,17024,17213,17253,17262,17438,17526,17567,17639,18033,18089,18189,18312,18548,19097,19281,19391,19808,20308,20412,20507,21104,21289,21356,21392,21403,21487,21549,21630,21638,21790,21832,21897,21915,21939,21951,21969,22193,22242,22426,22593,22918,22991,23272,23321,23377,23436,23465,23631,23726,23756,23761,23819,23881,23988,24134,24539,24556,24608,24653,24676],"arrays":[648,5205,7395,10948,16833,20748,20928,22737,23386,23863],"accentuates":[14204],"submit":[4227,4671,9673,10421,10432,10540,11603,14315,16042,16965,21769,23649,24321,24579],"listenports":[12535],"let's":[486,1211,4487,4743,5049,7418,7946,8374,8965,9218,9747,10111,10304,10352,11453,12367,12612,12883,12930,13088,15525,16904,17209,17868,17975,18569,19808,20185,20464,22193,24024,24290],"factor":[1230,2386,2394,2401,2419,2439,2447,2456,2464,3621,4122,4979,5860,7987,9615,9732,16079,16099,18399,20554,20926,21917,22121,22161,23894],"'unity'":[11399],"cube's":[5167,14870],"gem":[12455],"anisotropic":[4941,5662],"hinge":[3446,3486,10970,14010,23290],"createdirectory":[22059],"indirectly":[225,8206,11356,21607],"lowpassfilter":[2592],"control":[147,259,309,342,379,393,406,436,464,603,632,692,755,833,1173,1288,1338,1471,1604,1734,1758,1842,2048,2118,2199,2296,2402,2457,2626,2735,2759,2790,2841,2945,3057,3095,3234,3267,3333,3413,3545,3707,5023,5121,5178,5283,5414,5528,5695,5707,5785,6360,6414,6740,6810,6876,7189,7340,7506,7538,7759,7776,7940,7987,8084,8116,8179,8375,8509,8772,8890,8996,9191,9318,9569,9575,9617,9696,9741,10444,11519,11557,12296,12683,12687,12882,12958,13094,13274,13293,13453,13460,13717,13772,14000,14155,14311,14330,14454,14510,14763,14809,14834,14851,14870,15095,15585,15596,15736,15850,15874,15936,16042,16126,16164,16313,16476,16495,16520,16558,16637,16692,16737,16746,16754,16767,16941,17026,17062,17082,17203,17209,17234,17297,18859,19045,19159,20418,21275,21401,21427,21544,21607,21611,21629,21636,21790,21892,21919,21951,21957,22253,22443,22527,22553,22590,22719,22906,22975,23006,23360,23618,23620,23690,23901,24050,24159,24548],"including":[305,382,712,997,1106,1111,1189,1337,1410,2301,3893,4875,6460,6728,6969,6992,7127,8086,8269,8339,8775,9679,9691,9889,10032,10410,10427,10453,10949,11208,11263,11298,11350,11588,14199,14467,14928,15009,15099,15459,15487,16090,16932,17238,17385,17931,19494,20229,21566,21669,21695,22436,23095,23270,23619,23635],"treble":[12041],"torrent":[10099],"modeller":[21597],"radial180":[16504],"unitygetinput":[24096],"keyfile":[23412],"mpes":[3711],"commandline":[6508],"mit":[6712],"complete":[76,181,857,1063,1393,1623,1650,1929,1966,3899,4961,6999,7859,7919,8373,8819,9979,10107,10505,11271,12918,13328,14139,14302,14334,14782,15144,15450,15468,15496,16516,16823,17244,17821,17954,21640,22567,23457,23774,24408,24713],"itself":[349,439,621,1643,2012,2140,2199,2716,2945,3134,3141,3191,3267,3487,3839,4933,4977,5105,5168,5532,5785,6732,6776,6936,6967,7468,7804,7944,8121,8401,8663,9914,9978,10033,10075,10338,10393,10444,12442,13216,13289,14306,14786,15170,16246,16457,16520,16654,16736,16792,17515,17558,17951,18033,18089,19220,19230,19466,20390,21356,21401,21949,21967,22151,22256,22289,22548,22558,22590,23153,23390,23724,23790,23978,24143,24384,24608],"polyline":[3047],"mimics":[20273],"multiplied":[1235,2762,15330,15971,16003,17019,17908,18183,19309,22892],"imgtec":[11803],"flowers":[21834,22226],"0eabi-g++":[1577],"armv7":[10410,14518,22520],"xbox":[8313,11245,11861,12606,12717,12763,13638,14377,16205,18296,19504],"saturate":[12020,19869,20297,21137],"monodevelop":[1069,1205,6951,12639,14495,17239,22265,23313,23745,24130],"authorized":[23878],"startdz":[7175],"applications":[6,78,265,1049,1551,1562,2421,3196,3634,3707,6486,7223,9312,9367,9459,9672,9719,9963,10088,12287,13177,13759,13878,13913,14367,14612,14929,15068,15213,15711,16245,18254,20134,21287,22368,22430,22913,23303,23401,24159,24342,24360,24373,24529,24538],"wrote":[12328,19123],"designer":[1375,12916,14924,21619],"profesional":[23740],"unity_branch":[18312],"graffiti":[5486,17454],"quotation":[21708],"black":[291,4094,4289,4583,4930,5045,5580,6866,6997,9303,9571,11726,14108,14785,16136,16223,16356,16441,16588,18234,18880,19152,20068,20749,21344,21614,21718,21976,23530],"meshcolliders":[2064,5135,7994,10451],"shortcut":[11195,13878,15847,15871,18949],"crevices":[12941],"icustommessagetarget":[11531],"wanttoclose":[9823],"objective-c++":[14716],"wood":[9867,21569],"structured":[392,6641,22567],"json":[5448],"_rimcolor":[19851],"colorful":[4003,13873],"html":[242,1078,1599,4399,4527,4778,5444,9923,17442,21691,22284,22446,22544,23170,23446,23764,23987,24358,24391],"unity_3_1":[14390],"maintex":[11998,17864,18520,18592,19821,20181,20497,20802],"ambient-occlusion":[21930],"loadachievement":[13656],"animation":[293,307,317,321,330,357,366,380,405,434,441,463,583,602,605,619,625,627,664,674,679,1060,1469,1687,1690,1734,1758,1783,2142,2155,2191,2223,2617,2619,2630,3120,3647,3835,3909,4034,4083,4952,5148,5268,5404,5561,5752,5951,6464,6578,6665,6868,7338,7389,7778,7968,7982,8026,8136,9240,9315,9507,9531,9741,9977,10198,10291,10794,11133,11343,11473,11496,12308,12548,12600,12812,12948,13170,13205,13451,13702,13998,14267,14827,14849,14916,15010,15387,15567,15592,16504,16762,17207,19996,20419,21372,21543,21619,21810,21924,21965,22235,22552,22874,23034,23111,23358,23723],"create":[31,155,179,237,294,318,366,464,614,654,698,752,847,997,1048,1128,1160,1284,1375,1394,1467,1471,1535,1570,1605,1615,1686,1696,1799,1848,2036,2118,2124,2140,2154,2160,2226,2253,2269,2372,2425,2511,2529,2557,2596,2615,2638,2694,2737,2776,2801,2870,3011,3092,3134,3198,3268,3397,3423,3480,3534,3578,3606,3713,3751,3806,3818,3873,3985,4006,4027,4092,4150,4291,4502,4584,4721,4873,4922,5068,5096,5159,5202,5206,5219,5283,5323,5415,5420,5431,5470,5519,5731,5764,5820,5866,6366,6433,6442,6507,6603,6620,6670,6839,6856,6940,6979,7158,7276,7314,7403,7465,7946,7994,8022,8113,8377,8510,8772,8890,9053,9179,9224,9233,9355,9360,9460,9500,9559,9568,9576,9597,9630,9677,9741,9851,9877,9965,10102,10106,10302,10373,10433,10484,10831,11055,11124,11133,11212,11287,11356,11424,11488,11499,11557,11638,11730,11834,11904,11955,12032,12204,12753,12790,12879,12904,12943,12965,13087,13119,13131,13263,13271,13275,13285,13570,13729,13769,13854,13883,13984,14004,14073,14100,14184,14205,14266,14279,14281,14300,14325,14343,14408,14494,14524,14676,14781,14829,14852,14868,14900,14989,15030,15103,15153,15189,15573,16158,16374,16563,16648,16716,16762,16794,17000,17024,17088,17159,17213,17234,17239,17364,17387,17464,17751,17798,17819,17943,18412,18569,18603,19248,19391,20782,21279,21352,21378,21408,21422,21556,21574,21615,21630,21666,21795,21812,21834,21842,21897,21916,21939,21949,21957,21960,21981,21984,22052,22099,22101,22189,22193,22242,22304,22448,22610,22635,22699,22714,22716,22918,23082,23249,23269,23301,23373,23400,23627,23743,23760,24046,24133,24188,24312,24377,24391,24549,24608,24651],"below":[179,327,458,581,705,755,875,1001,1070,1109,1296,1419,1473,1522,1600,1612,1658,1736,1781,2282,2361,2367,2586,2740,2796,2832,2907,3068,3147,3191,3566,3735,3823,4083,4125,4139,4174,4535,4589,4678,4791,4888,4933,4973,4993,5210,5393,5513,5668,5693,5774,5861,5876,6360,6375,6466,6778,6949,7114,7384,7538,7894,7985,8212,8276,8307,9187,9208,9264,9328,9373,9483,9593,9720,9745,10086,10343,10485,10809,11120,11127,11167,11307,11398,11407,12512,12598,12620,12640,12655,12689,12819,12959,13460,13466,13613,13876,13887,14022,14467,14783,14806,15012,15087,15100,15194,15524,15585,15615,15893,16067,16180,16246,16346,16370,16501,16733,16755,16763,16822,17207,17257,17348,17815,17861,18224,18394,18498,18566,18863,18943,18968,19220,19241,19474,19791,20145,20166,20367,21290,21352,21420,21605,21613,21715,21792,21843,21851,21907,21917,21969,22246,22258,22365,22874,22965,23173,23280,23457,23728,23792,23865,24713],"gl_arb_depth_texture":[15550],"continuity":[2286],"simulating":[1363,6866,11130,14062,14164,16060,20820],"altered":[6458,10109,11549,16246],"deleted":[637,813,839,1615,3590,4129,4872,6780,7352,12454,13498,14603,14864,22975,23667],"unity_wsa_8_1":[24352],"worldpos":[19972,20448],"designers":[1351,6976,13816],"encountered":[12652,19123,22862,24145,24606],"multiple":[276,300,312,350,374,393,589,605,632,673,684,877,1206,1396,1755,2017,2118,2223,2252,2268,2296,2559,2633,2668,2747,3159,3386,3480,3592,3758,3830,4107,5008,5160,5206,5255,5561,6408,6547,6594,6634,6839,7347,7909,7981,8091,8779,9020,9263,9407,9435,9484,9525,9554,9559,9614,9679,9714,9718,9741,10032,10209,10449,10780,11293,11500,11761,11888,11986,12504,12600,12695,12786,13163,13314,13758,13906,14733,15110,15221,15340,15444,15487,15658,16132,17090,17438,17516,17552,17821,18375,18557,18696,18934,18968,19032,19130,19248,19257,19439,19457,19738,20390,21393,21398,21670,21689,22109,22522,22999,23156,23623],"'delete'":[1192,1441],"mod":[1119,1465,2272,22095],"opengles2":[1506],"instantiation":[10126,12231,12610,13462,13742,13772,16794,23215],"wrapping":[5652,9612,18347],"cases":[181,211,367,404,516,586,674,1194,1843,2226,2611,2620,2999,3322,3759,3866,4263,4547,4647,4704,4800,4900,4964,5164,5289,5500,6443,6547,6780,6990,9543,9593,9717,9891,9925,10423,10928,11199,11499,11694,11823,12182,12229,12602,12877,12926,13112,13144,13176,13351,13439,13451,13575,13919,14076,14117,14278,14545,14752,14880,14938,14974,15585,15600,16053,16556,16710,16801,16959,17076,17188,17257,17552,18141,18377,18681,19065,19248,19419,19436,19496,19538,19773,20423,20822,21080,21368,21372,21407,21552,21976,22023,22113,22278,22413,22603,22662,22729,22862,23168,23290,23814,24022,24143,24287],"speak":[985],"adventure":[5457],"disclaimers":[17045],"real-estate":[3430],"objectlinear":[18775],"temporary":[8118,8285,9934,10075,11322,11506,12611,16595,21370,24093],"smoother":[580,5614,5739,11921,12453,13722,15903,17010,21579,21937],"chosen":[1417,1783,1852,2697,3625,3806,4429,4557,4879,4932,5008,5101,7365,9612,10042,10292,10766,12689,13872,14226,15239,15405,15601,15964,15997,16172,21843,23626,24581],"methods":[236,752,1789,2003,2685,4797,4948,9593,9679,10423,10921,11145,11259,11456,11585,11779,11869,11959,11976,12192,12450,13298,13752,14285,14510,14721,14842,16517,17269,20784,21411,21426,21575,22456,22669,23364,23779,23814,23881,24238,24447,24661,24669],"i++":[1272,5505,6788,6915,6929,10254,12241,15258,16912,22751],"modifiers":[19273],"upgrade":[6690,9425,9558,10429,22323,22959,23207,23978],"prototype":[386,1205,4873,13087,21927],"changelists":[23657],"t":[84,343,770,1919,4797,6787,7287,8141,12952,13187,13883,14748,15110,16792,20722,21497,21614,22955,23014],"modelled":[344,6669,6943,10212,14870],"rebuild":[78,1284,1930,4459,4717,11353,22426,22622],"duration":[313,10796,14107,14169,16760,21674],"notional":[3759],"whichever":[2686,6948,9361,9976,14544,20810,22249],"field's":[16537,16889],"resolution":[877,1312,2750,3056,3401,3428,3565,3992,4169,4495,4570,4661,4751,4893,4940,5015,5626,5665,5690,6437,6557,7134,8162,8401,9260,9655,9721,9856,10942,11155,11251,11737,12408,12705,12804,13892,16015,16074,16096,16300,16327,16668,16682,17000,18040,20959,21401,21569,21856,22608,22673,23159,23705,24015],"01ms":[15009],"fixing":[4002],"sub-branches":[22244],"subwoofers":[12041],"tick":[6663,15082,16392,21765,23617,23775],"identifies":[4317,4521,4615,4721,8085],"optimizations":[1203,6458,8224,10841,10911,10920,11496,11732,11870,11965,11975,12192,12457,12600,13774,13956,14010,15474,22123,23774],"mock":[207],"writing":[3927,4443,4713,5222,5309,6839,7127,8075,8178,8914,9180,9363,9951,11249,11469,11506,11989,12469,12687,12777,13820,13936,16840,17518,17790,17792,17866,17931,18252,18311,18497,19002,19224,19230,19431,19456,19551,20133,20351,23894],"prioritize":[483],"decreasing":[2253,2269,3617,5164,5429,8885,11124,14164,15520],"collector's":[14603],"strenuous":[9617],"morpher":[9509],"call":[53,225,255,316,327,665,762,2003,2201,2764,3802,3955,4358,4640,6449,6508,6868,7223,7307,7776,7948,8087,8147,8738,8842,8890,9112,9180,10200,10304,10393,10414,10456,10567,10843,10944,11290,11350,11527,11553,11599,11726,11826,12496,12687,12734,12751,12820,13227,13316,13462,13565,13573,13639,13706,13729,13771,13904,14117,14510,14721,15005,15444,16392,16794,17215,17269,17997,19457,19779,20603,21543,21891,22195,22490,22623,22737,22986,23175,23213,23409,23447,23812,23816,23903,24024,24112,24145,24411],"def-finger_ring":[1681],"specify":[328,360,372,1008,1607,1792,1848,2022,2609,2841,2872,3250,3303,3624,4045,4778,4796,4889,4968,5018,6515,6675,6760,7329,7766,8138,8147,9732,9849,9858,9968,10048,10077,10880,11290,12876,13576,13945,14184,14344,15217,16112,16461,16554,16646,16754,17257,17903,18139,18400,18564,18663,19028,19286,19564,21383,21415,21743,21835,21861,21906,21920,22473,22587,22642,23310,23601,23770,24046],"solidcolor":[20829],"kerneltwo":[6637],"setikpositionweight":[10294],"environment":[220,1533,1843,2449,2706,2991,3644,3843,3866,4929,4983,5323,6508,7279,7997,8112,8226,9910,11211,11440,11919,12042,12640,13271,13722,13772,13916,14681,15938,15975,17297,18827,19172,21543,23737],"soloed":[595,1420],"comment":[13328],"jar":[14512,21663,22300],"symbols":[4210,4533,4625,4696,4773,4789,9947,10915,11723,14451,18568,22416,23338,24145],"nometa":[20433],"config":[1494,4240,4681,8035,11327,21319,21677,23486],"items":[156,173,309,697,4234,5206,6681,8039,9688,10041,10925,13455,13576,14771,14870,15007,15100,15239,16742,21772,22978,23677,23726],"authorize":[23878],"'texture":[22727],"effects-":[3534,3608,9579,16216,16437],"entries":[20748,21463],"toggling":[1178],"corrections":[13293,16170],"fireballs":[14107,14204,14259],"entities":[4104,14017],"editorwindow":[7467],"suits":[2427],"distinction":[21544,23899],"he'll":[3843],"deltas":[15611],"mystring":[7514],"grids":[6610,14024,22568],"non-connected":[12796],"packet":[3898,13568,13713,13766],"warnings":[2473,6677,11580,13997,15025,23239,23791],"curvature":[16176],"screens":[3434,6404,9727,9741,21683],"unison":[22970],"iselecthandler":[21766],"in-place":[17206],"details":[170,229,277,314,462,591,603,607,764,980,1008,1092,1108,1297,1464,1514,1545,2006,2132,2251,2267,2285,2326,2333,2344,2355,2385,2393,2400,2418,2424,2438,2446,2455,2476,2500,2559,2617,2645,2654,2692,2746,2766,2775,2787,2800,2839,2869,2976,3036,3046,3062,3090,3132,3156,3234,3242,3257,3301,3364,3396,3422,3475,3500,3525,3544,3553,3605,3647,3672,3682,3710,3757,3775,3838,3864,3886,3904,4022,4042,4087,4131,4147,4155,4169,4494,4569,4660,4750,4780,4853,4920,4949,4980,5033,5140,5197,5222,5281,5321,5343,5353,5370,5384,5394,5414,5428,5439,5455,5485,5523,5666,5691,5713,5729,5781,5816,5831,5865,6357,6447,6597,6640,6675,6681,6944,6981,7013,7124,7354,7761,7774,7776,7825,7941,8085,8122,8128,8279,8374,8772,9266,9383,9593,9848,9867,9974,10049,10053,10556,10842,11120,11141,11156,11329,11347,11450,11696,11799,11925,11971,12048,12644,12754,12815,13141,13213,13269,13285,13461,13566,13572,13700,13737,13765,13853,13935,14022,14046,14053,14061,14146,14154,14163,14183,14203,14212,14219,14235,14251,14258,14265,14277,14299,14319,14321,14323,14514,14748,14787,14959,15060,15073,15092,15114,15401,15404,15452,15481,15512,15556,15586,15693,15840,15923,15944,15980,16051,16084,16120,16186,16218,16281,16317,16354,16385,16418,16439,16509,16536,16644,16671,16685,16707,16732,16763,16957,16969,17022,17044,17060,17075,17106,17115,17199,17446,17450,17454,17460,17464,17500,17504,17508,17512,17522,17541,17546,17554,17560,17564,17610,17615,17620,17624,17628,17632,17636,17669,17673,17677,17681,17684,17689,17694,17698,17703,17707,17712,17716,17720,17724,17729,17780,17784,17986,18050,18076,18160,18223,18394,18489,18651,18676,18964,18990,19044,19148,19240,19282,19386,19419,19478,19736,19754,20421,20773,21346,21360,21561,21653,21828,21858,21941,21955,21967,22273,22287,22354,22440,22609,22687,22956,23619,23810,23912,24210,24223],"inverse":[356,1470,2623,10290,11083,12607,20703,21631],"machine's":[2020],"quadrangulated":[3633],"dots":[1762,4317,4521,4615,12886],"deprecated":[258,6686,14373,16021,16283,16318,22905,23236],"myfunction":[12217,23176],"creations":[1208],"significant":[860,3883,5310,6919,7308,11683,12495,13293,13717,13902,15251,16709,17003,17188,21413,22743,23242,23301,23376,23894,24046],"itunesconnect":[9673],"p_freq":[1214],"playmovie":[21655],"magnitude":[165,1745,1773,2234,4837,5829,6656,7106,13011,21953,22879],"mcoord":[21043],"roughy":[2655],"here's":[414,743,4473,4731,6626,7224,9346,10151,10784,11894,12231,15840,19793,20184,20508,23881,24346],"m_center":[24921],"1m":[14829],"tegra":[5669,11188,11804,11861,12185,12509],"participating":[13729],"neutral":[5501,5659,6824,16199,17496],"mobile":[151,194,227,1071,1111,1280,1473,1517,2009,2299,2604,3761,4198,4510,4593,4686,4762,4932,5649,7137,8166,8312,9597,9947,10024,10774,10903,11449,11545,11607,11609,11693,11728,11733,11861,11870,11944,12180,12195,12451,12604,13775,13897,14359,14978,15342,15437,15459,15487,15550,15675,15677,17537,18300,18681,19058,19088,19251,19292,19446,19494,20822,21967,23265,24538],"idle":[333,468,603,1755,5728,10802,12960,21394,21617],"areamask":[12901],"clip":[309,323,331,366,391,434,449,534,605,629,670,684,1112,1464,1759,1786,2152,2155,2209,2223,2256,2271,2426,2529,2549,2559,2619,2641,2709,3356,3794,4912,5409,5758,7338,9047,9993,10580,11344,11506,12180,12959,13864,15592,17210,18056,19085,19451,19972,21372,21810,22557,23281,24873],"colder":[14066],"contained":[164,434,752,1096,1290,1413,2772,4004,6610,6983,7271,8693,11259,15199,15396,16457,18459,21664,21669,22568,23301],"screenuv":[19917],"tagging":[10623],"alphapart":[17904],"_normalmap":[20469],"consumers":[11951],"talk":[1047,12367,13300,16792,17518],"glonass":[10634],"designed":[318,580,741,1108,1349,2009,2229,3165,4833,4899,5767,6859,6943,7462,7804,8775,9253,9614,9725,10027,11527,11913,14112,15889,15903,16052,16103,16963,17110,17384,21356,21560,21573,21619,21930,21965,22845,23082,23134,23980,24716],"cappucino":[9412],"physicsmanager":[5914],"predict":[5298,13167,13198,13724],"bugfix":[151],"post":[236,991,9191,11251,11768,11893,12321,15804,15902,16188,16661,22099,23243,23881,24208],"deserialized":[16822],"disappear":[4041,6874,8392,9208,9675,10048,14102,15195],"easily":[1376,3125,3426,5159,5456,5799,6592,6981,7114,7354,7823,7892,8106,9266,9346,9543,9617,9677,9712,10108,10578,10903,10925,11520,11733,11919,12444,12525,12820,13575,13823,14005,14073,14530,14770,15241,15969,16001,17017,17997,21552,21573,21619,21957,22422,22737,22868,22927,23382,23901,23992],"hides":[19065],"subtle":[2449,5282,7341,11139,14155,14828,19090,21551,21910,22864,23607],"warp":[6569,24116],"comes":[401,448,469,1160,1632,2735,2801,3673,4890,4932,5285,5764,5810,6839,7141,7825,9438,9612,9735,10854,11549,11917,11956,13755,14125,15585,17050,17207,17276,17798,17864,19385,21916,22544,22610,23740,24019],"getstringutfchars":[14579],"flange":[2367,2371],"arrive":[181,1602,13449,15280],"opposite":[1798,3520,6655,6827,10292,13822,13889,19266,22882],"organizer":[10431,10916,11331,22446],"streamreader":[24260],"virtualenv":[6363],"completeness":[746],"childcount":[6785,16882],"connection":[850,1598,2047,4340,4623,6960,6984,10362,11407,11731,13312,13366,13428,13721,13727,13763,14974,15067,15211,15636,17330,22493,22924,23137,23461,23682,23776,23994,24199],"as_restore":[17414],"electrodes":[14184],"args":[14806,21314,24031],"onprecull":[7913],"framebuffers":[22435],"rendersettings":[5947,18887,24732],"wwwconnection":[10345],"hingejoint2d":[6048],"rig":[444,1632,2213,2609,3118,6386,6412,6433,7973,8021,8136,9322,11477,11499,14831,15237,23364],"braketorque":[5782],"retrieves":[23980],"reallocated":[22740],"wished":[22364],"setbool":[413,9770,11486,13013],"re-created":[2052],"cpp":[1208,1571,6564,13438,14502,14677,14716,21679,24112,24314],"-assetserverupdate":[6494],"materialeditor":[18501],"coordinates":[187,1766,2076,2679,3380,3407,4083,5048,5748,7852,8287,8402,9054,9897,11635,12681,13913,16391,16643,17139,17181,17204,18157,18264,18775,19066,19874,20395,20841,21083,21404,21977,22111,23386],"micro":[4357,4542,4639,10923],"sales":[934,990,1002,13880],"underclocked":[10658],"removal":[10764],"control'":[3346],"whatever":[449,838,1312,1353,1968,3909,5731,7159,9630,12038,12617,12733,12753,15153,16792,17869,18231,18709,21408,21422,21617,21981,22603,23605],"-buildlinux64player":[6497],"attribute":[1096,1284,2002,3927,4395,4522,5205,6592,7320,7419,7583,9206,13578,14441,14660,15617,16367,16803,18687,19162,22499],"plateaux":[21843],"transformdirection":[11093],"installer":[1968,6353,9334,9671,10062,17387,22531,24447],"reimported":[2009,23254],"audio###":[23106],"command-backspace":[10157],"emits":[3686,10782,14074,14184,14244,14304],"playback":[238,283,464,685,1150,2284,2572,2628,3781,6584,6680,8082,9620,9993,10583,10958,11866,14283,15795,22056,22915,23803],"non-caching":[7222],"undercuts":[6443],"flow-chart":[603,606,625,2224],"_amount":[20001],"weak":[4820,12282],"'return":[11403],"unity_lodfade":[3625,20767],"region":[2122,6995,11132,12795,14244,14304,17134,17177,22866,24404],"getconstructor":[24259],"arranged":[179,398,589,706,1465,3155,5586,7083,8936,9111,13822,14302,14828,16733,21386,22092,22249,23393],"'foobar'":[23817],"instantaneously":[5742],"movietexture":[3780,5988,9621,21368],"cmd+shift+f":[23024],"ships":[9559,9568,17837],"m_lightmaps":[24753],"password'":[1608],"highlights":[11147,11925,11995,15535,15560,17525,19289,21571],"numberofobjects":[10251],"downside":[5169,13274,13717,13986,15457,15485,16837],"togglebool":[8587],"uv-scrolling":[11906],"showing":[466,1288,2815,3794,4444,4714,7484,8123,8231,14878,15036,15134,24012,24181],"alternate":[688],"myref":[23257],"skyboxes":[2995,5316,9560,13962,19775,21554],"feet":[314,2177,2622,10292,14830,15592,21811],"lightmap_off":[12070],"language":[606,625,2224,4468,6625,6942,8039,9948,10968,11464,11750,12204,12689,12753,14454,14604,14681,17189,17800,17820,17942,18301,18680,19105,19207,19376,19459,20826,23895,24139],"padding":[1247,3347,4973,9700,16449,16483,17147,21410,22568,22661],"suggest":[10449,11989,14072,14140,15938,15975,21862],"lengthy":[7279],"homogeneous":[1783,20845],"release":[481,2313,6602,8205,9559,10421,10913,11302,11489,11925,12542,12644,13871,14603,14777,14965,16988,17128,22106,22416,22735,22920,23796,23977,24194,24321,24579,24671],"cooking":[8113],"compiled":[1203,4467,4725,4824,5229,6706,10412,11750,11983,13434,13975,14495,14512,14698,17187,17943,18312,18951,19479,20462,21356,21615,22388,23298,23865,24288,24326,24356,24364,24522,24529,24669],"numeric":[712,2215,2633,4778,7384,9947,14285,16692,16941,18303,21976,23283,23863],"damaging":[14891],"amounts":[11169,12287],"jclass":[14537],"precalculated":[5280],"detracts":[14071],"recording":[391,585,678,1466,3762,4622,6584,18104,22083,22097],"m_depth":[24878],"-buildlinuxuniversalplayer":[6498],"banding":[4291,4502,4584,9195,17096],"downloadable":[10482,10569,23134],"m_receiveshadows":[24893],"arises":[1284,11226,16995,21809],"matched":[1230,6664,22902],"allow-http-request-headers-from":[17295],"icon_128x128":[9635],"-show-screen-selector":[6560],"submitted":[954,990,1005,1039,4603,7310,9623,11549,14334,22486],"processed":[1159,1256,1613,2745,3007,6414,7920,8888,10801,10852,13438,13466,13639,14644,15014,20851,22833],"clean":[10150,14072,14441,14832,17413,19589,21279,22368,22418,22920],"blendshape":[3652,9530],"lesson":[20809],"myapp":[18563],"re-compressed":[10580],"pvrtc":[236,1534,5598,5672,5694,10581,10773,10942,10956,11851,12182,15349,22441],"rgb":[236,4903,5631,5669,5694,7001,8936,9916,10773,11256,12000,15354,15470,15498,15950,16012,17844,18083,18416,18508,18580,18659,18921,19016,19175,19286,19455,19713,19821,20181,20467,20791,21589,21902,24416],"upward":[2122,9357,14067,14155,14243,14259,14307,22867],"player_lod2":[11124],"ambience":[6990],"basic":[181,221,288,408,598,839,1047,1198,1457,1471,1553,1643,1794,2647,3091,3426,4447,4565,4654,4981,5228,5282,5346,5395,5405,5513,6778,6976,7761,8039,8128,8298,8523,9643,9725,9970,10105,10442,10560,10856,11605,11894,11968,12042,12347,12700,13300,13429,13724,13910,14098,14138,14442,14612,14704,14900,15106,16026,16167,16199,17188,17430,17470,17522,17815,17822,17915,18111,18569,18896,18983,19220,19255,19408,19442,19457,20780,21617,21671,21691,22085,22193,22243,22459,22569,22634,22979,23082,23386,23803],"loadbundle":[62],"colour":[304,630,1446,2209,5609,7389,9275,15095,15903,16162,16365,16760,21386,21569,21586,21598,22721],"settingsgroups":[21496],"drive":[434,573,1488,1555,2022,2882,6547,9741,10971,11419,15653,15808,16233,22607,23461],"blackberry-deploy":[1543],"interior":[2130,5065,11139,21557],"discussing":[21984,22891],"broadly":[7376,17349],"constantly":[3866,11169,12454,13217,13305,22370],"alternative":[318,4107,6822,8023,8095,10106,12882,13941,15153,15396,15869,17558,21969],"other-":[12041],"distinguish":[2631,11621,13275,16259,20146],"substantially":[13982],"triangles":[179,3662,3671,3706,6659,7825,7995,9255,9379,9394,9584,10201,10766,10808,11119,12606,13901,14225,14828,14880,15078,15446,15456,15484,16351,18442,20605,21929,23386],"ondrop":[21763],"effects":[329,534,639,762,821,1110,1125,1145,1206,1330,1413,1456,2118,2136,2139,2203,2276,2360,2365,2421,2484,2557,2559,2734,2822,3091,3571,3611,3711,4035,4096,4114,4300,4584,4925,5099,5149,5216,5500,5712,6587,6590,6603,6606,6612,6856,7122,8128,8320,9184,9560,9988,10449,10616,10971,11133,11146,11249,11443,11864,11880,12229,12491,13639,13718,14017,14038,14140,14155,14204,14252,14254,14266,14281,14307,14878,14891,15546,15560,15861,15916,15938,15976,16017,16023,16033,16062,16139,16190,16209,16247,16257,16273,16287,16323,16358,16366,16398,16406,16427,16569,16581,16603,16648,16659,16675,16759,16787,16996,17048,17051,17095,17136,17159,17178,17234,17525,17751,17796,17820,18361,18391,18490,18603,18692,19036,19071,19221,19257,19391,19458,19513,19763,20229,20445,20878,21429,21629,21842,21924,21952,21962,22026,22097,22732,23264,23292,23379,23605,23717],"newshader":[18578,20789],"intarray":[22749],"newly":[211,684,2601,3232,3397,10473,13504,17421,21349,21680,22197,23746,24643,24653],"cards":[3586,6547,8307,9258,9918,11146,11464,13939,15280,15459,15487,16205,16576,16687,17814,17869,17931,19219,19283,19391,19419,20828],"detailsamplemaxerror":[24795],"multi":[833,6407,9515,16528],"retarget":[394],"side-by-side":[706],"placement":[6986,9725,11430,12816,12889,13147,21922,21940,22133,22214,22606,22677],"-buildwebplayerstreamed":[6504],"frametime":[10790],"concerned":[3644,11573,11819,12207,21619],"rubber":[187,5790,6447,21569,21573,21960],"buy":[133],"projectile":[5730,7106,11923,12231,12454,14125],"reasonably":[9614,11871],"vsync":[4953,15010],"life":[652,1458,1538,4034,4100,5512,9183,10339,12606,14264,14304,16284,16320,16658,16673,17093,17377,18040,24538],"gammaspace":[4202],"install":[158,205,920,1534,1556,4399,4527,6359,9215,9422,9488,9536,9558,10060,10430,13434,13877,15810,17347,17385,18254,20134,22284,22322,22551,22912,22947,23151,24168,24199,24223,24391],"generates":[486,661,1633,2056,4887,4989,5231,5403,5469,5543,11361,14885,15938,15975,16084,20353,21927,22256,22554,23987,24311],"threadstatic":[1104],"datastream":[16838],"asset's":[1068,5492,10049,11349],"squash":[14204],"ping":[13421,13766],"surfaceoutput":[11997,18519,18591,19725,19802,20137,20180,20356,20496,20801],"permanent":[6778,12611,23605],"performs":[203,10067,10470,11398,13742,16079,16661],"energy":[2386,2394,2401,2419,2439,2447,2456,2847,3074,3692,4045,4154,5861,14017,14102,14278,21579],"control-clicks":[23902,24410],"uvdetail":[19894],"shades":[7389],"directx11":[16065,16311,16584],"penetration":[4121,4142],"brings":[1298,12196,22655,24527],"logicalcopyinverted":[18197],"dir":[11654],"speeded-up":[22026],"float":[305,328,354,410,641,666,1099,1238,1713,2102,2215,3098,3719,3920,5504,6870,7166,7517,7665,7780,7860,8633,8893,9051,9615,10187,10874,11672,11750,12058,12264,12757,12958,13448,13595,13827,13947,14082,14119,14204,14504,14679,14713,15253,16706,16812,16956,18075,18272,18333,18851,19133,19186,19442,19865,20258,20410,20486,20845,21999,22236,22807,22891,23189,23850],"orbit":[15844,15868,18410],"apppath":[9670],"ntrampolines":[22473],"non-monobehaviour":[23312],"desirable":[9727,13451,22608,23447],"every":[78,564,1108,1152,1360,1934,2474,3076,3273,3694,3887,4038,4180,4721,4953,5000,5285,5745,5864,6808,6913,7308,7535,7942,8112,8347,8537,8890,8996,9208,10135,10456,10782,10856,11147,11211,11356,11476,11770,11889,11970,11983,12199,12454,12496,12650,12818,12880,13290,13571,13630,13713,13921,14460,15594,15644,16979,17119,17204,17430,18077,20928,21927,21985,22043,22637,22948,23268,23623,24024,24447],"serializedpropertytype":[7715],"cyclone":[10719],"intermediate":[182,2074,6874,7389,9184,10434,11983],"heightmaps":[21845,21912,21975],"postprocessor":[2065],"intentionally":[1315,5876,12811,14674,16538],"reorder":[22669,23264],"getunity":[23176,23420,24448],"onsubmit":[21769],"extremumslip":[5791],"optional":[269,516,1204,2826,3128,3450,3568,4035,5077,5513,5765,6360,6428,6494,6664,6994,7526,7959,8781,9665,10901,16154,16727,17927,18564,18983,19157,19735,20400,21860,23901],"declarations":[12695,17986,24108],"fbx":[2,345,585,1051,1685,1693,2008,2157,2609,3652,5308,7964,7984,8021,8136,9238,9311,9373,9415,9429,9480,9532,9548,17208,21394,23368],"taller":[17157],"componentmodel":[10422],"policy":[17275,21420,23880],"cmd+p":[23053],"terrible":[5169,12344],"'get":[1596],"s4":[1525],"seamlessly":[2164,3579,6421,8165,9265,21897],"connectedplayers":[13359],"avatarikgoal":[10327],"pushed":[2062,14074,15235],"decoded":[1110],"breakpoints":[12650,24136],"pirates":[11549],"dx10-level":[7121],"buffer's":[15509],"export_api":[12706],"blackberry":[1472,1516,1537,1550,1552,1598,11337,14476,14898],"m_lastusedresolution":[24759],"nfaa":[15909],"cancelling":[11226,16056],"algorithms":[6622,15902,22744],"getbestinstallmethod":[24443],"care":[133,1312,3303,5311,6719,9267,9743,10198,10304,10923,10968,11202,11768,11951,13170,14266,14751,16313,16737,19047,19072,19230,21560,22860,23863],"accommodate":[9187,22858],"addressed":[6740],"extremum":[5794],"emissive":[8215,11209,15467,15528,19246,19846,21560,23709],"matrices":[20692],"minimizing":[10765,13313,13444,13710,13751,13774],"explain":[1047,1471,1966,6977,8110,8128,8345,11963,12299,13289,14535,15189,17235,20813,22320,22866,22978,23990,24024],"dynamics":[14067,14100,14303,14325],"sequences":[5268,14279,21378,21619],"sky":[2130,3094,3715,8193,11209,20760,21551,21580],"createfolder":[772],"beginning":[313,451,490,1194,2680,9872,10160,12199,12459,15110,17068,17090,17212,17863,20020,21810],"microphone":[1456,1517,3760,10025,23802],"diffuse'":[9306],"pressing":[314,360,637,670,707,1411,1652,3403,4855,5494,6827,7352,9617,11342,12983,15758,17082,21375,21944],"quicker":[13871,22906],"desires":[12617],"recalculate":[3627],"selfactive":[23238],"bracket":[18075,21693],"jni_env":[14532],"uninstall":[10072,15653,22282,22373,22527,24202],"brass":[21573],"permits":[17331],"audiogroups":[1183,1332,1404],"prompting":[6948],"slow":[24,168,1312,1427,2201,3095,3458,3716,3830,4040,4359,4641,5873,7279,8226,9288,9617,10245,10845,11555,11576,11788,11870,12194,12461,12832,13227,13445,13937,13977,14047,14067,14107,14155,14164,14252,14283,16725,17088,19419,22024,22118,22270,22368,22837,22904,23774,24000],"highly":[833,2363,2369,6543,9621,10872,10928,13769,14076,14279,14597,15456,15484,15560,15938,15975,16081,17024,22740],"win64":[6502],"onrecttransformdimensionschange":[22631],"gl_objectplanet":[19120],"ignore":[581,878,1247,1931,2074,2426,2765,3329,3542,4919,5783,7959,9231,11055,11553,11961,14627,16421,17040,23189,24141],"checkforcontrollers":[10858],"jumptarget":[21819],"windowed":[6437],"backup_location":[17404],"mega":[18935,21342],"cr":[15644],"_mycolor":[19184],"measured":[2675,2841,3074,3407,3459,3619,3692,5722,5749,5773,10797,12940],"defaultpackerpolicy":[21423],"lowpasskernelwidthinseconds":[11673],"study":[9720,11988],"beside":[1418,7082,9126,10034,22608],"audiobehaviour":[6008],"arm":[366,684,2619,10339,10406,10590,10968,11591,11806,12490,14478,14836,15677,21679,22422,24145,24168,24194,24215,24286,24557],"c++filtjs":[11585],"affect":[406,498,1437,1458,2645,2696,2759,2797,3050,3264,3569,3865,4814,4952,5149,5276,6597,6678,7984,8170,8510,9256,11217,11711,12608,12907,13178,13222,13311,13721,13870,13900,14056,14147,14166,14306,14730,14846,14948,14958,15404,15455,15483,15514,15953,15987,16167,16351,16510,17518,17550,18978,19284,19783,20046,21420,21858,21952,22087,22119,22209,22436,22644,22675,23236,23691,23896],"fundamental":[1471,3241,3553,3892,9593,10105,13284,22874],"vscrollbarvalue":[8681],"nrgctx-trampolines":[22473],"standards":[3798,6716],"sudo":[10089,17406],"non-hard":[21573],"zfail":[19545],"family":[12295,17468,17565,17637,17730,17749,24527],"arial":[3238,8886,23528],"-u":[911,17425],"gettemporaryfolder":[4474,4732],"errors":[234,285,1577,1604,1689,3882,4362,5251,6677,7971,10578,10962,11267,11580,12934,13722,13997,19090,22339,22387,22543,22916,23754,23775,24587],"artifacts":[661,2732,4379,4953,5587,12182,12684,15965,15991,16081,16172,16197,16284,16320,16374,16684,18078,18377,19123,22270],"unchanged":[1109,1771,14316,16159,16246,21368,22107,22644,23648],"60hz":[4337,4620,10805,11683],"condensing":[309],"flip":[11772,15237,16223,16441,19073],"istagprefixed":[21514],"less-than-or-equal":[15278],"implemented":[1203,1345,3125,4468,4726,5084,6742,7335,8039,8256,8303,8663,10844,11239,11452,11527,11840,12299,12479,12819,14266,14326,14880,14906,15399,16746,17377,17516,18605,20822,21753,21846,21964,23878],"m_halotexture":[24743],"tessedge":[20620],"proper":[1205,4362,5320,5580,6664,10913,11848,12592,15938,16079,16313,17013,19669,20403],"seam":[188,2286],"outdoors":[2130],"sends":[1094,1153,1350,2078,5864,11129,13289,13466,13732,15725,16964,17110,17338,23609,23881,24391],"slowupdate":[12500],"slight":[1111,1751,2252,2268,2282,5739,16709,23376],"networkplayer":[13597],"ago":[12408],"strafe":[428,1779],"organized":[825,10435,11293],"silver":[21573,21735],"intends":[404],"loadable":[14676],"mistake":[6936,22488],"streamingassetspath":[21656],"secretdatauploader":[17369],"world-space":[4035,7418,15592],"separatespecular":[17854,18467,18859,19021,19290],"facing":[4076,15865,16365,18116,18383],"labelled":[1860,15900,21847,23599],"rootmotioncontroller":[17215],"defocused":[16286,16321],"horizons":[12460],"mygameobject":[12205],"focal":[16290,16319],"-returnlicense":[6520],"slip":[5790],"multi-sampling":[4942],"integrated":[682,833,7941,9951,12640,13424,13937,14848,14951,15550,24603],"lean":[535,8200],"m_lightmapeditorsettings":[24757],"cmd+alt+2":[23069],"plasticscm":[7941,14343,21277,23619],"targetel":[7038,23934,24428],"logicalcopy":[18196],"mass":[2176,5124,5180,5770,6742,8138,10135,13773,15591,17205,21922],"obb's":[256],"about":[54,185,198,223,276,319,391,464,603,606,666,735,772,833,933,985,1047,1079,1247,1462,1531,1608,1612,2056,2078,2128,2141,2224,2281,2364,2370,2431,2645,2693,2756,2823,2880,3045,3244,3269,3334,3381,3408,3477,3548,3553,3631,3647,3791,3818,3867,3909,4043,4443,4713,4757,4811,4852,5228,5399,5626,5665,5690,5716,5833,6445,6620,6681,6709,6740,6742,6976,6981,7795,8085,8114,8116,8138,8343,8817,8997,9211,9346,9654,9696,9744,9922,9962,10032,10407,10431,10565,10778,10844,10940,10960,10972,10978,11150,11218,11441,11569,11646,11729,11819,11861,11934,12036,12192,12457,12604,12649,12702,12916,13113,13127,13155,13223,13265,13271,13305,13354,13448,13462,13498,13564,13613,13710,13819,13951,14011,14069,14105,14315,14356,14787,14938,15026,15071,15201,15384,15571,15586,16162,16259,16284,16320,16512,16740,16889,17046,17273,17402,17516,17552,17815,17915,18051,18692,19089,19220,19900,21368,21384,21543,21578,21586,21619,21643,21760,21811,21937,21965,21982,21988,22093,22123,22404,22571,22679,22712,22833,22874,23276,23356,23452,23607,23609,23726,23742,24120,24375,24401],"down":[290,518,907,935,995,1154,1289,1348,1428,1460,1633,1736,1755,1848,2201,2362,2368,2503,2993,3047,3153,3209,3292,3359,3458,3830,4040,4137,4274,4498,4574,4670,4855,5145,5258,5371,5614,5737,5799,5860,6390,6653,6791,6845,7090,7189,7279,7346,7384,7958,8024,8060,8097,8226,8944,9447,9617,9698,9725,9859,10022,10179,10373,10782,10872,10922,11561,11581,11965,12037,12196,12653,12832,12927,13271,13567,13982,14047,14066,14102,14155,14164,14252,14259,14283,14315,14776,14796,14974,15006,15094,15098,15241,15343,15456,15484,15605,15727,15841,15865,16103,16164,16243,16725,17869,18659,19070,21343,21375,21768,21842,21919,21944,22024,22113,22368,22652,22868,22939,23291,23393,23685,23980,24521],"roles":[7805],"org-hips":[1672],"articles":[22864],"defined":[179,193,406,1103,1195,1290,1432,2126,2153,2229,2712,2834,2878,3039,3206,3451,3509,3641,3707,3748,3839,4833,4846,4973,5282,5876,6508,6960,7141,7462,7834,8017,8060,8124,8149,8800,10150,10437,11135,11314,11535,11985,12300,12650,12934,13361,13846,14044,14073,14381,14670,14763,14942,16189,16285,16457,16555,17188,17866,17933,18096,18301,18459,18485,18503,18645,18687,18872,18940,19130,19260,19408,19588,19738,20134,20395,20849,21080,21772,21952,22114,22651,22725,22870,22901,23004,23192,23211,23453,24328,24345,24518,24530],"''is":[5202],"looping":[652,2165,2286,11343,14076,14112,14171],"diagonally":[16159],"createdefaulttable":[13438],"hinder":[3115,3744],"unity_might_not_have_depth_texture":[18323],"killself":[10218],"code-named":[24551],"configurable":[2867],"fledged":[18914],"wi-fi":[4340,4623,11729,22914],"activecolorspace":[11247],"coexist":[1910,2570],"getproperty":[22452,24259],"chart":[8206,15006,15093],"gl_oes_egl_image":[1499],"_compress":[20314],"key's":[6841],"complexity":[579,1198,3045,3578,4852,9627,10909,11441,11744,13897,14948,15461,15489,16079,16686,17528,18617,20352,21569],"perfhud":[12525],"exceeds":[3354,4433,4561,10802,10971,11825,14162,16361,22448],"disables":[4145,5606,7970,8004,10343,13841,15957,18391,19779,20426,23724,24095,24287,24414],"dead":[3518,4060,6825,9625,9948,10198,13723,22760],"non-image":[5609],"_cameragbuffertexture3":[15506],"together":[179,253,392,469,605,634,833,1056,1352,1488,2193,2372,2689,2778,2848,2879,3028,3092,3133,3447,3658,3713,5282,5356,5375,5561,6391,6603,6717,6739,6778,7273,7312,7399,7766,7802,8462,8890,9018,9233,9732,10464,11211,11237,11981,12456,13185,13307,13438,13844,13904,14108,14184,14302,14526,15107,15235,15574,15969,16001,16489,17017,17153,17207,18183,18547,19073,19263,21398,21413,21617,22244,22650,22699,22760,22876,22979,24182,24214,24608],"log":[669,781,908,1000,1488,1528,1596,1604,1895,4227,4604,4671,6495,6677,6700,6973,8764,10432,10465,10519,10863,11082,11304,11538,11579,11782,12211,13584,13651,13790,13941,14412,14573,15342,15623,15635,17323,21689,22513,22533,23187,23596,23830,24002,24115,24128,24205,24216,24563],"unused":[1851,2628,4449,4567,4656,9625,11785,12225,12590,15346,15498,18946,20715,22740],"m_localscale":[8069,24843],"cart":[157],"invaders":[12454],"managed-to-unmanaged":[14733],"matchtarget":[21810],"src3":[19266],"originate":[1459,23401,24141],"sub-set":[1334],"desiredformat":[21474],"addresses":[12204,13287,13326,13439,13749,13775,14037,15910,22258],"format":[151,213,236,282,394,741,1051,1108,1283,1613,1807,2008,2275,3062,3776,4291,4502,4584,4902,5016,5308,5442,5523,5668,5693,5876,6380,7001,8038,9267,9335,9415,9489,9536,9981,10773,11783,12182,13945,14564,15001,15345,15473,15498,16869,17287,18606,21368,21474,21664,21690,21847,21895,21956,22061,22095,22516,23368],"compressing":[2286,2308],"texcoord3":[12149,21108],"administer":[17387],"rationale":[11955],"formed":[11202],"unusual":[2788,7091],"unityobject2":[7002,9924,22544,23179,23418,23461,23905,24390],"changing":[629,935,1288,1409,2209,2372,2467,2799,2874,3229,3255,3308,4053,4204,5089,5142,5292,5827,6444,6742,7308,8094,8814,9689,9726,10109,10913,11214,12596,12636,13122,13179,13305,14254,15276,15584,16165,16646,20810,21408,22104,22247,22608,22662,22961,23159,23259],"normal":[181,605,1910,2201,2223,2572,3056,3198,3338,3393,3648,3708,4295,5134,5400,5523,5683,5705,5874,6453,6622,6646,6843,6894,6962,7319,7508,7792,7906,8004,8287,8776,9276,9300,9513,9584,9681,9863,9907,10055,10062,11436,11509,11992,12308,12588,13275,13573,13749,14036,14196,14244,14340,14785,15170,15411,15455,15483,15534,15560,15852,16365,16745,16757,16793,17032,17093,17239,17260,17468,17532,17547,17555,17582,17625,17629,17652,17685,17743,17762,17969,18045,18148,18262,18370,18428,18681,18719,19163,19244,19419,19527,19727,19824,20133,20194,20356,20482,20744,21081,21570,21599,21655,21859,21906,22026,22557,22684,23298,23392,23414,23700,23819],"cold":[309],"photo":[11934],"nextpoweroftwo":[11160],"customized":[229,2532,2693,5457,20145,22462],"cartesian":[187,1757],"relaying":[13305],"technical":[974,2282,4436,11450,11961,12457,13326,13461,13566,13765,15402,15404,15452,15481,17402,21981,22609,23810],"circles":[1763,3167,13155,14750,20927],"opaque":[2706,2762,3758,4290,4583,6592,7334,7391,8285,11175,11436,11726,11764,12063,14200,16367,17470,17685,17732,18078,18510,18582,18625,18702,19522,19594,19758,19796,20173,20411,20474,20793,22201,22278],"buildallassetbundles":[1858],"fronds":[22131],"fingerbringt":[10639],"convey":[10020,13028,14278],"compressed":[134,215,457,741,828,1109,2277,2604,3020,3890,3898,4903,5602,5669,5694,5779,7241,9991,10580,10957,11263,12182,13449,13567,13701,13927,13982,14613,14797,15001,15345,21442,21664,22922,23158,24004],"rewrite":[17940],"assumes":[185,1608,6386,6458,7220,11124,11947,13249,22118],"earned":[952],"own":[147,183,305,312,394,587,639,688,991,1063,1208,1403,2008,2132,2139,2302,2532,2643,2700,2762,2802,3249,3267,3550,3592,3621,4106,4174,4714,4933,4991,5205,5217,5309,5627,6375,6464,6547,6603,6677,6702,6728,6940,7083,7384,7675,7816,7833,7939,8039,8112,8916,9179,9334,9568,9597,9665,9709,9993,10113,10413,10427,11745,11921,11992,12342,12469,12558,12636,12960,13157,13276,13292,13427,13640,13846,13942,14266,14302,14451,14543,14798,14824,14868,14928,15109,15138,15345,15935,16135,16241,16762,17199,17347,17518,17790,17819,18336,18496,18860,19158,19756,20185,20396,21422,21575,21581,21625,21669,21834,21929,22109,22250,22307,22571,22682,22895,23217,23299,23366,23400,23447,23588,23625,23726,23754,24377],"handful":[5246,6976,9970,20692],"dom":[24428],"dstfactor":[18183],"hinges":[5268],"settrigger":[413],"shifter":[2502],"daring":[8492],"cmd+shift+1":[23059],"monitoring":[1320,6719,8122,24551],"flatten":[2121,5354,18313,21843],"mono_jit_runtime_invoke":[22409],"obtaining":[14926,15060,15635,21586,23146],"movieimporter":[6093],"exited":[4231,4674,21627],"shins":[1673],"lowercase":[17437],"purple":[11454,21733],"wsavisualstudio2012":[12749],"compilers":[3228,10405,12781,14461,17239,18329,19090,23299,24525],"leanleft":[536],"head-on":[181,23376],"myprogressbar":[7002],"pass'":[18985,19047],"advised":[17402,23781],"icloud":[9643,10538],"toy":[5166,10020],"gb":[2036,7223,11857,18524],"representing":[630,1471,1763,2130,8075,9615,11344,14204,14550,14872,20984,21973,23392],"transfers":[1011,23790],"clash":[12687],"art":[2124,6945,6976,9232,9357,9889,11978,15229,21613],"sinusoid":[2252,2268],"occluders":[13848],"asciicapable":[11703],"crediting":[13153,14013],"messaging":[5869,7816,10029,11526],"resampled":[1312],"button's":[22556],"breadcrumb":[13276,15101],"appxmanifest":[4458,4716,24108,24204,24317],"-31px":[23555],"exe":[1978,6385,6488,10070,11591,15214,15642,17347,17429,18563,21283,23353,24168,24447],"oncreate":[14621],"overground":[7114],"async":[11840],"fogging":[18659],"lived":[16793],"-server":[6395],"flag":[1089,1930,4204,4561,4690,4766,6571,6641,10538,10918,15457,15485,22426,22549,24118,24558],"yourunitysignedapp":[1544],"java-related":[11588],"instructs":[12648,21689],"shuffled":[15280],"gl_oes_fbo_render_mipmap":[1500],"pre-render":[14898],"fetch":[1488,15467,17298,18318,22493,22548],"emulation":[3059,8305,13762,15923,16088,16186,16281,16317,16354,16389,16418,16671,16690,17022,17060,24550],"fractional":[410,16702],"unity_ios":[14372],"endchangecheck":[18541],"introductions":[9621],"prepassbase":[19054,19236],"prefetchsocketpolicy":[17329],"motion-":[9502],"resolved":[4122,4143,23653,24144],"7th":[15783],"setlayouthorizontal":[22618],"serializablenode":[16880],"frustumwidth":[8107],"happened":[4443,4713,10833,11590,11629,13289,13722,13782,22394],"gear":[1142,5818,9605,10035,23286],"dispatcher":[24708],"upleg":[14839],"setselectedgameobject":[9836],"evident":[8135,8348],"stl100-4":[1527],"def-finger_pinky":[1682],"examine":[7825,11981,24563],"reloaded":[11838],"srccolor":[18215],"smart":[15677,15794,15802,15807,21274,21408,23738],"upload":[746,875,1609,1802,6383,9673,11417,15662,24193,24549],"sortedlist":[24244],"'license":[11400,11409],"reboot":[22528],"tortoisemerge":[890],"answer":[985,8113,16833,23083,23892],"explorer's":[24431],"getting":[218,603,845,1231,1462,1550,1886,2018,2570,2811,4483,4739,5456,5788,6447,6717,6731,6839,6976,9217,9689,10451,10557,10940,11331,11464,12227,12894,14102,14604,15676,15807,16210,17823,17915,18428,22921,22978,23087,23132,23157,23794,24140,24203,24213,24329,24360,24526,24587,24600],"dlc":[28],"analytics":[169,4255,4788,14799,22544,24402],"inspectors":[1142,5098,7939,10057,23676],"oil":[4058],"ik":[356,2623,5410,7968,9408,9500,9526,10292,11514,12608,15592],"redirected":[6723,6728],"responseheaders":[23886],"sony":[18329,19085],"distance":[1357,1458,2124,2296,2358,2448,2552,2559,2713,2743,2796,2850,2875,3027,3157,3471,3829,3861,4017,4839,4913,4950,5017,5341,5356,5375,5395,5563,5727,5773,5801,6916,7102,7135,7159,7340,7780,8098,8126,10020,10970,11094,11119,11127,11154,12432,12478,12821,12887,12935,13865,14041,14059,14109,14198,14207,14239,14246,14306,14764,14880,15340,15953,16067,16134,16284,16320,16365,16410,16619,16667,16683,16709,16938,16958,17007,17050,17134,17165,17177,18043,18397,18604,18659,19775,20068,20510,21343,21856,21994,22118,22675,22868,22881,23705],"contents":[157,249,837,1613,2072,3023,3347,5099,6486,6952,7241,7508,7766,8087,8220,8300,8481,8718,9046,9226,9559,9664,10556,10928,11281,11974,13104,13759,14612,14866,15098,15471,16725,16889,17187,17287,18254,18612,18692,19038,19548,20134,21287,21352,22346,22496,22548,22760,23301,23992,24198,24391],"deceased":[13219],"launcher":[3483,3510,10113,15636,15810,24107],"activations":[11391,22964],"right-hand":[996],"currentinputmodule":[9838],"satisfactory":[14842],"independently":[386,2788,5159,5354,14184,14781,16460,21398,22944],"'incoming'":[23656],"one-way":[4158],"m_linearfogstart":[24737],"eventtype":[12709],"farm":[14098],"rnd":[3080,3698,4038],"gl_multitexcoord0":[18687],"invincibleshader":[12614],"speaker":[2296,2466,2575],"aside":[2140,3633,4107,10167,12043],"depthtexturemode":[18362],"successive":[4395,4522],"disappears":[2294,12650,14139,16538,17069],"frame":[73,314,422,453,534,632,717,1298,2161,2474,2708,3611,4038,4602,4960,5000,5131,5189,6409,6555,6680,6838,6868,6932,6958,7000,7272,7776,7892,7902,8081,8347,8537,9240,9322,9451,10451,10766,10797,10844,11215,11551,11613,11770,11965,12308,12466,12496,13164,13201,13718,13916,14275,14306,14728,14957,14996,15003,15043,15084,15118,15443,15594,15625,16563,18217,18555,18696,19588,21375,21672,21927,21994,22448,22625,22761,23050,23597,24032,24409],"collection":[28,836,1063,1159,2990,3161,3257,3267,3333,6797,8773,8916,9625,10105,10782,11289,11753,12201,12570,12689,13844,13990,14850,15010,17883,21991,22739],"channel":[236,1178,1235,2279,3561,4094,4889,5530,5680,5702,6858,7001,7999,8090,9213,9509,9913,10773,11437,11850,12046,12318,12644,13303,13477,14965,15473,15954,15988,16134,16771,17013,17454,17472,17544,17567,17613,17618,17639,17692,17701,17710,17727,17734,17751,17778,18080,18184,18320,18369,18606,19244,19276,20411,21590,21902,23703,23980,24416],"distributions":[17385],"face":[188,2754,2992,3152,5003,5743,6865,9358,10675,11629,12308,14191,19707,21837],"quitting":[7932,14801],"rocket":[2977,3095,3483,3716,10109,10885,22879],"tactical":[2097],"externaleval":[23202,23816],"stationary":[3849,11627,13178,13267],"decent":[5658,10449,16299,18308,21573],"reasoning":[3818,13155,17381],"spu":[1247],"revealed":[13287,16565],"shader-shaderlab":[20788],"murky":[2130],"ease":[6616,14015,14542,15562],"movement":[318,434,2138,2167,2801,2870,3125,3522,3826,4074,5129,5181,5282,5373,5809,6811,6961,7909,9210,11923,12368,12831,12983,13094,13164,13198,13722,14147,14192,14278,14306,15584,15864,16061,16565,16722,21372,21949,22006,22107,22894,23360,24374,24700],"deltamove":[13005],"getassetpath":[795,1828],"plug":[21603],"large":[290,663,821,833,2009,2281,2346,2357,2619,2713,2969,2982,3094,3164,3198,3540,3633,3715,3871,4104,4294,4504,4586,5202,5204,5261,5457,5788,5874,6421,6714,7133,8226,8773,9623,9704,9911,10019,10042,10449,11120,11136,11155,11198,11261,11388,11499,11749,11881,11947,12225,12495,13274,13455,13769,13844,13932,13976,15087,15106,15235,15343,15456,15484,16079,16563,16692,16719,16834,16999,17257,20605,21348,21575,21634,21643,21714,21897,21939,22023,22097,22118,22250,22448,22737,23775,24020],"modulation":[1211,2248,2264,15963,15996],"freq":[2383,2399,2416,2436,2454,2497],"variations":[1064,2252,2268,5764,13292,13727,14140,14786,14888,17207,21706,21973,23446],"proceed":[247,6396,11415,12957,13645,13883,16505,17331,17913,17988,21289,24228],"objspacelightdir":[18280],"uv0":[7319],"literally":[13937],"methodid":[14557],"hands":[1675,2619,14917,15137,15592,15765,22109],"viewport":[2674,12680,14202],"attempt":[205,454,1615,2611,3636,4932,5381,6543,6690,6761,6962,11923,13294,13942,15093,16476,18048,21408,22042,23281,24017],"reversed":[6655,8102,22902],"modulator":[1211],"kgfxrendererd3d9":[12713],"28f":[13055],"deformation":[1659,14842],"-buildlinux32player":[6496],"lowp":[11750,13950,19449],"built":[113,245,753,931,1322,1610,1860,1968,2064,3250,4168,4538,4635,6492,6618,6623,7279,7766,8087,9191,9249,10030,10159,10465,10469,10782,10912,11289,11305,11350,11465,11577,11750,11981,12781,12797,13149,13157,13264,13434,13462,14506,14694,14744,15196,15342,15796,16796,17402,17940,18496,19230,21368,21655,21859,22492,22546,22569,22913,23145,23340,23464,23691,24285,24361,24534,24558,24571],"themes":[1133,1374],"propagated":[14644],"grand":[12391],"uncompiled":[14905],"queries":[13327,15100],"v":[187,425,6685,12088,14441,14538,14774,17966,18267,18322,18636,18734,19093,19610,20010,20487,20835,21096,22163,23017,23392,24046,24120,24187],"puts":[11629,13326,22024],"isoline":[20461],"acquire":[5054,24228],"worries":[24346],"antialiasing":[2741,4942,11823,15901],"thorough":[17940],"gathered":[10766],"templates":[4191,4757,21370,23445,24603],"puttytel":[15642],"'load":[11413],"bones":[345,379,399,464,587,1471,1633,2167,2213,2611,2626,3503,4952,5276,6664,8138,9380,9412,9501,10815,11498,12603,12683,14835,15615,23360,24379],"allocates":[11840,13743,16550],"tangents":[661,3649,4212,4544,4643,4701,4775,4798,5309,7364,8000,21220],"7300gt":[22260],"transits":[3619],"processors":[8661],"animatorstatemachine":[6106],"believable":[21576],"long":[174,589,908,1312,1533,2009,2283,3087,3705,4081,4395,4522,4675,5243,5314,6793,6856,8178,8347,8522,9255,9614,9702,10431,10921,11119,12223,12810,12887,13424,13844,13932,14071,14107,14155,14304,14870,15153,15329,15758,15910,17348,17880,22737,23239,23774,23812],"g6430":[10720],"savedassetbundle":[10541],"in-between":[685,3178,3388,3551,3735,5476,19771],"applies":[462,712,2041,2228,2487,2880,2983,3028,4158,4279,4590,4832,5385,5419,6715,7994,9888,10165,12042,12790,14036,15462,15490,15522,16837,17262,17345,18359,18709,18896,20046,20207,21693,23677,23874,24287],"top-left":[359,619,5564,7826,8402,9020,16159,21410,21418],"stones":[21809],"ins":[21466],"constants":[12367,14071,14110,14288],"reductions":[4356,4541,4638,7152],"vs":[2431,4915,5041,8995,9913,10116,11512,11993,12316,13889,14441,15663,19230,21608,22268,24046,24120,24187],"measure":[166,4039,5791,7186,12520,12934,14958,15090,15905],"emails":[1600],"repetition":[7937,14110,15295],"initial":[3091,5372,5726,6669,6949,7941,9623,9772,11286,11350,12417,14102,14173,14226,14283,14842,16524,16701,16953,17391,20780,21743,22141,22222,22448,22829,23808,24184],"texcoordn":[18161],"fisheye":[16396],"deform":[1665],"confusing":[187,10103],"unlocked":[24560,24568],"tilt":[9617,16322,17049],"gitconfig":[21301],"hg":[6734],"my":[148,878,977,1394,1548,2051,3662,5091,6716,7490,7946,8725,9164,9364,10420,10448,10514,10952,11390,12931,16802,17435,17805,19186,19210,22203,22262,22308,22916,22947,23157,23596,24357,24520],"booleans":[22738],"bbndk-env_10_2_0_1155":[1557],"category":[1329,13954,15816,17537,18967,23274,24234,24644],"central":[13292,13330,14107,17135,17177,21973,22735],"expect":[1614,5166,6874,6962,7118,9328,10027,11223,11499,11871,12939,14252,14351,15564,15677,16801,16963,19040,19750,21571,22114,23809,23891,23993],"burned":[14102],"panoramic":[11198],"-direction":[20753],"elements":[179,294,382,704,1140,1966,2668,2737,2759,3143,3348,3381,3407,5344,5561,5720,6444,6606,6610,7397,7509,7820,7834,8082,8599,8799,8997,9191,9264,9326,9448,9674,9690,9723,9745,9865,10032,10458,11209,11694,13316,13726,13770,13930,14007,14017,14205,14660,14748,14817,15101,15238,15336,15564,16090,16241,16391,16446,16484,16520,16556,16558,16734,16749,16771,17035,17089,17148,17205,21398,21413,21689,22128,22567,22635,22664,22682,22710,22731,23393,23447,23726,23814],"unity_4_2":[14398],"seems":[9426,11603,11991,13739,16310,24001],"observing":[3914],"login":[1019],"releases":[151,16050,22475,23650,23774,23978,24603],"rpcmode":[3966,13490,13609],"callback":[1232,1897,10316,10414,11527,12734,13023,13639,14723,15625,17221,22981,24419],"shrink":[1763,7361,9698,14252,14259,16107],"disconnectedlevel":[13473],"rendersetup":[18982],"non-mecanim":[5415],"cursor":[3298,4181,14775,15747,21940,22638,23562,24102],"reads":[996,3673,3927,8481,11228,11399,11996,12317,13938,14139,16579,16840,18324],"swaying":[6675,22187],"re-link":[9962],"mpmovieplayercontroller":[3801],"operator":[11089,17374,19305],"generations":[10587,11568],"unityplayericon":[9665],"nativeplugindemo":[1208],"impress":[12459],"joint's":[2852,2870,3136,3476,3501,9426,24389],"said":[11239,13311],"tracing":[13160],"bakedonly":[3574],"_refrdistort":[19170],"begingui":[7463],"generation":[3637,5244,5456,5610,6647,10471,10616,11567,11861,11947,12815,12905,12930,13862,14887,15946,15982,17939,18714,19178,20353,21414,21895,22135,22216,22256,22430,23386,23799],"aware":[133,581,656,1108,1247,2281,3996,6715,9237,9315,9734,10103,13223,14644,14698,16459,20146,21927,23236,24675],"keycode":[1473,10888,15728],"5th":[10670,11606,15781],"all-round":[2131],"leaves":[1343,2284,5066,5820,6603,14266,18078,19533,21929,22198,22214,22242,24321],"lead":[1910,11223,11859,12572,13068,13160,13921,16833,17374],"scene's":[1661,3539,15224,18603,21558,23720],"headless":[6548],"baseline":[3799,11735,21977],"corporate":[13311],"resolutions":[2757,3430,3996,4234,4947,8197,9656,9718,16132,17000],"syntax":[6744,7129,8159,12777,17800,18058,18143,18181,18327,18385,18486,18646,18660,18693,18862,18961,18981,19041,19089,19127,19220,19258,19375,19542,19733,19751,20454,20770,23738,23819],"pointermoved":[24061],"forgot":[504],"sixty":[12604],"unityplayers":[6408],"'quieter'":[2577],"tend":[271,2628,5385,13449,13774,14038,14047,14184,14205,14259,14932,16170,16386,16658,16673,21570,21844],"capturing":[3761,17093,18557],"anchors":[4971,9685,9722,15931,16739,22647],"non-photorealistic":[16272],"#ifdef":[18684],"logged":[257,3888,6698],"mechanism":[217,242,1127,14522,15691,15715,17377],"simpleplayer":[417],"entitlements":[9643],"treeview":[15060],"twitter":[6700],"scenario":[5044,5206,5457,5711,8443,8738,10163,10906,11302,12447,12878,13630],"restarted":[2034,21439],"somechild":[23189],"pre-compiled":[14512,17239],"ensues":[13217],"15hz":[4335,4620],"propagate":[11527],"daycontroller+":[22399],"thinking":[9744,13315,21543],"compiling":[193,4465,4723,5229,6635,10437,14366,18256,18286,18935,23299,24280,24328,24519,24530],"photographic":[16160,17096],"traversal":[4021],"cd":[1562],"heart":[12617],"pvrt-compressed":[12182],"densities":[8197],"channels":[746,1235,1348,2272,2319,2341,2509,5523,7998,8090,9227,9433,10004,12318,14998,15470,15969,16001,16158,16188,16598,17017,18274,18369,18505,19017,19455,20984,21596,21858,21901,23977],"pillows":[12481],"water":[652,3106,3727,5096,6603,9560,9887,10707,11443,11864,12878,14035,14307,19166,19773,21973],"anchormin":[9684],"guarantee":[580,4401,4529,13330,18557],"cockroaches":[14917],"mave":[2213],"gl_secondarycolor":[19109],"authoritative":[13287],"alpha-testing":[11780,12179],"unfamiliar":[15106],"jint":[14531],"shear":[6442],"culls":[7913],"quad":[7825,14868,15474,19274,21742],"exponentially":[12367],"randwithinradius":[15331],"cryptographic":[23403],"consided":[19774],"keyframe":[314,456,632,685,7970,9747,15389,22558],"game-driven":[1280],"engineering":[174],"slowed":[2201,4040,5860,14109,22024],"unchecking":[11065],"versus":[5142,7138,11957,22643],"footsteps":[1370],"ctrl":[1652,3047,3590,4855,6847,7390,10179,15120,23006,24098],"intuition":[184,12199],"localdumps":[24150],"perplength":[6657],"paddingpower":[21483],"lambert":[18513,18585,19720,19793,20133,20168,20396,20666,20796,21860],"desktop":[151,232,1554,1615,2009,4170,5698,6484,8335,9597,9888,10558,10765,11729,11749,12604,12712,13775,13945,14673,15349,15555,18289,19292,20822,21658,21967,23145,23808,24002,24120,24181,24224],"getmousebuttondown":[12979,13235,15754],"reported":[9614,11645,13665,13913,15001,15068,16708,22026,22603],"guilayoutoptions":[9156],"furthermore":[1771,2009,2421,4966,6458,7361,9623,11169,11286,12229,12695,13640,13923,14359,15462,15490,15914,22026,23364],"fall":[2138,2302,2702,3199,4037,4950,5143,5344,6463,10209,11407,11435,11960,12283,14155,14184,14307,15010,16284,16320,22118,23272],"prototypes":[14868],"randomised":[14184],"calendars":[10923],"avg":[10786],"lightingtonemapped_singlelightmap":[20329],"prompts":[997,1556,13883],"rvo":[13167],"objinstance":[121],"statistic":[22438],"_duallightmap":[20153],"commandbuffer":[8278],"indicator":[633,3802,4292,4504,4586,11345,11554],"gamecontroller":[21806],"naturally":[168,468,2124,7901,8392,9614,13306,14069,14945,16666,21715,22024,23705,24019],"facial":[531],"technologies":[931,6702,6719,13426,17375],"disablekeyword":[18546,18936],"unity_samsungtv":[15696],"spriterenderer":[6030],"pvrshadereditor":[5239],"it's":[245,349,588,693,1247,1957,2720,2812,3210,3955,4451,4658,4717,4966,5025,5211,5251,5314,5328,5498,5649,5798,6702,6808,7583,7943,7984,8179,9021,9256,9463,9559,9681,9725,9741,9857,9868,9937,10782,11501,11826,11861,11870,11948,12041,12222,12456,12518,12937,13889,14317,15092,15196,15559,15711,15838,15936,15938,16103,16242,16313,16351,16392,16468,16520,16574,16578,17090,17207,17327,17795,18311,18361,18556,18882,18955,18978,19088,19149,19433,19564,19762,19924,20209,20356,20506,20849,21080,21656,22174,22320,22546,22639,23190,23234,23398,23780,23863,24044,24129,24287,24319,24325,24355,24382,24391,24563,24588,24675],"latin":[3199,9947],"coding":[5198,6716,11581,14924,21619,22735],"smoothing":[3189,3649,5187,8003,9325,16085,22156],"app-sandbox":[9648],"construct":[9256,11635,14563],"doexport":[10491],"unto":[8163],"manageable":[4447,4654],"gunwithinstantiate":[12232],"clipping":[2076,2126,2604,2676,3354,5021,14030,16170,18325,22871],"escaping":[14073],"webrequest":[21677],"whether":[221,265,349,372,447,585,1256,2221,2362,2368,2623,2661,2712,2862,2884,3043,3056,3563,4002,4107,4128,4162,4169,4522,4582,4850,4940,6661,7090,7714,8744,9621,9688,10782,11122,11149,11263,11951,12453,12916,13291,13327,13447,13766,14024,14153,14161,14184,14225,14298,14844,14861,15084,15296,15516,15936,15945,15981,16242,16486,16517,16956,17150,17204,17260,17347,18394,18666,18863,20145,21401,21588,21611,21638,21790,22154,22233,22544,22659,22689,22718,23211,23609,23691,23902,24410,24675],"forever":[453,5085],"mainstream":[22097],"striplights":[6865],"_execname_data_":[11326],"endscrollview":[8704],"highpass":[1159,2380,2391,2396],"disablefullscreen":[23904,24412],"reflective":[4983,9893,10707,11198,11440,11864,17538,17542,17547,17555,17561,17565,17607,17611,17616,17621,19424,19527,19924,21558,21575,21605],"animationblendmode":[546],"calculator":[22898],"troublesome":[12688],"gridx":[10271],"512mb":[10602,11163],"neon":[5309,10780,12490],"elif":[14445],"deepassets":[41,1826],"javapluginsample":[22298],"hearing":[1420,2579],"middleware":[12751],"bt727f1t":[24168],"onwillrenderobject":[7915],"mpe":[3746],"was":[145,256,344,580,685,872,938,1016,1292,1352,2005,2076,2615,3199,3543,3649,4444,4714,4824,4882,5084,5750,6669,6960,7091,7605,8074,8738,9373,9425,9783,9857,10504,11331,11549,11628,11913,11955,12030,12218,12453,12617,13291,13364,13712,13815,14283,14403,14644,14749,14790,14936,15297,15444,15600,15663,15971,16003,16319,16991,17019,17131,17318,17391,18699,18714,19178,19644,20908,21372,21420,21575,22024,22092,22397,22608,22735,23211,24015,24052,24134,24202,24322,24426,24548],"prediction":[13293,13720],"end-user":[24391],"offsetfactor":[19019],"thanks":[10425,11209,24370],"swizzles":[19449],"silence":[1153,2286,4339,4621],"ondeselect":[21767],"link's":[4024],"characterreceived":[24058],"gdc2008_postprocessingintheorangebox":[16084],"joypad":[9596,10024],"viewable":[2126,8691],"iphoneplayer":[15081],"gametype":[13357],"calculation-intensive":[10780],"click-dragging":[7082],"assetbundleloader":[79],"clickonce":[24400],"ctrl+y":[23043],"applicationdata":[4476,4734],"toe_end":[14839],"unloads":[11837],"figuring":[7818,13900],"succeeded":[2612,24453],"refreshing":[5001],"jpeg":[3055,5460,11853,12594,23159],"ducking":[1134,1341],"onbecameinvisible":[7914,12496],"bodymask":[11514],"guitext":[3227,3386,5970,21689,22766],"role":[911,13766,19045],"engineers":[1417],"exposing":[224,1189,10566],"getdirectdependencies":[1950],"snippets":[5260,17943,18682,19379,19459],"argb32":[15470,15498],"textbox":[14451,23468],"name'":[9670],"typeof":[41,770,1628,1826,7290,7502,7612,8157,10308,11276,12972,15147,17224,17249,21478,21815,22511,23257],"imageeffectopaque":[6592,16367],"remotely":[833,6633,13578,14334,23665],"pencil":[22867],"pre-defined":[345,3303,19759],"wack":[24046],"oneminussrccolor":[18219],"sync":[364,1324,6408,12644,13292,13453,15090,22023,23626,23745],"minor":[22323,24364],"comprise":[22244],"indistinct":[16261],"'normal":[21906],"offsetmax":[9686],"execute":[3955,4602,5210,5213,6365,6508,6874,7833,8273,8524,10135,10848,11527,12396,12652,13227,13576,13974,14358,16015,18503,21625,21981,23167,23176,23352,23903,24202,24411,24708],"navigating":[156,735,3849,6692,7353,11408,12897,12949,13109,13117,13149,13267,15648,15840],"changeset":[863,14315,23685],"atc":[236,1534,5676],"in-person":[833],"animdata":[1849],"sampler2d":[12067,18009,18515,18587,18797,19193,19819,20179,20485,20797],"audiodistortionfilter":[6006],"non-destructive":[9440],"pruning":[12797],"targetframerate":[10850],"tcpip":[1074],"identification":[4315,4519,4613,8086,23726],"visualizes":[21246],"reality":[7144,11683,21574],"penetrating":[21868],"pieces":[395,705,4004,4100,6979,8113,8395,9621,10114,11198,13263,13844,14139,14220,14252,21693,22246,22760,22904,23268],"driveforce":[7784],"joins":[188,5356,13630],"half":[581,1736,4940,5712,9911,10451,11164,11750,12182,12454,12606,13948,14874,16682,17139,17181,18269,19199,19442,19869,20137,20193,20363,22026,22169,24016],"plugins":[225,250,1160,1198,1552,3633,4470,4728,4815,10344,10412,10567,12700,12750,13429,14464,14493,14498,14673,14708,15804,17191,21361,21669,22292,22495,23297,23819,24181,24272,24326,24357,24523,24607,24650,24668],"incompatibility":[24606],"df24":[15550],"bars":[3281,3619,4107,16692,20879],"interactivity":[11,3633,8584],"psvita":[14483],"cpu-waits-gpu":[10788],"progression":[7389],"fifth":[22043],"efficient":[1845,2009,3062,5169,6442,6856,7113,7328,7833,9248,11786,12456,15938,15975,19762,20506,22904],"non-stretching":[9685],"close":[2126,2425,2580,2706,3204,3829,3866,4948,5108,5535,7133,8099,9462,9743,10022,10546,11119,11139,11155,11403,11423,12456,12821,12910,13024,13107,13135,13318,13822,13860,13904,14108,14870,15094,15479,15536,16172,16611,16658,16673,17464,21897,22368,22526,23705,23893,23993,24258],"stringparamdelegate":[22508],"belonging":[1852,5205],"cycling":[4030,12843],"frees":[11283],"available":[223,247,442,593,597,753,834,931,1051,1112,1178,1296,1352,1456,1532,1743,1767,1784,1791,1915,2005,2157,2272,2364,2370,2604,2617,2748,2776,3058,3161,3195,3243,3370,3762,4204,4543,4605,4690,4766,4804,4813,4946,5206,5215,5613,6418,6447,6512,6595,6597,6604,6755,6858,6969,7120,7401,7508,7774,7776,7968,8006,8039,8208,8335,8403,8510,9020,9184,9258,9426,9438,9566,9619,9706,10039,10056,10558,10587,10830,10900,10903,11122,11127,11141,11146,11195,11235,11286,11338,11426,11893,12185,12229,12454,12541,12650,12733,12952,13294,13351,13640,13866,14004,14060,14273,14281,14323,14495,14545,14859,14870,14922,15039,15101,15197,15297,15459,15487,15650,15794,15871,15917,15939,15976,16017,16023,16033,16062,16139,16190,16245,16257,16273,16287,16323,16358,16366,16398,16407,16454,16485,16544,16581,16603,16645,16649,16659,16675,16709,16787,16996,17024,17051,17097,17136,17149,17160,17178,17188,17201,17210,17239,17262,17280,17516,17683,17881,17932,18318,18528,18603,19036,19391,21275,21356,21375,21409,21422,21548,21575,21617,21655,21714,21832,21844,21858,21907,21915,21945,21965,22024,22093,22177,22254,22275,22368,22427,22581,22719,22910,23286,23301,23609,23619,23638,23693,23780,23874,23895,23984,24014,24108,24144,24258,24395,24533,24549,24588,24651],"verifiable":[9],"demo":[11913,22092,23365],"drawn":[2669,2748,3391,3412,3567,3684,6996,7601,8123,8295,8997,9877,11879,11960,12206,12485,13841,14108,14198,15280,15444,15474,16183,16561,17520,18384,18692,19123,19758,21871,22668,23704,24405],"oss":[11555],"guiskin":[3234,3268,8773],"trustexitcode":[21305],"protocols":[23889],"hard-normals":[3663],"screenshots":[7131,16032,16660,17050,17096,22043],"block":[73,2764,3867,5173,8376,10456,10979,11261,12207,12542,13118,13178,13805,16658,16673,17858,18713,18859,18978,18980,19126,19182,19259,19740,19808,20389,22368,22740,24175,24675],"darker":[6866,9868,16164,16246,16260,16658,16673,17465,19263],"however":[145,160,182,197,219,434,442,487,605,629,693,764,970,991,1016,1063,1109,1194,1284,1519,1547,1614,1756,2009,2128,2223,2619,2645,2655,2754,3255,3579,3621,3633,3673,3758,3814,4395,4522,4658,4714,4861,4960,5004,5145,5209,5248,5289,5396,5431,5602,5764,5785,6442,6495,6838,6874,6945,7091,7134,7308,7384,7825,7942,7994,8112,8135,8199,9426,9515,9566,9593,9692,9727,9937,10021,10102,10292,10373,10444,10484,10560,10616,10846,11083,11119,11132,11169,11299,11349,11408,11464,11553,11711,11729,11951,11989,12196,12518,12602,12612,12647,12655,12688,12916,12983,13274,13292,13352,13448,13571,13576,13712,13769,13844,13908,13986,14017,14036,14072,14109,14266,14495,14535,14730,14752,14781,14868,14932,15138,15297,15399,15411,15559,15588,15867,16061,16123,16159,16246,16313,16319,16385,16495,16637,16661,16686,16932,17378,17880,18046,18343,18412,18681,19073,19419,19436,20146,20423,20849,21352,21413,21655,21837,21910,21920,21939,21969,22006,22093,22242,22322,22430,22567,22644,22737,22892,23156,23237,23298,23425,23461,23600,23680,23790,23889,24014,24324,24525,24572],"vibrate":[11553,14278],"particleemitter":[5936],"_time":[12091,20722,21052],"grow":[1198,2036,4037,10830,14067,15936,16504,16556,21912,22244],"megapixel":[10593],"double":[183,2036,2625,3101,3296,3722,4056,4930,5207,5712,7381,11770,12600,16812,17544,17578,17613,17618,17857,18933,19274,21908,23743],"coord":[21044],"resharper":[22268],"sum":[12050,13110,13922,14665,19290,20146],"eq":[1159,1297,2494],"realism":[1459,5820,11193,18033],"tolerant":[24716],"passes":[632,2380,2388,2396,2413,2433,2441,2451,3621,3678,5034,6592,7776,10028,10832,11762,13921,14066,15425,15464,15492,15514,16031,16310,16367,16666,17524,17881,17924,18137,18353,18424,18692,19032,19040,19233,19524,19557,19737,19789,20357,20769,20824,21910,22253,23377,24050],"-quit":[6519],"coroutines":[6867,7922,10795,12496],"toolbar":[995,3444,3535,6678,7084,8086,8118,8597,9863,11399,14005,14748,15084,15102,15856,21420,21831,21841,21849,21899,21914,21940,22084,22254,22446,22637,23373],"output":[198,1075,1130,1239,1336,1397,1860,2240,2259,2342,2353,2360,2366,2375,2425,2467,2501,2511,2533,2563,2682,3194,5119,5456,5791,6495,6633,6974,8199,9260,10464,10784,12039,12297,12518,14603,15635,15799,16158,17298,17987,18057,18608,19085,19945,20356,20843,21195,21314,22397,22902,23134,23350,24205],"16bit":[13959,15356],"functor":[11542],"muscle":[342,394,2209,6665,12682,15592,17209],"colormaterial":[18859,19024],"a6":[10619],"backgrounddrawingsurfacegrid":[24548],"gles3":[19501],"incorrect":[5004,11223,18557,22412,24203],"outer":[2553,14205,14231,22870,23393],"minimum":[458,652,1011,1230,1736,1783,3072,3469,3690,4121,4396,4523,5341,5727,8633,9696,10449,10782,11511,11760,12180,13445,13574,13752,14597,14835,15233,15342,15588,15935,16068,16234,16265,16372,16457,16488,16542,17152,18400,19738,22232,22573,22695,23984],"ipointerdownhandler":[21756],"512x512":[5598,5733,9258,9641],"timings":[309,12518],"predicts":[13722],"edit":[216,302,592,680,970,984,1068,1146,1338,1516,1647,1741,1766,2460,2593,3047,3307,3998,4107,4109,4134,4168,4855,4932,5209,5427,5707,6412,6435,6597,7338,7396,8075,8335,8799,9270,9993,10878,11057,11239,11297,11338,11711,12190,12650,13276,14007,14281,14317,14781,14866,15858,16535,17863,21277,21389,21417,21832,21900,21915,21947,22099,22919,22981,23041,23152,23321,23381,23446,23600,23652,23748,23778],"find":[158,211,223,241,311,325,369,401,438,528,752,883,985,1072,1290,1467,1556,1603,2009,2141,2427,2817,3199,3244,3636,3762,3836,3849,4073,4264,4548,4648,4705,4801,5166,5790,6647,6765,6940,6976,7038,8018,8099,9270,9370,9612,9869,9962,10033,10103,10292,10447,10460,10565,10916,10968,11071,11171,11338,11527,11568,11581,11733,11985,12194,12567,12614,12650,12918,12929,13124,13155,13264,13568,13730,13782,13889,13999,14343,14506,14694,14855,15087,15107,15137,15251,15342,15711,15816,15847,16822,17277,18040,19220,19732,21561,21714,21772,21810,21847,22111,22201,22351,22412,22877,22909,23051,23083,23249,23433,23492,23742,23790,23934,24173,24391,24589],"brief":[970,1057,2286,15012,15840],"audiopluginutil":[1208],"committing":[860],"getmethod":[24259],"id's":[13757],"rooms":[5457,12818],"normals":[180,3652,4212,4544,4643,4701,4775,4798,5309,7845,7984,8091,9379,9394,9406,9434,9483,9524,9553,12307,13913,14196,15425,15465,16357,16364,16658,17954,18045,18358,18365,18427,19054,19246,19513,19996,20464,21084,23369,23386],"array":[52,179,1212,1629,1919,3294,3592,3661,5204,5719,6421,6778,7396,7826,8599,11290,11613,12820,13361,15152,15240,16813,18538,21740,21847,22735,23392,23783,23828],"plugin's":[12769],"qualcomm":[1496,1525,5676,11805,12185,12522],"prepare":[830,3837,4622,6508,8163,9313,10563,21666,23314,23366],"lowpass":[1363,2367,2416,2436,2444,2454],"crossfading":[490],"bounced":[8162,21546],"decision":[6738,13285,15068,15296,16054],"caveats":[15423],"allowed":[2036,2232,3498,4121,4142,4161,4280,4576,4836,5423,5711,7970,10906,12204,12453,13292,13360,13501,15803,16703,17056,17085,17338,19419,19740,22022,22474,23881],"isplaying":[3787],"site":[890,10442,11731,15711,21924],"firewalls":[13308,13773],"gallery":[10452,22541],"androidjavaclass":[14543],"shadevertexlights":[18284],"0000000000000000e000000000000000":[24897],"year":[11182,15663,15679,22950],"#000000ff":[21718],"unity_sample_shadow_proj":[18334],"right-click":[2637,7085,10035,15852,24202],"pre-gingerbread":[4378,4502],"net":[927,935,1103,4259,4535,4603,4699,4791,4824,5164,6944,10405,10468,10539,10922,10968,11235,11600,12504,13767,14381,14495,15397,17239,17274,21673,22397,22987,23301,23806,23874,24130,24187,24214,24236,24288,24326,24364,24519,24588,24601,24604,24660,24669],"textureimportinstructions":[21466],"we've":[221,1279,5758,6706,6739,7449,10158,10369,10442,13300,15237,22200,23894],"let":[237,1065,1111,1204,2811,3050,3620,3758,3802,4168,4528,4670,4854,4933,6700,6709,7826,9184,9316,9747,10060,11621,12454,13170,13271,13276,13573,14007,14076,14358,14466,14912,15060,15196,15584,15596,16528,16842,17786,18089,18213,21280,21404,21549,21832,22024,23605,23881,23997],"sh":[1557,2033,15516,17526,18354,19050,19240,20434,20744],"scheduling":[5094],"shadow":[2622,3563,4926,4947,5017,6612,7133,7335,8088,8226,11151,11198,15408,15476,15510,15550,16933,17048,18036,18323,19230,19524,19781,20352,22733,23701],"environmental":[1357],"specifics":[1391,11870],"standardized":[219,10558,10854],"maxdist":[20582],"among":[311,325,369,438,752,1064,1517,2570,6683,7312,9851,10810,11338,13567,21949,21962,22114,23450,23730,24257],"audioclip":[3793,5933,10960],"unity_web_name":[23454],"pkg":[9671,10086],"considered":[3644,7806,10473,11530,12882,13178,13848,15453,16391,19775,21640,21836,21868,22741,24527],"muscles":[2214,12683],"compress":[1109,6385,9993,10773,11746,14797,20314,22484,23790],"polishing":[1633],"convex":[3665,5161,6443,13158,18449],"-device":[1544],"'world":[16130],"supportednetworklevels":[13472],"slider":[1149,2284,2641,3281,5329,7528,7665,8086,8126,8633,8890,9128,9310,9872,15099,16138,16692,16940,19136,21401,21596,21843,21902,21920,22140,22221,22694,22710,23728],"funkier":[1247],"debuggers":[24206],"waitforendofframe":[9828],"truetypefontimporter":[6092],"unity_unityobject_dependencies":[23463],"concatenation":[22744],"approval":[1005,10441],"boring":[19808],"discontinuous":[188,661,11205,21651],"evaluates":[22616],"maximuminstancecount":[12235],"iee":[8075],"onvaluechanged":[22689],"tube-shaped":[8293],"abbreviated":[3616,22870],"punches":[13309],"cubes":[4003,11047,12482,13873,18449],"simd-optimized":[23895],"downsides":[15533],"findgameobjectswithtag":[6797],"non-special":[17196],"closure":[7931],"about-":[1607],"_shininess":[12002,17843,18455,18920,19356],"avatartarget":[21825],"collider2d":[2229,4166,4833,5420,5912],"over-complicate":[11955],"thousand":[5639,5678,5700,11825,13897],"30db":[2314],"private":[121,536,7166,8564,8861,8905,9138,9760,10056,10550,10857,10987,11674,12237,12614,12772,12827,13039,13308,13439,13520,13749,14508,14696,14713,17269,21458,22508,23601,23846,24026,24303,24612,24680],"eighth":[4940],"usable":[150,1326,4820,5578,7757,9569,12752],"-force-feature-level-9-1":[6572,24121],"logarithmically":[15473,15504],"editor###":[23090],"hello":[7514,8884,13609,22513,23182,23822],"interacting":[5832,14529,17384,21790,23447,23813],"rsp":[14454],"listed":[629,713,882,1103,1695,2626,3199,3634,3814,7759,7995,8140,8307,10453,17259,17815,17864,18503,19220,19385,21289,22470,23792,23984,24644],"title":[1418,7121,9578,20810],"detailsampledistance":[24794],"palette":[9216],"non-trigger":[6453],"getkey":[6854],"still":[272,442,490,605,661,902,980,1315,1533,1608,2005,2223,2363,2369,2475,2617,2619,3035,3649,3684,3736,3981,4444,4714,4960,5145,5396,5585,5684,6458,6495,6778,7154,7159,7322,7774,8240,8336,9179,9346,9426,9625,9712,10416,10616,10830,10978,11168,11202,11397,11870,12206,12520,12698,13352,13464,13769,13841,13932,13985,14004,14268,14749,14900,15084,15138,15296,15400,15462,15487,15585,15711,16074,17089,17199,18375,18678,19065,19439,19515,19588,20353,20708,21411,21912,21978,21985,22024,22111,22255,22336,22438,22740,22934,22957,23145,23237,23272,23617,23754,23979,24147,24363,24551],"wind":[652,3096,3717,4030,5819,14142,14149,14306,21878,21917,21948,22184,22236],"direction":[165,181,1458,1734,1755,2076,2122,2138,2233,2710,2786,2801,2930,3452,3543,4018,4052,4077,4112,5320,5774,5825,6655,6820,7102,7845,9911,11126,11899,12042,12305,12981,13155,13203,13724,14074,14174,14196,14226,14300,14306,15237,15865,16084,16242,16365,16507,16700,16735,16949,18267,18719,19266,19437,19846,20138,20207,20437,20733,22638,22725,22879,23374],"inter-dependent":[2870],"preference":[2302,4436,11052,11122,11797,12608,14792,21613],"incur":[12180],"gmcs":[14457],"limb":[2856,24389],"blob-shadow-":[4926],"assetstore":[155,958,980,1000,1021,1029,1037],"optionalparams":[20393],"projectionmatrix":[13828],"filename":[147,742,1586,1974,6760,6967,9444,14509,22061,24090],"warning":[6690,9937,11247,15026,16834,18650,22428,23290,23464,23677],"reflectionprobestatic":[4989],"milliseconds":[2372,4602,10797,10844,12518,15009,22006],"iff":[5646],"deceleration":[16725],"lightblue":[21726],"synchronises":[4961],"inverted":[15474,15971,16003,16160,17019,18197],"captured":[297,397,589,4983,18557],"variant":[1905,2253,2269,3257,5259,8141,13980,16794,18936,20420],"importers":[9968],"future":[150,173,1605,1641,5876,7091,7320,9597,11489,11860,11950,13167,13630,13724,18311,20820,21434,24603],"steer":[3849,13164,13267],"quite":[471,1367,2465,4993,5261,5543,6442,6913,7109,7765,9278,9617,10022,11138,11152,11211,11239,11454,11734,13155,13455,13823,13889,14066,14139,14281,14307,14733,14751,16687,17552,18344,18448,19449,19808,20251,20605,21619,21937,22521,22999,23754,24001],"cause":[1104,2049,2795,2965,3738,4024,4048,4481,5142,5262,6466,6508,6680,6962,9542,9612,11153,11354,11745,11966,12225,12687,12734,13200,13292,13717,13761,13805,13906,15087,16299,16687,16834,17297,18557,21936,22023,22268,22388,22623,22662,22761,23209,23680,23781,23979],"classify":[11149],"tire's":[5790],"instanceid":[1874,21464],"low-level":[3115,3744,5229,12699,12754,16590,17943,19457],"cginclude":[12065,19679],"sendrate":[3885,3954,13448],"emphasis":[7308],"crossfades":[15479],"non-interactive":[8399,8511,16495,16637,17026],"gl_lightsourceparameters":[19111],"rotations":[658,3085,3703,4141,6442,14220,15017,16070,21837,22646],"zip":[256,1554,1605,6364,6385,6562,8282,9215,10953,12953,15396,15663,21350,22912],"vertical":[314,425,473,717,1417,1480,1737,1760,2107,2173,2681,3000,3283,3619,4953,5586,6610,6809,7190,7358,7784,8646,9018,9603,9694,10893,12934,13839,14191,14271,15090,16159,16236,16402,16453,16504,16692,16721,16752,16971,17034,17144,19067,22568,22655,22695,22719,22868],"inch":[16114],"nonetheless":[10908,12449],"usually":[72,184,234,275,1112,1349,2138,2283,2372,2632,3226,3767,4137,4483,4739,4778,5246,5298,5639,5788,5818,6692,6866,6947,7145,7981,8198,9275,9357,9513,9617,9924,10198,10431,10774,11154,11289,11305,11452,11985,12557,12606,12611,12680,13315,13351,13576,13913,14067,14535,14842,15223,15329,15473,15504,15600,16027,16347,16716,16932,17092,17159,17465,17942,18040,18342,18412,18604,18687,19190,19434,19459,19541,19874,21543,21713,21905,21927,22024,22111,22238,22305,22422,22639,22704,22761,22924,23298,23376,24001,24282],"noforwardadd":[19439,20434],"target's":[7104],"control's":[8393,16558,17040],"tkdiff":[894],"typeextensions":[24259],"library's":[22422,22760],"myshaders":[17860],"ephemeral":[12201],"requiring":[7279,9263,13174,15617,23806,23863,24022],"nice":[661,1211,1633,4037,5585,6805,7156,8121,11596,12457,13935,14064,14872,15893,19433],"internally":[147,658,752,1349,1613,4451,4658,5513,6668,6708,8781,11301,12542,13361,13441,13717,13743,13974,15014,16793,18037,18251,18957,18963,19070,19248,19538,19771,20778,24019,24044,24206],"usepass":[17933,18425,18965,19037,20768],"dependency":[1798,2065,11349,17171],"navmeshobsolete":[6018],"proceduraltexture":[6014],"advances":[13008],"reusable":[6418,10150,12577,22861],"builtgame":[1978],"networkview":[3955,5985,13470,13591,13739,13766,17271],"myrarelyupdatedvariables":[18338],"stylistic":[12043],"valvesoftware":[13321,16084],"gizmo":[2552,2828,3048,4856,5786,8125,14069,14748,15851,15891,22087,22105,23728],"access-control-allow-credentials":[23882],"ipointerclickhandler":[21758],"savefilepanel":[1823,10492],"produced":[1285,1352,2372,3005,4983,9506,9911,10291,12495,14071,14191,14782,15585,15663,16664,17413,18935,22244],"tight":[12810,12917,15474,21419],"fork's":[6703],"signed":[1533,15804,19281,23416,24202],"distributing":[15215],"weren't":[12199,24145],"component":[71,304,348,395,607,617,639,674,684,1055,1112,1695,1962,2119,2122,2139,2190,2296,2362,2368,2431,2600,2657,2702,2737,2763,2772,3028,3039,3133,3141,3181,3241,3263,3397,3439,3487,3534,3592,3620,3748,3763,3849,3900,3985,4012,4104,4156,4846,4968,5023,5141,5178,5268,5324,5330,5375,5387,5470,5745,5868,5880,6444,6683,6714,6742,6938,6940,6982,7340,7378,7445,7804,7900,8037,8072,8116,8199,8817,9186,9211,9569,9578,9678,9692,9729,9845,9947,9983,10030,10034,10056,10153,10303,10956,10970,11120,11141,11195,11212,11476,11527,12378,12600,12613,12946,12967,13087,13121,13132,13190,13249,13265,13447,13563,13732,13771,14007,14015,14074,14112,14166,14186,14281,14306,14326,14748,14786,15327,15566,15583,15604,15856,16045,16090,16241,16446,16488,16529,16549,16564,16615,16695,16733,16744,16757,16934,16944,17065,17089,17152,17204,17218,17253,17257,17834,17990,18333,18609,18881,19267,20708,20810,21372,21398,21927,21951,21981,21984,22101,22242,22548,22554,22585,22641,22664,22687,22718,23264,23269,23382,23388,23588,23729,24208,24543,24642],"stairs":[2801,3837,12917,13149,13263],"popular":[9312,9367,11802,11950,22092],"serializable":[5205,7533,8058,16809,22389,23000,24287],"percent":[2523,2545,23453],"numbers":[720,1230,1473,1557,1739,1766,2061,3087,3163,3705,3833,4104,4114,4317,4521,4615,5211,5393,5876,7376,8075,9912,10810,11124,11426,11702,11839,11882,12229,12588,13085,13326,13976,14302,15051,16952,18275,19131,21927,22052,22436,22885,24608],"exactly":[181,291,462,490,658,1152,1350,1413,1763,1905,2124,2752,3673,3766,4814,5143,6443,6550,6655,7324,7341,8997,9679,10539,11136,11169,11305,12520,12648,13316,13449,14874,14907,15086,15525,16208,16801,17347,17552,18037,18254,18978,20067,20185,20441,21386,21615,21929,22109,22568,22870,22899,22956,24024],"0x2fffdd34":[22409],"filter's":[2250,2266,2386,2394,2401,2419,2439,2447,2456],"overdrawn":[14188],"thereby":[10921,13291,13839,14790,15346,17263],"overhead":[1111,1178,2281,2628,3673,3823,3869,4132,4148,4940,5285,5874,6442,6919,7154,7308,7892,10844,10905,11146,11511,12180,12201,12608,12657,13295,13565,13860,13921,14036,14934,14958,15067,15087,15434,15445,15456,15484,15585,16679,18040,21809,21855,22097,23893],"unity_pass_prepassfinal":[18359,20146],"loadnewlevel":[15206],"livelink":[11494],"traffic":[13311,13466,13756,13766,17338,22493,22926,24391],"stars":[3094,3715],"nvperfhud":[12523],"lightdir":[18690,20137,20193],"inside-out":[18390],"debugging":[207,276,1071,1487,1533,3887,4227,4600,4671,5099,6677,8075,8095,11583,11982,12640,13754,14807,15197,15634,15800,16330,17296,17943,18427,18554,19524,22396,23314,23804,23985,24127,24166,24552],"sfx":[2510],"animation###":[23110],"thee":[5009],"cutout":[9264,11175,11759,17685,17695,17699,17704,17708,17713,17730,19529,20405,22278],"touchinputmodule":[21753],"versa":[468,3521,8106,11681,13889,15935,16160,16460,22598,23170],"free'":[13882],"pbr":[21859],"reachable":[3836,17368,21925],"workstation":[6411,17368],"idling":[21617],"800mhz":[10665],"acv":[16213,16434],"nutshell":[12882],"physicmaterial":[5972],"occlusion":[226,2712,3984,4005,8093,8164,10570,11744,13840,13961,14002,16658,16672,18371,18603,20374,21570,21597,21930],"indeed":[1006,2124,6856,15332,16164,22901],"re-imported":[1068,9966],"preferably":[7121,13957],"dedicated":[7223,10558,10776,11870,13284,13729,13919,17348,23792,24235],"cmd+shift+4":[23062],"hslidervalue":[8636],"sheen":[4300,4590],"restarting":[1076,23168],"angling":[22867],"stopped":[3870,22024,24675],"vs2012":[24190],"then":[72,177,181,204,231,247,263,275,310,324,364,366,392,407,437,445,470,599,661,698,837,959,991,1017,1029,1038,1063,1111,1128,1185,1281,1459,1533,1556,1606,1615,1639,1735,1759,1797,1848,1968,2078,2128,2294,2361,2367,2477,2576,2614,2619,2689,2750,2801,2829,2884,2977,3031,3047,3062,3116,3134,3141,3185,3303,3397,3453,3491,3503,3534,3561,3639,3745,3759,3794,3909,3985,4362,4645,4714,4855,4958,4983,5096,5159,5202,5204,5323,5333,5359,5378,5400,5405,5457,5492,5540,5665,5690,5731,5790,5818,6453,6494,6640,6647,6692,6761,6806,6865,6876,6983,7084,7103,7139,7159,7276,7310,7387,7471,7766,7795,7833,7947,7992,8023,8087,8099,8287,8335,8873,9180,9187,9231,9265,9354,9422,9474,9511,9539,9597,9677,9694,9745,9860,9962,10021,10102,10293,10413,10431,10444,10461,10474,10502,10575,10766,10802,10849,10881,10953,10968,11057,11152,11193,11226,11349,11400,11452,11477,11535,11549,11683,11786,11983,12207,12588,12608,12642,12698,12754,12800,12820,12885,12904,12960,13110,13155,13273,13289,13328,13434,13448,13564,13628,13701,13736,13769,13777,13846,13900,13980,14047,14062,14066,14103,14155,14259,14334,14440,14467,14506,14676,14785,14846,14851,14944,14957,15058,15107,15153,15196,15250,15335,15343,15461,15489,15516,15576,15583,15594,15644,15867,15971,16003,16100,16160,16208,16246,16260,16392,16513,16554,16558,16687,16771,16792,16999,17331,17390,17520,17685,17815,17834,17931,18040,18311,18412,18557,18709,18940,19032,19047,19071,19220,19241,19267,19391,19433,19516,19707,19738,19781,20019,20207,20357,20510,20784,21279,21364,21386,21411,21422,21618,21630,21638,21664,21842,21936,22006,22109,22200,22244,22279,22289,22335,22383,22542,22587,22638,22710,22731,22737,22867,22877,22918,22965,22994,23132,23165,23176,23214,23294,23298,23361,23373,23436,23447,23600,23610,23756,23772,23796,23819,23894,23981,24020,24193,24287,24361,24377,24534],"typed":[233,1760,9597,10577,15106,16538],"markers":[672,1096,9330,15011],"hq":[21561],"unitysetinput":[24094],"fifteen":[10849,12604,14835],"geforce":[8309,9920,11182,15459,15487,16205,22260],"snapshot'":[1433],"cbuffer_end":[18337],"locale":[14606,22313],"currentactivity":[14569],"_lod0":[11124],"bear":[3203,9623,11044,11388,13316,13448,13872,14462,14828,18957,21827,22283,23160],"spacebar":[605,2223,17263],"occupies":[2220,5204,15250,22740],"converted":[1613,1850,2074,3196,3633,3776,5442,9321,9476,9542,9983,10960,11228,11845,17798,21977,23354,23359,23765,23812],"gameurl":[24439],"scratches":[16601],"oscillations":[2386,2394,2401,2419,2439,2447,2456,10451],"baumgarte":[4122],"de":[236],"github":[6700,6707],"disturbing":[9981],"ldr-only":[9187],"direct":[12,1467,1950,3707,6860,8162,9208,11506,12618,13312,15237,18037,18311,21403,21546,21607,23873,24374],"visibilitychanged":[24053],"staged":[7152],"f#":[23299],"hz":[1221,2248,2264,2378,2497,2525,2543],"audiosource":[1330,2329,2358,2388,2441,2475,2592,5932],"dst_alpha":[19123],"highlight":[3186,5324,6983,11903,15195,17533,17899,18883,19846,21579,21618],"anti-aliasing":[4962,5102,9198,10771,15428,15447,15457,15485,18376,19071],"3xx":[11805],"connectivity":[13164,13310,13351,23874],"signing":[4434,4562,23410],"hexidecimal":[24416],"unity_ambientground":[20761],"my_game_project":[17435],"authenticity":[14076,14204],"somestruct":[22389],"numtochoose":[15302],"fixedupdates":[10820],"listener":[1112,1458,2360,2420,2449,2549,2559,21991],"involving":[3673],"worlds":[1379,3633,3746,11930,14770],"re-map":[16159],"use-case":[13083],"m_skyboxmaterial":[24740],"findclass":[14537],"hlsl":[5221,6625,7129,11750,13946,17795,17821,17941,18056,18312,18681,19088,19181,19381,19442,19459,19972,20134,20353,21080],"permissions":[4403,4531,6521,9667,17275,22320,22975],"chrome":[11923,17567,23769,23808],"dimensions":[3209,4907,4979,5048,5733,8403,9982,11716,12462,12804,13090,14244,14870,16508,22642,22901,23450],"in-game":[5578,5668,5693,6606,9569,11451,12368,24549],"playfullscreenmovie":[3796],"formula":[8100,11169,11452,12628,15384,17524,18829,19286],"convinces":[17371],"swirly":[4064],"enabled":[93,243,394,557,595,1077,1178,1517,1540,1637,1741,1928,2145,2278,2564,2650,2781,2829,2892,3035,3066,3071,3152,3296,3342,3394,3453,3494,3520,3604,3639,3668,3689,3751,3773,3830,3863,4018,4033,4069,4127,4144,4222,4515,4609,4669,4769,4784,4916,4941,5016,5127,5272,5337,5349,5438,5530,5864,6391,6458,6543,6827,7900,7974,7994,8090,8121,8253,8306,8347,9186,9715,10028,10456,10840,10971,11156,11228,11350,11723,11852,12245,12593,12642,12664,13045,13217,13351,13704,13929,14005,14033,14160,14170,14226,14822,14968,15211,15339,15389,15473,15509,15606,15625,16008,16065,16170,16413,16511,16606,16956,17046,17085,17093,17683,18041,18940,19123,21277,21417,21747,21837,21865,21987,22177,22277,22307,22390,22662,23261,23355,23461,23691,23774,24094,24321,24380,24549,24581,24671],"initializecomponent":[24029],"pre-setup":[466,2815],"roaming":[163],"cosine":[1240,20724,22897],"derives":[6960,7467,14612,16794,20603],"run-lean-left":[532],"blendshapes":[3651,7996,9323,9528],"visualizing":[21112],"pvrtune":[12524],"increased":[665,5431,10022,10905,11163,12446,13922,16246,21842],"localuser":[13646],"frequent":[9625,11793,13448,13719,22021,22817],"rays":[2075,11066,11908,13227,18035],"spectral":[17159],"offices":[12818],"enable_crossdomain_logging":[17297],"six":[2990,4933,5586,6994,7834,11165,14870,18954],"pretend":[3060,10352],"dimensional":[187],"restricts":[3125,16558,22731],"regularity":[14220,14279],"usedinterval":[12423],"independent":[663,3401,4486,4742,4899,5204,5373,7909,15473,15508,16579,20853,22655,24103],"bouncing":[393,693,14037],"domes":[6420],"bounciness":[2847,4154,6447],"moreover":[11729,20780],"prefab's":[10161],"quality":[236,1111,1458,2276,2327,2334,2384,2392,2401,2417,2437,2445,2456,3570,3771,3832,4098,4325,4618,4894,4931,5111,5276,5538,5665,5690,6559,7136,9559,11122,11148,11746,11991,12604,13025,13871,13923,14032,15520,15907,15942,16027,16074,16310,16328,16584,16658,16679,17055,17880,18050,19061,19230,22093,22143,22274,22384,22921,23157,24014],"passport":[1551],"impulses":[1318],"encrypted":[15139],"appending":[22476],"ortho":[4914],"gt":[155,273,478,610,680,823,848,1064,1072,1488,1516,1531,1603,1638,1759,1783,1799,2021,2132,2430,2460,2598,2638,2702,2776,2841,2875,3011,3091,3232,3243,3268,3425,3506,3534,3607,3878,3985,4090,4109,4134,4150,4926,4932,5070,5114,5143,5209,5219,5324,5415,5427,5470,5707,5836,5867,6377,6433,6494,6672,6677,6814,6947,6984,7121,7276,7387,7942,8335,8821,9189,9221,9272,9313,9348,9360,9366,9412,9489,9542,9564,9568,9579,9629,9846,9880,9892,9926,10134,10431,10451,10462,10502,10575,10839,10844,10915,11052,11057,11195,11212,11239,11294,11341,11408,11424,11591,11750,12041,12514,12918,13089,13119,13133,13761,13764,13850,14008,14070,14105,14281,14406,14506,14676,14737,14764,14785,14868,14903,14972,15190,15396,15575,15639,15833,16212,16380,16433,16537,16563,16814,17213,17278,17390,17824,19123,20137,20782,21277,21366,21417,21692,21792,21935,21939,21951,22125,22191,22242,22307,22343,22389,22544,22556,22919,23152,23269,23316,23373,23446,23609,23628,23745,23761,24002,24128,24166,24192,24216,24306,24384,24413,24556,24642,24652],"re-usable":[8936,10105,24387],"scriptbatch":[1971],"intensity":[304,651,3560,5009,8193,9183,9571,11126,11232,14107,15514,15948,15984,16013,16250,16276,16308,16345,16586,16607,16653,16661,16680,17012,17093,17168,17908,19123,20364,21598,23378],"replacement":[15470,18361,19082,19392,19514,19777,24239],"modelname":[9272],"raw":[4904,11826,14542,15343,16495,16636,16661,18681,21661,21847,21895,22662,22728],"lightmapping":[2132,3254,3574,5085,7999,8164,9512,11193,11215,11240,11903,13916,13981,14001,19230,20429,21647],"differentiate":[4797,8112,15709,23779],"thus":[489,826,1247,1878,2065,2842,3592,5792,9425,9559,10406,10953,11731,11793,13311,13439,13449,13464,13498,13576,14069,14495,14730,15237,15607,16189,16260,16556,16579,17055,17524,17939,19483,22101,22253,22621,23790,23887,24012],"daily":[843,989],"restricted":[2054,2872,3465,6675,6865,10965,13464,22975],"unheard":[11948],"similar":[219,354,603,663,682,1854,2630,2868,3039,3125,3501,3769,4021,4846,5048,5098,5221,5743,5860,6490,6625,6668,6942,7782,8164,8289,8661,9091,9900,9968,10422,10686,11193,11344,11750,11992,12287,12456,12588,12650,13334,13457,13573,13778,13902,14036,14204,14611,14783,14870,14911,15038,15104,15399,15414,15599,15677,15885,16430,16495,16606,16637,16692,16963,17135,17177,17265,17800,17820,18334,18946,19924,20145,20605,20745,20822,21625,21796,21842,22093,22296,22675,22724,23175,23421,23878,24287,24538,24601],"multi-threading":[23895],"ellipse":[5354,17139],"debug":[89,197,669,781,1154,1488,1532,1606,1895,3881,4002,4434,4562,4656,6554,6677,6973,8096,8764,10051,10519,10839,10863,10915,11082,11336,11538,11580,11982,12211,12526,13044,13206,13584,13651,13755,13790,14412,14573,15623,15635,18567,19482,21113,21689,22392,23187,23338,23596,23783,23861,24129,24165,24205,24214,24321,24553,24579,24671],"bits":[4395,4522,5631,5669,5694,7001,10410,10773,11070,13567,15362,15503,18604,19443,19584,21343],"ext":[22299],"one-time":[13315,17384],"passfront":[19564],"difficulty":[9617,16941],"kbytes":[13448],"combine":[6421,7313,9612,11501,12318,12687,13904,15170,15445,15467,17076,17514,17857,17938,18088,18239,18441,18553,18708,18933,19028,19250,19261,21398,22951],"trilinear":[5110,5537],"_color":[11999,17828,17996,18107,18415,18907,19353,19399,19710,20471],"waste":[10616,11965],"re-establish":[6984],"prewarm":[14171],"wp8":[6502,14478,14898,19494,24582,24664,24669],"py":[6365],"maxdistance":[2578],"rotating":[663,712,4049,4100,4141,5126,5282,6986,10291,12282,12476,12745,14750,22255],"hold":[153,481,725,1155,1289,1665,1736,2047,3620,4291,4502,4584,6675,7346,8113,10986,11647,13140,14763,15098,15841,15865,21842,22652,22939],"bassline":[1324],"bypass":[1179,1337,1422,2565,5609,11256,13749],"unityyamlmerge":[21275],"mali-t624":[15685],"asleep":[5193],"precise":[663,3545,3673,3711,4059,5164,5578,9569,13871,14766,15067,15736,16189,16384,22021,22653],"constantcolor":[17856,19261],"downloadab":[11038],"dies":[10198,12454],"myutilities":[23327],"non-streamed":[15202],"indicate":[185,1096,2679,3833,6625,7906,9206,11527,13778,14074,15099,16372,16646,16713,17045,17187,19060,19158,19496,20391,21639,21689,21855,22660,22699],"same":[72,158,182,249,316,350,364,374,393,462,469,585,595,663,684,836,1003,1071,1180,1208,1418,1458,1471,1605,1675,1755,1783,1792,1878,2097,2127,2252,2268,2272,2474,2634,2733,2747,2778,2878,3062,3098,3161,3204,3322,3401,3485,3590,3593,3617,3636,3673,3719,3759,3794,3843,3955,4017,4168,4502,4584,4880,5004,5141,5371,5397,5417,5433,5561,5855,6387,6440,6442,6495,6594,6644,6744,6839,6960,7001,7085,7139,7158,7258,7309,7341,7391,7508,7782,7815,7892,7972,7994,8086,8126,8234,8377,8843,8916,8996,9256,9507,9612,9685,9694,9728,9857,10102,10221,10377,10434,10473,10778,10974,11048,11119,11135,11195,11257,11261,11349,11454,11509,11528,11720,11839,11966,12305,12454,12589,12628,12698,12790,12804,12918,13163,13194,13303,13351,13439,13449,13462,13627,13669,13722,13758,13775,13844,13907,14071,14107,14179,14204,14220,14279,14281,14304,14353,14480,14496,14566,14770,14781,14883,14983,15009,15051,15113,15215,15296,15474,15525,15562,15603,15617,15809,15846,16027,16094,16164,16202,16208,16313,16476,16615,16637,16794,16934,16990,17082,17130,17207,17259,17275,17413,17905,17931,18036,18184,18400,18601,18652,18709,18890,18978,19107,19182,19379,19874,20185,20407,20510,20788,21299,21386,21422,21562,21576,21603,21611,21664,21693,21758,21790,21839,21910,21912,21941,22111,22200,22323,22546,22565,22590,22668,22692,22725,22740,22876,22914,22949,23156,23249,23286,23307,23450,23816,23874,24181,24187,24238,24277,24308,24312,24327,24416,24538,24606],"ncurses":[13434],"slower":[14,2358,2464,3636,5649,5778,7970,9197,9298,9617,10420,11147,11506,11568,11681,11947,12207,12878,13763,13943,14283,15087,16264,16760,17524,19391,19453,23782,24321],"recreated":[12454,22093],"x86_64":[14472,14689],"named":[34,753,1795,3179,3445,4814,5204,5254,7518,8013,9630,10336,13274,14358,14594,15477,15511,15971,16003,17019,17280,17987,19037,19748,20443,20769,21394,22191,23176,23438,23450,23980,24197],"getnextavailiableinstance":[12248],"vertically":[3363,7159,7360,9113,16106,16470,16619,16708,16716,16752,16958,22661,22704],"branches":[5820,14147,18078,22131,22194,22236,22242,23680],"expects":[1230,2076,7992,9962,14527,17280,19163,20849,23426],"'int'":[14563],"situations":[185,403,586,605,1460,2223,2631,2796,4143,5149,5282,6647,6763,6875,7786,8890,10111,11286,11761,11957,12192,12482,12655,13308,13565,13908,14252,15234,15912,16815,19773,22320,22383,23680,23992],"convert":[1051,6858,7968,9187,9422,9441,9539,10405,14064,16203,16432,22111,23392,23812,23863],"platforms":[136,227,1111,1247,1519,2009,2282,2467,2604,3200,4180,4538,4635,4660,4762,4813,4893,4933,5048,5128,5236,5626,5665,5690,7137,7223,8161,9258,9592,10484,10558,10903,11242,11733,11891,12444,12604,12768,13937,14358,14464,14673,14894,15001,15349,15550,17092,17537,17800,17943,18056,18301,18376,18555,18605,18678,19057,19065,19248,19446,19492,21345,21843,21927,22281,22488,23127,23266,23775,23806,23887,23895,24002,24363,24399,24538,24588],"operate":[747,4674,6763,12685,19589],"playbackengines":[1543,14612],"prison":[6856],"vita":[12720,14483,18299,19508],"license":[133,6356,6513,6711,7223,10965,11235,11389,11408,11606,13880,14315,22325,22944,23685,24199,24228],"alt-command":[15880],"ocx":[22546],"timing":[175,306,690,1256,2633,5707,11826,14056],"dword":[24153],"1-3rd":[11606],"explanation":[2128,6579,9717,10116,12203,12457,13020,16132,17514],"telnet":[15636,17351],"incorrectly":[12650,13352,17323],"m_aoamount":[24772],"socialplatforms":[13640],"javavm":[14529],"4x":[4942,12801,19274],"tracks":[573,629,2283,2570,7911,9990,22093],"yields":[73,6898],"repackaging":[1602],"larger":[242,661,1110,1519,2031,2276,2473,2684,2795,3519,3615,3774,3843,5599,5777,6838,8126,8691,9727,9907,11121,11158,11232,11825,12353,12679,12687,12887,12934,13905,14007,14067,14139,14252,14259,14302,15067,15384,16103,16558,16608,16646,17524,18086,18193,20606,21623,21649,22719,22737,23705],"tool":[156,340,387,1072,1320,1469,1543,2048,5099,5308,5764,6418,7310,7469,7942,7987,9859,10918,11494,11584,11799,12030,12558,12608,14525,14750,14949,15847,15870,16208,17404,21275,21842,21849,21931,21940,22105,22249,22404,22636,22710,23014,23403,23636,24551],"gaussian":[12041,15952,15986,16031],"assigntoatlas":[21512],"occupied":[15250,22735,24013],"droplets":[6603],"mount":[17421],"doubled":[185,17910],"gl_oes_texture_float":[1501],"drawray":[11094],"delivers":[23894],"crawl":[2156],"'selected'":[16391],"here":[6,34,274,435,554,606,650,684,866,957,985,1000,1022,1047,1200,1343,1549,1554,1634,1695,2192,2224,2715,2814,2880,3091,3203,3246,3320,3426,3529,3634,3724,3767,3888,4002,4109,4134,4465,4494,4569,4660,4750,4780,5168,5237,5425,5666,5691,5756,6664,6692,6706,6814,6944,6981,7002,7446,7475,7550,7948,7987,8039,8091,8120,8303,8339,8392,8727,8895,9029,9696,9843,9877,9993,10032,10366,10465,10482,10575,10856,10904,10942,11200,11404,11414,11454,11581,11744,11921,11947,11992,12287,12451,12640,12684,12744,12959,13185,13310,13351,13441,13641,13846,13877,14041,14138,14207,14215,14246,14335,14452,14561,14705,14740,14866,14924,14991,15018,15082,15226,15243,15350,15479,15617,15647,15775,16462,17189,17203,17262,17298,17386,17514,17806,17901,17919,18231,18429,18493,18655,18699,18860,19211,19288,19394,19457,19763,19791,20165,20458,21370,21383,21428,21583,21670,21795,21859,21906,22177,22203,22309,22446,22655,22760,22912,23176,23209,23310,23470,23655,23741,23785,23881,24013,24024,24109,24128,24367,24375,24528,24603],"lightweightdatabaseserver":[13438],"you've":[1610,6981,7084,8800,11305,11963,12544,13105,15194,19945,21981,22205,23443,24001,24145,24306,24322,24380],"additions":[7450,14004],"ip":[1070,1606,6377,6494,11730,13287,13326,13439,13749,14823,15639,15809,17391,23874,24673],"treebillboard":[19534],"motor":[3460,3487,5330,5801],"recognizes":[14985],"ui###":[23118],"dialogs":[15125],"fire3":[6810],"d3d11_9x":[19503],"stalk":[22242],"intuitively":[11963,22714],"sub-folder":[3636,14613,15099,21356],"dropdown":[1142,4888,7942,8092,8208,9846,10409,15041,15081,21338,22655],"alarm":[6913,22020],"aspects":[320,464,1355,2759,3538,6597,6988,11970,11983,12687,13445,14138,15402,23278],"argbhalf":[15473,15501],"leaderboards":[13637],"displayable":[21195],"enforce":[3035,6671,10970,15927,17090],"raised":[7381,9301,21843],"powerwall":[6406],"ticked":[598,4227,4671,21396,22492],"verticalslider":[8646],"pendulums":[3447,3501],"deleteasset":[772],"fades":[2579,9871,10165,11454,14108,17069],"given":[179,316,519,637,955,1004,1535,1621,1922,2336,2348,2421,2449,2559,2632,2657,2752,2858,4807,4933,4983,5276,5395,5431,5753,5876,6359,6464,6494,6647,7091,7152,7168,7587,7923,8098,10027,10292,10485,10830,11120,11149,11269,11349,11452,11527,11646,11761,12282,12606,12688,13218,13351,13701,13913,14236,14289,14338,14770,14836,15235,15330,15335,15938,16077,16159,16245,16365,16461,16643,16964,17139,17181,17242,17438,17935,18043,18267,18324,18488,18621,18648,18696,18965,19063,19140,19418,19471,19516,19781,20406,20772,20809,21290,21352,21428,21617,21714,21836,21873,21919,21941,21953,21991,22006,22247,22524,22675,22831,23175,23259,23361,23457,23980,24103,24713],"samplermytex":[6644],"ensure":[208,468,1044,1071,1365,1610,1637,2286,3252,5037,6385,6494,6661,7366,7911,9312,9447,9509,9530,9860,11344,12194,12454,12684,12818,13564,13630,13713,13773,13842,13907,14502,14677,14716,14827,15445,17090,18045,18557,19449,22093,22291,22497,22956,23436,24019,24309],"'create":[612,6727,8023,13883],"judicious":[11891],"crypography":[22461],"indicators":[630,1446,11555,14204,18352],"broadcast":[22493],"40mb":[5204],"per-level":[12043],"gl_eyeplaneq":[19119],"innermost":[12367],"broke":[23251],"wirelessly":[22914],"encouraged":[12184],"luminance":[5607,11234,15938,16224,16309,16346,16426,16580,17093,18270],"shining":[11925,17523,17550,17640],"originalluminance":[16441],"determines":[323,2149,2345,2356,2362,2368,2386,2394,2401,2419,2439,2447,2456,2552,2570,2651,2659,2668,2763,2782,2860,3041,3089,3141,3558,3631,3669,3992,4075,4107,4122,4143,4848,4946,5171,5210,5350,5385,5436,5739,5745,7373,7913,7995,9704,9872,11069,11297,13613,13844,14069,14306,16093,16278,16327,16420,16555,16725,16744,17516,18037,21890,21907,21953,22118,22154,22689,23254,23728],"separate":[133,182,237,468,586,890,1685,2022,2645,2713,2878,3010,3439,3592,3619,3759,4107,5561,5785,5817,6603,6643,7150,7279,7782,8039,8718,9112,9264,9889,9977,10201,10484,11156,11205,11286,11349,11965,12042,12451,12504,12607,12733,13273,13329,13464,13466,13905,13996,14007,14038,14160,14268,14281,14315,14326,14467,15084,15101,15217,15444,17088,17187,17275,17864,18336,18379,18684,19023,19285,19762,21368,21372,21403,21413,21640,21890,22111,22250,22488,22879,23135,23312,23685],"rewritten":[23135],"simplespecular":[20254],"quadruped":[8024],"'build'":[15213],"solve":[1284,5163,11499,11608,13110,13155,13986,22305,22486],"maxjumpacrossdistance":[24786],"'activate":[11402,13880],"pathfinder's":[12889],"article":[15452],"ghz":[10600],"unity_debug":[14459],"connect":[263,853,1071,1168,1403,1606,3125,3597,9370,10431,11731,12787,12884,12934,13278,13287,13326,13439,13462,13613,13729,13773,14969,15067,15081,17329,17387,22446,23151,23634,23776,24175,24299],"link":[996,1064,1668,1795,3480,3835,4011,6359,6727,6778,6984,9430,10100,10414,10432,10928,12787,12815,12880,12929,13130,13183,13185,13266,20809,21772,21901,22462,22956,23532,24187,24230],"imports":[755,1612,2017,8002,9373,9388,9400,9431,9481,9519,9547,9999,21395,22990,23368],"chat":[13464,13466],"space":[30,179,291,342,573,1353,1456,1762,1786,2047,2076,2121,2278,2575,2625,2637,2652,2657,2706,2737,2783,2797,2827,2858,2964,2972,3031,3062,3078,3250,3347,3388,3451,3487,3566,3592,3619,3663,3696,3781,3843,3985,4201,4689,4765,4958,5330,5351,5359,5378,5415,5476,5563,5751,5773,5806,6449,6603,6717,6851,7103,7389,7845,8099,8401,8693,9046,9263,9623,9706,9850,10292,10538,10970,11129,11168,11197,11224,11644,11802,12031,12454,12917,13001,13149,13274,13380,14062,14071,14109,14153,14161,14180,14298,14304,14750,14831,14878,14885,15093,15099,15326,15335,15349,15470,15494,15808,15931,16116,16292,16334,16406,16454,16485,16504,16552,16606,16643,16657,16672,16715,16861,17149,17204,18267,18315,18365,18603,18719,19060,19085,19141,19244,19479,19899,20361,20711,20845,21413,21558,21599,22103,22303,22581,22639,22671,22703,22719,22737,22867,22877,23099,23392,23600,24014],"checkmark":[17069,22689],"peertype":[13483],"sessions":[14848],"clones":[1324],"conditionally":[193,10437],"book":[17900,22358],"parts":[188,269,335,358,366,388,595,673,684,1202,1471,2131,2206,2619,2633,2665,3501,4449,4567,4656,6622,6667,7129,7335,9263,9302,9593,10114,11055,11439,11749,11966,11981,12518,12602,13179,13889,14958,15235,15596,15958,15993,16165,16331,17265,17640,17732,18033,18077,18410,18684,18889,19099,19153,20454,20652,20813,21398,22085,22437,22867,23361,23426,23895,24383],"peer":[13443,17348],"unityplayernativeactivity":[14643],"determining":[11567,13727,17299],"ydrive":[2884],"m_bits":[24881],"textblock":[24707],"vig":[20922],"parallel":[1417,2657,5256,6622,7124,7152,8306,10776,11655,12797,13329,14191,22866],"caveat":[5309],"passage":[22026],"iphoneinput":[11687],"put":[79,254,496,1235,2713,3305,5283,5460,5513,6739,6791,6913,6961,7133,7446,7770,7892,8701,9018,9233,9709,9863,9878,9959,11155,11293,11683,11785,12342,13464,13933,15200,15574,15788,16836,17207,17465,17858,18336,20251,20444,21927,22206,22522,22979,24357],"capsulecolliders":[5164],"explosions":[3867,4096,5832,10162,12291,14105,21952],"won":[1919],"tutorials":[931,6945,14843,15221,17815,17822],"timemanager":[5164,5883],"joystickbutton6":[1483],"acceptable":[2962,4489,4745,9619,10905,11226,12446,15388,18040,21912,22024],"standardassets":[10095],"trash":[808,22373,22536],"delta":[2906,3519,3890,3898,6811,10451,13447,13701,15598,20725],"myarray":[15242,23858],"expert":[9258],"dampen":[2849,14026,14109,14162],"standalonewindows":[1978],"attack":[2312,15248,17366],"low-frequency":[2518,2536,8162,12041],"run-lean-right":[532],"buffer":[2250,2266,2468,2700,4291,4502,4584,5103,6641,7310,8092,8272,9187,10766,11168,11251,11770,12504,13629,13713,15466,15495,15944,15980,16015,16061,16658,16999,18037,18078,18217,18335,18377,18394,18604,19020,19540,19763,20714,23837],"filtered":[2345,2356,2449,3772,5107,5534,11681,14920],"walks":[2426,2619,12929,14830,15600],"enablekeyword":[18544,18936],"particles'":[4050,14155,14226],"quarterly":[977,1012],"sized":[2807,4968,6610,9641,9692,13846,16219,16440,22568],"'backup'":[1605],"shooter":[2693,13177,16085],"secret":[10343,11286,17373,23417],"surf":[18513,18585,19720,19798,20175,20395,20477,20796],"branch":[6692,18312,21636,22130,22193,22214,22248,22520],"rebound":[4154,5385],"plausible":[12034,16081,20403,21574],"visited":[13160,15296,23532],"fuel":[14064,14102,14259],"thought":[391,606,625,2224,4973,5205,12456,22866],"lowpassfilterfactor":[11674],"sampling'":[11255],"contexts":[7394],"drum":[1324,4058],"offer":[688,4132,4148,5206,6447,13287,13330,13773,14868,16158,17912,23607],"timemachine":[22370],"slashes":[17860],"obstructions":[12913,13158],"topologies":[6419],"kill":[5862,10226,10449,11836,13291,14029,15068],"swapchainpanel":[24548],"footer":[23540],"pulls":[3459,18400],"grayscale":[5530,6858,9301,9569,9869,16224,16425,17496,18270,21594,21847,21895],"speccolor":[12011,20160],"profiles":[9629,10435,10560,13634],"assetmetadata":[6081],"breathe":[603],"eula":[11403,22952],"copied":[802,4491,4747,7397,8285,9324,9559,10075,14506,21368,21656,22737,23294,24280],"backing":[826,1616,17403],"puppet":[12227],"comparetag":[431],"blends":[1705,1733,1753,8165,15526,18659],"presumably":[18043],"bakes":[663,12030],"getcachedir":[14573],"paintbrushes":[11924],"bookmarks":[10103],"disablewritetypetree":[151,1932],"ignoreprojector":[18418,19782],"webcam":[10025,15796,23802],"www":[56,286,1599,1619,3059,7222,7928,10340,10505,10963,10974,11235,11270,11731,11814,13324,15140,16084,16645,17240,17273,17442,21664,22487,23741,23801,23875,24014,24210,24218],"looked":[11155,18497],"145534-mountain-lion-macbook-pro-retina-gt-problem-for-unity-games":[9651],"adequate":[9621],"detrimental":[4932],"high-polygon":[3649],"shader_api_gles":[18291],"mood":[1376,3539,6990,11211],"logerror":[89,6677,13044],"keypads":[11711],"approx":[10060],"adreno":[1495,1522,11189,11805,12522],"onreceive":[13438],"playerfire":[3966],"bitmask":[11069,12897],"x-ray":[1649],"unity_lightatten":[20754],"goodies":[7118],"lateupdate":[574,7786,7911],"collider":[2078,2139,2229,2646,2656,2764,2777,2793,2857,3038,3178,3551,3644,3664,3866,4113,4138,4153,4161,4833,4845,5143,5195,5345,5420,5432,5766,5817,5856,5915,6442,7797,10113,10907,11798,12448,12631,13190,14010,14036,14766,14876,15028,15583,21933,22114,23275],"csc":[14462],"modal":[2524,2546],"entry":[1231,14992,15036,18684,21452,21635,21669,23904,24412],"webplayer":[133,3060,4191,4547,4647,4685,4749,4800,6503,7021,7223,9928,10077,11148,11305,11373,12644,14896,14962,15169,15210,17264,21370,22523,23178,23445,23920,23977,24391],"children":[674,715,1410,2640,2737,2759,6780,7091,9210,9704,9731,11527,15005,15575,16486,16734,16852,17150,22109,22601,22664,23209],"perry-smith":[11235],"assetbundlerequest":[11276],"theoretically":[14937],"modular":[11,9268],"execnet":[6373],"cameras":[2117,2121,2133,2665,3181,3243,3397,5096,5324,6418,6431,6987,8116,8269,8276,9315,9448,9855,11055,12655,13864,17095,18037,23095,23730],"0x0035a":[22399],"precomputation":[8196],"framerates":[580],"getallassetbundleswithvariant":[1953],"swoop":[13162],"problems":[25,904,1633,2049,4002,4443,4713,5142,5310,6962,9289,9542,9612,9651,10460,11356,11608,11745,12495,13155,13285,13975,14311,14330,14781,16834,17277,18412,22023,22258,22283,22320,22384,22918,23461,23979],"versioning":[836,7941],"deforming":[5584],"connects":[707,2826,3128,3450,13327,13576,22546,23134],"quadrangulate":[9321],"lowered":[7381,21842],"physics2d":[4150],"onstatechange":[11519],"sphere-shaped":[5346,8292],"cleaned":[10473,10539],"suppose":[532,15297,24145],"syncing":[363],"user's":[747,1456,4339,4621,4675,9914,17331,17931,19390,19419,19732,23461,23993,24107],"registerparameter":[1221],"--path":[2037],"'check":[11401],"d3d11":[4204,4690,4766,18311,19498],"mrt":[15436,15487],"usb":[207,263,269,1071,1606,10431,15653,15808,22289,22914,23137],"must":[22,34,168,181,221,253,265,580,591,661,696,865,991,1017,1033,1112,1166,1235,1407,1599,1615,1676,1860,2009,2131,2293,2423,2626,2633,2737,2962,3037,3092,3133,3155,3200,3310,3366,3561,3633,3713,3778,3893,4124,4362,4522,4654,4846,4909,5002,5121,5289,5385,5525,5739,5765,6380,6437,6453,6508,6634,6656,6778,6860,6868,6960,7001,7334,7366,7471,7675,7786,7815,8099,8554,8816,9187,9286,9321,9373,9454,9505,9704,9868,9914,10071,10150,10427,10484,10560,10901,11148,11388,11454,11717,11891,11951,12688,12781,12887,12936,13293,13351,13441,13500,13578,13701,13736,13846,13913,14067,14325,14334,14454,14502,14677,14716,14880,14983,15082,15199,15297,15457,15485,15713,15809,15916,15939,15976,16017,16023,16033,16062,16139,16190,16246,16257,16273,16287,16323,16358,16366,16398,16407,16498,16520,16581,16603,16615,16649,16659,16675,16736,16762,16787,16934,16996,17051,17088,17097,17136,17160,17178,17188,17327,17384,17858,17935,18041,18161,18607,18684,18872,19045,19230,19257,19382,19483,19755,20020,20146,20390,20776,21080,21352,21372,21437,21655,21809,21906,21930,22277,22485,22664,22682,22917,23158,23176,23281,23360,23392,23401,23447,23601,23776,24014,24087,24219,24277,24325,24379,24416,24669,24713],"prefers":[13576],"tri":[7835],"group'":[1407],"current's":[16079],"unity's":[294,380,464,931,1284,1456,1614,1633,2054,2216,2302,4434,4562,4714,4909,4960,5166,6591,6597,6681,6711,6940,7222,7335,7987,8039,8271,8343,8399,8772,9179,9184,9559,9593,9979,10373,10576,10877,11309,11921,12037,12518,12700,13271,13282,13329,13633,13727,13763,13770,13904,14000,14017,14069,14325,14340,14496,14798,14892,14964,15101,15169,15211,15239,15400,15402,15538,16839,17024,17199,17201,17795,17821,18033,18336,19125,19221,19229,20655,20782,21360,21386,21664,21834,21971,22020,22341,22490,22553,22637,22735,23119,23301,23382,23461,23687,23743,23874,24299],"hand-coded":[5309],"declare_effect":[1232],"body":[196,335,358,366,388,518,674,1471,2170,2206,2619,2826,2962,3128,3450,5359,5801,6667,6883,9937,11454,11487,12041,12685,13123,13193,14007,14239,14870,15235,15590,17347,17867,19769,21398,21929,22109,23527],"blueprint":[6960],"polygoncollider2d":[5919],"characteristics":[2696,5431,15404,19451],"payload":[23439],"assetservercache":[6088],"neighbour":[16182],"gx6450":[10645],"sections":[589,626,970,4106,4168,5516,8128,9268,10025,12544,12695,14771,15088,15239,16763,17861,19220,20782,21941,22320,23792],"echo":[1456,2254,2270,2335,2347,2403,2523,2545],"non-physical":[5202,15585],"horizontalbillboard":[4080],"terrainengine":[18253],"single":[53,179,249,300,353,374,391,589,605,637,674,878,1047,1733,1755,1798,1878,2223,2279,2747,3143,3265,3267,3333,3476,3592,3759,3887,3909,4222,4669,4968,5159,5299,5454,5560,6409,6442,6495,6868,7002,7133,7279,7313,8086,8226,8522,8773,9180,9264,9612,9702,9977,10112,10773,10907,10974,11155,11208,11356,11396,11506,11909,12308,12485,12584,12599,12651,12655,12756,13273,13309,13457,13601,13921,14007,14107,14272,14459,14749,14790,14889,15329,15384,15470,16053,16172,16188,16608,16710,16734,16822,16959,17046,17077,17135,17347,17516,17938,18035,18333,18606,18955,19150,19397,19738,20147,20554,21372,21398,21413,21552,21576,21603,21643,21891,21910,22023,22097,22193,22242,22275,22521,22558,22737,22869,22944,23175,23275,24117,24363,24374,24538],"observe":[4885,5101,6434,8397,8779,10339,13739,14828,24648],"writemask":[19549],"irradiance":[8219,23710],"concurrent":[11840,13360],"endgui":[7463],"m_localrotation":[8067,24841],"strafing":[1758,15600],"farthest":[13841],"optimisation":[1437,3617,8128,11119,11154,15342,15588,22497],"compilation":[904,4210,4533,4625,4696,4773,4789,5240,6625,7129,9612,10921,13430,14357,14510,14730,17186,17948,18248,18303,19099,19463,19996,20454,20655,21356,22456,23894,24326,24521,24544],"enlighten":[8161],"gap":[16678],"selectionmode":[41,1826],"unity-iphone":[22424],"dimension":[291,3209,14326],"unity-":[2021,14991],"findobjectsoftype":[11788,12560,13512],"horizontalinput":[3920],"faded":[490,9867],"exportassetpath3":[6509],"30fps":[9240],"gl_oes_packed_depth_stencil":[1501],"'simplest":[1554],"bent":[21882,22159],"fitness":[11345],"unitywwwrequestdefaultprovider":[10346],"unlimited":[2665],"categorisation":[1367],"signature":[14727,22391,23444],"carbody":[11454],"vblank":[4953],"children's":[7091],"pulled":[2876,15234,23656],"vcr":[16602],"beginscrollview":[8700],"bugreport":[10421,10464],"compensate":[7992,10022,11568],"lib":[4264,4548,4648,4705,4801,14518,22299,22496,23353],"fourth":[13576,22249],"snapshot":[1131,1147,1430,1449,8171,15060],"disconnects":[17362],"consumer":[11861,11871,12525],"23f":[7517],"sets":[50,299,1745,1769,2464,2574,3989,4009,4807,4933,4996,5206,5527,8009,9483,9524,10068,10304,12345,12478,12820,13453,13842,13922,15750,16170,17910,18040,18164,18669,18866,18987,19096,19295,19408,19773,19793,21422,21714,21910,21965,22020,24052],"arbitrarily":[1905,4454,4565,8058,18030,22603],"inspired":[21691],"'class":[16851],"temporal":[11840,12408],"backward":[442,1755,4930,8086,15865,23979,24046],"letter-boxed":[291,4511],"inputmodule":[7807,15339,16391],"exclude_path":[20425],"gauge":[18048],"firstly":[263,1398,10373,11232,12644,12753,12959,14076,15251,15971,16003,16563,17019,21606,21810,22338,23352],"'main":[24004],"unity_ambientsky":[20760],"mybool":[7516],"soundscape":[1355],"unityproject_name":[9461],"rendertexture":[5934,6436,6641,8087,19071],"google":[170,242,4433,4561,6700,11861,23149,24402],"label-":[3234],"gestureworking":[15773],"clearly":[532,4017,12790,14899,21772,21971],"squashing":[8128],"didn't":[728,9566,12517,24158],"scheduled":[978,5002,17094],"deformed":[1693,5268,6447],"triggers":[2229,4127,4144,4833,5405,6448,7308,8170,9743,13189,15018,15585,17205],"assetbundlecreaterequest":[15165],"configured":[170,1516,3626,6447,6661,7797,7818,10027,10292,12684,13249,15562,16421,16964,17111,17384,18566,19524,21753,21927,23879],"non-humanoid":[379,2616,8135],"lost":[253,826,884,2820,3898,9193,12207,12748,13449,14846,17094,22927,23214],"onlybackground":[16328],"comma":[723,17908,21945],"decomposition":[12044],"watched":[3890],"machines":[22,350,358,398,595,602,606,920,2156,2194,2224,3115,3744,4198,4686,4762,6517,8335,9286,9458,9619,9741,11403,13272,13308,13351,13567,13575,13771,13938,21619,21631,21634,22947,23780],"touch":[263,1518,6614,7802,9614,9832,10027,10292,10446,10639,10848,10870,11613,11947,13326,14064,14644,15718,16987,17109,18428,22485,22681,22915,23137],"spikes":[15095],"fovforheightanddistance":[7172],"commanded":[603],"written":[72,225,606,625,1488,1528,1848,2224,3804,5221,6515,6625,7994,8039,10567,10782,11228,11464,11750,11923,11980,12751,13767,13946,14684,14719,16799,17189,17323,17793,17821,17942,18055,18180,18394,18680,19047,19202,19248,19283,19376,19459,19541,19945,20353,21362,21752,21847,21981,22278,23811,23889,24325],"limited":[133,1533,2140,2872,3497,3671,4198,4686,4762,4900,5340,7223,9621,10774,10947,10964,11166,11746,11891,11951,11978,12462,12818,13724,13891,14723,15429,15457,15485,16065,16932,17167,18306,19106,19489,19588,21715,21967,22651,23158,23374,23886],"tradeoff":[4902,5630,5668,5693,10905,12446,13863,15914,16310],"unfriendly":[836],"dude":[17209],"2qq":[254],"routes":[12882],"warn":[11241,13330,15026],"shader_api_gles3":[18292],"x3100":[15459],"unreachable":[13309],"alive":[4038,6973,23596],"completed":[221,940,1513,1548,4004,6999,7911,8218,10560,11420,12645,14171,14334,20811,23356,24013,24408],"rescales":[1783,7987],"sacrifices":[24014],"aperture":[16295],"first-":[2138],"within":[294,366,383,406,434,585,605,625,684,747,933,986,1037,1096,1112,1130,1144,1208,1333,1393,1570,1615,1633,1860,2122,2209,2223,2228,2421,2559,2619,2752,2772,2801,2850,3103,3143,3208,3271,3366,3386,3465,3636,3724,3914,4141,4900,5011,5330,5393,5707,5764,5832,6424,6586,6702,6825,6868,6947,6998,7112,7159,7350,7381,7483,7770,7776,7942,8058,8462,8773,8965,9370,9457,9621,9889,9962,10344,10913,11156,11197,11213,11399,11408,11452,11593,11684,12537,12620,12652,12758,13275,13438,13736,13870,14007,14222,14304,14337,14359,14749,14868,15217,15329,15336,15838,16558,16643,16702,16722,16745,16757,17004,17046,17134,17177,17195,17237,17262,17387,17858,18062,18889,19589,21356,21372,21413,21625,21640,21664,21689,21836,21910,21949,21967,22105,22495,22651,22731,22817,23175,23281,23377,23381,23398,23401,23449,23600,23653,23756,23894,23999,24407],"resumes":[12652],"obtained":[52,1743,1767,7114,8100,12042,13224,14530,15251,16168,21414,21658,22416],"#8220":[22393],"xmotion":[2872],"colorvalue":[18668],"toe":[14839],"gases":[14259],"animatortransitionbase":[6110],"assocation":[24110],"led":[10603],"hierarchic":[17259],"beginvertical":[9112,16862],"tearing":[4953],"points":[179,314,318,329,580,632,665,1154,2189,2634,3592,3830,4020,4974,5371,5727,6647,7103,7372,8273,9378,9393,9405,9432,9482,9523,9552,11132,11171,11193,11345,12034,12588,12817,13028,13158,13301,13725,13913,14045,14117,14196,14211,14250,15074,15296,16128,16175,18684,20504,21579,22253,22650,22882,23392],"elegantly":[21640],"wants":[1186,9709,13289,16841,19292],"smear-looking":[2708],"inputmanager":[5889],"covers":[4232,7763,8341,10439,10482,10911,11544,13282,13996,14015,17237,22681],"'https":[7022,9929,23479,23921,24461],"animate":[302,309,318,366,393,484,639,674,684,2118,2148,2198,2619,4033,4575,5128,5310,7982,8022,9412,9510,9531,9781,13162,13998,14916,20722,21386,21955],"dx11-only":[7129,19099,20454],"declaring":[8395,18331,19154,20956],"depiction":[13839],"+knee":[20328],"somewhat":[2277,3125,7151,7792,11122,12482,13274,13309,14600,15067,16284,16320,17552,19588,21839,21844],"entails":[1111],"new-":[18561],"ongroupatlases":[21428],"trough":[23757],"soloing":[2482],"genre":[1324],"_bindchannels":[18140],"traded":[11148],"recessed":[9301],"per-layer":[2713,13931],"enhanced":[7764,14259,15938],"saysomethingtounity":[23181],"high-end":[11861,11913,13937,16687,19036],"metric":[9235,22431],"sparse":[12336,21341,21837],"updatebodies":[15017],"sizedelta":[9685],"buildpipeline":[34,1790,1859,1968,6528,7767,10494,11290,11350],"grains":[16608],"source_multiplayer_networking":[13321],"pixel-level":[3413],"generate":[469,1112,1230,1607,1633,1934,2794,3023,3631,3642,4603,4884,5610,6443,7988,9305,9340,9643,9871,11124,11412,12308,12931,13871,13929,14266,14279,14933,15296,16083,16193,16331,16762,18361,19482,20410,21570,21926,21977,22212,22325,22554,22777,23338,23402,23772,24377],"-package":[1544,10089],"unity_declare_shadowmap":[18332],"processing":[367,1111,1131,1154,1203,1349,1613,2426,2620,3673,4003,4017,4132,4148,4940,5244,5285,5482,9191,10764,10802,10848,11146,11499,11768,11936,12516,13149,13174,13289,13441,13652,13867,13898,15014,15443,15456,15484,15902,15961,15995,16026,16159,16245,16340,16392,16421,16679,17010,18040,18140,19071,21978,22023,23145,23241],"select":[48,237,279,289,310,324,364,368,434,592,637,678,682,848,1053,1091,1103,1163,1400,1535,1602,1639,1695,1733,1753,1800,1848,2097,2200,2232,2362,2368,2485,2532,2599,2611,2621,2638,2998,3202,3268,3424,3542,3620,3909,3991,4092,4161,4266,4525,4619,4707,4803,4825,4836,4871,4932,5036,5406,5423,5427,5489,5519,6386,6859,6951,6983,7343,7380,7766,8091,8187,8821,9189,9208,9220,9305,9313,9347,9420,9447,9501,9533,9587,9745,9854,9871,9881,9968,10043,10060,10158,10431,10471,10502,10835,11050,11057,11338,11414,11426,12642,12907,12964,13108,13137,13464,13859,13879,14069,14222,14406,14465,14773,14789,14853,14966,15084,15114,15196,15342,15663,15721,15828,15838,15867,16216,16437,16760,16941,17210,17263,17390,17835,17943,18558,20784,21277,21419,21630,21839,21900,21915,21940,21984,22128,22143,22191,22218,22242,22327,22423,22557,22655,22914,22991,23052,23152,23269,23310,23382,23398,23636,23730,23745,23774,23983,24020,24173,24278,24322,24344,24377,24515,24532,24556,24570,24652,24671],"skips":[3254,10802,12552,15237],"dreams":[15226],"high-class":[11921],"20x20":[7145],"track":[15,392,690,752,1002,1797,2961,3543,3793,5788,6763,7908,9299,9743,10490,10909,10973,11199,11339,11581,11614,12041,12207,12573,12653,13437,13757,13989,14062,16061,16726,18037,22024,22442,22740,23214,24014],"response":[1297,2494,3487,3519,5330,6444,6742,7393,7776,7920,8522,10365,11230,11541,13293,16963,17110,17349,23613,23790,23886],"weird":[12596,24128],"wear":[5855],"1st":[2244,2260,9912,11606],"hfreference":[2525,2543],"policy-file-request":[17347],"remoting":[10923],"because":[255,367,554,661,693,1203,1360,1470,2128,2620,2801,3199,3303,3477,4003,4141,4443,4713,4820,4993,5241,5310,5788,5862,6708,6962,7148,7334,7804,7909,8162,8718,9091,9562,9619,10160,10444,10558,10922,10968,11165,11226,11578,11893,11947,12042,12199,12456,12544,12611,13311,13498,13722,13761,13791,13841,13889,14037,14140,14461,14545,14736,15005,15051,15223,15276,15562,15802,15971,16003,16574,16801,17019,17325,17523,17550,17940,18035,18078,18410,18600,18618,19072,19230,19588,19783,20166,20826,21195,21637,21837,21940,21981,22201,22261,22521,22608,23234,23269,23754,23780,23895,24017,24046,24134,24206,24219,24288,24327,24588],"condition":[5757,9748,13194],"depends":[1458,1941,2283,4267,4551,4651,4708,4804,5799,9566,10909,10928,11122,11127,11228,11511,11606,11757,11945,12459,12606,12887,13083,13447,13721,13897,14069,14405,16170,16460,16686,16838,17518,17865,19233,21905,22105,22868,22924,23209,23301,23892,24391],"_phong":[20659],"heap":[10796,12218,12542,14735,15047,21673,22303,22433,22735,23766,23863],"viewdir":[12094,18269,18740,19846,20139,20255,20445],"loops":[12360,22488],"native":[224,243,585,1109,1197,1491,1556,2074,2276,4193,4618,4816,9274,9557,9966,10405,10452,10473,10476,10566,11641,12699,12750,13727,14494,14499,14674,14709,14798,15046,15804,16508,16798,18377,18606,19106,20906,21362,21541,21679,22292,22388,22726,23368,23811,23893,24089,24181,24206,24583],"fxaas":[15911],"adb":[197,208,1070,4415,4543,10840,11334,11584,14976,22294],"configuration":[399,841,2035,2830,2893,3454,4209,4524,4616,4695,4772,4786,6428,6460,6666,6805,8036,9113,10027,10421,10834,10915,11209,11228,11735,13727,16142,18562,18863,19123,21567,22558,22981,24144,24307,24321,24395,24550,24557,24577,24599,24671],"non-ascii":[9950],"hybriddictionary":[24246],"boldlabel":[7524],"setdirty":[7444],"element's":[3148,15251],"prefer":[3381,3408,4401,4529,5629,7992,9507,11302,12888,13959,14544,14781,22910,23406],"lisben":[1525],"variance":[4165,13766],"walking":[314,329,352,481,1760,2619,2630,4012,5202,6675,12878,13131,13266,13451,15865,16261,21372,21617],"morph":[9323,9508],"symmetric":[2842],"repackaged":[1602],"d3d9":[4204,4690,4766,18311,19497],"reconnect":[22330,23163],"bank":[952,11139,22093],"stl100-3":[1526],"cmd+shift+n":[23022],"tour":[6734],"vehicle":[2693,3866,5774,5801,6407,14063,14140,14325,17262],"coupled":[11541,13155],"masterserverinterface":[5991],"key-value":[19045,19755],"scroll-wheel":[7357,15882],"developer's":[23436],"help-":[23609],"do":[31,160,177,179,221,490,589,755,837,981,1063,1111,1166,1198,1349,1437,1534,1596,1605,1614,1652,1757,1968,2020,2088,2205,2595,2611,2626,2713,2854,2874,2998,3138,3200,3241,3248,3264,3302,3376,3476,3546,3639,3806,3849,3914,4854,5032,5147,5204,5236,5648,5765,5785,5855,6400,6458,6508,6606,6608,6633,6716,6778,6913,6961,6988,7084,7129,7137,7279,7329,7419,7663,7782,7909,7985,8112,8200,8290,8377,8778,8916,8996,9180,9212,9300,9314,9345,9356,9364,9558,9567,9574,9643,9681,9701,9725,9745,9866,9876,9887,9951,9962,10151,10300,10341,10428,10441,10560,10696,10856,10978,11064,11185,11253,11294,11407,11477,11529,11551,11621,11790,11862,11870,11945,12035,12204,12459,12497,12657,12734,12783,12805,12885,13215,13267,13289,13331,13570,13717,13729,13775,13803,13847,13889,14179,14343,14454,14496,14552,14719,14751,14829,14990,15010,15076,15139,15230,15349,15443,15459,15487,15528,15551,15617,15838,15928,16128,16233,16429,16476,16549,16686,16822,17089,17196,17232,17348,17520,17558,17639,17796,17837,17940,18034,18185,18303,18361,18412,18485,18568,18692,18860,19088,19248,19257,19378,19453,19457,19557,19779,19945,20134,20185,20405,20603,20784,21354,21411,21414,21573,21603,21615,21625,21664,21799,21839,21935,22023,22114,22276,22291,22422,22542,22586,22686,22899,22911,22953,22999,23160,23243,23272,23299,23384,23398,23403,23638,23744,23769,23814,23997,24131,24193,24214,24238,24343,24401,24514,24572,24592],"installation":[279,1543,3767,6358,7044,9454,9924,10071,10429,10447,12642,13315,14462,14613,17383,22191,22305,22341,22928,23940,24372,24391,24536,24603],"diagnose":[17347,22288],"invariably":[13913],"shoulder":[521],"perfectly":[181,5005,6443,7145,9426,13453,22024,22383,22915],"smaller":[10,367,2124,2277,2372,2620,2684,2856,3430,4004,4260,4537,4629,4700,4793,5060,5600,5704,6838,7330,7975,9264,9727,9907,10043,10923,11121,11139,12408,12681,12796,13822,13844,13927,14259,15088,15389,15736,16016,16103,16164,16299,16376,16491,16661,17155,17170,17986,18192,19436,20424,21495,21579,21623,21890,22197,22250,22845,24195,24389,24391],"says":[3662,9641,11402,11934,13782,17336,18645,23193],"asked":[279,3620,6706,6732,10067,13310,17387,22548],"illustrate":[10111,11684,20251,23470],"clearstencilafterlightingpass":[19589],"leveltoload":[15205],"occurring":[22397],"appdata":[163,1489,11313,19604,20479,21113,22344,22548,22975,24128,24216],"wasted":[7148,11155,11349,15400,21413,23993],"connectionless":[17338],"eventing":[16391],"spritepacker":[12297,21442],"dispnone":[20666],"junctions":[12818],"socketpolicyserver":[17347],"ingredientunit":[7541],"disapear":[9872],"dns":[13312],"on-screen":[9021,10870,13880],"done":[56,221,272,316,465,748,837,994,1017,1068,1189,1231,1343,1405,1685,1735,1759,1794,2017,2254,2270,2700,3308,3503,3580,4003,4203,4539,4636,4934,5001,5243,5652,6492,6656,6744,6962,7087,7158,7222,7316,7449,7485,7917,7942,7987,8165,8275,8403,8737,9545,9689,9692,9926,10244,10381,10410,10432,10928,10978,11418,11868,11893,12030,12204,12745,12906,12931,13075,13087,13424,13477,13578,13749,13823,13873,13902,13979,14317,14730,15014,15084,15204,15241,15581,16406,16537,16840,17317,17384,17786,18056,18241,18381,18597,19060,19240,19255,19514,19738,20251,21424,21936,21960,22397,22554,22610,22829,22918,23145,23418,24001,24212,24228,24386,24648,24660],"jumpforce":[10883],"they've":[9270],"-batchmode":[6495],"rebuilt":[151,1843,2048,7279,9249,9593,11353],"yourappx":[24202],"m_querymode":[24727],"oncollisionexit":[6452,7797,15021],"ontriggerentered":[2820],"frequency":[1221,2252,2268,2360,2366,2380,2388,2396,2413,2433,2441,2451,2494,2525,2543,2592,4333,4620,5383,5810,5830,7782,8198,9195,10848,11670,12040,13448,15535,16310,16347,18336,19434,21953,22136,22217,22247,23612],"serializes":[5205,13704,16833],"spring":[2848,2876,3028,3455,5355,5374,5776,5801,10970],"validates":[2072],"extracting":[21407],"genres":[3302],"intersection":[3477,5041,12201,14766],"accessable":[11390],"manifestfileversion":[1862],"reflect-diffuse":[20449],"notifies":[24401],"failback":[19564],"sgx":[1524,10769,11803],"#ff0000ff":[21734],"locking":[2049,14341,23652],"nay":[17438],"repeatbutton":[8537,9124],"blurrier":[15915],"idea":[825,1145,1209,1471,3617,5282,5328,5663,6727,6949,7330,7776,8299,9240,9612,9743,9857,10247,10538,10810,11193,11501,12043,12207,12451,13284,13846,15350,16158,16246,16793,20456,21617,21691,22444,22639,23190,23990],"pixel":[2076,2741,3018,3211,3387,3413,3566,3593,4907,4930,4939,5631,5669,5694,6996,8401,9183,9268,9728,9857,9920,10770,11147,11226,11744,11910,11994,13908,15351,15444,15503,15520,15945,15981,16067,16090,16158,16205,16246,16310,16351,16365,16508,16608,17009,17381,17524,17558,17639,17901,18043,18055,18326,18370,18597,18603,19032,19045,19088,19256,19433,19540,19972,20353,20828,21343,21410,21442,21855,21976,22279,24396],"management":[387,5714,9624,11392,12203,12453,12577,12640,21992,22734],"performselectoronmainthread":[22490],"vehicles":[5157,5767,13177,14064,17262],"font-family":[23528],"nightmares":[22744],"decrease":[1185,2577,5798,7397,8881,11156,11778,12542,13927,16158,22123,23272],"tempo-synchronized":[1324],"accurateplacement":[24796],"occlude":[3986,13848,16658,16673],"unduly":[22083],"readtextureimportinstructions":[21467],"equal":[269,316,458,3567,5598,6659,7106,8251,11683,11946,15241,18067,18396,18998,19569,21868,22043,22743,22892],"monobehaviour's":[151],"deals":[989,15024],"cluster":[6351,6374,6403,8226,10630,14279],"reflectivity":[17567,21592],"mypassname":[17936,20777],"inspected":[4603,7446,12287],"libdvm":[11588],"doc-prop":[10840],"certificates":[4447,4654,10433],"oblong":[10042],"pinky":[1682],"vortex":[17135,17176],"broad":[11945,17685],"shaderslist":[11359],"halfasview":[19438,20438],"cmd+shift+3":[23061],"transistors":[11826],"defocus":[16295,16328,17054],"delivery":[4173],"physicsmaterial2d":[5921],"vary":[579,693,1367,2752,3196,3890,4106,4447,4654,4885,5395,5818,6742,8126,9617,11452,13839,14049,14062,14076,14103,14888,15214,15440,16134,21557,21940,22135,22216,23308,23379,23638],"scrollviewvector":[8696],"relays":[13297,14594],"hashtable":[24242],"onafterdeserialize":[16902],"splitter":[15093],"en-us":[4460,4718,6569,14441,23742,24046,24116,24168,24187,24223,24274,24375],"screenorientation":[11564],"throwing":[352,358,366,15250,21372],"visor":[11925],"emissiveness":[8216],"propagates":[2358,2449],"scrollwheels":[3522],"toggle":[687,1338,1420,1741,1786,2623,3276,3781,3998,7527,8121,8582,8776,9662,14778,15090,15893,17061,17081,18540,21854,22247,22688,23015],"m_normalizedviewportrect":[24867],"tilting":[9617],"supplying":[147,14451],"tends":[5186,9183,11139,14072,14307,15969,16001,16686,17017],"steps":[56,200,265,1047,1553,1598,1697,5487,6359,6440,7466,7782,7947,9627,9877,9900,10073,10202,10427,10442,10470,11407,12051,12489,12645,12906,14342,14501,14772,14825,14870,14963,16202,16703,17207,18030,18559,20826,21372,21843,22204,22325,22422,22524,22876,22928,22979,22989,23132,23625,24011,24131,24199,24229,24300,24565],"verbatim":[21656],"kgfxrenderernull":[12716],"story":[2118,12342,17045],"not-hacked":[11550],"labeltext":[8896],"unpleasant":[15237],"true":[265,411,557,649,1292,1728,2139,3405,3546,3835,5289,6917,7113,7159,7516,8376,8524,8846,9660,9748,10556,10859,11263,11301,11711,11798,12269,12501,12665,12687,13038,13509,13937,14588,15773,16686,16823,18301,18418,19779,21315,21461,21747,22042,22488,23217,23728,23882,23902,24077,24399,24630,24680],"users":[163,289,964,1007,1044,1352,2009,4395,4522,4603,5312,6710,6738,6805,7451,9947,10083,11313,11606,11723,13287,13749,13763,14802,14851,15137,15230,15711,17377,17384,21415,21573,22283,22344,22409,22548,22975,23623,24223,24539],"loosely":[11541],"rad2deg":[7173,8105],"-nolog":[6554,24112],"hits":[2078,2634,3469,13227,14800],"notepad2":[14813],"considerable":[12229,22042],"press":[263,723,887,1606,1647,1737,1763,3397,5025,6970,7355,9502,10048,10159,12937,12964,13109,14407,14774,14989,15195,15785,15842,15867,16978,17118,17220,17263,21947,22308,23272,23350,23600,23763,24166],"washed-out":[11234],"grabs":[18692,19038],"responsible":[10776,12204,13285,16391,17055,22131,22544,24433],"exchanges":[13445],"autobraking":[12834],"background":[1135,1417,1456,2030,2129,2294,2669,3338,3802,4190,4621,4667,4756,5018,5161,5254,6437,6995,8352,8816,9049,9220,9422,9539,9700,11726,12456,12681,13761,14853,16079,16151,16286,16321,16378,16527,16698,17368,19522,19760,21897,22430,23446,23720,24013,24404],"prop":[14781,21790],"prefixing":[13578],"ground":[314,2794,3771,5111,5538,5796,7114,10209,11344,11655,11925,12456,13132,14204,14213,14868,15329,18046,20761,21628,21810,21843,21897,21929,21977,22877],"psp2":[6502,19508],"beneath":[3620,6999,15588,23729,24408],"reached":[581,2163,10903,11199,12444,12884,13309,14182,16201,17327,22961],"unityaudioeffect_processcallback":[1231],"+x":[5586],"somevariable":[10225],"slots":[3012,9513,9882,22204],"familiarize":[750,11117,13730,14501,22913],"movement-sensing":[10024],"wsa":[6502,14479,14898,19503,24107,24183,24277,24533],"skeletons":[1469,14835],"curdir":[13053],"replies":[13289],"visually":[1446,8661,12611,13274,13924,16046,16530,16696,16945,17066,22662],"mirrors":[2694],"translation":[1646,2872,3098,3719,4119,5341,11508,11750,13309,14750],"uneven":[10292],"leaf":[22200,22211,22249],"transitions":[386,595,606,625,1188,2224,2631,5413,5752,9741,12961,13277,14597,15535,15613,16319,16763,21617,21633,22555,22684],"rootmotionscript":[17221],"enum-values":[1212],"tech":[11949,12182,21836],"re":[11402,12951,16800],"time-consuming":[7110],"incorporating":[2633],"open-ended":[23984],"furnished":[21912],"onlaunched":[24031],"vm":[12557,14530,22302,22436],"resembles":[14880,16606],"currentgear++":[9608],"onenable":[5209,7900,9769,22629],"fashion":[16518,17933,20145,21949,22567,24001],"unwise":[13293],"believe":[23209],"padlock":[10053],"assigns":[13743,16457,17834,19260,19944],"hex":[8075,21716],"standstill":[21617],"90-degree":[4165],"three-color":[20759],"ii":[15908],"desire":[1355],"timeline":[300,314,318,326,589,665,682,12526,14065,14101,14957,15078,15091,16712,22558,23895],"addres":[15835],"trailing":[11334,22918,23435],"tone-mapping":[20312],"smoothdeltaposition":[12992],"moving":[166,379,465,635,673,712,833,2096,2121,2140,2465,2815,2876,3476,3645,3818,3849,3985,4017,4077,4124,5125,5198,5420,5578,6443,7316,7342,7942,7997,8099,9569,10022,10339,11133,11193,11621,11745,11929,12820,12955,13117,13155,13225,13226,13265,13305,13718,13843,14017,14103,14213,14325,15072,15588,15867,16055,16256,16725,17205,17212,17421,20017,20828,21401,21868,21937,21967,21994,22254,22867,22928,23880,24675],"78f":[21826],"ilayoutgroup":[22613],"conduct":[198],"executions":[19434,20959],"accept":[329,1166,2763,6548,6713,8584,13311,16045,16495,16529,16695,16744,16944,17065,17330,19090,19195,21279,23883,23993,24112],"grouped":[2006,7002,8936,9018,13438,18336,21422],"host":[1073,1256,2022,3060,4173,4757,4810,13284,13328,13437,13749,14983,15081,15211,16391,17329,17391,21370,23203,23447,23769],"gloom":[16164],"dozen-plus":[3303],"truetype":[3185,3405,5483],"clause":[20874,23439],"ackport":[6395],"--force-architecture":[920],"chooseset":[15300],"yes":[10453,11480,11778,12478,15422,15542,22266,23641,24013,24591],"unitytesttools":[6721],"child's":[22116],"solid":[179,2703,3644,5173,5580,6449,9224,10908,11136,11992,12449,12457,14017,14019,14184,14204,14213,14220,14880,18394,18866,19309,19522,19762,21582,21839,21877,21912,21973,22866],"serializefield":[16803],"mode":[448,470,629,678,688,848,1073,1109,1338,1533,1608,1647,2200,2466,2579,2708,2740,2882,3058,3189,3569,3621,3654,3772,3866,3898,4001,4169,4664,4844,4855,4927,4998,5104,5163,5190,5313,5327,5531,5823,6414,6495,6645,6661,7121,7155,8037,8091,8117,8168,8373,8996,9202,9732,9854,9879,9888,10051,10135,10339,10473,11147,11206,11232,11499,11560,11758,12213,12611,12648,12716,13447,13712,13866,13923,14005,14023,14060,14191,14272,14313,14356,14750,14858,15004,15043,15411,15516,15588,15721,15841,15873,15927,15943,15979,16093,16142,16226,16268,16370,16410,16574,16578,16652,16722,16749,17001,17054,17095,17167,17257,17526,17685,17908,18627,18664,18709,18971,18996,19154,19510,20763,21117,21398,21414,21588,21670,21839,21952,22107,22146,22226,22279,22339,22554,22639,22671,22914,23015,23134,23296,23629,23692,23783,23904,23985,24386,24412],"space'":[16130],"257x511":[5598],"multitexturing":[19029],"balances":[11956,13167],"nicer":[4966,7438,11234,16082],"legacy":[402,441,463,738,1788,2004,2036,2617,2856,3009,3067,3248,3262,3266,3332,3379,3406,3685,4029,4065,4966,5856,6602,6617,7091,8026,8177,8344,8508,8770,8887,8994,9176,9178,9574,11177,11473,11506,14186,15413,15451,17800,18054,18138,18358,18379,18858,19054,19236,19254,20425,21689,21860,24389],"getassetbundlenames":[1890],"happily":[10102,10201],"reverb":[1159,1316,1344,1460,2360,2366,2421,2510,2528,2548,2559],"3g":[10684,10917,11731,11951,22833],"sign":[994,1096,3226,9669,10433,10563,11709,19149,21395,21666,23403],"perspectives":[1437],"unity_metro":[14381,24519,24530],"base":[366,2128,3558,3824,4889,5774,7524,8014,11124,11127,11481,11530,12055,14232,15465,15522,15967,15999,16741,16771,17015,17203,17464,17472,17544,17567,17613,17618,17642,17692,17701,17710,17727,17734,17751,17778,17844,17933,18083,18354,18416,18502,18580,18861,19298,19588,19874,20369,20467,20791,21279,21458,21589,21852,21905,21929,22203,22866,23002,23377],"messages":[1094,1488,2820,3881,4645,5175,6467,6519,6677,7823,10782,10940,11580,13293,13438,13460,13466,13997,14033,14440,14496,15017,15672,16622,16627,17297,22446],"lang":[14546,15393],"bone-based":[9409,9437,9497,9527],"vu":[1154,1337,1418],"shininess":[12060,17843,18455,18884,19356,21861],"aren't":[3250,4468,4726,5168,6643,11119,12451,14874,15969,16001,17017,19090,19496,20605,22497,24589],"samsung's":[15711],"level-of-detail":[20767],"visulization":[8226],"outermost":[21701],"coin":[12281,12477],"scroll":[311,325,369,438,995,1639,3287,5616,11594,16692,16714,16993,22699],"mandelbrot":[21033],"developing":[221,275,837,1296,1600,10404,10872,11608,11956,13282,15711,15804,17237,17375,22914,23299,24414],"gl_oes_element_index_uint":[1500],"trampolines":[22472],"libplugin":[14516],"ontriggerexit":[6452,7797,15019],"abrupt":[21844],"darkens":[16658,16673],"randomly":[6659,11857,14071,14226,14288,15239,22256],"touchpad":[15692,15716],"fragments":[10766,13943],"lcd":[10589],"called":[45,187,225,318,327,381,422,632,666,1147,1206,1471,1543,1554,1632,1736,1795,1849,2712,3001,3616,3636,3954,4960,5209,5652,6447,6680,6702,6708,6913,6958,6981,7091,7133,7243,7313,7389,7438,7471,7663,7770,7776,7896,8113,8271,8306,8347,8718,8873,8917,9210,9216,9324,9370,9651,9692,9736,9924,10102,10384,10404,10501,11119,11296,11530,11622,11719,12030,12292,12453,12650,12689,12702,12904,13155,13273,13309,13329,13591,13647,13736,13773,13791,13841,14105,14594,14721,14770,14892,15013,15585,15624,16053,16164,16710,16733,16959,17077,17135,17177,17191,17209,17683,17800,17820,17939,18041,18684,18935,19207,19376,20146,20786,21275,21342,21352,21372,21431,21605,21631,21656,21753,21810,21910,21962,21988,22026,22489,22544,22648,22735,22870,22993,23175,23304,23392,23419,23449,23597,23980,24048,24427,24521,24563,24588],"degrade":[1111,16074,23159],"influence":[1186,1360,1695,1736,1754,5058,8251,12131,14842],"assembly-csharp-":[24133],"mali":[11806],"visualised":[629],"''":[9931,21306],"enlarged":[7133,11155],"originating":[595,5413,14790],"causes":[3191,5091,5783,6458,11798,12342,12495,13816,14071,15084,17327,18980,22386,22659,23461],"kinematically":[15585],"1d":[1732,1760,1781,2643],"floating":[7083,7114,8075,9197,10451,11251,11989,13944,15607,17092,18319,18606,19443,22238,23863],"initially":[20,1051,1166,1205,1783,2293,4286,4582,4714,5192,7378,7985,9284,9721,11044,12617,13315,13438,14155,14164,14843,15445,21832,21900,21915,21939,22242],"dime":[2801],"associate":[72,828],"trade-offs":[15414],"diminishes":[11129,17007],"requesthostlist":[13327],"bubbles":[4035],"glsl-":[11750],"times'":[22953],"adjacent":[183,14059,16246,16365],"map'":[21906],"model-view-projection":[20847],"resolve":[878,1017,3832,4114,6400,10414,14809,21280,23156,23249,23646,23809,24143,24563],"rotational":[166,4126,5182,15588],"travels":[14125],"mesh":[178,340,439,444,464,1047,1633,1699,2806,3142,3183,3551,3620,3629,3636,3664,3677,3685,3747,4043,4107,4212,4544,4643,4701,4775,4794,5034,5156,5205,5267,5390,5468,5788,5905,6442,6598,6647,7309,7378,7825,7981,8037,8127,8264,8272,9247,9323,9361,9370,9386,9407,9435,9484,9525,9554,9574,9894,9971,10113,10780,10907,11120,11136,11174,11204,11476,11501,11775,11884,12448,12484,12599,12630,12800,12885,12904,13122,13131,13147,13157,13185,13264,13846,13901,14008,14036,14188,14225,14304,14758,14783,14827,14870,14907,15387,15457,15485,17523,17567,17993,18041,18161,19732,20510,20783,21084,21394,21419,21569,21832,21877,21927,21960,22115,22224,23251,23358,23385,24379],"curly":[17858,18663,18713,19177],"communicating":[13729],"projection":[2671,2961,3562,4909,4948,5010,7139,11158,13823,15235,15594,18369,20697,20828],"ported":[9615],"unity_fogparams":[20763],"caustic":[4035,6866],"repare":[23352],"complicating":[22083],"negates":[14899],"imaginary":[2078,2991,6856],"revision":[879,6494,14809,14851,23609,23636],"oneoverdim":[5504],"comprehensive":[11464,14596,18547],"inefficient":[7309,14072,22737],"uniforms":[8241,20928],"wheelcollider's":[5786],"minemitterrange":[3089],"altdevblogaday":[11813],"crudely":[13451,14870],"dxt5nm":[18317],"directories":[2036,7943,11419],"multisampling":[15907],"administration":[933,980,992,1019,1044,17390],"append":[10473,21670,22052],"negotiated":[13567],"sibling":[1407,16555,22653],"parameter-related":[2187],"plugin":[243,1197,1345,1554,4444,4714,4812,9422,9429,9496,9924,10091,10341,10412,10453,10476,12182,12699,12753,13443,14463,14494,14500,14675,14710,15169,15804,17375,22268,22391,22524,23818,23889,23978,24089,24181,24277,24391,24608,24651,24669],"physics-":[5143,10206,15236,23272],"names":[153,717,947,1206,1339,1848,3195,5310,5431,5876,6451,6667,6840,7767,9244,9378,9393,9405,9432,9482,9523,9552,9630,9766,10856,11124,12687,14452,14865,15506,17187,17259,17996,18943,18963,19149,19479,20020,20136,20745,20778,21351,21383,21715,22522,23307,23729,23775,24145,24669],"roughly":[1209,1458,5205,7158,10968,11764,12600,13208,13948,14304,14870,17528,19486,20510,22430,23376],"adjusted":[7160,7987,9027,9617,12937,13175,14750,15929,16164,16345,17516,19141,22123,23279,23374],"publishes":[6414],"radius":[1763,2552,2784,2795,2858,3567,3822,3857,4121,5352,5771,5824,10252,11232,12801,12910,12967,13090,14030,14069,14105,14227,14872,15330,15953,15987,16065,16246,16278,16341,16661,16678,17009,17139,17181,21952,22114,22154],"leftfoot":[11488,21825],"point":[73,181,197,248,316,401,468,670,685,880,1008,1154,1208,1343,1547,1762,1801,2076,2124,2286,2549,2578,2677,2806,2827,2890,3031,3385,3476,3487,3556,3759,3824,4023,4061,4831,4968,5333,5359,5378,5417,5477,5535,5774,5806,6464,6645,6653,6680,6860,6883,6949,7103,7271,7324,7343,7391,7403,7786,7845,7917,8035,8075,8267,8276,9092,9187,9361,9410,9738,9857,10020,10103,10105,10291,10451,10968,10970,11128,11147,11198,11251,11825,11957,11989,12283,12612,12650,12789,12820,12885,12916,12969,13094,13227,13249,13441,13633,13736,13846,13944,13985,14073,14107,14228,14259,14289,14304,14349,14758,14830,15193,15250,15461,15489,15516,15607,15842,15873,16159,16505,16708,16833,17092,17135,17177,17201,17338,17997,18037,18281,18319,18606,19443,20420,20735,21404,21558,21656,21669,21827,21847,21907,21929,21973,22111,22181,22255,22412,22651,22740,22867,22877,22924,23373,23406,23636,23809,23863,23894,24000,24070],"assumed":[204,3194,6494,6967,10474,10476,12951,21715,23310],"vertex-fragment":[20807],"confirming":[16054],"viewlightpos":[12095],"performance":[234,464,1145,1203,1437,2047,2281,2468,2605,2696,3055,3115,3161,3260,3569,3615,3658,3744,3758,3870,4132,4148,4325,4545,4602,4702,4776,4963,5005,5135,5236,5285,5649,5683,5705,5739,6443,7136,7308,7757,7970,8037,8122,8336,9202,9515,9559,9618,10405,10444,10571,10587,10781,10844,10902,10910,10925,10979,11119,11144,11217,11441,11495,11568,11729,11733,11861,11894,11963,11976,12213,12460,12525,12597,13317,13574,13774,13842,13886,13992,13999,14266,14597,14931,14957,15025,15092,15404,15440,15456,15484,15531,15585,15677,15914,15953,15987,16065,16189,16298,16319,16595,16801,17055,17106,17163,17445,17449,17455,17459,17466,17499,17503,17507,17511,17513,17540,17545,17552,17559,17563,17609,17614,17619,17623,17627,17631,17635,17668,17672,17676,17680,17685,17688,17693,17697,17702,17706,17711,17715,17719,17723,17728,17779,17783,18050,19431,19774,20652,20824,21413,21653,21906,21912,22024,22112,22209,22273,22367,22396,22625,22743,22915,23145,23242,23781,23890,24546,24579],"physics###":[23098],"strategic":[11193],"vst":[1233],"role-playing":[3302],"pinned":[187,2097,21960],"wetmix":[2343,2376],"johnson's":[1297],"williams":[16081],"gameview":[15078],"nesting":[9113,21697],"doesn't":[462,490,601,699,836,1298,2048,2138,2634,2843,3503,3621,4471,4729,5166,5838,6398,6453,6913,6931,7271,7382,7521,7970,8190,8335,9183,9597,9868,9937,10431,10846,11198,11504,11683,11910,11970,12185,12342,12454,12496,12608,12832,12916,13310,13715,13761,13791,13822,13846,14072,14266,14315,15001,15199,15350,15475,15944,15980,16104,16321,16384,16658,16822,17798,18035,20809,21670,21708,22026,22109,22198,22383,22602,22876,22935,22965,23156,23188,23392,24147,24205,24219,24287,24307,24319,24399,24563,24587,24673],"dds":[5686],"c++":[224,1203,6942,10405,10566,10844,12204,12745,12751,13778,14502,14677,14716,16799,21362,23772,23811,23864,24607],"magnitudes":[22897],"side-on":[181,21837],"softbody":[12482],"functions":[225,306,318,413,665,837,1210,1703,2076,2139,2587,2870,5209,5602,6451,6625,6677,6755,6961,6988,7462,7757,7774,7775,7893,8123,8139,8510,8781,8916,8996,9597,9696,10293,10414,10567,10824,10844,10916,11527,11550,11600,11782,11985,12390,12495,12751,13303,13327,13429,13573,13662,13735,13771,13823,13941,14004,14441,14502,14677,14716,15005,15088,15239,15838,15935,16241,16734,17201,17441,17986,18241,19471,19514,20134,20185,20407,20926,21354,22026,22591,22904,22999,23171,23386,23398,23443,23816,24071,24186,24391],"landscaperight":[11563],"specified":[52,179,318,329,449,665,1283,1952,2632,3087,3428,3476,3705,3839,3954,4052,4317,4521,4615,5513,5711,6396,6521,7223,7766,7926,8102,8816,9691,9727,10088,10343,11129,11527,12182,12796,12892,13103,13183,13316,13568,13758,13946,14060,14149,14184,14287,14294,15110,16123,16170,16468,16526,16556,17134,17177,18044,19157,19271,19564,19997,21404,21423,21715,21859,22063,22243,22473,22675,23189,23392,23439,23911,24156,24396],"pull":[2062,2876,5145,5371,6715,6719,6725,6740,11785,11991,13075,18400,19341,23643],"doggy":[3478],"rebake":[11241],"windowrect":[8723],"expectation":[6738],"small":[456,632,975,1111,1434,1735,2283,2372,2713,2808,3094,3157,3437,3715,4100,4104,4504,5061,5373,5498,5610,5788,6865,6992,7309,7380,8226,9743,9867,10019,10043,10053,10060,10201,10596,10802,10917,11120,11133,11519,11785,11893,12454,12546,12679,12796,12821,12889,12917,12940,13164,13197,13292,13844,13932,13974,14071,14105,14220,14252,14282,14302,14405,14749,14958,15087,15098,15233,15342,15411,15456,15484,15537,15611,15952,15986,16563,16646,16715,17260,17346,17786,17916,18231,19295,19452,20506,21348,21829,21973,22097,22107,22448,22607,22648,22703,22737,23245,23276,23537,23719,23998,24383,24398],"creator's":[22256],"visualization":[621,2641,8224,13868,14024,20849],"briefly":[14323,16256,22833,23165],"amplitude":[1312,2345,2356,2487,2589],"windowswebplayer":[14966],"limits":[2793,2841,2872,3136,3465,3487,4132,4148,5251,5330,9619,10616,10903,11163,11750,12340,12459,16309,17268,18346,21835,24285],"shuffle":[15280],"bt":[10463,22404],"setlevelprefix":[13466],"lookatweight":[13041],"'support":[22957],"visible":[819,1437,3153,3397,3546,3619,3673,4575,4950,5288,5643,5785,6769,6874,7139,7310,7400,7845,7913,7942,8094,8099,8126,8232,8392,9109,9621,9913,10158,10765,10819,11260,11341,11525,11711,11803,12180,12218,12657,12915,13162,13822,13842,13900,14036,14278,14992,15121,15448,16168,16268,16516,16520,16558,16716,17082,17454,18040,18080,18428,18904,21349,21606,21877,22658,22666,22682,22731,22867,23388,23694],"locked":[1188,2872,6409,7368,10054,10805,14348,21920,22107,23670],"fancy":[11876,18028,19391],"click":[49,312,326,364,461,694,850,995,1055,1156,1399,1610,1639,1699,1736,1800,2020,2157,2286,2611,2621,3048,3232,3296,3620,4266,4550,4650,4707,4803,4856,4885,4934,4991,5207,5324,5836,6378,6434,6723,6727,7047,7345,7380,8392,8885,9030,9565,9614,9846,10034,10302,10432,10462,11394,11414,11429,12644,12914,12969,13227,13867,13879,14072,14110,14336,14737,14749,14853,15095,15098,15192,15644,15821,15852,15886,16042,16175,16762,17262,17390,18597,20784,21294,21403,21418,21795,21832,21847,21900,21915,21940,22105,22196,22247,22328,22446,22638,22913,22944,23153,23269,23301,23499,23611,23634,23743,23943,24145,24191,24293,24386,24430,24556,24569,24653],"1st-4th":[15964,15997],"game":[15,30,229,263,288,309,334,468,587,603,605,624,639,674,680,821,836,1112,1147,1208,1338,1397,1456,1488,1541,1610,1614,1632,1962,1975,2065,2118,2138,2147,2193,2223,2293,2427,2473,2630,2665,2765,3055,3133,3250,3302,3397,3426,3505,3543,3621,3778,3818,3865,3985,4017,4168,4500,4589,4664,4756,4955,5008,5113,5169,5204,5247,5324,5344,5396,5405,5456,5513,5707,5735,5832,6412,6547,6581,6590,6622,6679,6780,6803,6866,6913,6940,6976,6979,7120,7276,7329,7403,7465,7778,7892,7906,7985,8037,8082,8112,8115,8162,8334,8341,8376,8772,8997,9179,9208,9299,9346,9559,9597,9675,9694,9725,9842,9877,9965,10030,10033,10105,10337,10384,10444,10476,10563,10616,10782,10852,10853,11046,11060,11136,11167,11199,11215,11286,11328,11435,11528,11557,11577,11605,11657,11730,11746,11870,11944,11976,12192,12451,12541,12604,12611,12680,12687,12739,12751,12811,12898,12904,13103,13119,13133,13149,13155,13211,13263,13271,13282,13326,13438,13445,13464,13466,13576,13638,13709,13729,13763,13769,13791,13822,13842,13889,13976,13999,14017,14109,14184,14325,14363,14746,14870,14956,15003,15058,15081,15189,15239,15346,15404,15440,15594,15636,15677,15756,15855,16054,16200,16211,16241,16330,16431,16549,16645,16793,16960,17004,17078,17203,17234,17282,17393,17518,17640,17819,18946,19391,21356,21372,21546,21621,21666,21775,21847,21926,21965,21987,22023,22088,22092,22198,22306,22383,22524,22571,22664,22833,22914,22979,23022,23132,23134,23175,23261,23268,23312,23379,23418,23588,23691,23812,23979,23990,24046,24280,24322,24387,24391,24567,24675],"particlerenderer":[5898],"reading":[1312,3844,3872,4025,5263,6729,6740,7090,10556,10872,11249,11466,11682,11809,12791,12813,12899,12921,12942,13022,13111,13126,13142,13150,14323,14325,17815,18604,19220,21859,22635,22979,23237,23880],"state-":[1252,5415],"blackberry-":[1606],"_refldistort":[19169],"brightest":[11148,15411,15516,16260,20747],"customise":[10386,14792],"meshrenderer":[5896],"per-snapshot":[1195],"monodevelop's":[12644],"corecursor":[24102],"count+1":[16897],"jerky":[5186,11344,11670],"vice":[468,3521,8106,11681,13889,15935,16160,16460,22598,23170],"reconfigure":[23264],"repeated":[4927,6913,14220,14870,16026,16038,16513,18889,22744],"cmd+r":[23080],"invokeonuithread":[24074],"equalizer":[1288,2493],"solves":[12689],"application's":[6562,14582],"gl_ext_shadow_samplers":[11187],"glow":[3746,6865,9190,11887,12284,15938,16007,19123],"c":[163,224,1203,6488,6650,6843,6871,7276,9458,10068,10566,10844,11312,11999,12204,12706,12751,12936,13778,14502,14677,14716,18270,18520,18563,18952,20127,20195,20497,20802,21136,21283,21362,22342,22409,22548,22882,22974,23223,23306,23811,23865,24152],"warns":[6913],"upper_body":[528],"achieving":[11991,17207,21574],"getbool":[9827],"waitforseconds":[6899,7926,10217,10867,12503],"eyedropper":[21843],"cross-domain":[23878],"basemap":[21893],"internal-prepasslighting":[15477],"run-time":[4858,5290,10449,10780,13777],"m_calculatebuttonlocation":[24614],"training":[928],"secret's":[23443],"exportbundle":[10489],"physx":[2868,5121,10794,10903,12444,15013,15237,23275],"picas":[16128],"transform's":[3394,4048,4073,5169,5751,11205,13712,22118],"plant":[10292],"unity_ps4":[14376],"nearly":[9091,11418,13846,16347,19972,21614],"low":[2047,2252,2268,2293,2327,2334,2361,2412,2432,2440,2450,2515,2534,2694,2795,2832,2879,3993,4046,4139,4488,4744,4947,5173,5711,5739,5792,6442,7137,7909,8162,9183,9303,10449,10538,10767,11164,11321,11749,11951,12041,12295,12602,12911,13912,14045,14076,14211,14250,15001,15014,15535,16079,16578,17092,17567,18044,18272,19190,19292,19445,20353,21586,22023,22238,22430,22838,23780,23994],"sandbox":[1533,9643,10538,14313,15838,17264,17433,23398],"classic":[11726,11804,21612,22744],"door's":[3478],"extension":[147,742,1618,1861,5459,5773,6625,7942,9630,11843,12182,12292,14454,14509,14697,15139,15550,18247,18611,18685,21295,21345,23819,24239,24527],"radians":[1743,1767],"fifty":[14107],"alphabetical":[5876],"worrying":[5399,12916,16512],"through":[17,156,193,196,272,329,350,465,632,901,1016,1112,1150,1206,1378,1403,1460,1649,1703,1794,2072,2138,2163,2421,2478,2559,2754,2803,2876,3116,3125,3148,3426,3510,3745,3981,4012,4034,4100,4145,4439,4658,5002,5121,5459,5646,5737,5758,5773,5864,6449,6719,6740,6806,6856,6988,7367,8082,8599,8872,9280,9513,9731,10338,10428,10437,10453,10560,11299,11306,11452,11527,11730,11985,12342,12609,12818,12879,12916,13131,13182,13197,13266,13309,13375,13439,13727,13842,14032,14047,14054,14066,14164,14340,14544,14835,14976,15043,15084,15204,15296,15713,15865,16176,16219,16392,16397,16440,16661,17159,17364,17384,17514,17567,18035,18077,18213,18381,18689,19390,21607,21945,21988,22191,22253,22606,22710,22741,22951,23132,23137,23249,23272,23377,23443,23638,23772,23889,24017,24361,24534,24539,24708],"while":[78,185,229,288,355,360,403,490,596,603,649,678,712,837,981,1091,1112,1135,1148,1289,1654,2076,2122,2140,2203,2282,2413,2426,2433,2441,2451,2619,2631,2752,3047,3055,3257,3496,3803,3818,3849,4040,4154,4171,4500,4623,4855,4960,4975,5012,5142,5210,5236,5310,5339,5372,5383,5405,5456,5500,6442,6487,6635,6988,6992,7142,7256,7341,7795,7834,7958,8039,8118,8138,8335,8539,9183,9422,9725,9824,10053,10166,10405,10444,10573,10802,10859,10908,10924,10970,10979,11147,11198,11211,11261,11302,11494,11605,11646,11991,12355,12457,12501,12652,12680,12687,12819,12917,13117,13149,13265,13423,13466,13613,13823,13889,13979,14004,14017,14038,14139,14196,14228,14743,14749,14874,15087,15098,15189,15343,15625,15636,15749,15852,15890,15931,16081,16165,16246,16285,16321,16495,16555,16574,16611,17024,17167,17263,17324,17516,17869,17932,18045,18325,18946,20605,21401,21557,21829,21902,21919,21952,21960,22026,22107,22162,22249,22385,22635,22914,23134,23272,23307,23364,23605,23634,23732,23887,23980,24017,24203,24364,24523,24533],"modification":[7987,11775,12611,13775,20209,20416,20959,23243],"constantforce":[5928],"revert":[710,875,7401,9336,9517,9544,14316,14789,21401,23296,23623,24318],"clear-text":[23440],"gcc":[13434],"invoke":[6640,13303,13575,14121,23003,23423,23816,24075,24583],"depth-of-field":[16322],"held":[3758,4273,4670,7797,11168,11301,11560,11655,14073,14796,21944,22867],"meshes":[1,836,1108,1652,3615,3632,3665,3707,3758,3837,4212,4544,4643,4701,4775,4794,5288,5486,5512,6599,6656,7309,7983,8128,9242,9315,9379,9394,9406,9428,9481,9524,9553,9975,10032,10817,11124,11146,11199,11211,11500,11770,12226,12548,12600,12630,12904,13271,13315,13851,13898,14017,14195,14302,14828,15023,15054,15386,15444,18412,20652,21424,21689,21829,21877,21964,22212,23249,23371,23695,24379],"gyro":[1540,10636,15737,23266],"1024x1024":[9641],"recomputation":[6458],"ipointerenterhandler":[21754],"truncated":[2128,16513,22872],"playertransform":[6777,12383],"animatoroverridecontroller":[6036],"developed":[234,1204,1602,10441,11474,14138,14892,16319,20828,22951],"cog":[10302],"processreports":[15018],"purposes":[367,581,588,1317,1437,2005,2124,2620,2747,3526,4485,4741,5649,6436,6442,7921,8075,11117,11199,11442,12229,13274,13426,13913,14017,14069,14752,14829,14868,15588,17942,18040,19588,21426,21575,21772,21916,21976,22637,23447,23600],"minute":[1247,22938,23994],"linearize":[20714],"screensize":[14635,22313],"gaming":[8161,23990],"onmousedown":[7795],"setbridge":[24038],"programming-the-xperia-play-gpu-by-wolfgang-engel-and-maurice-ribble":[11813],"wikipedia":[15481,22864],"cheetah":[5306],"bullet":[4924,12398,12453,14266],"oninspectorgui":[7441],"front-facing":[5403,18434,19564],"shutting":[907],"tonemapper":[17094],"unitycg":[12066,17961,18244,18370,18617,18686,18729,20744,20861,21080],"-g":[14813],"exports":[1854,6509,9426,15663],"-n":[14815],"dampens":[5778],"agent's":[3865,4021],"formal":[13310],"newc":[5503],"player-detail":[10794],"open-source":[6698,6708,6739],"simplified":[385,1471,2621,7765,13954,17537],"nsurlrequestreloadignoringlocalcachedata":[10353],"tempo":[1324],"mynewkey":[23405],"enc4":[18276],"suffer":[7134,9627,10852,11169,12229,14266],"finally":[607,1091,1353,1633,5003,6452,6673,6681,6728,7001,7852,7962,8166,9937,10399,10458,10766,11226,12329,12800,13124,13169,13722,14074,14102,14584,14750,15196,15525,15600,17221,17391,17908,18914,19349,21401,21586,21837,22546,23132,23310,24022,24416,24647,24665,24709],"-exportpackage":[6509],"bandwidth":[3887,3899,7147,10767,11746,12182,13306,13444,13574,13707,13751,13774,13891,23158,23994],"coolness":[3659],"try":[913,1324,2427,2586,2732,2817,2884,3115,3199,3641,3744,3832,3866,4004,4451,4658,5063,5129,5615,5739,6669,6761,7120,7436,8017,8190,9477,9541,10339,10458,10848,10974,11581,11761,11923,11955,12043,12196,12819,13066,13195,13777,13870,13912,14469,14496,14598,14733,15233,15350,15584,15673,16007,16684,17040,17537,18410,18569,18645,19390,19453,19846,20784,21927,22289,22364,22475,22603,22913,22963,23162,23269,23879,24016,24024,24204,24436,24673],"currentgear--":[9610],"cpus":[4526,11784,12733],"lose":[15,826,1605,1615,5646,5688,5861,8718,9299,14038,14109,15969,16001,16737,17017,17259,20845,23296],"circumstances":[3234,6541,13749,15235,21372,22899],"circled":[18598],"bands":[1289],"rendering-":[3397,5070,5324,11212],"fell":[1315],"pause":[2203,3434,3788,5714,6680,6876,7906,10896,12648,13725,14283,15084,21967,22032,22088,22858,23054,24092],"'update'":[16392],"surrounded":[21708],"tegra_gles2_development":[11811],"organiser":[9629],"redundant":[454,11349,12608,24370],"metadata":[772,828,1614,9346,10922,21431,21677,23689],"computer's":[1467,2425,10025,21987],"bbndk-env":[1564],"introducing":[22710,23600],"indefinitely":[453,582,2051],"killed":[2034,5861,12229,13291,22447,22838],"'pressed'":[16983,17123],"enemy":[431,3134,6763,6913,6927,10198,12196,12483,12687,13291,21772],"stringbuilder":[22760],"pixels":[3015,3196,3346,3401,3418,3631,4182,4665,5101,5563,5668,5693,7133,8401,9191,9258,9571,9727,10589,11155,11606,11745,12180,12515,12636,13925,15432,15456,15484,15534,15904,15971,16003,16065,16094,16162,16246,16309,16346,16361,16365,16608,17019,17134,17177,17524,18044,18060,18180,18321,18394,18659,19434,19540,19972,20713,21404,21714,23450],"yzdrive":[2887],"de-allocate":[12204],"resize":[2694,4228,4672,16740,21403,22638,22719],"nessesary":[17911],"artefacts":[15457,15485,16351],"snap":[2961,3520,6827,7346,14763,15893,22653,23017],"conveyed":[16162],"r32f":[18606],"readme":[1980,12299,24180],"isinitialized":[24084],"commands":[2362,2368,6424,6484,8272,12652,12733,13092,13900,14819,17430,17524,17881,17923,18056,18662,18697,18859,18966,18983,19256,20405,23284],"_mytexture":[17805,19187,19210],"pointercursor":[24055],"persistent":[4340,4623,8582,22985,23242],"gamma-corrected":[4202],"diverting":[4451,4658],"psychedelic":[16158],"owners":[13298],"intersect":[4909,11075],"publickeytokenofmyassembly":[23420],"stepping":[12651,21809],"ret":[776],"cmd+alt+4":[23071],"knob":[8631],"instances":[1063,1378,5204,6402,6408,6755,7323,7401,8205,9208,10161,11349,12237,12577,13326,13758,13772,14546,14781,14941,16836,17262,21364,21839],"decreased":[12454],"message2":[11534],"ensured":[1905],"flipped":[18428,19071,20712,22689],"successful":[2613,7773,7954,11925,13648],"ios":[139,219,1109,1285,2285,2467,2603,3054,3795,4268,4520,4568,5689,6502,7223,9954,9995,10340,10403,10427,10436,10438,10459,10466,10483,10557,10585,10782,10841,10853,10903,10910,10912,10954,11186,11330,11557,11576,11604,11611,11729,11733,11968,12181,12510,12637,12723,12763,14372,14477,14593,14708,14896,14967,15084,15361,15437,15541,17239,18293,18613,19446,19502,21368,21655,21666,22275,22382,22833,22906,23134,23266,23806,24601],"logging":[11329,13756,22336,22955,24414,24551],"videos":[3797,10612,15343,21959,24549],"widths":[2795,3428,16488,22617],"scripting###":[23102],"texturally":[21741],"fog":[2449,2723,3157,3254,5328,11907,13960,13981,16164,16382,16405,18627,18657,18968,18987,20066,20432,20756,21117,23721,24221],"these":[72,157,187,197,234,302,309,319,323,375,394,535,585,632,685,741,872,984,1001,1047,1207,1349,1446,1522,1551,1598,1662,1743,1767,1843,1848,2003,2005,2076,2122,2160,2209,2293,2360,2366,2547,2597,2852,2870,3133,3142,3196,3248,3365,3556,3649,3901,4048,4083,4127,4144,4264,4548,4648,4705,4778,4801,4813,4861,4964,4993,5169,5200,5225,5487,5518,5735,5876,6398,6404,6428,6442,6541,6584,6653,6686,6694,6780,6832,6856,6940,6977,7134,7309,7341,7384,7465,7776,7898,7939,7941,7974,7984,8039,8090,8106,8112,8146,8306,8401,9112,9184,9208,9215,9258,9312,9368,9559,9617,9728,9905,9962,10022,10024,10200,10411,10427,10538,10558,10780,10782,10924,11127,11156,11199,11217,11223,11287,11305,11356,11449,11499,11744,11862,11903,11947,11985,12229,12457,12537,12600,12620,12645,12695,12751,12812,12885,13155,13274,13312,13351,13564,13724,13727,13769,13867,13895,13976,14017,14070,14140,14184,14244,14261,14302,14323,14452,14496,14513,14684,14719,14772,14835,14868,14882,14963,15009,15067,15078,15081,15110,15250,15342,15450,15457,15485,15530,15586,15596,15663,15877,16165,16464,16646,16735,16815,17187,17201,17323,17442,17469,17523,17566,17638,17731,17750,17798,17861,18045,18056,18140,18254,18311,18428,18713,18860,18940,18987,19047,19084,19135,19183,19256,19391,19486,19588,20367,20694,20810,21277,21343,21364,21372,21422,21546,21576,21585,21606,21615,21617,21635,21644,21683,21689,21844,21940,21965,21991,22049,22103,22171,22256,22275,22322,22392,22524,22555,22583,22661,22669,22735,22886,23159,23173,23234,23283,23301,23364,23377,23393,23430,23452,23621,23691,23772,23808,23842,23889,23895,24257,24287,24312,24413,24530,24539,24565,24588],"phong":[20459],"a+d":[18954],"tmp":[22458,22844],"statement":[581,6883,8376,8524,14603,15276,18490,18652,22397,23782],"decaying":[1316],"tenth":[6919,13293],"preserve":[1186,9346,16502,23786],"co":[7956],"pluginfilename":[24088],"dissipating":[14066],"graphicraycaster":[7820,15336],"night":[2426],"ray":[2076,4128,5782,11068,11630,12403,12980,16995,18035],"0x0062564c":[22415],"interrupted":[5755,22385],"joined":[2778,5282,5587],"preallocating":[12580,22838],"crashlogs":[11331],"screenpos":[19900,20447],"heap32":[23863],"segments":[2189,3039,3598,4846,5739,13162],"enhancement":[16250],"flare":[3140,3180,3531,3568,5959,15946,15982,19531,21991,22164],"removeclip":[15033],"atn":[9215],"swapped":[2570,11169],"wastage":[11350],"either":[4,156,367,521,595,659,833,1021,1109,1150,1739,2131,2427,2620,2643,2708,2887,3183,3580,3625,3903,4002,4018,4048,4083,4398,4658,4797,5029,5210,5385,5586,6508,6644,6672,6860,7001,7139,7330,8007,8170,9271,9310,9317,9710,9993,10244,10423,10451,10578,10780,10856,10978,11145,11228,11336,11585,11944,12284,12685,13075,13171,13204,13284,13424,13701,13839,13846,13904,14512,14842,14851,15066,15235,15900,15971,16003,16106,16535,16709,16794,17019,17391,17515,17824,18078,18213,18320,18606,18677,18866,19152,19263,19420,19545,20143,20809,21343,21411,21613,22145,22212,22488,22546,22594,22638,22695,22876,23234,23609,23726,23779,24156,24416,24588],"designated":[3802,9119],"detect":[471,1284,1613,2008,3134,3839,4128,6449,6693,7795,8737,9614,9819,9959,10431,10856,11049,12493,12812,13141,13439,13564,13979,14039,15026,15760,16356,16364,17232,17277,19513,21625,22392,23262,24391],"simplicity":[76,5457,21350],"retina":[4304,4594,9651,10411],"throughout":[5431,7892,8842,10105,10616,11957,14286,17640,18957],"payout":[967,979,1008],"photography":[15938,16578],"discarded":[367,2044,2620,12937,19541,22432,23250],"pixelation":[21401],"normalizing":[12392],"review":[958,1037,6740,14334,15674,22446],"dx":[13002,22300],"osxwebplayer":[14966],"supposed":[1460,2124,6447,12227,14106],"logicalorreverse":[18208],"tells":[3189,3663,10783,11263,13021,13289,13819,17931,23790],"tag":[1446,2064,3582,5482,5562,6792,6934,7799,10037,11061,13847,17364,18381,19046,19518,19757,20728,21415,21693,21772,21985,22309,23452,24413,24715],"walked":[12893],"correct":[131,168,174,237,257,393,914,980,1559,1676,3394,3663,4645,5169,5313,5457,5492,6494,6673,6692,6898,7987,8914,9267,9322,9363,9629,9725,10504,11173,11217,11224,11758,12652,13163,13392,13439,13724,13869,14829,15243,15663,16212,16433,16833,17347,18381,18384,18557,19538,20438,21275,21548,21656,21753,22118,23243,23728],"020f16":[7001,24416],"accumulative":[15958,15993],"sleeps":[5190],"values":[72,188,316,406,458,629,685,1147,1230,1382,1519,1646,1736,1760,1783,2209,2547,2679,2762,2845,2874,3209,3413,3465,3518,3556,3619,3842,3901,4048,4291,4502,4584,4778,4814,4895,4958,5057,5101,5169,5206,5211,5373,5429,5530,5735,5751,5761,6742,6825,6874,6986,7001,7338,7376,7447,7852,7909,7970,8075,8120,8401,8631,8799,9183,9583,9598,9714,9857,9868,9967,10056,10245,10291,11146,11230,11353,11484,11645,12043,12358,12636,12650,12710,12964,13448,13571,13724,13839,13867,14071,14110,14184,14198,14220,14288,14510,14721,14748,14781,14941,15239,15473,15705,15735,15856,15938,16001,16012,16027,16037,16077,16162,16259,16295,16376,16554,16571,16595,16606,16692,16792,16952,17017,17092,17171,17899,18045,18214,18459,18604,18866,19048,19084,19153,19284,19388,19434,19522,19779,20444,20556,20708,20845,21410,21431,21569,21586,21615,21715,21759,21835,21855,21937,21976,22111,22162,22197,22236,22558,22587,22660,22737,22898,22996,23278,23382,23452,23589,23911,24396,24716],"two's":[2720],"onbegindrag":[21760],"triangledepthnormals":[16385],"ab":[1903],"'modelname":[21394],"can't":[912,985,1460,1932,2131,5161,5277,5354,5742,6517,6760,6868,7090,8039,9709,9918,10056,10575,10928,10974,11176,11202,11923,12196,12457,12496,14332,14495,14752,14945,15346,15406,15457,15485,15530,15818,16079,17326,17798,17943,18035,19248,19738,21976,22404,22831,24220,24603],"approximates":[12904,16658,16673],"guielement":[5971],"interpreted":[5603,17035,21693,21858,22877],"hkey_local_machine":[24149],"uifilesharingenabled":[10556],"m_texturecompression":[24775],"restrict":[3113,5431,6675,6865],"stacktrace":[11585],"prepassfinal":[19055,19236,20743],"viewing":[157,681,1034,2124,2754,3771,5111,5538,6681,9913,11744,12034,12302,13841,14317,15026,15114,15851,15892,16686,16692,20782,21420,21566,23691,23904,24412],"unity_pass_forwardbase":[18354],"toolbar2":[8603],"cpu-hungry":[7109],"flexible":[1397,1456,1614,2009,9711,13175,13285,16457,16488,16546,17152,17798,19433,22567],"hex-core":[10730],"assetbundlename":[1913],"eye-candy":[11736],"windowsphoneunityconnection":[24584],"commits":[882],"auto":[2289,2829,2892,3453,3570,3830,4020,4277,4574,5361,6609,7367,8240,9717,11149,14795,15525,15751,16176,16455,17338,20407,22554,22566,23543,24334],"clock":[1323,1783,14917,22024],"endhorizontal":[9112,13394,13492,16868],"concerns":[6719,9623,16800],"closer":[2131,2579,2752,2794,3035,6669,7159,8443,11603,13822,13841,16492,17156,17464,18400,22871,24046],"enablerandomwrite":[6641],"######":[22919],"quoted":[11953],"navigationanimation_45_and_50":[12953],"poorly-documented":[22448],"predecessor":[11948],"cheering":[12290],"bends":[5282],"power-up":[8112,12611,17640],"groupenabled":[7515],"autorotation":[4279,4575,11564],"maintainability":[10405],"multiplying":[3210,12393,15251,20847,22892],"playstation":[1247,11246,12715,14375,14483,18295,19506],"'myfunction'":[23817],"'duplicate'":[1442],"-shared":[1579],"al":[23409],"cmd+1":[23029],"shielding":[9924],"fallback":[3195,7120,9914,16113,17927,18426,18596,18644,19384,19805,20183,20419,20503,20806,21289],"filtered-out":[17259],"tex2d":[11998,18021,18520,18592,18799,19097,19821,20181,20497,20802],"glance":[21566],"coloured":[1427,15095,15852,22107],"xcode-":[22479],"flowing":[652,2213],"mybundle":[117],"sectors":[21343],"leave":[2131,3843,4227,4671,4822,5135,6458,12811,13090,13120,14184,15945,15981,16159,16571,18394,19433,22544,22938,23979],"billboards":[21876],"the'apply":[14336],"consist":[580,658,10114,13273,21623],"section":[289,320,362,403,408,577,603,630,735,745,830,844,932,988,1092,1103,1288,1471,1966,2003,2006,2076,2134,2136,2186,2364,2367,2617,2624,2643,2880,3058,3147,3205,3244,3553,3631,3647,4083,4106,4132,4148,4174,4551,4651,4708,4804,5224,5330,5523,5765,5780,6375,6582,6595,6597,6604,6722,6740,6744,6945,6977,6981,7220,7759,7761,7763,7939,8114,8341,8343,8345,8510,9181,9291,9926,9977,10024,10434,10439,10812,10911,11117,11141,11143,11218,11267,11392,11976,12192,12451,13153,13269,13271,13282,13331,13460,13769,13853,14011,14013,14015,14017,14062,14147,14186,14319,14321,14358,14467,14497,14596,14748,14855,14957,15010,15100,15189,15250,15402,15450,15663,15693,15812,15861,16168,16563,16646,16692,17024,17046,17199,17235,17237,17522,17816,18548,19045,19221,19755,20185,20780,21691,21917,21957,21979,21982,22123,22205,22258,22384,22635,22679,22681,22712,22716,22910,22978,23087,23132,23152,23314,23384,23400,23619,23729,23992],"osxuniversal":[6502],"size":[236,290,956,1247,1763,1845,2022,2122,2276,2468,2507,2653,2663,2674,2750,3015,3072,3149,3186,3254,3389,3430,3442,3509,3562,3598,3621,3690,3774,3821,3854,3985,4010,4037,4106,4295,4510,4593,4711,4796,4894,4917,4954,4975,5011,5101,5165,5298,5352,5429,5475,5513,5665,5690,5720,5750,5848,6825,6863,7143,7158,7328,7396,7970,7993,8098,8126,8693,8871,9339,9495,9623,9679,9690,9727,9858,10019,10060,10417,10538,10830,10912,10968,11157,11356,11499,11577,11606,11712,11746,12588,12680,12798,12909,12934,13093,13120,13574,13844,13922,13976,14025,14067,14103,14175,14202,14211,14245,14253,14306,14829,14889,15047,15251,15341,15447,15456,15484,15935,16014,16037,16067,16094,16229,16293,16337,16450,16508,16549,16608,16643,16702,16740,16961,17009,17033,17056,17106,17139,17181,17524,19077,20510,20874,21404,21420,21673,21714,21835,21881,21907,21919,21940,22006,22118,22201,22232,22355,22440,22571,22644,22673,22699,22718,22740,22879,23780,23828,24002,24877],"dictates":[1178,5710,14614,23269],"axis#":[1475],"onpostprocessallassets":[23249],"distancethisframe":[12401],"slopes":[2793],"vely":[12958],"rounded":[14874],"invisible":[2206,2713,4094,4500,5282,5659,6442,6868,7914,13932,16347,16564,21360,22743,23726,23790],"viewportpointtoray":[2076],"mergeinto":[23841],"convincingly":[4983,10292,14054,14213,14307],"publish":[4451,4658,5466,10444,15196,23796],"guilayout":[130,3317,3375,7508,8399,8996,10458,11035,13340,13484,16858,21750],"setup":[221,264,382,617,841,1000,1094,1145,1437,1551,1596,1692,2713,2856,3439,3533,3707,4444,4714,4814,5214,5784,6365,6386,6418,6431,6806,7139,7941,7989,8023,8170,9455,9515,9630,9678,9721,9747,9890,10136,10426,10560,10801,11198,11496,12682,12932,12949,13434,13846,13933,14311,14842,14990,15233,15506,15572,15805,16208,16459,17087,17387,17821,17946,18137,18361,18863,18983,19123,19461,19737,20398,20780,21552,21610,21677,23356,23625,23881,24387,24550],"passwordprotected":[13363],"kgfxrenderergxm":[12720],"side":[188,684,974,1208,1389,1426,1460,1651,3346,4106,4163,4275,4498,4574,5163,5385,5397,5788,6653,6722,7308,8269,9191,10414,10432,11138,11454,11562,11947,12231,12917,13568,13639,13822,14238,14530,14701,14829,15103,15139,15329,15893,16488,16692,17260,17500,17504,17610,17615,17669,17673,17724,17729,18383,21937,22651,22867,23095,23189,23893],"tunnel":[1460,6865,14989,16256,17095],"circle's":[17134,17177],"workhorse":[7910],"one-button":[15847],"vram":[9197,11169],"frustumheightatdistance":[7169],"embed":[3191,9420,9495,23461,24391],"reciprocal":[12393,13167,15443],"slowdown":[2572,11966,23894],"street":[2426,11139],"cookbook":[1297,8180,23606],"timer":[7909,12263,12453],"font":[3182,3273,3350,3380,5480,5966,8871,9679,9952,16090,17031,19528,21689,22358,22644,22718],"exponential":[16406,18672],"bilinear":[5109,5536,12335,21478],"cloud":[11202,14205,14278,14302,15235,21973],"backups":[10473,17404,22320],"configurablejoint":[5989,15235],"trail's":[5726],"vector3":[167,644,2944,3597,5205,6648,6685,6759,6916,7176,7405,7781,7827,10124,10885,11076,11654,12223,13000,13459,13599,15327,15753,17229,21826,22738,22878,24692],"zfailfront":[19564],"approximated":[5791,11193,13954],"blank":[4953,15090,15191,24652],"getfloat":[316,17230],"forwards":[2980,12959,14283,22895],"startpage":[24184],"tasks":[221,844,988,6484,6913,7908,9934,10198,10560,10780,11302,12640,13153,13326,14543,14874,22679],"successfully'":[11415],"roundness":[22156],"enforcing":[17364],"enough":[181,1845,2047,2284,2425,6443,10696,10830,11193,11251,11823,11955,12182,12204,12454,12584,13451,13724,13922,14073,14958,15087,15537,15808,16468,18428,19190,19437,20605,21080,21420,21552,22303,22567,22740,22898,23168,23379,23780,24022],"df16":[15550],"bloom":[9187,15937,15974,16006,16578,17094],"mixers":[1131,1284,1376,1392],"remainingdistance":[12821,13011],"autodesk":[1685,9334,9480,9544],"opens":[5141,9776],"designs":[2748,12456],"generic":[585,2215,2617,5486,7973,8024,8134,8139,9481,9755,10949,10984,11499,11528,12280,12893,14550,15396,15614,16844,17464,18266,19435,20845,21449,21834,22389,22998,23368,23785,24232],"balance":[1004,2471,3994,5286,5683,5705,6976,13844,17377],"distributes":[23895],"thereof":[14546],"compback":[19564],"modern":[1322,9719,16283,16319,16568,16579,16674,19292],"searchlights":[11133],"createcallback":[1231],"populating":[13639],"lines":[398,3386,3592,3619,5476,6599,6634,9180,10022,10107,11206,12886,13061,14857,17034,17362,17402,17795,17864,18035,18950,22246,22412,22870,24713],"zooming":[2101,7356,15869,16713],"safety":[76,5164,24321],"vertout":[20887],"translucent":[4289,4583],"m_fogmode":[24735],"limbs":[587,1471,1668,5283,6464,24377],"labels":[825,1907,3277,7601,10044,15006,15109,17026,17257],"sbs":[14905],"unlike":[1203,2139,2754,3028,3039,3196,4846,4907,5030,5431,5817,6462,6947,9863,10558,13575,14920,16457,17089,19071,21743,22020,22249,22555],"asynchronous":[1961,13328,13639,14728],"troubles":[10968],"retain":[2762,16094,20403],"mb":[17,242,591,2514,2533,7223,7992,9280,9519,10060,10951,10968,21395,22430,23780,23993],"scaled":[187,290,1230,2750,3015,3428,4441,4511,4711,5354,5598,6458,7141,7322,7987,9732,9860,11606,14036,14870,15329,15859,16093,16331,16512,16646,21246,21839,21920,22115,23262,23269],"unity_wp_8_1":[24349,24519,24530],"hsdpa":[10684],"chance":[11955,14199,15246,18055,22169],"128x128":[3211,9982,23450],"harmless":[1509,24141],"instant":[22944],"favored":[10580],"majority":[5241,6977,12495,22729],"physics2dmanager":[5911],"32bit":[13927,15360],"basics":[466,6734,7761,8344,10438,10556,12951,13996,20782,21616,22241,22710,22716,22977],"glue":[22546],"unity_lightmapst":[12071],"nshttpurlresponse":[10368],"carry":[2801,5178,10223],"physics-based":[2890],"instance":[121,333,1063,1112,1231,4797,5049,5205,5598,6408,6495,6680,6744,6960,6981,7279,7521,7535,7900,8203,9845,9934,9947,9978,10831,10974,11198,11302,11717,12207,12617,12650,13327,13457,13758,13780,14488,14535,14782,15137,15221,15624,16085,16793,17421,18503,21544,21580,21586,21612,21772,21927,22398,23002,23419,23779,24382,24393],"expandable":[14023],"graphics-":[18565],"rectangle's":[4971],"simply":[73,182,484,592,661,823,1014,1029,1055,1109,1171,1312,1399,1464,1606,1686,2018,2132,2423,2449,2801,3652,3746,3758,4106,4156,4395,4522,4717,4926,5045,5151,5311,5395,6387,6449,6664,6856,7084,7133,7310,7381,7766,7797,7823,7987,8075,8165,8934,9388,9400,9519,9548,9593,9859,9894,9982,10043,10133,10373,10840,11136,11155,11214,11293,11350,11426,11494,11683,11923,11956,12454,12689,13249,13284,13330,13448,13729,13791,13883,14010,14035,14077,14306,14405,14781,14856,14880,15006,15194,15304,15350,15969,16001,16079,16138,17017,17040,17069,17259,17346,17552,17639,18035,21372,21408,21669,21792,21834,21843,21908,21976,22026,22114,22669,22829,22868,23145,23249,23301,23373,23431,23730,23984,24019,24050,24136,24202,24377],"commit":[819,837,6692,7962,14315,23656],"lowpassfilteraccelerometer":[11678],"screenparams":[20875],"tube":[14876],"assign":[484,1666,2003,2191,2600,2626,2670,2854,3138,3232,3303,3476,3533,3578,3639,4094,4237,4589,4678,4894,4933,4991,5116,6424,6436,6640,6672,6744,6839,7379,7833,8022,8189,8584,8823,9386,9845,9882,9979,10037,10171,11057,11361,11423,12504,12958,13105,13138,14077,14907,16203,17835,18080,18428,18574,21422,22203],"loses":[4190,4667,4756,14026],"semantic":[20446,20908],"artsy":[11977],"querying":[11401,22444],"elapses":[4125],"rotated":[5142,6442,9863,11659,14071,15598,17134,21433,22115,22638,22868,23269],"upgraded":[11951,22322],"reconstruction":[16065],"externalcall":[23192,23816],"extending":[1326,2127,7938,8887,14610],"edition":[23740,24538],"indices":[179,1212,7834,12334,13843,23392],"m_clearflags":[24865],"enginerevs":[14082],"dealing":[1212,6778,12212,13163,13746,13850,15693],"conjunction":[366,1112,2425,3092,3629,3713,5430,6494,11522,12600,15938,15975,16009,16132,17094,21569,22092,23400,23619],"mpg":[3767],"existing":[372,698,1407,2601,2611,2820,3047,3641,4107,4426,4555,4717,4855,5530,6561,6926,7082,7351,7487,7816,8017,8247,9891,10102,10373,10448,10471,10578,11225,11401,11729,11944,12695,12751,13729,13880,14281,14737,14828,15400,16537,16658,17262,17395,17824,18397,20774,21408,21630,21847,22486,22829,23209,23627,23979,24239,24551,24603],"traces":[22395,23775],"unity_height":[4778,23459],"rrw":[4483,4739],"disablepaneldeleyed":[9816],"refers":[1348,3501,3510,5430,6386,8039,8126,9948,11223,12346,14161,15009,15905,16319,16749,18211,21541,21569,21580,21836,22738,22866],"mipmapenabled":[21481],"_grabtexture":[18695],"exterior":[5066],"statemachine":[1849,21641],"ellipsis":[10046],"protocol":[7022,9929,10373,13717,17364,22289,23479,23790,23878,23921,24107,24461],"haloing":[16374],"8bit":[15358],"'0005":[22061],"ondidapplyanimationproperties":[22633],"sharpening":[5615],"-mno-thumb":[22426],"mouse":[637,670,1736,2078,2770,3047,3339,3426,3517,4855,6614,6806,7344,7384,7795,7802,7920,8475,8522,9614,9832,10029,10179,11640,13226,14283,14748,14864,15692,15737,15841,15867,16052,16175,16941,16963,21764,21842,21940,22106,22255,22638,22681,24363,24550],"asp":[11810],"selector":[1418,4441,4711,6560,9968,19808,22992,23281,23731],"jumps":[15600,21810],"group's":[9020],"unity_player_params":[23489],"avoids":[168,532,661,5288,22838,23980],"uniquely":[9242],"consists":[179,1140,1202,1797,2057,2076,3159,5757,6618,7802,10201,13263,14358,14743,15094,19408,19732,21081,21971,22085,22431,23432],"works":[166,342,836,1129,1290,1612,1795,2131,2136,2425,2788,2808,2878,2969,2982,3116,3477,3745,4143,4966,5354,5833,6702,6863,6963,7446,7590,8236,8781,9183,9373,9547,9612,9735,9848,9920,10917,11261,11398,11451,11527,11711,11926,11971,12280,12526,12747,12883,12953,13309,13839,14074,14171,14707,14827,14897,15113,15204,15400,15589,15679,15735,16008,16084,16219,16283,16384,16440,16574,16800,16965,17094,17195,17330,17800,18937,19032,19418,19515,20355,20810,21407,21947,22400,22838,22979,23155,23240,23275,24206,24219,24374,24400],"forhttpheaderfield":[10356],"volumes":[188,4002,5041,14204,21867],"m_finalgathergradientthreshold":[24770],"interestingly":[21978,23376],"us":[175,198,986,1013,6709,6738,8138,8965,9743,13158,13791,14458,15562,18089,18477,21790,22542,22950,24391],"export-":[9417],"hang":[14071,14107],"c+d":[18954],"highest":[3468,4904,4932,5005,5633,5682,5704,7970,9258,12657,12933,19589,21505,21888],"particlesystemrenderer":[6023],"single-line":[8552],"chmod":[9668],"crossed":[12941],"high-contrast":[11925,11976],"fireball":[3098,3719,14038,14139,14266],"-single-instance":[6561],"multiplayer":[3877,3892,6601,13292,13466,17348],"brought":[395,2193,11309,24528],"editorbuildsettings":[6094],"s3m":[1121,1465,2272,22095],"unity3d":[40,834,958,980,1000,1021,1029,1037,1619,1801,6357,7012,7276,9456,9651,9928,10100,11327,11373,11405,11416,13885,14567,15140,17240,17266,18031,21561,22330,22529,22919,22957,23180,23910,24022,24235,24391,24715],"onwards":[9443,14464],"app-hungry":[11947],"thing":[221,366,574,836,1200,1675,1734,1758,2619,4002,4822,5578,6990,7136,7158,7826,9569,9734,9750,9960,10020,10560,12194,12885,12917,14110,14343,14566,15201,15251,16798,17378,17516,18308,19434,21935,21993,22899,22944],"anti-aliasiing":[10803],"y+in":[19990],"unreleased":[4317,4521,4615],"interactible":[16744],"phenomena":[15938],"avoided":[3871,7997,11905,12180,12688,13220,13820,16080,16556,17096,17464],"points'":[12820],"along":[184,314,318,661,666,1142,1198,1418,1704,1760,2078,2601,2675,2799,2872,2977,2992,3078,3148,3252,3357,3407,3477,3543,3619,3683,3696,3794,4079,4978,5145,5330,5354,5375,5419,5687,5735,5750,5774,6865,7390,7776,8128,11290,11349,11432,11551,11644,12929,12950,13139,13162,13249,13327,13460,14005,14074,14184,15101,15214,15250,15447,15852,15904,16079,16165,16453,16512,16708,16958,18045,18719,19996,20464,21401,21551,21618,21868,22106,22137,22218,22250,22869,22889,23338,23449,23623,23772,24539],"cannot":[211,246,580,587,661,984,1183,1547,1910,2131,2140,2733,2887,3199,3579,3985,4012,4231,4674,4821,5126,5354,5417,5431,5602,5755,7901,7987,8511,8886,9615,10977,11396,11886,12180,12509,12879,13180,13209,13266,13311,13352,13439,13860,14315,14564,15196,15474,16822,17188,17349,17516,22249,22915,22959,23243,23436,23670,23887,23895,23903,24044,24175,24274,24363,24411],"logicalclear":[18194],"dislikes":[11589],"iphone-playersizeoptimization":[11577],"constrain":[5149],"meta":[826,833,1852,2059,4814,5211,7942,9962,14347,20433,23635],"nb":[1093],"listen":[1094,1324,13290,17364],"crinkliness":[22158],"unfiltered":[2345,2356],"bought":[158,13576],"spectrum":[1312],"settingsgroup":[21499],"osxintel64":[6502],"shaderlab's":[19457],"rescaling":[9258],"compressionquality":[21477],"projectionmode":[15235],"rigid-body":[2987],"strict":[234,285,5313,6964,10578,10962,12233,23602],"pre-split":[21373],"proportionally":[9733,16493,17157],"quits":[5258,6533,15661,22308],"q":[2392,2445,6707,10420,15841,15871,21030,21944,23010],"emailaddress":[11709],"adept":[12456],"shake":[6812],"scm":[14327,23621],"circular":[14037,14227,14876,16285,17134,17177,22114,22867],"collison":[7988],"module's":[14188,16965],"non-authoritative":[13287],"mp":[10603,15681],"lap":[11962],"severe":[13311],"reduced":[2010,5364,5792,5809,6874,7150,7975,10767,10951,11119,11168,11744,13316,13948,14157,16164,22026,23138],"repair":[8170],"applink":[9453],"prebake":[4794],"submesh":[3758],"buffering":[3888,13462,13613],"fountain":[654],"counter":[1324,6898,11621],"times":[78,174,276,1437,2281,3210,3254,3885,3954,4017,4086,5124,6913,7797,7909,8099,8377,9222,9256,9735,10112,10797,10852,11305,11621,11948,12346,12518,12810,12882,13758,13906,14060,14220,14276,14304,14781,14886,15005,15433,15444,15625,15952,15986,16026,16036,16513,18935,21544,21580,22006,22625,22666,23774,24000],"vertobl":[13827],"nearer":[16284,16320],"animations":[297,308,322,333,361,366,382,437,443,464,586,603,605,624,639,681,931,1468,1696,1735,1759,2146,2157,2201,2223,2610,2630,3118,3646,5149,5268,5415,6671,7778,7908,7964,8026,8134,9343,9382,9395,9408,9428,9485,9526,9555,9971,10817,11344,11473,11499,12531,12608,12952,13204,13451,14278,14842,14941,15056,15386,15449,15561,16762,17206,21371,21619,22026,22555,23371],"genuinecheckavailable":[11551],"decodedepthnormal":[18370],"dispose":[102,7243,11284,14609,24258],"-popupwindow":[6555],"_worldspacecamerapos":[20711],"executeevents":[11543],"it'll":[13777],"keystroke":[9615,21947,23006],"answers":[23083,23792],"shader_target":[18303],"offs":[2582],"smoothness":[3008,5076,7366,8093,15493,15952,15986,16277,16336,19243,20373,21569,21586,21593,21859,21902,23699],"notified":[581,1041,6719,16840,23617],"high-speed":[21868],"side-chain":[1159],"re-codes":[15345],"inversesqrt":[13942],"checked":[207,879,1610,1693,2293,2838,2967,3131,3474,3567,4279,5037,6693,7958,10384,10840,12808,13361,13441,14353,15113,16572,21439,21859,23631,24306],"vice-versa":[6828,22897],"unityengine":[35,415,756,1509,1707,1808,1889,2079,3915,4485,4741,5205,6781,6953,7161,7226,7477,7552,8361,8517,8790,8902,9009,9751,10305,10418,10487,10844,10981,11266,11358,11530,12658,12759,12823,12971,13096,13229,13251,13335,13467,13579,13640,13784,13824,14079,14424,14545,15395,15618,16794,17222,17271,18529,21446,21781,21813,21996,22501,22746,22990,23304,23590,23843,23874,24107,24311,24331,24533,24610,24678],"xlimit":[2879],"team":[833,958,982,1005,1023,1037,2009,6698,6728,10435,10442,10560,13576,13880,15230,22944],"subgroups":[13460],"disabled":[151,177,582,595,2568,2763,2829,2892,3035,3066,3087,3394,3453,3582,3639,3705,3982,4020,4058,4127,4144,4224,4503,4585,4670,4884,4941,5025,5191,5277,5602,6458,7935,9712,10417,10835,11173,11568,13044,14036,14112,14274,14674,15462,15490,15606,16606,16744,16757,16999,17085,19707,21417,21747,21864,22256,22261,22557,22684,22929,23462],"datapath":[248,10492,21659],"parser":[17327],"insideunitcircle":[15332],"drawers":[7532,7939,19156],"decay":[2336,2348,2517,2537],"microphones":[1467,3762],"responsiveness":[4489,4745,21917,22915],"springboard":[22447],"h":[424,1208,1657,2683,3799,10345,10835,10874,12097,14730,15524,16646,18269,20256,21669],"project's":[822,3766,6858,9374,9388,9400,9519,9547,9878,9982,11217,14715,22364,22495],"modifications":[885,6691,6702,12620,13298,13426,13443,14100,16793,20780,21427,21862,22475,22646,23243,23729],"microsurface":[21594],"exploration":[8128],"rt3":[15501],"consumed":[412,15009,22368,22760],"requests":[1045,10340,13290,17349,22740,23401,23878],"seriously":[3115,3744,23979],"rendertargets":[15048],"overall":[166,1378,3887,6597,10805,10852,11762,12180,12495,14166,14300,14302,15969,16001,16090,16164,16259,16314,17017,17168,17518,21562,21851,21902,21922,21953,22161,22743],"analyze":[4266,4550,4650,4707,4803,14947,21957],"modulated":[16349,17997],"missingscreen":[7038,23492,23934,24469],"sub":[7310,9515,14260,15018,18190],"clearer":[21701],"totally":[4485,4741,12285,16579,19452,21607],"xdrive":[2884],"org-ribs":[1669],"unexpectedly":[15001,16834],"-xmx1024m":[22298],"--entitlements":[9670],"trades":[2470,15911],"dropped":[3913,13448,13713],"customshadergui":[18500],"sole":[22370],"quaternion":[646,2943,7459,10143,10885,12243,13459,13600,14136],"skinnedcloth":[5999,23264],"metres":[5774,10021],"winrtapi":[24332],"premade":[4090],"tweeters":[12041],"what":[27,170,182,401,448,490,622,658,872,977,1135,1178,1206,1349,1438,1521,1634,2055,2122,2160,2210,2427,2609,2685,2884,3662,3767,3906,4263,4547,4618,4704,4800,4902,5206,5630,5668,5693,5753,6418,6550,6709,6940,7114,7131,7506,7605,7818,7985,8096,8110,8116,8289,8819,8890,9187,9314,9679,9696,9849,9857,9946,10028,10105,10441,10782,10974,11230,11402,11423,11511,11581,11682,11861,11870,11976,12196,12520,12648,12933,13083,13160,13283,13440,13450,13701,13739,13776,13842,13938,14017,14301,14338,14552,14806,15012,15110,15388,15660,15806,15859,16745,16757,16792,16964,17111,17391,17516,17552,17987,18097,18180,18254,18699,19231,19378,19557,19898,20251,20357,21450,21543,21615,21976,22093,22143,22224,22430,22542,22686,22719,22760,22871,22916,22943,23254,23296,23432,23450,23623,23736,23795,23891,24015,24024,24295,24594],"accurately":[4143,9183,10246,12800,13148,13305,13862,16495,16637,22115,24675],"rigid":[10909,13123,13193,14842,15234,23099],"lets":[78,659,1144,2041,4109,4134,4427,4933,5387,5707,5764,6709,6863,7381,7766,7939,8082,8124,9424,10043,10117,10970,11122,13227,13742,14147,14204,14261,14268,14467,14751,14790,15103,15600,15861,15885,16554,16889,17260,17916,21362,21408,21907,22043,22587,23274,23691,23779,23983,24377],"edgedetection":[18371],"unity_custom_mytag":[23466],"ondestroy":[7931],"pooling":[12200,12453,22864],"zmotion":[2872],"texcoord1":[12084,18151,21108],"shown":[131,311,325,369,399,438,596,632,672,676,684,981,1002,1096,1181,1343,1416,1473,1674,1736,1762,2003,2473,2642,3617,4170,4504,4973,5211,5251,5540,5790,6514,6680,7355,7390,8091,8276,8599,8779,9515,9720,9745,10041,10505,10707,11307,11925,12507,12647,12819,12915,13615,14024,14166,14338,14535,14785,14796,14865,14998,15038,15052,15078,15090,15098,15859,16116,16158,17263,17351,17437,17516,17858,18030,19141,19377,21420,21687,21740,21931,21977,22253,22360,22437,22648,22666,22726,22898,23382,23609,23653,23728,24322],"spells":[14017],"threshold":[1736,2311,3861,4116,4139,10971,11122,15949,15985,16012,16246,16310,16346,16356],"excluded":[2126,10921,14790,16079,22454],"af":[3578],"trust":[23399],"multi-monitor":[4222,4669],"encodes":[18272],"yourdecryptionmethod":[15151],"airplane":[10201],"jan":[23894],"agentpatrol":[12822],"getter":[11788],"apk+":[249],"cylinder":[2778,3824,5583,10336,13075,13087,13135,14228,14868],"sphere-":[5164],"baked-in":[11976],"over-complication":[11956],"glinting":[12283],"contribute":[486,1288,1764,6698,6720,6728,6736,15342,16686],"checkversion":[13441],"animatorcontroller":[608,5939,9848],"going":[52,374,1297,1799,4140,4263,4547,4647,4704,4800,5166,5524,6721,6740,7276,8096,9720,11581,11861,11966,12225,12810,13087,13118,13132,13917,14348,14405,15051,20780,22249,23268,23638,24019],"appcallbackitem":[24072],"silly":[11847],"super":[1376,9191,10351,12323,14623],"controller'":[612],"setikposition":[10296],"curves":[307,334,580,627,687,1297,2187,2209,2559,2623,5780,7336,7392,7975,11345,11490,11507,14140,14155,14184,14289,15592,16133,16188,16208,16433,22133,22214,23283],"setlookatposition":[10298,13060],"m_resolution":[24758],"uv":[187,3209,3649,4083,4212,4544,4643,4701,4775,4798,5010,5400,5651,7319,7852,7998,8206,8287,9433,9483,9524,9897,9979,12026,13912,16643,18012,18142,18269,18333,18719,19080,19280,19874,20443,20507,21029,21107,21569,23392],"contributions":[1288,6715,8165,15038],"motionbuilder":[2160],"seeing":[5129,14110,15250,18410,21837,23605],"unwanted":[1657,4933,9317,9566,9625,13466,16197,16300,16580,23436],"nsurlresponse":[10365],"projective":[18334],"activex":[22546],"fluid":[393,580,4104,10451,14017,14302,21973],"shapeless":[14071],"arc":[3498,14233],"helps":[1209,4117,7136,10767,11193,11965,13466,13748,14076,14108,14956,15344,16075,21868],"mentally":[23392],"crop":[16107],"flattened":[5513,13822,14010,15345,18313,21839],"swings":[3451],"me":[8383,9030,22962,23736],"behaviours":[1195,21624],"assetbundlebuild":[1919],"theatre":[6856],"injected":[13439,23438,24287],"sv_position":[12081,17963,18633,18731,19085,19608,20835,21093],"shader's":[11356,18497,19153],"elasticity":[16723],"throughput":[3586],"prefixlabel":[7593],"favorite":[10203],"clicktomove":[12970],"bolts":[14279,23268],"interesting":[1153,1298,3091,3717,5578,6633,11200,11940,14890,17095,17816,17994,18428,18496,19221,20878],"monoimporter":[6087],"isubmithandler":[21769],"mpeg":[1115,2286,3767],"cryptography":[22460],"radio-noise":[1211],"topleft":[9027],"scrollbar":[694,3285,8663,16646,16691,16727,22697],"sheets":[8775],"jo":[14553],"swarm":[14278],"thumbnail":[21908,23450],"libunity":[11587,14660],"farther":[2124,7133,10021,11121,11155,16260,16284,16320,18044,22871],"standard-assets":[10097],"sub-system":[7465],"bodyposition":[10299],"snapshots'":[1144],"gl_qcom_writeonly_rendering":[1504],"high-level":[8276,9743,12513,16590,17821],"giving":[2293,3586,4145,5459,5578,7106,7797,9569,13822,14205,18044],"everyone":[9425,13576,23436],"nsight":[8096],"intercept":[23419],"lut":[16188],"creates":[52,615,707,1178,1464,1543,1850,3683,5141,5501,5608,6960,8377,8582,8936,9709,12204,12570,13975,14072,14302,14669,16082,16143,16365,16397,16406,21348,22187,22249,22665,23599,23756,24361,24534],"loaded":[71,622,741,1284,1433,1618,1791,2281,4958,5209,5459,6502,7271,7900,8886,9924,10900,10973,11260,11287,11349,11836,12226,12567,12789,13443,13466,13652,13986,15170,15193,17090,17239,21349,21358,21438,23190,23418,23780,23887,24013,24046,24145,24453],"classesfordll":[23309],"launchactivatedeventargs":[24031],"+time":[21057],"noting":[11198,21370],"rubric":[10434],"m_renderingpath":[24882],"tables":[17423],"matter":[639,836,1352,2634,3210,3308,5838,6398,6550,7160,7381,8522,10166,10928,11479,12681,12916,13773,14281,14581,15213,15329,15532,16794,17520,19070,20411,21450,21613,22279,22876,23374,23393,23406],"enumerate":[10856],"won't":[542,1110,1297,2449,2797,3543,4459,4717,4814,4989,6400,8008,9258,9566,10075,10414,10538,11388,11525,11956,12520,13453,13721,14461,14471,14783,15169,15346,15604,19090,20020,20423,21930,22021,22123,22322,22397,22761,24014,24046,24134,24288,24308],"2'":[24007],"trouble":[1108,2072,12938,13423,16827,22257,22761,23443],"steering":[3825,9599,13162],"importance":[3569,5008,13923,21619,22117],"corner-to-corner":[16163],"addshadow":[18513,20410,20477],"imposed":[23809],"lift":[14067],"people":[658,877,1324,4444,4714,11344,13773,14596,15215,17366,23785],"experimentation":[2870,12456,12653],"sensitivity":[3519,6826,16372,16726],"identify":[5429,6793,6853,7776,8024,8890,10041,11353,11484,12495,13273,13842,14464,15095,15344,17437,20956,21403,21772,23726,24391],"unity_no_dxt5nm":[18317],"projectilewithinstantiate":[12234],"applet":[24430],"ordereddictionary":[24249],"vetting":[958,982,1005,1037],"treated":[3862,4116,5605,8009,13777,15514,16512,17046,19494,21352,21981,22612,22845],"source":[15,394,436,652,821,835,1061,1112,1125,1153,1314,1458,1559,2008,2160,2229,2286,2360,2367,2421,2464,2558,3141,3549,3655,4166,4486,4742,4833,5088,5420,5519,5758,6692,6698,6712,6737,6856,7340,8226,9220,9259,9612,10018,10384,10412,11127,11228,11981,12609,12644,12695,12756,12917,13112,13144,13426,13428,14495,14715,15153,15345,15938,15975,16007,16164,16498,16995,17421,17816,18035,18144,18189,18684,19071,19221,21422,21558,21583,21862,22114,22427,22910,23280,23298,23453,23623,23738,23772,23812,24103,24314,24382,24391],"clampforever":[548],"mappings":[5010],"processes":[2240,2256,5255,10776,12451,12645,12904,14832,19072,22362,22430],"doom-style":[2801],"righthand":[10327,11488],"local":[836,1610,1802,2020,2652,2657,2675,2783,2827,2858,2891,2973,3032,3044,3079,3451,3492,3697,3866,4036,4851,5334,5351,5360,5379,5564,5773,5806,6426,6442,6692,7222,7845,7943,8018,9183,11130,11312,11354,12585,12650,13001,13155,13293,13351,13439,14036,14074,14153,14161,14180,14298,14335,14760,14830,14878,14969,15081,15211,15536,15859,15909,15957,15992,16072,16246,17050,17391,21306,22111,22343,22639,22740,22967,23392,23460,23656,23769,24128,24164,24216,24539],"failed":[926,4483,4739,13655,19644,22268,22295,22520],"depths":[2130],"m_objecthideflags":[8042,24725],"disconnection":[11193],"gl_amd_performance_monitor":[1498],"really":[574,1315,1367,2074,3483,3532,4098,5231,5792,5835,6856,6976,7114,8097,8113,8997,9255,9918,10451,11596,11759,11930,12331,12451,12496,12810,13297,14770,14870,15084,15346,18044,18955,19070,19292,19455,19760,21685,22200,22432,22836,22921,23134,23863,23993],"stripper":[10423],"targetting":[10578,13953],"kgfxdeviceeventshutdown":[12728],"m_prefabparentobject":[8043,24801],"headings":[311,325,369,438],"fish":[7449],"tutorial-":[17835],"focuses":[465,10482,10765,24538],"reader":[1315,17822],"rendertextureformat":[18603],"minimized":[3899,10923],"item":[45,439,902,1860,2210,5323,5430,5519,7485,8086,9231,10045,10501,13274,13576,14868,15008,15038,15099,15190,15240,21405,21790,22735,22960,23269,23609,23734,23984,24072],"routines":[15399],"32x32":[9982],"express":[23739,24603],"480x320":[4323,4618],"1980's":[22092],"chargebacks":[941],"deactivated":[7090,12454],"javainstall":[24430],"param":[1213,2494,8178,23186],"extensively":[1469,9615],"packerjob":[21428],"win":[15129,15541],"issuing":[10916,13777],"texture+sampler":[18350],"drill":[8097,12196],"rt1":[8093,15499],"sufficient":[2047,2747,5643,5704,8198,9982,12602,13315,16552,21426,21558,22111,22581],"tires":[5792],"delaying":[13725],"ide":[1205,1567,12640,14526,17239],"m_component":[8046,24804],"initiate":[6449,13309,16042,24391],"lut's":[16199],"rgbm":[18271,18316,19057,19250],"so'":[14509],"bouncyness":[2876],"gl_oes_vertex_array_object":[1502],"findpropertyrelative":[7602],"halving":[12801,24015],"finish":[73,450,5086,7272,10075,10802,10979,11454,14108,21802,22206,23082,23999],"affecting":[5008,5181,6936,13957,15535,17520,19032,20749,21546,22894],"_tess":[20513],"repo":[6692,6721],"sdcard":[245,4404,4532],"consulting":[231],"zlimit":[2879],"pre-compute":[8197],"challenges":[12301],"getcomponentsinchildren":[9799],"uac":[11321,22975],"automap":[6670],"utilizes":[3626,5687,10767],"return":[64,481,1127,1229,1624,1922,3403,4127,4144,4476,4734,5494,6495,6761,6851,6876,7051,7090,7170,7233,8147,8524,8900,9600,9774,9965,10048,10232,10357,10511,10867,10978,11272,11391,11418,11680,11718,12022,12255,12503,12621,12757,12839,13046,13293,13507,14534,15145,15260,15335,15617,15705,15730,16528,16914,17245,17970,18324,18640,18743,19613,20198,20534,20836,21101,21427,21947,22753,22904,22954,23190,23337,23443,23503,23833,23947,24338,24449,24608,24651,24684],"hassle-free":[9966],"#808080ff":[21725],"googleanalytics":[24391],"onscroll":[21764],"patrol":[12817],"viewed":[156,2125,2748,4861,5395,5663,10021,11334,14880,15101,15859,16170,16397,21893,21976,23382,23904,24412],"curosr":[24103],"checkprompt":[21315],"fetchresults":[15016],"dedicate":[10778],"gradients":[5678,5700,7388,14292],"scoretext":[22769],"restriction":[1247,2870,6453,24046],"serious":[7330],"lightmapper":[9513,11241,12037,13918],"horizobl":[13827],"stone":[9867,14891,21573],"axis-aligned":[2657,12482],"flexibilities":[6738],"rename":[782,827,1065,1191,1414,7942,7984,9845,9963,10102,15126,21669,22203,22364,23327,23419,24387,24645],"expose":[1159,1344,2868,14912,23814],"keep":[153,490,752,825,1614,1783,2009,2282,2693,2812,2848,3028,3134,3797,3841,4667,5169,5202,5330,5375,5580,5799,6763,6926,7160,7314,7418,8099,8819,9245,9541,9566,9723,9743,10053,10413,10538,10767,10809,10909,10980,11339,11752,11894,12180,12229,12581,12602,12917,12939,13315,13437,13453,13564,13574,13844,13912,14007,14338,14597,14760,15009,15084,15100,15219,15235,15559,16125,16176,16199,16295,16556,16794,18376,18890,18935,19434,19557,21401,21912,22307,22432,22639,23188,23214,23407,23631,23785,23980,24000,24671],"better":[1205,1845,2294,2711,2804,3362,3539,3995,4949,5048,5202,5298,5639,5774,6664,6780,7279,7309,9194,9233,9513,9918,10160,10767,10904,10925,11147,11215,11501,11790,11921,11976,12379,12457,12604,12695,12916,13918,14874,15237,15944,15980,16026,16189,16260,16295,16319,16595,16679,17819,18308,21973,22760,22934,23264,23988,24579],"nvidia's":[11799,11861,15908,17800,18329],"atlassettings":[21454],"explicit":[16754,19097,21596,22735],"10-bit":[13949],"yours":[838,22430],"unity_webgl":[14383],"ll":[12950,13206,16801,21596],"obstacle":[3823,3848,6451,12894,13116,13167,13185,13267],"+z":[5586],"e-mail":[966,1021,1029,1041,1044],"someenum":[22389],"huger":[17093],"collide":[3030,3490,3665,3866,4150,5135,5332,5377,5804,5857,6443,7988,11046,11070,12326,14019,23275],"invisiblevar":[23603],"ao":[16661,16686],"chipset":[11861,11947],"anymore":[9724,10198,10414,22397,24530],"spend":[175,11504,11790,22024],"uncompressed":[134,1111,4904,5602,5686,7993,9985,10942,11853,12593,13927,24016],"describing":[4015,13175,17821,20133],"fetched":[13440,17329,22548,23203],"computeshaderimporter":[6076],"todo":[32,2866,5411],"subsequent":[247,5393,9539,14563,15224,16538,18692,19541,21910,21941,22740],"nullreferenceexceptions":[22412],"ipointerexithandler":[21755],"htm":[5445,13324],"saying":[10150,14353,17196,22289,22544],"inform":[198,805,880,14938,21644,22490,22607,22961],"numthreads":[6630],"smoke-like":[10208],"mpcore":[10609],"maxheight":[21480],"def-finger_index":[1679],"gizmos":[7921,8123,14024,14752,15861,21359,23374,23725],"accumulating":[2700,8301,16348],"databasename":[17431],"pareto":[12494],"decrsat":[19583],"reimports":[19],"unity_editor_win":[14364],"iself":[17516],"inherently":[14932],"operatingsystem":[11547],"etc":[17,235,250,282,314,828,906,1280,1349,1757,2074,2609,2694,3101,3243,3447,3523,3619,3722,4037,4158,5244,5354,5486,5564,5671,6414,6453,6508,6740,7001,7376,7506,7797,7901,8737,8781,9243,9315,9346,9542,9625,9982,10024,10103,10923,11124,11175,11519,11746,12043,12206,12459,12490,12751,13085,13305,13451,13576,13757,13846,13898,14149,14315,14464,14827,15005,15099,15411,15455,15483,16495,16637,16799,16960,17046,17088,17268,17470,17537,17567,17732,17869,18968,19045,19378,19458,19777,20356,21343,21372,21404,21543,21575,21617,21855,22109,22188,22201,22226,22278,22366,22387,22650,22729,22915,23153,23383,23392,23716,23988,24311,24416,24669],"tightly":[682,13155,13424,18281,21405,21413],"worldnormal":[12156,20450],"dynamicgi":[8244],"br211377":[24274],"lightmapparameters":[6112],"queried":[19518,23212],"'manage":[11399],"latter":[4961,11331,11730,12959,15169],"doc":[1489,21901],"approximately":[13065,13722,16476,17456,17467],"cleanup":[10198],"flash":[3299,10603,14108,15711,17265],"fold":[22183],"bevel":[4300,4590],"reclaimed":[22735],"mywebsite":[1619,15140,17240],"artists'":[11991],"binary":[240,742,833,1283,1617,3062,4433,4561,5458,9446,10921,11843,12316,13330,13843,14692,15153,21317,21957,22437,23766,24022,24363],"mymaterialnew":[783],"-buildwebplayer":[6503],"systeminfo":[11547,15704],"devices":[193,208,219,253,1085,1285,1517,1534,1551,1606,2285,2665,3762,3814,4272,4502,4573,4932,5649,6826,8166,9593,9947,10014,10024,10411,10431,10437,10442,10558,10587,10911,11179,11449,11553,11582,11606,11610,11728,11733,11860,11870,11946,12180,12197,12509,12604,12748,13775,13921,14644,14968,15342,15551,15677,16128,17110,18681,19453,21655,21666,21967,22291,22349,22382,23137,24221,24361,24534,24594,24651],"maxon":[9425],"'uv'":[20020],"building":[52,207,219,340,745,1321,1787,1965,1968,2130,2156,3094,3255,3715,4027,4349,4631,4727,4811,4893,5405,5456,5626,5665,5690,6550,6979,7220,7774,7981,9925,9965,10112,10558,10840,10914,11350,12196,12644,12792,12802,12818,12900,12903,12925,13141,13147,13269,13426,13427,13979,14471,14498,14673,14708,14746,15212,15345,15856,16261,17932,20782,21667,22190,22295,22476,22913,23148,23279,23758,23814,23874,23987,24132,24189,24280,24322,24361,24532,24601,24671],"sd":[1905,9721,10604,24550],"mapped":[394,1473,5582,6809,8004,9184,9260,10873,11658,13929,14045,14211,14250,16159,17092,17532,17547,17555,17625,17629,18161,19970,20874],"shortest":[661,12818,12884],"conventions":[6717,19067,20134],"worldrefl":[12004,19924,20449],"position":[181,245,303,391,436,459,639,670,684,1162,1324,1459,1519,1633,1755,2076,2122,2172,2199,2296,2426,2559,2652,2657,2680,2783,2829,2858,2882,3025,3098,3148,3243,3351,3385,3413,3451,3543,3566,3600,3619,3673,3711,3748,3853,3969,4002,4048,4071,4115,4960,4971,5012,5138,5189,5211,5330,5351,5361,5395,5474,5723,5745,5774,6444,6742,6836,6860,6916,6981,7104,7158,7319,7390,7451,7506,7588,7778,7911,7976,8396,8633,9361,9378,9393,9405,9432,9482,9523,9552,9614,9685,9691,9857,10124,10291,10885,11076,11135,11193,11344,11618,11716,12032,12249,12790,12841,12997,13102,13166,13212,13226,13256,13305,13459,13565,13703,13739,13967,14076,14261,14756,14790,14830,15335,15584,15596,15752,15838,15931,15967,15999,16292,16334,16365,16516,16563,16631,16686,16701,16731,16958,17003,17204,17229,17987,18033,18147,18262,18326,18400,18734,19085,19605,19971,20447,20480,20711,20784,21081,21360,21404,21419,21643,21745,21779,21825,21836,21843,21940,21987,22101,22133,22201,22214,22635,22666,22869,22877,23374,23398,23548,24692],"screenrect":[8896],"holding":[672,3047,3403,4855,5494,7349,7958,8241,10179,10304,11557,15875,21919,22867],"bounds":[2152,3627,5280,13870,14288,14757,16722,23783],"professionally":[1045],"triples":[23393],"lowest":[2491,3467,4198,4634,4686,4762,9220,11783,15417,15607,19446,21888,24013],"packerpolicy":[21431],"texture's":[3411,4927,5106,5533,6644,11437,12318,17544,17578,17613,17618,17660,17692,17701,17710,17727,17740,17759,17778,19343],"newglobalref":[14540],"uncommon":[13301],"unified":[1208,6408,10777,11399,11614,13638],"motionbluri3d12":[16081],"primarily":[2229,4833,5147,5431,6603,13638,13889,15711,20822],"organize":[1615,8996,9961,17802,19207],"rects":[3203,7597,8693],"shortcoming":[16079],"kb":[4904,5631,5669,5694,23994],"conditional":[581,5759,14441,18303,21670],"splatmap":[21892],"exc_bad_access":[22393],"continues":[12652,15297,22244,22430,24020],"happy":[14777,16800,18031],"assetbundlevariant":[1908],"resizable":[692,4228,4672],"customizable":[2868,11499],"networking":[3883,3892,4403,4531,11728,13281,13427,13726,13763,13769,15010,17271,22924,23801,23872,24550],"add-ons":[11401,22323],"table":[136,954,1473,1522,2210,3203,11974,12227,13438,15351,16461,17430,21383,21715,23006,23638,23729],"caps":[5711,7361,14874],"recognize":[4002,6739,11843,12041,24288],"green":[596,1314,2624,2831,4933,5632,5703,5737,6672,6865,8090,8277,8974,9183,11345,13075,14750,15599,15969,16001,16145,16221,16606,17017,17211,17834,18505,19618,20849,21113,21707,22103,23379,23702],"nest":[9046],"refl":[12027],"-lean":[569],"ontriggerstay":[6452,7797,15020],"replacing":[261,10114,12408,22908],"concatexample":[22749],"serving":[13766,24428],"second's":[22897],"vast":[5316,16079,17024],"pulse":[5829,21953],"partner":[8890],"tunes":[1465],"lengthwise":[2786],"alloc":[15009],"double-check":[1604],"bearing":[14598],"unpack":[267,13568],"substantial":[2887],"reflection":[2522,2542,3006,3755,4944,4982,5584,8339,9908,10423,10921,11600,11925,15424,15453,15501,17239,17269,17544,17550,17558,17570,17613,17618,18717,19169,19244,19923,20447,21551,21611,21652,21863,22390,23145,24544],"guidtoassetpath":[790],"choosing":[707,1344,1751,1771,2700,2887,3908,4089,5039,5168,7084,7381,8024,8335,9880,10206,11196,11217,13701,15213,15240,16135,16708,16960,17080,17257,19206,20782,21586,21613,23316,24384],"descriptive":[883,3511,6818,9244,17859,20786],"unityaudioeffect_getfloatparametercallback":[1231],"webplayertemplates":[1980,17195,21369,23449],"real":[1458,2124,2464,3241,3587,4923,5044,5792,8336,9183,10020,10384,11083,11193,11721,11890,11986,12307,12555,12806,13318,14283,14874,15457,15485,16284,16320,16658,16673,17093,19518,21573,21605,22023,22139,22220,22436,22738,22915,23160,24288,24653],"disadvantage":[3636,10778,11193,13293,22093],"obvious":[188,1357,5354,6913,9595,10022,14110,14790,21544,22741],"flames":[3098,3719,4104,14017,14102,14259,14278,21973],"multicore":[11785],"intangible":[14017],"explains":[320,577,603,830,842,2136,2210,5765,7341,7939,9181,9925,12225,13769,14013,14017,14497,15402,16208,17024,17199,17522,23314,23384],"wire":[1012,21834,23696],"wireless":[1092,1473,10856,22924],"3-based":[11188],"xp":[926,11312,17385,24603],"agent":[3817,3866,4023,6425,12801,12817,12876,12909,12975,13086,13124,13144,13149,13157,13184,13226,13249,13265,24434],"renders":[2700,2754,2772,3593,3748,4066,4948,6414,8306,12292,12657,12745,13925,15470,15506,15514,15558,17834,17954,18356,18420,18505,19032,19052,19071,19240,19439,19515,19738,21712],"audioreverbfilter":[6000],"blogpost":[10407],"secrets":[23418],"preconfigured":[22986],"gl_oes_standard_derivatives":[1501],"deviation":[16126],"currentselectedgameobject":[9784],"firerocket":[10174],"outline":[221,3048,4856,6612,10560,11407,16512,16614,16934,17048,20774,21419,22733],"boils":[15241],"blink":[651],"unassigned":[1662,7378],"could":[173,236,296,309,329,366,535,605,625,836,1324,1460,1783,2031,2223,2619,2634,2713,3094,3636,3715,4395,4522,4889,5142,5206,5373,5678,5700,5735,6402,6404,6458,6683,6865,6919,7091,7767,8096,8274,8890,9612,9654,9678,9702,9934,10054,10198,10393,10473,10856,10925,10980,11124,11169,11356,11499,11744,12284,12600,12688,12758,12888,12934,13140,13177,13292,13331,13466,13576,13639,13895,14007,14117,14598,14771,14912,15170,15297,15625,16565,16833,17262,17640,17911,17986,18142,18548,18709,18712,19154,19513,20043,20510,20774,20828,21386,21398,21772,21967,21994,22109,22250,22303,22364,22430,22559,22817,22867,22877,22934,23212,23310,23436,23705,23790,23865,23979,24010,24024,24441],"inspecting":[5229,8087,11983,16792,23790],"hideininspector":[1096,19161],"dpad":[1482,10873,15722],"camera'":[16121],"unity_ps3":[14375],"lightmode":[12063,19046,20728],"-o1":[23774],"#globalillumination":[21561],"missed":[12453,13448,13718],"missile-tip":[2719],"rates":[10451],"port":[1076,1247,2036,2679,6377,6494,9593,13309,13326,13439,15643,17329,17400,22289,22493],"logical":[9612,13293,13913,15005,18194,18968],"narrowed":[15107],"slowed-down":[22083],"avatarikgoals":[11488],"translations":[16071],"unity_wp8":[14380,24348,24530,24591],"allocate":[1235,11825,12229,12454,12542,22442,22603,22735,23780,23863],"passive":[7593],"learning":[6945,11116,16330,22864],"shadowing":[4200,4688,4764,5231,18251,19230,20423],"fragment":[11457,11581,12108,13969,17797,17821,17914,18056,18608,18678,18684,18728,18860,19029,19086,19182,19204,19256,19379,19449,19456,19603,20405,20779,21090],"entertainment":[23082],"research":[13310],"solutions":[904,5295,9717,10460,10575,11849,13202,18553,22679,24652],"nativeformatimporter":[6086],"fonts":[3183,3392,5495,22350,23383],"scaler":[2757,9731,16089],"considering":[9597,11861,11955,11991],"car's":[166,5779,14062,14870,22895],"bring":[314,605,652,997,1822,2487,2614,5385,5456,5512,9350,10035,10502,14406,16737,18033,18241,23730,23761],"evasion":[12898],"x2":[21602],"monitors":[2725,6547,8120,17567],"arrived":[13328,13449,13717],"application":[3,28,197,200,231,240,259,298,741,926,1051,1089,1357,1516,1533,1618,2074,2478,3659,3738,4173,4527,4582,4671,5169,6562,6702,7802,7934,7942,7987,8354,9179,9238,9355,9358,9623,9628,9966,10030,10410,10444,10461,10467,10475,10568,10802,10848,10925,10968,10974,11247,11261,11312,11541,11549,12645,12787,12969,13289,13481,13761,13913,13982,14462,14510,14710,14805,14989,15041,15193,15660,15701,15757,15812,17239,18254,18566,20956,21293,21348,21656,21669,22064,22118,22286,22343,22394,22906,22973,23192,23301,23401,23816,24024,24136,24161,24182,24203,24229,24299,24343,24370,24379,24515,24532],"laws":[11923],"newstringutf":[14556],"xmlreader":[24262],"compositing":[21570],"led-backlit":[10678],"textfieldstring":[8557],"models'":[15562],"sleep":[1091,4124,4140,5191,10685,11731,22308],"scalar":[19135,21859,22890],"firewall's":[14973],"wgt":[1660],"limit-":[2841,2875],"icy":[309],"logarithmic":[2464,2580,15473],"quantities":[5204],"grazing":[5663,18400,21605],"abcd":[22473],"isometric":[2722,15852,15889],"back-illuminated":[10612],"applicable":[1002,3392,9452,12344,12627,13941],"sparsely":[13180],"-buildosxuniversalplayer":[6501],"blocked":[3178,3551,3849,13310,13466,16421,23880,24673],"rt":[15780],"overcome":[12301,24288],"eventually":[1231,7766,9617,12687,14103,14307,14544,18035,22116,22430,22867,23447],"offered":[9595,11573,12454],"decisions":[12199,12451],"e":[11,879,1071,1230,2202,2634,3211,3571,3639,5235,5324,5648,5733,5758,5788,6496,6644,7047,7120,7308,8024,9235,9315,9458,9559,9679,9951,9982,10062,10166,11209,11344,11356,11750,12396,13022,13196,13913,14315,14689,14748,14831,14849,14985,15005,15453,15841,15887,16079,16201,16385,16429,16576,17239,17537,17800,17860,17948,18046,18241,18303,18361,18553,18713,18880,18949,19096,19177,19241,19437,19458,19588,19763,20138,20412,20510,21417,21862,22169,22268,22473,22650,23012,23219,23499,23635,23943,24396],"locations":[207,3113,7082,9725,10504,11341,12929,13157,13211,21558,22479],"scenarios":[253,3125,9993,10110,12802,12889,13110,13902,16578,20423,22384],"triggerenterexits":[15019],"centreline":[13839],"bleed":[12284],"unload":[28,7241,7994,10978,11263,11301,11836,16797,21343,23261],"playonawake":[2475],"shut":[908,5258],"cmd+alt+7":[23074],"inspect":[682,2642,4267,4551,4651,4708,4804,6680,11336,13757,15041,15672,22404],"halomanager":[5965],"prior":[72,442,710,884,1600,2005,6602,9412,9548,11298,14464],"audiogroup's":[1445],"geometries":[3621,21543],"deteriorate":[10820],"'meat'":[17808,19213],"unity_4_5":[14400],"texturename":[18696,19259],"relax":[13068],"speed":[166,236,367,464,1357,1459,1743,1757,1783,2139,2201,2477,2572,2620,2630,2728,3078,3299,3462,3495,3541,3696,3826,4045,4082,4119,4358,4640,5338,5371,5408,5420,5712,5730,5790,5809,6824,7403,7780,9420,9911,10173,10886,10905,11148,11652,11955,12061,12264,12453,12495,12598,12801,12967,13093,13166,13704,13764,13822,13887,14026,14040,14077,14103,14157,14174,14193,14206,14245,14283,14306,15588,15911,16027,16264,16658,16682,17088,17105,17213,17524,18978,21880,21973,22006,22924],"programs":[318,663,6622,7127,8306,9233,10428,11457,12453,13974,17798,17821,17914,18056,18140,18241,18286,18678,18679,18860,19182,19256,19457,20353,20692,20828,21079,21962,23796],"lookattargetweight":[13052],"oneminusdstcolor":[18221],"conspicuous":[14279],"updates'":[11401],"fow":[9689],"abruptly":[11198,14306,22116],"located":[147,902,1051,2549,3681,3797,3985,4009,4084,4434,4562,4723,5492,6797,7508,7952,9641,11129,11239,13318,14469,14512,14730,14810,15103,16452,21354,22104,22353,22870,22930,23269,23734,24048,24128,24216,24532,24563],"pass":[149,263,329,671,762,1127,2243,2259,2342,2353,2361,2375,2379,2387,2395,2412,2432,2440,2450,2688,2754,2876,3248,3823,4124,4814,5045,5151,5396,6449,6508,6592,7325,7583,8177,8294,8421,8804,10302,10414,11114,11260,11301,12033,12768,12800,12818,12917,13309,13328,13576,13988,14032,14054,14164,14593,14725,14806,15465,15493,15522,15558,16176,16313,17830,17922,18035,18085,18237,18278,18352,18379,18405,18626,18695,18725,18875,18963,18979,19039,19123,19233,19257,19402,19439,19459,19528,19545,19735,19755,20068,20390,20728,20772,20816,21087,22026,23175,23377,23419,24046,24112,24428],"tizen":[6502,14481],"peak":[1155,1736,2487],"seamless":[2286],"manager":[157,272,917,995,2430,2458,3504,3876,3954,4108,4133,4865,5328,5397,5427,5706,5798,6805,7804,10877,10905,11061,11794,12446,13756,14178,15051,15738,16390,16965,21795,22021,22362,22740,23355,24557],"monopinvokecallbackattribute":[22499],"cors":[23878],"stability":[15231,23981],"creation":[730,820,1788,5500,6419,6616,6618,6661,7403,8023,8890,10136,10482,12229,13727,14835,14923,20807,21409,21569,22191],"editorguilayout":[7442,7508,7757,18540],"-f":[9670],"gregorian":[10923],"would":[78,205,249,360,366,489,1008,1315,1372,1400,1456,1534,1751,1757,2213,2226,2282,2578,2626,2693,3198,3477,3766,4045,4237,4547,4589,4678,4800,5164,5204,5243,5457,5731,5774,6404,6442,6543,6714,6750,6924,7154,7487,7911,8738,9184,9612,9727,9745,9860,10027,10111,10558,10925,10979,11088,11169,11198,11228,11302,11351,11541,11947,11989,12192,12454,12650,12819,13292,13464,13565,13725,13749,13822,13924,13982,14098,14252,14259,14302,14496,14552,14697,14781,14908,15139,15209,15251,15525,15599,15775,15867,16126,16172,16686,16801,16963,17286,17860,17939,18342,18603,18652,18954,19091,19189,19230,19510,19513,20067,20353,20508,20782,21343,21429,21571,21586,21630,21699,21987,22097,22114,22412,22606,22737,22867,22904,22915,23176,23209,23401,23780,23819,23881,23995,24288,24363,24382,24669],"chorus":[2239,2255,2361],"content-encoding":[23790],"mergespecfile":[21289],"rb":[6688,6746,8155,15782],"adapted":[254,8775,9184],"duplicate":[1296,1413,4874,6401,7984,9219,10246,15122,17824,23048],"onparticlecollision":[5870,14033],"persisted":[22981],"textureimporterformat":[1812],"probabilities":[15244],"significantly":[2219,2580,3663,5091,7328,10405,11474,12196,14939,15087,16365,21844,22443],"'ieventsystemhandler'":[11530],"objdump":[11591],"m_userinformation":[24722],"-c":[911,1579,9642,17425],"combustion":[14072],"nativeactivity":[14644,22291],"inputmode":[9839],"exr":[5016],"accumulated":[16060,16345],"existence":[7931,14306],"doing":[76,658,1231,1533,1845,1939,6592,7308,9215,10416,10925,11589,11750,11950,11978,12395,12520,12648,12733,13305,13630,15237,16822,17796,18334,19524,20043,20207,21429,23301,23605,24229],"oninitializepotentialdrag":[21759],"tv":[9621,14486,15634,15676,15714,15793,15802,15805,16164,16602,21967],"mali-400":[15681],"respected":[5410,8251],"ready-made":[14835],"huge":[982,3658,5629,9855,11749,12578,14110,16850,18884],"adopted":[24548],"global":[1324,1377,1421,2464,2829,2892,3199,3273,3433,3453,4109,4134,5320,5484,8160,8286,11711,13155,13918,14166,14453,14540,14761,14790,15506,15656,15948,15984,16084,16405,16586,17297,18249,18665,18936,20430,20692,21559,22111],"explictly":[23782],"consistency":[1064,9262,22020],"user-defined":[2153],"deliberately":[7158],"puffs":[14062,14076,14184],"hosting":[2022,6708,17266,17423,22544,23769,23878],"navigation":[154,721,3846,3865,4012,9744,11199,12800,12818,12875,12904,12931,12948,13091,13121,13131,13149,13152,13154,13188,13262,13268,13270,14635,15101,15839,15862,16047,16531,16697,16746,16747,16946,16971,17067,21650,22313,22684,23115],"boldface":[14786,17046,21693],"ourselves":[10226,12306,18702],"checks":[76,581,1230,1613,6924,12818,12929,13792,14332,17330,18303,22396,23203,23609,23680,23783,23978,24321],"6-digit":[7001,24416],"specs":[11172,11949],"conten":[22607],"sorted":[4078,12367,15340,15525,20747,21422],"unity_unityobject_local":[23461],"toolbar3":[8603],"m_finalgathercontrastthreshold":[24769],"forearms":[1671],"poles":[2788,5788,14872],"dense":[2219,3712,5578,7330,9569,11905,21557,21837,21912],"timeout":[16973],"attachcurrentthread":[14533],"submission":[958,982,1037,1532,4443,4713,10953,22485,24322],"ondrag":[21761],"security-":[17297],"natively":[5646,6941,9373,9388,9400,9519,9547,10582,10770,23790],"focustype":[7593],"assembly":[1509,4265,4549,4649,4706,4802,4823,5235,5309,10923,17239,17943,22522,23321,23401,24277,24656],"charactercontroller":[5980],"tiniest":[22200],"hub":[15814],"lower-right":[2719],"caves":[6420],"recycle":[7487],"alphanumeric":[10432],"softens":[21844],"a+e":[18954],"odd-looking":[3649],"preventdefault":[7049,23501,23945,24480],"onpostrender":[7918,12734],"springjoint2d":[6046],"keyboards":[9947,11711],"newposition":[17229],"consume":[4963,5257,10765,11198,14958],"deviate":[13163,16126],"sub-menus":[439,1850],"digit":[23609],"screen'":[18566],"millisecond":[11966],"script's":[7896,21790,22412,23605],"11-specific":[20454],"partway":[14037],"deselected":[21767],"resolves":[19071],"crevice":[12928],"planning":[1547,9623,11944,22960],"presenting":[3426],"'smoothness'":[21859],"developer":[72,220,242,267,744,1078,1556,4316,4520,4614,4721,6412,6719,9670,10428,10441,10559,11607,11811,13321,13883,15675,15711,16801,17381,17822,22284,22446,22524,22918,23407,24228,24538],"localabstract":[14991],"blur":[5003,9310,12041,15909,15952,15986,16014,16020,16030,16059,16252,16278,16295,16321,16382,16566,16661,16681,17009,17050,17159,21844],"clutter":[8126],"flips":[13303,19070],"high-res":[24013],"interdependencies":[10923],"edges":[182,2657,4963,4973,5106,5533,8206,9198,9733,9879,11232,12681,12929,13167,13912,14205,14225,14870,15909,15965,15991,16356,16365,16449,16483,16513,16643,17147,17159,18040,18104,19513,19846,20209,21403,21551,21606,21836,22240,22638,22870],"wasting":[5288,12199,13924],"academic":[22864],"preserving":[15944,15980],"motortorque":[5782],"xxx_data":[6385],"afford":[9254],"intensities":[15945,15981,17095],"bottom":[187,231,311,325,369,438,687,1161,1427,1639,1737,1763,1848,2076,2128,2208,2720,3152,3421,3627,4273,4498,4574,4863,4933,4973,5210,5429,6974,7381,7765,9111,9224,9872,10043,10338,11454,11480,11560,11648,11920,12049,12649,12681,13331,13822,13872,14855,14872,14957,15000,15038,15041,15099,15821,16175,16505,16646,16700,16735,16949,17262,19069,20689,20718,20809,21403,21551,22175,22246,22651,22870,23676],"categorisations":[1360],"-buildtarget":[6502],"expand":[312,326,370,439,902,3196,7361,9213,9698,11426,12460,14139,14259,14307,15098,16106,16243,16486,17150,22205,22838,23377,24383],"approach":[11,219,1204,1845,1854,2131,2284,3806,7109,7279,8097,9296,9547,9867,10106,10292,10414,10558,11198,11850,12284,12456,12888,13289,13963,14017,14525,15087,15153,16840,19283,20353,20510,21612,22444],"cumulative":[10924],"screenshotfolder":[22053],"24bit":[15357],"self":[970,1448,15009,19527],"elsewhere":[1432,1802,8475,11403,13309,13996,15104,18326,24271],"lerp":[11679,13007,19266,20091,20290,20923],"downgrade":[6543],"calculatelayoutinputhorizontal":[22617],"procedural":[464,4857,5322,6868,8127,12746,14881,19996,20419,20984,21350,21555,22135,22216,22256,23364],"scrollposition_x":[24948],"cpu":[1145,1247,1523,2047,2285,2363,2369,2628,3832,3869,4114,4814,4963,5255,5288,7308,7892,9618,10590,10782,10905,11153,11683,11785,11965,12446,12490,12608,13860,13889,14467,14934,15000,15002,15038,15093,15445,15532,15677,16687,17524,22006,22743,22899,23894,24286],"controller's":[2794,22555],"amused":[21692],"rather":[187,314,366,580,752,1290,1929,2076,2619,3028,3125,3397,3407,4046,4575,4667,4933,4983,5211,5609,6458,6776,6938,6949,7110,7308,7778,7833,9180,9623,9728,10056,10449,11453,11945,12393,13177,13227,13273,13285,13822,14008,14015,14035,14106,14205,14231,14306,14580,14748,14828,14884,15110,16163,16502,16558,16692,17082,17135,17177,17235,17262,18048,18137,19290,21356,21617,21843,21921,22018,22724,22860,23379,23393,24527,24538,24655],"writting":[9952],"plantation":[21921],"protrusions":[11925],"stuff":[1247,1354,11752,12456,12497,17365,22437],"mat":[779,13828],"greyed":[23234],"scrub":[8086],"slidervalue":[8896,9116],"chess":[20986],"hotspot":[4182],"pre-enabled":[4933],"interfaces":[2731,5512,7823,9950,10030,11527,13361,16622,16627,17751,22610,22714,24669],"collectdependencies":[43,1832,1928,11356],"organises":[4106],"f3":[6852],"aaa":[12606],"re-render":[4998],"redrawing":[22490],"downward":[15093,21973],"recommended":[78,235,403,442,464,595,860,2022,2806,3892,4139,4443,4713,6521,6690,7091,7244,7816,9179,9358,9681,10451,10473,10482,10917,10968,11044,13769,13860,14721,15563,15760,17093,17171,18556,18681,20826,22339,23632,24046],"incorporate":[879,4012,6866,11349,13266,14147,14916,21370,21689],"infinite":[2131,5044,8885,9679,11235,12227,14913,16833,19419],"m_lockatlas":[24776],"reduces":[2308,3237,4139,5004,5371,7971,9204,10921,12229,13842,14108,15905,15942,16413,17177,21401,21844,22735,23158],"m_result":[24618],"volume":[304,652,1112,1127,1144,1337,1418,2127,2243,2259,2296,2308,2342,2353,2459,2491,2571,3627,3986,5034,5280,8304,10088,10685,11197,12600,13843,14204,14222,14259,15327,15456,15484,16195,19147,21868,22093],"texts":[3264,3397],"difficulties":[22349],"_edgelength":[20609],"blog":[11893,22099],"alu":[11749],"bazaar":[7941],"responds":[13327,13722,16042,16530,16696,16945,17066,17362,20229],"adding":[221,327,635,709,1054,1180,1360,1404,1460,2074,2361,2367,2768,2969,2982,3578,3659,3985,4100,4441,4711,4873,5141,5198,5324,5417,5776,6592,6612,6813,6875,6970,6982,7342,7419,7852,8341,9359,9651,9692,9734,10166,10560,11194,11511,12648,12696,13919,14140,14281,14530,14781,14870,14901,15110,15238,16075,16272,16549,18185,18936,21843,21933,21949,21978,22020,22125,22192,22456,22586,22879,23002,23271,23299,23391],"half-direction":[20438],"unityaudioeffect_releasecallback":[1231],"audiolistener":[1330,1396,2329,2358,2441,5931,24923],"'fixed":[4398],"want":[177,179,214,259,323,361,372,465,589,603,670,674,742,752,825,874,1064,1203,1361,1543,1652,1791,1909,1968,2064,2097,2124,2165,2226,2477,2549,2601,2617,2619,2693,2803,2823,2879,2969,2982,3096,3125,3141,3196,3249,3322,3334,3397,3435,3476,3529,3620,3656,3675,3686,3835,3897,3991,4017,4046,4090,4106,4190,4507,4589,4671,4756,4926,4993,5128,5231,5312,5324,5417,5457,5492,5519,5685,5737,5764,5785,5818,5838,6360,6390,6458,6508,6603,6659,6664,6680,6700,6720,6728,6738,6744,6814,7091,7312,7354,7463,7663,7811,7834,7946,7987,8113,8187,8421,8633,8778,8916,8997,9266,9302,9314,9346,9361,9415,9498,9536,9559,9576,9623,9677,9692,9748,9860,9962,10022,10060,10106,10292,10352,10502,10970,10980,11068,11136,11177,11197,11263,11286,11339,11426,11499,11557,11729,11750,11904,11950,11981,12280,12457,12525,12602,12611,12652,12680,12783,12810,12819,12888,12963,13155,13189,13249,13278,13294,13326,13438,13464,13565,13729,13847,13981,14072,14107,14204,14252,14338,14367,14563,14773,14781,14990,15138,15189,15296,15344,15555,15585,15596,16421,16476,16512,16549,16800,17239,17257,17280,17391,17464,17470,17552,17558,17901,17915,18040,18141,18254,18329,18412,18890,19182,19391,19419,19458,19738,19773,19945,20134,20410,20747,20774,21104,21368,21586,21810,21832,21843,21905,21937,21947,22026,22201,22279,22586,22635,23213,23276,23299,23373,23419,23615,23631,23774,23814,24017,24073,24193,24214,24282,24318,24391,24567],"globally":[5714,12890,18946,19420,22027],"actualtexture":[21066],"vertexlit":[3579,11176,11441,17454,17530,17837,17928,18426,18897,19290,19423,20774,22278],"spluttering":[14098],"payouts":[978,1004],"key":[314,481,632,731,975,991,997,1411,1657,3047,3226,3517,4226,4558,4670,4814,4855,6521,6841,7343,7403,7778,7958,8341,8395,8998,9502,9545,11342,11978,12456,12495,12818,13721,14763,14796,15087,15725,15842,15865,16155,16528,17263,18566,19449,21500,21842,21919,21944,21993,22652,22760,22978,23006,23087,23132,23402,24000],"valid":[377,962,4444,4714,5602,6661,8075,10292,15570,16074,16975,17320,18211,19097,21753,22172,22323,22623,22997],"save":[19,49,198,698,750,998,1049,1286,1607,1618,1640,1801,3198,3250,3503,3659,3832,4434,4562,4958,5190,5513,6381,6665,6858,6976,7084,8154,8885,8997,9229,9246,9304,9349,9374,9391,9403,9444,9480,9547,9623,9783,9870,9963,10133,10471,10492,10844,11414,12394,13451,13719,14339,14790,14801,15065,15100,15139,15196,15400,16202,16213,16434,17163,20420,21298,21407,21895,21931,22043,22328,23068,23752,24014,24380,24391],"printed":[187,3881,6554,11599,13822,14440,18650,21960,22397],"facilitates":[12292,13749],"realdll":[24654],"site-control":[17295],"prime":[11861],"wrap":[448,470,3353,4469,4727,4927,5104,5512,6644,7129,7463,8524,9119,9597,9879,14510,14721,17038,19099,19591,20208,20454,24525],"matting-":[9221],"likelihood":[11265,12687],"attenuated":[1165,1375],"doppler":[1458,2465,2576],"decodeviewnormalstereo":[18276],"_illumincol":[19330],"dynamic":[234,285,1233,1397,2308,2691,3191,3392,3483,3587,4043,4206,4517,4611,4692,4768,4785,4989,5135,5480,6444,7315,8148,8161,8886,9182,9675,10578,10818,10928,10962,11198,11831,11888,12039,12201,12769,13155,13271,13860,13921,15076,15473,15504,15537,16061,16118,16534,16706,16731,16956,17074,17092,20430,21580,22444,22997,23806],"severely":[13724],"previewassettype":[6107],"appear":[398,461,629,671,684,984,995,1040,1053,1091,1615,1848,2124,2723,3089,3181,3238,3365,3543,3620,3716,4046,4179,4675,5492,5742,5832,6495,6856,6983,7143,7159,8123,8335,8373,8693,8890,9111,9208,9302,9354,9571,9675,9728,9959,10021,10041,11136,11195,11232,11286,11696,12227,12507,12887,13149,13310,13424,13438,13451,13462,14062,14076,14139,14335,14730,14750,15026,15191,16170,16261,16284,16320,16658,16673,17464,17515,18044,19385,19740,20786,21403,21420,21606,21693,21796,21832,22006,22105,22131,22196,22607,22668,22721,23153,23272,23310,23376,23450,23677,23984,24200,24380,24571,24671],"rectangular":[2127,3575,7350,10957,20984,21343,21403,21743,21847],"derive":[6967,7445,7470,9617,16797,23312],"usual":[1473,1609,6760,7401,9504,10970,11167,11195,11802,13177,15114,17046,17946,19461,21580,21910,22026,22918,23312],"half4":[12022,18520,18592,18641,18745,19198,19614,20107,20137,20193,20497,20737,20802,21135],"geometric":[11744,13913,15852,16079],"setlayoutvertical":[22620],"gas":[14066],"controller2":[12689],"area":[175,187,629,687,1519,2131,2227,2815,3039,3089,3279,3556,3837,3984,4009,4017,4833,4846,4887,5282,6659,7082,7149,7350,8099,8260,8291,8567,9092,10839,11133,11158,11198,11716,12284,12680,12788,12795,12818,12876,12916,13157,13841,14302,14994,15002,15037,15040,15070,15077,15092,15101,15932,16081,16104,16261,16293,16337,16563,16646,16665,16698,16715,16947,17057,17177,21403,21419,21743,21836,21873,21910,21919,21940,21977,22133,22392,22664,22703,22718,22737,23374,23983],"returnstr":[23836],"_refrcolor":[19171],"inchannels":[1268],"hope":[1315],"die":[432,1460,2386,2394,2401,2419,2439,2447,2456,5371,14102],"objective-c":[4604,10566,12751,14677,14719,21669],"sharedassets":[11296],"boolean":[305,412,647,2110,7093,7194,8584,9743,11263,12962,13356,13649,17077],"becoming":[14066],"arena":[2725],"unityappcontroller":[21669],"good_shading":[18942],"easiest":[490,826,3533,4778,9643,9894,11115,12805,13876,17205,18955,22461],"modelling":[1635,2074,3633,3707,5646,5764,9358,14825,14868,14930,21916,21960],"nativebattery":[24583],"resolvable":[18400],"transformed":[13022,14188,18043,20874],"exist":[586,728,2072,3062,3684,6599,6717,6856,7271,7521,7766,7819,9202,10048,11223,11289,13315,13438,13791,14459,14689,16421,16762,17365,19097,21634,21987,22247,22370,24319,24587],"diverge":[1165,10022,14239],"capable":[1168,2868,6623,10411,10616,11527,11613,11870,13732,15459,19494,22542,23798],"today":[8161],"brake":[2138,3464,9601],"data_":[11312],"jobject":[14536],"drm":[10951,11549],"directing":[7106],"natural":[290,1783,2891,5832,9966,13169,13742,14054,14140,14836,14878,16386,17095,21924,21949],"handled":[573,1045,1519,1614,2283,2426,2475,2645,3818,5202,5309,6961,7792,9180,9625,11965,12905,13177,13285,13329,13453,13591,14687,17232,20418,21971,22524,22558,22740,23209,23776],"rms":[1155],"rubber-band":[2930],"stretching":[4074,5792,8128,9684,14192,15235,16261,22724],"newfolder":[789],"barbed":[21834],"cloning":[6704,6740],"stating":[982,11415],"logicalnor":[18203],"oval-shaped":[9894],"arcs":[21618],"released":[2313,4317,4521,4615,6711,8522,10952,11301,11925,11947,12456,14062,15679,16052,16724,21757,22735,23609,23978],"shadercache":[5259],"explorers":[6856],"repertoire":[1315],"card":[4963,5213,5663,6547,6622,8334,9914,10558,11163,11456,13900,15406,15459,15487,15922,16087,16185,16205,16280,16316,16353,16388,16417,16576,16670,16687,17021,17059,17524,17911,18077,18607,19732,22271,24550],"measures":[17375],"as-is":[5597,16119],"textureprocessor":[1811],"grey":[5737,9183,12647,14802,16590,17103,17259,21725,21976],"whirlpool-like":[4064],"staticcally":[7309],"topology":[1405,9248,14828,21569],"gma":[8311,15459,16205],"opportunities":[16189],"disappearing":[14306],"publicly":[11893,22475],"psql":[911,17425],"selective":[16135],"kgfxdeviceeventinitialize":[12727],"non-desktop":[23127],"ime":[9945],"resume":[14283,22024],"postgresql":[908,17402],"blendonefinished":[1716],"monotouch":[15400],"cm":[14352],"ingredients":[8113],"3dmax":[14843],"gx6650":[10730],"256th":[19445],"lookat":[574,7407,7788,12374,13028],"broadcasting":[3890],"gaseous":[21973],"narrative":[12456],"lod":[3614,4954,11119,11747,12064,13931,18419,18511,18583,19392,19418,19779,20103,20475,20794,21923,22143],"undergo":[14304],"interop":[12784],"entire":[366,741,836,1333,1420,2047,2619,2640,3267,5289,5316,5825,7590,8376,8916,9733,10135,10616,12033,13273,13314,13730,13843,13907,14872,15087,15932,16453,16648,17167,17464,20784,21859,22699,22724,23435,23999],"who":[658,1315,3430,6719,7114,11934,11944,12227,13318,13326,13613,14596,14923,17366,23623],"top-level":[6712,15580,21640],"editorsettings":[5995],"unity_pass_forwardadd":[18355,20068],"mixing":[464,1178,1329,1403,2372,9612,13185],"encodefloatrgba":[18272],"spec":[12086,17841,18453,18918,19354,20259,20472,23894],"represented":[411,658,1417,1763,4012,8075,8584,9183,11615,12485,12917,13266,13275,13567,14017,14125,17204,18496,19771,20906,21618,21847,21877,22103,22637],"tools":[197,269,391,589,888,994,1078,1545,1602,1848,2604,3633,4483,4739,5238,6354,6377,6428,6692,6710,6721,6951,6986,7394,7761,7941,8096,9719,9863,11336,11344,11591,11750,11978,12344,12510,12642,13312,14495,14748,14803,14835,14922,15103,15137,15856,17024,17205,17236,17347,17442,21277,21840,21895,21910,21916,21939,21957,22086,22098,22104,22195,22284,22436,22639,23008,23131,23355,23619,23636,23790,24159,24168,24551,24563,24603],"securities":[6738],"upscaled":[5598],"contacting":[22944],"previously":[1849,5260,6715,6738,7766,7790,9832,10974,13328,13867,15466,15495,16567,19707,21984,22486,23219,24134,24427],"illuminates":[11139,15432,15456,15484],"plasma":[5737],"plastic":[14327,21586,21613,23621],"uvmaintex":[11998,18520,18592,19821,20181,20497,20802],"modo":[17,9280,9546],"const":[9767,12014,16805,21048,21458],"simple":[20,333,393,471,588,606,625,663,690,931,1208,1633,1755,1914,2139,2224,2254,2270,2340,2352,2395,2450,2748,2870,3039,3171,3310,3592,3892,4096,4473,4731,4926,5282,5344,5402,5456,5497,5584,5835,6612,6806,6974,7126,7141,7189,7403,7466,7767,7845,8348,9244,9541,9597,9720,9741,9892,9924,10109,10485,10696,10872,10928,11198,11239,11441,11505,11530,11684,11745,11864,11932,11978,12203,12472,12754,12819,12957,13087,13162,13209,13249,13293,13466,13769,13793,13887,14036,14054,14076,14099,14252,14281,14302,14663,14740,14768,14844,14870,15042,15087,15196,15434,16074,16142,16313,16329,16429,16501,16615,16632,16660,16934,17048,17167,17384,17800,17834,17993,18081,18232,18435,18504,18718,18905,19072,19396,19792,20185,20396,20508,20822,21350,21706,21867,22115,22448,22722,22899,23251,23314,23393,23410,23446,23726,23863,24131,24377,24453,24713],"postprocessing":[1968,2066,6590,7919,16060,16208,16283,16319],"editors":[7384,7402,14848,16941,21842],"inherit":[1290,3081,3699,9210,12207,14179,18968,19781],"differentiation":[8775],"furniture":[7981,13846],"setactive":[9782,23219],"'explain":[14337],"exiting":[12617,15756,23238,23296,24556],"tv's":[15643,15796,15835],"spreads":[14066,14155,14259],"unityedgelengthbasedtesscull":[20652],"pathtoyourproject":[24145],"toon":[11448,20228],"600mhz":[10658],"increases":[532,1178,1845,2128,3771,5046,5111,5538,7136,10953,11119,11156,11234,11454,11965,12229,12687,13842,14252,14275,16344,16668,16682,16958,17524,19068,22006,22760,23783],"speedtreeimporter":[6109],"notequal":[18071,18396,18998,19573],"aesthetics":[8772],"continuously":[2983,4960,7776,13289,13722,14184],"keyname":[11001],"participation":[6738,13773],"interspersed":[21835],"exclude":[335,3573,12642,16061,20507,22461],"sharing":[7312,8266,10556,13563,13727,14851,22565,23881],"directory":[1489,1570,3681,6712,7276,7942,9246,9444,9641,10068,11334,11414,14343,14566,14689,17411,18498,22059,24251,24294,24312,24366],"daycontroller":[22399],"invdiff":[20118],"andscreen":[11565],"dream":[19391],"failure":[17323,22289,22337,22548],"buffered":[13449,13462,13613,13743],"server":[56,744,831,1802,2007,6367,6494,7941,8266,10384,11289,11336,11401,11730,13284,13325,13428,13448,13565,13575,13639,13721,13727,13766,13773,14000,14315,14343,14809,14990,15139,17298,17382,22961,23609,23630,23769,23878,24302,24391],"mandatory":[52,10406,17339],"factors":[1458,9617,10801,17518,18184,20421,20457,20736,22119,22370,22924,23892],"multichannel":[2272,2575],"commonly":[187,2716,2998,3157,3198,5283,6460,7403,9925,11055,13303,14868,15219,15400,16555,17348,17986,18249,18935,19503,20419,20878,21080,21342,21589],"reinstall":[22356,22918],"bean":[276,10873],"expected":[231,1296,1471,2723,3228,5774,9340,10915,11237,13722,14958,15060,16036,17324,18336,19250,20845,22613,23239,23370,23812],"best_shading":[18942],"unsupported":[5687,6543,7040,10846,17325,23689,23936,24186,24424],"near":[1198,2076,2126,2677,4912,4966,5021,5837,7142,10100,10338,13864,15474,15509,16170,16302,18046,18325,18675,20712,21558,22871,24873],"unloadallloadedobjects":[11301],"calculation":[168,181,7110,8214,10909,11138,13249,13949,17533,19270,20763,22606,22877],"tn2008":[22446],"tester":[257,13428],"portrait":[3806,4273,4498,4574,9721,11560],"oncancel":[21770],"autoconnect":[14970,15082,15197,22492,23776,23899,24306],"never":[151,249,772,828,836,1614,2072,2131,3464,4451,4658,5001,5191,5654,5788,6457,6874,7148,8241,9961,10441,11071,11169,11798,12207,12454,12542,12635,13287,13464,13985,15058,15075,15237,16106,16725,18073,18383,19575,19781,21579,21617,21976,22621,22735,22913,24000],"shading":[181,2641,3248,3553,4964,8087,8274,11126,11177,11234,11452,11750,14205,15406,15453,15480,15907,16271,17520,17820,18301,18379,18680,19052,19105,19235,19381,20425,20738,21573,21615,23379,23702],"maxiter":[21057],"demos":[466,22541],"dirs":[22299],"pi":[10255,21049],"non-spot":[20754],"silent":[4603,10067],"x-small":[23541],"prefered":[12184],"2048x2048":[9258,21441],"onbeforeserialize":[16888],"promotions":[991],"unity_loaded":[24647],"gl_frontfacing":[19112],"causing":[7308,9625,10578,15009,17362,22366,23272],"'lock":[15867],"web-player":[4184],"crt":[24187],"_lightcolor":[20741],"productname":[11327,24216],"compatible":[136,1547,3249,6944,7942,9966,10412,10484,10923,11729,13330,13749,14471,16283,16796,21691,21847,22422,22917,24133,24237,24277,24363,24605],"goober":[21394],"back-to-front":[7334,19763],"0x00a1dd64":[22409],"signal's":[2308],"builder'":[24005],"many":[6,78,179,231,374,484,650,674,908,1063,1388,1462,1652,1704,1764,2130,2611,2776,3095,3177,3196,3243,3302,3501,3662,3716,4086,4106,4200,4688,4764,4862,5046,5178,5217,5344,5765,6695,6739,6913,6944,7309,7337,7776,8112,8772,8997,9189,9222,9249,9312,9947,10102,10106,10456,10571,10801,10909,11124,11213,11234,11261,11289,11403,11517,11614,11840,11925,12229,12459,12544,12655,12788,12818,13177,13308,13574,13844,13887,13975,14054,14064,14110,14220,14254,14266,14281,14302,14874,14889,15239,15399,15408,15456,15484,15532,15611,15625,15885,16167,16340,16513,16791,17204,17207,17263,17520,17796,18040,18104,18260,18458,19043,19230,19292,19434,19457,19589,19753,20926,21344,21407,21557,21643,21910,21962,22093,22139,22209,22220,22279,22370,22544,22625,22760,22874,22947,23127,23269,23607,23892,23992,24345,24527,24540],"rose-like":[17834],"scrollable":[16565,16716,22704],"fat":[20017],"inbuffer":[1266],"emitter's":[3081,3699,4045,14230],"guaranteed":[3636,11247,13310,13449,15624,21344,23301],"unity-serializer-friendly-format":[16932],"obj":[2,83,7286,8151,9291,10337,11280,22409],"bumper":[1485],"touchpadmode":[15723],"talking":[1365,21578],"dispatch":[6640],"god":[11908,16995],"orange":[2828,21732],"disputed":[941],"numerical":[4141,5876],"unityevent":[16050,16534,16706,16731,16956,17074,22686,22987],"flashy":[12459],"leftmost":[4930,13138,16646,21940],"acccess":[10177],"vec3":[18690],"gravity":[2977,3517,4112,4137,5121,5183,6463,6824,12259,14071,14178,14306,14325,15583,23272],"operated":[1288],"paired":[8914],"hand-held":[9947],"activities":[10848,22307,24549],"uiviewcontroller":[22490],"flashes":[11898],"rightfoot":[11488],"author":[9258,19292],"phrases":[21807],"repacked":[21437],"she":[19292],"turning":[1539,11600,14891,17834,18390,22925],"shockwave":[17375],"draw-call":[10791,21927],"proprietary":[3,741,1522,12185],"planned":[11489],"hierarchystate":[6079,24944],"initiated":[14974],"inflation":[13766],"iterations":[14,4114,9298,15952,15986,16016,16026,16038,16340,16666,17010],"enabling":[1109,1131,1178,1633,1742,1786,2362,2368,3151,3734,4001,4058,4481,6679,7119,7942,9712,11152,11239,11346,12657,13216,14147,15197,16197,16344,17396,18038,20404,21830,21858,21898,21913,22521,23880,24141],"silhouette":[16382],"virtual":[836,1905,2473,6805,10405,12052,13842,20708,21459,22304,22362,23436],"pointerwheelchanged":[24063],"freed":[7243],"particleanimator":[5888],"unprocessed":[4483,4739],"aqua":[21717],"swatch":[21716],"end-start":[20763],"supporting":[464,1208,10780,15711,19433,23768],"pla":[9410],"snapping":[14762],"way":[71,249,311,325,369,438,471,585,656,837,1017,1064,1148,1198,1381,1446,1458,1609,1614,1651,1878,1968,2018,2078,2121,2189,2272,2565,2645,2740,2887,2997,3050,3264,3351,3533,3578,3590,3654,3686,3806,3835,3866,4132,4145,4162,4778,5048,5113,5121,5198,5282,5396,5417,5431,5578,5714,5735,5785,6464,6484,6603,6667,6680,6765,6839,6856,6913,6940,7091,7244,7341,7391,7465,7782,7802,8205,8336,8916,9020,9183,9259,9346,9426,9566,9569,9597,9643,9677,9725,9741,9861,9894,9948,10021,10171,10292,10414,10435,10449,10505,10765,10920,11046,11115,11119,11130,11215,11226,11336,11477,11525,11734,11923,11965,11978,12287,12457,12496,12684,12689,12805,12819,12888,13085,13178,13267,13278,13285,13424,13439,13457,13466,13627,13639,13725,13732,13805,13847,13876,13929,14017,14019,14074,14110,14204,14279,14325,14441,14496,14730,14790,14844,14868,14915,15006,15139,15192,15234,15457,15485,15532,15607,15938,15975,16007,16046,16136,16188,16260,16382,16504,16520,16558,16648,16696,16737,16837,16945,17015,17066,17082,17349,17464,17470,17550,17795,17898,17933,18036,18104,18374,18496,18684,18696,18955,19107,19197,19391,19422,19758,20020,20654,20788,21275,21352,21372,21403,21574,21621,21625,21636,21809,21910,21912,21940,22137,22218,22265,22488,22593,22650,22725,22740,22876,22981,23209,23299,23776,23819,23979,24012,24264,24294,24361,24374,24391,24534,24549,24572],"recovery":[908,9625,22370],"drop-down":[1733,1753,1784,3198,3535,3909,7084,8120,9306,9587,9873,9881,10037,11399,11426,12926,13141,13701,14966,17257,17835,20809,21792,22089,22203,23283,23693],"categorized":[7376],"comments":[883,1475,14552,23785],"#000":[23533],"pleasing":[16284,16320],"identifier":[1792,3901,4316,4520,4614,10431,11260,11484,13438,13462,13567,14991,21667,22917],"laggy":[4489,4745,11923,22923],"mantasp":[22409],"sdk":[205,221,263,264,1072,1197,1556,1600,3801,4349,4631,6550,10429,10442,11334,14480,14810,15794,21667,22282,22388,22920,24162,24214,24285,24344,24361,24515,24532,24603],"wrong":[918,2801,5498,7998,11241,11581,12319,15536,15660,18410,22305,24204],"bypassed":[1256],"tutorial":[1667,8339,17206,17819,17915,19182,19206,19457,23997],"sitting":[11289],"admin":[911,932,1035,2023,6366,6378,17387,22533],"sequencing":[626],"non-normal-mapped":[17931],"sln":[1290,23746,24134,24313],"viewpoint":[2122,21897],"dark":[3578,5530,6865,8094,13924,14072,14802,16256,17095,18040,21557,21586],"guiutility":[7593],"attaching":[607,1069,3241,9896,12644,14807,14841,15080,21625,22197],"fine-tuned":[5735],"dtid":[6631],"harmonics":[15516,19439,20743],"api's":[24022],"remaining":[2669,3758,4172,5003,6673,11168,12320,16611,17194,23283,24013,24398],"representative":[8116,14870,14952],"german":[3226],"br230232":[24187],"tagname2":[19042,19752],"gl_oes_depth_texture":[1499,11188,15551,18614],"listens":[9696,17346],"tints":[16786],"execnamedata_":[11328],"class-rendersettings":[18882],"iaudioeffectplugingui":[1290],"sinks":[1171],"orthographic":[2123,2673,14005,14204,15852,15873,20715,24876],"optimize":[4212,4544,4643,4701,4775,4798,5613,7995,8037,10444,11525,11951,12194,12495,13426,13907,14956,15217,19774,22904,24001],"quick":[19,377,821,2632,2969,2982,5113,8336,8772,9283,9354,9422,9539,11621,12906,13719,14335,14790,14844,14868,15841,17024,17933,21947,22396,23160],"8x":[4942],"avc":[3812],"relates":[367,2620],"muti-player":[17271],"focusing":[15866,21550],"patient":[982],"-client":[6399],"distortion":[2321,2328,14828,16401,17139,17181,22675],"gfxdriver":[15048],"fireworks":[654,14054,14266],"presented":[877,1288,1400,1801,3529,4449,4656,9565,12620,15009,18496,21699],"possibility":[6755,9623,13291,21837],"m_materials":[24896],"resizing":[15936,16242,22643,22723],"employing":[16660],"match":[462,1290,1771,1905,2189,2201,2611,2829,2892,3428,3453,3870,4049,4447,4654,5296,5328,6442,6664,7508,8023,9224,9239,9328,9452,9736,9879,11345,11520,11593,12520,12909,12967,13208,13748,14069,14462,15078,15113,15607,15859,16104,17859,18161,18621,18685,19070,20134,21331,21422,21557,22115,22391,22584,22673,22917,23264,23444,23734,24219],"specially-named":[14464],"metroplayerx86":[24306],"discouraged":[18311],"angular":[1743,1757,2237,2872,2983,3083,3701,3827,4118,4141,4841,5126,5182,13705,14210,14218,14233,15233,16518],"_solidcolor":[19327],"climb":[2793],"truncation":[9202],"noticeable":[6924,7134,9266,10021,12889,13722,14005,14071,14110,14220,16246,17456,21897,22024],"composition":[12051],"low-pass":[2449,2592,11669,13005],"sub-groups":[22250],"counterpart":[4968,17558],"cpu-ogles-drv":[10787],"variety":[931,1208,1473,2296,7394,9180,9189,9233,9719,10030,11464,11541,14204,20229,21569,21842,23131,23731],"account":[155,257,966,980,993,1021,1033,1041,1044,1605,4316,4520,4614,5275,6697,7090,9617,9715,10426,10559,11391,12368,12484,12636,13155,13441,13883,13922,15012,15935,16365,16665,17375,17404,18142,19588,20772,22336,22533,22598,22955,24199],"double-ldr":[19058,19251],"ellipsoid":[654,3067,3711,4043],"keyframe's":[685],"narrower":[10022,16163],"blasting":[3483],"alone":[215,2706,4217,6665,10341,11356,13575,14367,15000],"object-by-object":[11149],"little":[836,1247,1667,1736,6990,10021,10458,10558,11211,11683,11749,12378,12653,12917,12941,13020,13149,13164,13306,13775,13916,14100,14495,14923,15068,15343,15912,17364,17516,21619,21953,22242,23251,23272,23377,23893,24001],"switch":[248,605,1068,1420,1610,1656,2009,2223,2282,4204,4575,4674,4961,5066,5149,5202,5753,7039,7139,8183,8842,9227,9374,9389,9401,9491,9520,9547,10410,10578,10685,10960,11239,11805,12657,12962,13303,14112,14178,14279,14407,14858,15116,15196,15658,15833,15852,17062,17082,18394,21420,21617,22938,22944,23159,23497,23714,23748,23935,23985,24380,24470],"1'":[24006],"correctly":[151,181,846,1094,1577,1633,3092,3673,3713,3798,4003,4023,4909,5166,6442,6898,7845,7987,8149,9514,9543,10292,11174,11232,13449,13743,14325,14353,15400,15455,15483,16128,18028,18566,21352,21930,22115,22261,22284,22364,22402,22542,22682,22743,22956,23249,23879],"dial-up":[13766],"purged":[8250],"getalldependencies":[1951],"othen":[3031,5333,5378],"j":[1652,5506,12349],"fieldofview":[7170,8101],"time-critical":[11551],"redistribute":[11549,16260],"inference":[234,10578],"re-engineer":[11729],"declares":[5205,8377,13591,17189,17293,18256,18332,19182,19377],"#8221":[22393],"dx9":[7120,18329],"ie":[151,2017,2126,2340,2352,2645,2657,3035,3810,4116,4156,4231,4579,4670,4941,5163,5279,5354,5372,5396,5417,6443,6484,6647,6961,7391,7797,8018,8023,8126,10502,10774,11122,11168,11226,11798,12695,12705,12832,13311,13453,13457,13628,14005,14076,14102,14198,14272,14304,14325,14516,14830,14872,14943,15072,15104,15297,15588,15971,16003,16158,16347,16558,16646,17019,17069,17139,17181,17194,17685,18035,21643,22026,22107,22249,22456,22731,22740,23156,23392,23462,23874],"guilayoutoption":[9175],"getnativetextureptr":[12746],"cmd":[1072,2033,3047,3590,4855,6847,7390,14990,15120,17410,21306,23006],"post-processing":[5217,11249,11738,16658,16673,18361,23264],"browser's":[15102,23814],"-aux":[916],"treats":[11226],"wasn't":[22499,24638],"damper":[2849,2876,3458,5364,5778],"questions":[6706,6719,6732,6740,8337,10067,10439,11472,15230,16310],"npc":[1365,5206,12818,14781,15245],"parameter":[52,197,316,328,407,516,666,762,1144,1204,1335,1733,1757,1783,1792,2003,2633,5385,5758,5774,6898,7271,7324,7774,7797,7826,8584,8781,9681,9743,9934,11260,11301,11334,11492,12041,12933,12962,13333,13460,13575,14325,14563,15243,16164,16347,16710,16959,17077,17217,18096,19092,19438,19996,21708,22187,22456,22737,22902,23189,23354,23902,24105,24203,24410],"dx11":[4518,4612,4693,4769,6634,7120,16297,16584,18194,18329,19475,20421,20455,21345],"team's":[23633],"tessellation":[7118,18327,19085,20387,20455],"creating":[78,375,464,608,661,695,1055,1204,1471,1506,1602,1666,2124,2189,2226,2240,2256,2594,2608,2620,2631,2756,2868,2996,3302,3381,3408,3578,3845,3873,3892,3986,4026,4091,4458,4716,4927,5149,5218,5739,6449,6618,6742,6857,6925,6939,6975,6978,7160,7222,7485,7765,7824,7944,8339,8820,8890,8997,9180,9258,9426,9674,9731,9740,9850,9895,9964,10019,10107,10541,10928,11056,11956,12201,12571,12780,12793,12904,12943,12954,13086,13116,13130,13269,13285,13728,13769,13844,13989,14279,14535,14825,14876,14918,15058,15189,16800,17437,17465,20783,21560,21610,21794,21837,21843,21933,21938,21952,21974,21981,22197,22665,22817,22918,22978,23132,23269,23300,23360,23401,23449,23588,24204,24378,24676],"relation":[684,1356,3824,9739,12810,23360],"introduces":[5874,11976,12301,16284,16320,16648,16851,17159,22113,24539],"proxy":[13428],"noisebox":[1280],"inflated":[13766],"dxf":[6,7992,9291],"sine":[1211,20723,22903],"beyond":[2131,2578,3159,3355,4913,4950,5316,6940,11154,12934,13297,14535,17234,17685,21856,23803,23889],"rules":[2880,3638,4059,6643,11953,13289,13895,14973,19446,21602],"numleft":[15303],"compatilibity":[4264,4548,4648,4705,4801],"_bumpmap":[19175,19829],"bodies":[2838,2967,3131,3474,4141,10909,11885,15017,15234,23099],"say":[188,407,486,764,1751,1779,2748,3487,4645,5054,5282,6647,7106,7400,7663,7786,9617,10198,10384,10849,11286,11861,12204,12459,12621,12698,12820,13924,14071,14105,14184,14205,14786,14842,15093,15250,15588,16168,16256,16563,16800,17046,17189,17209,19155,20556,21370,21790,21843,21976,22006,22116,22250,22402,22740,23299,23377,23984,24290,24675],"ranked":[15113],"approximation":[185,6442,12917,13149,15516,16686,18306,21960],"unity_4lightatten0":[20736],"multicasting":[1094],"seldom":[2617,3707,12600,13455,13839,18040],"sourcemaking":[22864],"opengles":[15677],"port-forwarding":[263],"crc":[1861],"score":[21971,22767],"mip":[1614,3007,5110,5537,9871,13928,19097,21458],"joystickbutton8":[1480],"sec":[3495,5338,5383],"cmd+shift+5":[23063],"assetimporter":[1840,1908,6071],"joint2d":[6045],"bugreporter":[198],"outdoor":[2131,16256,21557],"impl_www_request_provider":[10372],"dissipate":[14038,14054,14072,14307],"already-existing":[11981],"referenced":[52,350,1329,4958,5313,7981,10484,10921,11350,11836,12206,13778,15062,15567,16794,17188,19149,23281,24525],"suggested":[14074,16462],"wise":[9566,23301],"monopinvokecallback":[22511],"dot3rgba":[19281],"skybox":[2131,2669,5053,5315,5661,5906,8194,8285,9876,11447,11766,17013,19530,19787,21543,21864,23720],"optimised":[2218,9249,11573,21567,21643,22497],"rod":[22867],"fancy_stuff":[18948],"cubereflect":[18713,19177],"profiler":[2363,2369,4415,4543,4602,10781,10909,11792,11870,11967,12193,12493,13896,13999,14955,15001,15010,15038,15050,15069,15079,15197,15450,21670,22437,22836,23035,23775,23895,24298,24321,24579,24670],"peculiarities":[8336],"dldr":[18271],"acne":[18044],"-define":[14459],"tuning":[2284,2810,10851,10904,12445,21411,23991],"temp":[11319,15284,22298,24152],"tostring":[11001,22750,24636],"override":[214,360,1148,2697,2765,3179,3360,3445,3756,4017,4141,4180,4507,4589,4678,4894,5038,5324,5480,5626,5665,5690,6436,7590,7786,8781,9157,9714,11205,11480,12890,13293,13981,14612,14782,15405,16549,18496,21429,22586,24031],"possible":[78,231,487,588,637,755,1017,1470,1697,2005,2009,2118,2189,2448,2577,2711,2747,2870,3243,3556,3658,4226,4529,4900,4960,5063,5209,5242,5283,5498,5649,5739,5788,6484,6738,6793,6839,6875,6992,7131,7137,7279,7312,7343,7823,7941,7993,8104,8204,8271,9175,9191,9333,9358,9544,9615,9968,10166,10451,10616,10810,10907,10922,11147,11193,11345,11349,11501,11588,11682,11723,11745,11902,12180,12367,12454,12546,12601,12612,12710,12754,13024,13170,13202,13285,13567,13575,13722,13766,13839,13912,13986,14131,14198,14317,14451,14598,14832,14891,15081,15137,15223,15234,15396,15445,15473,15504,15555,15562,15585,15673,15705,15938,16032,16126,16164,16295,16351,16406,16665,16737,16760,16958,17366,17552,17834,18080,18344,18361,18603,18951,19048,19230,19394,19446,19496,19513,19588,19738,19779,19996,20134,20422,20506,20824,21422,21571,21612,21619,21641,21697,21888,21957,22101,22249,22278,22542,22610,22718,22831,22934,22969,23209,23298,23617,23623,23776,23889,23979,23988,23990,24129,24324,24382,24391,24716],"efficiently":[6622,9233,13175,15863,21965],"earnings":[952,1008],"helicopter":[5846],"synchronised":[4953],"referencer":[23252],"later":[206,279,875,1205,1350,1416,1633,1917,2302,3913,4375,5397,5792,6623,6949,7121,7948,8205,8399,9244,9373,9547,9679,10167,10411,10782,11188,11228,11290,12199,13183,13311,13439,13613,13713,15009,15039,15068,15459,15487,17385,19038,19153,19588,22668,23680,24326,24398],"normalised":[16170,23392],"kept":[1315,3037,5561,5698,7091,7994,11165,11511,12207,12542,13453,13466,13640,13713,14749,15084,16502,17986,22238,22323,23262,23298],"slowdowns":[23783,23895],"prevented":[11205,12185],"contiguous":[3663],"culling":[226,2149,2204,2670,3573,3674,3985,5020,7913,8241,10570,10794,11062,11525,11744,12600,13840,13933,14002,15009,15429,15457,15485,18382,18996,19707,20652],"monitor-supported":[4234],"mpeg-4":[3800],"fluids":[14155],"ingoing":[7365],"tune":[4915,5735,6832,12888,22093,22133,22214],"256mb":[10592],"m_prefabinternal":[8044,24802],"renderwithshader":[19514],"billboarded":[4096,19534],"v1":[14527,20580],"totalvideomemory":[11169],"members":[833,931,1247,7536,12627,12689,14543,20020,21981,24395],"primitives":[3665,3707,4006,14868,22212],"length":[582,1267,1824,2277,2634,2798,4081,5722,5798,6915,8399,9109,9322,9657,10021,10493,10861,11509,12098,12350,12838,13658,14169,14194,14829,14870,15241,16165,16708,16958,18851,19447,20116,20604,20922,21516,21876,21993,22153,22253,22699,22751,23837],"dont":[4219,10352,18127],"blackberry10":[1487,1514,1520,1597,14379],"were":[78,234,407,879,1352,1547,1848,2748,3913,4003,5205,5356,6738,6894,7091,7154,8306,9597,10810,10951,11169,11226,11684,11947,12223,13276,13630,13725,14464,14552,15445,15625,16793,17931,18104,18713,19178,20984,21960,22024,22416,22737,22867,22966,23153,23215,23605,24239,24663],"containing":[153,826,1063,1111,1332,1616,3143,3391,4317,4521,4615,4826,5415,7318,7773,7942,8347,8552,8824,9092,9506,10080,10199,10302,10456,11350,11753,13628,14524,15118,15170,15214,17411,21366,23383,23765,23988,24184,24395],"getbuttondown":[426,514,3784,3965,10181,10882,12247],"_wavescale":[19168],"asus":[11861],"turn":[276,395,470,696,1757,2565,2977,3835,3867,3909,4443,4713,5010,5205,5299,5523,5785,7179,7911,7993,8037,10215,11349,11971,12807,13028,13124,13192,13576,15084,15385,15814,16226,18182,18993,22244,22544,22608,22926,22954,23176,23264],"resemble":[16786,21940],"export":[8,741,1051,1684,1693,3634,6509,9239,9311,9347,9357,9385,9415,9442,9480,9530,11366,12182,14829,21396,21847,21894,23359,23792,24642],"split":[240,312,1286,2296,2720,3649,4433,4561,4932,5324,5516,7149,8009,10114,11825,12517,13913,14160,21372,21420,22522,23426],"cost":[938,3758,4017,4114,4963,5663,10767,11499,12876,13855,13889,13985,15028,15432,15532,16026,16083,16302,16668,16682,17010,17525,21567,21906,22021],"retaining":[21408],"template":[345,1022,1633,3502,4191,4757,4810,14782,21370,23448,24654],"otherobj":[6933,7798],"aspx":[4460,4718,6569,14441,24046,24116,24168,24187,24223,24274],"backside":[10603],"storing":[836,1617,2219,5688,7330,7942,7972,13703,14737,20828],"rescale":[2750,14751],"introduced":[3381,3408,7091,8039,8306,9426,10060,11350,13721,13766,14403,14644,17444,17448,17452,17458,17462,17469,17498,17502,17506,17510,17539,17543,17548,17556,17562,17566,17608,17612,17617,17622,17626,17630,17634,17638,17667,17671,17675,17679,17687,17691,17696,17700,17705,17709,17714,17718,17722,17726,17731,17750,17777,17782,17932,21859,22092,22475],"cascading":[8775],"atten":[12009,20137,20193],"'actions'":[6722],"guides":[9318,11332,22945],"srcfactor":[18183],"atlascache":[21436],"hexadecimal":[7001,8075,21715],"engaged":[21617],"canvases":[2747],"lmap":[12012],"samsung":[10658,14486,15634,15676,15714,15793,15802,15805],"unity_4lightposy0":[20735],"proportions":[14870,16502],"markup":[16538,17035,21689],"unity_2_6":[14386],"excluding":[1421,11092,15009,16061],"letters":[3211,11702,21715],"unity_fogend":[20109],"features":[170,193,280,389,626,750,1176,1456,1614,1633,2617,2696,4199,4538,4635,4687,4763,6414,6714,6940,7127,7134,7759,7939,8135,8162,8306,8341,8343,9985,10437,10445,10558,10587,10925,10954,11141,12299,12526,12640,12753,13149,13633,13914,13980,14495,14783,14949,15087,15411,15453,15538,15562,15794,16791,17199,17366,17683,17911,18943,19099,19419,19496,20454,21362,21566,21843,21939,22637,22712,22714,23755,23798,23895,23978,24540],"deserializers":[10423],"contrast":[5395,5817,9266,10599,11902,12204,13310,16158,16196,16244,16255,16347,16578,17171,21575,21927,22093,22113,22901],"preferred":[2997,9694,12876,14790,15935,16235,16457,16488,16544,17152,22325,22575,22912,23750],"m_flarestrength":[24742],"'forgot":[13883],"eabi":[11591],"raknet":[13429],"observeprogress":[7037,23496,23933,24418],"dolly":[7157],"#37":[11314],"facilitator":[7804,13309,13329,13428,13749],"subfolders":[164,1283,1616,8019,14731],"behaving":[5166],"button":[310,324,368,412,437,481,636,670,704,850,995,1147,1429,1475,1605,1735,1783,2027,2482,2615,2626,3275,3375,3444,3511,3590,3627,3998,4107,4273,4498,4574,4855,4874,4933,4991,5210,5231,6386,6662,6679,6723,6820,7795,8122,8168,8354,8522,8776,9005,9614,9678,9700,9725,9743,10043,10431,10872,11309,11409,11429,11560,11647,12652,13340,13487,13867,13883,13989,14005,14281,14336,14407,14627,14749,14790,14856,15060,15084,15109,15192,15440,15757,15814,15841,15879,16041,16508,16759,16865,16963,17260,17390,17943,18557,20441,21294,21400,21418,21630,21769,21831,21842,21899,21914,22106,22196,22256,22308,22556,22568,22646,22685,22710,22918,22964,23153,23273,23373,23611,23634,23718,23763,24002,24386,24453,24634,24675],"combinechildren":[7310],"poser":[9251,23364],"assetserver":[923,17410,23757],"#8195":[3853],"hexagons":[16284],"toggles":[1145,1445,2671,3276,9710,14754,17045,17076,17082,22087,22692,23283],"lower-resolution":[13929],"keyframes":[456,631,682,1700,7971,9510,9531,21396],"conforms":[1322],"impinge":[9625],"fbx'":[21394],"linuxstandalone":[18558],"milkytracker":[22099],"our":[231,401,470,982,1005,1049,1247,1595,1662,2815,3254,3313,6692,6698,6702,6708,6726,6738,6945,9625,9720,9743,10135,10399,10404,10978,11200,11403,11569,12283,12457,13087,13153,13310,13880,14013,14561,15137,15221,16791,17093,17866,17938,19402,19808,20185,20507,21772,21862,22051,22198,22380,22944,23242,23772,23811,24430,24642,24708],"its":[166,179,252,290,312,327,403,439,587,603,678,682,749,882,1232,1358,1410,1458,1606,1613,1633,1736,1762,1783,1797,2008,2078,2128,2139,2296,2640,2657,2700,2747,2768,2802,2852,2858,2875,2977,3033,3136,3232,3243,3267,3347,3433,3455,3493,3529,3549,3592,3665,3794,3890,3985,4020,4049,4106,4875,4909,4978,4983,5126,5189,5211,5330,5375,5393,5799,5801,6414,6434,6449,6484,6656,6750,6874,6960,6984,6999,7087,7106,7160,7387,7506,7766,7776,7826,7911,8039,8082,8158,8507,8718,9046,9180,9206,9210,9424,9530,9619,9683,9691,9732,9924,9966,10022,10034,10113,10291,10561,10848,11119,11130,11149,11204,11260,11349,11424,11494,11840,11948,12227,12518,12657,12916,13093,13157,13227,13249,13276,13292,13451,13460,13567,13712,13822,13846,13923,14004,14036,14041,14052,14067,14100,14170,14186,14204,14207,14228,14246,14257,14261,14281,14302,14543,14737,14783,14827,14866,14880,14935,15008,15098,15196,15278,15345,15443,15585,15625,15713,15935,16115,16162,16241,16246,16386,16446,16488,16495,16546,16686,16708,16737,16771,16950,17069,17085,17152,17187,17199,17205,17262,17349,17558,18037,18057,18622,18652,18659,18985,19230,19758,20849,21356,21372,21401,21419,21575,21606,21617,21640,21652,21693,21827,21829,21886,21900,21929,21940,21951,21981,21984,22104,22131,22224,22250,22307,22339,22433,22568,22650,22677,22721,22737,22867,22894,22922,23145,23189,23209,23327,23374,23450,23728,23754,23901,24383,24408,24656],"256x256":[4904,5600,5669,5694,5733,9260,9982],"-serial":[6521],"canvas_width":[9860],"semi-independently":[5145],"layered":[3433,9981,19283],"observations":[11923,22430],"m_texturewidth":[24760],"remoteserver":[17299],"localfolder":[4478,4736],"deploying":[4895,10406,21666,22916,24169,24203],"armv7-only":[11573],"perceptible":[2294,13293],"typically":[166,181,578,658,1613,2130,2283,2708,3055,3397,3620,5202,5283,5817,6404,6484,6744,6913,7133,8060,9623,10293,11189,11199,11452,12969,13293,13451,13923,13974,14036,14103,14259,14278,14304,14684,14830,14885,14958,15280,15343,15911,16026,16134,16735,18379,18718,18890,19283,19760,20402,20458,21105,21362,21372,21947,22083,22187,22342,22394,22735,23302,23379,23893],"uv_detail":[19887],"goes":[661,821,1091,1230,3623,4124,5002,5791,5861,7475,8343,9651,10872,12192,12636,13274,13309,16159,16223,16441,17808,19213,21606,22020,22712,22949,23310,24152,24367],"zone":[1460,2421,2549,3624,5011,5206,5824,6825,7082,7150,14145,14306,21935,21949,22189],"exert":[5792],"runtimeplatform":[15701],"obj_javaclass":[14539],"we":[12,113,173,198,261,470,706,746,984,1198,1537,1570,1662,1878,2005,2165,2199,2358,2813,3311,3550,5054,5630,5668,5693,5756,6692,6702,6708,6721,6738,7139,7276,7419,7508,7834,7946,8039,8094,8112,8138,8168,8302,8393,8804,8965,9031,9225,9302,9425,9679,9720,9741,10060,10105,10300,10352,10404,10435,10449,10560,11046,11057,11253,11473,11541,11655,11839,11956,11989,12201,12611,12764,12788,12934,12950,13090,13125,13158,13294,13351,13439,13498,13613,13645,13791,14069,14405,14563,15230,16794,17207,17268,17404,17464,17815,17822,17929,18104,18383,18505,19123,19220,19288,19808,20166,20507,21195,21372,21543,21578,21586,21614,21692,21772,21862,22052,22197,22710,22908,22944,23209,23272,23368,23792,23809,23894,23990,24214,24274,24359,24363,24608,24651,24669,24675],"velocity":[166,1743,1767,2426,2882,2969,2982,3078,3462,3696,4074,4114,4139,5778,5862,6685,9584,10166,10875,12250,12957,13166,13198,13705,14109,14156,14179,14210,14218,14252,14293,14306,16061,17205],"compression":[212,235,454,1173,1288,1535,2221,2277,2604,3055,3774,5643,5681,5705,7969,7993,9267,10579,10772,10942,10956,11808,12181,12592,13447,13719,13926,15352,16197,18316,21422,22441,23158,23790,24014],"notice":[1533,1661,2213,5142,6898,7147,7804,8376,8885,9109,10434,11925,12889,13075,13279,15193,16313,16321,18078,18410,21403,21551,21937,21985,22106,22242,23272,23911],"group":[483,1127,1362,1408,2240,2322,2380,2396,2413,2433,2451,2482,2511,2758,3588,3614,4093,6588,6590,6600,6606,6608,6617,9020,9683,9701,11120,11195,11441,13274,13459,13466,14279,14281,15005,16445,16480,17071,17081,17144,17257,21492,22130,22195,22211,22249,22579,22691],"textfield":[7525,8552,11696,16859],"gamasutra":[13324],"ch":[2319],"motion":[166,297,333,391,433,468,589,1735,1754,2156,2199,2619,2632,2840,2872,4081,5137,5186,5409,6027,8138,9450,10029,10451,10629,10970,11515,12683,13087,13200,14062,14644,14844,15585,15589,16059,16382,16566,16762,17206,21386,21619,21631,21973,22118,22187],"strengh":[20659],"utilises":[22723],"regenerated":[2055,4459,4717],"sparks":[4097,14047,14054],"play'":[18557],"trajectory":[12929,15596],"impose":[5648,9623,13311,15342],"re-compression":[22480],"menu'":[24004],"radio":[1280,2327,2334],"myscript":[16820],"incompletely":[14098],"hpos":[20083],"g-force":[11645],"de-":[15962],"managers":[6596,7763,23383],"forgotten":[13779,13883],"rigify":[1631,9383],"ua":[24434],"whitespace":[23435],"fancier":[9893],"targetctrl":[21816],"pvrunisco":[12512],"anisotropy":[5663,11740],"neck":[14838],"advertise":[13312,13773],"dropping":[1615,7082,7378,13766,20810],"f1":[6852],"soon":[198,713,2281,3802,6508,6940,8218,8522,10167,10978,12454,13163,13249,13576,13718,14066,14102,14603,15199,15617,23990],"basefile":[21334],"emulate":[2296,2426,10444,13763,17276,18323,22915],"unported":[11235],"risky":[6543,12199,12626],"getcontrolid":[7593],"unity_compiler_cg":[18329],"permit":[13311],"mesha":[11773],"wipe":[16516],"multiplication":[12391,22890],"based-":[16214,16435],"function's":[762,3025,20411],"origin":[2076,2875,3604,3660,5012,12981,14830,15330,16505,21404,22725,23880],"mathematically":[15967,15999,17015,22904],"provisioning":[4316,4520,4614,9629,10435,10442,10560,22913],"roads":[21843],"firewal":[24175],"executableanddlls":[15068],"respective":[658,687,966,1283,1648,8231,9707,9725,13883,16488,17152,24377],"revenues":[22950],"vslidervalue":[8651],"autorotatetoportraitupsidedown":[11565],"adjustable":[8633],"reach":[2449,3455,3496,5339,5776,5814,8138,10336,10696,10968,12911,13160,13263,14054,14304,18035,22867,23993],"remembering":[7834],"numrequired":[15300],"float3x3":[12014,18769],"satisfy":[15234],"x":[31,187,658,714,739,895,1189,1480,1600,1674,1743,1757,1787,1846,2049,2306,2492,2506,2653,2657,2680,2884,3078,3210,3357,3397,3407,3478,3625,3696,4079,4222,4522,4669,4971,5138,5488,5748,6702,6811,7021,7387,7598,7826,8026,8067,8164,8898,9049,9721,9860,9928,9961,10085,10121,10875,10915,11046,11177,11311,11543,11648,12041,12442,12458,12542,12748,13014,13431,13758,13878,14152,14160,14229,14271,14297,14489,14674,15329,15738,15843,15897,16401,16646,17347,17385,18294,18400,18610,18681,19494,20117,20399,20712,20845,21195,21470,21744,21836,21860,22103,22323,22486,22660,22958,23016,23392,23403,23715,23809,23832,23920,24391,24603,24693,24841],"glslinc":[18685],"interpolator":[20437],"neatly":[23377],"submissions":[982,1034],"great":[692,1148,1381,1446,2426,2731,2969,2982,3039,3434,3578,3633,3746,4846,5373,5730,6714,7465,8082,8815,9256,9569,11925,11976,13318,13451,13819,14164,14302,16314,17567,17751,19391,19436,21569,21973,22118,22864,23278,23990],"undecided":[2131],"particular":[164,216,236,316,440,587,883,1196,1604,2700,2882,3303,3371,3501,3509,3676,3902,4444,4714,5168,5202,5282,5431,5440,6780,6945,7159,7776,8082,8335,9612,9948,10293,10974,11063,11155,11426,13276,13301,13330,13453,13464,13564,13576,13980,14110,14274,14300,14452,14781,14874,14910,15009,15092,16172,17262,17329,17816,17911,18376,18957,19221,21617,21625,21656,21977,22107,23276,23432,23705,23798,24238],"fulfill":[7316],"implement":[28,1315,3241,3501,3621,4444,4714,5323,6584,6940,7469,8307,9617,10030,10373,10453,10569,11519,11527,12577,12700,12818,13153,13209,13297,13464,14013,14502,14677,14716,15087,15239,16622,16627,17234,18361,18716,19391,19791,20822,21420,21962,22610,23185,23814,23874,24221,24588,24661],"than":[168,187,242,269,314,342,366,490,639,752,918,959,1038,1128,1288,1446,1519,1929,2005,2031,2076,2118,2219,2281,2358,2372,2380,2388,2396,2413,2433,2441,2451,2473,2619,2713,2752,2793,2852,2904,3028,3125,3165,3334,3397,3407,3518,3665,3711,3758,3814,3870,3983,3996,4017,4034,4116,4395,4522,4575,4667,4954,5124,5211,5282,5395,5544,5678,5700,5711,5767,6396,6443,6760,6838,6938,6949,7110,7145,7271,7308,7782,7833,7909,8126,8239,8693,8773,9180,9183,9256,9357,9597,9714,9728,10021,10054,10201,10420,10558,10818,10849,10903,10951,10968,11139,11148,11211,11230,11488,11506,11629,11733,11945,12041,12201,12454,12602,12628,12654,12695,12796,12818,12882,12934,13139,13177,13193,13227,13273,13295,13719,13822,13865,13897,14008,14035,14067,14100,14147,14205,14220,14231,14252,14278,14283,14306,14580,14748,14846,14874,14884,14957,15005,15067,15088,15107,15194,15245,15384,15462,15490,15520,15588,15932,15949,15985,16058,16106,16162,16246,16259,16299,16385,16493,16502,16555,16558,16692,16771,16798,17019,17088,17093,17135,17157,17177,17262,17266,17523,17558,17751,17940,18040,18066,18305,18448,18941,19073,19219,19263,19418,19434,19457,19545,20134,20353,20749,20906,21356,21420,21579,21603,21612,21617,21697,21836,21893,21921,21939,21957,21987,22018,22145,22242,22282,22430,22656,22719,22735,22871,22906,23155,23209,23299,23379,23393,23705,23755,24527,24538,24655],"#126":[15685],"just":[184,196,219,314,366,462,487,588,605,639,677,706,753,826,901,1068,1112,1154,1205,1462,1519,1675,1910,2118,2223,2601,2633,2693,2823,3048,3142,3210,3532,3619,3776,3843,3909,4019,4575,4856,4861,5096,5126,5202,5232,5431,5578,5833,6359,6447,6561,6594,6633,6717,6760,6858,6938,6974,6983,7083,7159,7276,7390,7446,7465,7663,7773,7776,7825,7899,8195,8347,9180,9566,9679,9728,9846,9863,9891,9951,9963,10056,10114,10366,10413,10434,10441,10501,10840,10900,10951,11133,11155,11249,11419,11424,11501,11527,11553,11581,11622,11731,11733,11958,11992,12199,12454,12628,12645,12655,12819,12934,13105,13177,13274,13297,13351,13434,13567,13630,13717,13739,13793,13916,13982,14007,14076,14100,14266,14325,14452,14467,14581,14737,14772,14880,14906,15072,15101,15191,15342,15414,16060,16208,16314,16385,16555,16800,17046,17055,17093,17207,17259,17347,17525,17883,17931,18615,18685,18695,18947,19150,19230,19295,19388,19443,19457,19748,19793,20143,20185,20353,20464,20748,20774,21080,21344,21398,21693,21792,21907,21919,21960,21981,21994,22092,22103,22247,22397,22606,22639,22860,22868,22913,23189,23272,23298,23393,23446,23588,23657,23790,23796,23863,23893,23984,24318,24328,24525,24713],"publishers":[1043],"velocityx":[1758],"costing":[3758],"pictures":[12916,16314],"cmd+3":[23031],"effective":[3584,5737,11198,13922,14279,14460,20654,21863,22618],"anchoredjoint2d":[6044],"animatortransition":[6108],"render-to-texture":[2734,10707,15553],"delimited":[23453],"chapter":[10476,10953,17913,21971],"caster":[18357,20410],"encrypteddata":[15147],"procedurally":[572,5292,14885],"editor's":[3243],"surprisingly":[23607],"unity_lightmodel_ambient":[20759],"avatarmask":[6077],"shaderkeywords":[18528],"blend":[3,350,392,407,470,1690,1733,1753,1780,2156,2191,2629,3621,4952,5053,5286,5405,7389,7992,8138,9323,9374,9508,9529,11491,11511,11760,11924,12957,15613,15944,15980,16151,16308,16345,16379,16578,16648,17001,17903,18134,18180,18469,18709,18972,19009,19155,19305,20413,21865],"concatenate":[22760],"envelope":[15932,22598],"immovable":[6462],"syncronize":[7942],"whitehouse":[17368],"softer":[15944,15980,16083,17000,21978],"defaultasset":[6082],"point's":[16180],"supplies":[3238,23386],"ndotl":[20194],"counters":[24546],"quaternions":[658],"borders":[3427,9571,16090,16503,16578,21569,22724],"traditional":[2801,5456,7776,11805,14204,15411,15906,16297,17092,17550,20402,21715],"magnetometer":[10683],"hertz":[2383,2391,2399,2416,2436,2444,2454,2497],"technology":[6623,8161,10404,11474,12456,14930,22456,23812],"effort":[174,750,1326,7316,17235,22735,24001,24527],"piece":[333,407,1247,2156,5371,7541,7981,13846,14325,14781,16711,17026,17262,18935,21743,22760,23176],"dxt":[236,5639,5686,10581,10956,12185,15349,24015],"'auto'":[11208],"non-static":[11193],"def-thumb":[1678],"adapts":[16261],"2f":[10284,12503,13036,24692],"background-color":[23529],"zero":[490,1324,2465,2872,3518,4165,4885,4949,5714,5779,5818,6447,6827,6999,7114,7152,7405,8696,9183,10852,11129,11156,11481,11511,11654,12992,13460,13839,14069,14107,14178,15009,15233,15241,15751,16555,17134,17177,17327,18214,18322,18619,19068,19266,19580,21614,21834,21907,21976,22026,22165,23189,23377,24408],"downloadassetbundle":[7287,11008],"cosines":[22898],"non-void":[14550],"neat":[1683,11930,17933],"cells":[3992,12368,13843,16461],"resides":[13640,16385],"demonstration":[1317,6721],"char":[1244],"'smear'":[16079],"platformeffector2d":[6062],"decodefloatrgba":[18273],"narrow":[12196,15110],"ln":[20763],"copy":[22,134,374,479,800,883,1063,1144,1595,1795,1968,3179,3445,4444,4714,4874,5003,5204,5232,5602,6364,6694,6926,7276,7314,7397,7994,8035,8373,9225,9260,9457,9490,9566,10464,11349,11404,11416,11603,12222,12593,14408,14529,14689,15217,16794,18196,22282,22529,22737,22947,23046,23249,23293,23340,23435,23627,23980,24198,24294,24663],"underlying":[1318,12915,24413],"'sucked":[18428],"setsendingenabled":[13499],"interactions":[386,2136,2202,3676,5440,6454,7908,16167,19738],"gameplay":[386,581,1133,1456,2136,2203,3430,4932,5198,5714,5817,6442,6742,6924,6926,6940,6975,7776,7901,8113,9615,10033,10444,10616,10848,11193,12201,12450,13110,13284,13464,13721,13986,14003,14039,14946,15238,16054,17199,17205,17234,21364,21617,21643,21827,22023,22111,22443,22831,23296,23605],"physics-driven":[8113],"following":[71,172,289,396,535,626,640,722,739,910,946,1017,1029,1073,1143,1419,1522,1556,1656,1804,1854,2040,2078,2157,2845,2929,3636,3781,4168,4932,5054,5289,5457,5501,5646,6352,6492,6647,6730,6744,6808,6876,6970,7091,7131,7160,7366,7466,7767,7776,7911,8058,8100,8128,8168,8338,8348,8873,8936,9569,9630,10064,10212,10343,10422,10504,10587,10872,10920,10976,11171,11435,11558,11623,11700,11779,12030,12551,12758,13069,13113,13161,13249,13263,13320,13354,13593,14038,14506,14727,14968,15061,15071,15116,15202,15251,15344,15441,15564,15625,15650,15679,15761,15802,15871,16032,16061,16138,16196,16286,16321,16488,16550,16660,17050,17096,17152,17282,17522,17787,17933,18064,18187,18353,18548,18597,19045,19107,19526,19566,19755,20774,20928,21104,21301,21426,21658,21710,21922,21943,22245,22284,22320,22400,22616,22866,22877,22928,23138,23203,23327,23607,23609,23659,23759,23798,23816,23988,24052,24151,24228,24300,24429,24572],"arrow":[481,3048,3226,4856,6809,7799,8086,9210,14071,14110,14749,15127,15725,15843,15864,16365,16754,22658,23719,24383],"restrictions":[5137,10970,13310,15801,17265,18161,21617,22339,22871,23769,23809,23878,24044,24308],"welding":[22172],"vpos":[18326],"framecount":[22062,22834],"data":[8,170,223,243,309,323,333,366,457,578,585,688,742,752,826,833,935,1071,1109,1235,1348,1491,1604,1612,1617,1654,1743,1767,1791,2008,2157,2208,2272,2619,2700,3018,3191,3250,3644,3885,3900,3994,4212,4544,4602,4701,4775,4798,5204,5247,5437,5458,5602,6412,6508,6641,6997,7271,7833,7982,8039,8170,9246,9317,9934,9962,10025,10381,10414,10473,10504,10774,10922,11168,11259,11314,11506,11527,11615,11731,11825,11898,12219,12509,12917,13157,13264,13284,13327,13439,13445,13466,13563,13639,13701,13727,13771,13842,13929,13976,14584,14844,14848,14938,14957,15003,15060,15084,15137,15214,15343,15600,15719,15803,16792,17266,17421,17464,17516,17943,18139,18254,18320,18496,18689,19996,20134,20273,20356,20506,20828,21079,21283,21342,21394,21610,21676,21957,21978,22343,22479,22737,23138,23176,23261,23306,23388,23431,23767,23863,23887,23987,23993,24238,24319,24391,24671,24716],"slider-based":[1204],"ignored":[360,2650,2781,3200,3604,3668,3833,4019,4483,4739,5349,7943,11069,13448,13945,15763,18211,19029,19588,21370,23425],"es2":[10770],"geometry+1":[19620,19772],"cmos":[10603],"downward-pointing":[7391],"drags":[16710,16959,22698],"roughness":[15499],"iphoneaccelerationevent":[11687],"vibration":[11552],"dents":[5788],"tis":[21468],"intend":[10336,12457,17209],"after":[78,231,574,617,816,878,1154,1429,1613,1633,1734,1758,1850,2028,2336,2348,2609,2669,3196,3307,3520,3627,3986,4058,4124,5003,5210,5283,6398,6508,6592,6899,6932,6943,7044,7773,7786,7899,8024,8058,8141,8275,9111,9187,9216,9734,10166,10830,10916,11044,11302,11356,11549,11711,11825,12435,12702,12789,13169,13309,13328,13576,13873,14026,14117,14259,14279,14563,14958,15060,15220,15342,15444,15459,15487,15611,15818,16246,16265,16367,16538,16556,16724,16798,17188,17396,17858,18057,18180,18375,18645,18702,19028,19149,19255,19385,19589,19758,19945,20146,20458,20782,21411,21439,22056,22197,22256,22290,22364,22385,22551,22618,22817,22876,22906,23215,23418,23609,23634,23757,23940,23981,23993,24046,24189,24427],"frame-rate":[5711],"foley":[1363],"existent":[11499],"_bridge":[24026],"gles":[11812,18301,19500,22435],"blendop":[18185],"heuristic":[2221,16310],"manoeuvring":[23398],"overloaded":[1919,14996],"ups":[24525],"strongest":[1762,22440],"combiners":[13963,17910,19254],"runningonuithread":[24078],"fingerid":[11617],"getmousebuttonxxx":[9614],"navmesh":[3817,3848,4017,12790,12794,12876,12903,12929,12968,13086,13116,13135,13149,13157,13184,13227,13263,13269],"respond":[986,1315,3839,6451,6940,8522,13721,15583,17234,17552,17994],"angles":[658,10291,12034,12302,12811,15233,21605,22898],"permitted":[4141,10504,13298],"scream":[22095],"waypointmanager":[6782],"opportunity":[13451],"toolchain":[23811],"chest":[2655,14837],"plots":[1312],"pragma":[6628,6964,12107,12233,17949,18513,18585,18629,18727,18939,19464,19602,19798,20175,20393,20477,20796,21089,23602],"fetching":[17338],"lime":[21727],"'near'":[11209],"sensible":[6669,11785,14828,21927],"git-based":[6710],"sql":[17402],"half-texel":[18321],"adapting":[15677],"sinking-in":[14037],"console":[151,909,2473,3881,4415,4543,4602,6495,6676,6974,10393,10463,10782,10940,11306,11580,11802,12775,13997,14315,14353,14359,15342,15550,15908,17297,17800,19057,21714,22288,22392,23038,23350,23743,23775,23830,23879,23985,24002,24414],"difference":[458,534,1109,2076,2878,3617,3839,3898,4098,5142,5178,5790,6742,7987,8537,8777,9506,12214,12652,13173,13212,13937,14495,15343,15613,15912,15938,15975,16162,16246,16259,16361,16372,16709,17050,17329,18310,18945,20692,20784,21888,22118,22727,23739],"ends":[2710,3037,5246,7143,7372,8402,11344,13975,14045,14211,14250,14874,16708,19515,23605],"assetssave":[9463],"condensed":[13822],"perceived":[1281,1458,2294],"allocated":[3903,9204,10796,11825,12210,12454,12517,14735,15009,16544,22437,22580,22735],"pathfinding":[3818,6780,12818,12881,13094,13177,13270,23115],"crossing":[12790,13131,15474],"came":[272,13615,20046],"wave":[521,1211,5820,9907,19168],"metre":[7987,9239,14069,22118],"putting":[1056,3211,7273,11981,13905],"multiway":[14442],"protect":[1205,17366,22320],"someone":[6709,13309,13773,23436],"takes":[133,175,581,599,865,2010,2076,2130,2160,2240,2256,2511,2529,3592,3665,3678,3748,3993,4059,4674,5085,5289,5791,6866,6961,7090,7913,9267,9777,10075,10107,10304,10780,11069,11263,11493,11698,11965,12199,12456,12741,13155,13293,13328,13770,13916,13977,14304,14563,15009,15060,15388,15473,15508,15584,16256,16607,16715,17235,19072,19295,19996,20356,20603,21560,21743,22024,22703,22729,22897,23145,23421,23812,24014,24319],"leftdelay":[2409],"stands":[6874,12820,13273,14109,14870,16188,23881],"right-clicking":[613,637,670,3619,5414,7343,7400,9578,23638],"outlook":[1325],"collectively":[1288,5159,8039,10907,12448],"instrument":[14958,22097],"router":[13309,13439,17400,22937],"mono-memory":[10796],"cookie's":[3578],"decompresses":[23790,24020],"mixer":[1124,1235,1334,1461,2240,2366,2479,2511,2559],"color0":[5726,17964,19086],"plaforms":[221],"telling":[8965,11247,13248,13291,15599,22542,23615],"buildassetbundleexplicitassetnames":[147,1792],"onto":[384,480,617,2601,2725,3205,3397,3794,4156,4854,4909,5118,5581,6408,6770,6865,7276,7379,9208,9362,9386,9588,9882,10018,10133,11658,11785,12284,14201,14785,14842,14903,15971,16003,16079,16620,16794,16939,17019,17219,17639,17835,18033,21810,21841,21912,21940,21960,22020,22110,22172,22277,22533,23281,23312],"billboard":[3593,4076,7824,14191,21837,21875],"terraininstance":[6029],"xbox360":[6502,14482,18329,19504],"subtracted":[7103,11168,15971,16003,17019],"qualifiers":[11750],"unfolded":[685],"wreckclone":[10222],"verifier":[24551],"instantiating":[1231,6931,7994,9680,9934,10104,12581,12636,13457,14787,21933,22123,22443,23262],"t'":[3389,5479],"positioning":[1648,2426,3407,5372,6442,6986,9180,9682,9691,11156,11198,14745,15854,21960,22653,23726],"ungrabbing":[10339],"went":[15660],"translates":[10968,13068,13309,18666,20822],"new":[28,261,312,326,360,442,637,685,778,835,1180,1220,1394,1602,1613,1632,1694,1795,1848,1982,2005,2036,2188,2225,2596,2617,2636,2702,3047,3064,3083,3305,3590,3627,3642,3701,3963,4091,4107,4395,4522,4855,4873,4960,5096,5211,5218,5325,5405,5429,5463,5470,5503,5836,6434,6520,6666,6692,6700,6714,6724,6726,6730,6739,6780,6813,6905,6926,6947,6988,7036,7082,7160,7222,7390,7598,7766,7827,7944,8243,8366,8521,8795,8907,9014,9177,9179,9222,9340,9355,9361,9464,9506,9559,9675,9731,9745,9880,9934,9965,10048,10103,10132,10399,10404,10431,10472,10544,10569,10616,10831,10867,10989,11057,11195,11293,11399,11407,11424,11527,11862,11944,11981,12216,12503,12789,12820,12937,12963,13104,13167,13441,13462,13466,13565,13608,13725,13769,13986,14535,14782,14860,14882,15103,15143,15193,15301,15453,15579,16056,16137,16202,16321,16382,16453,16568,16794,16978,17077,17090,17106,17118,17203,17215,17254,17263,17331,17389,17683,17824,17929,18077,18570,20782,21289,21378,21403,21463,21582,21630,21748,21794,21826,21929,21984,22192,22242,22366,22444,22529,22555,22610,22641,22665,22714,22716,22740,22878,22908,22954,23022,23119,23179,23209,23269,23316,23404,23491,23588,23611,23627,23756,23759,23858,23895,23932,23978,24030,24204,24319,24387,24393,24539,24609,24652,24676],"returning":[6868,10389,22111],"steep":[2793,3771,5111,5538,12912,21842],"nuisance":[6780,23134],"slaves":[6391,6409],"br211474":[4460,4718],"promote":[989],"entirely":[5663,7355,11966,12336,15957,16068,17800,18361,20438,23425,24237,24605],"lightingsimplespecular":[20255],"hooks":[9018,10447],"renderingplugin":[12749],"tier":[5206],"essence":[7159,9184,13293,21586],"composed":[13843,14071,17861,20824],"peformance":[17446,17450,17460,17500,17504,17508,17512,17541,17546,17554,17560,17564,17610,17615,17620,17624,17628,17632,17636,17669,17673,17677,17681,17689,17694,17698,17703,17707,17712,17716,17720,17724,17729,17780,17784],"reviewed":[958,1037],"states":[353,364,398,521,595,606,625,1036,1381,1451,2224,3426,5404,6414,8815,9743,10872,11047,11484,12961,13274,15606,16745,16757,17822,18987,21611,21617,21627,21638,21965,22553,22684,22897],"suffice":[7985],"javamessage":[14590],"respectively":[313,1670,1779,2122,3248,6810,8091,9725,12695,13839,13950,14071,14546,15084,16735,17905,18329,19147,20367,21772,21940,22103,23392],"needed":[181,521,729,747,764,965,1558,1641,2052,2139,2617,5245,5684,5759,6622,6976,7114,7171,8170,9256,9559,9860,9889,10410,11168,11198,11514,11767,12229,12783,13166,13327,13441,13927,13984,14535,14878,15214,15296,15346,16303,17171,17281,17471,17568,17641,17733,17752,17820,17924,18375,18608,18681,19141,19243,19433,19738,20357,20506,20906,21343,21375,21685,22187,22191,22432,22567,22926,23213,23403,23980,24014,24143,24214,24287,24525,24576,24603],"curved":[182,2220,22253],"innocent":[22744],"draw-calls":[10810,13961,21927],"bordercolor":[6996,24405],"min":[2552,2577,2796,3072,3465,3690,4121,4142,4975,5365,5727,5862,7680,8631,9584,10786,12795,13006,14029,16012,16068,16309,16346,16542,16607,16684,16950,18192,19132,20084,21835,22658,23335],"inversed":[4504],"obscuration":[23728],"scrollbars":[3285,7361,8663,16565,16716,22699],"spaces":[10071,12911,17437,17940,24091],"indirectonlycolor":[20145,20289],"1ghz":[10672],"yaml":[5450,5875,8039,16795,24712],"removeassetbundlename":[1923],"communication":[3887,7804,13284,13441,13445,13460,13466,13563,13591,23169,23899,23903,24411],"tripped":[185],"enhance":[2136,14108,15938,16158,16244,16578,21689],"technically":[15550],"fudge":[14199],"conclusion":[13084],"expensive":[4017,4098,4966,5643,5704,7308,8245,10451,10818,11165,11508,11551,11755,12321,12473,13179,13941,14597,15028,15462,15490,16687,16999,17173,17450,17456,17467,17500,17504,17508,17532,17546,17560,17610,17615,17620,17624,17632,17669,17673,17677,17694,17703,17712,17724,17729,17780,18695,19453,19738,20652,21603,21868],"characters":[333,382,464,588,1633,1850,2154,2202,2426,2645,3195,3241,3391,3503,3648,3818,4021,5268,5344,5397,6926,8010,8037,8163,9243,9383,9411,9533,9947,10431,11200,11499,11715,11876,12042,12465,12597,12879,12922,12949,13155,13263,13271,13860,14017,15237,16061,16525,17234,21650,21693,21772,23357,23425,24379],"skinned":[464,1662,1699,3683,5267,6599,7333,8022,8264,8831,9381,10780,10809,11500,12484,12599,13898,15023,15448,23358,24379],"alright":[24660],"examples":[171,254,650,931,1247,1361,2634,3103,3724,4818,4909,5206,5400,5630,5668,5693,7130,8444,10098,11892,12475,13110,14039,14661,14702,14738,14806,16042,16692,16941,17088,17816,18030,18079,18165,18371,18401,18485,18891,19180,19221,19293,19393,19458,19790,20162,20164,20354,20779,21111,21626,21971,22579,22738,22913,23365,24179,24582],"def-forearm":[1671],"unity_winrt":[14382,24353,24519,24530],"clothrenderer":[5997],"android-specific":[193],"externally":[349,828,23652],"settings-":[848,1488,1531,1606,2430,3506,3878,6814,7942,10844,11052,11057,11294,13761,15236,17278,22307,22924,23628,23778,24017],"accesses":[22402],"macros":[1232,6635,18248,18285,18616],"adhoc":[14969],"assetdatabaseioexample":[773],"non-dx11":[16593],"describes":[988,1198,1788,3837,4021,6582,6595,6604,11622,12800,12897,13264,13271,14499,14674,14709,15513,15557,17272,17820,19231,19380,20356,20780,21543,21596,21710,22384],"halt":[2801,15588],"deactivating":[7086,9745,23220],"posing":[10291],"binormals":[8005,21220],"start":[69,179,234,420,462,481,713,929,1148,1198,1433,1460,1610,1620,1633,1720,1860,1984,2036,2083,2161,2294,2568,2636,2676,2884,2969,2982,3203,3347,3550,3602,3762,3892,4015,4128,4140,4221,4664,5192,5233,5723,5761,6375,6412,6738,6745,6928,6957,7160,7230,7310,7776,7862,7899,8136,9112,9256,9451,9748,9852,9951,10119,10301,10408,11268,11345,11408,11676,11921,11956,12239,12684,12733,12790,12821,12884,12931,12976,13093,13138,13160,13227,13249,13340,13438,13510,13607,13643,13748,13770,13781,13867,13878,14067,14103,14155,14170,14325,14427,14535,15141,15199,15599,15784,15836,16012,16411,16452,17203,17241,17815,17825,17916,18565,19149,19220,19471,19793,20168,20416,20464,21438,21693,21786,21820,21875,21907,22020,22166,22255,22337,22383,22558,22710,22843,22867,23082,23344,23393,23595,23627,23785,23855,23990,24136,24166,24184,24200,24383,24436,24621,24685,24713],"variable":[522,1279,1704,3311,3578,3625,3909,6640,6684,6744,6898,6931,7396,8432,8798,10033,10158,11483,11683,11711,12205,12633,12650,13227,13593,13777,13839,14077,16272,17297,17996,18075,18328,18362,19182,19846,20406,20692,20845,21617,21897,22396,22738,23600],"summarises":[6727,7937],"iphone6+":[10642],"cutting":[589,13822,24016],"1024x768":[4308,4598,10678,11606],"achievement01":[13663],"offers":[294,690,2276,5643,5704,7941,8334,9621,11610,12689,13457,14913,15399,15902,16382,16495,17046,17173,23985,24016],"ending":[11124,19775,21701,22181,23635],"non-cloth":[15014],"crosses":[1675],"reopen":[20809],"calls":[170,542,1230,2072,2475,3888,3893,6451,6683,6938,7308,7463,7767,8082,9597,10179,10801,11350,11585,11786,11960,12227,12495,12652,12736,12753,13028,13301,13462,13563,13573,13645,13732,13771,13842,13925,14496,14543,14728,15009,15078,15086,15224,15444,16687,19541,21362,21631,21812,21993,22490,22735,22995,23171,23436,23893,24539],"all-or-nothing":[21706],"dualforward":[20440],"stats":[4545,4644,4702,4776,8122,10785,15052,15440],"allobjects":[11021],"voice":[1153,1458,2473,14998,15797],"ikactive":[10311],"xor":[18204],"ssl-":[7023,9930,23480,23922,24462],"vga":[10604],"buildstreamedsceneassetbundle":[1791],"webgl-specific":[23896],"profile":[970,3799,4345,4535,4627,4745,4791,9629,10802,10873,11964,12194,12506,14990,15081,15399,22436,22913,23776,24567,24671],"l33tpa33":[6539],"actually":[182,580,915,1112,1185,1208,1533,1613,2131,3252,3620,3663,3840,4954,5142,5211,5245,5399,5817,6447,6744,6860,6938,7091,7121,8075,8116,9641,9832,10075,10304,10393,11198,11234,11551,11786,11909,11983,12207,13287,13329,13721,13739,13984,14062,14069,14125,14166,14326,14876,14998,15009,15251,15343,15532,16164,16793,17516,18047,18361,18400,19433,19924,20251,21364,21419,21836,22026,22118,22254,22287,22397,22743,22869,22922,23158,23251,23446,23605,23790,24015,24436],"deinitialization":[1290],"passtype":[18692],"generated":[201,243,908,1285,1329,1595,2070,3045,3087,3196,3649,3705,3836,4000,4083,4107,4188,4754,4852,4858,5023,5230,5389,5530,6387,6677,7778,8012,8218,9312,9370,9643,9925,10417,10468,10563,11356,11413,11925,11983,12308,12916,12934,13862,13880,14110,14304,14715,14790,14883,15296,15466,15495,16061,16285,16658,16687,17000,17297,18183,18659,18706,20404,20458,20807,21350,21411,21414,21570,21829,21855,21926,21955,21957,22143,22224,22499,23176,23409,23457,23678,23775,23988,24163,24311,24555,24575,24642],"notch":[11978],"unity_3_4":[14393],"stores":[828,836,2049,2700,5205,8693,9346,9495,9623,11683,13158,13227,15342,21977,22555,23294],"programdata":[22342,22974],"airbrush":[21842],"packing":[5562,21415],"generally":[10,487,658,860,3501,3867,4017,4112,4148,4932,5141,5255,5649,6443,6712,7321,7970,8162,9295,9575,9948,9993,10970,11133,11168,11198,12043,12460,12802,13310,13922,14071,14781,14828,15346,15553,15558,16065,16126,16365,16687,17094,17393,17446,17450,17460,17500,17504,17508,17512,17520,17541,17546,17554,17560,17564,17610,17615,17620,17624,17628,17632,17636,17669,17673,17677,17681,17689,17694,17698,17703,17707,17712,17716,17720,17724,17729,17780,17784,17903,18048,18318,19434,20443,21364,21569,21613,21827,21897,22027,22305,22400,22743,23299,23359,23374,23461,24016],"free-of-charge":[13881],"renaming":[833,7942,12688],"2048x1536":[4309,4599,10698,11606],"normal-map":[18317,19163],"describe":[170,2209,2712,3841,3849,10476,13117,13132,13162,13267,13460,14323,14552,16801,17787,17821,19377,19457,21564,23607],"s":[72,439,1024,1032,1239,1607,1703,1910,2201,2482,2522,4156,4170,5282,5587,6447,6809,7969,8096,8116,8161,9965,10067,10425,10856,11391,12644,12950,13175,13185,13448,14613,14971,16762,16798,18196,20137,20193,21549,21606,21679,22485,22712,22714,22731,23761,24549,24559],"triggercollider":[21790],"compute_eyedepth":[18620],"leaning":[541,1734,2630],"changed":[279,462,728,860,1195,1739,1954,2065,2478,2750,3627,3890,3898,4107,5211,5261,7091,7320,7390,7443,7582,7892,8737,9724,10033,11232,11329,12705,13712,14306,14750,14783,14887,15001,15104,16246,16495,16637,16706,16731,16956,17069,18528,19515,21417,22443,22559,22606,22662,22689,23219,23623,23729,24274,24593,24708],"standalone":[139,1283,2475,4197,4659,4761,4812,6424,6490,6818,7223,8096,10027,11148,11244,11305,14369,14473,14896,15189,15353,16962,18555,21290,21540,22546,24155],"exceptions":[1471,4360,4604,4808,5654,10846,10944,11576,14010,14580,17347,23781,23985,24137],"ios-specific":[10437],"macos":[6484,13759,22339,22532,23355],"chains":[3447,7929],"caches":[2074,10341,10539,12596,22444],"pcs":[10558,11733,11944,13938],"exceed":[2912,2977,11169,16356,18957,21569],"getwindowwithrect":[7506],"unityassetserver":[925,17406],"anyone":[6728,11944,13330,23650],"unity_no_screenspace_shadows":[18314],"probability":[6659,15250],"physic":[4156,5783,6447,10161,12631],"anim":[454,2221,7969,9445,9778,12990],"postprocessed":[9187],"forcefield":[23379],"decrypteddata":[15151],"radial90":[16504],"worlddeltaposition":[13000],"pointercapturelost":[24062],"uv_maintex":[18517,18589,19817,20177,20491,20799],"optionsmenu":[22412],"reject":[4443,4713,10767,13331,17336,18055],"steelseries":[1473],"asf":[3767],"unityremote":[22913],"hostdata":[13354],"floors":[2140,6444,14036,14878,23377],"photorealism":[15938],"enforced":[7901,15802,17338],"beat":[22743],"acquired":[6592],"setreplacementshader":[19514],"invoking":[6639,13303,13573,16932,17834],"-viewdir":[18741],"fixups":[3020],"nuts":[23268],"--sign":[9672],"flicker":[651,9651,14278],"3-button":[15879],"freely":[269,7368,9863,11961,13426,21924,24581],"meshfilter":[5903,7863,11776,12630,23389,24904],"positions":[182,1643,1760,3597,4020,4973,5188,5292,7106,7908,9020,9706,10112,10291,11193,12820,12957,14304,15017,15760,16112,16610,16703,18037,20603,20735,21404,21648,21960,22023,22590,22651,23377],"site's":[23988],"decodelightmap":[12018,18271,20145,20273],"detour":[12889,13164],"colleagues":[1007],"ram":[2047,10681,11578,12226,12454,14999,22430],"intent":[16461,17374,18985],"carve":[3849,13124,13267],"marks":[4924,21708,22741],"handy":[2668,5159,5703,6680,10056,10106,11401,12650,14870,21543,21615,21843,24017],"extensive":[3244,11451,12751,13771],"ten":[2281,6774,13331,14878,15297,18955,21580],"insides":[18403],"yourcomputername":[14966],"animates":[348,2203,3652,4045,6999,13085,24408],"propagation":[2346,2357],"averaged":[4602,16246],"rightwards":[13839],"her":[11629],"investing":[23296],"pre-retina":[4327],"appropriated":[24436],"irrelevant":[9502],"shadergui":[18485,18498],"external":[279,294,318,340,391,583,663,746,2003,4401,4529,5456,5684,6730,6951,7940,8096,10967,11289,12642,13277,13308,13361,13439,14141,14803,16794,19060,20928,21325,21386,21570,21847,21955,22268,22370,22409,23298,23401,23447,23636,23750],"non-rigidbody":[5163,15075],"invocations":[7506],"identifiable":[11135],"material":[304,639,778,1058,2072,2209,2651,2659,2688,2782,2860,3041,3142,3196,3391,3596,3628,3637,3669,3746,3758,3776,4078,4113,4138,4149,4212,4544,4643,4701,4775,4798,4848,4857,4909,5027,5096,5225,5320,5350,5391,5436,5492,5720,5783,5817,5895,6447,6742,6871,7312,7852,7989,8189,9272,9306,9370,9478,9505,9586,9873,9880,9899,9979,10161,11136,11223,11299,11424,11501,11754,12602,12611,13907,14070,14105,14197,14888,15099,16500,16642,17043,17514,17788,17820,18099,18406,18485,18496,18573,18859,18936,18988,19125,19182,19230,19316,19377,19457,19756,19808,20554,20784,21546,21576,21584,21587,21610,21739,21858,21901,21957,22147,22201,22227,22721],"b+d":[18954],"standardassets-":[4926],"attenuate":[1364,2464,2559,16683],"onpreprocesstexture":[1804],"upshot":[12225],"gl_amd_compressed_atc_texture":[1498],"groups":[179,1127,1413,1452,1666,2715,2765,3447,3573,3617,3655,5396,5431,6610,9018,9325,9710,13274,13460,13466,14184,15005,15526,16241,16284,16457,17088,17263,18336,19777,21489,22131,22200,22212,22248,22568,23393],"shift-v":[14778],"add-appdevpackage":[24197],"workspace":[7081,14317,23626],"regarding":[973,13772,22952,23621],"song":[1324],"simulates":[4104,5817,7133,13188,15971,16003,16283,16319,16578,16995],"blob":[4926,11896],"ceiling":[6865,9863],"librarymanager":[23841],"eliminating":[20845],"mono":[1281,1493,2272,2426,4254,4547,4647,4704,4800,9993,10414,10782,10844,10925,11580,12539,12784,14603,14735,15047,15396,17199,17239,17347,22409,22545,22735,23299,24214,24237,24288,24326,24522,24605],"fence":[4012,5788,13131,13182,13266],"endsample":[12507,15088],"initparametersfromdefinitions":[1253],"objecthit":[2087],"recursively":[1797,15098,22489],"parented":[1633,2693],"denser":[3736,21922],"adapter":[6547,22934],"texturing":[185,11435,11749,18860,19257],"positives":[9993,22475],"eventid":[12742],"hsl":[18680],"bgimage":[9049],"gameobject-":[2598,3397,3534,3607,6984,7276,9360,10134,23269],"depthnormals":[18365],"detailed":[839,1209,2128,2134,2626,3269,3511,4399,4527,4644,4702,4776,4954,5764,6579,7816,9189,9438,10032,10811,11120,11143,11931,12457,12653,13769,14117,14278,14957,15059,15560,17552,18863,21890,21924],"most":[181,193,403,487,591,605,622,663,712,1057,1109,1145,1294,1357,1456,2078,2131,2223,2421,2570,2617,2796,2841,2879,2999,3633,3707,3843,4090,4168,4567,4656,4716,5098,5202,5283,5515,5694,6460,6547,6715,6742,6913,6947,7279,7334,7384,7776,7908,8110,8135,8161,8421,9258,9312,9357,9367,9412,9559,9593,9643,9685,9747,9891,9925,10291,10437,10439,10765,10802,10844,11055,11120,11177,11239,11339,11511,11694,11745,11939,11947,12207,12460,12495,12649,12655,12926,13093,13173,13303,13841,13892,14005,14017,14076,14140,14467,14749,14829,14870,14958,15052,15219,15342,15408,15459,15487,15550,15560,15562,15588,15591,15838,15878,16060,16162,16246,16555,16709,17092,17187,17201,17470,17516,17795,17834,17939,18056,18224,18324,18383,18617,18935,19047,19065,19248,19449,19527,19761,20166,21080,21289,21352,21401,21426,21544,21573,21611,21655,21672,21847,21960,21984,22095,22109,22268,22384,22553,22603,22655,22684,22777,22874,23168,23242,23288,23379,23398,23401,23610,23619,23638,23803,23984,23993,24258,24391],"unity_near_clip_value":[18325],"unity_standalone_osx":[14366],"offering":[12653,15249],"-screen-quality":[6559],"resets":[11396,22726],"look":[76,196,445,465,615,661,1051,1211,1372,1417,1667,1695,1735,1759,1801,1962,2124,3196,3269,3401,3626,3636,5141,5207,5498,5578,5832,6590,6653,6726,6832,6913,6952,7133,7442,7531,7533,7786,7845,8060,8120,8334,8374,8774,9465,9559,9569,9585,9677,9720,9747,9979,10022,10292,10417,10435,11117,11136,11147,11193,11211,11239,11267,11451,11581,11861,11870,11976,12883,12930,13028,13141,13366,13779,13918,14072,14100,14204,14283,14615,14689,14751,15251,15536,15945,15981,16077,16674,17288,17516,17819,17944,18033,18254,18485,18577,19391,19457,20354,20508,21358,21374,21400,21548,21574,21622,21689,21835,21862,21939,21984,22162,22310,22484,22548,22635,22710,22922,23160,23269,23308,23373,23393,23450,24020,24046],"profiling":[7759,11799,11965,12194,12488,14949,14957,15039,15067,15084,23898,23985,24671],"unity_pass_deferred":[18356],"hundreds":[12282,12476,13937,22760],"layouts":[2998,3156,5586,7506,9719,9865,15116,16132,22567],"desert":[21897],"had":[1751,1783,3676,5440,6683,7091,7235,9849,12284,12454,13630,14171,15325,17305,21575,23213,23288],"migration":[22944,24239],"stop":[73,503,710,907,1290,2676,2876,3469,3829,4055,4129,4190,4756,5125,5277,6412,7390,11600,13500,14072,14283,15104,15599,16725,16833,21370,22024,23605,23781,24138,24700],"information":[72,170,181,194,197,221,242,271,283,319,360,391,454,606,630,666,734,921,938,1066,1123,1145,1462,1488,1615,1861,2078,2119,2124,2134,2154,2207,2224,2364,2370,2431,2593,2700,2757,3045,3141,3269,3334,3580,3631,3655,3763,3791,3979,4043,4132,4148,4191,4527,4604,4671,4776,4811,4852,4859,4955,5152,5228,5577,5782,5833,6414,6445,6484,6620,6665,6681,6712,6793,6986,7381,7759,7763,7795,7942,8084,8116,8222,8395,8511,8817,9370,9506,9625,9696,9725,9977,10025,10032,10447,10461,10563,10768,10940,10956,11143,11150,11219,11267,11305,11403,11414,11441,11525,11569,11723,11902,11947,11976,12318,12649,12749,12782,13158,13203,13284,13330,13437,13565,13576,13703,13733,13772,13842,13965,14011,14037,14186,14309,14328,14462,14753,14799,14846,14880,14957,15009,15221,15342,15441,15588,15617,15711,15812,15935,16080,16740,17046,17204,17259,17273,17411,17465,17900,17987,18051,19220,19243,19482,20273,20433,20849,21370,21384,21543,21623,21632,21643,21671,21706,21796,21812,21859,21924,21965,21987,22093,22123,22246,22322,22392,22571,22648,22733,22863,22904,22944,23127,23317,23452,23621,23726,23742,24010,24052,24107,24120,24128,24168,24421,24651],"surrounds":[2131,2991],"nested":[398,2747,6610,9114,9848,14564,15098,21696,22568],"'bumpmap'":[9307],"editorgui":[7463,7508,7591,18539],"mouse's":[21940],"plane's":[5730,7845,17170],"material's":[3631,12613],"#0000ffff":[21719],"pixel-light":[11925],"equipped":[929,10770,13842,14010,14887,17820],"polygon":[3039,3633,4845,4963,5200,6443,9256,9441,11875,12605,12885,13158,14831,18400,18996,21569,23359],"triangular":[187,9725,22648],"verbose":[4545,4644,4702,4776,15450],"constantforce2d":[6058],"laptop":[6412],"50-windows-development":[24235],"pivots":[2797,21411],"webrtc":[23875],"preallocated":[12577],"sans-serif":[23528],"audioechofilter":[6004],"unity_sample_tex2d":[18350],"raycasts":[2764,4127,4144,4956,16622,16627],"delivered":[13739],"deviceipaddress":[1080],"_world2object":[20705],"pipeline":[14,1905,1967,2008,3621,5891,6622,7129,8271,9187,9240,9440,10770,10801,11225,11921,15401,15404,17795,17821,17939,18990,19045,19099,19229,20454,20828,23241],"reveals":[8124,16516],"collaborative":[6738],"shapes":[632,1690,2788,3243,9323,9508,9529,11147,14110,14236,15474,15509,16284,16345,21940,21964,22255,23731],"_blendtex":[19295],"lefthand":[11488],"-createproject":[6507],"there's":[1235,2160,2734,4963,5258,6510,7449,9685,11858,13985,18030,18375,18557,24046,24345,24521],"recttransform":[6039,14748,16737,22614],"dmg":[24447],"sourceblendmode":[19010],"cs":[47,1205,6436,6564,8873,12822,12970,13095,13228,13250,13781,14460,14743,16081,17221,18547,23309,24024,24112,24314,24657],"geomerics":[8161],"again":[175,710,1290,2052,2294,2820,3153,3836,3870,4855,5791,6561,6726,7349,7487,10160,11044,11419,12207,12454,12652,13024,13273,13508,14170,14279,14751,15008,15094,15467,15588,15604,16215,16436,16794,17534,19086,19588,20209,20651,21926,22197,22420,22530,22860,22867,22920,23167,23230,23296,23392,23756,24202,24660],"visuals":[3793,9679],"remapping":[3503,16219,16428],"compile":[234,259,1205,5234,6625,6944,10422,10563,12688,12753,14358,14495,14525,15695,18329,18568,19471,20143,20166,20388,21666,22455,22920,23298,23754,23772,23812,24209,24280,24363,24525],"buildassetbundle":[42,1790,10494,11290,11356],"cortex-a8":[10600],"https":[1000,1599,6721,7023,9930,10428,11416,22330,23480,23922,24391],"wall":[2655,2706,2902,3477,6432,6856,9863,10112,11903,12910,14035,14889,15234,17454,17640],"labeled":[20809],"labelrect":[7794],"colours":[712,1446,7389,17009,21556,21580],"winter":[22198],"prob":[15305],"dalvik":[11336,11588],"much":[175,565,639,970,1003,1185,1288,1465,1614,1878,2031,2250,2266,2293,2386,2394,2401,2419,2439,2447,2456,2574,2713,2961,3234,3241,3388,3469,3586,3590,3658,3887,4040,4960,5032,5125,5314,5476,5643,5704,5790,5829,6443,6590,6750,6838,6969,6976,7113,7144,7391,7804,7833,7975,8691,8842,9191,9208,9614,9908,10021,10160,10565,10616,10809,10907,11147,11198,11215,11226,11682,11749,11902,11948,12342,13083,13291,13445,13775,13846,13901,13974,14100,14204,14598,14830,14885,14956,15000,15009,15044,15087,15199,15237,15351,15462,15487,15516,15677,15736,16170,16246,16571,16681,16800,17013,17800,17940,18089,18548,18613,18709,19449,19898,20353,20605,21868,21912,21973,22024,22240,22404,22542,22737,22899,22906,23299,23376,23774,23993,24387,24527],"sorts":[14140],"deserializing":[16825],"maxsimplificationerror":[24790],"explained":[179,221,245,1376,2076,3582,5008,7394,8399,9717,11400,12920,13309,13908,16168,20780,21420],"flight":[6407],"fatal":[22430],"ai":[11199,11519,12196,12484,13125,13155,15010,17234,23115],"mip-maps":[16226],"myshader":[17803,19208],"lifetime":[1379,3074,3692,4033,4106,6898,7937,12261,14028,14048,14062,14067,14103,14148,14156,14173,14214,14252,14253,14261,14276,14286,14293,14304],"createprefab":[23248],"accentuating":[13822],"weighting":[483,14842],"incomplete":[1456,16513,17347,21370],"multiband":[1288],"--nolegacy":[2045],"refer":[72,3337,4399,4527,4654,4937,7223,7378,9291,12051,12698,13441,14298,14311,14330,14940,16568,17188,18371,20708,20778,21924,22456,22741,22891,22954,23390,23621,24606],"links":[1615,3835,4012,6740,7001,7376,9346,10103,12788,12812,12886,12925,13131,13181,13266,13269,13271,13320,13883,14323,14325,21651,21687,24231,24416],"_shlightingscale":[12131],"upon":[205,2168,2719,2826,3125,3450,3752,4912,5273,6467,6533,15600,19392,24361,24534],"bounces":[693,3469,5043,8163,16722,18035],"blendone":[1713],"ragdoll":[2822,5149,5283,6464,10197,15231,24376],"dstcolor":[18217],"precompiled":[10415,10468,10922,14404],"quantization":[1280,15388],"mdeditor":[21561],"xtemp":[21050],"parabolic":[11923],"uo":[7021,9928,23920,24391],"spaced":[9254,22179],"numtochoose--":[15307],"incrsat":[19582],"cmd+5":[23033],"hooked":[386,24014],"avoidance":[3831,3866,13068,13167,13197],"absolutely":[582,5602,5685,13315,21702],"means":[187,360,401,486,595,629,720,958,991,1037,1154,1519,1675,1695,2018,2127,2140,2465,3430,3774,4054,4459,4717,4989,5125,5205,5260,5299,5399,5712,5758,6442,6664,6738,6838,6868,7090,7133,7333,7589,7790,7970,8163,9206,9318,9559,9571,9614,9723,9950,10414,10538,10968,10974,11155,11223,11821,11910,11965,12342,12514,12887,12941,12965,13193,13285,13449,13713,13779,13822,13848,13985,14184,14266,14334,14495,14512,15036,15058,15388,15455,15483,15534,15562,15588,15598,15936,16242,16555,16725,17090,17092,17207,18077,19524,20462,21625,21664,22125,22165,22278,22366,22521,22548,22675,22684,22996,23220,23754,23790,23798,24013,24145,24280,24322,24529],"keystrokes":[8154,9617,13289,14819,15838],"garbage":[9625,10782,11837,12201,12541,14603,15009,16798,22739],"robot":[684,10114,12819],"shouldmove":[13011],"flags":[52,2668,4210,4533,4625,4696,4773,4789,5018,13852,22425,23774],"rpc":[3888,3909,13303,13462,13490,13565,13572,13732,13771],"initialised":[1433,13805],"camera-specific":[6988],"empower":[23082],"requirements":[2018,2284,5513,9373,9397,9413,9534,9556,9622,10429,11217,12182,15458,15486,15538,16194,16327,16801,17322,20868,21558,21576,22320,23159,24222,24324],"re-import":[9,5168,9294,9340,23370],"thoroughly":[750,12194,23981],"cavern":[2549],"mysecretdatavalue":[23432],"packer":[3065,12037,12292,19785,21412,23633],"waits":[6426,22448],"d-pad":[15716],"likewise":[407,6780,9597,18047,22893,23226],"patches":[6713,9542,21835,21890,21910,21912],"renderer's":[6742,9578,11205,11525,15457,15485,21745],"optimizes":[12600,24579],"locals":[12649],"oddities":[22113],"unity_compiler_hlsl2glsl":[18329],"animatorstatetransition":[6103],"physically-controlled":[18428],"isdefined":[21478],"transforming":[14753],"blendtree":[6026],"unloadunusedassets":[11303,11837,12565],"callbacks":[1231,4129,10414,11519,12700,16840,22628,22983],"reasonable":[16309,23785],"unity_beta_warning":[23464],"m_fog":[24733],"producing":[14184,15735,16016],"orienting":[7114,10292],"whats":[1355],"spritemeshtype":[21485],"strong":[1460,1763,4444,4714,12043,23438],"convergence":[24374,24527,24538],"all_databases__view":[17429],"gamma":[4689,4765,5609,11223],"pseudo-local":[12650],"balanced":[11350],"collision-based":[2138],"mono_":[10414],"j--":[12357],"forests":[5764,21912],"soft-edged":[21842],"m_ambientlight":[24739],"heapf64":[23863],"empirical":[22430],"lensflare":[3141,5961],"ifdef":[19100,20088],"t-pose":[343,6661,14831,15591],"into":[1,28,179,236,241,312,392,468,585,605,663,666,682,755,823,833,931,990,1000,1044,1051,1112,1131,1150,1205,1336,1393,1464,1510,1595,1633,1694,1760,1795,1848,2006,2078,2167,2223,2250,2266,2426,2597,2713,2926,3012,3095,3142,3190,3403,3445,3457,3650,3716,3867,3927,3998,4106,4168,4507,4648,4705,4801,4926,4932,4989,5096,5151,5202,5238,5275,5354,5396,5415,5442,5488,5516,6385,6421,6430,6451,6562,6618,6641,6661,6719,6859,7002,7083,7090,7129,7136,7313,7389,7943,8087,8197,8274,8343,8479,8888,9018,9187,9222,9294,9324,9346,9365,9374,9389,9401,9448,9480,9520,9547,9559,9577,9677,9715,9878,9891,9959,10029,10033,10080,10109,10447,10766,10782,10922,11138,11152,11208,11237,11293,11350,11419,11435,11501,11541,11683,11720,11750,11888,11960,11992,12192,12460,12517,12608,12652,12753,12800,13022,13155,13269,13274,13309,13439,13466,13662,13844,13905,13980,14015,14037,14054,14064,14160,14271,14281,14512,14689,14730,14748,14783,14829,14848,14870,14898,15005,15110,15170,15196,15234,15250,15345,15445,15466,15495,15526,15588,15596,15788,15808,15841,15898,15935,15938,15975,16007,16081,16163,16201,16210,16365,16429,16525,16665,16734,16763,16793,17076,17095,17216,17239,17347,17421,17526,17911,17940,18043,18142,18272,18303,18365,18412,18608,18652,18681,18692,18946,18978,19038,19053,19065,19230,19327,19434,19486,19580,19777,20390,20462,20772,20845,21246,21343,21368,21372,21398,21420,21543,21576,21603,21615,21636,21643,21655,21679,21740,21810,21839,21844,21868,21919,22049,22191,22249,22404,22544,22598,22712,22727,22817,22996,23294,23312,23370,23393,23416,23627,23729,23772,23811,23819,23894,24014,24287,24382,24391,24538,24603,24642],"'edit":[21908],"advanced":[194,197,393,1235,2118,3711,3765,4035,5312,5528,7759,8161,9335,9421,9538,9895,11141,11255,11545,12794,13149,13294,13331,14283,14317,15943,16142,16597,17167,17297,17401,17911,18052,18692,19228,21323,21647,21924,23082,23632,24146],"paths":[1558,1922,2696,3248,3849,5396,6509,7001,8174,11216,12888,13131,13159,13267,14976,15403,17519,18379,19232,20146,20352,23702,24416],"locallow":[22548],"anchoredposition":[9685],"unity_sample_shadow":[18333],"making":[185,367,465,639,821,1148,1205,2009,2448,2620,2690,2757,2769,3152,3434,3487,3529,3584,3711,3877,4100,5096,5172,5457,5578,5788,5820,6780,6976,7137,7279,7419,7466,7778,8346,8737,8798,9569,9597,9690,10167,10473,10913,11211,11731,11826,11944,12038,12199,12453,12626,12810,12817,13639,13846,15139,15250,16261,16563,16740,17377,18934,20654,20845,21917,21957,22125,22961,23644,23704,23990,24675],"intention":[17235],"disable":[504,1029,1071,1137,1932,2167,2475,2690,3265,3645,3830,4002,4106,4255,4503,4585,4788,4946,5086,5796,6356,6424,8012,8125,9710,9815,10198,10381,10456,11395,11525,11550,11576,11711,12196,12933,12962,13211,13333,13841,14106,14978,15088,15101,15577,15946,15982,16206,16512,16576,17163,17397,18375,18542,19440,19779,21646,21920,22964,23617,23719,24287],"overlap":[2229,2508,4833,5397,5761,15526,16302,16331,22668],"master":[462,1007,1128,1148,1209,1368,6361,6377,6409,9617,13312,13325,13428,13747,13773,24307,24321,24579,24599],"matches":[327,1586,2201,4165,5054,5779,6661,6865,13024,16114,18303,20397,22026,23894,24022,24391],"west":[22495],"traced":[22867],"publickey":[23420],"conf":[14343,17297],"marking":[314,2722,6443,7087,7330,8165,10456,12919],"gl_ext_srgb":[1504],"endvertical":[9112,16867],"cil":[10968],"'restore'":[1604],"cleared":[2668,6679,8250,12596,13276],"max":[3,298,340,391,578,585,2074,2341,2509,2553,2578,3035,3073,3465,3691,4117,4141,4976,5304,5366,5629,7681,7992,8631,9124,9237,9323,9479,9584,10786,12912,14182,14202,15350,15953,15987,16067,16295,16607,16951,17056,18193,19132,20257,21835,21877,22658,23335],"-fpic":[1579],"axis":[663,1473,1760,2675,2786,2799,2822,2872,3451,3510,3543,4035,4084,4978,5178,5375,6814,7358,7393,10873,10970,11645,14005,14036,14191,14748,15233,15738,15852,16126,16159,16453,16965,21886,22106,22656,23374,23715,24389],"0xc0000005":[22366],"helper":[53,1279,11527,11985,14541,18241,18311,18370,18616,20603,23863],"importing":[1,294,578,589,663,754,1106,1111,1464,2017,2292,2997,3117,3184,3683,3767,5300,6429,7945,8133,9246,9367,9372,9387,9399,9427,9479,9518,9546,9958,11123,11514,14844,15385,21393,21967,23107],"probably":[2426,5735,7825,9619,9700,9855,9962,10198,10616,10802,11746,11925,11944,12223,12454,12819,13924,14076,20782,21937,22021],"managed-to-native":[17380,24044],"registered":[1290,1599,5195,10428,13328,17095,22956,24436,24603],"xcode's":[22479],"filesize":[367,2620,9446],"prompted":[155,698,4884,13280,14334],"lightingstandard_duallightmap":[20289],"flat":[1416,2131,3407,4079,5396,7369,7825,9897,11201,12917,13839,14204,14228,14868,16178,16246,18033,21910,21939,21964,23721],"'register'":[1603],"folderpath":[24152],"polygon's":[4855,18400],"maze":[12818],"detach":[12652,13211],"signup":[990],"interpolate":[3706,5129,5186,9584,20437],"severly":[9425],"freeing":[22741,23863],"high-density":[9728],"occludee":[13847,21648],"blur's":[16080],"compatriots":[12484],"gamepads":[6806],"j++":[5506],"arraytofill":[22822],"tedious":[6780,10245],"lfreference":[2527,2544],"projector":[4908,5957],"redraws":[12570],"increasing":[1315,2128,2293,5046,5429,5663,7154,7403,7993,8885,10905,11124,11948,12446,13766,14005,14259,16361,16608,16684,17528,21842,22760],"vendor":[1496,1530,10412,11850,22271],"moveasset":[772],"newvalue":[12349],"assetpostprocessors":[2061],"#00ffffff":[21715],"fainter":[14066],"fly":[2281,2980,3198,7778,10770,14204,14220,16658],"shortcuts":[722,4012,6683,10103,13266,15115,15876,21942],"playmovieonspace":[3782],"degrees":[458,581,661,1743,1767,2171,2245,2261,2591,2633,2675,2793,2841,2879,3083,3459,3495,3558,3649,3701,3827,4914,4978,5749,5814,10022,11659,14210,14218,15233],"kpi":[1270],"out-of-focus":[16336],"mac":[162,209,221,275,895,1111,2021,4222,4660,6499,7223,7346,7387,9459,9628,9953,10091,10157,10431,11184,11244,11306,11750,12520,12644,12748,13426,13431,13758,14365,14516,14674,14763,14895,14971,15039,15213,15436,15541,15850,15874,17297,17385,18254,18558,18610,18681,20134,21288,21541,21658,21984,22446,22546,22922,22948,23044,23301,23893,24391],"renamed":[785,4875,14865],"stance":[15137],"scenery":[3241,5322,11198,14017,14781],"equalization":[1288],"object-space":[19779],"percentage":[459,1178,2375,3619,9729,14956,24396],"hull":[6443,7127,19475],"passs":[7601],"m_ismovingleft":[24681],"analysis":[1312,4267,4551,4651,4708,4804,5238,10928,12494,18329,22461],"invalidated":[21643],"snowball's":[14038],"bugfixes":[6714],"alphautility":[9215],"meshb":[11773],"mylight":[13810],"introduction":[442,1283,2005,4104,4981,6579,6744,6945,7761,10105,10423,11141,11945,11980,12201,17817,17915,19457,22714,22716],"incurs":[4963,5005,13855,15087],"m_targetplatform":[24721],"receiver":[329],"launches":[229,2568,4286,4582,14972,15617],"collapsed":[4106,13274,15133],"analogy":[22111],"in-depth":[3631,6622,11990,17514,21553],"fixed":[578,1312,2852,3031,3124,3360,3430,3491,4900,5164,5184,5333,5359,5378,5710,5785,8995,9425,10451,10905,10970,11750,12009,12446,13718,13949,14286,15018,15090,15548,16379,16455,17799,17818,17939,18057,18140,18270,18678,18711,18863,18935,19029,19088,19153,19199,19205,19249,19257,19404,19442,19457,20364,20509,21670,21994,22650,23880,23979],"subshaders":[17821,17931,18493,18645,18968,19063,19292,19384,19418,19522,19732,19750,20822],"hoo":[12211],"uploads":[744],"paper":[15250,16081],"received":[958,979,1018,1037,3913,6414,10441,11418,11538,13449,13712,16736,16989,17129,17306,22393],"massively":[1312,6622,7124,7136,21927],"stuck":[2795,3134],"renderfx":[8253],"defend":[12456],"last":[453,568,875,944,1683,1736,2003,2189,3322,3371,3601,3890,3898,4046,6494,6838,6981,7397,7931,8123,8781,9655,9843,10071,10404,10797,11401,11613,13021,13171,13449,13712,14038,14750,14936,15084,15526,15654,18055,19764,21420,22020,22106,22933],"setlookatweight":[10323,13059],"myshaders-":[17860],"recursive":[22473],"uniform":[3625,5168,11198,14237,17169,19195,20107,20941,22113],"unity_matrix_p":[20700],"logicalnoop":[18198],"identity":[5501,7459,7797,10143,10639,12243,14136,15598],"near-perfect":[6447],"calculating":[3622,3654,4017,5289,7109,10316,10780,11158,12333,13249,17106,17523,19286,22899],"update":[272,422,472,822,838,1068,1298,1547,1722,2104,2200,2617,2983,3783,3927,4020,4119,4961,4993,5195,5209,5277,5786,6360,6387,6412,6452,6494,6680,6868,6932,6958,7184,7406,7549,7776,7892,7901,7942,8347,9334,9373,9391,9403,9477,9550,9564,9966,10028,10167,10407,10795,11085,11239,11356,11511,11632,11771,12246,12498,12821,12978,13227,13290,13331,13448,13501,13712,14087,14133,14306,14795,14942,15018,15443,15625,19123,21420,21822,21993,22283,22338,22488,22761,23348,23597,23609,23643,23757,23980,24333],"textual":[3062,17045,21956,24022],"hi":[1023,8786],"vm-":[14533],"next":[51,314,579,677,724,1235,1401,1602,1639,1902,1968,2036,2612,2708,3204,3308,3353,3480,3623,3758,5003,5132,5189,5417,5599,6538,6662,6702,7834,7925,8124,8376,8944,9304,9355,9370,9870,10041,10302,10384,10831,10870,11328,11350,11683,12403,12647,12820,12889,12965,13103,13162,13718,13791,13883,14071,14545,14776,14959,15104,15196,15588,15858,16488,17211,17391,17901,17987,18428,18598,20878,21405,21420,21617,21843,22123,22601,22668,22920,23321,23393,23409,23468,23613,23655,23756,23987,24193,24643,24653],"recognisable":[14110],"drawng":[18394],"slice":[10415,16503,21401],"sgx535":[10591],"0x002e4160":[22408],"dart":[15250],"resourcemanager":[5984],"#666":[23535],"objects'":[6466,7790,14036,21964],"jnienv":[14532],"duty":[13329],"tiled":[5104,5531,6860,11805,16501,17464,21342,22724],"contain":[151,164,391,585,741,1206,1448,1849,2218,2272,2690,3405,3909,4860,5121,5213,5415,5495,5656,6495,6634,6868,6969,6979,7083,7773,7981,8235,9020,9216,9444,9560,9704,10032,10150,10782,11287,11423,11985,12229,12698,13140,13314,13441,13639,14281,14495,14848,15251,15457,15485,15564,16799,17207,17239,17393,17869,18684,19457,19524,20146,20395,20744,20822,21370,21374,21398,21571,21990,22051,22093,22309,22404,22760,23215,23450,24282,24423],"displacement":[7126,15591,16183,17177,20458],"overview":[584,595,690,832,932,1047,1123,1201,1328,1447,1455,2120,2870,3381,3408,3556,4981,5265,6582,6733,6977,7760,7803,8276,8340,9742,11125,11222,11469,11949,12528,13268,13770,14322,14325,15452,15481,15840,17198,17837,21621,22709,22942,23006,23130,23655],"blended":[316,367,469,2620,2633,4098,5402,11237,11767,11912,12959,14842,15606,15969,16001,17017,18185,18659,19296,21588],"sv_target":[12109,17971,18641,18745,19086,19614,20837,21102],"gl_qcom_driver_control":[1503],"dictate":[8616,11426],"negligible":[11499,15343],"repeats":[2336,2348,5105,5532,9266,14276,21897,22724],"cheaper":[11146,13901,15461,15489,17523,18709],"intended":[3267,3485,5164,5206,5456,10020,21576,21691,21772,23160,24044],"hinting":[22499],"drivers":[269,4489,4745,9545,12520,15049,22261,22338],"screenlayout":[14635,22313],"ranges":[313,693,1742,2360,2366,2514,2533,4352,5876,7309,9184,11345,16165,16587,17094,19136,21375],"dzenabled":[7167],"specification":[335,8039,23886],"startinvincibility":[12615],"pretends":[17368],"surffuncwritesnormal":[20158,20292],"device-specific":[11547],"1mb":[22833],"company":[4178,6702,14616],"unity_deltatime":[20725],"attacking":[10198],"progressive":[8306],"industry":[8161,11940,11948,14892],"value2":[19042,19752],"maintaining":[10136],"themselves":[3241,4002,5149,5277,5646,7767,8348,9710,11199,12229,13291,13848,14036,14325,15343,15514,16206,16576,17089,17639,17881,22097,23449],"1-uv":[19080],"flying":[6464,10113,12289,14038,15885,18046],"puff":[14266],"solveriterationcount":[11794],"iaudioeffectplugin":[1290],"computebuffer":[6641],"unity_4_1":[14397],"shoulders":[1669,14837],"influencing":[22934],"skidding":[166],"non-profit":[22950],"coloring":[18861],"elapsed":[14283,14940],"choose":[4,328,373,659,870,1167,1397,1600,1743,1767,1975,2460,2643,2696,2887,3050,3091,3143,3227,3354,3425,3506,3534,3607,3620,4043,4093,4263,4547,4647,4670,4800,4888,4933,5088,5286,5490,5683,5705,6603,6659,7328,7387,8023,8124,8136,8165,8335,8772,9271,9348,9417,9444,9494,9533,9564,9578,9737,9881,10004,10103,10152,10502,11058,11156,11426,12687,12820,12889,12957,13121,13137,13227,13278,13330,13701,13763,13871,13957,14069,14204,14338,14461,14466,14544,14737,14770,14817,15113,15245,15404,15607,15663,15861,15943,15979,16328,17001,17054,17100,17163,17187,17260,17802,17824,19207,19391,20809,21352,21404,21420,21575,21588,21612,21644,21667,21792,21832,22203,22329,22557,22918,23272,23316,23609,23629,23691,23761,24162,24193,24387,24520,24579,24671],"hanging":[9863,15588],"menuing":[173],"log'":[1596],"movies":[9621,14878],"property":[52,361,628,685,1096,1290,1336,1618,1744,1768,2131,2144,2158,2196,2231,2242,2258,2274,2310,2318,2324,2331,2338,2350,2374,2382,2390,2398,2406,2415,2435,2443,2453,2462,2481,2489,2496,2505,2513,2531,2551,2561,2649,2658,2667,2739,2761,2780,2792,2825,2859,2875,2971,2985,3013,3029,3040,3052,3068,3127,3142,3187,3272,3336,3383,3410,3440,3449,3489,3508,3533,3555,3595,3627,3667,3680,3688,3750,3770,3820,3850,3880,3895,3987,4007,4014,4032,4068,4107,4111,4136,4152,4160,4176,4496,4571,4662,4752,4782,4835,4847,4883,4911,4936,4970,4986,5100,5123,5179,5271,5318,5331,5348,5358,5376,5388,5407,5422,5435,5453,5472,5520,5709,5718,5747,5754,5769,5803,5822,5859,6436,6449,6656,6816,6862,7087,7110,7271,7378,7446,7486,7532,7833,7939,7990,8027,8060,8286,8824,9614,9686,9701,9736,9849,9860,9906,10033,10337,10978,11065,11149,11205,11345,11426,11525,11550,11613,11701,11789,12393,12613,12657,12821,12880,12962,13108,13249,13701,13858,13956,14021,14043,14051,14058,14069,14108,14142,14151,14159,14168,14190,14209,14217,14224,14248,14256,14263,14270,14296,14362,14786,15153,15234,15579,15585,15919,15926,15941,15978,16011,16025,16035,16044,16064,16092,16141,16192,16231,16249,16263,16275,16289,16325,16360,16369,16394,16400,16409,16423,16448,16482,16497,16522,16541,16560,16570,16583,16605,16617,16624,16629,16634,16639,16651,16663,16677,16694,16718,16743,16748,16765,16936,16943,16967,16998,17028,17053,17064,17084,17099,17113,17138,17146,17162,17180,17219,17834,18028,18039,18075,18528,18866,19028,19111,19129,19197,19260,19397,20878,21386,21422,21656,21684,21747,21839,21843,21853,21907,21919,21952,22006,22114,22203,22247,22587,22919,23211,23281,24017,24284,24385,24658,24716],"structuredbuffers":[7129,19099,20454],"m_resultlabellocation":[24615],"utilization":[12514],"middle":[860,1680,14749,15845,15880,22106,22651,22902,23615],"portals":[4005,13860,23991],"simple_shading":[18942],"suboptimal":[17796],"blend-weights":[464],"springing":[2876],"schedule":[22490],"characterjoint":[5981,15235],"sophisticated":[381,1456,2131,13351,16007,16283,16322,16357,16406,21895,23737],"launched":[4225,6484,14222,15082,15669,15713,22445,22913],"gps":[9616,10594,23144],"applied":[45,234,360,367,485,607,823,1058,1130,1153,1330,1423,1456,2186,2233,2284,2312,2320,2361,2367,2421,2485,2497,2553,2559,2620,2669,2836,2903,2972,2986,3129,3267,3463,4039,4074,4107,4112,4137,4212,4544,4643,4701,4775,4798,4837,4979,5009,5102,5130,5184,5330,5367,5425,5431,5580,5772,5801,6460,6593,7318,7969,7984,8772,9187,9308,9478,9509,9530,9868,9983,10048,10057,10971,11168,11226,11426,12042,12346,12617,13568,13713,13854,14145,14152,14191,14294,14306,15113,15400,15444,15476,15510,15594,15952,15986,16036,16123,16135,16246,16268,16277,16346,16421,16653,16999,17032,17094,17163,17259,17349,17901,17974,18180,18678,18861,19049,19233,19255,19564,20606,21113,21564,21689,21836,21883,21897,21960,22097,22143,22224,22721,23292,23992,24282],"pr":[6716],"uint":[21458],"rampoffsetr":[16220],"_cube":[12005,18723,19928],"bounce":[2659,2847,2860,2876,3041,3469,4116,4139,4150,4164,4848,5860,6447,8163,12283,14027,16723],"pre-calculated":[11782,13874],"scoreboard":[22766],"-source":[14527],"batching":[4205,4516,4610,4691,4767,4784,7307,10780,10794,11753,12490,13904,15444,19779,21649],"prepass":[9204,15414,15452,16084,20425],"advantages":[7,9192,9282,9481,10106,13709,16189,21571],"looped":[14170],"cat":[16836],"non-mobile":[13954],"t2":[16831],"unintentionally":[11174],"parentheses":[8075,17864,19151],"flex":[2209],"cubemap":[2989,3561,4983,5526,5937,6860,9983,11165,11440,17567,18717,19147,19188,19923],"scrollrect":[16736,22705],"impression":[179,3437,5322,5578,6856,7158,9569,10019,11136,13822,14073,14108,14205,14278,14302,16162,16245,21921,21978,23134],"top-right":[3397,7826,8408,16159,21644,22247,23286],"mute":[594,1337,1421,2564,3803,5414,5762],"antialiased":[1297],"modulate":[2358,12039],"constant":[663,2128,2218,2487,2968,2981,3037,3096,3717,5420,6926,7373,9723,11509,12395,14062,14077,14109,14286,15598,16094,16183,17167,17857,18335,18659,19268,20554,21993,22777,22895],"techniques":[464,3022,5322,5456,8095,8281,9189,10022,12343,12653,13153,13752,14007,14204,14752,16319,17095,17199,19392,20822,21965,23082],"dreamlike":[15938,15975],"halfway":[2720,9093,12681,15677,16708,19438],"fieldid":[14571],"pre-installed":[2735],"l2":[10898],"gl_nv_fence":[1499],"wake":[5735,6462,15588],"nominal":[23421],"scripts'":[10921],"non":[1153,5596,7823,8024,10923,11223,11499,16809,19123,21611],"throws":[14244,22262,22520,23985],"against":[1312,1613,2905,4132,4148,4444,4714,4832,5134,5857,6458,7110,7797,9766,11068,11148,11527,13839,14381,15113,15234,15340,15474,15509,15911,16246,16420,16622,16627,17321,19541,22024,23159,23642,24288],"instructions":[221,269,880,1549,5213,8306,9621,10435,10560,11577,11968,11996,14332,17026,17532,19489,21290,21693,22284,22365,22422,23625,24603],"regarded":[22109,22244,22436],"audiofilter":[6009],"browsing":[156,879],"similarly-shaped":[14220],"joining":[846],"lods":[3621,19422],"'asimpleplugin'":[1586],"selectedtoolbar":[8741],"fluidity":[14017],"4s":[10607,11187],"define_effect":[1232],"bumps":[3663,5788,6451,9310],"lightprobeslegacy":[6021],"location":[52,159,245,279,707,836,1072,1975,2036,2296,2710,3047,3829,3867,4015,4399,4527,4855,4977,6364,6424,7022,7276,7324,8693,9464,9929,10075,10502,10565,11132,11329,11412,11610,12790,12885,12929,13107,13136,13160,13264,13318,13421,13576,14755,14810,15196,15658,17299,17414,18333,21282,21356,21655,21774,22125,22170,22329,22495,22548,22737,22877,22912,23205,23269,23319,23479,23921,24461],"decal":[8299,17451,17493,19424,20412],"else":[91,244,475,786,836,1135,1173,1727,2547,3789,3938,4003,4477,4735,4927,5322,6508,6709,6979,7159,7239,7717,8751,9054,9609,9688,10102,10332,10518,10864,11005,11096,11757,12114,12406,12767,13193,13311,13330,13654,13801,13895,14447,14698,15261,15592,15936,16242,16794,18035,18307,18545,18860,19096,19327,19545,20901,22397,22735,22914,24268,24339,24637,24695],"probs":[15253],"subshader":[12062,17807,17829,17920,18084,18235,18404,18509,18581,18624,18694,18724,18894,18973,19045,19212,19300,19391,19421,19520,19593,19731,19749,19795,20172,20390,20473,20772,20792,21086],"spus":[1247],"hud":[5524,12467,17751],"onapplicationpause":[7906],"hwid":[11412],"obstacles":[3818,3849,5344,6780,6979,12889,12907,13068,13117,13165,13188,13265,13269,13271,21650],"tomorrow":[8161],"cancel":[16042,16965,21770],"label":[130,2211,3277,7384,7524,7588,7794,8399,8511,8785,8890,10048,11035,12557,12810,13379,14283,14634,14786,15095,15109,16858,17045,17262,21750,22312,22718,23600,23809,24639],"busy":[12518,22488],"methodical":[12819],"dump":[24147],"toarray":[21470],"high-definition":[3167],"needs":[187,257,327,480,752,1006,1090,1166,1231,1598,2031,2121,2836,3129,3472,3503,3675,3823,3909,4463,4721,5135,5251,5269,5367,5481,6509,6667,6744,6961,7114,7141,7378,8099,8198,8888,9408,9651,9678,9893,10402,10978,11126,11350,11399,11826,11919,12342,12496,12698,12885,12931,13157,13311,13568,13575,13645,13722,13793,14462,15335,15550,16345,16715,16807,17196,17239,17284,17795,18375,18687,19123,19206,19945,20874,21246,21348,21414,21548,21706,21790,22432,22546,22554,22618,22703,23131,23185,23449,23666,23811,23819,23878,23993,24134],"forced":[4378,4502,4941,5663,15234,16421,17526],"missing":[6780,7038,9750,12190,12320,19107,20822,22456,22544,23492,23934,24236,24425,24588,24604,24716],"focus":[174,1247,3341,4190,4667,4756,6517,6709,8718,9966,10604,11743,13276,13761,14958,15116,16284,16320,16535,19791,21947,23992,24099],"launching":[1610,4171,6561,7958,10573,11840,13758,15646,21437,24106],"serialize":[3914,4485,4741,16792,24287],"refactor":[23266],"methodologies":[8775],"rg":[20874],"desaturation":[16136],"inside":[47,199,318,821,1247,1329,1458,1795,2130,2154,2549,2706,3068,3141,3532,3681,3797,3990,4128,4968,5059,5242,5282,5513,5824,6508,6949,7159,7446,7471,7587,7908,7948,8303,8376,8524,9020,9218,9630,9724,9937,10075,10336,10444,10466,10501,10800,11290,11336,12218,12679,12774,12918,13158,13782,14831,15170,15193,15234,15329,15931,16383,16449,16483,16716,16838,17147,17193,17347,17437,17881,17935,18137,18254,18410,18557,18663,18694,18712,18978,19045,19130,19257,19379,19459,19755,20134,20389,20457,20722,20776,20870,21664,21691,22412,22598,22638,22664,22704,22710,23171,23254,23312,23360,24291,24380],"begin":[684,860,1508,1633,2225,2577,2974,3203,3779,5616,8699,9121,9865,12412,13729,15126,15199,16556,21638,21760,23425,24676],"ability":[294,356,384,1160,6876,7118,8161,13263,20845],"token":[1533,1606,23433],"pdb2mdb":[23353],"mechanic":[15280],"ongui":[129,1290,3313,3373,7446,7471,7588,7792,7920,8347,8514,8784,8894,8996,10456,11034,12467,12570,13339,13482,16855,18501,24623,24699],"verts":[7319,10793,14832,15446],"sub-folders":[15103,17195,23449],"classid":[14555],"noparamdelegate":[22508],"distancepersecond":[22011],"shutdowns":[908],"well-known":[2124,7158,16245],"projectname":[6494,17431],"fogcolor":[20087],"aggressively":[13932],"likely":[78,2693,2811,3302,7149,7279,9412,9688,10107,10696,11198,11211,11239,11345,11891,12457,13093,13892,14334,15245,15342,16066,16162,16197,16385,17287,18448,19073,20410,22026,22444,22662,23993],"menuitem":[38,759,1813,1857,1972,7486,7768,10490,11366],"ipaddress":[1544,13424],"3x3":[3172,22723],"allbuffered":[13490],"boundaries":[2421,3091,3353,3627,13158,21408],"shorter":[291,661,4034,9737,13139,19922],"ondisable":[7935,11042,22630],"customisations":[21926],"responded":[17364],"spawns":[3068],"keen":[3814],"emerges":[14066,21929],"rwtexture2d":[6629,19103],"submenus":[17860],"discuss":[1297,3308,9974,22710,23988],"elastic":[5371,16722],"enableprojection":[15235],"str":[10492,22510,23825],"javac":[14525],"transtitions":[21641],"windowsphoneruntimecomponent":[24645],"sub-emitters":[14261],"positive":[2003,2799,2977,3477,3511,3543,4017,6818,11648,13839,14036,14074,22885,23715],"boon":[15237],"on-device":[197],"uiview":[22490],"steady":[13273,14184],"necessarily":[3619,4960,6458,11292,13314,13822,16164],"illustrated":[21605],"rings":[19972],"stackposition":[12238],"freetype":[3198],"unformly":[14205],"localappdata":[11314],"linq":[21445],"ordered":[3898,5211,5877,13717,23392],"#endif":[18684,24525],"preparing":[1691,8241,10475,14824],"bottom-left":[3397,5430,7826,8409,16159],"fragmentation":[12543],"variants":[1283,1904,3254,5242,13974,18934,19248,19442,19481],"savefolderpanel":[1975],"lightingstandard_standardlightmap":[20292],"'r'":[18320],"turret":[674],"valleys":[21842],"com":[117,242,834,958,980,1000,1021,1029,1037,1078,1489,1556,1599,1619,3405,4399,4527,4654,4718,5495,6357,6569,7021,7946,9643,9928,10100,10428,11405,11416,11705,11810,13321,13885,14441,14537,15140,16084,17240,17283,18031,21561,22284,22330,22446,22529,22864,22918,22965,23203,23741,23880,23920,24046,24116,24168,24187,24223,24274,24375,24391,24715],"behalf":[966,1017],"i've":[10441,23744],"unity_custom_xxx":[23465],"auto-compute":[1771],"box-":[5164],"blooming":[15938,15975,16007],"jittering":[15236],"spell":[3107,3728,4035,11925,12229,14039,14054,14204,21973],"swipe":[15882],"reflcol":[12005],"thumb":[598,1675,2294,3282,9256,13895,19446,22388,22902],"display":[181,622,963,1091,1230,1887,2118,2121,2665,3055,3092,3196,3384,3411,3579,3713,3752,3802,4094,4231,4502,4584,4670,4940,5316,5387,5743,6408,6516,6665,6992,7274,7338,7468,7852,8089,8232,8377,8510,8883,9183,9617,10449,10839,11338,11444,11696,11778,12287,13803,13892,14337,14754,14880,14957,15061,15084,15101,15209,16498,16637,16761,16856,17026,17381,17820,17955,18057,19132,19732,19787,21420,21743,21971,22026,22087,23560,23600,23996,24404,24675],"gigabyte":[833],"unity_transfer_depth":[18618],"ditch":[4012,13131,13263],"rasterized":[12800],"elevators":[5420],"stringevent":[23001],"user":[53,155,414,504,833,1018,1166,1205,1329,1459,1614,1638,1926,2009,2097,2153,2532,2716,3194,3381,3407,3522,3802,4228,4528,4670,4859,6366,6548,6606,6684,6742,6838,6940,7447,7465,7795,7934,8392,8582,8888,9675,9842,9924,9947,10164,10292,10471,11058,11247,11444,11527,11550,11587,11621,11696,12456,12490,12754,12969,13297,13330,13634,14353,14817,14848,15237,15617,15749,15803,16042,16495,16525,16637,16692,16941,17026,17062,17088,17110,17362,17384,17869,18687,20782,21280,21414,21567,21574,21621,21693,21752,21971,22212,22268,22320,22522,22533,22689,22714,22944,22981,23242,23623,23729,23902,23979,23990,24128,24216,24410],"oriented":[288,2754,3543,7418,9897,11605,14878,15600,16708,23715],"escape":[3404,3434,5496,6851,15757,17355],"oldscore":[22785],"playmode":[1146,5786,7934,10339],"collects":[4602,12904,21395],"mobile-optimized":[11976],"filters-":[12041],"fans":[6708],"two-fold":[12959],"interactivecloth":[5996],"deferred":[2689,3248,4200,4688,4764,4964,8087,8175,8274,9203,10765,11177,11803,12051,12284,12518,15406,15451,15480,15542,15906,17520,17795,18356,18379,19052,19230,19587,20142,20166,20352,20738,22261,23697],"overlay":[534,1298,2740,5392,5430,8232,12915,15440,15967,15999,16291,16647,17015,19522,19764,22672,23728],"dash":[7400],"sub-assets":[1332,1432],"gateway":[1071,3892,5141],"myuniquegametype":[13343],"healthy":[364,21836],"diminish":[2124,11127,14155],"engaging":[24391],"colors":[3661,4034,4212,4544,4643,4701,4775,4798,5214,5612,5678,5700,5725,6603,7001,7376,8224,9193,9483,9524,9868,9879,11198,11226,11426,12043,13913,14054,14292,14816,14913,15506,15971,16003,16167,16219,16246,16426,16760,17019,17088,17465,17516,17806,17908,17954,18142,18185,18699,18878,19137,19190,19211,19288,19447,20737,20853,21084,21715,22103,23283,23703,24416],"setobliqueness":[13827],"scrollview":[8661,16733],"geometry-based":[16357],"saving":[133,7160,8934,9441,9481,9966,10848,14801,15196,16054,16795,19540,20810,22042,23675],"exercises":[1324],"lag":[12342,13318,13717],"stoppropagation":[7048,23500,23944,24479],"apis":[223,1914,10418,10565,17940,19496,23814,23889,24363,24525,24529,24539],"m_lightprobecloud":[24752],"hundred":[13907,13982,14880,15092,22006],"device's":[1091,1606,3805,4511,4961,10431,10447,10538,11568,22914,23134],"gl_ext_texture_format_bgra8888":[1498],"registering":[1603,13332,13439,13639,22336],"why":[179,231,883,979,1324,1354,2723,4814,5142,5211,5299,6707,6760,8402,9059,9679,9702,9849,10160,10420,10952,11476,11985,12192,12457,12602,13179,13424,14563,14828,17365,18557,21976,22267,22386,22866,23622,24013,24044,24130,24587],"product":[166,938,1547,4179,6653,7941,8037,8161,9623,10915,11945,14616,14892,18380,19281,20207,22436,22896,23299,23453,23740],"writes":[3927,8075,12687,17368,18411,20451],"studying":[7985,14828],"know":[234,574,658,1016,1068,1233,2065,2358,3250,3428,3503,3802,3818,4465,4723,4823,5236,6763,6977,8997,9328,9728,10105,11126,11215,11305,11621,11870,11959,12196,12459,13158,13265,13305,13466,13715,14313,14461,14602,15086,15110,15196,18346,18681,19496,20423,21643,21706,23249,23276,23632,24287],"trails":[5716,6599,10167,14184,16567],"filters":[1288,1460,2359,2369,2494,2559,15109,16065,22997],"usages":[1454],"sourcegear":[892],"getfloatparameter":[1291],"audiosnapshots":[1332],"consider":[693,1288,1539,3837,4993,5164,5204,5457,6839,6868,7538,9246,9559,9621,9721,9859,10111,10918,11782,12182,12347,12812,13180,13445,13919,14140,14958,15087,15196,15344,15453,16322,17347,18035,19280,21701,21994,22245,22470,23245],"lands":[10292,21809,23377],"posts":[14870],"setint":[413],"course":[986,2052,3308,3985,9863,9963,10404,10778,10848,10978,12280,13895,14073,14107,14582,15462,15490,17986,18709,19738,21552,21582,21834,23366,24015],"freeze":[5138,6680,8082,12807,15104,22026,24093],"textmesh":[5498,5946,21689],"kaiser":[5615],"screenspace":[18314,20447],"behaviour":[762,821,1096,1194,2139,3676,4145,4158,5198,5414,5440,5783,5885,7091,7935,7987,9595,10341,12818,14306,14325,14783,14792,15456,15484,15583,16737,16958,17195,17234,17347,21603,21625,21947,21951,22565,23633,24930],"normalmap":[9911,9983,19946,20469,22203],"doubling":[5602],"zombie":[12898],"distorting":[4095],"freeform":[1756,3039,4846,22567],"follows":[1109,1290,1367,4935,5039,5282,5648,7805,7992,8375,10373,10461,10878,10928,11159,11718,12628,12805,13204,13458,13946,14069,14644,14711,15297,15497,15521,16464,16974,17116,17190,17430,19130,20654,21372,21574,21603,21610,22579],"frame's":[571],"appdata_full":[12088,18264,19093,19996,20506,21083],"nsdictionary":[10347],"unity_fogcolor":[20107,20762],"refunding":[1015],"internal":[231,394,601,661,973,1297,1613,1905,2008,4395,4522,4602,4902,5246,5630,5668,5693,6414,6458,6960,8037,8772,9184,10785,10845,10909,10923,11353,11789,11969,11986,12195,12493,13310,13361,13437,13615,13722,13956,13979,15237,15345,16015,16327,16794,17106,17269,17864,20420,21670,22437,23242,23301,23687],"accounts":[870,965,1489],"wrongs":[11226],"enemies":[6780,6915,12229,12485,15838,23398,24013],"vertexinput":[20968],"adt":[14526,22284],"bundle's":[7773],"locks":[22107,23025],"non-zero":[6508],"deselecting":[377],"matrix4x4":[13828],"agentradius":[12934,24787],"m_halostrength":[24741],"randompoint":[15257],"forcenoshadowcasting":[19780],"cliffs":[21842],"involved":[56,168,4129,6451,11464,12344,12818,13563,13574,13749,13769,13846,14501,19230,19945,20353,22522],"shader_api_ps4":[18295],"blurred":[8286,16060,16246,16314,17164],"other":[12,52,182,250,309,355,360,366,391,518,586,595,603,624,648,666,712,746,752,833,1071,1112,1128,1144,1205,1330,1395,1460,1519,1545,1704,1736,1762,1849,2009,2130,2160,2206,2226,2272,2360,2366,2595,2694,2750,2762,2788,2795,2843,2868,3022,3030,3125,3200,3243,3308,3348,3426,3490,3629,3659,3665,3794,3818,3867,4003,4096,4107,4116,4169,4501,4606,4682,4757,4781,4923,4951,5043,5121,5194,5205,5268,5332,5354,5369,5377,5395,5466,5490,5513,5731,5767,5807,5857,6407,6443,6484,6581,6647,6677,6719,6744,6866,6926,6944,6988,7103,7129,7158,7223,7316,7340,7376,7465,7663,7774,7790,7908,7941,7982,8035,8039,8085,8112,8135,8306,8392,8510,8934,8996,9253,9334,9346,9480,9597,9675,9712,9729,9851,9963,10022,10032,10064,10177,10424,10453,10460,10484,10767,10848,10925,10971,11053,11068,11130,11165,11198,11212,11226,11286,11336,11349,11442,11488,11506,11541,11551,11585,11733,11879,12222,12485,12542,12640,12739,12754,12789,12804,12818,12959,13155,13184,13265,13276,13284,13326,13439,13445,13462,13501,13564,13640,13752,13773,13841,13924,13995,14017,14035,14064,14108,14184,14188,14279,14325,14448,14685,14752,14783,14870,14898,15068,15081,15209,15237,15443,15516,15580,15677,15775,15838,15911,15938,15976,16017,16023,16033,16058,16062,16139,16190,16247,16257,16273,16284,16323,16358,16366,16391,16398,16407,16457,16488,16495,16520,16556,16581,16603,16637,16649,16658,16673,16692,16787,16794,16996,17026,17051,17089,17097,17134,17152,17160,17178,17188,17207,17266,17430,17537,17791,17806,17908,17933,18033,18319,18384,18553,18558,18652,18966,19045,19071,19211,19283,19477,19513,19588,19755,19808,20389,20692,20774,20784,21293,21344,21356,21387,21435,21560,21613,21617,21638,21680,21743,21828,21916,21941,21962,21981,21989,21993,22097,22128,22277,22289,22368,22425,22542,22558,22571,22635,22669,22684,22867,22876,22924,23189,23259,23275,23312,23381,23386,23398,23432,23447,23588,23644,23728,23769,23801,23814,23887,23895,23984,23992,24071,24181,24238,24276,24370,24588,24651],"parents":[2770,5145,11527,22617,23217],"5's":[21560],"opentype":[3185],"customisable":[23131],"significance":[8146,16347],"avatar":[335,362,377,394,617,1471,2186,2192,2608,2618,3503,5314,5938,6660,8022,8135,10292,12684,13314,15562,15591,17209],"gun":[674,1365,2706,3109,3730,5160,6675,6790,14266],"realistically":[5282,11193],"grabbing":[10300,10538,11983,15764,18695],"audio":[652,741,1061,1105,1107,1124,1153,1197,1329,1396,1455,2239,2255,2271,2307,2315,2321,2328,2335,2347,2359,2365,2371,2379,2387,2395,2403,2412,2420,2432,2440,2450,2458,2479,2486,2493,2502,2510,2528,2549,2558,3762,3792,6583,7340,9623,9985,10025,10579,10780,10959,12041,12378,12548,13455,14994,15010,15049,15861,21991,22092,22114,23107,23280,23691,23803,24014],"download_webplayer-3":[7021,9928,23920,24391],"perpendicular":[181,2126,2710,5178,6646,14204,15600,22233,22867,22902],"640x1136":[4305,4595,11606],"unity_4lightposx0":[20735],"allocation":[1235,10830,12201,12457,12541,16833,22618,22735],"confined":[2852,3136],"ingredientdrawer":[7586],"friendly":[11753,15246,21574],"tripple-core":[10729],"quit":[4341,4624,6519,7934,7950,15757,23167],"what's":[1247,2735,6976,11581,17940,20411,23739],"deserves":[13020],"unity_audiodsp_callback":[1248],"emitted":[1458,2449,3092,3557,3713,4059,8226,9585,11138,14059,14067,14142,14164,14225,14252,14304,21598],"informs":[7445],"mynewsky":[23412],"today's":[468,11861],"principle":[5513,13724,18037],"unityprojectpath":[24663],"reverbs":[2532],"visiting":[12818,13160,15280,22548,22963],"runs":[580,1298,1488,1528,2801,3428,4232,4500,6412,6702,6868,7776,9625,9643,10404,10776,11339,11735,11870,11991,12194,12457,12525,12733,13310,13329,13839,14721,15087,15600,15647,15677,15811,16798,17879,19065,19732,22368,22445,22544,22920,23158,23436,24155,24288,24321,24538],"playerlimit":[13360],"jas":[7992,9388],"destpoint":[12827],"masses":[5124],"intversionin":[10995],"visibility":[1137,1334,1445,5289,8267,11524,11712,12600,13844,16272,21648,22247],"'build":[1532],"codec":[2300,2605,24014],"another":[148,165,338,384,525,823,887,983,1127,1165,1393,1459,1470,1878,2630,2706,2747,3001,3125,3619,3867,4024,4395,4522,4923,5151,5195,5414,5753,6443,6547,6656,6760,6866,7102,7389,7786,8035,8124,8206,9111,9189,9208,9415,9513,9536,9623,9861,10056,10373,10970,10977,11046,11296,11336,11350,11403,11481,11511,11881,11956,12199,12657,12687,12787,12889,12917,12941,12984,13103,13179,13264,13292,13441,13758,13772,13805,14337,14461,14526,14737,14768,14990,15081,15170,15280,15466,15570,16079,16135,16772,16837,17135,17177,17189,17204,17396,17903,18036,18345,18400,18645,18940,19037,19434,19669,19781,20769,20810,21394,21403,21618,21641,21697,21790,22109,22197,22699,22801,22881,22934,22953,23203,23273,23360,23377,23663,23704,24308,24669],"audiomanager":[5887],"shortcomings":[16080],"real-life":[22123],"smalltile":[24316],"g":[11,2634,3211,3571,5235,5324,5654,5733,5758,5788,6496,6644,7093,7308,8024,8945,9235,9315,9458,9559,9679,9951,9982,10062,10166,11344,11750,12396,13196,14315,14689,14831,14849,15005,15453,15525,15950,16079,16201,16576,17239,17537,17800,17860,17948,18241,18321,18361,18553,18713,19016,19096,19177,19442,19458,19588,19764,20138,20412,21060,21195,21597,21862,22268,22298,22495,23635,24396,24734],"jitter":[2795,2850,3471,4139,16075,16611],"originated":[8085],"request":[838,966,1017,1033,1312,4017,6715,6719,6725,6740,10343,11276,13284,13575,13652,17299,22328,22833,22961,23878],"top-side":[22174],"okay":[5169,9489,11735,17381,24200],"accumulates":[16412],"thevalue":[668],"restores":[17260,23288],"liking":[3528,14854,21907,22242],"ship":[11781],"unavailable":[375,1077],"normalized":[168,313,485,2076,2634,2679,5309,5758,6656,7106,12393,12681,16170,16643,17139,17181,18267,19437,20438,21810,22895],"sit":[1353,16164],"-dumplog":[10089],"approxview":[19437,20439],"gridy":[10272],"spoon":[7541],"distance-based":[20555],"scrolls":[21764],"myfunc":[7929],"populate":[16822],"relies":[581,12490,13292,16128,23240],"forest":[1063,7330,21557,21921],"propertyattribute":[7663],"blendtwo":[1714],"leaked":[23407],"enters":[1358,6449,7797,21625,21754,24070],"def-thigh":[1672],"decompressed":[1111,2281,23887,24009],"specially":[372,2997],"peripheral":[22289],"launch":[263,1068,1543,2036,6485,9422,9539,9965,10168,10431,12642,13758,14614,14796,15616,15638,15812,17387,18560,22290,22358,22446,22914,24107,24155],"unintuitive":[10245],"besides":[11955,17275,21906],"cmd+alt+9":[23076],"checkout":[14348,23676],"destblendmode":[19010],"re-scale":[694],"totals":[10810],"shaderimporter":[6075],"wont":[19781],"il":[4485,4741,24287],"navigation###":[23114],"unity_no_linear_colorspace":[18315],"neighbouring":[16081,16176,16365],"wgt-bones":[1661],"nurms":[3633,9321],"levelgamemanager":[5881],"soft":[3563,4943,7134,11139,11153,14842,15426,16016,18040,18227,18603,19061,20436,21930,22187,22275,23355],"src1":[19263],"axes":[471,658,1473,2122,2657,2828,2876,2992,3357,3397,3407,3505,4047,4079,5138,5354,5749,6442,6805,7826,10872,11432,11644,14152,14160,14297,14749,15329,15735,15859,22103,22868],"font's":[3234],"integrates":[21669],"m_bakedcolorspace":[24755],"gl_fog":[19121],"-h":[17425],"non-square":[282],"callobjectmethod":[14575],"pubport":[6395],"unity_editor":[86,7289,14363],"speakers":[1112,1353,2296,2421,2559],"functionality":[222,594,839,1143,1419,1614,2870,3241,3249,4106,4456,4567,6597,6616,6983,7357,7804,8537,9091,9180,9513,9925,10032,10107,10447,10479,10564,10770,11568,11641,12196,13315,13333,13769,14494,14545,14723,14778,15197,15553,16123,16715,17271,17939,18251,18318,18678,18714,19036,19088,19178,19279,19588,20780,21356,21981,21991,22683,22716,23272,23796,23814,24181],"haven't":[979,994,11174,24425],"carries":[5643],"cinematic":[11909],"8b6db55a2344f068cf8a9be0a662ba15":[1867],"logicalorinverted":[18209],"favour":[2470,11122,11149],"toolbarint":[8602],"5cm":[14069],"3rdparty_support":[9456],"openpanel":[9775],"wildly":[12456],"confuse":[5204,17168],"partial":[3836,17732,22413,24025],"accel":[9601],"packaged":[28,1848],"reload":[1284,1513,12453,15068],"las":[9846],"fill":[292,866,997,1232,1603,2131,4237,4511,4589,4678,6380,6723,9712,12324,12583,15093,16453,16485,16503,16546,16643,16698,16947,17149,20019,22332,23317,23630],"audioeffectplugininterface":[1231],"function'":[4398],"hashit":[12414],"texels":[18321],"reports":[197,230,11580,11643,14956,21689,22268,22446,24563],"m_children":[8070,24844],"non-convex":[3675,18412],"interactable":[2763,16045,16529,16695,16944,17065],"adjustments":[7986,16134,16201],"solvers":[9501],"laid":[1209,2710,2737,2997,3156,5742,8204,9113,16195,21409],"shipped":[9425,10556,14613,21282],"-adapter":[6547],"office":[12818,15713],"well":[394,439,464,682,833,1002,1247,1417,1469,2049,2131,2214,2634,2757,2759,2788,3000,3793,3818,3871,4143,5060,5354,6442,6521,6622,6664,6832,7106,7438,7675,7763,7942,8082,9208,9354,9597,9702,9893,10810,10917,11169,11464,11527,11582,11926,11948,12226,13020,13215,13265,13285,13453,13846,13895,14073,14475,14827,14930,15017,15214,15600,15692,15716,16008,16175,16283,16384,16421,16489,16503,16687,16796,17094,17153,17204,17262,17329,17537,17692,17701,17710,17727,17778,17798,18677,19063,19211,19442,19789,20068,20166,20357,21366,21407,21551,21602,21957,21976,21990,22200,22444,22571,22637,22675,22710,23153,23310,23680,23756,23764,23809,23895,23993,24128,24531,24657],"fluttering":[21937],"landscapes":[17024],"downsample":[16036,16074,16295,16348],"320p":[4327,4618],"agperfmon":[11799],"setnobackupflag":[10539],"bumpiness":[5540,21599],"numbersandpunctuation":[11704],"potential":[4444,4714,5296,10561,11165,11991,13293,13975,14112,15335,22735],"non-physically":[20396],"muzzle":[11898],"cmd+v":[23047],"pointerclick":[16990,17130],"row":[938,3000,3210,4871,4933,8597,12045,14272,16453,20689],"ball":[6447,14102],"monobehavior":[6591,12596],"box42-like":[3659],"upgrading":[9559,10403,22474,23983],"slippery":[6447],"reverted":[884],"crosswind":[22879],"stacked":[6594,15006],"governing":[16079],"right-mouse":[23902,24410],"cellular":[1071,10684,11729],"mini-search":[15109],"carved":[3861,13217],"decrement":[19583],"2gb":[10732],"achievable":[16136,23990],"animator":[309,327,346,359,367,392,406,604,609,623,684,2156,2190,2222,2620,2633,3091,3745,4029,5406,5943,6603,8037,9580,9743,10293,11476,11504,12964,13199,13275,15566,15606,16762,17215,21388,21619,21631,21635,21810,22126,22554],"m_buildsettings":[24780],"-s":[9670,10918,11591],"csproj":[23756,24134,24556],"pool":[12229,12580,22735],"towards":[3459,3818,5824,7114,7158,7372,7418,7786,10338,11454,11681,12370,13028,13162,13265,14196,14768,15915,16168,16606,18267,18390,18659,20556,22870,23715],"sceneasset":[6085],"example2":[13809],"per-instance":[3365],"getcanonicalpath":[14573],"linked":[661,714,1068,1285,1685,4958,6445,10922,11292,12763,16735,22421,23298],"fade":[471,2490,3154,3541,3621,3802,4045,4966,5062,5614,5737,5855,6869,9872,11909,14054,14067,14103,14259,14306,16414,16760,17069,18412,19295,20068,20407,20767,20933,21876,22140,22221],"pointinair":[22878],"scrolled":[16719],"strange":[11344,14751,16833,21714,21837,22916],"isn't":[753,2074,2229,2601,2708,2737,3153,3397,3620,4166,4485,4741,4833,5169,5420,6716,7158,9621,9710,9937,10501,10616,11193,11923,11985,12205,12482,13440,13777,14870,20810,21644,21691,21897,22307,22665,23190,23376,24287],"untagged":[8053,21800,24811],"x-access-token":[23883],"acts":[392,2421,4137,5371,8226,14778,14782,15954,15988,22097,22196,23724],"collided":[5870],"ld":[22520],"authored":[578,2169,11239,12789,15600,21543],"m_hdr":[24884],"beam":[2078,6860,13227,21809],"implementing":[329,5500,6960,7451,7507,10482,18376,18711,19036,19180,20067,21753,23726],"scrollviews":[8691],"newpreviouslyselected":[9784],"establishing":[10560,23403],"m_pvsdata":[24726],"fibonacci":[22139,22220],"m_enabled":[24863],"divided":[4168,8197,10766,14271,14281,14880,15250,15933,18334,20874,22895],"normal-":[3234],"brighter":[11234,15949,15985,16164,16246,16260,16309,17019,21580],"myplayer":[23453],"wider":[5788,9737,16493,23809,23889],"downsize":[9259,23159],"cmd+b":[204,10474],"so":[25,151,179,211,291,407,452,490,661,714,882,994,1063,1204,1458,1588,1614,1633,1751,1760,1783,1795,1905,2054,2076,2131,2138,2229,2281,2367,2449,2634,2762,2801,2868,2977,3039,3198,3397,3478,3503,3546,3663,3673,3734,3806,3843,3849,3909,4004,4037,4132,4139,4362,4543,4654,4729,4797,4833,4846,4919,4932,5026,5164,5202,5205,5214,5282,5372,5395,5431,5512,5688,5739,5838,6442,6510,6603,6643,6661,6683,6702,6710,6719,6728,6740,6742,6858,6913,6969,7090,7118,7134,7159,7318,7367,7448,7487,7601,7792,7984,8022,8082,8099,8112,8198,8271,8377,8781,8890,9028,9183,9267,9328,9354,9357,9441,9495,9544,9559,9612,9641,9698,9732,9764,9951,9963,10021,10054,10135,10291,10399,10435,10556,10805,10846,10873,10907,10921,10970,10979,11135,11148,11202,11217,11239,11339,11350,11453,11493,11551,11586,11622,11711,11729,11745,11919,11945,12030,12225,12451,12518,12617,12650,12657,12764,12790,12801,12934,12952,13090,13120,13198,13267,13276,13285,13330,13441,13451,13462,13466,13591,13640,13715,13739,13771,13791,13846,13892,13986,14010,14036,14054,14071,14112,14213,14266,14281,14306,14326,14359,14495,14516,14684,14721,14781,14829,14870,14886,14957,15001,15009,15060,15084,15107,15211,15237,15243,15345,15456,15484,15525,15551,15588,15677,15838,15867,15969,16001,16106,16135,16223,16246,16256,16341,16441,16558,16606,16737,16798,17017,17046,17082,17331,17516,17552,17558,17883,17933,18040,18331,18361,18383,18496,18684,18875,18946,18965,18987,19070,19248,19419,19434,19457,19513,19644,19758,19808,20207,20357,20654,20692,20778,20784,21195,21354,21405,21414,21574,21588,21613,21617,21640,21644,21693,21772,21827,21837,21846,21897,21912,21967,21981,21990,22018,22093,22109,22145,22193,22244,22436,22548,22644,22668,22692,22723,22760,22899,22915,22956,23145,23190,23209,23296,23301,23377,23392,23398,23446,23774,23819,23887,23894,23903,23984,24044,24112,24274,24319,24328,24411,24651,24708],"tosses":[12227],"natfacilitatorip":[13424],"refreshmode":[5094],"killer":[12324],"xboxone":[6502,18329,19492],"forefinger":[22902],"linker":[10918,10968,22388],"modifies":[414,12222,14142,20654,20828],"unoptimized":[1315,23774],"avi":[3767],"acknowlegements":[6712],"m_firstnumber":[24617],"scrolling":[5397,8661,9911,12061,15846,16692,16720],"unity_matrix_t_mv":[20702],"world":[187,356,465,836,1357,1535,2076,2118,2124,2426,2464,2571,2665,2740,2797,2826,2964,2972,2992,3078,3128,3397,3407,3450,3604,3659,3696,3818,3849,4035,4137,4451,4658,4923,5044,5138,5316,5336,5563,5751,5811,5856,7514,7992,8099,8138,8884,9357,9621,9850,10020,11083,11136,11588,11923,12031,12333,12481,12969,13174,13188,13263,13271,13280,13289,13453,13464,13609,13721,14022,14062,14069,14153,14161,14180,14191,14298,14746,14874,15494,15856,16116,16292,16334,16406,18267,18443,19244,19971,20448,20705,21343,21573,21605,21615,21886,21987,22111,22671,22867,23269,23726,23823,24014],"overlaps":[2229,4122,4166,4833,5420,16080,16321],"clips":[293,307,318,321,334,364,365,383,454,484,589,603,605,625,665,680,741,1106,1112,1465,1742,1767,1783,2156,2191,2224,2272,2475,2597,2620,2634,3121,5761,7982,8138,11343,15387,15567,15605,17210,21372,21621,23107],"streaming":[239,244,283,2306,3796,4207,4770,10584,10958,11294,15198,21368,21654,23887,23989],"-enableincompatibleassetdowngrade":[6543],"early":[2519,2539,8241,10504,10765,11790,11947,13285,22092],"unity_lightposition":[20753],"submenu":[439,6969,9564,17860],"setfloatparametercallback":[1231],"3-d":[2706],"encourages":[11,9296],"windowid":[8726],"middlecenter":[24622],"f5":[24166,24562],"onpointerup":[21757],"databases":[17438],"foldout":[677,3048,4856,5492,9210,23312],"modularization":[1205],"trade":[4132,4148,5739,12801,23159],"lmtex":[12012],"tightpackerpolicysample":[21537],"runinbackground":[13761],"somepath":[10509],"incrwrap":[19585],"air":[309,1458,3095,3437,3716,5125,5202,5289,7114,9863,10411,10717,14038,14047,14054,14066,14109,14155,14164,15588,15692,15718],"webplayers":[133,1111,4205,4691,4750,9953,14674,17364,23979],"road":[5396,5486,5790,13822,14771,16314],"datastreams":[16797],"fade-transparency":[20407],"additionally":[158,878,1533,1861,2697,6776,6986,8086,8320,9183,9966,10025,10100,11147,11212,12644,12967,14062,14281,14381,14480,14887,15405,15455,15483,16591,16658,16716,17195,17537,18301,18697,18947,19737,21927,21947,22446,22704,23189,23383,23775,23985,24519,24531,24581],"rough":[1048,6442,11590,20373,21411,21607,21960],"gl":[4398,7917,12734],"'return'":[22954],"trimmed":[2189],"traveled":[12435],"controllable":[22895],"direct3d's":[6550],"executables":[10062,14370],"supersecretdata":[23441],"q-factor":[1288],"colorized":[3539],"normal-mapping":[11147,17525,17550],"supplement":[10870],"multi-row":[8614],"mainasset":[52,7238,10515,22401],"vendors":[164,3814,5685,11802],"popassetdependencies":[11350],"hint":[10423,11603,13866,18312,22473,23450],"smooth":[182,468,661,1108,2631,3519,3621,3676,4963,5440,5543,5788,7368,8162,9198,9325,10451,11670,11945,13006,13169,13725,13918,16176,20373,20459,21569,21607,21844,21924,21978,22833],"precision":[2711,2741,3039,3673,4846,7970,11682,11750,11989,13945,15737,18272,18603,19190,19441],"receipt":[4229,4673,13713],"docheck":[6920],"scaling":[289,712,1230,3407,4386,4511,5596,6863,7994,9238,9730,9907,11734,14036,14191,14751,16090,16512,21836,22112,22643,23262],"ipod":[2301,4339,4621,10452,10656,11606,11613,11947,22485,23137],"access-control":[23881],"skinnedmeshrenderer":[1695,3652,5312,5975],"seed":[4885,22135,22216,22918],"architecture###":[23122],"endglsl":[18683],"serializableobject":[5204],"jammed":[603],"executionengineexception":[22455],"projectsettings":[826,7943,23635],"non-functional":[23874],"preset":[2532,2554,8124,9318,9725,14108,14847,17088,22655],"disallowing":[17268],"kgfxrendererps4":[12721],"various":[223,334,366,518,588,606,611,625,684,1125,1256,1349,1461,1612,1763,2156,2193,2224,2634,3199,4002,4168,4507,5796,6419,6445,6597,6599,6604,6740,7763,7790,8087,8123,8140,8273,9679,9719,9922,9924,10587,11608,11733,12653,14138,14304,14817,14956,15009,15038,15402,15562,15861,16340,16505,17024,17385,17683,18256,18353,18987,19065,19377,20764,21558,21621,21644,21677,22460,22579,22649,22733,23384,23452,23691,24321],"tweaks":[10209],"buildgame":[1973],"height-100":[9162],"val":[21057],"attempts":[5776,12299,15445,17298,23444],"derived":[11923,16080,16823,21221,21551,21669,22479,24296],"gl_oes_texture_3d":[1501],"automatic":[204,250,704,1665,2008,4059,4400,4528,5286,6661,6682,8245,8995,9513,9624,10474,12203,12586,12610,12815,12930,13285,13862,14316,15169,15946,15982,16753,20395,21406,22734,23631],"p2p":[23889],"computeshader":[5926,6640],"touches":[9612,11613,11951,13179,14891],"expire":[24539],"partscripttestcs":[14081],"image's":[5530,6859,6999,16502,16643],"copyright":[3194],"cross-section":[8099],"july":[10597],"possibly":[1203,13441,19738,22590],"arraybufferviews":[23863],"rgblabelslider":[8970],"monoscript":[5953],"_speccolor":[12059,17841,18453,18918,19354,20472],"near-instantaneous":[12456],"overwritten":[880,4492,4748,14715,24312],"gray-ish":[17465],"colorcorrection":[16430],"blacklist":[10928],"gingerbread":[11947,14644],"auto-rotation":[11565],"#ffffffff":[21737],"gunwithobjectpooling":[12232],"asymptotevalue":[5791],"projectilewithobjectpooling":[12234],"glosses":[17567],"functional":[8248,8373,8772,9179,17329,23237,23268],"time-of-impact":[4123],"stiffer":[5385],"diamond":[632],"arm-unknown-nto-qnx8":[1579],"markdown":[6712],"cg":[5221,11750,11983,13946,17795,17821,17941,18329,18680,19088,19181,19381,19442,19459,19972,20134,20353,20826,21080],"psm":[19509],"unloading":[11258,11300,22443],"terms":[330,737,2882,3870,9621,10974,11146,12367,12457,13306,13935,15107,16658,16687,16932,21981,22879,23808],"installed":[22,211,263,277,870,1533,1557,1637,3194,3767,4401,4529,6352,6513,6988,7055,9286,9398,9414,9517,9535,9629,9891,10062,11435,12642,14070,15650,15818,15917,15939,15976,16017,16023,16033,16062,16139,16190,16209,16247,16257,16273,16287,16323,16358,16366,16398,16407,16427,16569,16581,16603,16649,16659,16675,16787,16996,17051,17097,17136,17160,17178,17384,21282,22285,22477,22542,22913,23355,23516,23951,24202,24398],"sgx543mp2":[10610],"definitions":[394,1230,11985,15592,18248,19735],"waveform":[2272],"trained":[7786],"miscellaneous":[20435,21951,22437],"immediate":[2640,9210,12213,13180,13724,15248,22625],"forceapppointdistance":[5774],"cascades":[4949,7137,11156,23701],"unityshadervariables":[18249,20692],"requested":[72,1312,3199,7271,11287,13289,18374,18678,22332,22740,23780,24099],"2nd":[1668,2245,2261,9912,11606,20507,21108,22430],"puppeteer":[12227],"unity_blackberry":[14379],"spherecollider":[5973],"aligning":[385],"hdr-enabled":[17094],"iterating":[15296,23774],"pitfall":[23377],"respawnprefab":[21774],"dragevent":[16986,17126],"height-based":[16406],"lion":[15897],"walk-lean-right":[532],"physics2dsettings":[5893],"del1":[22508],"constraints":[4117,5137,11749,15234],"beware":[2604,11872,16932],"atlassian":[6702,6733],"handheld":[193,3796,9617,10437,11553,24167],"regard":[1283,11501,12199,12916],"impulse":[1316,4121,22095],"testfunc":[22498],"#808000ff":[21731],"corridor":[12818,13162],"'metallic'":[21902],"z":[658,714,1743,1767,2122,2653,2879,2980,3078,3433,3543,3696,4079,4971,5138,5474,5748,7845,8067,9860,11132,11649,14005,14074,14152,14160,14229,14297,14752,15233,15329,15470,15509,15843,16684,16999,17230,18333,18377,18400,18612,18850,19020,19990,20712,20845,21195,21887,22103,23015,23374,23715,24841],"manage":[359,933,3615,5207,5457,6366,6780,7806,9741,10980,11398,11408,14000,15097,15811,22735,22944,23623,24539],"hard":[1488,1555,2022,2346,2357,3028,3563,4946,7138,8009,10246,11153,11419,11826,11861,12456,12888,13206,13424,13912,14038,16313,17837,18040,18104,21573,22083,22349,22933,23461,24001],"0x":[8075],"styling":[8775,16538,17035,21693],"grassy":[21881,21897],"alpha-blend":[18104],"width":[1312,1519,2128,2657,2675,2784,2795,3015,3209,3360,3416,3575,3593,3624,4188,4665,4754,4915,4972,5563,5723,6558,6999,7826,8106,8401,8663,8898,9026,9653,9711,9735,9857,11158,12801,13484,14067,14229,15384,15929,15959,15994,16105,16232,16313,16463,16489,16502,16542,16646,16859,20713,20876,21404,21744,21835,21886,21907,21920,22180,22559,22573,22642,22719,23459,24396,24612,24697,24871],"finalizing":[5169,10560],"serializationdata":[16823],"pluginimporter":[4814,6098],"unity_project":[9466],"market's":[237],"in-app":[10568],"error":[100,458,906,1488,2794,4002,4483,4645,4739,5248,6447,6508,6680,6761,6997,7234,7970,10422,10917,10976,11286,12698,13163,13659,13779,14315,14353,14496,15672,17196,17331,20809,21689,21855,22208,22281,22326,22393,23281,23444,23743,23781,23879,23985,24141,24203,24287,24406],"flickering":[2732,14279],"attempted":[17337,22366],"-force-d3d9-ref":[6550],"solo":[594,1337,1420,5414,5762],"clicked":[7386,8376,8511,11400,11414,12969,13226,14670,14866,15101,15669,15731,17074,17211,22107,22686,24581],"comparative":[24001],"granting":[22339],"faults":[22404],"blendspeed":[1715],"scene2":[1976,11376,16798],"serializers":[10423],"leaking":[13504],"starts":[1205,1433,2553,5792,6426,6999,7898,8402,10377,12227,12820,12884,13576,14108,14172,15350,15652,16411,16737,17864,21745,22173,22364,22421,23272,23617,23978,23993,24408],"managed":[1283,1509,4817,5714,9615,10414,10828,11599,14494,14597,14689,15047,15093,21683,22390,23297,23401,23783,24139,24273,24311,24561],"onpointerdown":[21756],"now":[113,440,838,981,996,1068,1288,1353,1580,1609,1632,1796,1848,2597,2640,2870,3227,3316,3371,3431,3478,3676,3741,3912,4060,4094,5143,5440,5491,6686,6692,6717,6719,6770,6974,6981,7108,7274,7449,7704,7954,8161,8393,8965,8996,9177,9191,9225,9308,9363,9418,9443,9537,9582,9654,9733,9748,9855,9934,10135,10415,11060,11202,11398,11410,11474,11541,11599,11950,12319,12509,12621,12937,12961,13092,13125,13139,13300,13510,13803,13884,14107,14337,14464,14593,15168,15226,15640,15859,15887,16021,16215,16319,16436,16800,17220,17391,17866,17938,18442,18709,19280,19521,19846,20185,20603,20782,21793,22018,22191,22252,22443,22740,22914,22962,23153,23209,23269,23748,24001,24046,24279,24383,24529,24660],"1f":[1715,6870,10867,21826],"downloadingassetbundles":[11267],"hashes":[1864,11388,11518],"inelastic":[4116],"windows81":[24145],"examines":[16385],"def-shoulder":[1669],"headlight":[6866],"iris":[17050],"exploded":[10209],"mygame_standard_14":[15667],"moveposition":[15237],"levered":[11976],"pptr":[2216],"semantically":[21275],"devleopers":[6714],"powervr":[1522,5672,10591,11803,12512,19453],"blendshapecount":[1704],"myskin":[8826],"myotherprojectfolder":[13760],"optimisations":[21643,21912],"mindistance":[2577],"fat32":[15808],"binaries":[10405,24370],"tag's":[21807,23468],"lower-body":[358],"wrapper_runtime_invoke_object_runtime_invoke_void__this___object_intptr_intptr_intptr":[22408],"cheating":[11925,13291],"mygame":[117,1619,6539,15140,17240],"their":[131,182,386,607,762,838,1017,1063,1171,1283,1355,1428,1467,1648,1760,2064,2126,2426,2628,2641,2762,2795,3194,3407,3528,3818,3849,4033,4081,4104,4973,5205,5210,5214,5344,5430,5820,6445,6620,6659,6667,6797,6807,7083,7090,7331,7355,7384,7776,7994,8112,8746,9109,9191,9330,9357,9515,9689,9690,9725,9947,10029,10032,10056,10114,10942,10972,11174,11205,11215,11249,11262,11296,11480,11499,11891,11951,11976,12378,12451,12655,12687,12888,13160,13188,13265,13287,13327,13438,13453,13503,13640,13709,13749,13921,13989,14054,14073,14108,14157,14239,14266,14278,14294,14307,14309,14323,14328,14781,14829,14868,14934,15017,15099,15215,15396,15514,16162,16488,16512,16556,16611,16740,16823,17152,17257,17411,17537,18045,19028,19381,19418,19434,19515,19588,19997,20419,20464,20749,21450,21564,21836,21924,22109,22137,22218,22250,22564,22571,22682,22831,22879,23004,23219,23296,23360,23373,23392,23436,23623,23694,23911,24015,24525],"scale":[290,303,460,639,728,1418,1646,1782,2213,2464,2757,2799,3068,3153,3209,3346,3394,3418,3519,3627,3673,3699,4074,4122,4511,4839,4979,5159,5183,5395,5491,5629,5712,5745,6863,7321,7977,7987,8203,9059,9234,9378,9393,9405,9432,9482,9523,9552,9729,9859,9907,10020,11507,12131,13134,13703,14025,14145,14184,14192,14747,14829,15093,15856,16066,16090,16307,16413,16511,16646,17204,17990,18033,18400,19168,20145,20292,21195,21987,22006,22101,22133,22214,22642,22891,23013,23262,23728],"relating":[269,15022],"best":[184,221,464,750,844,1111,1533,1755,2047,2189,2221,2276,2427,2470,2630,2708,2808,3125,3177,3529,3609,3673,3849,3897,4198,4547,4618,4686,4762,4800,4932,5048,5211,5285,5649,5683,5705,5719,5785,7993,8023,8334,8511,9189,9232,9312,9536,9725,9937,9988,10414,10451,10560,10696,10925,11044,11496,11783,11945,11989,12888,13083,13178,13267,13285,13448,13574,13709,13769,13945,14595,15087,15170,15221,15399,15408,15914,16065,16737,16801,17040,17393,17795,19774,20810,21413,21656,22123,22488,22719,22831,22924,23082,23275,23781,23894,24391],"downloaded":[73,159,749,838,931,995,1618,2016,6538,7271,9623,10062,10434,10505,10980,11259,12744,13428,15139,15199,16645,18547,22335,22402,22548,23147,24014,24398],"lowpassvalue":[11675],"samsungtv":[6502,14486,15718,15801],"clumps":[21829],"generaterandom":[23335],"unitywwwconnectiondelegate":[10359],"x-request-sent-time":[23883],"assembler":[21679],"addcomponent":[10123,17255],"dsp":[1145,1203,1330,1423,2468],"tex3d":[5502],"resolution-independent":[14921,16341],"sockets":[13767,15169,17267,23874],"slowly":[2031,2386,2394,2401,2419,2439,2447,2456,3541,3871,5166,10448,14140,16834,22368],"texture2d":[770,1829,5463,5602,5900,6644,8432,9049,10956,12638,15750,17380,18342],"fry":[7449],"included":[52,1280,1618,1755,1937,2005,2622,3091,3146,3194,3251,4024,4958,5020,5466,6606,6883,6988,9189,9429,11290,11349,11985,12294,12880,13847,13980,14454,14730,14920,15139,15190,15396,16196,17943,18248,18946,20136,20692,21354,21378,21834,22191,22521,23310,23409,23756,24135],"uncompressedassetbundle":[1843],"decodes":[17297,18271],"danish":[3226],"interpretation":[9614,12916],"vantage":[10022,12034],"stringreturnvaluefunction":[23835],"pollhostlist":[13328],"emission":[309,3076,3694,8091,8189,12007,14055,14069,14107,14184,14222,14259,14304,15494,17852,18465,18877,19025,19055,19244,19366,19870,20356,21598],"lingo":[6641],"unity_vpos_type":[18326],"gl_qcom_binning_control":[1503],"rot":[2213],"breaking":[2851,3135,4004,7091,13844,17347,22168],"a4":[10600,11947],"dstalpha":[18218],"gl_ext_texture_type_2_10_10_10_rev":[1499],"multiplier":[2506,5796,14145,14178,16586,16771,22143],"front-to-back":[11764],"decrypted":[15139],"far":[1654,1786,2126,2678,3543,3557,3615,3644,3665,4913,5021,5474,5654,5739,7149,9872,10166,10942,11168,11198,11527,11910,12207,12485,12604,13068,13306,13865,13922,14073,15084,15474,16170,17900,18675,20712,21907,22166,22831,22871,22897,24716],"falsely":[18046],"traversed":[4018,12886],"unity_can_compile_tessellation":[18327],"required":[182,201,236,247,275,343,395,435,704,920,1017,1043,1137,1196,1371,1606,1700,1804,2776,3200,4088,4212,4523,4643,4701,4775,4798,5602,6359,6647,6664,7114,7774,7808,7942,8102,8395,9000,9511,9532,9557,9897,9925,10109,10468,10539,10563,10765,10925,11356,11463,11723,11825,12507,13295,13460,13749,14690,14835,14905,15101,15217,15297,15969,16001,16159,16195,16341,16357,17017,17347,17387,17472,17582,17642,17743,17762,17798,19483,20394,21415,21567,21666,21708,22097,22320,22398,22735,23189,23310,24372,24536],"_dstblend":[19155],"reverberation":[2421,2517,2537],"cortex":[10590],"crashes":[196,4603,10460,10574,11574,11857,12587,15671,22262,22290,22338,22388,24147],"divisible":[1247],"packingmode":[21456],"trim":[21405,21515],"circlesmask":[20929],"crouching":[366],"distribution":[237,2284,10563,10914,12185,16260,17442,18604,21576,21666,22132,22213,23784],"spike":[12588,14957],"fixed-update-count":[10794],"delete":[637,670,752,901,1192,1261,1411,1662,1851,3619,4459,4717,4933,5262,6851,7352,7390,7951,9543,10157,10538,12608,15123,16175,17268,17398,20845,21408,22356,22477,22535,22930,23049,24134],"but":[4,73,166,179,239,250,364,457,487,663,682,746,755,836,1108,1159,1208,1355,1458,1533,1557,1609,1613,1643,1783,1792,1878,2005,2072,2118,2124,2139,2203,2277,2475,2564,2617,2619,2706,2747,2776,2801,2843,2969,2982,3037,3125,3199,3241,3249,3318,3447,3501,3503,3560,3684,3759,3763,3774,3832,3849,3888,3892,3993,4017,4060,4094,4114,4142,4168,4551,4642,4688,4764,4804,4854,4899,4933,5005,5098,5142,5193,5206,5249,5285,5344,5354,5356,5399,5513,5678,5698,5714,5767,5855,6404,6437,6443,6484,6656,6664,6679,6692,6698,6710,6719,6739,6778,6858,6876,6926,6951,7091,7110,7139,7158,7331,7379,7438,7765,7816,7845,7908,7970,7993,8060,8106,8112,8128,8228,8661,8965,9179,9187,9244,9318,9373,9412,9438,9513,9536,9566,9569,9612,9654,9709,9728,9842,9855,9893,9924,10024,10043,10053,10107,10393,10404,10429,10441,10473,10616,10782,10848,10872,10903,10917,10970,10978,11055,11120,11127,11146,11193,11211,11226,11261,11286,11342,11452,11477,11501,11528,11561,11627,11694,11745,11861,11870,11947,11978,12196,12454,12496,12640,12680,12687,12818,12879,13155,13267,13284,13329,13448,13457,13466,13567,13573,13640,13712,13732,13822,13841,13902,13974,14004,14038,14047,14066,14100,14155,14164,14184,14191,14244,14259,14306,14325,14488,14494,14524,14684,14715,14751,14781,14828,14868,14890,15009,15139,15243,15343,15474,15516,15585,15600,15624,15711,15911,15938,15980,16026,16074,16125,16162,16284,16319,16365,16476,16495,16538,16556,16558,16595,16637,16679,16796,16953,17010,17082,17159,17187,17235,17239,17262,17275,17384,17456,17516,17552,17558,17798,17879,17997,18037,18104,18141,18184,18334,18557,18696,18935,19065,19195,19241,19391,19419,19433,19515,19563,19738,19759,19874,20185,20399,20506,20788,21280,21344,21356,21398,21417,21544,21582,21603,21614,21617,21670,21689,21796,21832,21844,21855,21897,21912,21953,21971,21990,22006,22097,22109,22249,22278,22283,22325,22383,22571,22642,22675,22724,22735,22867,22882,22953,23138,23234,23283,23310,23374,23392,23447,23645,23755,23774,23798,23878,23895,23980,24001,24046,24134,24219,24280,24321,24425,24713],"too":[290,456,729,991,1257,2807,2961,3662,5373,5498,5615,5799,6988,7149,7993,8226,9249,9701,10778,10802,10852,11234,11388,11792,11955,12199,12544,12604,12888,13180,13185,13844,13897,14071,14110,15000,15044,15459,15535,16299,16692,16999,17038,17624,18046,18749,19419,20605,21714,21937,22209,22236,22448,22761,22953,23589,23780,24015,24345],"over":[147,182,342,366,391,464,655,672,685,823,836,991,1071,1399,1705,1762,2048,2209,2402,2448,2457,2498,2559,2619,2632,2708,2750,2841,3047,3091,3234,3308,3339,3426,3587,3706,3885,4012,4030,4106,4231,4674,4855,4927,5002,5178,5365,5396,5405,5512,5725,5799,5829,6742,6860,6868,6940,7310,7338,7384,7506,7792,7818,7987,8306,8475,8881,8996,9265,9575,9597,9709,10021,10106,10797,10848,11117,11132,11146,11200,11339,11435,11730,11839,12392,12652,12681,12788,13131,13182,13263,13293,13453,13497,13567,13703,13739,13771,13841,13919,14044,14048,14062,14067,14103,14148,14156,14184,14199,14213,14214,14249,14253,14275,14284,14293,14306,14775,15058,15092,15169,15584,15613,15867,16060,16246,16256,16476,16561,16648,16715,17009,17111,17203,17331,17464,17869,20809,21607,21634,21842,21876,21897,21922,21940,21953,21960,22444,22703,22862,22950,23704,24297,24370,24671],"folded":[685],"projector's":[4927],"onanimatormove":[8138,13017,17221],"spotangle":[20754],"maximimum":[4141],"largely":[6714,11928,16259,21714],"fallen":[11247],"tn2151":[22446],"fiddling":[13749],"ssao":[16673],"agreement":[1043,7223],"renderered":[21891],"audioplugininterface":[1208],"-force-d3d11-no-singlethreaded":[6571,24118],"backbuffer":[9202,11168,11251],"prevent":[908,1096,1338,3430,3487,3649,4021,4117,4141,4255,5133,5371,10538,12934,13155,13504,14037,14076,15219,15965,15991,16075,16580,17195,18045,19123,21370,21868,22320,22544,22608,22928,23203,23615],"modelimporter":[6090],"golden":[11992],"rectangles":[2719,9027,21407,21450,22653],"attempting":[316,1614,3496,5339,5375,12199,13769,13816,17323,22455],"logo":[6992,15196,23996,24407],"cachedassetbundle":[10543],"m_lightmaptilingoffset":[24895],"blueooth":[10684],"light's":[3151,3558,6862,8192,11158,11232,18045,23377],"gears":[9606],"assume":[6715,7826,7946,9218,9357,11655,12303,14069,14596,15525,15588,16113,17822,19458,21354,22488,23893],"numbermanager":[24645],"k1":[5508],"historical":[6447,12452],"applicationloader":[9673],"strung":[3159,3480],"matrix":[4130,4146,4932,6414,6465,8037,11047,13823,16061,19280,19442,20697,20847],"sgx543mp4":[10701],"pad":[1244,5649,16726],"got":[7449,10369,13661,23266,23744],"autorotatetolandscapeleft":[11565],"collect":[172,12541,15335,21772,22835],"_srcblend":[19155],"shot":[2969,2982,3087,3705,8099,12453,22061],"standard_15":[15708],"seqence":[690],"float3":[12004,18267,18732,19096,19860,20445,20482,20711,21106],"inputmodules":[7809,10026,16392,21752],"linux":[916,2049,4660,4824,6496,11327,12525,13426,13432,14368,14489,14674,14895,15213,15541,17385,18681,21541,23403,23893,24603],"webgl":[3200,4779,6502,14383,14898,23758,23794,23813,23872,23890],"receive":[490,977,1008,1170,1423,1600,3752,4070,5011,5121,5273,6463,6484,6719,7326,7823,8718,11152,11204,11415,11541,12218,12633,12700,13092,13293,13448,13464,13721,14106,14201,15457,15485,15949,15985,17331,18037,19438,21579,22276,22992,24099,24419],"parameters":[72,315,334,405,620,1127,1159,1209,1339,1462,1733,1753,2122,2633,3599,4003,4862,5214,5521,6424,6447,6508,6994,7675,8147,9157,9559,9934,11356,11484,11698,12182,12702,12958,13460,13574,13900,14074,14563,14725,14887,15617,16246,16313,16661,16686,17046,17514,17987,18400,18658,18859,19005,19106,19125,19755,20019,20394,20603,20692,20849,21104,21566,21587,21636,21705,22185,22236,22389,22564,22737,22876,23192,23373,23382,23863,23901,24394],"tension":[12456],"auto-generated":[3196,12895,17795],"effector2d":[6059],"evaluations":[15611],"administrative":[1007,22975,24159],"joystickbutton4":[1485],"blackberrys":[1533],"deselect":[2621,7349],"toast":[24539],"skewed":[22115],"bears":[3736,16314],"unity-specific":[13727,13769],"rigging":[340,1471,14825,23360],"pink":[18428],"fear":[12617,23605],"'overwrite":[21859],"especially":[271,1211,2282,3198,3407,5004,5652,5798,7394,9249,9584,10578,10928,11785,11874,12182,12199,12687,12811,12888,13316,14164,14832,15106,15342,15847,15913,15938,15975,16008,16061,16283,16351,17017,18412,19446,22118,22444,23264,23379,23755,24385],"automated":[6484,10062,11199,14729,14832,22944],"microsoft-windows-twinui":[24157],"unlikely":[9688,13330,13848,22740],"overrideactivity":[14625],"foreach":[1827,1894,6787,7100,9800,13376,13486,15267,16863,21464],"standing":[7114,12956,14830],"rootposition":[13072,13212],"bookkeeping":[7942],"setasfirstsibling":[22669],"boxcollider":[5923,24911],"jc":[14567],"multisample":[10771],"precisely":[14771,18036,21940,21976,23432],"open-sourcing":[6738],"startcoroutine":[70,6883,7253,7929,9816,10869,11038],"armv6":[22485],"easy":[234,382,573,1208,2065,2565,2720,3026,4091,4933,5457,6647,7941,8737,9021,9612,9851,9924,10020,10782,11694,11734,11978,12460,12684,13285,13573,13742,13782,14074,14266,14829,14851,15100,15192,16136,16648,17024,17262,17277,17795,18030,21398,21790,22666,22760,22898,22999,23281,23299,23373,23607,23623,23704,24001,24385],"in-sync":[2201],"gl_ext_robustness":[1498],"funcname":[8143],"crowds":[11877,12290,13197],"coming":[181,1458,3584,4891,6856,10404,11136,11868,15072,16932,17294,17908,20399,20464,21543,23376],"screen-shot":[4890],"europe":[24209],"m8":[10644],"basically":[579,1127,1294,4487,4743,6961,9494,11452,13068,13567,13988,17259,18645,19045,19755,20356,21973,21981,22200,23170,23878,24184,24274],"libasimpleplugin":[1588],"drawmeshnow":[7917],"non-lightmapped":[19248],"caused":[11581,22305,22368,22495,23623],"rise":[3098,3719,4037,5344,14071,14307],"c++filt":[11585],"projects":[193,442,737,825,852,1051,1109,1367,1641,2005,2009,2617,4415,4543,5671,5698,5765,6712,6860,7941,9246,9345,10083,10437,10473,10484,12638,12687,13434,13758,13781,13982,14497,14511,15106,15196,15237,15453,16834,17384,21582,22320,23209,24132,24321,24530,24653],"allows":[72,156,225,302,318,342,366,386,436,464,605,624,690,741,752,839,935,1002,1125,1148,1283,1336,1397,1461,1533,1551,1614,1641,1790,2200,2223,2459,2619,2748,2822,3028,3226,3395,3430,3483,3487,3849,4012,4069,4107,4465,4723,4887,4909,4932,5053,5159,5198,5204,5224,5286,5330,5356,5375,5427,5519,5783,5832,6419,6502,6610,6709,6940,7223,7328,7996,8022,8126,8138,8172,8334,8462,8537,8776,9113,9180,9191,9545,9947,9966,10045,10114,10556,10567,10767,10848,10970,11119,11527,11549,11670,11961,12185,12477,12504,12652,12683,12751,12796,12831,12882,12916,12962,13103,13148,13158,13223,13263,13271,13290,13460,13862,14005,14036,14060,14071,14108,14147,14204,14283,14522,14782,14817,14921,15084,15108,15709,15811,15851,15890,16082,16208,16512,16622,16627,16692,16761,16941,17024,17062,17259,17389,17464,17525,17800,17880,18139,18400,19486,20403,20853,21289,21394,21569,21588,21625,21666,21895,21993,22111,22143,22255,22553,22567,22650,22714,22906,22944,23134,23275,23382,23401,23447,23613,23641,23743,23774,23796,23889,23901,24107,24214,24391],"sacrifice":[7330],"rigs":[9315],"desaturated":[16134],"versatile":[6940,12460,12955],"outwards":[6653,14072,21952],"awoken":[6458,15588],"parallaxoffset":[18269],"based":[271,309,354,379,391,414,464,1053,1135,1173,1329,1751,2005,2011,2078,2151,2168,2206,2336,2348,2464,2872,3188,3394,3627,3640,3665,3890,4021,4074,4277,4654,4954,5119,5131,5188,5790,6387,6458,6659,6999,7149,7714,7802,8003,8034,8224,8287,8402,8738,8997,9260,9486,9675,9705,9913,10029,10451,10978,11049,11149,11344,11412,11480,11525,11803,12051,12309,12518,12937,13022,13166,13205,13846,13923,13989,14205,14672,14892,15340,15414,15473,15508,15600,15906,15929,15946,16081,16134,16193,16224,16233,16297,16382,16410,16556,16574,16658,17050,17523,17639,18542,18659,18692,18940,19588,19846,20367,20464,21084,21289,21343,21405,21489,21573,21615,21648,21941,22123,22456,22571,22677,22950,24019,24399,24601],"mono-scripts":[10795],"conflict":[856,9709,14334,21280,23666],"mysecretdataname":[23420],"extrapolation":[13723],"clr":[24538],"assigned":[400,406,698,1613,1762,1851,2192,2595,3439,3478,3758,4113,4138,5226,5320,5359,5399,5409,7378,8014,8058,8816,9323,9386,10303,10766,11061,11354,11454,12820,12880,13249,14472,17685,18597,21798,21900],"arguments":[6483,8397,8616,8914,10064,11290,11542,13328,14806,18564,20145,20926,21290,22999,23188,23421,24067,24111],"frustum's":[7159],"actions":[323,393,603,882,1047,1296,3505,6449,6961,7795,9215,9675,10877,13183,13271,13273,13285,14278,15656,16046,16530,16696,16945,17066,21617,21993,23638],"connecting":[864,12788,13162,13287,13328,22289,23361,24673],"residual":[14038],"suite":[893],"top-most":[3417,8401],"injects":[24296],"compensating":[5609,7987],"buildabs":[7769],"libraries":[201,299,1103,1558,4259,4536,4628,4699,4792,4829,10415,10468,10945,10967,12751,14495,14518,14684,14847,15396,17348,21362,21670,22388],"down-mixed":[2279],"sizing":[6442],"architecture":[214,736,4816,9254,10410,10767,11810,12185,13282,20822,22485,23123,24169],"dilation":[9220,16303],"reactivate":[22954],"drymix":[2342,2375],"clamp":[4927,5106,5533,6645,9879,11662,14761,16226,20119,20922],"iswriting":[3927],"radii":[16079],"rolling":[2131,5780,5801,21842,21978],"2dphysicsraycaster":[7821],"importassetoptions":[761,1842],"unnamed":[21523],"unity_wsa_8_0":[24351],"pre-play":[23296],"subsystem":[4602,16391,21672],"rampoffset":[16441],"wibble":[13789],"_refractiontex":[19173],"dllname":[12777],"outputting":[1348],"favors":[4954,12882],"_knee":[20313],"blending":[316,354,360,464,1451,1732,1752,1781,2623,2630,4078,4943,5008,9213,9747,11236,11492,11506,12958,15607,16151,17905,18077,18178,18468,18968,18987,19154,19294,19378,20402,21566,21588,21865],"textarea":[8567,11696,24624],"priority":[489,2570,3833,5392,9714,10848,11149,11758,13197,16421],"made":[51,182,316,617,685,838,984,1002,1016,1064,1418,2346,2357,2713,2778,2856,3039,3407,3663,4097,4114,4846,5166,5204,5602,5788,6543,6603,6710,6778,6931,7090,7372,7786,7899,7986,8554,9363,10032,10201,10915,11117,11350,11401,11517,11527,11892,12626,12821,12878,13291,13645,13822,13922,14306,14782,15023,15459,15487,15553,15615,16246,16514,16523,16793,19292,20828,21401,21651,22256,22412,23082,23242,23281,23359,23613,23623,24001,24389,24580,24675],"traction":[5817],"regionminsize":[24791],"srcalpha":[18134,18216,18469],"downsampled":[16036],"browser":[615,3620,7044,9924,10049,10103,11416,11944,12644,14721,14800,14866,15096,15648,15798,22542,23169,23273,23321,23446,23769,23798,23813,23878,23894,23903,23978,24015,24411],"technotes":[22446],"zones":[1462,2548,2559,5206,5819,7149,14142,21948,22185,22236],"aren":[22955],"charting":[23706],"firstparsed":[24627],"kgfxrendereropengl":[12712],"wrapper":[5316,10980,14545,15187,17380,22498],"two-finger":[9615,15882],"field":[436,825,875,1150,1279,1336,1735,1759,2128,2675,3199,3278,4454,4565,4876,4914,5207,7159,7276,7525,8552,9968,10022,10343,11417,11621,11887,13138,13330,14548,14853,15120,16282,16318,16382,16519,16687,16802,17094,17391,18563,21295,21837,22331,22425,22675,22706,22721,22870,22918,23599,23780,24280,24875],"createempty":[7276],"cell-like":[4929],"d04":[22062],"estimation":[10916],"'skin'":[341],"offscreen":[5277,9745,11525],"increments":[14763],"unityaudioeffectstate":[1248],"velocityz":[1758],"getpackingmode":[21485],"greater":[269,1519,2126,2794,2852,3136,4048,4947,5172,5759,6595,8239,9191,11153,11681,12408,12687,13295,13453,13865,14934,15473,15504,16162,16259,16555,16771,18066,18396,18998,19568,21569,21893,21962,22021,23131,24414],"such":[2,34,298,333,366,391,444,518,585,661,674,741,991,1111,1232,1348,1533,1613,1755,1861,2064,2156,2202,2225,2467,2655,2659,2750,2856,2860,3041,3582,3762,3814,3830,4104,4141,4158,4169,4522,4647,4704,4800,4848,5045,5205,5344,5431,5500,5832,6404,6543,6597,6603,6610,6612,6614,6661,6680,6780,7382,7759,7900,7941,7981,8075,8085,8099,8163,8341,9184,9259,9566,9614,9700,9725,9852,9947,10004,10029,10423,10707,10848,10928,11133,11175,11209,11257,11350,11463,11541,11711,11781,11937,11947,11991,12194,12887,13117,13163,13271,13309,13326,13455,13576,13633,13846,13924,14010,14039,14047,14069,14184,14204,14213,14220,14290,14752,14783,14878,14937,14974,15235,15569,15584,15935,15938,15975,16007,16118,16189,16241,16357,16382,16459,16578,16615,16658,16673,16735,16934,17045,17095,17239,17366,19240,19520,21289,21356,21386,21546,21575,21677,21809,21829,21847,21895,21897,21924,21973,22026,22364,22387,22568,22664,22681,22710,22733,22858,23364,23449,23630,23979,24287,24311,24361,24389,24527,24651],"borderline":[18045],"imageeffecttransformstoldr":[9206],"cmd+shift+7":[23065],"oncollisionenter":[430,6449,6933,7797,14123,15021],"degree":[4154,5183,5382,6976,15954,15988,16246,16412,16661,16680,16713,17007,17163,18033,21882],"hw":[4342,22436],"dx11-level":[7121],"inelegant":[22829],"reusing":[19036],"rows":[4933,8614,16455,17436,20928],"regularly":[842,6913,9334,10539,13306,13772,21993,22320],"illuminating":[11223,13921],"patrolling":[3830],"0x0":[22409],"current":[157,252,312,326,534,670,687,885,1147,1284,1337,1416,1489,1797,2015,2126,2201,2702,3199,3509,3556,3619,3802,3867,3898,4476,4734,5090,5099,5371,6543,6834,7397,8090,8170,8285,8883,9208,9514,9725,9763,10054,10587,11228,11557,11635,11861,11871,12227,12606,12650,12807,12847,13289,13449,13712,14289,14306,14317,14566,14856,15009,15060,15084,15103,15192,15335,15520,15647,15844,15873,16061,16104,16534,16706,16731,16953,16990,17074,17111,17188,17908,17931,18695,18963,19554,20460,20692,21617,21827,22249,22282,22438,22623,22639,23294,23310,23609,23649,23705,24032,24422,24675],"edge":[183,1519,3020,3038,3089,3347,3428,4846,5200,5580,5824,6592,8009,10684,11198,11731,12934,13135,13217,13822,14225,15102,15332,15909,15936,16246,16355,16364,16518,16722,17134,17177,18040,19082,19513,20457,21405,22188,22240,22867,24016],"routing":[1131,1329,1393],"breakdown":[2208,3426,10812,15038],"addforce":[5147,6759,7785,10876],"guess":[21408],"travelling":[14029],"container":[1112,23269,24428],"pcube17":[3659],"logicalor":[18202],"pointerreleased":[24060],"l":[1669,2352,9609,15110],"non-contiguous":[3663],"repositories":[6698,6702],"mycolors":[19102],"impostor":[14880],"catch":[4451,4658,5164,5864,12819,13804,22024,22397],"grain":[9867,16577,16607],"shrinks":[16739],"ps1":[24197],"successfully":[1029,11940,13665,22913,24280],"fun":[1324,3659,6976,12451,23997],"choices":[11959,12043,13285,21971],"bindata":[5462],"non-private":[24661],"appids":[22918],"color-value":[19013],"pane":[10302,15003,15078],"vertrices":[3706],"_myvector":[19185],"standard_13":[15706],"getchainoftrustvalue":[23439],"destroying":[1231,4057,6742,6925,12201,12581],"shader_api_metal":[18293],"member":[666,7339,7675,12633,13880,14580,20019],"negatives":[9993],"adjusting":[394,712,2817,3196,3887,5141,8890,21408,21917],"rad":[1749,1777],"computer":[263,580,836,1488,1608,2124,2421,3684,4444,4714,5257,6412,9947,10102,10558,11953,12346,13284,13423,13772,13841,13889,14983,15081,15215,15809,17391,21658,22092,22256,22287,22320,22914,23151,23626],"candidates":[6714,11199,15342,15958,15993],"patch":[9253,16794,18678,20652,21891,24223,24282],"intentional":[3612,4141],"dealt":[22258],"appid":[22918],"disclaimer":[17079],"specifying":[2627,3248,5224,5323,5758,8781,9615,10080,11136,14285,16556,24445,24673],"maintain":[605,624,752,906,1064,1247,2223,5372,5381,5801,6443,10484,10849,10978,12206,12590,16512,21912,23729,23743],"evaluate":[14844,22444],"slerp":[2887],"ti":[1524,21465],"'editor'":[7483,14851],"malideveloper":[11814],"highp":[11750,13950],"getblendshapeweight":[1703],"unity_cameraworldclipplanes":[20718],"publications":[16084,22864],"convenience":[1212,4106,4454,4565,7384,9187,10020,14007,14544,14943,15869,17346],"lossless":[8075,9267,23159],"illumination":[181,3587,6865,8160,8295,11132,11146,11209,13918,15528,17643,18037,18281,19320,20209,20430,21559],"acceleratorkeyactivated":[24064],"passwords":[11723,17411,22956],"mali-t604":[15684],"texgen":[18711,19177],"srcfactora":[18184],"fold-out":[311,325,369,438],"afraid":[929],"nowadays":[14582,22735],"non-metal":[20372],"dummy":[10423,14510,14721,18600,22456,24292],"ball-socket":[2822],"instantly":[2138,2876,4046,6874,16538],"gestures":[15759,15895],"''randomness'":[10953],"unlocking":[23652],"unity_web_path":[23460],"distancethisinterval":[12429],"envelopes":[1324],"fnt":[5451],"rear-view":[2694],"probe-based":[3754],"individually":[2759,7370,10057,11205,12333,12695,13846,14278,14751,14782,14801,16126,16598,21644,22652],"cooling":[14102],"spritepackingrotation":[21434],"glowy":[12322],"recognises":[14334],"u":[187,7011,8040,8313,9935,22162,23179,23392,23419,23491,23909,24467,24715],"sakes":[24654],"positiveinfinity":[13055],"interfere":[6962,12733],"internet":[72,1598,2048,4403,4531,10091,11407,11730,13309,13749,13763,14928,15812,17368,22325,22535,22924,23401,23461,24199,24302,24400],"diagram":[377,396,705,1185,1736,1761,2193,2555,2621,7147,7937,11453,13274,16167,21618,22898],"neccessary":[5149],"exhaust":[14063],"crouches":[13273],"kgfxrenderergcm":[12715],"front-faces":[18472],"android-sdk":[197],"togglegroup":[22693],"everyday":[18040],"sanity":[9339],"pasted":[23294],"currdistance":[7187],"separately":[244,595,741,3545,4106,4174,4522,5627,5783,6647,7109,9186,10062,11147,11919,12311,12687,14139,14786,14876,15971,16003,16158,16328,17019,19246,21920,21957,22258],"yourpassword":[1544],"rigidbody's":[2977,5129,23272],"moveto":[13095],"scientific":[11923],"paypal":[952,1011],"'at":[1153],"zdrive":[2884],"additive":[360,464,5291,8265,9587,11855,12048,12590,12786,14108,18226,18355,18968,19032,19051,19240,19528,20068,20412],"view's":[694,5491,13568,13628],"spherical":[3003,3567,4983,5354,5581,5824,6420,11198,15516,18827,19439,20743,21652,21952,22114],"angry":[24525],"killall":[23167],"surfaceeffector2d":[6063],"-screen-width":[6558],"guid":[793,11354,13365,24897],"dep0600":[24203],"textureimportersettings":[21468],"nine":[13448,15297],"navmeshes":[12786,13269],"closed":[7934,9743,12542,13182,17360,18383,21437,24054],"_disptex":[20468],"bridge":[1233,10840,14669,24024],"sparser":[21922],"a+xr":[9668],"unityaudioeffectdefinition":[1218],"adid":[24334],"standardshadergui":[18547],"shuffling":[15279],"spawning":[3093,3714,15234],"choke":[12285],"getjoysticknames":[10856],"filled":[291,1608,2130,5018,6443,10473,15471,16501,16555,20357,22725,22817,24642],"object's":[166,436,665,677,684,2122,2139,2652,2783,2891,2973,3033,3079,3125,3476,3493,3543,3604,3619,3697,3748,5023,5142,5186,5289,5335,5351,5360,5380,5395,5723,5807,6442,6753,6868,7159,7776,7931,8058,8128,9210,10021,10042,13227,14074,14180,14240,14750,15534,16284,16320,16382,17526,18881,19518,20043,20692,21546,21643,21967,22018,22121,22277,23273,23386,23436,23605],"international":[3199],"zoomdistance":[2107],"lightingtonemapped_standardlightmap":[20335],"dying":[21372],"represent":[398,603,661,1755,2130,2156,2209,2990,3241,3532,3617,4003,4968,5876,6442,6667,7825,8584,9612,9918,11136,11205,11947,12472,13157,13305,14038,14204,14213,14220,14259,14550,16709,20845,21569,21618,21829,21965,22253,22879,23377,23386],"reaction":[13188],"runserver":[6367],"player's":[309,489,2693,3571,5818,7104,13305,13718,13739,13924,15396,23176,23900,23985],"shoots":[489,12570,13273],"maneuvering":[15838],"start-up":[1541],"one-column":[15104],"attraction":[14149],"hh852363":[24224],"olive":[21731],"reason":[442,883,1312,2048,3818,3892,4444,4714,5211,5299,6510,6665,6760,7141,7941,7994,8245,9373,9679,9709,9735,10075,10201,11354,12207,12602,12797,12889,12959,13155,13223,13265,13271,13464,13497,13907,14315,15061,15087,15137,16838,17796,21701,21976,22625,23262,23685,23790,24013,24379],"shift-dragging":[3047],"'non-optimized'":[5313],"accelerometerupdateinterval":[11672],"m_gameobject":[8066,24840],"gl_eyeplanes":[19119],"myfloat":[7517,7667],"toolbarstrings":[8603],"misc":[4482],"performbuild":[6526],"probe":[3588,3756,4072,4982,11195,21652,21865],"suddenly":[4002,9559,10103,13724],"regroup":[7309],"193px":[23550],"achieve":[589,1905,2693,2870,3091,3133,3621,3715,4927,5739,5788,7312,10022,10451,10776,11356,11909,11981,12295,12604,12950,13774,14252,16563,17196,18030,19513,21613],"pages":[194,319,607,739,1462,1471,2364,2370,2643,3062,4106,4757,4810,5200,6445,6593,8114,9368,10972,11547,11963,13996,14281,14323,15068,15586,15900,17787,19380,20387,21623,21653,21957,22440,22604,22945,23447,23607,23621,23881,23988,24184],"infra":[21561],"c-sharp":[6942],"tessdistance":[20570],"sub-menu":[16055],"earthly":[9867],"stretched":[187,3362,3772,4077,5106,5533,14191,16260,16643,21839,21960,22723],"domain":[1208,1510,7127,17266,19476,20458,23205,23880],"production":[1317,1844,3621,5457,6484,7279,11963,11978,13871,23447],"bb10player":[1543],"demanding":[3617],"gc":[12201,12541,15009,21674,22741],"lightning":[2358,4097],"omap":[1524],"'business":[10028],"math":[11782,12390,19281],"corners":[182,7825,9720,12818,13065,13162,16518,17159,20603,21403,22638,22723,22870,23393],"layering":[389,488],"contributes":[2633,15068],"days":[958,1037,13881,17088,18056,18140,18860,19256,22092],"rudimentary":[12485],"developers":[838,1092,1397,1632,4603,6719,9233,11944,11976,12451,15230,17377,19391,23401,23901,24044,24539],"gradual":[3028,21897,21940,23721],"subtract":[6647,7114,15251,18190,18957,19281],"stunning":[12282],"lightprobe":[11898,12131],"tonemapped":[20309],"unitywwwcustomrequestprovider":[10346],"interpolateview":[20437],"assist":[3062,8086,9934,14036,16330,17237,23386],"foopluginfunction":[12757,14504,14679,14713],"inactive":[4205,4691,4767,7087,7899,12581,23209],"rigidbody-based":[12484],"encodeviewnormalstereo":[18275],"keeps":[392,772,2169,3034,6680,7403,10970,14204,16061,17272,18037,22023,22740],"unity_pass_prepassbase":[18358],"1080p":[10612],"alter":[911,1135,1614,1783,2494,5160,7663,13271,13767,14748,15856,16175,20414,22917],"updated":[407,879,2201,3870,4944,5096,5277,5786,6680,8162,10473,11474,11525,12206,13021,13292,13721,14715,14935,15017,15060,15073,21619,21685,21931,22023,22116,23978,24052,24551],"reference-client":[17442],"passively":[3487,14325],"animationclips":[578,15599],"un-ticked":[4227,4671],"boxes":[3274,5054,6442,7384,8113,9109,10161,12194,14870,17259,21907,22253,22492],"10x":[11733],"brightness":[181,3540,3560,6858,8090,9183,12325,14108,15520,15969,16001,16158,16201,16246,16256,16580,16941,17007,23377],"clarity":[706,14597,16259,24654],"forward-suitable":[19241],"guys":[10873],"autolight":[18251,20734],"updaterotation":[13211],"hh780905":[24208],"shader_api_xbox360":[18298],"consequence":[582,12204,18044],"higher-than-normal":[10022],"shooting":[352,358,490,12483,12938,22257],"millimeters":[16128],"setselected":[9795],"uint3":[6631],"words":[2694,5513,9729,10767,12542,15113,17207,18064,21567],"leftwards":[13839],"trends":[11963],"identifying":[13330,24423],"pseudo":[10925],"alongside":[1979,5151,15211,24391],"pngs":[11853,12594],"filling":[329],"pinched":[14872],"publishing":[241,1488,1603,4173,4552,4712,4771,4805,10427,10953,11338,15188,15835,22287,22978,23132,23780,23798,23992,24301,24521],"deletes":[12206,22249,23756],"mipmap":[3016,5002],"despite":[12797],"nslider":[9124],"lod_fade_crossfade":[3625],"switched":[1393,1905,6453,7091,11173,11702,13839,13924,14112,15585,16518,17068,17082,17939,22929],"spline":[5791],"ieventsystemhandler":[11531],"shrunk":[12916],"diverging":[14244,22870],"log_uniqueid":[11319],"solidified":[5739],"approaches":[9310,11807,12833,13286,15170],"plugininspector":[24358],"offending":[22400],"32-bit":[920,4291,4502,4584,6496,10068,12182,13947,14686],"gl_oes_compressed_etc1_rgb8_texture":[1499],"-y":[5322,5586],"drawer":[7538],"texturelayout":[3155],"htaccess":[23790],"mashing":[12456],"enclose":[3039,4846,21693],"worldnormalvector":[20452],"k_opentransitionname":[9767],"reassigned":[22740],"arise":[877,13326,16081,22258],"cellheight":[24782],"panels":[11117,14792,23091],"weighted":[2645,14292],"particlesystem":[6022,14084],"upsampled":[8199],"plugin_teebee":[1324],"os10":[1547],"universalapp1":[24366],"replacemement":[19392],"powers":[5648,12456],"square-on":[7145],"views":[688,1136,1334,1436,2694,3892,7082,7462,10057,11117,12655,13503,13562,13708,13731,13771,13995,14644,15132,17259,22090,23091],"properties-":[18562],"mentioned":[1230,6492,6715,6744,8402,9537,11152,13311,13328,13628,14734,14786,15343,16081,18040,18576,21354,21953,22831,23156],"threading":[12504,23895],"aim":[986,1755,4145,4932,13273,13306],"editoronly":[21803],"michael":[11953],"remaps":[16224],"myclass":[15629],"showfirstpersonview":[12666],"events":[170,263,318,321,664,1519,2188,2650,2744,2770,2781,3668,3867,3883,5145,5349,5710,6463,6614,6868,6940,7776,7802,7908,8085,10027,11521,11528,11684,11718,12496,12700,12754,13298,13565,14644,15019,15104,15335,15725,16048,16532,16704,16726,16954,16963,17072,17110,17201,17234,21621,21631,21751,21993,22681,22986,24052],"incrementally":[14845],"transmitting":[3055,13448,13712],"masks":[362,379,2186,2628,3542,6674,9231,11257,11487,15429,15457,15485,16558,19589,22731],"false":[68,411,649,1540,1716,2763,3086,3704,4019,6918,7051,7181,7242,8584,9658,9681,9748,10311,10456,10857,11263,11302,11486,11550,11719,12245,12664,12834,12998,13499,15234,16744,19779,21305,21517,22475,23217,23503,23903,24030,24398,24627,24681],"viascripting":[5094],"m_lightprobeanchor":[24900],"simulator":[1536,4351,4633,6407,10443,10940,21667,22920,24176],"map's":[11159],"rises":[14066,14155,15058],"altering":[5147,13823,15237],"whilst":[1096,6495,15137,16637,17349],"essential":[468,2693,3629,8138,10774,11211,13752,17234],"priorities":[5397,13220],"computation":[10849,13848,13919,19285],"studios":[391],"r1":[10897],"safe":[4359,4641,5262,10473,10845,10921,13715,14604,21408,22430,24287,24318,24441],"newest":[1200,9503,13725],"star":[1433,13160],"p4merge":[893],"appropriately":[707,8165,9323,13570],"bbndk-env_10_1_0_1020":[1565],"subsequently":[155,2008,22106,22735],"establish":[8138,23162],"refine":[1428,6443,6976,10049,14831,23296],"clouds":[3094,3715,4104,5578,9569,14017,14184,14204,17013],"indic":[9947],"unity_unityobject_url":[23462],"lot":[401,532,836,1288,2840,3226,3302,3746,3866,3997,4645,5242,5512,5873,6447,6590,6919,7309,7438,8097,8126,8154,8888,9346,9425,9569,9623,9962,10136,10451,10968,11198,11354,11499,11873,11945,11978,12196,12454,12810,13174,13285,13917,13974,14102,14543,14828,15009,15087,15711,16076,16319,16715,17795,17819,18104,18353,18884,19221,20652,22023,22444,22567,22703,23296,23443,23894,24013,24538],"oldest":[14198,15084,23980],"pointed":[9855,16964],"stages":[6714,8197,13273,14261,15018,18158,19284,19588],"superimpose":[535],"setups":[1153,2466,4222,4669,6404,11506],"low-frequencies":[2517,2537],"consuming":[1145,9246,22362],"#c0c0c0ff":[21735],"nacks":[13717],"unit'":[1153,16100],"languages":[3198,5221,6941,12204,14719,17820,19443,20353,20826],"fixedjoint":[5976],"softened":[12322,21844],"occluder":[13847,21648],"notion":[13061,14829,15084,22245],"circlesy":[20949],"parsed":[8075,17318,21957],"quotes":[10071],"marginally":[17456,17467],"armor":[11925],"mean":[960,5248,6692,9571,9593,10782,11256,11947,12342,12698,13303,14889,15012,18374,24363,24669],"exposition":[11870],"modifying":[819,1405,2072,2586,5518,6462,6717,6742,6993,7314,10033,11356,12609,15588,19283,23382,24382],"mypostprocessor":[1900],"thicker":[16374],"playable":[10901],"began":[11622],"cinema4d":[17,5303,7968,9280,24379],"kallithea":[6708],"uploaded":[833,959,1038,1609,12226,15663],"visualisations":[8207],"customize":[2064,3528,5232,6992,7082,7533,9585,20147,23988,24391],"spent":[10801,10905,11972,12446,12514,14956,15003,15086,15588],"bullet-time":[5712,22026],"offsetunits":[19019],"stick":[1480,3133,3866,9726,10873,12223,15345,15788],"kinematic":[5128,5185,6453,12608,13192,15237,15585],"fetches":[14670,17297],"heapf32":[23830],"responsibility":[11934,11960,12740],"fading":[2768,3621,5616,6874,14072,14109,16411,19779,20402,23721],"'screen":[16121],"drawcalls":[8082,12491],"surveillance":[2725],"invaders'":[12456],"2d":[213,1752,1781,2216,2227,2426,2559,2643,2656,2722,2857,2981,3027,3038,3064,3263,3397,3407,3486,3561,4104,4108,4134,4149,4157,4831,4845,4968,5177,5329,5374,5387,5418,5430,5486,5511,5664,5689,5800,6421,6442,6603,7463,7821,8231,8693,9851,10872,10970,11201,11878,12055,12283,12462,12957,13930,14003,14017,14204,14318,14321,14326,14752,15237,15337,15586,15853,15873,16193,16421,16621,17204,17805,17844,18001,18083,18234,18416,18508,18580,18779,18921,19144,19187,19210,19298,19787,19811,20171,20467,20791,21570,21829,21963,22103,22637,22727,22901,23713],"scope":[3641,6945,9315,9621,14535,22740],"magic":[3107,3728,10033,14017,14039,14054,14204,20353,21973],"unity_winrt_8_1":[24355,24519,24530],"styles":[3271,3333,8774,21689],"halo":[3436,3567,3746,5960,11925,19531],"enhancing":[16138],"activation":[6521,7087,11403,11406,13875,22324,22942],"edu":[16081],"gift":[15249],"releasing":[1547,4451,4658,10406],"uppercased":[20778],"softly":[5827],"onclick":[22686],"efficiency":[9627,12530,12916,13861,14007,15877,17024,21856],"gfxbench":[10587],"shader_api_psm":[18300],"taste":[2735],"enc":[18273],"derivatives":[19097,19489],"workings":[3846,3874,6960,9925,13113,13127,13154],"returned":[316,1232,1519,2078,6839,12617,13328,14510,14721,15327,18370,18604,20411,20845],"request'":[6727],"dictated":[1416,8772,13068],"m_backgroundcolor":[24866],"planet":[23379],"medium":[2277,3166,3994,4947,7156,11164,15434,17088,17093,19444],"root":[168,279,349,433,528,684,902,1743,1767,2166,2199,2622,2641,5279,6385,6442,6509,7109,8025,8137,9505,9731,10071,10211,10473,11515,12391,13200,14689,14835,15101,15196,15237,15575,15589,16762,16854,17197,17206,17286,19382,21631,22109,22195,22246,22339,23189],"il2cpp":[4254,10404,23772,23812,23863],"unsharp":[16245],"edit-":[848,1488,2021,2430,2702,3506,3878,6814,7942,9420,9543,10451,10844,11052,11294,13761,13764,14764,15236,17278,23628,23750,24017],"unity_orthoparams":[20715],"model'":[8023],"newbehaviourscript":[14586,22506,23844],"callable":[3955],"collectable":[12282,12476,21772],"beta":[10430,23464,23984],"merge-tools":[21312],"limb's":[2856,24389],"decimal":[3203,8075,19444,22695],"rigidbodies":[575,2801,3133,3447,4137,4840,5121,5201,5283,5356,5383,6453,10114,11796,12462,15072,15582,21991,22024,22127,24377],"astronaut":[399,18040],"deg":[1750,1778],"elem":[15255],"retrieving":[14561],"search":[156,825,3636,4778,4814,7381,7989,9258,10048,11527,11985,14800,15099,15276,17257,22425,22741,23274,23733],"exploit":[11932],"getgroundhit":[5786],"inferred":[8149],"perspective":[2123,2671,4916,7133,7158,8126,10021,11155,13297,13822,15852,15889,17522,20715,22675,22866,23728,23993],"invert":[3521,6828,16223,16441,18199,18699,19584],"enum-based":[1290],"trying":[2870,3094,3199,3715,3866,5730,10616,11581,12194,12537,13075,13163,13216,13777,14353,17353,22291,23190,23878],"'http":[23205],"argb2101010":[15500],"deleting":[901,1410,1660,21437],"gain":[1153,1288,2314,2487,2497,12030,15346,20312],"gives":[377,603,1112,1211,2139,2641,2841,3055,3711,3994,4040,4949,5285,5791,5817,6858,7110,8085,8128,8162,9614,10020,10199,10828,11237,12194,12456,12519,13024,13263,13774,13791,13843,14073,14204,14228,14319,14321,14323,14325,15114,15243,15562,16165,16284,16320,16755,17935,18963,20776,21401,21576,21703,21890,21960,22162,22255,22934,23006,23296,23619,23985],"randomizing":[23436],"sizechanged":[24056],"mcc":[14635,22313],"onmousexxx":[7795],"fwdspeed":[167],"behaviourwithtree":[16873],"normalize":[486,2486,6656,11664,12097,13942,18740,19869,20256],"bumped":[11441,17443,17447,17501,17538,17542,17686,17690,17695,17699,19426,21427,21575],"react":[2802,5145,5202,6460,7795,13466,15245,21571],"structuredbuffer":[19102],"abstract":[2737,11136,16809,17159,21967],"major":[1471,3888,5298,6458,6962,10021,11986,13285,14386,17375,20780,22323,22430,22714,23376,23978],"4-component":[18324],"-buildwindows64player":[6506],"gentler":[15971,16003,17019],"issues":[219,600,903,2049,5135,6424,8246,9336,9425,9517,9544,9593,9924,10575,11527,11847,12229,12460,12781,13311,13775,14315,14502,14677,14716,15026,15670,17331,22112,22957,23685,23774,23812,24606],"comprised":[19390],"forget":[276,929,5492,13805,14496,14715,22438,22918,24563,24642,24665,24705],"multi-touch":[10565,11612,24550],"next-generation":[11861],"sepia":[16785],"above":[255,396,597,648,684,880,1096,1157,1279,1360,1403,1606,1795,1850,2016,2965,3005,3619,3634,3804,3927,4822,5004,5160,5210,5792,6371,6402,6445,6492,6593,6633,6969,7014,7141,7391,7958,8072,8228,8402,8804,8934,9031,9612,9750,10133,10300,10432,10953,11047,11152,11261,12309,12604,12612,12688,12877,12916,13020,13104,13278,13615,13982,14074,14117,14480,14545,14734,14786,15009,15100,15194,15474,15520,15893,16084,16162,16259,16590,17054,17377,17813,17899,17990,18040,18096,18184,18334,18503,18576,18613,18706,19219,19238,19271,19922,20441,20504,20984,21296,21395,21693,21843,21893,21953,22420,22542,22621,22817,22867,22877,23156,23249,23431,23634,23783,23865,23889,23911,24001],"subclassing":[14644],"surfaceoutputstandard":[20368],"executes":[6533,6875,7309,7894,12652,22546,22616],"cmd+shift+z":[23044],"restart":[451,1073,2163,5027,6424,7044,11578,14349,14990,22379,22918,23164,23605,23940,24475],"cgfx":[17800,17820],"combined":[1153,2156,2217,2557,2641,2788,3351,3631,6498,7330,9719,10068,11903,12655,12687,13922,15964,15997,16520,16716,17009,17575,17658,17738,17757,18180,19283,19874,21576,21603,21655,22049,22682],"cookies":[3579,5527,6855,8262,9568,10352,11147,15422,15455,15483,15534,15560,17525],"rand":[23336],"tessellated":[20605],"chuck":[12367],"thin":[2655,3593,5117,5788,6865,9255,11206,14307],"play":[242,263,323,450,470,733,1324,1338,1403,1459,1701,1737,1763,2145,2163,2278,2475,2568,2619,3397,3629,3767,4002,4433,4561,5119,5405,6451,6679,6970,7277,8117,8373,8885,9583,10135,10339,11917,12611,12648,12812,12964,13109,13327,13451,14076,14112,14181,14440,14957,16217,16268,16438,16574,16749,17205,17220,17371,18557,20166,21368,21375,21414,21560,21619,21627,21967,22023,22088,22093,22185,22196,22236,22548,22563,22862,22914,23053,23134,23272,23350,23600,23979,23993,24386],"snow":[21897],"hingejoint":[5128,5918],"npapi-style":[22546],"consolidating":[9597],"addnodetoserializednodes":[16892],"particles":[3068,3437,3686,4030,4074,4106,4943,5512,5857,6603,9575,10449,11446,11742,11881,12301,12472,12490,13898,14019,14047,14054,14059,14070,14100,14142,14149,14157,14173,14188,14213,14215,14222,14252,14259,14264,14278,14285,14294,14302,14880,15010,15426,16134,18603,21955,21972,21991],"winmerge":[891],"reconstructiondx11":[16072],"conflicting":[14335],"unity_lightcolor":[20737],"noise":[1135,1280,1360,6866,11670,16075,16577,16601,21836,21978,22160],"sp":[3813,20864],"manufacturers":[12509],"thinks":[6672],"humanoid":[297,370,384,588,1468,1633,1786,2192,2610,2621,7973,8023,8135,10292,11499,12949,13090,14825,15561,15615,17206,23357],"capping":[22148],"-d":[911,17425],"nasty-looking":[4063],"'bumped":[9306],"trans":[18416],"blendtime":[13057],"refractions":[5096,8283],"summarizes":[10587],"+size":[23830],"initiates":[21420],"-k":[23405],"locomotionsimpleagent":[12985],"m_castshadows":[24892],"constructing":[15227],"prompt":[671,6365,6453,6484,11408,14990,17430,22549,23354,24655],"-executemethod":[6508],"updating":[442,871,1067,3861,4961,5003,6692,7279,7809,9964,11401,12496,13772,14460,15588,15633,22305,22486,22777],"optionally":[328,666,1456,1755,3580,4358,4640,4961,5000,5330,5801,6492,6635,6932,9531,9559,9691,11260,16735,18057,18983,19274,19385,19737,20459,21414,21708,21967,22569,23159,23450,24558,24567],"-r":[9668,23309],"standardizations":[1322],"bypassing":[2484],"serializedfile":[24720],"matters":[12367],"spot-checking":[4002],"custom":[225,312,355,742,1160,1230,1345,1403,1792,1968,2118,2511,2529,2582,2708,2776,3201,3293,3333,3582,4191,4507,4589,4678,4757,4789,4987,5205,5431,5487,6591,6760,6998,7402,7465,7536,7802,7917,7939,8124,8290,8805,9179,9208,9318,9675,10041,10056,10198,10386,10473,10567,10925,11175,11527,12282,12474,12892,12950,13945,14450,14614,14910,16648,16809,17234,17913,17915,18141,18361,18485,18495,18573,19029,19385,19421,19791,20132,20165,20353,20506,20789,21338,21370,21404,21420,21670,21747,21752,21862,21905,22210,22224,22278,22454,22610,22656,22999,23148,23382,23400,23449,23726,24105,24221,24391],"transparently":[9614,15588,17331],"previous":[45,314,360,535,723,839,1288,1352,1604,1798,1902,2844,3758,4492,4748,4960,5131,5188,7156,8164,9566,11480,12033,13466,13727,14155,14939,15219,15647,16571,16798,17908,18024,19268,20908,21372,22760,23214,23980,24202,24318],"folders'":[21352],"high-dynamic":[19164],"accelerate":[2138,2969,2982,3464,4052,6622,14155,14325],"m_name":[8052,24810],"initiallyopen":[9758],"seams":[3649,5587,8010,13912],"val+":[21060],"per-project":[10928,11239],"reduce":[30,1135,1365,2018,2294,2628,2795,3869,4353,4538,4635,5002,5206,5385,6924,7146,7328,7970,7993,9268,9446,10774,10905,10942,11119,11154,11265,11286,11746,12182,12446,12606,12804,13306,13445,13753,13844,13903,14038,14072,14103,14886,15346,15445,16165,16300,21873,22440,22926,23364,24016,24550],"imagine":[2118,5206,7114,7141,12227,14891,16195,17282,18036,21343,21810,22867,24046],"orbiting":[15869],"insight":[10782,16167],"incredible":[23296],"discretion":[17402],"managed'":[1493],"cores":[12504],"'light'":[16060],"bristow":[1297],"alarming":[11948],"carves":[13179],"15th":[978],"lights":[2696,3532,3553,4200,4688,4764,4939,5402,5527,6856,6989,7153,7325,8235,8291,9315,9448,10032,11055,11127,11141,11145,11208,11210,11230,11454,11755,11888,12283,13900,13985,15404,15444,15455,15483,15514,15558,17454,17520,17550,17558,17639,17795,17994,18033,18281,18886,19032,19050,19240,19439,19458,19806,20428,20733,21543,22275,23372,23716],"m_father":[8071,24845],"moveassettotrash":[772],"bit":[184,221,1283,2719,3532,4816,5103,5515,5678,5700,5799,6447,6963,7859,8944,10403,10435,11069,11354,11683,12378,12934,13068,13567,13746,14110,14488,14609,15487,17364,17402,17532,17837,17994,18045,18104,18369,18600,18606,19541,20652,22567,23892,24274],"fakedll":[24663],"activity":[3888,10798,11554,12555,14580,15051,22307,22368,22436,24549],"outward":[181,5417,14100,14244],"res":[4307,4597,4940,6629,9630],"eye-catching":[12039],"fillrate-bound":[11778],"keyframed":[15600],"presence":[933,13312],"winrtlegacy":[24257],"punchthrough":[13309,13326,13443,13773],"sincerely":[1315],"renderer":[1055,1495,1529,1699,2771,3048,3142,3551,3591,3620,3678,3747,3785,4065,4856,5034,5267,5386,5715,5897,6351,6550,6603,6871,7314,9578,10201,10765,11204,11525,11754,11970,12051,12378,12515,12599,12616,13852,14008,14070,14105,14187,15010,18041,19496,20810,22126,22277,23388,24886],"mutually":[3485,17088,22692],"tightpackerpolicy":[21424],"resonance":[2384,2392,2401,2417,2437,2445,2456],"goal":[3818,7309,9720,10319,12331,12949,13099,13253,13265],"flowchart":[7936],"texure":[21401],"runtime":[28,236,367,747,1103,1110,1335,1397,1453,1905,2275,2478,2620,3191,3255,3570,3903,4006,4358,4640,4726,4807,4958,4993,5096,5456,5796,6680,6761,7330,7970,7994,8128,8242,9020,10033,10104,10405,10482,10569,10822,10900,10925,11138,11285,11351,11496,11853,11962,12594,12611,12760,12897,12916,13149,13271,13842,14787,14883,15594,15700,16208,16796,16953,17024,17191,17199,17297,17943,18678,18936,20430,21356,21413,21669,22434,22546,22632,22735,23262,23436,23772,23799,23863,23979,24139,24282,24538,24642],"mcs":[23308],"spritepackingtag":[21484],"kmaxsamplerate":[1222],"fileoperationsexample":[774],"type":[4,151,234,329,360,663,742,762,875,1053,1196,1533,1558,1610,1614,1687,1733,1753,1790,1931,2139,2149,2280,2586,2633,2872,2998,3054,3267,3405,3517,3556,3621,3634,3810,3837,3896,4021,4319,4504,4909,4946,4987,5103,5207,5519,5837,6440,6487,6640,6714,6760,6829,6859,6883,6960,6983,7139,7276,7339,7378,7583,7969,8028,8136,8141,8396,8781,9446,9481,9572,9667,9677,9696,9965,10033,10416,10578,10872,11127,11249,11260,12559,12696,12702,12880,12957,13327,13438,13880,14266,14351,14467,14550,14748,14782,14882,15081,15099,15139,15343,15617,15638,15717,15856,15898,15956,15990,16170,16297,16370,16501,16525,16706,16722,16807,16956,17054,17074,17250,17257,17347,17802,17864,17996,18039,18283,18326,19182,19206,19233,19443,20694,20874,21295,21400,21434,21575,21588,21617,21901,21919,21973,21981,22143,22205,22224,22404,22721,22817,22918,22997,23282,23310,23358,23373,23392,23404,23588,23732,24107,24206,24259,24391,24561,24587,24642,24669,24897],"worked":[7091,14353,23259],"'bloom'":[9191],"ended":[11628,22020],"serialization":[151,1964,3061,4485,4741,8039,16790,22456,23633,24296],"check":[72,245,966,980,1013,1296,1577,1639,1704,1937,2285,2605,2612,2698,3265,3397,3444,3535,3841,3890,3986,4190,4507,4589,4678,4756,4814,5167,5252,6436,6663,6714,6817,6970,7110,7955,8336,9238,9313,9461,9511,9532,9559,9629,9734,9766,9952,10103,10302,10460,10504,10870,10953,11171,11220,11247,11267,11548,11904,11976,12194,12642,12908,13331,13699,13803,13880,13890,14351,14510,14721,14829,14870,14964,15204,15251,15400,15643,15700,15818,16310,16794,17263,17817,18311,18557,19082,19222,20068,20809,22210,22274,22288,22339,22438,22836,22922,22956,23160,23190,23608,23641,23754,23776,24021,24107,24128,24197,24358,24529,24567],"profiler's":[10784],"cubemapped":[5661,12190,19924],"cmd+alt+3":[23070],"punctuation":[11702],"'start":[1433,13884],"somescript":[12761],"irregularities":[7993],"astrella":[399],"simultaneously":[1288,7158,11613,11730,12457,12617,15971,16003,17019,21646,22553,22939],"fixed3":[12086,17964,18270,20087,20360,21031],"z-cull":[11790],"regardless":[265,313,622,1206,1600,2127,2203,2706,4050,4168,4958,5417,8126,14036,14062,14202,15385,15456,15484,15877,16094,16162,16512,16956,17640,17802,19207,22093,22106,23234,24353],"m_targettexture":[24883],"ssl-webplayer":[24391],"webworks":[1600],"cmd+x":[23045],"stretch":[2131,3068,3362,4075,5282,9109,9691,10970,14204,15959,15994,16255,17464,21907,22650],"normal's":[21195],"dumpcount":[24153],"message1":[11533],"tetris":[17282],"refunds":[940,1002],"guard":[12819],"unity_4_3":[14399],"faced":[11400,11410,13879],"dictionary":[10986],"coroutine":[73,6875,7923,9815,22400],"explosionprefab":[14132],"video":[286,1417,2725,3766,4963,6547,9623,9914,10025,10558,10593,10963,11163,11866,15052,17567,21368,21413,21966,22042,22261,22306,24022],"distinctive":[10041,13330,15904,15938,15975],"stereotypical":[12287],"frame-select":[7355],"centred":[1645],"duplication":[9244,20774],"vastly":[15938],"pairs":[14836,19045,19755,21715],"unityshadercompiler":[5254],"unitysendmessage":[14584,14723],"div#unityplayer":[23561],"front":[2743,4912,5044,6644,6675,8997,9785,10021,10604,11454,11648,11767,15474,16421,18116,18383,18995,19157,19564,22675,23189],"artwork":[1691,6590],"measuring":[166,1320,10781],"upper-right":[15851,15892],"mediump":[11750,13950],"contextual":[670,3619,16175,23301],"#a52a2aff":[21720],"occur":[219,323,605,2049,2223,2677,4058,4359,4641,5043,5151,6449,7776,7909,9202,10971,11683,12695,12820,13775,15234,16197,16295,16737,16762,18040,21865,22043,22113,22271,22460,22646,23281],"care-free":[9981],"info":[274,969,1044,1324,2285,2698,3045,3919,4852,5526,6521,7531,9346,9569,9630,9934,9952,10355,10556,11218,11580,12513,12984,13620,13699,14315,20843,21685,22607,22919,24116,24529],"meeting":[13326,13749],"multiplum":[3389,5479],"precedence":[352,599],"amount":[30,165,935,982,1225,1427,2282,2487,2572,2632,2903,3081,3578,3699,4074,4112,4137,5102,5364,5457,5541,5817,5861,6625,6999,7545,9502,10417,10449,10804,10909,11119,11169,11388,11620,11840,12194,12454,12542,13306,13447,13725,13752,13774,13839,13914,14140,14192,14842,15009,15044,15090,15443,16016,16118,16298,16349,16385,16506,16546,16571,16681,16723,17055,17164,17177,19489,19738,19997,20464,22024,22436,22603,22675,22725,22760,24046,24408],"depth+normals":[16687,18361,19082,19538],"things":[465,650,699,752,828,1284,3501,3663,3905,4263,4547,4647,4704,4800,6730,6887,6961,7337,8112,8199,8290,9357,9560,9688,9745,10410,11541,11582,11683,11861,11894,11955,11978,12196,12456,12744,12939,13173,13274,13285,13848,13898,14069,14878,15343,16058,16733,16791,17268,17518,17732,17835,17994,19065,19230,19377,19433,19457,19760,20692,21362,21606,21617,21962,22521,22684,22874,22982,23384,23673,23753,23809,24014,24066,24217,24280],"aliases":[10103],"propertytype":[7715],"iphone_profiler":[10835,21670],"fractal":[21033],"website":[221,2815,4447,4654,6945,8039,9488,9544,10428,10465,10560,13428,14309,14328,14950,22380,22910,23461,23611,24391],"advertisingid":[24338],"crispness":[16595],"slides":[11433,11720],"destination":[1166,1848,3830,7773,12820,12884,12982,13094,13155,13227,13248,13453,14730,16344,17421,18189,21636],"loadassetwithsubassets":[1960],"getswapchainbackgroundpanel":[24039],"police":[1458],"marked":[377,1922,2296,3665,3985,4127,4144,4989,5149,5481,8205,8277,8886,10045,10928,11854,11888,12595,12904,12931,13578,13848,13923,15065,19707,21644,21695,22608,23674],"jagged":[4963,5739,21844],"template's":[23455],"monochrome":[15473,16585,16606],"confirmed":[11551],"androidmanifest":[216,11588,14513,22309],"simplestpluginexample-4":[1554],"few":[589,650,1091,1108,2074,2776,3365,4107,4168,5211,5764,6520,6990,7802,7908,8204,9180,9568,9717,9745,10075,10404,10458,10856,11910,12025,12287,12473,12495,12601,13724,13732,13860,14010,14038,14069,14100,14304,14325,14342,14467,14827,14937,15335,15396,16180,17525,18030,18957,21626,21834,22113,22521,22737,22989,23753,23901,24019],"re-sent":[3898,13713],"ps3":[1247,6502,8313,11861,12606,14484,15438,16205,19506],"told":[1896,2801,22400],"'activated":[22953],"rejected":[5415,6716,7382,10540,10766],"reverse":[452,12367,16958,18206,21701],"assistant":[10059],"occasionally":[2570,6462,6656,12396,15278,22922,23160],"adaptivereinhardautowhite":[17095],"corrective":[16199],"recreate":[2820,7958,16797],"responses":[22026,23881],"price":[938,991,17798],"engines":[652,5654,13285,14325,23811],"spawned":[3072,3686,4048],"cacheing":[14543],"famous":[12223,14004],"succeeding":[24538],"collapse":[3048,4856,6680,9502,13274,15098],"+infinity":[4954],"s5l8920":[10658],"plane":[182,2076,2126,2710,2743,4912,5049,5178,6647,7824,10201,11202,11658,11925,13864,14024,14191,14238,14749,14868,15329,15474,15509,15594,15843,15894,16170,16292,16330,17167,18325,19787,20712,20780,21939,22107,22871,24873],"mixtransform":[528],"ex":[4814,5044,13814,15665,18563,24093,24112,24168,24194,24306],"tbdr":[11826],"parallax":[11441,17486,17497,17501,17535,17592,17607,17611,17658,17666,17670,17721,17725,17770,18269,19419,20445],"prefab":[75,329,682,1062,1687,1797,4926,5204,6069,6931,6981,7277,7401,7590,7899,7981,9676,9894,10033,10105,10502,11356,12226,13140,13457,13742,14782,16793,21275,21839,21927,23215,24382],"box's":[5048,5119],"perfstudio":[8096],"unity_wsa":[24350],"splitscreen":[2118],"disks":[22349],"deforms":[12684],"calculated":[1754,2152,2628,2829,2892,3159,3426,3453,3998,5054,5289,5542,7110,7778,8001,11147,11215,11354,11910,11983,12885,13169,13867,13921,14665,15411,15516,15558,17526,17908,17990,18057,18211,18861,19255,21246,22617],"artist":[298,9249,11934,11960,15600],"weld":[14832,22173],"sprites":[4096,5387,5430,5561,9679,11878,12472,14007,14017,14880,15859,16114,16313,16761,19785,21409,21415,21964,22644,22724],"mycustomeditor":[18494],"intervals":[3890,4960,11683,21977,22043],"selected":[51,215,375,440,622,630,682,883,935,1053,1166,1408,1654,1762,1798,1860,2157,2289,2599,2640,2674,3194,3300,3590,4339,4621,4813,4875,5143,5235,5438,5482,5525,6391,6665,6948,7345,7399,7765,7806,7971,7984,8087,8231,9316,9489,9605,9745,10032,10053,10292,10484,10766,11195,11212,11345,11417,11515,12840,12908,13852,14031,14059,14273,14282,14405,14464,14748,14957,15003,15041,15092,15098,15251,15406,15847,15871,16505,16527,16975,17095,17123,17515,21403,21430,21670,21765,21917,21939,22105,22131,22205,22246,22267,22556,22638,22692,22726,23025,23270,23446,23750,24165,24557],"swiping":[15725],"bottleneck":[11729,11870,13895],"applying":[339,1131,1349,2360,2366,3309,5198,6861,7909,8781,9187,10817,11670,11983,12192,15617,16572,16652,17205,19309,19449,20046,21791,22879],"_zbufferparams":[20714],"forcing":[11557],"tangent's":[21222],"automagically":[16822],"addclip":[15032],"jni":[11588,14529],"fine":[187,2632,4485,4741,5314,5646,6832,8198,9426,9612,9867,11155,12588,13162,13309,13967,14870,19448,21411,21897,21960,22133,22214,22487,23156,23259,23379,23447,24525],"anchoring":[4975,9738,16132,22650],"leaves'":[22201],"products":[1551,10477,23742],"mainplayer":[6955,23592],"double-click":[1068,2639,6690,6951,10434,13276,20784],"mastergain":[1291],"cmd+d":[11195,23048],"cue":[16284,16320,21605],"reaches":[2569,2876,3353,3836,12648,13249,16722],"poor":[9627,14828,22921,23157],"waking":[15588],"c#":[34,193,225,667,1096,1204,1586,1706,1795,1985,2089,3228,3922,4465,4723,5221,6523,6744,6876,6942,7097,7191,7280,7408,7476,7551,8142,8360,8516,8789,8901,9008,10125,10402,10404,10437,10486,10567,10856,10968,11078,11357,11527,12669,12689,12751,13104,13344,13517,13585,13669,13778,13832,14078,14381,14505,14693,14711,15264,16792,17189,17239,21780,21995,22434,22546,22745,23308,23401,23601,23735,23772,23812,23842,24129,24220,24265,24288,24311,24323,24356,24520,24529,24553,24650,24676],"vertex":[179,464,1666,2687,3047,3572,3652,3707,4198,4686,4762,4855,4952,5276,5390,5727,7318,9483,9524,10770,11146,11457,11744,12046,12517,13897,14769,15416,15544,15556,17454,17520,17639,17797,17821,17914,18139,18262,18428,18598,18618,18684,18715,18859,18990,19045,19073,19179,19182,19204,19237,19255,19379,19433,19456,19602,19779,19995,20353,20458,20746,20779,21079,21839,23017,23264,23392,23702],"cleans":[12541],"w":[658,1270,2682,6809,8067,14748,16646,18334,19917,20712,20845,21100,23011,24841],"frameworks":[4264,4548,4648,4705,4801,15068,22496,22551,23303],"artifact":[4960],"networkmanager":[5986],"resulting":[1288,2285,2708,3673,5282,5385,6442,7114,11132,11228,12182,12800,12888,12915,13927,14098,14613,15214,15332,16083,16164,16246,16386,16580,18951,19071,19274,20654,22490,22817,22902,23298,24706],"watch":[5837,6717,11578,11868,13564,17835,23753],"guicontent":[7588,8462],"curves-":[17213],"thighs":[1672],"think":[1315,2875,3477,4893,5626,5665,5690,6960,6979,8113,9861,9934,10247,13352,14750,15215,17327,17393,17912,18955,21618,21960,22109,22879,23296,23738,24000],"cubemaps":[2994,8162,11165,18749,19200],"downloading":[72,221,248,741,872,7219,10430,10503,10978,15199,16056,17374,23461,23887,23993],"arm_l":[14836],"unticked":[23617],"pops":[4063,10302,15190],"presses":[10164,13293,13721,15757,16963],"depth+stencil":[15502],"offenders":[12194],"lookup":[5501,11256,11782,12334,13941,16137,16187,18334],"chunks":[12333],"mater":[3652],"widget":[359,619],"vfp":[5309,10780],"glyphs":[3189,5498],"navigate":[156,722,1072,1558,3867,7341,8661,9641,9745,10916,11416,12969,13087,13182,13263,15084,15672,15815,15885,22191,23274,23411,24149,24184,24202,24556],"yourself":[582,750,1649,2226,3194,3659,5142,6859,6969,6976,8800,11117,11339,11955,11978,12470,13570,13730,14501,16822,17269,17940,18361,18860,19123,21104,21411,21981,22635,22910,23147,24385,24588],"walk-lean-left":[532],"consumes":[10767],"maxangularvelocity":[4141],"gl_oes_texture_half_float_linear":[1502],"attenuating":[2296,2336,2348,2578],"'like":[1144],"oncollisionenter2d":[6452],"off-screen":[8087,9745],"begindrag":[16982,17122],"left-to-right":[16708],"curve's":[313,5791,16165],"revsub":[18191],"unwieldy":[13274],"known":[401,600,1324,1614,2124,2630,2712,4465,4723,5544,6444,6856,7110,7152,7776,8104,8146,8246,8306,10291,10412,11117,11155,11750,12378,12652,13287,13564,13724,13844,13930,14007,14017,14726,14882,15280,15585,15596,15904,16113,16260,16838,16995,18037,20847,21413,21573,21615,21643,21847,22109,22329,22388,22677,22718,22740,22870,22895,23162,23360],"mathf":[509,7170,8101,8882,9128,10255,11076,11679,12391,13006,22899],"multimedia":[10779,23082],"m_navmesh":[24797],"emissionrate":[14077],"differences":[219,456,863,1532,2643,7129,7341,8998,9183,9593,11229,13441,13449,13573,14809,16164,16356,16365,17093,17520,18329,18376,19064,20389,23623,23894,24364,24601],"invoice":[961,1006,1018,22968],"ilayoutselfcontroller":[22614],"exporters":[6,9544],"atop":[20412],"startinfo":[1983],"createidentitylut":[5502],"unityscript":[6747,6887,6943,10404,14458,15394,17189,23601,23772,23812,23819,24325],"maxwidth":[21479],"tapped":[11621],"unity_xbox360":[12762,14377],"premultiplied":[20403],"unityobject":[6994,9937,15211,22544,23461],"synchronize":[838,12644,13314,13447,13565,13702,13739,17384],"dynamically":[28,1355,1398,8163,8872,9677,10900,11289,12282,12476,12768,13438,15346,16118,16256,22568,22999,23298],"maintenance":[13772],"person":[965,2801,9560,15885,16085,21991,22948],"color4":[5726],"aimed":[14596],"asyncoperation":[12565],"correspondence":[8138,15562],"accelerates":[2977],"merging":[404,839,6719,9231,14333,14730,21276,23666],"ibegindraghandler":[21760],"profileoption":[19484],"a6x":[10710],"uiwindow":[22490],"supplemental":[17454],"pulsate":[651],"-force-feature-level-9-3":[6574,24123],"logicalnand":[18201],"nothing":[827,1373,1763,2130,3252,3898,5257,6443,9833,10150,11858,12225,13449,13922,14072,15226,18030,18618,18943,20134,21646,21939,21987,23464],"darken":[4222,4669,8118,14103,17465],"usefull":[24403],"myassets":[1905],"tessfunction":[20421],"negated":[19275],"immersion":[1375],"webcamtexture":[5994],"levelname":[15203],"sourcetree":[6692,6702,6732,21336],"isname":[9826],"fontsize":[8873,24622],"raycasthit":[2078,11091,12402,12974,13236,14134],"deg2rad":[7170,8101],"decrypt":[15150],"line":[50,314,637,670,685,910,1543,1586,1633,2036,2076,2340,2352,3039,3148,3204,3297,3353,3388,3591,3741,3779,4128,4846,5330,5476,6396,6483,6635,6883,7393,7952,8058,8375,9539,10063,10107,10835,11129,11329,11920,12519,12647,12698,13069,13162,13782,13822,14239,14349,14459,14525,14806,15276,16159,16528,17034,17404,18037,18548,18941,19510,20849,21275,21714,21973,22253,22400,22559,22750,22867,22889,23308,23404,24067,24111],"scrpos":[20889],"corresponds":[1743,1763,2076,2856,4975,8086,8965,9623,18612,21977,22118,22651,22869,24389],"similarity":[1470],"blit":[19072],"searches":[10049,12369,15336,22741],"digital":[1203,1348,1417,6826],"neighboring":[3621,7372,9191,16361],"myprojectfolder":[13759],"helpful":[883,3887,6730,6988,13746,13816,13846,14004,14204,14704,15087,17204,20441,24231],"'character":[24005],"proceeds":[16517,22026],"registration":[1208,1602,13330,24551,24603],"luminances":[17094],"solution":[1964,2801,4458,4716,5161,6708,10575,11156,11930,12280,12474,13293,13433,13722,13793,14845,22006,22461,23259,23316,23756,24024,24135,24163,24191,24304,24311,24366,24555,24575,24606,24642,24652,24706],"reflecting":[5043,11919,12284,21557],"stated":[1032,1043,1360,6715,8778,22871,22949],"assetfilehash":[1865],"house":[6866,11139,17367],"pointing":[182,2170,7106,7818,11649,13227,15749,16794,17414,20780,23715],"sourced":[9249,9324],"asssetbundles":[1919],"gov":[17368],"plus":[312,4872,5210,9615,10411,10433,10773,11965,12941,15841,17411,19589,19773,21889,22568,22760],"detail":[187,745,2426,3244,3565,3615,4954,5578,6443,6595,6597,6865,7763,8082,8205,9256,9569,9866,9922,10343,11118,11747,11902,11963,11992,12192,13271,13314,13769,13933,14015,14281,14831,15014,15093,15969,16001,16162,16246,16259,17017,17461,17496,17516,18104,19392,19417,19873,21594,21831,21844,21869,21897,21940,21960,22542,22760,23173,23393],"canvasrenderer":[2776,6037],"shift-control-n":[21984],"bindchannels":[18138],"giant":[587,7309],"unity_asset_server":[17408],"unityobj-":[24433],"lightmaps":[3574,3627,7324,8162,9513,11138,11208,11241,11896,11986,13921,14001,15479,15501,15528,18316,19050,19240,20046,20144,20272,20431,20507],"centres":[21836,22870],"need":[8,34,160,183,211,221,255,272,401,444,468,605,696,866,959,994,1038,1044,1051,1094,1110,1200,1535,1557,1598,1634,1734,1758,1843,1915,1968,2020,2138,2223,2568,2615,2628,2636,2717,2754,2764,2776,2854,3039,3138,3165,3185,3302,3431,3476,3550,3592,3621,3650,3797,3909,3998,4291,4502,4584,4739,4820,4885,4964,5094,5143,5252,5313,5354,5456,5492,5513,5703,5735,6352,6442,6495,6659,6661,6692,6698,6702,6719,6760,6866,6883,6940,6976,6990,7044,7106,7136,7312,7438,7704,7767,7845,7909,7970,7984,8024,8112,8116,8138,8200,8377,8890,8997,9184,9213,9248,9318,9385,9398,9414,9440,9535,9569,9575,9615,9675,9710,9719,9741,9857,9879,9891,9951,9977,10137,10386,10411,10435,10447,10539,10560,10778,10835,10846,10978,11165,11197,11241,11263,11305,11350,11414,11499,11541,11731,11793,11959,11985,12226,12454,12496,12602,12636,12655,12753,12787,12802,12917,12955,13103,13160,13187,13263,13298,13328,13434,13453,13464,13500,13570,13586,13739,13772,13822,13844,13883,13893,14036,14139,14268,14334,14460,14530,14698,14719,14831,14876,14937,14973,15068,15073,15201,15245,15335,15346,15462,15490,15576,15669,15713,15806,16007,16058,16084,16223,16341,16441,16802,17089,17205,17221,17234,17286,17384,17558,17798,17911,18048,18321,18361,18383,18600,18603,18714,19047,19073,19179,19182,19280,19433,19513,19760,20143,20185,20356,20908,21350,21354,21387,21398,21426,21557,21643,21664,21701,21807,21809,21906,21931,22021,22126,22203,22365,22443,22549,22554,22737,22913,22944,22981,23185,23240,23290,23301,23358,23373,23388,23409,23651,23783,23814,23875,23899,23940,24016,24168,24199,24221,24393,24525,24653],"unity_3_0":[14388],"uis":[1315,2748,22677,22714],"willcacheresponse":[10362],"earth":[12456,14155,14184],"optimizable":[23811],"cheatsheet":[10887],"interface":[74,156,338,465,753,833,931,1159,1198,2716,3381,3407,6606,6806,7462,7465,8997,9179,9951,10346,11116,11241,11444,11527,12699,12754,13638,13996,14529,14707,14743,14817,15211,15647,21426,21753,21971,22195,22391,22612,22677,22978,23386,23447,23814,24669],"does":[45,236,254,746,1040,1280,1329,1521,1551,2053,2124,2601,2626,2660,2708,2752,2764,2790,2861,3042,3178,3199,3303,3551,3586,3593,3633,3803,3982,4023,4033,4401,4529,4618,4714,4797,4849,4963,5089,5172,5241,5275,5402,5649,5671,6414,6444,6633,6668,6716,6962,7090,7154,7316,7446,7766,7804,8112,8241,8289,8819,9410,9679,9695,9914,9924,9977,10048,10444,10476,10582,10918,11075,11135,11147,11267,11402,11416,11479,11509,11573,11577,11683,11778,11894,11981,12207,12478,12525,12681,12889,12934,13297,13330,13438,13565,13717,13841,13892,13974,14181,14644,14689,14889,15009,15084,15389,15414,15443,15453,15559,15663,15711,15935,15953,15987,16052,16442,16637,16686,16801,17089,17195,17207,17295,17384,17550,17859,17933,18334,18383,18528,18612,18659,18978,19070,19161,19241,19309,19519,19779,19898,20143,20166,20433,20464,20774,20784,21743,21844,21857,22020,22109,22267,22391,22598,22723,22881,22924,22999,23239,23374,23406,23736,23779,23814,23874,23895,23979,24019,24024,24175,24362],"coloration":[21897,21941],"interchangeable":[11286],"ipad":[4299,4589,10411,10428,10444,10467,10558,10677,10785,11606,11621,11823,11861,11947,22430,22914,23137],"lightingramp":[20234],"skins":[3267,8777,9329,9511,9532],"cup":[7541],"outside":[1326,2577,2712,4003,4263,4547,4647,4704,4800,5077,5289,6622,9184,9246,9571,9745,9962,10816,11136,11206,11289,11744,11973,13131,13280,13839,13841,14045,14211,14250,14494,15189,16384,16564,16686,17337,20652,21113,21580,21895,22871,23443],"graphic":[2748,2764,3039,4325,4846,4914,5559,5786,6443,8306,11444,14007,14037,14070,14110,14191,14268,16419,16513,16561,16615,16698,16766,16934,16947,17070,17869,18104,19391,21398,21413,21682,21965,22113,22338,22721,24594],"jarsigner":[4434,4562],"centroid":[4842],"influences":[14846],"strurlin":[10995],"collecting":[174,12326,15084],"process":[19,78,199,221,340,663,704,745,1017,1070,1127,1159,1348,1602,1612,1666,1845,1848,1981,2018,2744,3994,4816,5027,5254,6508,6668,6740,6780,7279,7313,8102,8746,9189,9283,9421,9538,9743,10075,10466,10477,10560,11223,11413,12030,12196,12645,12797,12904,12929,13141,13179,13297,13329,13724,13842,13897,13982,14140,14311,14330,14827,15216,15443,15464,15492,15713,15952,15986,16245,16430,16977,17092,17125,17331,17387,17524,20828,21387,21413,22024,22208,22244,22368,22436,22741,22955,23360,23410,23452,23771,23812,23887,24097,24281,24391,24601,24669,24716],"onserializenetworkview":[3914,13706],"gues":[16606],"viewgroup":[14564],"storelogo":[24316],"families":[2006,11572],"explanatory":[970],"shift-click":[15893,21843],"component-":[2599,3397,3534,3608,5152,5324,9579,10206,11212,16216,16437,23272],"powershell":[24198],"wheel's":[5782,5817],"low-res":[22914],"uppercase":[18963,20778],"spiral":[3592],"outweighs":[12229],"worldspaceviewdir":[18267],"representations":[5785,8075,17259,23863],"offline":[10103,11404,11414,14312,14355,15210,23461,23632],"powered":[3487,9619],"#unityplayer":[7012,9936,23180,23492,23910,24493],"panlevel":[2559],"cylinders":[5583,13133,13157,14876],"working":[15,56,403,442,663,743,825,833,958,1037,1055,1108,1463,1468,2009,2636,3331,3659,4817,5032,5207,6494,6694,6717,6970,6977,6987,7279,7354,7462,8135,8780,9185,9236,9318,9883,9981,10075,11344,11956,11978,12509,12684,12687,13125,13314,14312,14344,14384,15564,17257,17272,19084,19481,21373,21432,21845,21957,21988,22124,22244,22487,22639,23091,23310,23632,23979,24297,24390],"functionally":[18072,24658],"bump":[5151,8339,11940,19065,19152,19826,20469],"knowing":[12210],"coprocessor":[10629],"amplification":[2492],"packages":[12,156,591,847,947,997,1417,2160,3633,3758,7992,9240,9355,9357,9368,9457,9559,9889,10062,13429,14835,14851,15664,16196,21570,21916,22092,22191,24128,24192,24216],"data-driven":[21567],"removeunusedassetbundlenames":[1925],"aspx#getting_a_developer_license_by_using_visual_studio":[24230],"wgt-bone":[1662],"margin":[3348,10917,23543],"'fork'":[6723],"difficult":[693,9617,10435,10940,12876,13163,13316,14017,15736,16259,20845,23436,23892],"onupdateselected":[21765],"3d":[0,179,298,318,573,585,1047,1356,1456,1633,1799,2074,2139,2160,2278,2426,2559,2731,2740,3064,3119,3196,3243,3592,3633,3707,3758,3772,4109,4134,4156,5107,5167,5304,5387,5469,5499,5534,5764,5817,6442,6599,6603,7462,7822,7981,8126,9208,9233,9312,9357,9364,9479,9851,9976,10152,10458,11126,11198,11211,11235,12465,13089,13119,13133,13841,13913,14004,14017,14191,14319,14320,14326,14827,14868,14930,15114,15137,15338,15474,15509,15799,15858,16193,16421,16627,17204,17939,19146,19200,20828,21570,21597,21875,21912,21939,21960,22103,22637,22677,22874,23099,23359,23376,23383,23715,24379],"setcustomcursor":[24104],"melody":[22093],"getdefault":[14607],"lightmapsnapshot":[6113],"documents":[762,10539,11312,17349,22343],"statistics":[2284,4342,8122,10806,13637,13894,14995,15071,15078,15084,15439,22436,22836,24003],"sharedmaterial":[7314,11754,12621],"percentages":[3619,15005,22651],"breadth":[13769],"program":[606,625,828,2224,3625,3631,6488,6945,7776,9458,9947,10068,10432,11228,11953,12454,13974,14612,14876,17346,17939,18608,18683,18934,19182,19215,19257,19470,20841,21084,21283,22366,22393,22549,22918,23306],"onmove":[21768],"end-users":[5286,11289,16206,16576],"conflicts":[839,1932,11356,14333,21289,22283,22366,23646],"enableunityanalytics":[24401],"mainherocharacter":[6796],"_mycubemap":[19188],"oneminusdstalpha":[18222],"arranging":[2121,9017,12957],"code":[73,174,193,221,243,265,386,479,1103,1205,1467,1541,1703,1854,1968,2078,3025,3303,3779,4395,4522,4714,4797,5213,5460,6451,6495,6679,6692,6698,6717,6770,6875,6961,6976,7091,7160,7279,7446,7468,7675,7776,7833,8280,8374,8524,8872,9180,9597,9923,10106,10341,10404,10427,10437,10468,10476,10560,10782,10873,10922,10968,10979,11354,11423,11528,11551,11576,11684,11723,11729,11745,11981,12201,12451,12496,12622,12647,12687,12700,12751,12819,13112,13144,13153,13249,13334,13428,13601,13767,13779,13942,13986,14013,14358,14494,14499,14674,14709,14870,14885,14958,15009,15046,15086,15202,15251,15399,15585,15616,15694,16794,17235,17239,17331,17514,17685,17795,17858,17933,18254,18303,18503,18935,19096,19189,19207,19378,19466,20185,20353,20510,20774,20813,21347,21362,21567,21583,21619,21625,21658,21669,21689,21772,21862,21906,22384,22829,22904,22912,22987,23201,23236,23299,23382,23401,23599,23607,23623,23702,23755,23765,23806,23815,23874,23894,23985,23987,24044,24232,24287,24311,24327,24391,24525,24579,24583,24676],"filing":[16495,16637],"informational":[3883],"alpha-blended":[5403,11780,12180,19122,19763],"inout":[18519,18591,19093,19725,19802,20180,20395,20487,20801],"period":[490,724,2052,2372,4961,6913,11685,16256],"although":[236,269,674,2272,2776,3620,3636,3707,5283,6447,6763,6940,7790,7892,7985,8058,8135,8336,9184,9258,10020,10056,10075,11155,11193,12642,13274,13303,13330,13449,13772,13793,13839,14304,14783,14827,14870,14899,15036,15325,16397,17089,17135,17177,17199,17281,18400,21714,21839,21976,22083,22829,23393,23607,23979,24016,24364,24391],"substance":[4865,9276,14892,23799],"feather":[5173],"sliders":[694,1288,7663,8663,8890,9871,11426,17045,17516,19131,21569],"jni_onload":[14531],"catapulting":[5202],"old":[442,1615,1903,2065,3094,3715,4198,4686,4762,8238,9426,9566,9918,10103,11172,11506,11573,11944,12453,12688,12937,13504,14098,16283,16319,16786,16797,17931,19292,22727,22862,23209,24538],"shines":[3751,5272,13919,15456,15484],"presents":[12038,20958],"rendered":[2131,2670,2737,3196,3348,3401,3568,3604,3623,3631,3661,3681,3758,4003,4075,4947,5003,5274,5322,5390,5473,6603,6874,7136,7334,7508,7778,7994,8088,8116,8285,9187,11119,11145,11193,11239,11755,11919,11966,12324,12681,13842,13893,14008,14191,14757,15078,15411,15444,15457,15485,15516,16022,16031,16367,16567,17134,17177,17454,17558,17883,18043,18077,18180,18379,18612,18699,18861,18980,19040,19160,19241,19382,19433,19516,19588,19750,20436,20824,21564,21829,21965,22115,22201,22277,22673,22866,23262,23292,23720],"proceduralmaterial":[6013],"occludes":[21597],"spectacular":[654,17525],"bpp":[15354],"inaccessible":[24669],"normallly":[6464],"set-up":[697,1633,2033,3546,21290,24387],"wii":[8313,11861,14371],"players":[3430,3528,6545,9745,11198,12459,13197,13284,13327,13453,13464,13630,13724,13746,13773,14462,15080,15169,15199,23436,23899,23981,24016,24145,24286],"by-pass":[2565],"microsoft":[4460,4718,6569,14441,18555,23740,24046,24116,24130,24168,24187,24223,24237,24274,24356,24519,24529,24595,24603,24605],"define_with_value":[6636],"lookatpoint":[7405],"dispersion":[3095,3716],"leans":[532],"topmost":[5519],"revs":[14077],"0x006267d0":[22407],"atomic":[2034,5755],"exportresourcergb4":[1818],"settings'":[11294,12934],"exotic":[17798],"maximumlod":[4957,19420],"bizarre":[12456],"fft":[2507],"unity_fogstart":[20108],"counterparts":[12378],"degradation":[1111],"enclosing":[6508,13280],"forwarding":[13351,14644],"redownloaded":[72],"arg":[23196,24086],"typetrees":[1963],"systems":[271,906,2054,3058,3092,3198,3483,3629,3713,3756,4030,4088,4104,5743,5874,6405,6602,7333,7940,8223,8819,10029,10114,10448,12292,12950,13889,14016,14184,14185,14199,14261,14278,14280,16060,16842,17201,17275,17421,21289,21345,21560,21644,21954,21973,22126,22735,22984,23364,23688,23707],"bitbucket's":[6699],"unity_matrix_vp":[20701],"re-routing":[1453],"asynchronously":[5026,8243,11264],"red":[314,596,685,1314,1737,1763,2624,4267,4551,4651,4708,4804,5632,5703,6633,6672,8090,8972,9183,11454,14047,14750,15969,16001,16144,16220,17017,17834,18549,18598,18609,18892,19592,20849,21113,21596,21715,22103,23379,23702],"reactivated":[7090],"drastically":[2010,16138,16351,22042],"workflows":[404,6517,8168,12919,14730,21582,21609,23132],"infrequent":[13315,13565,22837],"pathtoyourapplication":[10541],"gl_objectplaneq":[19120],"interestingvalue":[16849],"relate":[375,1878,6588,6601,22056,22085],"linking":[6764,10968,20808,23203],"over-complex":[11745],"audioplugindemogui":[1290],"sticking":[14846],"js":[1097,1969,2095,3926,4468,4726,7021,7218,7404,7472,7540,8144,9928,10402,10495,10948,12232,12678,12850,13239,13257,13350,13561,13590,13838,14089,14409,14743,15211,15252,21776,22002,22399,22544,22754,23461,23768,23811,23819,23894,23920,24220,24288,24391],"ogg":[1111,1464,2272,3774,9985,10579,10960,15001,22097,24014],"zoomed":[693,16713],"m_guistyle":[24616],"sigbus":[22393],"continous":[6508,14278],"removes":[1923,2052,2722,2811,5587,6679,12201,15653,16535,17260,22740,23904,24321,24412],"support":[12,216,227,240,383,966,997,1042,1203,1473,1546,1551,1614,2475,3120,3198,3250,3652,4198,4523,4624,4686,4762,4808,4966,5002,5649,5671,6541,7126,7310,7942,8164,8306,9194,9423,9456,9542,9621,9643,9719,9745,9914,9937,9950,9985,10029,10404,10582,10594,10845,10853,10960,11172,11243,11405,11421,11552,11641,11840,11891,11951,11986,12751,12812,13708,13885,14935,15001,15408,15453,15485,15534,15542,15559,15760,15794,15832,15921,15972,16004,16018,16028,16039,16061,16184,16197,16227,16253,16269,16279,16315,16352,16362,16387,16403,16416,16443,16575,16599,16612,16655,16669,16688,16788,16824,17020,17058,17107,17142,17174,17184,17295,17537,17795,17869,18050,18315,18607,18678,19106,19248,19280,19419,19439,20420,20456,20868,21345,21670,21860,22114,22273,22291,22336,22486,22524,22944,23136,23355,23775,23802,23889,23895,24359,24372,24391,24536,24547,24579,24595,24671],"obscurance":[16657,16674],"guitexts":[3381,3408],"wrapped":[17039,17802,19207,20209],"mpv":[3798],"nicely":[1688,7419,8204,9848,16837,18496],"essentials":[15840],"enablejava":[24399],"inertia":[16724],"gl_oes_vertex_type_10_10_10_2":[1502],"audiomixer":[1144,1328,1391,1448,2322,2380,2396,2413,2433,2451,6052],"touchscreens":[10024],"pvs":[13844],"mergetool":[21304],"-marm":[1579],"don":[4797,12952,13185,13883,21614],"coin's":[12323],"layerculldistances":[2713,13933],"car":[166,1458,3483,3571,3645,5396,5785,5818,6451,6866,8113,10020,11133,11454,13718,13822,13924,14069,14870,18449,21398,23379],"credit-card":[941],"assetbundle1":[1619,15140,17240],"unless":[290,1247,4483,4739,5151,5684,6715,6859,9267,10778,11759,11951,14252,14829,16065,18040,19564,21423,21685,21926,22021,22761,22949,23377,23601,23674,24048,24363],"certification":[4481,15713,24046],"endpoints":[17364],"shift-dot":[21946],"created":[145,256,298,339,383,575,605,611,661,684,745,781,870,931,984,1040,1153,1379,1528,1595,1615,1801,1848,2121,2139,2223,2601,2720,2737,3016,3047,3064,3183,3241,3307,3397,3590,3766,4291,4502,4584,4855,4882,5096,5204,5225,5491,5501,5764,5837,6436,6494,6805,6856,6926,6947,6981,7079,7084,7271,7330,7378,7506,7766,7900,8023,8128,8823,8888,9664,9679,9846,10135,10386,10485,11060,11124,11249,11259,11349,11424,11711,11840,11946,12030,12210,12556,12655,12702,12754,12927,12963,13105,13271,13438,13504,14062,14181,14259,14261,14494,14580,14785,14848,14868,15058,16118,16170,16351,17045,17199,17394,18600,21613,21630,21680,21917,21940,21951,21973,22136,22193,22212,22438,22546,22665,22716,22735,22913,23272,23360,23450,23746,23975,24044,24118,24156,24380,24433,24643,24653],"hemispherical":[14874],"recompiling":[22422],"server's":[13293,13749],"portion":[366,2619,2719,7133,9091,10449,10831,11155,11947,12651,14233,14302,16527,21348,21413,21973],"restoration":[17414],"mapping":[399,1471,1919,3503,3566,3648,5523,6666,8339,9189,11756,13912,14545,15550,15560,15775,16158,17092,17685,18042,18269,18321,18827,19419,19824,20308,20458,21109,21569,21855,23264],"albedo":[8213,12000,18521,18593,19726,19803,20133,20181,20356,20498,20803,21570,21586,21589,21611,21859,21902,23708],"kick":[21382],"content":[28,254,403,741,827,2696,3357,3802,4197,4685,4761,6543,6581,6610,6618,6992,8396,8599,8775,9464,9667,9690,9888,9923,10472,10478,10569,11286,11961,13919,14370,15136,15224,15350,15404,16229,16459,16534,16715,16800,17272,21542,21677,22384,22542,22568,22699,22922,22983,23158,23170,23365,23447,23760,23796,23814,23878,23894,23902,23983,23988,23990,24032,24391],"happens":[53,198,448,663,1206,2615,2712,4002,5513,5753,7900,8087,9625,9684,9696,10377,10766,11226,11350,11602,12207,12456,12588,12617,12702,12797,13290,13777,14109,15001,15464,15492,15521,15588,15613,16799,17331,17430,19231,19898,22261,22289,22422,22542,22625,22719,22760,23296,23377,23609,24295],"guistyles":[3267,3365,8772],"atlas":[5562,7313,13905,21413],"shadowcaster":[19053,19238,20774],"integrity":[11551],"mostly":[2696,3246,4098,5228,6548,7397,12700,13914,15404,15446,16606,16661,17518,17640,18603,18968,19455,19496,19779,23677,24606],"wcoord-0":[20922],"0c":[6512],"gains":[1289,1763],"-force-gfx-direct":[6570,24117],"hours":[959,986,1038,1602],"fingers":[11514,11613,15896,22109],"canvas":[2736,2758,2771,6038,6585,9731,9852,15336,16089,16420,17089,22635,22663,22710],"androidjavaobject":[14543],"top-notch":[11892],"rendering":[236,1285,2126,2676,2748,3177,3189,3248,3263,3390,3553,3593,3629,3663,3678,3758,3985,4098,4196,4514,4608,4684,4760,4783,4938,5002,5314,5392,5431,5481,5663,5688,5719,6352,6403,6510,6605,6622,7147,7309,7782,7912,8085,8122,8174,8271,8341,9182,9902,10037,10458,10616,10801,10848,11119,11148,11195,11216,11226,11448,11733,11870,11961,11975,12196,12514,12598,12679,12700,12754,13841,13887,14008,14108,14706,14951,14956,15005,15038,15077,15093,15401,15403,15439,15451,15480,15512,15543,15556,15906,15938,15975,16272,16283,16327,16500,16576,16642,16668,16682,16999,17024,17500,17504,17518,17610,17615,17669,17673,17685,17724,17729,17786,17821,18030,18040,18077,18277,18323,18373,18384,18608,18709,18968,18985,19040,19064,19229,19439,19495,19512,19587,19737,19750,20068,20138,20166,20352,20707,20784,21429,21555,21588,21643,21851,21912,21991,22113,22261,22625,23702,23893,24089,24117],"multithreading":[8224],"androids":[23156],"ontriggerenter":[6449,7797,15019],"sobeldepth":[16384],"premium":[15682],"time-":[10451],"negative":[1519,2003,2799,3211,3512,4112,4137,5425,5688,6819,7845,13839,14071,14958,16160,19077,21868,22885],"objc":[4604],"transport":[15084],"autostart":[211],"solely":[16084,21859],"fee":[1012],"fundamentals":[859,13769,21572],"refining":[9966,14845],"chameleon":[21967],"budget":[3841,4956,12295,22950],"l1":[10897],"anyway":[6692,11154,12485,12520,13498,13718,15346,18380,22606],"zooms":[7158],"model's":[1675,2626,8015,12608,20510],"cubic":[15327,23376],"geographical":[10565,11610,21847],"whoever":[13330],"phonepad":[11707],"during":[181,329,367,468,693,744,1148,1338,1456,1533,2052,2152,2285,2620,2630,3196,3865,4119,4794,4944,4993,5151,5195,5282,5392,5714,6447,6495,6647,6791,6838,6926,6961,6995,7776,7899,8162,8273,8334,9623,10580,10820,10922,10978,11193,11305,11551,11613,12226,12608,12648,12876,12934,12962,13227,13285,13354,13448,13466,13855,13922,13977,14007,14038,14112,14304,14796,14870,14899,15211,15345,16159,16504,16667,17009,17078,17430,18043,19588,20707,21356,21380,21409,21414,21635,21643,22023,22118,22289,22416,22625,22737,22906,22955,23242,23452,23691,23809,24002,24138,24280,24404,24669],"diffuse":[5403,5631,5694,8014,8087,9275,9386,9396,9407,9435,9484,9525,9554,9867,11902,15473,15493,15535,17443,17457,17461,17497,17531,17538,17561,17607,17625,17633,17666,17686,17695,17704,17717,17721,17832,18100,18407,18505,18596,18878,19243,19290,19406,19425,19793,20133,20167,20360,20503,20806,21575,21589,21612,21860,21903,23697],"gl_qcom_extended_get2":[1503],"whorled":[22139,22220],"unity_use_rgba_for_point_shadows":[18319],"frozen":[12648,22023],"squares":[2991,4237,4507,4589,4678,12394,14749,15095,22107],"centers":[16518],"unity_wii":[14371],"lookatposition":[13039],"greatly":[693,5004,6924,10578,11119,11193,12229,13318,14103,16298,22735],"upwards":[2979,4037,7114,9358,13839,14005,19069,22159],"gethighscore":[17285],"shaped":[2801,6856,13090,14304],"assemblies":[4264,4540,4637,4705,4801,10405,10921,14495,17239,21677,22521,23400,23772,24282,24311,24359,24363,24589,24669],"compresses":[7972,10953,15385,23790,24014],"width-200":[9162],"accessing":[1533,1596,1704,4021,6743,10453,10564,11340,11551,11613,13791,15209,17199,17266,17402,18027,19181,23387,23878],"industry-standard":[6942],"randomlist":[22806],"equally":[1360,9698,11129,13844,16243,16256,16587,22722],"streams":[1298,2283,23142],"simplifies":[5198,12453,24391],"layers":[335,357,464,619,1657,1797,2232,2627,2670,3264,3542,3573,3758,4161,4836,4919,5020,5396,5423,5426,5513,5863,9213,10302,10449,11046,11054,11478,11510,11879,14031,15457,15485,16061,19257,19589,21792,22089],"darkness":[181,3564,11197,14108,16664,16680],"nsstring":[10347],"recently":[622,2044,11339,14749,22366,23729],"maxons":[9426],"libiphone-lib":[21679],"laying":[13157],"non-linear":[1423,11237],"retransmission":[13449],"ienddraghandler":[21762],"samplerate":[1270],"moves":[393,1458,2122,3086,3134,3152,3704,3839,3869,4948,5145,6457,6838,7158,11643,13085,13162,13204,13448,14062,14071,14102,14184,14306,16987,17127,19997,20464,21349,22109,23756],"classpath":[14613],"depth":[2249,2265,2377,2684,3113,3433,3582,4078,4379,4503,4585,4966,5103,5395,7335,8039,8092,8320,8341,8343,9717,10022,11168,11404,11887,12657,13769,14205,14229,15425,15459,15487,16080,16134,16195,16280,16282,16318,16372,16417,16658,16687,16833,16999,17094,17486,17592,17658,17770,18033,18077,18319,18360,18382,18602,18996,19053,19074,19238,19513,19557,19763,20845,21580,21868,22712,22874,23988],"tegra-based":[15551],"ienumerator":[62,1620,6877,7230,9821,10231,10507,10858,11008,11268,12500,13495,15141,17241],"dxgi_swap_chain_flag_frame_latency_waitable_object":[4489,4745],"gameobject's":[1065,2827,3148,3839,5166,6742,6984,7088,8074,21792,21981,21987,22101,23209,23296],"cellsize":[24781],"ui":[1204,1345,1517,2716,2737,2759,2772,3267,3381,3408,4340,4719,4968,5678,5700,6586,6611,6614,7816,8118,9177,9179,9674,9690,9718,9741,9850,10030,11527,13930,14748,15336,15599,16090,16520,16558,16719,16749,17082,21689,22128,22490,22606,22635,22664,22678,22681,22709,22711,22713,22716,22996,23119,24046,24182,24391,24538,24708],"unityaudioparameterdefinition":[1220],"textures":[147,213,236,282,741,761,821,836,931,1108,1534,2990,3143,3196,3264,3407,3635,3766,4083,4858,4940,5096,5214,5320,5389,5498,5499,5511,5664,5690,6581,6608,6641,6856,7313,7989,8199,8302,8320,8339,9212,9257,9324,9354,9369,9386,9396,9420,9440,9495,9569,9623,9866,9878,9910,9980,10449,10582,10778,10942,10957,11168,11211,11223,11349,11426,11606,11746,11904,11960,11976,12226,12548,12636,13315,13905,14007,14883,15048,15137,15343,15459,15487,16087,16185,16280,16316,16353,16388,16417,16648,16670,16689,16798,16999,17378,17465,17514,17869,18180,18319,18374,18602,18861,18983,19055,19071,19143,19200,19246,19255,19388,19538,20273,20734,20841,21341,21398,21413,21566,21834,21855,21896,21912,21946,21959,22203,22435,23369,23383,23694,23799,24013],"loader":[6993,8349,13473,22548],"unchanging":[2218],"painted":[6865,21844,21897,21912],"execution":[73,2003,5208,6495,6680,6876,7893,10979,11867,12495,12648,18978,20824,22026,22743],"keepalpha":[20411],"waving":[521],"monobehaviour":[59,417,1709,2081,3782,3918,5205,5876,6452,6683,6766,6955,7163,7227,7409,7561,7776,7900,8363,8519,8792,8904,9011,9756,10126,10309,10458,10489,11030,11359,11527,12207,12660,12691,12733,12761,12825,12973,13098,13230,13252,13338,13471,13581,13672,13702,13786,13826,14039,14081,14426,14586,14915,16801,17203,17225,21753,21783,21816,21998,22410,22748,22987,23312,23421,23592,23844,24296,24332,24611,24679],"assetbundlesguide":[7276],"day-to-day":[844],"#rrggbbaa":[21715],"obejct":[13133],"texturecoordinates":[20960],"loadleveladditive":[12787],"wcoord":[20897],"implements":[5433,7823,10767,13249,14281,14704,14742,17221,17265,18078,19107,22612,23436,23889],"productbuild":[9672],"classes":[34,193,223,753,1290,4449,4656,4726,4797,5205,5876,6683,7508,10423,10437,10447,10473,10565,10921,10972,12207,12585,12688,13640,13766,14541,14715,15396,16809,17188,17200,17269,18553,19159,21668,21689,22301,22497,23298,23779,23874,24186,24218,24238,24287,24539],"gametypename":[13328],"laptops":[11861,24374],"n":[1271,1476,1586,3404,5496,6415,6547,10369,10893,12346,16893,17524,18275,18734,23636,23869,24209,24223],"end-boss":[587],"backspace":[3590,6851,15125],"devicetype":[12708],"bottle-necks":[13999],"dims":[23377],"iokit":[12557],"batch":[1545,6495,7308,11752,12716,21643],"rising":[14155,14259],"boulders":[5354],"intslider":[7714],"compfront":[19564],"distributed":[2048,2711,6740,13295,14355,15613,22137,22218],"capital":[3203,23600],"x3000":[8317,16205],"pre-generate":[3198],"educational":[22949],"ripples":[21881],"wobble":[4948],"wreck":[10197],"appendix":[4399,4527],"m_viewcellsize":[24730],"modes":[687,1109,2124,2466,2586,2741,3254,3622,8212,8399,8994,10471,11207,11512,11711,11924,13575,13981,14022,14196,14748,15041,15693,15720,15861,15966,15998,16142,16406,17014,17050,17939,18347,18363,18505,18716,19028,19281,19378,21344,21566,22553,22670],"unnecessary":[23,2213,9246,10946,12369,13453,16347,22440],"assemble":[14770],"pendant":[2213],"_fresnel":[19174],"tiltshift":[17050],"bom":[17323],"activeinhierarchy":[7090,23218],"relative":[1357,1459,1643,1783,2519,2539,2677,2841,2973,2987,3037,3098,3387,3413,3478,3619,3719,3853,4039,4116,4139,4968,5171,5210,5279,5336,5371,5751,5785,6442,6509,6659,7001,8138,9020,9685,10291,11499,12315,13022,14199,14760,15251,15562,15591,16546,21356,22026,22111,22133,22214,22635,23548,23728,24396],"noscaleoffset":[19162],"parsable":[24642],"iinitializepotentialdraghandler":[21759],"attribution":[11235],"loadassetexample":[768],"furthest":[2678,12935,19775],"stencil":[4503,4585,15459,15487,19539],"clustering":[8225],"open":[155,370,439,603,862,994,1051,1072,1290,1458,1558,1686,1698,1861,2362,2368,4008,4107,4340,5207,6495,6681,6725,6737,7339,7386,7958,8039,8184,9350,9416,9473,9563,9743,9963,10054,10431,10463,10835,10880,11052,11057,11309,11419,11698,11983,12647,12889,12915,13303,13466,13758,13860,14071,14106,14281,14805,14964,15127,15191,15342,15644,15798,15832,15898,16174,16212,16432,16795,17208,17837,20810,21389,21400,21418,21792,21984,22191,22267,22322,22481,22913,23152,23316,23404,23628,23743,23769,24002,24099,24135,24190,24229,24384,24555,24566,24642,24657,24671,24706],"pointerexit":[11541,16987,17127],"extended":[1469,2822,5779,10029,10856,16061,18311,18904,22095],"jointbreaks":[15022],"participated":[6739],"ignited":[14140],"forms":[11544,14233,16042,18694],"argument":[1290,3322,3365,6494,8401,8599,10071,11260,13328,13458,13758,16534,16706,16731,16956,17074,19275,20146,20874,22996,23175,23424,24087,24219],"decode":[11585,18370,20145,20273],"unpacknormal":[12003,19842,20501],"have":[12,147,158,170,213,221,263,312,329,342,358,439,466,587,595,603,605,629,674,682,741,819,821,836,947,984,996,1029,1044,1051,1077,1128,1154,1208,1350,1458,1471,1521,1557,1604,1614,1618,1661,1692,1736,1754,1797,1849,2044,2076,2118,2124,2213,2223,2293,2425,2547,2601,2619,2665,2748,2776,2843,2874,3037,3095,3125,3163,3181,3186,3303,3397,3428,3529,3546,3593,3615,3633,3684,3707,3832,3893,3985,4024,4034,4107,4180,4618,4688,4764,4813,4862,4932,5025,5135,5196,5204,5242,5324,5330,5385,5396,5491,5512,5665,5690,5774,5876,6375,6414,6428,6443,6517,6592,6603,6606,6608,6641,6664,6686,6692,6703,6710,6719,6724,6739,6750,6839,6856,6874,6931,6948,6976,6981,7126,7137,7220,7313,7339,7382,7506,7534,7765,7776,7804,7834,7911,7942,7987,8023,8075,8113,8138,8146,8168,8306,8773,8888,8996,9189,9218,9256,9301,9336,9358,9385,9398,9412,9507,9530,9614,9629,9679,9700,9720,9743,9852,9891,9925,9962,10021,10039,10054,10060,10158,10293,10404,10435,10456,10476,10558,10778,10801,10856,10907,10917,10968,10970,10974,11048,11060,11117,11135,11148,11198,11230,11289,11305,11356,11400,11407,11426,11480,11499,11555,11614,11717,11730,11733,11861,11910,11951,12041,12194,12454,12575,12602,12611,12655,12740,12756,12788,12808,12837,12916,12937,12952,13087,13125,13139,13155,13194,13249,13273,13285,13351,13434,13449,13574,13639,13709,13729,13779,13823,13844,13883,13900,13974,14036,14062,14070,14103,14184,14244,14259,14266,14302,14325,14332,14405,14467,14512,14698,14728,14749,14781,14802,14911,14958,15017,15088,15110,15194,15280,15340,15342,15404,15455,15483,15517,15585,15599,15625,15650,15689,15718,15894,15917,15939,15976,16017,16023,16033,16062,16114,16139,16190,16209,16247,16257,16273,16287,16323,16358,16365,16398,16406,16420,16427,16461,16491,16542,16569,16580,16603,16637,16649,16659,16674,16755,16759,16787,16793,16996,17045,17051,17079,17088,17095,17136,17155,17160,17178,17187,17218,17259,17347,17393,17454,17520,17552,17640,17732,17798,17859,17940,18040,18056,18180,18381,18383,18496,18568,18684,18696,18712,18860,18968,19043,19077,19141,19241,19256,19388,19418,19439,19519,19738,19753,19874,20353,20456,20692,20774,20810,21104,21277,21344,21354,21372,21401,21424,21546,21607,21610,21617,21625,21634,21669,21689,21753,21798,21810,21829,21844,21897,21912,21941,21967,21987,22043,22092,22101,22131,22191,22244,22267,22282,22320,22430,22524,22564,22571,22638,22666,22684,22716,22740,22902,22913,22948,22999,23083,23155,23185,23209,23269,23299,23358,23377,23392,23401,23450,23589,23607,23617,23623,23691,23754,23776,23819,23874,24013,24112,24128,24168,24184,24199,24214,24238,24277,24306,24321,24377,24426,24525,24588,24603,24608,24675],"_gain":[20312],"prefixed":[8060],"mask":[335,360,366,1071,2186,2232,2618,2670,3561,3837,4021,4161,4836,5020,5423,6675,6856,11062,11480,12876,15457,15485,15954,15988,16245,16557,16716,17013,19017,19454,19540,20878,21600,22699,22730],"unityprojects":[6539,7276],"storekit":[10476],"rewriting":[19280],"inclusion":[2624,13869],"forty":[22006],"height":[1519,2128,2657,2683,2785,2794,3015,3209,3361,3417,3576,3619,3823,3858,4189,4666,4755,4915,4972,5167,5563,6557,7001,7159,7598,7826,8100,8401,8678,9026,9301,9712,9736,9857,11158,12816,12911,12933,12967,13090,13147,13484,14229,15384,15604,15929,16105,16236,16410,16463,16502,16543,16646,17153,17486,18269,20713,20876,21410,21743,21835,21840,21888,21907,21920,21940,21977,22166,22574,22642,22719,23296,23459,24397,24612,24872],"pressed":[507,605,2223,3781,4226,6824,7795,8354,15440,15757,16745,16757,16976,21756,21993,22557,22684,23605],"assets":[28,201,244,478,592,614,652,698,741,752,822,830,833,931,935,989,1028,1043,1051,1108,1205,1463,1570,1612,1796,1849,1976,2009,2193,2272,2601,2627,3009,3141,3185,3257,3445,3533,3678,3766,4092,4150,4208,4728,4771,4796,4857,4909,5096,5206,5212,5442,5498,5646,5764,6433,6527,6581,6624,6858,6947,7276,7310,7376,7766,7942,7980,8172,9189,9233,9320,9345,9374,9388,9400,9444,9504,9519,9547,9558,9568,9623,9878,9889,9958,10045,10079,10154,10344,10468,10483,10928,11261,11286,11349,11423,11580,11836,12295,12541,12609,12644,12918,13315,13781,13986,14070,14105,14454,14471,14519,14689,14730,14795,14851,14903,15097,15137,15196,15342,15477,15511,15917,15939,15976,16017,16023,16033,16062,16139,16190,16209,16247,16257,16273,16287,16323,16357,16366,16398,16407,16427,16569,16581,16603,16649,16659,16675,16787,16796,16996,17051,17097,17136,17160,17178,17191,17257,17471,17568,17641,17733,17752,18498,18571,19227,21353,21654,21677,21832,21916,22191,22433,22546,22978,23079,23242,23282,23340,23383,23449,23635,23746,23819,24013,24277,24316,24326,24387,24523,24663,24669],"serializedproperty":[7588],"checker":[19898],"gles2":[11811],"asset_0":[1876],"encounter":[5045,13453,13883,14311,14330,22475,23792],"worldtoscreenpoint":[24693],"dog":[16836],"alternatively":[588,637,678,1051,2626,2702,3037,5385,5415,7082,7158,8194,9515,10514,13220,14008,15737,20810,24258],"splash":[228,287,3106,3727,4171,4508,4591,4679,10572,11604,21683,22448],"demonstrating":[8281,23447],"bundle":[145,249,739,745,1283,1626,1797,1848,4316,4520,4614,4826,7236,7764,10492,10975,11263,11289,11349,11836,14465,14516,14676,14991,15167,15214,17247,21666,22284,22402,22918,23301],"y++":[10120],"diminishing":[14054,17134,17177],"extraction":[8037],"tile":[4083,4461,4719,5580,9868,10766,11803,12518,12797,16067,17454,21343,21897],"shared":[133,184,1247,1558,2017,4197,4520,4573,4685,4761,5204,7223,7314,10097,11349,11754,13309,13564,13772,14501,15068,17881,19740,22684,23432,24369,24538],"#include":[18241],"biggest":[4259,4536,4628,4699,4792,5142,22727],"amd":[8096,8310,11181,16205,17822],"smoothed":[4963,5131,5188,13022],"gettype":[17252],"audiohighpassfilter":[6001],"directx":[6550,6623,7117,16283,16579,18554,19098,19482,20453,20456,21345,23893,24050,24116,24540],"muted":[596,2564],"paused":[6680,7906,12649,14997,22026],"null":[52,1307,3031,3319,3491,5333,5378,6680,6761,6882,7234,8853,9773,10312,10513,10978,11373,11543,11599,12204,12525,12716,13034,13776,16824,21470,21787,21819,22396,22849,23190,23783,24033,24451,24635,24686],"pins":[1607],"blunderbuss":[14279],"slope":[2793,7365,12912,13149,16163,18400],"pack":[927,11861,21413],"samplerstate":[6644],"filtermode":[21478],"they":[29,187,352,397,408,490,588,692,741,755,870,963,1006,1016,1063,1166,1283,1352,1460,1473,1633,1754,1783,1843,1850,2052,2124,2156,2281,2547,2549,2617,2628,2631,2665,2748,2776,2801,2822,2868,3101,3165,3228,3241,3252,3308,3401,3407,3447,3527,3532,3553,3629,3711,3759,3818,3866,3892,4003,4034,4077,4107,4150,4291,4502,4584,4675,4880,4948,5032,5143,5205,5247,5282,5322,5356,5396,5431,5495,5500,5512,5716,5792,5832,5860,6443,6519,6590,6603,6622,6667,6719,6728,6763,6832,6940,6979,7090,7109,7139,7272,7316,7368,7391,7601,7774,7776,7811,7845,7985,8085,8112,8116,8146,8228,8524,8890,9018,9208,9355,9568,9612,9702,9723,9855,9867,9959,10030,10047,10103,10105,10399,10451,10580,10908,10925,11044,11055,11117,11136,11165,11205,11223,11299,11344,11464,11480,11514,11528,11614,11747,11919,11947,11992,12199,12451,12537,12608,12695,12790,12812,12820,12886,13090,13155,13263,13291,13351,13439,13449,13462,13466,13563,13591,13715,13732,13778,13841,13901,13984,14017,14036,14047,14054,14064,14100,14147,14155,14164,14204,14213,14215,14252,14259,14307,14325,14332,14495,14545,14730,14781,14795,14829,14848,14868,14883,15072,15099,15137,15199,15234,15251,15335,15387,15455,15483,15525,15592,15692,16206,16284,16320,16454,16485,16564,16576,16658,16673,16793,16999,17079,17149,17201,17234,17239,17275,17470,17520,17639,17796,17911,17944,18033,18180,18353,18380,18400,18685,18880,19040,19073,19158,19391,19457,19588,19750,20020,20136,20419,20692,20874,21342,21354,21422,21579,21605,21610,21619,21634,21693,21752,21837,21962,21981,22024,22097,22278,22404,22571,22651,22668,22684,22740,22870,22874,22948,23153,23237,23268,23377,23393,23436,23601,23607,23617,23623,23786,23979,24015,24319,24539,24669],"sub-material":[9515],"listening":[13443,17363],"closest":[2677,3836,15335,15859,18037,18384,19775],"accelerated":[2140,2885,5860,14149,14252,23893],"wheelcollider":[5785,5983],"pathname":[6496,21354,21655],"definition":[332,370,1208,2192,2928,3267,3511,8022,11992,14535,17209,19739,20853,21411,23004],"rebuilding":[78,11354],"advertisingmanager":[24338],"discs":[16284],"microphone-like":[2421],"epes":[3091],"'process":[14337],"fairly":[2097,9617,9741,10449,11464,11551,12604,12640,13227,19707,20504,21345],"vector2":[643,7853,8696,10876,12992,15751,16731,23392],"logic'":[10028],"illustrating":[19770],"mark-up":[5497,19669],"a7":[10411,10628],"vcproj":[24312],"rendertype":[12063,18381,18418,18510,18582,18625,19522,19594,19776,19796,20173,20474,20793],"compressions":[1804],"zoom":[694,2097,3153,7157,7354,9615,15350,15846,15868,16646,21401,21420],"_maintexmipbias":[12056],"tcp":[1070,6395,13717,14991,17275,17400],"i18n":[22495],"fork":[6691,6701,6720,6726,6740],"time-based":[21993],"vertexlmm":[19251],"millenium":[15553],"cachedspriteatlas":[6032],"low-end":[3586,13921,15446,20399],"barred":[6856],"local-space":[4036],"aiming":[10917],"exctract":[589],"def-hand":[1676],"meaningful":[3941,9617,17214,22901],"validation":[25,4229,4673,7308,9289,18496],"effectdata":[1235],"kilobit":[23994],"mycachepath":[2037],"-1g":[11647],"aa":[15920,19074],"768x1024":[4306,4596],"spheremap":[3003,18827],"caught":[4451,4658,15757,17324],"organizing":[9960,24019],"p_mix":[1215],"serial":[6521,11391,13880,22958],"according":[288,581,684,1733,1753,2630,2875,3155,3621,3954,4882,4983,5395,5782,5818,6610,6863,8090,9612,9696,10291,10435,10473,11205,11605,12478,12608,13453,13721,14036,14041,14062,14207,14246,14254,15106,15440,16125,16134,16256,16488,17152,17685,21636,21714,23625,23886],"grass":[5658,17732,19535,21615,21828,21871,21897],"namerect":[7600],"rendertexturememory":[11169],"experiencing":[198,2732,10575],"contributing":[6719],"z30":[1551],"monthly":[977,1011],"runtimeanimatorcontroller":[5941],"cycle":[464,2165,4033,4100,5737,11344,11807,14170,21945,23809,24538],"preserves":[12959,15942,23775],"distance-":[11232],"d16":[15550],"options":[52,250,276,289,370,439,593,762,836,968,1010,1053,1175,1462,1780,1796,2036,2296,2609,2685,2740,3050,3155,3186,3352,3569,3647,3759,3869,3911,4002,4107,4168,4498,4574,4668,4765,4894,4933,5023,5129,5540,5665,5690,6491,6678,6702,6726,6860,7085,7375,7774,7971,8021,8089,8335,9157,9335,9489,9621,9993,10050,10064,10200,10844,10971,11213,11290,11341,11347,11368,11400,11430,11699,12644,13026,13576,13732,13766,14191,14225,14281,14467,14527,15197,15586,15650,15861,15943,15979,16046,16175,16378,16495,16530,16637,16696,16745,16747,16756,16945,17024,17032,17066,17088,18712,18863,18955,19028,19045,19176,19290,19436,20352,21277,21401,21422,21617,21832,21851,21910,21921,21940,21951,21971,22254,22440,22655,22719,23301,23383,23450,23619,23633,23691,23773,23875,23913],"uninstalling":[15646],"parse":[15396,17300,24067],"predicted":[13722],"address'":[1608],"webplayer's":[17276],"statically":[1285,10577,12763],"landslide":[14213],"waitforfixedupdate":[7927],"joint":[521,2821,2867,3027,3124,3446,3486,5143,5282,5329,5355,5374,5800,5916,10291,10970,14010,14836,15018,15233,23290,23360],"nexus":[11861,11947],"_prepass":[20141],"canceled":[11629],"specialized":[1469,2801,5456,11931,12297,13767,17470,17552,24246],"repository":[6702,6719,6720,6740,7945,14344,23623],"m_fogcolor":[24734],"filter":[1288,1363,1460,2253,2255,2328,2346,2347,2360,2366,2387,2402,2440,2457,2528,2565,3677,3748,4526,5107,5534,6644,7378,7959,9502,9894,10048,10612,11262,11669,12041,13005,15106,16031,16075,16298,16370,16594,16667,17165,17257,22937,23388,23734],"wake-up":[11731],"satisfied":[2477,7334,13867],"artificially":[12804,13766],"leak":[9571,15938,15975,16007],"promotion":[991],"defining":[377,1195,1209,2189,2685,2882,3207,3629,5206,6618,8772,14037,14249,14257,16295,16350,17102,17569,17988,18458,18497,19564,20273],"perp":[6654],"directions":[185,1755,2131,2653,2799,2992,3711,4983,5790,6603,6860,9698,9868,11129,11925,12955,14102,14237,14271,16243,21652,23170,23392],"manufacturer":[221,271],"carrying":[2619],"navmeshsettings":[6020,24778],"efffect":[9913],"coll":[14123],"speck":[18884],"analyzed":[10921],"lightprobes":[6064,8162,11897,12123],"faking":[20209],"audioplugin":[1284],"lookatheattime":[13037],"promotional":[11868],"bowl":[7541],"media":[239,1551,3815,24549],"unlit":[13954,17529,17547,19426],"rocket's":[10166],"pip":[10043],"cmd+f":[23051],"lag_compensation":[13322],"per-pixel":[3571,5083,7325,11148,11888,13906,15411,15455,15483,15516,15560,18320,19031,19051,19240,19437,19945,20451],"alpha-test":[11873,12180],"direct3d-like":[18322,19073],"logicalandinverted":[18207],"pick":[707,3143,3640,4828,4896,5417,5661,6647,7998,8023,8165,10409,10451,10879,11783,11924,13945,15296,19390,19732,20407,23156,24194,24280,24306],"consisting":[243,13163],"shader_api_d3d9":[18288],"main":[1,52,155,243,393,442,626,753,885,971,1041,1112,1247,1334,1459,1616,1633,2048,2421,3478,3636,4001,4864,4932,5220,5578,5695,5801,5827,6599,6947,6979,7083,7389,7436,7778,7811,7910,7981,8085,8197,9226,9304,9513,9569,9870,10027,10484,10778,10913,11117,11261,11287,11424,11474,11636,11968,12504,12680,12687,12738,12980,13237,13310,13563,13828,13872,14076,14135,14165,14323,14325,14513,14790,14825,14853,15052,15221,15583,16932,17235,17454,17465,17524,17828,18000,18043,18107,18354,18415,18684,18863,19050,19074,19240,19353,19399,19710,20784,21289,21354,21404,21603,21669,21901,21937,21953,21991,22020,22165,22196,22236,22247,22412,22831,22874,23279,23363,23383,24024,24208,24364,24642,24705,24829],"non-kinematic":[6453,13194],"selected'":[15867],"cut-down":[9623],"supports":[12,294,464,1109,1396,1465,1473,2124,2272,2696,2748,3010,3226,3633,3798,5034,5308,5500,6700,6710,6804,6941,7325,8164,8307,9191,9233,9312,9367,9738,9981,10024,10453,10571,10771,10928,11217,11249,11287,11700,12053,13727,14361,14723,15398,15404,15530,15922,15973,16005,16019,16029,16040,16061,16185,16228,16254,16270,16280,16285,16353,16363,16388,16404,16417,16444,16600,16613,16656,16670,16689,16789,17021,17059,17108,17110,17143,17175,17185,17339,17520,17869,19496,21752,21863,22095,22999,23137,23621,23769,23808,23980,24215,24540],"morphs":[9329,9511,9532],"spends":[10800],"exits":[4603,12227,21625,21755],"obstructing":[3866],"getnames":[1892],"self-resonance":[2386,2394,2401,2419,2439,2447,2456],"blue":[1736,1762,4003,5632,5703,8090,8976,9183,11206,11454,12915,14750,14785,15969,16001,16138,16222,17017,17834,18505,19645,20849,21113,21551,21580,21715,22103,23702,24551],"oscillator":[1239,2252,2268],"navigators":[22423],"correlationmeter":[1312],"mail":[22430],"advice":[1911,9258,10504,12546,13774,22470],"indroduced":[18555],"saved":[52,709,1051,1801,3903,5016,6418,6666,7231,7774,7950,9278,9352,10541,11412,13712,14849,16215,16436,21427,21895,21925,21981,22554,22608,22777,24382],"callstacks":[24144],"serial'":[13880],"suggestions":[9593,15347,22874,23607],"outlining":[12299],"receiving":[181,1010,1168,3927,11205,11527,13500,17347,20426],"numleft--":[15303],"lock-step":[2202],"excellent":[1297,8339,12525,22864],"in-focus":[16336],"leakage":[22735],"strip's":[15250],"-force-feature-level-10-1":[6576,24125],"crumbling":[5166],"somewhere":[181,698,1166,1555,3477,6883,7378,9054,9965,11588,12242,12604,13895,16535,16837,19459,22456],"cage":[9449],"corruption":[22366],"inputting":[1084],"prebuilt":[14672],"reloading":[16797],"date":[78,943,977,22271,24391],"ballpark":[12520],"joystickbutton2":[1478],"opening":[393,603,2449,4012,6495,6740,7958,9807,13131,13266,13271,13758,14349,17331,21399,22556],"alphabet":[9947],"merge'":[14337],"working_with_prediction":[13323],"mirroring":[1785],"releasecallback":[1259],"myshadername":[17917],"conventional":[6803,10024,12342],"metro":[1964,14479],"edited":[301,351,685,764,4854,7337,7375,8554,10056,12647,13276,14244,14334,16177,17824,21375,21411,21895,22104,22248,22556,22606,23382,23589,23633],"extend":[1538,5782,6738,7675,7816,7939,8271,8888,14036,14611,15932,18498,19253,21362,21868,22246],"app":[197,207,263,1285,1491,1528,3660,4173,4528,4603,4667,5646,5687,5774,6486,7465,9364,9430,9623,9643,10475,10597,10846,10916,11306,11573,11951,12514,13759,14510,14721,14972,15067,15214,15342,15638,15811,17347,18254,20134,21287,21666,21916,22346,22485,22838,22913,23134,23303,24024,24107,24112,24155,24180,24192,24297,24304,24314,24538,24562,24565,24671],"soldier":[3843,19900],"tested":[1537,11765,19762,22339,23447,23981],"subject":[663,3194,6990,12653,13294,13772,14827,21974,22864],"hd":[1905,3814,9721,10603,11866],"projectiles":[5344,12291,12454,14039,14279,14872,22862],"underwater":[1363,2130],"happening":[1135,1247,1352,10812,11581,12459,14109,14304,16578,17095,21761,22488],"moment":[579,2568,9410,9953,10412,12456,13441],"semi-transparent":[11726,14872,15457,15485,17751],"animators":[386,468,3092,3503,3713,4030,14204],"editorextensionimpl":[6070],"m_pvsobjectsarray":[24728],"960x640":[10599],"system":[58,173,208,221,270,294,309,348,380,416,441,464,603,640,704,739,833,1148,1202,1456,1469,1531,1708,1970,2029,2080,2202,2467,2494,2617,2882,2987,3058,3091,3203,3269,3381,3408,3644,3715,3759,3846,3849,3917,4045,4066,4103,4130,4146,4956,5430,5564,5866,6375,6449,6508,6579,6603,6610,6614,6618,6661,6714,6954,7162,7225,7387,7479,7543,7765,7792,7816,7941,7992,8026,8135,8231,8336,8362,8518,8791,8903,9010,9179,9235,9426,9440,9574,9629,9714,9719,9754,9851,9947,9983,10027,10113,10306,10422,10429,10453,10544,10565,10923,10968,10982,11202,11338,11398,11407,11446,11473,11496,11526,11629,12212,12478,12504,12659,12760,12804,12818,12949,13097,13127,13154,13188,13262,13271,13330,13469,13580,13721,13785,13825,13933,14012,14014,14029,14062,14064,14100,14142,14166,14186,14266,14279,14281,14301,14425,14604,14730,14892,15068,15396,15898,16390,16455,16791,16983,17024,17123,17223,17234,17251,17269,17880,18037,18531,21350,21362,21444,21560,21582,21650,21689,21782,21814,21955,21971,21997,22126,22320,22398,22553,22567,22644,22681,22710,22714,22716,22737,22943,23119,23209,23321,23358,23399,23591,23623,23874,23983,24103,24241,24338,24538,24677],"mirror":[1786,2185,5044,5412,9617,12680],"month":[935,978,1004],"backface":[3674,18383],"additonal":[23785],"full-screen":[239,283,3796,6547,8121,10584,10958,21967],"battery":[1538,10848],"msm8960":[1525],"emulates":[8597],"drawicon":[21360],"closing":[393,603,9743],"passback":[19564],"4rd":[10708],"fragmentinput":[20972],"convolution":[1316,3008],"shifting":[7158],"install-location":[4399,4527],"multiplicative":[18228],"strafe-set":[12955],"particle's":[5862,14026,14049,14103,14162,14188,14249,14257,14261,14268],"dvcs":[6733,14356],"analyzer":[12512],"typetreehash":[1868],"enormously":[3887],"fallbacks":[3200,19378],"isolated":[2156,11919,21403,24551],"type'":[22727],"reconstructiondisc":[16072],"testdev_productname5a2477fc":[1489],"howtos":[987,13112,13144],"some_string":[14553],"model":[182,339,373,384,586,1471,1523,1633,2072,2609,2642,3118,3447,3503,3649,3753,5048,5160,5250,5274,5652,5767,6623,6661,7118,7980,8022,8138,8306,9276,9301,9356,9365,9375,9390,9402,9515,9521,9549,9654,10020,10201,10856,11124,11136,11189,11349,12188,12600,13169,13722,13909,14069,14827,14870,15114,15436,15459,15487,15555,15565,15591,15665,15691,15715,15802,15922,16061,16316,16329,16488,16670,16689,17059,17152,17167,17265,17552,17900,18302,18859,19034,19097,19249,19292,19486,19793,20133,20168,20396,20459,20697,21141,21372,21597,21812,21860,21930,23240,23359,24538],"img":[23556],"static":[39,760,1378,1812,1858,1973,2140,2206,2693,3841,3985,4205,4516,4610,4691,4767,4784,4989,5135,6444,6508,6603,7309,7491,7769,8112,8163,8915,9797,10415,10491,10578,10809,10928,10985,11193,11367,11542,11717,11789,11872,11995,12238,12596,12772,12904,13155,13188,13315,13459,13843,13916,14508,14696,14713,15028,15075,15234,15588,15617,16804,20853,21642,21679,21967,22461,22996,23335,23846],"distances":[2676,9733,11122,12394,13931,16082,16365],"opengl":[1497,4330,4525,4619,5235,5671,6512,7308,8312,10770,10801,11750,12184,12513,12712,15437,15459,15550,17822,17940,18290,18610,18680,18829,18859,19034,19067,19249,19292,19496,21345,23893],"appears":[399,1178,2638,3793,4670,5196,7158,7795,8086,9733,9885,11429,11711,11792,11925,12408,12645,12916,13451,13819,14748,14785,14876,15856,15938,15975,16007,17069,21400,21832,21981,22394,22914,22987,23609],"rf":[22934],"ma":[17,591,7992,9280,9519],"reserve":[13331,22303],"texcoord":[12091,18018,18150,20483,21124],"semitransparent":[7334,15427,18125,18394,19528,19783,20403],"exp":[11782,13941,14114,18665,20763],"stand":[4217,13157,14367],"regenerate":[23757],"5s":[10411,10626],"determinism":[23242],"addition":[187,318,839,1878,2047,3357,3663,6944,7508,9210,10343,11442,11527,12681,12700,12811,12876,12920,12934,12956,13158,13217,13426,14442,14802,17454,18680,19756,21555,22727,22875,24239,24533],"project-wide":[2430,23383],"debris":[2713,4100,8205,12289,13932,14035,14220,14252,14279],"computational":[11948],"lifted":[11622],"eyes":[188,6988,12602,17093],"risk":[11956,14110,23980],"creativity":[13451],"calling":[73,185,306,499,1804,5147,6755,6894,7776,8159,8399,8914,8996,9934,10377,10844,10856,10979,11301,11553,11985,12206,13328,13573,14363,14529,14722,15009,15757,22617,22829,23003,23174,23219,23401,23815,24441],"maps":[175,1614,1845,5322,5543,5779,6547,7136,8088,9300,9495,9871,9911,11156,11542,11902,12033,13928,15411,15455,15483,15534,15721,16170,17685,18051,18139,18323,19945,21566,21586,21600,21855,22210,23678],"framing":[21947],"encoded":[2299,2604,4873,5656,14735,15473,15504,18319,18369,19057,19250],"performant":[18696,23811,23895],"readings":[11670],"'toggle":[1145],"tooltip":[672,8475],"initialized3dxaml":[24041],"intrinsically":[151],"constraining":[2840,3447],"m_scaleinlightmap":[24902],"masterserver":[13327,13438],"retrieved":[75,6793,13328,16538,24563],"swapping":[15280],"savedinstancestate":[14621],"poorly":[14098],"serializationweaver":[4483,4739],"heat":[11749,16429],"clicking":[279,636,670,687,870,1190,1344,1394,1596,1735,1759,2036,3047,3265,3340,3426,3590,4106,4814,4855,5029,6433,7339,7381,8086,8582,9664,10046,11052,11338,12647,12983,13227,13275,13883,14283,14406,14750,14957,15008,15066,15084,15098,15897,16174,16535,17394,20786,22554,22638,23276,23657,23727,24204,24383],"saturates":[15962],"printtext":[13583],"notification":[12702,24539],"one-off":[372],"m_skylightcolor":[24764],"high-performance":[13936,14098],"copyasset":[772],"italics":[21713],"exported":[2,591,1854,3652,9278,9330,9354,9370,9418,9490,9537,12703,12754,14681,15663,21394,23370,23759,24572,24601],"reconstruct":[12320],"endlessly":[5371],"upper-case":[1850],"similarly":[2885,5032,5204,6742,6866,8090,9725,11199,13140,16125,16384,17520,17939,18274,19281,20143,21141],"de-selects":[15008],"soften":[2876,16661],"unity_spotdirection":[20755],"map":[1233,1470,1919,2097,2124,2694,3003,3566,3649,4888,5498,5523,6815,7133,8009,8287,9301,9513,9573,9907,10029,10887,11152,11992,12242,12550,12657,12959,13160,13843,13930,14045,14211,14250,16160,16385,16565,16692,17095,17476,17532,17544,17550,17558,17570,17613,17618,17643,17685,17692,17701,17710,17727,17734,17753,17778,17900,18037,18142,19197,20451,20464,21569,21588,21856,21901],"rectangle-relative":[21404],"progressbarimage":[6999,24408],"inner":[2552,3846,3874,7471,9925,12378,13113,13127,13154,14231,14564,21701],"strictly":[7334,10908,12449,13451,21691,22833],"benefit":[1247,2074,2293,2628,3658,3673,5684,6443,7310,10852,11302,11921,12192,12812,13449,13841,13924,17094,17552,21576],"accessible":[225,1555,4468,4726,11294,11730,12537,12797,12879,13309,13352,13457,13749,14495,14923,15809,21573,21655],"double-f":[23025],"architectural":[21573],"optimise":[2468,5654,9249,9625,15344],"nodirlightmap":[20431],"halo's":[16578],"'mygameobject'":[23817],"reverberations":[2559],"samplername":[18351],"sooner":[12460],"visibly":[21837],"byte":[1247,1630,5638,15148,17327,22847],"slush":[11585],"accompanying":[3793,10921],"explorer":[5488,9961,11307,14862,22546,23321,24191,24400,24551,24653],"desiarable":[9191],"equalizercustomgui":[1290],"referencing":[1284,4485,4741,11044,11350,13777,15566],"non-player":[21772],"outcomes":[15250],"bluetooth":[1473,22925],"dull":[5737],"cross-domain-policy":[17312],"visit":[155,225,834,4460,4718,5833,6699,10567,11218,12819,14309,14328,15230],"crossdomain":[17280,23878],"gl_qcom_alpha_test":[1503],"erroneous":[6458,13217],"case":[166,290,316,367,399,435,504,906,1230,1344,1586,1878,2613,2620,2806,3237,3477,3582,3636,3898,5059,5206,5289,5456,5688,5711,6521,6644,6744,6837,6860,7040,7091,7141,7308,7369,7448,8058,8138,8290,8890,8997,9224,9566,9623,9704,9720,9914,9937,10071,10336,10373,10425,10474,10482,10848,10872,10906,11388,11565,11730,11763,12051,12292,12454,13164,13351,13439,13464,13613,13961,14069,14259,14348,14524,15036,15276,16160,16319,17171,17217,17286,17438,17552,18035,18075,18140,18329,18361,18617,18860,18935,19070,19256,19436,19564,20067,20146,20759,20809,21611,21693,21810,22042,22133,22364,22495,22866,22956,22999,23203,23249,23310,23430,23498,23623,23894,23936,24326,24471,24572],"randomindex":[15285],"-nographics":[6517],"animating":[318,388,465,659,675,697,2202,2225,4044,4104,5832,10815,11508,14956,16495,16637,21385,22185,22236],"places":[1689,3561,3840,5178,5486,11198,11234,13157,13855,13924,16446,16488,17152,17370,17454,18161,19091,21360,21967,22601,22673,23236,23704,24136],"--size":[2037],"frequencies":[1211,2380,2388,2396,2413,2433,2441,2451,2515,2534,12041,15942,15986],"font-weight":[23539],"unity_declare_tex2d_nosampler":[18349],"triggered":[327,666,5756,8244,10830,15036,22623],"capsule-shaped":[2139],"clockwise":[6653,7834,16507,23393],"-target":[10089,14527,23309],"fires":[12454,12569],"we're":[6709,9720,12509,13087,13118,13132,14561,15226,19591],"safely":[2034,9963,10157,11839,13717,13924,19484,22740,23425],"effectively":[929,1112,1179,1360,1850,2131,3196,3431,6868,6990,7144,7309,7906,10928,13315,13757,14790,16196,16297,17336,17465,21987,22024,22118,22979,23607],"conveniently":[314,23274],"movietextures":[2475,10584,23800],"surface":[181,3082,3686,4012,4154,5230,5309,5396,5418,5433,6653,7126,8176,9542,9863,9867,10292,10764,11129,11146,11234,11982,12796,12917,13071,13107,13131,13149,13157,13227,13266,14027,14213,14231,14765,14868,14891,15506,15536,16365,17794,17915,18044,18251,18329,18513,18585,19047,19092,19203,19230,19379,19435,19458,19513,19588,19790,20132,20164,20351,20455,20796,21546,21579,21589,21611,21829,21868,21897,21912,21940,21960,22160,23393],"attract":[4832],"defaultimporter":[6083],"player_lod1":[11124],"exposes":[1204,7396,10453,12754,21611,24361,24534],"dxt5":[5638,5670,5699,15355],"remodel":[9615],"belts":[653],"blow":[3096,3717,5838,10114,14147,15234],"hh974578":[24230],"self-illuminated":[11439,17625,17629,17633,17637,17666,17670,17674,17678],"crack":[4444,4714],"lively":[2156],"sites":[17822],"walljump":[21394],"m_textureheight":[24761],"-vector3":[7847],"prove":[1632],"alphavalue":[18061],"perpendicularly":[15894],"initializeserver":[13333,13443,13729],"onvalidate":[22632],"newproject":[14676],"80db":[1166],"rhythm":[22093],"trick":[6656,14584,15350],"textureimporterinstanceids":[21462],"lighter":[6866,9868,17465,19264],"gameobject-component":[10032,21983],"unity_cameraprojection":[20716],"maybe":[8890,9679,9700,11550,12621,18311,22383],"frustrating":[13793],"client's":[13290],"end-on":[22867],"scatter":[14139,16297],"invincible":[12611],"deformations":[9329,9511,9532,12685,19779],"speeds":[1783,13763,14045,14211,14250,16036],"pow":[11782,12099,12391,13941,19870,20259],"hotkey":[14748],"isdebugbuild":[24581],"expansion-files":[242],"animal":[16818],"continuous":[354,580,1348,3592,5025,5135,5196,5385,8185,12831,21377,21868],"adaptivereinhard":[17095],"hover":[3339,16990,17130,23534],"gif":[5646],"baseclass":[14574],"primitive":[2647,2778,3243,3644,3673,5153,5205,5346,6442,6599,7825,10907,11797,12448,14580,14829,14867,16812,23863],"hood":[1232,9373,9547,11979,18378],"'frame":[15867],"emit":[654,3071,3689,4058,8228,9575,10923,14064,14184,14231,17639],"getwindow":[7487],"guarantees":[11353,11945],"trace":[4451,4658,13438,22404],"password":[851,1604,4428,4556,6378,6494,13327,13883,17387,22924,22956,23630],"cmd-click":[12644],"restraints":[2852,3136],"extra":[181,309,462,532,663,762,1614,1792,1878,2213,2617,3349,3587,6414,6458,6755,7451,7906,9230,9359,9627,9698,10135,10402,10849,10917,11153,11499,12917,13279,13297,13615,13935,14060,14071,14204,14225,14326,14454,15110,15278,15343,15877,15952,15986,16493,16572,16588,17157,18420,20046,20395,21372,22470,22727,23680,24403],"touched":[10928,11625,17111],"braces":[17858,18663,19130],"assetpostprocessor":[1804,1897,23246],"bool":[411,1290,1716,2101,7098,7167,7515,8594,8861,9822,10311,10857,11021,13011,13679,16812,17074,18538,20158,20292,21029,21461,24072,24627,24680],"preallocate":[12578],"cone":[2828,3558,6863,11132,11158,14069,14225,14304,23377],"east":[3199],"rgbslider":[8941],"pauses":[9625,11261,12652,22743,24093],"styled":[3328,5497],"pre-applied":[11223],"continent":[13318],"mytools":[1972],"billboardasset":[6041],"720p":[10603],"security":[1608,3059,4434,4562,9648,10352,10923,12752,14674,15802,17264,21677,22460,22937,23439,23874],"improved":[3617,8306,14002,14644,15456,15484,16347,24550],"low-polygon":[5656],"statements":[1596,12650,17981,18312,19471,19740],"direct2d":[24541],"utilizing":[821],"games":[149,219,468,1375,1469,1551,1966,2425,2708,3877,3892,4222,4567,4656,4669,5285,6460,6490,6601,6926,6976,7120,7446,7778,8306,8772,9233,9614,9719,10024,10032,10427,10443,10558,10597,10852,11785,11878,11944,12451,12604,12818,13300,13327,13724,13748,13773,13860,13887,14004,14017,14076,14746,14870,15087,15189,15239,15399,15640,15808,15856,15885,16085,16941,17024,17234,17283,18104,21809,21964,22097,22542,22833,23103,23401,23607,23980,23990,24239,24516,24533,24549,24601],"cheap":[1276,8245,11823,13900,15461,15489,17446,17460,17512,17541,17552,17564,17628,17636,17681,17689,17698,17707,17716,17720,17784,19419],"costly":[4993,12878,13174,19449],"win80":[14480],"noparamcallback":[22512],"alphabetically":[6114],"struggles":[9627],"off-line":[10449],"kernel":[6628,15800,16313],"operation":[168,595,3866,5002,6962,7110,7279,10767,11344,11551,12346,12640,13174,13328,13648,13773,13941,14339,14597,16026,16079,17010,18185,18695,19283,19576,19738,20959,21420,22490,22899,23640],"pvrimporter":[6100],"xm":[1122,1465,2272,22095],"adjusts":[16256,22133,22214,23728],"forbid":[3837],"repetitions":[2336,2348,17010],"beginarea":[9097,13484],"flexibly":[9712],"raycaster":[2764,7823,15339,16419,16621,16626],"tabbed":[11117],"ldr":[9187,17092],"arrives":[10414,13568,13713],"unity_half_texel_offset":[18321],"texture-space":[21429],"unpauses":[24093],"truly":[2665],"merge-tool-cmd":[21321],"begingroup":[9020],"networkviewid":[13503,13567,13598,13743],"sharedmesh":[1719,5312,11776,12630],"varied":[407,5141,14285],"creator":[5763,5832,13285,21916,22191,22241],"feeds":[8479,21671],"balls":[5354,14279,14872],"innertext":[8697],"iconset":[9630],"targetted":[1547],"yield":[64,1624,6668,6882,7233,7923,9659,9828,10217,10511,10867,11011,11272,11731,12034,12503,13507,15145,16595,17245,22448],"dividing":[6656,7106,12395],"picker":[7380,14798,14848,19141],"non-primitive":[14580],"includes":[227,1147,1848,2214,2619,2930,4356,4541,4638,6887,8123,8890,9719,9889,10560,10924,11356,11456,11985,13428,14306,14358,14517,14701,15010,15051,15243,15391,15443,19037,19221,20774,21799,22396,23600,24603],"fragmentoption":[19484],"understood":[151,1471,6887,6976,8039,13282,17092],"applicationid_":[9673],"cortex-a9":[10609],"active":[145,1071,1128,1427,1825,2628,3340,3587,3619,4340,4535,4623,4791,4999,5289,5364,5753,5826,6502,7090,7815,7899,8597,9187,10047,10319,11206,11247,11426,11717,11885,12229,13194,13361,13748,14039,14773,14966,15072,15081,15220,15699,16391,16526,17259,17265,19779,22185,22236,22741,22919,23208,23534,24306,24671],"gequal":[18067,18396,18998,19569],"info_0":[1882],"cross-fading":[3624],"thick":[14072,14155],"chooses":[3064,4325,13167,14273,19738,21401,22740],"impact":[236,3899,4123,4359,4641,5002,5135,5688,5872,6444,7330,10455,11148,14117,14266,14958,17456,23213],"dampened":[2386,2394,2401,2419,2439,2447,2456,14109],"parametric":[2493],"specific###":[23126],"ferns":[22188],"readtexturesettings":[21469],"achieved":[1,535,1398,7334,8162,9184,10200,11253,13933,14155,14259,16189,16224,16442,18709,18935,21772],"random":[1316,3080,3698,4038,4885,5417,5425,6458,6641,11600,11858,12819,14071,14110,14220,14226,14252,14273,14288,14304,15238,16607,21790,21835,21920,21953,21973,22388,22809,23336,23436],"tanks":[14140],"run":[203,221,265,323,333,361,468,588,836,1089,1533,1609,1734,1755,1968,2029,2630,3430,4190,4526,4632,4667,4756,5164,5615,6367,6437,6484,6622,6679,6970,7419,7923,8096,9222,9593,9663,9918,10074,10201,10427,10443,10470,10560,10778,10839,11339,11481,11746,11870,11944,12189,12344,12451,12496,12645,12959,13292,13434,13752,13917,14076,14169,14359,14496,14971,15013,15087,15189,15389,15599,15617,15654,15811,15973,16005,16019,16029,16040,16206,16228,16254,16270,16363,16404,16444,16576,16600,16613,16656,16789,16794,17108,17143,17175,17185,17216,17347,17404,17814,17931,18329,18564,18645,19091,19219,19436,20928,21290,21381,21667,22366,22419,22531,22913,22981,23151,23705,23759,23796,23895,24046,24138,24198,24305,24363,24562,24569,24648,24671],"negotiate":[21650],"sub-directories":[14690],"engel":[11813],"interacts":[2651,2782,3669,5350,5436,10293,23447],"navigates":[16751],"capsule":[575,2777,2797,3673,3851,5155,6442,14868,21933,22114],"understands":[9441,16841,18327],"letting":[2706,7451,9679,14307,17079,24012],"buttontext":[24700],"guideline":[136],"treasures":[6926],"processingcloth":[15015],"twisting":[2856,24389],"compensates":[5792],"sub-shaders":[19390],"please":[72,196,277,283,656,750,834,980,1024,1049,1962,3234,3269,3334,3381,3408,3580,4399,4527,4654,4718,5206,6357,6520,6579,6620,6986,6993,7220,7320,8116,8817,9175,9499,9976,10039,10421,10429,10460,10575,10956,10979,11267,11403,11441,11555,11698,12797,13710,13733,13951,14509,14697,14753,15039,15235,15803,15812,16568,17347,17446,17450,17460,17465,17500,17504,17508,17512,17541,17546,17554,17560,17564,17610,17615,17620,17624,17628,17632,17636,17669,17673,17677,17681,17689,17694,17698,17703,17707,17712,17716,17720,17724,17729,17780,17784,18371,19123,21553,21580,21924,22099,22263,22336,22542,22945,23083,24128,24358,24391,24606,24671],"audiomixersnapshot":[6066],"bigtree_bark_normal":[22203],"devicemodel":[11547,15704],"upper-body":[352,358],"previews":[4871,5414,15114],"db":[1418,2311],"getpixels":[5602],"brevity":[1212],"unminified":[23786],"usagemode":[21475],"behaviors":[639,2719,2868,3484,3830,3887,5141,6603,8720,11557,13732,23268],"_circlesx":[20931],"johndoes":[13343],"deck":[15280],"triangle":[179,677,3663,6647,7834,10766,10810,12745,13902,15098,16386,20457,20810,23312,23392],"hack":[11549],"lb":[15781],"armeabi-v7a":[14475,14520],"currently":[280,392,601,622,630,682,960,1039,1438,1551,2074,2122,2601,2640,4449,4656,4874,4933,5301,5417,5501,5686,6509,6623,6969,7090,7129,7333,7795,8174,8307,8828,9331,9377,9392,9404,9431,9522,9551,9621,9743,10032,10053,10411,10471,10831,10917,10954,11243,11477,11696,11750,12518,12647,12840,13276,13359,13708,13841,13989,14384,14731,14895,15072,15092,15099,15191,15650,15773,15908,16391,16506,16745,16757,16964,17085,17111,17263,17270,18327,19060,19099,19486,20454,20712,21919,21947,22099,22193,22422,22656,22689,22741,23134,23270,23755,23769,23814,23875,23894,24001,24077,24129,24214],"unlock":[211,1608,23650],"playhead":[670,22559],"-installapp":[1544],"inserts":[20772],"showunsupported":[7041,23937,24472],"layer":[352,358,366,490,619,1658,2620,2713,3180,3262,3397,3546,4130,4146,5392,5430,9218,9445,9597,9897,10037,10302,11047,11057,11202,11481,11511,13290,13717,13933,14036,14510,14721,15457,15485,16073,19106,21859,21985],"versioned":[7957,8172],"opened":[680,4226,6462,6494,6951,7400,9763,13303,13434,13758,14806,21895],"didreceiveresponse":[10365],"non-minified":[23775],"shift-q":[21944],"makefile":[13432],"flattening":[5513,13839],"measurements":[10020,11684],"signs":[1533,3226,5486,23453],"detection":[414,3665,4130,4146,5133,5194,5767,5873,6467,6592,10675,11045,12470,14983,16355,16382,19082,19513,21628,21868],"gl_angle_framebuffer_multisample":[1505],"added":[71,158,360,469,637,670,698,764,883,965,1096,1109,1128,1166,1208,1459,1607,1613,1849,2423,2613,2702,3080,3243,3349,3627,3644,3684,3698,3776,3998,4038,4778,4872,5121,5210,5269,5415,5429,6442,6761,7343,7391,7767,7845,7901,7944,8306,9206,9208,9373,9731,9959,10048,10402,10502,10578,11195,11212,11391,11476,11898,13249,13274,13421,13839,14036,14264,14464,14744,14786,14851,14868,15194,15296,15343,15445,15479,15508,15583,15948,15984,16319,16464,16489,16537,16680,16762,16810,17017,17153,17164,17209,17384,18045,18183,18875,19290,19945,21550,21630,21693,21908,21991,22165,22366,22583,22716,22760,22876,22987,23270,23298,23449,23623,23726,24239,24319,24413],"grassbillboard":[19536],"a8":[10590],"respawn":[21775],"management'":[11400,11409],"remains":[1319,3839,8522,10421,11234,13285,15607,21562,21625,22106],"abstraction":[9597,17795,21634],"perforce's":[893],"collectables":[12288,12465],"cross-origin":[23880],"position-":[2884],"cmd+alt+p":[23055],"click-and-hold":[8537],"serialized":[151,201,244,5466,8039,8179,10468,13703,16792,21677],"grab":[1643,10336,11921,15137,15771,18695,19739,21442,21809],"home":[836,931,4273,4498,4574,6851,10685,11560,11647,22948,24234],"ampersand":[8058],"branching":[8306,21637,22244],"quicktime":[3767,22050],"restarts":[6426],"reviewers":[6727],"cycles":[323,4086,5383,11790,12519,12820,14276,16833,23296],"provided":[221,273,851,1051,1533,1577,1961,2033,2076,2617,3360,3487,3550,3796,4360,4567,4642,7001,7328,7819,8401,8996,9454,9696,9776,9889,10027,10086,10412,10442,10560,10854,11127,11611,11840,11978,13424,13771,14070,15335,15711,16241,17364,17404,18685,18951,19182,20043,21362,21583,21753,21851,22203,22579,24239,24416],"transfered":[13929],"foot-sliding":[12959],"gamename":[4447,4565,4654,9643,13328],"couple":[3533,9222,10413,11991,12485,12961,13982,17532,17795,20134,22306],"cuda":[6622],"exp2":[18665,20763],"japanese":[3226,9947],"removed":[1041,1183,3870,4058,5876,6520,6791,6926,7087,7390,8037,8212,9208,10047,10075,10472,10921,11226,12796,14029,14182,14304,15094,15346,16068,18714,19176,19279,19484,19922,20439,22497,23270],"logicalinvert":[18199],"sense":[1458,2048,2421,2633,2673,3303,3866,3887,6710,8819,8997,9597,10030,10908,11868,12449,13273,13330,13565,13846,13908,14204,15199,16556,18946,19432,19898,21617,21827,23209],"relatively":[10021,10449,11528,13311,16167,16246,16833,21619,22838],"normals'":[185],"acceleration":[2138,2870,3828,9602,11643,13169,14294,23266],"plater":[4189,4755],"bark":[19532,21930,22203],"physically":[464,1288,2005,2138,2801,3674,5164,5198,6464,7797,9728,11923,15414,15749,20367,21573,21615],"teh":[16992,17132],"boundary":[1247,2604,2901,12797,15904],"waituntildone":[22490,24072],"portable":[24363],"-v":[22520],"sub-section":[14186],"gapless":[2286],"exclude_renderers":[19480],"memory":[367,1178,1786,2219,2281,2620,3198,3684,3841,4401,4529,4644,4702,4776,4807,4902,4958,5204,5602,5678,5700,7147,7241,7330,7970,7994,9618,10592,10827,10978,11163,11198,11263,11301,11349,11578,11746,12182,12201,12453,12538,12801,13149,13174,13866,13891,13977,14999,15009,15040,15084,15153,15352,15447,15673,16327,20984,21342,21413,21987,22362,22404,22734,23242,23766,23863],"unity_standalone":[14369],"ulf":[22973],"accuracy":[3056,3994,4132,4148,10905,12446,12799,13863,21855,22020,23159],"speedtree":[3626,21916],"direct3d9":[5235],"evened":[7151,13149],"selectiongridint":[8619],"separated":[2160,4317,4521,4615,4973,14452,14550,15101,19060,19479,20772,22659,23426,24091],"types":[1,151,328,400,408,640,1063,1208,1360,1733,1753,1938,2073,2364,2370,2585,2643,2868,3556,3644,3759,3767,3837,4021,4815,4987,5096,5141,5200,5205,5602,5764,6407,6442,6582,6683,6863,6990,7333,7365,7384,8123,8147,8399,8509,8890,9189,9278,9477,9679,9969,10024,10423,10578,10949,11117,11127,11165,11257,11711,11750,11986,12229,12539,12653,12877,12924,13177,13430,13593,13778,13859,13988,14013,14054,14266,14279,14546,14868,15052,15110,15335,16381,16410,16502,16538,16799,17088,17345,17816,17865,18224,18278,18496,19197,19221,19230,19438,19522,20352,20729,20906,21374,21569,21575,21613,21906,21936,22389,22567,22736,22995,23279,23730,23863,24236,24538,24588,24604,24652,24669],"damage":[3483,5872,10165,23605],"forwardbase":[12063,18278,19050,19234,20729],"disk":[30,615,2031,3503,5461,7281,7984,10538,11838,15001,15169,22339,23631,24319],"naive":[12301],"alt-clicking":[9210],"'select":[17425],"trial'":[13881],"apex":[2128,14874],"monitor":[1321,4222,4669,6865,11336,12555,14996,15051,21993,22368,22436],"git":[6702,6710,6730,21289],"harsher":[11232],"hovering":[3426,21947,22638],"spine":[14837],"particlesystem's":[14077],"subscribes":[24052],"commons":[11235],"ikcontrol":[10304],"runspeed":[17214],"phonesdk81":[14480],"textureimporters":[21428],"recompile":[14460,14698],"#ff00ffff":[21723],"determine":[184,1324,1531,2221,2623,2710,3004,3553,3756,4395,4522,4854,5057,5200,5280,5396,5542,6386,7090,7767,7985,8599,9684,10782,10848,10940,11158,11549,11622,11713,12042,12299,12648,13291,13423,13709,13729,14125,14184,14188,14304,14958,15342,15718,15967,15999,16046,16076,16175,16294,16335,16386,16530,16696,16739,16945,17015,17066,17454,17751,18096,19755,21410,22366,22741],"force":[285,1608,1804,1930,2233,2279,2836,2885,2968,2981,3028,3129,3457,3496,4038,4121,4145,4402,4530,4837,5030,5202,5330,5365,5375,5774,5809,5827,6464,6494,6671,6758,7784,8120,9710,9993,10962,10971,11247,12525,13219,14074,14148,14307,14942,15199,15235,15588,15611,16486,16722,16795,17150,17205,18400,18564,19123,19589,21420,22279,22879,24116],"animationclip":[5927,7978,15598,16799],"breeze":[24001],"rtools_setup_arm":[24168],"straddles":[12797],"become":[23,490,4038,5261,5289,5598,8112,9287,9729,10428,12542,12651,12687,13274,14108,16170,16564,16842,20654,21578,21605,21837,21937,21981,22023,22114,22760,22867,23214,23895,24046],"player-controlled":[21772],"configchanges":[14635,22309],"invaluable":[5099,24128],"snapped":[24093],"rigid-bodies":[2236],"monitored":[2363,2369,23623],"dual-core":[10609],"motions":[352,589,1733,1753,1784,2630,4064,11344],"took":[4602],"#if":[14442,24525],"3gp":[3798],"renderers":[2151,2206,2776,3092,3611,3620,3629,3713,4043,4088,5299,5731,7333,8264,11174,11205,11501,11744,13841,19479],"8th":[15784],"presentation":[2665,4169,4495,4570,4661,4751,9621],"history":[156,879,9321,9543,15092,18597],"vim":[14812],"unusable":[13311,19123],"fit":[187,290,693,2064,2118,2750,2806,3015,3039,3539,3985,4441,4511,4711,4846,4948,5250,6435,6693,9357,9690,10163,11168,11606,12517,13122,14835,14878,15928,16104,16232,16461,16511,16579,16646,16740,17038,22568,22719,23377,23780,23988,24014],"entering":[710,2549,3403,4439,5494,10245,12617,17095,21414,22718,24083],"implementations":[13640,13769,17821,19457,24292],"letter":[3203,8141,23600],"how-to":[9720,10435,22918],"listdictionary":[24247],"sometype":[22458],"customcolor":[20021],"rible":[11813],"consideration":[3615,11952,17544,17578,17613,17618,17660,17692,17701,17710,17727,17778],"awake":[1717,2568,4999,5192,5209,7790,7899,10868,12773,13371,13476,14076,14112,14181,14410],"physicsraycaster":[15338],"bulletinstance":[10885],"cpu-present":[10789],"endproperty":[7589],"getstaticfieldid":[14570],"careful":[3115,3744,6442,9266,11840,13793,14829,18957,22436],"organizer's":[22446],"jackson":[11953],"unityedgelengthbasedtess":[20631],"appended":[6452,14010,23425],"bytes":[742,1618,2044,5447,7223,10545,11843,13331,13448,15139,15351,17251,17369,22438,22737],"several":[603,1763,1797,2588,2998,3143,3617,4947,4983,6778,7082,7322,7337,7398,7797,7981,8890,9889,9934,10021,10101,10112,11117,11139,11339,11349,11477,11985,12570,12685,12687,13330,13575,13755,13869,13897,13982,14103,14204,14285,14524,14781,15092,15110,15245,15679,15869,16175,16745,16757,17076,17088,17095,17263,17265,17393,17537,17908,18241,18286,18556,18950,19036,19496,19522,19777,20826,21080,21398,21413,21643,21916,22023,22109,22246,22446,22565,22879],"rest":[73,246,320,521,589,598,842,1185,1231,2998,3428,5190,5385,5774,5810,6665,9612,9914,9925,10979,11146,14529,15008,15072,15411,15525,16321,16511,17953,19439,19458,19769,20749,22145,23401,24523],"recalculatenormals":[185],"embeds":[6562,23446,23764],"transtions":[595],"cutscenes":[9621],"texture":[147,187,212,235,289,653,761,1055,1522,1613,1804,2057,2690,2998,3141,3190,3394,3406,3439,3561,3609,3631,3764,4083,4303,4510,4593,4888,4923,4940,5009,5095,5389,5461,5492,5500,5515,5666,5689,5733,5899,6607,6633,6858,7313,7852,8014,8087,8124,8189,8325,9218,9260,9303,9370,9386,9407,9435,9484,9525,9554,9571,9588,9621,9867,9879,9913,9972,10043,10135,10581,10767,10956,11168,11228,11299,11349,11427,11606,11746,11902,11992,12292,12478,12525,12636,12746,13905,14007,14191,14220,14267,14302,14885,15345,15470,15504,15550,15673,15796,16137,16187,16207,16285,16350,16361,16426,16495,16576,16579,16608,16637,16652,16687,16794,17106,17379,17454,17464,17472,17529,17567,17640,17685,17734,17751,17805,17857,17938,18080,18142,18231,18262,18320,18360,18435,18604,18692,18712,18933,19027,19053,19066,19147,19187,19210,19238,19254,19489,19513,19748,19777,19807,20145,20169,20395,20468,20878,21081,21342,21398,21413,21567,21596,21745,21832,21846,21858,21897,21960,22203,22729,23386,23705,24015],"deselects":[22692],"bulletoptimized":[12409],"game-quality":[3649],"arrangements":[7083],"deviceuniqueidentifier":[11547],"9-slicing":[22727],"streamed":[1791,1957,3252,4208,4771,6504,11297,22922,23138,24017],"datastructure":[16842],"assistance":[11405,11421,13885,22976],"minified":[5654,24391],"simplify":[173,741,1471,1848,11745,13274,14004,21634,24550],"swing":[2619,2831,2946,24389],"brower":[23769],"v2":[20580],"stops":[2578,4124,5138,7389,7934,11721,13717,22385],"lws":[9463],"renameasset":[772],"displaced":[3357,17177],"chose":[6708,15950,16142,16370,23629,23796],"driver":[7308,8336,10801,11580,11825,12513,13900,13986,15048,15137,19123,22435,22895],"upper-left":[2719],"before-hand":[10136],"caution":[10846,12620,22836],"anchormax":[9684],"multicast":[1094,12536,22493],"re-use":[364,374,24382],"sliding":[5337,6462,8631,11344,11721,13209,16699,16948],"xxx":[6385],"opengl-like":[11750,18322,19494],"wrapmode":[493],"wishes":[1376,17935,20776],"speedometer":[166],"feature":[219,468,888,1517,1786,1905,3765,4100,4303,4510,4593,4714,5048,5163,5459,6356,6443,6572,6755,7765,9955,10453,10569,11239,11286,11350,11403,11489,11811,12651,12689,12751,12818,13464,13763,13841,14005,14069,14358,14770,15453,15867,17163,17257,17276,17685,18294,18361,18384,18496,18955,19097,19494,21567,21626,21958,22396,22653,23136,23736,24017,24119,24221,24399,24549,24595],"approximate":[182,4956,5200,6442,10907,11937,12448,12519,14030,17537,19437,21836,21964,23160],"record":[704,1456,3024,6681,12351,14603,14957,15137,18077,22042,22560],"might":[172,184,272,314,323,393,489,587,749,836,1063,1091,1135,1312,1361,1460,1557,1760,1968,2009,2097,2124,2645,2693,2804,3095,3196,3255,3716,3802,4444,4714,5164,5202,5248,5324,5344,5500,5649,5785,5818,6451,6664,6740,6763,6874,6961,7134,7320,7859,7931,7986,8060,8250,8890,8997,9513,9559,9597,9678,9857,10109,10341,10410,10856,10918,10968,11068,11139,11152,11286,11305,11354,11501,11550,11683,11825,11951,12182,12199,12588,12602,12611,12657,12733,12756,12802,12818,13285,13334,13434,13448,13464,13466,13641,13722,13816,13822,13896,14038,14047,14054,14062,14109,14155,14266,14278,14609,14730,14836,14958,15005,15068,15087,15189,15344,15585,15847,16074,16295,16319,16385,16595,16645,16796,17400,17879,17943,18040,18104,18323,18374,18412,18968,19284,19419,19513,19900,20134,20774,21348,21372,21439,21615,21626,21706,21772,21844,21973,21993,22310,22322,22388,23190,23236,23272,23308,23379,23623,23774,23808,23814,23993,24046,24158,24199,24296,24563,24572,24673],"injection":[23439],"flashlights":[11133],"netfx_core":[4469,4727,14381,24266,24327,24356,24519,24531],"resource_guide":[13324],"re-encoded":[1111],"ddsimporter":[6095],"maximal":[21920],"audiospeakermode":[2466],"workflow":[78,382,743,839,1046,1108,1437,1469,2009,3845,3873,4026,6976,7759,7761,7764,8167,9513,9966,10051,10160,11356,11453,12792,12814,12900,12944,13151,15385,16189,20397,21372,21569,21586,21591,21608,23131,23296,24019],"props":[3241,8205,14017],"camera's":[2076,2126,2136,2671,5119,5327,7141,7335,7786,11062,11156,12680,12734,13822,13841,15474,15509,15851,15892,16170,16295,18360,18621,19082,19777,20652,20712,22869],"feel":[982,1208,1417,2801,5141,6590,6832,9310,9679,11234,12653,14138,23160],"queues":[19759],"dsptick":[1324],"stable":[4948,5798,6692,14304,15233,15591,22283,23980],"treat":[249,1618,12888,14268,15139],"corresponding":[313,327,712,1230,1339,1736,1760,2097,2126,3014,3254,3619,4109,4134,6742,7797,7852,9605,9882,11350,12323,14629,14748,15237,15852,15897,15967,15999,16165,16246,16794,17015,18024,18043,18157,18621,21939,21976,22097,22255,22650,22898,23772,23812],"whose":[12,327,2626,3839,5268,5405,7397,11155,12796,13279,13591,13865,14069,15113,16771,17218,18062,19060,19382,19568,21398,23444],"256x1024":[9258],"parenting":[1401,3125,5144,9208,13703,14835,21988,22101],"audioreverbzone":[6003],"--component":[9672],"re-installation":[22371],"discussion":[13770,21580,22099],"alt":[725,3403,3515,4226,4670,5494,6810,7357,7958,11342,14796,14864,15098,15844,15873],"legs":[8023,14007,14836],"divides":[3998,22893],"looses":[4219],"border":[2875,3346,3418,5612,5788,6996,16512,21404,22644,24405],"refractive":[9893],"challenging":[12888],"imaginable":[2693,9113],"rampoffsetb":[16222],"started":[218,836,1004,1208,1550,2045,5254,6394,6508,6699,6731,6739,6894,9031,9374,9388,9400,9519,9547,10442,10557,11336,13334,14283,15659,15676,15807,16453,17823,17915,22975,22978,23087,23132,23609,23794,24213,24360,24526,24600],"uploading":[746,833,15646],"setblendshapeweight":[1703],"tbc":[9445],"packets":[3913,13448,13713,13766,17364,22937],"vignetting":[17158,20909],"aims":[11527,13308],"track-pad":[15878],"collaboration":[2027],"suspension's":[5779],"navy":[21730],"oscillates":[5383],"splinter":[4929],"ppc":[14366],"encourage":[6740],"superficially":[14783],"dx11-specific":[7129,19099],"rotates":[581,2122,2827,3501,3839,4977,5817,12477,22116],"second":[52,179,578,720,1749,1760,2246,2262,3076,3694,3826,3885,3954,4056,4137,4335,4953,5056,5298,5324,5791,5814,6653,6824,6913,7271,7451,7999,8060,8357,8693,9058,9911,9934,10047,10054,10848,10978,11121,11665,11951,12454,12932,12962,13136,13263,13293,13448,13613,14041,14062,14207,14218,14246,14304,14602,15119,15192,15243,15443,15625,16973,17454,17464,18104,18142,18709,18943,19309,19617,20443,21141,21614,21843,22006,22244,22668,22877,23243,23393,23994,24619],"mechanical":[10685,14140],"scheme":[1212,2856,7776,8375,10872,12391,12577,14098,14802,17046,21394,24389],"bound":[10782,11249,11744,12492,14292,19270,22997],"directionality":[23711],"skill":[17235],"dazzled":[16256],"unity_flatten":[18313],"nofog":[20432],"reckoning":[13723],"leg":[2619,12821,14839],"insensitive":[1284],"subdivision":[9449,11197,13843],"ht":[3503],"counts":[3663,15101,15487],"setaddfunction":[24640],"canyon":[2346,2357],"wasd":[15841,15887],"tagged":[15218],"infra-red":[10612],"plasticsd":[14350],"spherescript":[24679],"rods":[14876],"routers":[13749],"gl_oes_get_program_binary":[1500],"atlasname":[21455],"finalcolor":[20045,20417],"work":[185,209,231,386,442,532,663,846,1049,1094,1315,1349,1614,1632,1966,2017,2229,2423,2617,2634,2719,2854,3050,3092,3138,3143,3209,3428,3482,3579,3707,4434,4562,4714,4833,4880,4909,4964,5026,5169,5246,5299,5629,5719,6442,6517,6594,6744,6961,7308,7354,7419,7802,8008,8174,8401,8720,8773,8997,9233,9337,9541,9614,9689,9695,9846,9981,10053,10103,10292,10439,10765,10920,11153,11197,11211,11464,11528,11711,11729,11785,11935,11959,11978,12192,12459,12525,12700,13134,13315,13351,13434,13570,13732,13775,13851,13889,14313,14355,14564,14701,14835,14868,14919,14983,15009,15087,15110,15211,15344,15532,15550,15559,15580,15944,15980,16158,16382,16510,16682,16822,16963,17093,17110,17195,17348,17421,17523,17824,17935,18034,18449,18505,18607,19085,19230,19779,20020,20143,20462,20776,20780,21352,21374,21407,21413,21553,21619,21790,21839,21847,22020,22111,22200,22383,22682,22926,22948,23152,23209,23275,23299,23619,23632,23790,23808,23895,24019,24219,24307,24362,24525,24669,24673],"m_previouslyselected":[9765],"_detail":[19879],"lightingstandard_singlelightmap":[20286],"logistics":[12456],"m_firsttextarealocation":[24612],"buildplayer":[1968,6528],"closedstatereached":[9822],"textscriptimporter":[6084],"incorporates":[14882,17683,21275],"lock":[661,10051,14342,15104,15233,15867,21920,22107,23644],"portions":[2626,2700,10596],"landing":[6724,6726,12788,12929],"unpredictable":[3485,14140],"duplicates":[14781,22249],"hardware":[214,219,906,1109,1417,1607,2283,2605,2696,3617,4200,4632,4688,4764,4932,5684,7134,8305,9198,9593,9919,10001,10029,10558,10585,10805,10903,11119,11172,11228,11553,11645,11802,11893,11947,11978,12199,12457,12509,13913,14897,15404,15446,15470,15538,15559,15677,15921,15972,16004,16018,16028,16039,16086,16184,16204,16227,16253,16269,16279,16315,16319,16362,16387,16403,16416,16443,16575,16579,16612,16655,16658,16688,16788,17020,17058,17107,17142,17174,17184,17786,17821,17921,18050,18139,18379,18645,18987,19291,19378,19419,19457,19538,19738,20399,20868,21345,22093,22273,22366,22404,22915,22960,23893,24601],"navmeshagent":[3818,6019,12828,12901,12922,12967,13101,13198,13231,13248],"tolerance":[4125],"miles":[2801],"images":[975,991,997,2131,3001,3146,3407,4100,4104,4507,5387,5586,6603,6993,8462,9053,9301,9469,9641,9679,11120,11226,11753,12041,13455,14007,14302,14878,14904,15967,15999,16060,16138,16321,16515,17015,17378,20984,21829,21875,21897,21965,22042,22644,22727,23449,24549],"linkage":[752,14502,14677,14716],"src":[14612,19268],"vector3s":[13448,23392],"service":[927,2032,10953,13424,17275,22940],"trickshot":[13273],"pluginstatus":[7039,23497,23935,24423],"ways":[611,1398,2066,2156,2621,3230,3615,3653,3865,5613,6610,6738,6763,7221,8245,8888,9428,9719,10913,11232,11427,12041,12225,12451,12655,13331,13890,14140,14524,14835,15137,15192,15245,15869,16462,17095,17793,19202,20727,21570,22093,22394,22568,22649,23242,23363,23901,24228,24671],"backgroundandforeground":[16328],"snk":[23405],"camera-visible":[21348],"disp":[20468],"pushassetdependencies":[11350],"browse":[715,4427,4555,6377,9456,22331,23321],"pro":[289,831,2007,3765,4470,4728,6513,6993,9651,9893,10965,11606,13881,14802,15408,15459,15487,16214,16435,17191,22050,22951,23620,23739,24404,24523,24603],"three":[179,370,658,714,1010,1289,1522,1675,1751,1789,2288,2586,2878,3092,3118,3713,4017,5039,5206,5354,6455,6603,6647,6990,7834,8395,9264,9720,11124,11259,11410,11644,11713,11744,12602,12882,13328,13430,13448,13460,14725,14748,14789,14825,14857,15108,15464,15721,15897,16822,17362,17793,18954,19096,19202,19442,19589,19779,20603,21841,22106,22254,22431,22548,23223,23363,23393,23421,23446,23714,24215,24321,24579],"downloadandcache":[7253],"indexoffirstchild":[16883],"collapsing":[13278],"congfigure":[2964],"lens":[3141,3181,3531,9191,9560,15938,15974,16283,16319,16397,17159,19764,22867,23722],"tranform":[6442],"endwidth":[3601],"800x600":[9857],"screenpointtoray":[2076,11636,12980,13237,14135],"reference":[72,191,329,348,395,607,666,696,752,1103,1191,1464,2119,2133,2141,2191,2296,2466,2525,2543,2562,2626,2651,2690,2750,2776,2782,2814,2826,3025,3128,3141,3244,3261,3391,3411,3450,3527,3568,3669,3681,3763,3791,3847,3875,3892,4028,4043,4071,4933,5152,5205,5214,5350,5436,5457,5721,5782,5875,6445,6550,6578,6587,6589,6640,6744,7378,7762,7774,7776,7978,8060,8138,8140,8342,8507,8817,9175,9370,9569,9689,9729,9994,10034,10423,10447,10972,10978,11120,11141,11142,11279,11298,11347,11350,11470,11547,11698,11944,12206,12650,12946,13110,13128,13145,13569,13699,13733,13768,13776,13994,14039,14185,14281,14318,14320,14540,14954,15586,16100,16719,16794,17196,17203,17273,17516,17815,17865,18031,18075,18829,18914,18965,19201,19548,21384,21585,21623,21632,21657,21955,21957,21967,21988,22123,22279,22470,22588,22711,22733,22736,23082,23176,23254,23276,23321,23396,23726,24208,24288,24391,24643],"coordinate":[459,2076,2657,2858,2894,2987,3032,3492,5334,5379,5395,5564,5806,7114,8402,12681,14878,16414,16646,17939,18043,18150,18262,18322,18714,19067,19178,19280,20443,20507,20847,21081,21404,21888,21977],"presentrenderbuffer":[10804],"loadmainassetatpath":[764,11373],"dispatches":[10027],"specifically":[1535,2719,3909,5157,5767,6943,8376,9368,11893,13576,13843,14359,17347,17518,21930,21991,24675],"feeling":[1375,5730,11944,13822,14205],"penetrate":[2795,4142],"sever":[24303],"shaders'":[18547],"mix":[1125,1148,1225,1350,1420,1461,1764,2243,2259,2353,2514,2533,2557,7508,11356,11928,13215,13963,15956,15990,16108,17901,21641],"settings":[203,223,241,276,288,308,322,367,436,454,592,828,833,1052,1079,1106,1133,1144,1334,1442,1515,1596,1603,2013,2157,2221,2426,2460,2573,2620,2642,2686,2765,3049,3119,3186,3245,3295,3439,3567,3644,3759,3840,3954,4109,4134,4167,4493,4568,4659,4749,4779,4812,4875,4931,5006,5168,5208,5223,5286,5427,5577,5707,5783,6437,6596,6644,6814,7091,7120,7136,7375,7524,7761,7763,7983,8124,8183,8335,8883,9274,9305,9313,9346,9533,9705,9871,9983,10036,10302,10409,10470,10582,10840,10852,10878,11122,11148,11239,11294,11312,11459,11477,11605,11746,12644,12794,12909,12937,13149,13923,13981,14069,14184,14188,14282,14306,14325,14332,14406,14467,14763,14782,14829,14964,15082,15189,15343,15405,15514,15586,15596,15833,15897,15907,15938,16097,16180,16226,16290,16326,16658,16941,17088,17278,17399,17899,18558,18666,18872,19061,21277,21383,21398,21417,21585,21645,21667,21836,21847,21848,21901,21926,21940,21958,22121,22196,22274,22343,22396,22675,22719,22930,23107,23152,23261,23294,23381,23446,23605,23630,23761,23896,24015,24108,24162,24182,24279,24301,24380,24516,24566,24593,24671],"braking":[3830],"differs":[232,18071,19573],"scriptmapper":[5942],"skipping":[23614],"sharp-edged":[182],"sqrt":[20763],"mathematical":[2076,13940,20984],"wisdom":[12653],"purchases":[939,984,1002,10475,10568],"gameobjectname1":[14724],"two":[1,56,181,200,393,458,465,659,687,839,1202,1398,1532,1600,1668,1705,1733,1753,1796,1878,2076,2126,2214,2283,2372,2617,2621,2630,2720,2778,2795,2848,2870,3028,3125,3167,3196,3322,3447,3490,3526,3592,3621,3636,3759,3806,3840,3865,3877,3905,4139,4156,4815,4932,5023,5102,5151,5282,5324,5332,5356,5375,5397,5516,5683,5705,5761,6466,6647,6681,6778,6815,6941,7106,7149,7221,7313,7365,7391,7534,7825,8023,8177,8307,8397,8633,8890,8996,9258,9428,9483,9737,9743,9911,9982,10027,10051,10135,10467,10773,10913,11145,11205,11226,11427,11501,11850,11861,11963,11981,12320,12456,12539,12600,12635,12652,12698,12744,12802,12818,12877,12916,12926,12958,13133,13155,13202,13284,13327,13464,13563,13576,13708,13758,13772,13843,13889,13975,14071,14107,14184,14264,14288,14326,14494,14550,14704,14749,14874,14976,15041,15119,15192,15398,15492,15735,15896,15903,15956,15990,16164,16259,16365,16660,16716,17015,17050,17095,17259,17270,17518,17869,18024,18162,18183,18264,18363,18400,18505,18694,18940,19154,19261,19392,19529,19588,19806,20402,20556,20748,20782,21411,21420,21570,21606,21609,21867,21929,21962,22107,22195,22250,22394,22548,22584,22668,22704,22831,22871,22876,22938,22948,22995,23156,23170,23279,23304,23808,24013,24181,24228,24274,24363,24608,24653,24669,24713],"length-1":[12367],"init":[6734,14535],"bumpmapped":[11917,12042],"armv8":[10628],"trickiest":[1633],"arbitrary":[663,1318,5124,5209,6641,7790,8138,8597,10020,11899,12042,12790,12800,14241,14304,15457,15485,16082,16208,16426,17092,18044,18985,19388,23201],"shallower":[16165],"pillow":[12482],"count":[2212,2473,3663,4143,4939,7155,7308,7970,11621,11744,11875,12517,12605,13903,15052,15101,15236,15520,16027,16076,16298,16461,16679,16896,18344,20420,21501,21674,22133,22214],"getcomponent":[421,1718,3780,6687,6744,7863,8140,10178,10315,12378,12830,12977,13101,13227,13255,14086,14114,15575,17227,21821,23388],"each":[147,179,237,259,312,353,360,391,439,499,589,629,684,747,825,833,933,978,1001,1063,1159,1232,1334,1396,1534,1662,1736,1754,1792,1861,2005,2011,2076,2210,2425,2547,2559,2626,2633,2694,2759,2788,2795,2822,2872,2983,2992,3030,3072,3125,3163,3196,3267,3346,3428,3480,3490,3503,3580,3592,3621,3638,3690,3758,3762,3806,3818,3890,4071,4106,4116,4191,4522,4602,4888,4933,5002,5151,5204,5211,5282,5320,5332,5369,5377,5400,5405,5430,5475,5648,5737,5745,6416,6455,6547,6603,6647,6680,6712,6763,6814,6960,6979,7091,7308,7370,7601,7773,7778,7834,7898,8039,8106,8112,8124,8226,8276,8306,8393,8718,8965,8997,9183,9481,9708,9741,9861,9878,9911,9974,10027,10057,10135,10766,11051,11069,11179,11198,11211,11226,11349,11430,11499,11613,11840,11879,12207,12477,12519,12600,12688,12876,12959,13158,13187,13265,13273,13287,13327,13438,13448,13568,13630,13704,13758,13842,13902,13974,14015,14062,14108,14152,14174,14186,14204,14264,14272,14281,14302,14467,14516,14748,14782,14870,14910,15012,15092,15193,15250,15405,15444,15456,15484,15514,15558,15650,15679,15721,15852,15967,15999,16026,16061,16126,16134,16246,16340,16392,16450,16488,16555,16658,16673,16760,16799,17010,17087,17111,17152,17349,17384,17516,17821,18041,18329,18375,18553,18603,18684,18695,18716,18859,18935,18968,19032,19149,19233,19283,19382,19433,19483,19517,19732,19771,20458,20822,21343,21372,21408,21413,21557,21575,21619,21635,21644,21677,21765,21847,21859,21926,21976,21990,21994,22085,22107,22136,22217,22249,22258,22396,22542,22553,22601,22635,22760,22871,22906,22970,23134,23173,23290,23393,23449,23638,23702,24001,24393],"shakes":[3522],"referenceresolution":[16126],"subscribe":[1094],"damping":[4040,5382,5772,5809,5860],"wish":[48,875,1029,1353,1413,1633,3308,6702,7816,7954,7985,8024,8075,9448,9968,10029,11257,11530,13879,22992,23401],"controlling":[353,626,1737,1763,3244,3652,6741,6968,7533,9018,9715,9861,9913,12965,13305,14325,16090,16391,16763,18448,18713,18955,19178],"overridden":[9164,9715,14786],"namespaces":[12686,22462],"cmd+7":[23035],"technique":[2064,3023,3617,5268,8128,8284,9848,10114,11119,11925,11992,12287,12453,12653,13227,13293,13773,13859,15414,15625,15910,16065,16272,16297,22083,22836,23203],"void":[39,420,668,760,1717,1814,1858,1990,2083,3783,3919,6526,6631,6745,6869,6928,6957,7098,7169,7252,7411,7481,7564,7779,8143,8364,8520,8793,8906,9012,9769,10127,10314,10365,10491,10868,11021,11100,11367,11533,11771,12348,12498,12663,12706,12773,12829,12976,13100,13232,13254,13339,13476,13583,13673,13788,13827,14085,14113,14427,14531,15289,15632,16855,17226,18501,18591,19093,19725,19802,20180,20395,20487,20801,21462,21786,21820,22000,22457,22749,22999,23247,23333,23595,23846,24031,24333,24621,24685],"tools-":[11341],"csj":[1600],"simplifications":[17537],"inadvisable":[13351],"initialized":[6644,13455,14171,14561,19090,24451],"backed":[10538,16801],"ideselecthandler":[21767],"consult":[239,3203,3801,10447,10575,15571,17900,22368,22918],"attachment":[1021,8072],"unfortunate":[906,9191,18428,22370],"attention":[9627,9698,11807,13028,13285,22444,22860],"progress":[860,1860,3802,4504,5616,5712,6992,13665,15209,16056,23496,23933,23990,24408],"buggy":[22261],"structures":[12460,14836,18261,20367,21080],"unitypackage":[9457,22191],"1536x2048":[4307,4597],"plot":[1297],"mixed":[1352,8240,8888,24206],"responding":[6961,7792,13284,15018,22385],"parsecommandlineargsfromfiles":[24090],"boost":[4358,4640,16588],"collisions":[2140,2659,2801,2838,2860,2967,3041,3131,3474,3670,3822,3866,4116,4154,4158,4848,4956,5133,5185,5330,5369,5440,6442,7797,11049,11055,11354,13155,14032,14325,15583,17205],"gloss":[12001,20364,20500,21904,22203],"club's":[2426],"agentslope":[24783],"wouldn":[16833],"iteration":[19,4143,4317,4521,4615,9283,13448,15236,16027,16340,21047,23296],"weight":[484,1659,1736,1762,11481,11511,13704,23264],"leverage":[8888],"suggests":[2131,13310,14073,14139,23613],"getassetpathsfromassetbundle":[1922],"pre-existing":[15399],"discover":[737,750,3892],"full":[181,521,593,1437,1545,1633,1695,1736,1762,1909,2031,2552,2693,2776,3154,3226,3431,3487,3847,3875,3884,4028,4104,4221,4537,4629,4664,4793,4940,4981,5454,5714,6452,6495,7127,7354,7776,7942,8135,8335,9109,9183,9571,9733,10020,10561,10696,11120,11177,11209,11581,12041,12628,12923,12945,13114,13128,13145,13227,13328,13721,13947,14073,14171,14233,15099,15399,15659,15840,16163,16260,16300,16516,16556,16771,17869,17932,18886,19320,20434,20822,21290,21352,21677,21715,21807,21856,22416,22618,23134,23310,23358,23783,24398],"placeholders":[14868],"progressively":[5654],"whereby":[14935],"unexposed":[10414],"grap":[629],"deployment":[4757,4810,6355,6375,6423,9593,10062,10842,14515,14699,15210,15913,21655,23461,23986,24015,24160,24212,24551,24564],"myserver":[23880],"transmit":[13448,15169],"finished":[819,998,1701,4043,4433,4561,6519,6724,6932,7776,7911,9819,11051,12734,13249,13867,14112,14870,15199,17993,21356,22024,22541,22707,22979,23450,23887,24426],"backfacing":[16421,18448],"diegetic":[22677],"searched":[15101],"realistic":[2124,2138,2426,2801,4145,5121,5198,5783,7139,11136,11234,12456,14072,14100,14220,14325,14786,16080,16331,17171,18040,21576,21585,21949,22203],"metallic":[5075,20372,21569,21586,21595,21608],"initializeonload":[15617],"keys":[314,631,728,6809,7342,8086,9502,9545,9617,9948,10685,14818,15841,15865,16754,16965,21944,22128,24151],"unencrypted":[15170],"aninimation":[3652],"trygetvalue":[11003],"5ms":[22833],"appearances":[8772],"allegorithmic's":[14924],"recognized":[270,742,1604,11842,19045,19158,19755,21925,22610],"cmd+shift+9":[23067],"sublime":[14814],"limit":[2126,2730,2793,2822,2874,3028,3471,3498,4526,5365,7223,7320,7663,9623,10456,10538,10917,10968,11165,11614,11833,11955,12331,13075,13426,13866,13929,14109,14156,14182,14252,15233,15342,15455,15483,16265,16525,16833,18943,21877,22024,22275,22448,22961,23377,24286],"boat":[5735],"maximizing":[13887],"loadfromcacheordownload":[63,1622,7223,10505,11013,11270,11835,15143,17243],"maincamera":[6436,21804,24830],"doubt":[9239,15571],"built-in":[1198,2005,3179,3232,3247,3445,3579,3621,3761,4090,4191,4964,5215,5767,6940,7310,7465,7663,8854,9513,10781,11175,11434,11555,11643,11874,11985,12327,12518,12950,13938,13980,14001,14007,14325,14451,15064,15239,15477,15511,17045,17271,17513,17683,17789,17816,17837,17931,18240,18336,18859,19106,19152,19221,19243,19290,19422,19522,19756,19791,20133,20168,20367,20603,20691,20774,21675,21799,21860,21906,22278,22610,22684,23382,23447,23729,23889],"panic":[603,877,24001],"blurriness":[16340],"approved":[10560,17322],"customer":[962,1006,16834],"texcol":[18021],"initialized3dwindow":[24080],"hidden":[276,3356,4226,4500,4582,4670,6519,7400,8335,10764,11341,11499,13841,14832,14940,15853,22544,22868,24453],"synchronise":[4953],"testing":[78,561,1533,1633,3054,4000,4415,4543,5134,6402,6436,7419,7570,10421,12478,13157,13310,13351,14112,14404,14842,14868,15474,18054,18382,18681,18999,19088,19450,20401,20845,22914,23295,23447,23984],"detecting":[5133,10855,11557,14039,15335,15717,17205,21407],"utf16":[17323],"accompanied":[14266],"selections":[21408],"apps":[145,1600,4231,4674,6564,9334,10406,10447,11951,12749,14381,14479,14930,15712,15815,18294,18555,21916,23135,23893,24047,24106,24111,24127,24160,24179,24187,24214,24236,24272,24298,24310,24323,24348,24527,24538,24603,24606],"ipointeruphandler":[21757],"regards":[1027,14067],"javascript":[233,478,1096,3228,4778,6529,6943,7092,7438,8147,8350,8513,8783,8892,9002,9937,10118,10577,10968,11072,12751,13641,13778,14442,14722,22434,22543,23176,23400,23461,23765,23796,23814,23874,23894,23903,24391,24525],"italic":[3393,17032,21699],"refresh":[805,4953,4998,10805,13770,14795,21931,23080],"one's":[2720],"dlltest":[23318],"cmd+0":[23037],"session":[1467,11581,12645,13773,17351,23288,23314],"selectionstrings":[8620],"dazzling":[12295,15969,16001,16164,16261,17017],"settexture":[17855,17939,18056,18239,18440,18708,18914,19028,19255,19746],"spritecollider2d":[5924],"stereos":[12041],"consequently":[521,6458,9612,12733,13839,13913,14017,14829],"squeeze":[12916],"glossy":[3006,5002],"getstreamprogressforlevel":[15209,24021],"shots":[12454],"cams":[2694],"lightmap":[175,3587,3627,5606,7324,7999,8187,9513,11888,12042,18271,19057,19250,20145,20273,20423],"startup":[1285,4670,6484,14796,15082,15621,21548,22266,22838],"nimt-trampolines":[22473],"valuable":[227,10461,15399,21582,22899],"one":[73,165,188,269,294,316,329,333,364,384,470,598,630,666,696,753,822,836,1063,1112,1127,1174,1208,1336,1393,1470,1522,1600,1615,1652,1733,1753,1907,2017,2118,2160,2283,2372,2429,2549,2559,2632,2688,2737,2759,2810,2872,2969,2982,3031,3087,3121,3142,3308,3334,3391,3439,3491,3589,3592,3615,3636,3705,3758,3798,3841,3983,4048,4090,4162,4395,4507,4714,4860,4919,4952,5003,5096,5129,5255,5285,5322,5333,5378,5457,5563,5704,5753,5804,5825,6408,6442,6494,6634,6668,6692,6710,6760,6806,6988,6996,7082,7102,7136,7272,7310,7365,7389,7448,7521,7797,7815,7834,7906,7982,8075,8091,8112,8116,8199,8313,8377,8597,8800,8965,8996,9189,9208,9268,9483,9545,9612,9643,9725,9743,9852,9877,9891,9934,9960,10027,10047,10053,10107,10302,10423,10458,10776,10970,10974,11058,11138,11168,11206,11211,11260,11293,11388,11481,11501,11558,11623,11850,11904,11947,12033,12199,12453,12518,12600,12652,12654,12687,12722,12790,12847,12941,13162,13203,13264,13280,13293,13424,13439,13457,13575,13641,13718,13761,13771,13778,13822,13843,13901,13986,14007,14039,14069,14195,14238,14281,14306,14326,14358,14525,14728,14768,14781,14829,14850,14870,14904,15084,15107,15139,15191,15241,15404,15443,15462,15490,15514,15558,15562,15583,15665,15721,15879,15971,16003,16079,16100,16170,16256,16514,16520,16554,16716,16772,16793,17019,17076,17082,17094,17188,17204,17207,17262,17265,17393,17472,17532,17544,17569,17613,17618,17642,17692,17701,17710,17727,17734,17753,17778,17793,17834,17935,18064,18146,18213,18262,18296,18365,18400,18485,18940,18972,19051,19071,19152,19202,19240,19266,19382,19439,19505,19522,19566,19762,20136,20184,20420,20554,20747,20776,20784,21081,21277,21356,21372,21420,21569,21602,21610,21618,21630,21641,21649,21693,21772,21826,21842,21859,21897,21929,21949,21976,21987,21994,22101,22282,22430,22546,22564,22587,22649,22668,22682,22760,22876,22949,22994,23155,23209,23278,23360,23376,23657,23704,23746,23899,23980,24013,24181,24202,24275,24308,24370,24405,24529,24589,24608,24653,24669,24671],"hardly":[4603,11934,12456],"halfvector":[19111],"quantized":[20767],"bootstrap":[1204],"primitivetype":[10122],"_singlelightmap":[20148],"incorporated":[21368],"estimated":[5132,15048],"module":[2272,4106,4956,7811,10027,12528,14018,14040,14048,14055,14069,14105,14141,14148,14156,14165,14187,14206,14214,14221,14245,14253,14260,14267,14293,16962,17109,21955,22093,22521,24208],"back-ends":[13638,23400],"editor-only":[7508,15443],"bone-mapping":[345,6670],"robert":[1297],"linearizes":[18621],"internal-deferredshading":[15511],"manipulation":[16189],"developer-resources":[11814],"outlined":[9627],"indentlevel":[7595],"hh674596":[24187],"getkeydown":[6885,9607,15728],"lpddr3":[10631],"mywindow":[7473],"howto_exportfbx":[9536],"debits":[1004],"assignment":[1473,3637,6673,7382,10033,12632,14911,21414,22205],"getfloatbuffercallback":[1312],"lightingwraplambert":[20213],"fillrate":[10449,10802,11744,13891,16313],"vertex-lit":[2687,12284,17509,17522,17555,17621,17678,17713,17781,18282,18914,20746],"invokes":[13601,24073],"directional":[1755,3543,3556,4948,5580,5825,6860,7132,8221,11134,11155,11208,11757,11917,12957,13957,15475,15509,15518,16079,17524,18051,18354,19050,19240,19439,20157,20184,20420,20733,21548,21952,22275,23374,23701],"replacementtag":[19514],"somehost":[10509],"lightmodel":[20393],"entirety":[6874],"right-side":[12303],"potionresult":[7547],"sparingly":[3673,6443,10907,11152,11939,12448,15585],"declarative":[19376],"remind":[8118,23677],"linerenderer":[5958],"worst":[5711,10906,12196,13766],"renames":[23756],"-help":[14462],"nvidia":[5121,5669,8096,8309,10903,11182,11804,12185,12444,12523,16205,17822,23275],"logicalset":[18195],"transparent":[2054,2762,6592,9218,10402,11175,11437,11760,13848,14067,14108,14199,16367,17470,17685,17686,17690,17695,17699,17704,17708,17713,17717,17721,17725,17730,17749,17776,17781,18077,18179,18411,18703,19452,19522,19588,19758,22278,23704],"bursts":[14060,14098,14140,14164],"equates":[13448],"zbrush":[9252],"wizard":[2823,9559,13758,14796,24376],"encrypt":[15139],"operates":[4906,12799,13771,18861],"alphatest":[18056,19006,19087,19451,19762,20401],"startwidth":[3600],"bitwise":[52],"useguilayout":[10458],"animators's":[11525],"directive":[6634,11177,12696,14442,18241,18303,18936,19437,19996,20391,20507,20841,24264],"header":[1141,3909,4876,8375,10343,17347,23276,23536,23657,23881,24719],"transmissions":[3913],"messaged":[15018],"textureformat":[1812],"utf-16":[3228],"networkmessageinfo":[3919,13615],"64-bit":[919,1283,6497,9458,10068,10406,10628,14686,24603],"gotonextpoint":[12820],"subset":[4260,4537,4629,4700,4793,10947,13453,15398,15417,22453,23811,23886],"proportion":[5371,5809,9727,14192,14213,14239,14252,14306,14829,16246,16260,16555,16958,22699],"power-ups":[5818,14039],"emote":[1376],"trees":[151,350,1784,2156,2194,2629,3626,5415,5764,5820,7330,11445,11511,13843,14147,15613,17732,18104,19534,21871,21911,21946,21949,22195,22256],"dual":[3574,11209,20152,20440],"framereate":[11148],"reasons":[179,231,255,1349,2283,2605,2713,2856,3161,4434,4562,5084,5169,6447,7757,9559,10352,10580,12192,12752,14480,14674,14790,15061,20652,20824,21929,22116,22386,22608,22741,24046,24389],"fileid":[8043,24740],"wealth":[21974],"super-charged":[10109],"light":[175,181,304,651,2358,3151,3241,3437,3533,3552,3588,3751,4072,4909,4939,5173,5272,5530,5948,6856,6990,7002,7132,7845,8163,8294,9184,9302,9567,10165,10638,11126,11141,11144,11192,11211,11231,11439,11756,11889,11986,12283,12478,13810,13916,13985,14106,14802,15414,15452,15484,15516,15560,15599,15938,15975,16007,16164,16256,16578,16658,16673,16960,16995,17093,17211,17470,17524,17639,18035,18279,18319,18361,18880,19032,19050,19230,19439,19589,19738,19846,20138,20184,20352,20692,21386,21546,21574,21598,21611,22114,22273,23373,23678,23701],"framerate":[579,4932,5002,5286,5714,7134,9627,10451,10847,12196,14958,15009,15090,16351,16610,21912,21992,22270,22833,23138],"userprofile":[4434,4562,24338],"requesting":[1016,13284,13328,13439,22268,22830],"sub-asset":[1139,2613],"happen":[151,699,1235,3487,4444,4714,4960,5163,5247,5649,6443,6868,10300,11541,12509,12611,12700,12754,12920,12940,13303,13722,13841,14074,14117,14285,14334,15340,16058,16932,17234,19071,21344,22026,22386,22544,22625,22833,22975],"irregular":[22006],"brighten":[16771,17465],"collada":[6,2609,9547],"256x512":[5598],"rule":[598,2294,5397,6443,6653,7834,9256,11954,12681,13889,14580,15223,17188,22902],"tm":[1495,1529],"disadvantages":[13,9196,9285,9481,13709],"unityrenderevent":[12742],"cover":[626,2706,4002,7133,8039,10449,11155,12657,13068,13294,13575,13844,14204,14461,15932,16100,17201,18078,20784,21910,22006,22716],"admins":[2024],"browser-based":[23903,24411],"initheightatdist":[7166],"migrated":[23981],"slipping":[5790],"propertyfield":[7602],"unity_width":[4778,23459],"lightwaveapplink":[9457],"per-object":[12043,15411],"command":[208,910,1073,1543,1558,2029,2568,3026,6365,6396,6483,6810,6974,7346,7896,7952,8270,9539,9641,10063,10502,10804,10915,11329,14349,14525,14763,17402,17899,17929,18139,18180,18563,18658,18872,18965,18983,19155,19253,19255,19382,19421,19459,20769,20820,21275,22473,22549,23006,23167,23288,23301,23404,24067,24111],"skin":[1659,2795,3234,3266,3334,3652,5282,8778,14802,14842,21573,23361],"covering":[931,7759,11496,12680,12955,14186,21829,21922],"twirl":[17133,17177,22138,22219],"unittests":[12536],"recombines":[1281],"compound":[2655,5158,6442,8889,10907,12448,20906],"uv_bumpmap":[19836],"average":[184,1779,2487,2645,10107,10451,10597,10797,11684,11861,11947,12034,12367,14292,14304,15591,16164,16580,17103,21919],"two-sided":[15459,15487,19564],"grabpass":[8289,18691,19038],"maxslidervalue":[9117],"non-power-of-two":[5596],"foundations":[16838],"simplestpluginexample":[1555],"practices":[464,750,844,11989,13727,16801,17199],"dialogue":[9328,9511,9532],"network":[836,1071,1608,3876,3891,4316,4520,4614,6410,6600,7763,10418,12537,13285,13326,13439,13444,13456,13465,13562,13574,13701,13727,13762,13768,13883,14969,15081,15211,15809,17271,17421,22326,22493,22914,22967,23682,23790,23874,24218,24550,24673],"coefficients":[20743],"animname":[21396],"rampoffsetg":[16221],"cools":[14155],"dictating":[8888],"move'":[11798],"joints":[340,575,2822,2868,3125,3480,4143,5141,5268,9426,10291,10969,14834,15022,15234,24377],"_fogcolor":[20072],"gpa":[8096],"sample":[580,1324,2467,2604,3142,6669,7018,8281,10505,10852,11197,11555,11681,12368,14662,14721,15060,15095,15953,16076,16298,16667,16679,17093,17165,18345,19082,20465,20734,21350,21558,21843,21916,22097,22364,22500,23889,23917,24457],"camera-control":[6988],"high-score":[15221],"picks":[6675,8170,12611,14517,14701],"apache":[23790],"hovers":[8475],"very":[78,182,314,393,573,693,906,970,1153,1198,1351,1448,1632,2031,2078,2276,2449,3198,3244,3549,3571,3707,3769,3866,3877,3996,4090,4139,4929,4947,5098,5141,5243,5396,5456,5610,5688,5737,5764,5788,6447,6484,6592,6680,6856,6926,6940,6990,7137,7403,7845,8094,8106,8110,8122,8300,8348,8772,8936,9021,9422,9539,9597,9868,9924,9960,10022,10032,10106,10444,10774,10916,11167,11198,11506,11731,11788,11891,11951,12025,12210,12604,12684,12756,12821,12889,12969,13163,13285,13445,13724,13730,13769,13822,13900,14054,14062,14071,14102,14164,14220,14266,14704,14742,14790,14870,15087,15109,15332,15343,15461,15487,15532,15607,15677,15904,15938,15975,16331,16430,16791,16995,17265,17512,17716,17784,17798,17825,17931,18040,18306,18613,18946,19793,21113,21409,21578,21586,21630,21922,21947,21971,22042,22097,22101,22193,22412,22737,22899,23175,23242,23373,23426,23446,23605,23774,23811,23979,23990,24364,24453,24601],"upcoming":[23209],"converge":[11681,22870],"logicalequiv":[18205],"non-angular":[2875],"splashscreen":[15223],"moon":[11136],"disorientation":[7158],"agentclimb":[24784],"odds":[16460],"cone-shaped":[11132],"windows-8-modern-style-app-samples":[24233],"status":[197,954,1034,1079,3762,4285,4499,4581,10369,11580,11613,11713,13872,21646,22256,22385,23659,23981,24423],"offmesh":[3835],"portability":[9495,9621],"4xssyw96":[14441],"problem":[231,271,906,1284,1557,3303,5289,7133,9615,11155,11305,11356,12038,12196,12454,12650,12688,13155,13721,13819,13889,14037,15607,16834,22043,22097,22288,22366,22388,22524,22801,22920,23162],"mechanics":[5198,15239],"expertise":[22404],"findobjectsoftypeall":[12559],"gettemppath":[11322],"deterministicassetbundle":[1928,11353],"batched":[7309,10791,15445],"kgfxrendererxboxone":[12722],"addvalues":[23333],"grid":[3170,4100,7346,8614,10244,11198,12797,14036,14268,14858,16445,21409,21977,22601,23728],"halos":[3437],"gg615082":[6569,24116],"per-pixel-lighting":[10596],"avoid":[72,187,468,1017,1296,1633,2064,2281,2570,2850,3471,3818,3849,4141,4953,5612,7091,7110,8944,9243,9566,9612,9745,10451,10949,10978,11193,11261,11350,11508,11759,12209,12496,12696,12781,13117,13178,13187,13265,13285,13921,14030,14110,14502,14677,14716,15009,15044,15233,15278,15396,16347,17464,18313,18943,21927,22113,22238,22440,22743,23980,24017],"unexpected":[234,2213,6865,14958],"cmd+shift+2":[23060],"myname":[23593],"frac":[12091,19990,21136],"reuse":[148,5260,9345,12581,15576,17933,20774,22862],"filesystem":[752,1533,1615,4555,14810,21368,21655],"loadallassets":[153,1959,11262],"_defines":[22172],"dry":[1178,2243,2259,2354,2514,2533,21836],"cucoloris":[6856],"textareastring":[8572],"equations":[11223,20718],"grouping":[18968],"texcoord4":[12150],"i'd":[11682],"ordering":[1162,2361,2367,5210,7834,7937,11479,14199,15325,21701,22902,23393,24019],"guistyle":[3271,3368,8772,21689,24616],"strip":[1154,1337,1417,3663,4353,4538,4635,10921,15250],"feels":[9966,18410],"texcube":[12005,18746,19941],"4x4":[3174],"havepublicaddress":[13342],"moral":[12342],"reproduce":[24156],"getallassetbundlenames":[1893],"handle":[1208,2064,2759,3354,4451,4658,5231,5309,5430,6562,6614,6875,6961,7371,10198,10336,10393,10846,11172,11694,12041,12311,12748,13021,13094,13180,13273,13295,13439,13772,13981,14073,14325,14543,14830,15406,15457,15485,16699,16948,16979,17038,17119,17798,19248,20146,20352,21411,21631,21810,21862,22397,22567,22658,22699,22867,23790,23878],"getcomponentinchildren":[15575],"disablecontextmenu":[23902,24410],"partition":[14358],"postprocessbuildattribute":[2003],"darkening":[16661,16681,17159],"paced":[11793],"denoting":[1734,21715],"cginc":[12066,17961,18244,18311,18370,18617,18729,20134,20572,20692,20861,21080],"unity_5_0":[14402],"armv7s":[10619],"coincidence":[21940],"blurry":[5109,5536,8283,16081,16572,17464],"ambient":[1135,2549,8094,8164,10638,15467,15528,16657,16672,17524,17849,18101,18284,18371,18462,18603,18878,19032,19045,19240,19290,19440,20427,20743,21548,21597,21930],"closes":[9776],"wireframe":[4107,5280,8231,13075,13839,14024,14244,14750,23695],"bringing":[21582],"pos":[1760,2213,4971,10256,12081,15753,17963,18633,18731,19608,20116,20888,21093,22660],"locally":[837,2048,6702,13175,13297,13739,14334,23642],"demonstrates":[12192,12451,12744,14664,14741,17834,17954],"--legacypath":[2043],"demand":[741,941,9623,9999,11287,11694,21364,22548],"ratio":[2128,2336,2348,2518,2538,3004,3619,4915,5382,5809,8120,9724,10599,14958,15924,16104,22596],"hints":[824,2305,2428,2556,2726,2755,2816,2853,2978,3114,3137,3176,3235,3402,3432,3443,3481,3547,3583,3610,3657,3743,3980,4062,4101,4928,5170,5326,5465,5493,5740,5797,5839,5871,9309,9353,9419,10928,11989,12888,16057,16131,16738,17047,21586,21797,22207,22404],"'unity3d":[23205],"deeply":[12456],"profile_type":[10856],"predetermined":[7894,8631,10291,14304,16941],"50mb":[133,4433,4561],"hassle":[10245],"x-application-name":[23883],"iskinematic":[5149,6462,11798],"fbximporter":[2157,6091],"storage":[746,1326,1456,1802,2031,4401,4529,4734,4958,7222,9618,11825,12182,13863,14885,15343,15658,18272,22349,22737,24551],"interpolating":[659,11193,13725],"g45+":[15487],"needing":[1786,2759,11353,13352,13749,14687,22666],"coverage":[11760],"routed":[1131,1330],"virtualstore":[22975],"wireframes":[23696],"segment":[5739,7372,10953,14243],"edits":[1148,1338,1431,8554,14782,22256],"artificial":[11133,16077,21834,21843,21921,23377],"0x0088481c":[22410],"configurations":[581,6455,10030,11736,14897,21569,24320,24579],"fantastic":[5578,9569],"50mm":[3167],"pitch":[407,652,1112,1127,1144,1341,1458,2502,2572,22093],"highlighted":[1736,4267,4551,4651,4708,4804,6983,8086,12959,15008,16745,16757,21419,22252,22557,22684],"drift":[13075,13292,14300],"dalvikvm":[14644],"algorithm":[1318,2221,3593,5039,5615,8226,12347,12800,12884,13160,15909,16065,16297,17100],"removing":[1028,2413,2433,2441,2451,9317,10198,11044,11549,12204,12571,15346,22292],"repulse":[4832],"ring":[1211,1681],"steam":[14062],"categorise":[1355,10045],"amorphous":[14302],"cheaply":[17552],"iphone6":[10641],"width-90":[7600],"jump-across":[12926,13141],"foo":[12215,24587],"nodes":[398,2642,6360,6375,6416,9330,9378,9393,9432,9482,9523,9552,12608,12884,21618,21640,22139,22195,22220],"-o3":[23774],"-t":[23434],"suit":[21582,21613,23633],"reserved":[5876,11168,12344,12542,14531,15044,21434,22370,22737],"liquids":[4104,14017,14204],"interference":[22934],"applicationdidreceivememorywarning":[22428],"bomb":[1458],"unity_matrix_mv":[12092,18742,20116,20698],"decreases":[1762,2580,17134,20556],"amp":[17,707,903,1218,1729,1928,2213,2492,2945,3068,3231,3338,3465,3705,4030,5231,5530,5695,6423,6553,6982,7125,8000,8040,8404,9234,9328,9526,9588,9657,9801,9905,9971,10105,10861,11244,11749,11860,12355,12520,12739,13011,13900,14533,14676,14971,15006,15425,15504,15550,16136,16203,17524,17575,17658,17818,18028,18183,18251,18294,18369,18382,18558,18675,18861,19057,19088,19230,19285,19389,19442,19489,19548,20357,20734,21031,21343,21926,22128,22922,23268,23367,23758,23796,24302,24313,24633,24723],"#pragma":[234,285,6625,10578,10962,11982,12233,13980,17981,18303,18568,18936,19097,19471,20391,20841],"+y":[5586],"brdf":[11899],"disablebatching":[19778],"encounters":[15245],"connected":[210,398,862,1083,2826,2892,3030,3128,3447,3490,4023,5282,5332,5356,5377,5804,6396,6410,6830,8206,10856,10971,11206,11492,12298,12789,12884,12933,13157,13284,13359,13443,13464,13575,13727,15236,15718,15812,17354,17391,22196,22246,22289,22914,23156,23361,23634,24560,24568,24673],"frame-by-frame":[6875,14890],"quantity":[939,1002],"matures":[23809],"hook":[9845,10200],"proportioned":[3211],"winrt":[18329,19494,24044,24141,24208,24214,24323],"prerecorded":[1324],"facilities":[13755],"showwindow":[7491],"m_spotcookie":[24744],"irretrievable":[16737],"setikrotationweight":[10295],"outputs":[1396,11224,17990,18618,20357,20841],"tower":[5166],"powerup":[393,12454],"-m":[6373,7953],"backwards":[2005,5698,10292,12959,14283,16796,22870],"texture'":[21908],"gl_objectplanes":[19120],"keywords":[17981,18683,18936,19274,23430],"cars":[1460,5157,5788,11454,12459,14064,23379],"occlusionportal":[5904],"ci":[7963],"maniuplate":[678],"myslider":[8893],"horizontal":[424,567,690,1480,1760,2180,2680,3000,3281,3619,3920,5586,6610,6809,7358,7780,8631,8890,9018,9600,9694,10873,12934,13022,13839,14191,14271,16159,16232,16401,16453,16480,16504,16692,16720,16751,16971,17037,19972,22234,22568,22655,22695,22719,22868],"losing":[929,15090],"deep":[2795,3249,4142,13314,15085,23203],"windowcoordinates":[20854],"horizon":[2131,5322,9917],"due":[198,908,2022,2282,2572,2808,3649,5084,5145,6716,9202,10209,11388,11966,12543,15487,15532,15794,16061,16134,16313,17347,17456,17467,19738,22006,22553,22838,22928,23189,23769,23874,24044,24308,24527,24606],"a8x":[10729],"v2f_img":[21028],"'worlddeltaposition'":[13001],"ontransitionbegin":[11519],"agnostic":[256],"pending":[953,981,1005,1035,6695,23656],"chipsets":[1534],"collected":[170,179,7766,11297,11684,11837,12222,13320,14609,15009,15084],"'optimized'":[5314],"pasting":[5238,18978],"sun":[11136,16994,21556,21580,22159,23373],"capsule's":[2786],"annotated":[13183],"credential":[17384],"prime31":[10412],"giraffe":[16836],"script'":[1189],"m_bounceboost":[24762],"frames":[314,578,720,4084,4602,4961,5002,5188,5561,5742,6874,7778,7905,8099,10797,10848,11966,12292,12473,13451,14268,14957,15084,15443,15607,16567,18558,21378,21947,21965,22043,22448],"youself":[5309],"ok":[920,6386,12575,13897,17305,22495,22924],"editorextension":[5892],"sampleclip":[6065],"maximize":[7085,8121,9420,11991,17880],"gi":[8161,21543,23706,23807],"bandwith":[13753],"k++":[5507],"weapons":[7795],"shafts'":[17007],"extreme":[15099,15235,16708,16950,21644,23286],"interrogate":[12650],"elongated":[13275,14870],"suited":[1469,3871,12038,15408,16079,16869,21973],"blender":[3,1631,5305,9280,9372,14827,19341],"tips":[7317,10457,10904,10926,11496,12445,12598,13753,13936,14732,15232,16225,16267,16573,17518,18372,19431,22124,23785],"pdb":[23354,24144],"often":[184,929,1459,2138,2808,2994,3634,3843,4037,4333,4620,4854,4861,5236,5526,5714,5739,6442,6622,6778,6856,6875,6961,7133,7308,7389,7790,7909,8421,9246,9316,9614,9719,10292,10423,10905,10940,11136,11155,11549,11750,11953,11981,12210,12495,12680,12888,13180,13448,13775,13891,13974,14035,14147,14155,14868,14939,15005,15044,15342,15445,15537,16170,17908,18260,18376,18448,18935,19047,19248,19437,20419,21398,21413,21557,21643,21670,21809,22026,22111,22288,22384,22699,22737,22870,22879,23376,23447,23589,23677],"bonjour":[14721,22940],"reflect":[601,2520,4814,5032,9183,11440,16495,16637,18738,21579,21611,22042,24645],"setikrotation":[10297],"vision":[16429],"exportshaders":[11380],"cmd+alt+5":[23072],"residing":[1232],"trickle":[22777],"configures":[17898,19029],"superfluous":[8212,15399],"omit":[2670,10925],"-force-d3d11":[6511,18564],"encloses":[13280],"accountname":[163],"adds":[462,522,707,1112,1280,2316,3026,3589,8296,10343,11193,15528,15938,15975,16007,16356,16615,16632,16934,17532,18231,18904,19244,19264,22249,22521,23261,23756,24550],"html#wireless":[1092],"iproxy":[23162],"cloth":[2213,2865,6011,7333,11795,13898,14325,15015,21573],"invalid":[22326],"fixed4":[11998,17971,18271,19190,20045,20148,20286,20495,20732,20837,21094],"bright":[3532,3561,5659,5737,9183,11234,12323,14102,15938,15975,16007,16256,16284,16320,16995,17095,18428,19274,23379],"nil":[10364],"nails":[14279],"'3rd":[9670],"hand-modeled":[11908],"val-":[21061],"evaluated":[11480,12346,15455,15483,20744,21636],"push":[2140,2202,2802,2932,5289,6390,6695,6820,8898,10616,11350,13189,14340,15584,24539],"changes":[151,685,752,822,837,1064,1180,1296,1355,1807,1896,2009,2209,2641,3196,4049,4107,4115,4574,4814,4885,4954,5032,5211,5796,5818,5829,6458,6694,6698,6715,6719,6740,6742,6984,7778,7962,8118,8170,9478,9966,10021,10109,10291,10473,10801,11120,11200,11401,11426,11588,11644,12218,12617,13289,13426,13449,13457,13564,14098,14282,14304,14315,14334,14460,14786,14941,14958,15101,16167,16314,16361,16426,16495,16534,16580,16606,16637,16706,16731,16760,16953,17077,17095,17835,19808,20185,21401,21562,21625,21670,21689,21841,21908,21940,22018,22106,22475,22608,22673,22698,22777,22961,23209,23298,23605,23632,23738,24527,24580],"maintexst":[12068,18014],"areas":[2130,3279,3430,3437,3712,3985,4932,5018,5658,6659,6866,7141,7759,8090,9018,9191,11155,11198,11438,11919,12790,12797,12875,12924,13156,13453,13464,13763,13846,14956,15010,15045,15093,15903,15969,16001,16079,16165,16246,16284,16319,16564,16658,16673,17017,17055,17201,17454,17567,17692,17701,17710,17727,17751,17778,18035,21557,21576,21651,21834,21843,21881,21897,21922,22727,22740,24642],"described":[745,1070,1367,1403,1917,2586,2643,3058,4012,4106,4109,4134,5063,5790,6597,6712,6778,6949,6981,7384,7894,8510,9231,9736,10086,10343,10465,11117,11127,11261,12628,12640,12655,13131,13157,13266,13996,14281,14462,14545,14783,14959,15087,15603,17377,17516,17861,17938,18860,19256,19474,21795,21851,21927,21984,22309,22420,22684,23173],"aot":[4348,4630,10921,22396,23806,23894],"initializing":[11580,23178],"optimization":[227,2747,4211,4534,4626,4697,4774,4790,5299,6913,9952,10417,10597,10843,10921,11495,11814,11943,11976,12199,12451,13889,14931,14958,15400,18383,19453,20826,21648,22440,22742,22899,23263,23774,23897,24010],"utilize":[17348,17912,23902,24410],"relationships":[1057,9962,22109],"reporter":[4605],"programmers":[386,6962,11464,11958,11991,12687,13638,14870],"tweaked":[15914,16598],"mocap":[15600],"accidents":[12457,22370],"rolloff":[2448,2464,2579,7340],"free":[155,931,945,1003,1108,1208,1473,1632,2047,2872,3405,3464,5172,5330,5495,6513,7368,8039,10830,10978,11263,11302,11549,11840,11951,12292,12684,13153,13881,14013,14735,14800,14950,15101,15476,15510,15532,16177,17336,18379,19327,22430,22740,22950,23147,23296,23605,23741],"non-uniformly":[15859,22115],"rich":[381,3395,5482,16538,17035,21688,22718],"substring":[21518],"emulator":[221,4398,24550,24603],"projecting":[4948,15971,16003,17019],"nolightmap":[20429,20477],"shader_api_xboxone":[18296],"attachments":[1600,11499,24649,24667,24711],"assuming":[7852,9301,10696,11169,17438,19591,21282,22860,22913,23310],"query":[1296,1467,6834,11518,11568,11718,15113,15339,17259,19756,24021],"idraghandler":[21761],"windowsphone":[24046,24368,24533],"on-line":[9438],"doubleclick":[23751],"allow":[149,181,207,309,323,462,483,665,863,1165,1318,1338,1427,1649,2097,2467,2872,3018,3062,3113,3120,3248,3267,3484,3527,3734,3887,4043,4228,4545,4577,4672,4776,5141,5373,5396,6449,6520,6612,6616,6619,6696,6856,6940,7124,7189,7274,7400,7795,7892,7906,7988,8158,8190,9020,9244,9617,10849,10970,10974,11147,11204,11286,11356,11423,11789,12422,12684,12733,12751,12922,13169,13197,13271,13311,13464,13508,13563,13773,13956,14792,14828,15103,15199,15278,15470,15585,16134,16646,16709,16840,16973,17085,17567,17869,18935,19482,21360,21401,21420,21556,21621,21631,21634,21706,21847,21895,21965,22083,22107,22242,22493,22653,22894,22944,23002,23368,23382,23589,23674,23776,23881,23899,24525],"spacing":[3204,3388,5476,10273,16451,16484,17034,17148,21714],"previewtype":[19786],"temporarily":[3133,5086,7087,12613,13453],"hour":[2801],"humantemplate":[6105],"unityevents":[9689,22980],"loose":[906],"others":[534,863,2017,2651,2782,3165,3318,3634,3669,4034,4822,5279,5350,5396,5436,5515,6422,6728,9208,9461,9714,10053,12621,13423,13455,13923,14957,15010,15194,15245,15396,15971,16003,17019,17082,17751,17869,18037,19448,19760,20956,21706,22692,23275,23364,23730],"#ffff00ff":[21738],"loadasset":[1958,7240,11260,11290],"gfxdeviceeventtype":[12726],"relay":[13298],"greyscale":[3650,5540,9571,16585,21590,21976],"time-sensitive":[13306],"carving":[3860,13179,13217],"suppressed":[5382,11329],"screenmanager":[9743],"sent":[328,1033,1041,1159,3663,3885,3898,6467,9187,10029,10808,11731,13292,13354,13439,13448,13466,13614,13712,13842,13900,15017,15137,15220,15335,15758,16622,16627,16963,17119,17347,22997,23134,24219],"dim":[5502,5737,14047,15095],"-force-feature-level-10-0":[6575,24124],"x86":[4819,6488,9458,10068,12490,14472,14518,14689,21285,24145,24165,24215],"requirecomponent":[10308,12972,13470,17224,21815],"transition":[412,468,595,1133,1193,1376,1417,2191,2632,3621,5405,5753,7139,9741,12962,13278,14469,16046,16264,16295,16530,16696,16744,16756,16945,17066,21569,21637,21876,21897,21924,22553],"sector":[12485],"collider-less":[5151],"impressive":[4929,11893,12283,12482],"m_uselightprobes":[24901],"#add8e6ff":[21726],"reinforce":[14140],"ingoretypetreechanges":[1931],"vector4":[645],"grows":[1845,2128,12687,16739,18955,22563],"optimum":[9966],"ledge":[12910,13271],"asymptote":[5795],"cmd+z":[23042],"stringtohash":[9771,11484],"rasterizer":[10766],"fault":[22394],"orders":[7334],"shade":[11803,12284,21576,21976],"autorotatetoportrait":[11565],"entity":[8024,14278,14302,22950],"ede":[16384],"build-time":[13979],"metrics":[15677],"shader":[778,2005,2708,3179,3232,3247,3445,3586,3609,3621,3631,4090,4795,4879,4909,5009,5212,5320,5399,5500,5733,5908,6623,7118,7319,8085,8175,8286,8306,9276,9306,9477,9587,9867,9881,9896,10449,10587,11136,11177,11224,11356,11426,11745,11910,11981,12298,12512,12602,12611,13900,13973,14108,15414,15453,15487,15528,15555,15922,16087,16316,16353,16670,16689,17059,17444,17448,17452,17458,17462,17468,17498,17502,17506,17510,17514,17539,17543,17548,17556,17562,17565,17608,17612,17617,17622,17626,17630,17634,17637,17667,17671,17675,17679,17682,17687,17691,17696,17700,17705,17709,17714,17718,17722,17726,17730,17749,17777,17782,17788,17795,17821,17916,18056,18140,18231,18240,18285,18361,18403,18485,18495,18567,18622,18645,18678,18679,18700,18715,18860,18934,18968,19037,19073,19126,19181,19201,19230,19256,19377,19417,19433,19457,19514,19541,19732,19758,19790,20136,20164,20352,20458,20691,20769,20779,21084,21550,21572,21582,21607,21610,21859,21905,21930,22203,24221,24544],"subnet":[1071,14983,24309],"righthandobj":[10312],"slowing":[10782,11965,12196,14102,22024],"downsized":[3056,23159],"spot":[3556,6860,7350,8267,9567,11131,11158,12917,12959,15461,15489,15536,20420,20753,23374,23704],"spread":[2296,2559,4037,5004,6913,9254,14076,15332,15987,16027,16037,16162,16252,16278,16341,21836,22133],"nighttime":[9889],"builds":[53,174,210,1283,1806,2475,3066,3665,4193,4531,6484,6818,7120,7994,10418,10915,12225,14543,15188,18361,21370,21417,21541,21670,22287,22368,22396,22913,22978,23262,23774],"clarify":[8403],"plug-ins":[10091,22535],"float4":[6632,12068,17963,18267,18326,18633,18731,19096,19191,19605,19800,20446,20480,20712,20835,21093],"expressed":[14202,16938],"-o":[1588],"accoring":[22568],"steeringtarget":[13016],"gl_oes_fragment_precision_high":[1500],"sub-images":[11753,14268],"yet":[684,5247,7335,8256,9422,9955,10048,11287,11923,11954,12244,12551,13179,14072,14870,14937,15794,20506,23190,23244,23268,23669,23889,24217,24425,24671],"friends":[7463,13635],"scenescript":[24611],"undefined":[1230,6458,9709,13195,21344],"alternating":[21836],"ect":[21768],"movetoclickpoint":[13228],"case-sensitive":[10064],"buildtarget":[1918,1978,10494,21462],"bind":[10567,14842,18144,23002],"enemycontroller":[12688],"securityexception":[17337],"chain":[1127,1154,1390,1423,3480,10291,11353,17732,23399],"character-related":[15569],"official":[6719,22271],"solver":[4142,15235],"camera-based":[16406],"findobjectoftype":[12376],"panel-":[17297],"replaces":[17444,17448,17452,17458,17462,17469,17498,17502,17506,17510,17539,17543,17548,17556,17562,17566,17608,17612,17617,17622,17626,17630,17634,17638,17667,17671,17675,17679,17687,17691,17696,17700,17705,17709,17714,17718,17722,17726,17731,17750,17777,17782,17939,18878,22829,23135],"pluggable":[5206],"heightmap":[12636,21847,21855,21977],"troubleshooting":[196,230,1092,9516,9540,10419,10460,10574,11144,11332,14314,22280,22319,22382,22523,23154,23684,24550,24672],"architecture-specific":[14689],"wpos":[20864],"reset":[412,910,1646,3520,6827,7896,8118,12325,12617,12702,14283,22606,22933,22956,23287,23605],"joystick":[3522,6804,10029,10856,15732],"rebuildinternalstate":[15031],"enum":[1213,7541,8279,12711,21478],"rpg":[5206],"slot":[1185,1424,5210,8189,9307,9588,9874,9882,17685,21567,22205,22991],"offset":[653,2165,2662,2794,2863,3044,3148,3203,3357,3387,3566,3824,4851,5474,7324,8287,9723,11433,12057,15600,16643,16938,17168,18028,18269,18321,18398,19018,19162,21410,21907,22650,22877],"feed":[1312,2266,9770,10100,13170],"flattens":[13839],"between":[15,133,181,236,313,354,386,470,605,625,659,685,752,826,863,1057,1109,1133,1194,1247,1335,1393,1471,1532,1608,1615,1734,1763,2009,2076,2126,2191,2223,2358,2448,2471,2559,2611,2630,2762,2807,2838,2967,3034,3064,3131,3348,3474,3564,3592,3676,3734,3822,3898,3994,4150,4197,4520,4573,4685,4761,4797,4839,4902,4954,4987,5110,5142,5186,5285,5356,5375,5425,5440,5537,5668,5693,5727,5761,5790,6464,6547,6836,6856,6898,7106,7141,7308,7365,7389,7506,7665,7804,7905,7987,8138,8163,8631,8775,9051,9299,9345,9592,9736,9741,9962,10056,10484,10923,10970,11193,11229,11423,11493,11513,11729,11772,11910,12199,12456,12589,12604,12652,12657,12687,12801,12817,12885,12962,13158,13212,13284,13449,13464,13565,13576,13725,13727,13772,13844,13955,14022,14071,14110,14184,14204,14279,14288,14326,14495,14597,14848,15074,15093,15116,15236,15241,15445,15562,15606,15658,15709,15852,15893,15914,16027,16105,16142,16246,16259,16295,16319,16361,16372,16451,16484,16607,16708,16760,16973,17001,17034,17127,17148,17199,17377,17685,17981,18075,18329,18376,18683,18884,18945,19067,19136,19266,19438,19470,19759,19846,20207,20689,20784,21413,21569,21618,21651,21670,21836,21855,21897,21953,21993,22109,22253,22349,22490,22553,22652,22684,22741,22897,22924,23158,23266,23268,23461,23642,23715,23739,23779,23815,23889,24024,24180,24364,24538,24584,24674],"hfratio":[2538],"unwrapping":[9513],"convenient":[386,1614,4854,6778,6875,9597,11344,12920,14332,14464,14781,15345,15607,15878,18935,21398,21413,22817],"lives":[1247,7811,10945,12283,12454,15336,16794],"openable":[4006],"reply":[17346],"bbndk":[1562],"asian":[3198],"decoration":[16495,16637],"immobile":[6463],"cmd+2":[23030],"mirror-like":[21614],"exportresourcergb2":[1814],"fx":[3444,8309,9899,11182,11443,11742,15459,17800,17820,19123],"substanceimporter":[6111],"flaming":[9576],"dialog":[203,671,877,1370,1400,1860,2294,4223,4670,5210,6437,6514,6805,9355,9533,10470,10502,11410,14964,15082,15123,15196,16213,16434,21280,21396,22268,22396,23609,23761,23897,24229,24380],"aot-compile":[23811],"libpluginname":[14697],"memorymanagement":[22864],"aluminium":[21615],"stripped":[1279,4449,4656,4797,10423,10915,22416,23779,24579],"listeners":[1106,1458,23107],"controls":[348,629,684,2191,2250,2266,2769,2801,3194,3307,3348,3528,3740,4107,5002,5491,5524,6412,6618,7337,7471,7533,7792,8013,8345,8508,8771,8888,9000,9180,9617,9679,9705,10030,10456,10870,12933,13212,13457,13727,13772,14019,14072,14108,14157,14282,15083,15747,15797,15863,15929,16047,16241,16495,16520,16637,16697,16746,16946,17026,17067,17390,18388,18496,19261,21401,21420,21589,21836,21892,21902,21919,21967,22026,22085,22168,22248,22593,22710,23275,23617,23674,23691,23902,24013,24098,24410],"unity_2_6_1":[14387],"fail":[231,1605,4481,4645,6458,6495,11388,11408,11793,15588,15600,17374,19545,22961,23780,24046,24288],"native-to-managed":[14723,22498,24044],"indent":[7595],"low-poly":[20654],"onrenderimage":[6591,7919],"dissect":[17837,17975],"fake":[13962,24653],"though":[78,185,661,1247,2138,2363,2369,4963,5356,6742,6856,7147,9614,10020,10940,11119,11247,11454,12588,12608,13276,13285,13451,14054,14109,14171,14580,15084,15865,16385,17911,18046,19123,19327,21960,22024,22744,23239,23754,23895,24218,24601],"nurbs":[3633,9253,9321,9542],"100x":[12391],"flipping":[5799],"catching":[23782],"influenced":[5121],"non-editable":[3045,4852],"gesture":[9615],"where-as":[17349],"operating":[208,2029,6374,8336,9947,10429,17421,22366,24538],"distorts":[2322,2329,2511,2529,2549,16397,16606,17134,17177],"float4x4":[19442,20694],"readable":[3018],"unity_v5":[22973],"enable":[4,217,276,553,603,1071,1420,1608,1613,1636,2017,2163,2300,2569,2838,2967,3131,3263,3474,3582,3644,3741,3754,4045,4106,4145,4229,4531,4602,4673,4776,4794,5053,5121,5297,5369,5438,5482,5602,5728,6424,6859,6960,7120,7852,7949,7968,7994,8185,9305,9370,9573,9584,9662,9745,9871,10053,10451,10556,10835,10942,11204,11598,12196,12644,12700,13149,13333,13701,13761,13764,13929,14076,14108,14522,15088,15197,15234,15605,15897,15946,15982,16154,16331,16537,16554,16584,17397,17685,18039,18183,18542,18872,20408,21279,21396,21415,21646,21670,21933,21958,22396,22587,23152,23262,23355,23373,23719,23779,23902,24108,24139,24302,24410,24669],"re-add":[3684],"m_finalgatherrays":[24768],"access-control-allow-methods":[23884],"airport":[22924],"sub-frame":[663],"lightingtonemapped_duallightmap":[20332],"especial":[11807],"drawcall":[8084],"sprouting":[22250],"piles":[12481],"extract":[9643,13331,14007,15137,20433,21398],"pict":[5646],"transparentcutout":[11438,19529],"atmospheric":[6856,16170],"dot3":[19281],"trial":[6447,13881,22208,22949],"ragdolls":[575,5294,15235,24379],"emulated":[10770,13766,17270],"assetbundleinfos":[1881],"_malloc":[23837],"continuing":[8122,13631,15109,16984,17124],"dramatic":[11133,11928],"wisely":[5873],"aural":[2425],"plugin_teedee":[1324],"transferred":[4458,4716,13567,13703,13774,15596,20956],"non-strippable":[22454],"updates":[24,158,574,863,2200,3627,3927,4960,5186,6425,6452,6495,6682,7782,7906,8163,9246,10848,10905,11361,11524,11551,11785,12336,12485,12496,12600,13448,13466,13719,15013,16061,18336,21631,22021,23608,23979],"graphicssettings":[5902],"empowers":[6976],"third-person":[2138,2790,7911],"unity_matrix_it_mv":[18769,20703],"hinted":[22456],"firewall":[13310,13326,13749,14973,17399,22937,24673],"workstations":[1417],"centered":[2498,3660,4165,4441,4711,6998,9868,24407],"favorites":[15100],"y-position":[12315],"100f":[1724],"reparent":[17204],"es3":[4518,4612,4693,4769,10770],"glossary":[330,401,7985,15571],"holeprepare":[19670],"controlled":[334,1147,1438,2559,2633,3028,3487,3849,4993,5330,5375,5782,6940,8138,8306,10907,11133,12448,12453,12933,13022,13117,13193,13267,13739,14140,14807,15585,16232,16565,16661,16749,17199,17345,18140,18180,18658,19308,20401,21607,21859,21953,22255,22602,22669,22699,22895],"inject":[4485,4741,23417],"velx":[12958],"custom-built":[12480],"pyramid":[1736,2128,22866],"verify":[918,961,1006,1020,9294,9313,10384,10425,11551,11578,14801,17057,22287,23367,23634],"am":[3317,3375,6973,8697,8805,9005,22960,23596,24203,24587],"public":[37,417,639,668,758,1096,1208,1709,1810,1856,1988,2081,3311,3782,3918,6765,6927,6955,7163,7228,7396,7409,7480,7554,8363,8519,8792,8904,9011,9756,10033,10056,10083,10126,10309,10489,10985,11359,11531,11730,11837,12567,12633,12660,12691,12820,12973,13098,13230,13252,13308,13338,13471,13581,13672,13749,13786,13826,14081,14119,14426,14545,14915,15621,16803,17225,17374,18500,21386,21453,21783,21816,21998,22506,22748,23001,23246,23331,23382,23433,23592,23844,24028,24195,24292,24332,24611,24669,24673,24679],"notify":[11550],"high-resolution":[9259],"unix":[17402],"ingredient":[7538,17234],"reconnected":[4020,12789],"pattern":[6860,7908,9867,10160,10856,11198,12818,16083,16598,21331,21350,21409],"fully":[188,1147,2617,2762,3228,3758,5252,5779,6460,7391,8210,9951,10198,10771,11438,11715,11729,11764,11983,12883,13426,13975,14108,14895,15153,15399,15461,15489,15516,15962,16367,16556,17095,17188,17732,18213,19439,22114,22553,23190,23809,24046],"trade-off":[236,3133,11152,12199,14932,22024],"scripter's":[470],"fullscreen":[4169,4664,6437,6556,6590,9621,9651,10707,11887,12033,15475,15509,23904,24412],"centos":[17385],"view-direction":[20438],"vertexfunction":[20416],"essentially":[489,1127,2189,2798,3735,6603,6883,6979,7323,8597,8819,9206,11198,11745,12041,12594,13443,13742,14007,14546,14883,15104,15615,16079,16538,17187,17514,21664,22092,22897,23588],"ljava":[14555],"833mhz":[10658],"taking":[1348,6868,7114,10578,11925,11981,12702,13822,13982,14109,15000,15060,16060,16365,21672,22867,22876],"produces":[5005,5827,6458,9180,13863,14054,14062,14076,14102,14228,15389,15479,18040,18955,22242,22659,23774,24181],"credentials":[13883,22955],"addtorque":[5147],"addons":[1639],"tractor":[14098],"day":[860,17080],"equivalence":[18205],"maxval":[1295],"unity_standalone_win":[14367],"21ms":[15009],"agents":[3818,3849,4017,12790,12888,13117,13155,13187,13265,13269,13298],"20a94a2c4d7f":[1507],"abs":[509,7770,12442,20035,21059],"bathe":[23379],"dangling":[2213],"performing":[3833,11237,11736,12369,12466,14750,16188,17421,22444,22933],"internationally":[4447,4654],"gl_backlightmodelproduct":[19114],"persistentdatapath":[1533,10539,14582],"reflected":[822,1458,5049,9679,11925,13457,14782,17567,18040,21611,22245,23234],"txt":[1628,1980,5443,6554,11319,11591,11844,17249,21289,24180],"handletimeofday":[22399],"computers":[579,833,10765,11955,13284,13729,13772,22093],"checking":[7447,7942,10940,11053,11065,11136,11778,12931,13351,13651,13715,14331,15201,16665,17320,19617,22402,22544,22928,23212],"airmouse":[15716],"scientist":[11953],"mycompany":[22918],"customizing":[287,2665,3246,4440,4710,6991,7081,7438,8771,9687,11604,21420,23900],"recalculated":[3869],"sign-up":[6699],"_cameragbuffertexture0":[15506],"imagination":[5672,12182],"able":[78,276,364,366,468,629,682,875,991,1000,1352,1609,1633,2138,2613,2808,2876,3814,3867,4352,4528,4634,4729,5168,6442,6698,6710,6738,6961,7389,7786,7816,7941,9677,9704,9719,9745,10075,10201,10782,11247,11302,11398,11621,11921,11950,12207,12460,12537,12898,13293,13351,13441,13464,13884,14337,14783,14900,15026,15082,15137,15196,15346,15617,15838,16285,17093,17348,18598,21566,21617,22278,22322,22662,22962,23083,23299,23398,23638,23809,23983,24017,24143,24220,24288,24308,24311,24363,24414],"bind-pose":[344,6669],"-logfile":[6515],"faces":[2991,3707,5003,9357,9515,11165,11454,14191,14832,14870,15474,18391,20510,20958,23376],"rangeattribute":[7663],"linearized":[11223],"style":[2118,3267,3332,3393,4287,4583,5481,6625,8772,12959,15792,17032,17820,21689,22266,22718],"gimp":[9259,16189,16208],"path":[40,248,278,525,661,793,1490,1570,1823,1901,1975,2042,2685,2977,3834,3867,4017,4197,4515,4609,4685,4761,4966,5344,6494,6647,6860,6998,7279,7774,8183,9668,9934,10068,11177,11217,12818,12876,13065,13113,13124,13139,13160,13249,13264,13908,14456,14806,15099,15405,15451,15480,15512,15556,17404,17518,18254,18379,18563,19233,19524,19587,20134,20420,20727,21282,21659,22275,23189,23302,23460,23702,23894,24407],"using":[22,34,170,179,215,255,269,294,314,348,367,408,442,478,606,625,627,664,677,679,750,756,821,839,1006,1020,1047,1077,1123,1376,1398,1449,1531,1600,1614,1631,1703,1743,1767,1783,1807,1848,1968,2036,2079,2121,2139,2188,2203,2224,2294,2430,2494,2568,2617,2619,2633,2668,2754,2804,2882,3019,3115,3125,3177,3196,3250,3331,3362,3397,3485,3582,3617,3665,3707,3796,3818,3870,3887,3909,4012,4078,4191,4531,4656,4714,4757,4872,4923,4933,5000,5114,5142,5198,5206,5209,5249,5285,5323,5389,5430,5491,5646,5684,5731,5765,5782,5817,5834,5867,6402,6428,6443,6492,6614,6620,6677,6741,6833,6865,6899,6926,6939,6983,7014,7087,7109,7117,7134,7161,7222,7310,7357,7384,7477,7533,7940,7968,8017,8083,8113,8123,8130,8162,8334,8361,8517,8790,8902,8998,9180,9186,9263,9332,9360,9373,9411,9429,9480,9533,9547,9612,9643,9681,9701,9722,9741,9852,9896,9947,9976,10022,10049,10073,10106,10305,10404,10429,10444,10485,10578,10587,10907,10915,10970,10978,11063,11127,11143,11145,11193,11212,11228,11259,11290,11334,11349,11402,11454,11473,11499,11527,11550,11600,11606,11651,11730,11754,11873,11992,12201,12456,12518,12600,12617,12654,12683,12688,12746,12759,12786,12812,12818,12890,12949,13087,13163,13184,13229,13251,13265,13309,13335,13439,13448,13467,13568,13577,13669,13701,13731,13767,13779,13821,13842,13884,13904,13985,14000,14017,14036,14071,14105,14155,14184,14204,14252,14264,14280,14302,14342,14424,14502,14677,14716,14752,14784,14829,14868,14947,14958,14998,15048,15087,15099,15153,15196,15233,15241,15384,15414,15453,15483,15588,15592,15618,15847,15870,15907,15938,15981,16031,16082,16108,16134,16188,16212,16242,16294,16322,16433,16459,16563,16578,16645,16686,16737,16843,16958,17045,17096,17201,17222,17239,17257,17325,17384,17516,17685,17751,17822,17939,18044,18056,18211,18278,18345,18361,18412,18496,18602,18645,18680,18696,18943,19028,19060,19088,19153,19220,19249,19255,19418,19455,19486,19514,19589,19756,19791,20146,20185,20353,20464,20767,20822,21350,21358,21385,21402,21416,21550,21582,21597,21610,21618,21640,21656,21747,21772,21813,21829,21844,21863,21910,21932,21950,21962,21982,21984,21996,22096,22104,22139,22203,22220,22248,22258,22349,22387,22524,22553,22623,22635,22665,22681,22746,22898,22920,22956,22978,22988,23103,23146,23189,23214,23267,23298,23357,23372,23380,23385,23397,23399,23445,23590,23607,23617,23623,23702,23754,23776,23796,23814,23875,23905,24015,24264,24280,24326,24356,24381,24402,24525,24539,24589,24608,24675],"hole":[3849,13217,13267,13309,14069,19708],"topics":[18052,19228,21653],"signal":[1127,1153,1203,1329,1396,2243,2259,2316,2342,2353,2372,2503,2514,2533,11670,13576,22393],"window's":[7507,12892,14966],"importer":[335,445,578,593,1109,1283,1840,2014,2300,2609,3118,3636,5389,5516,7964,7984,8021,8136,9993,11254,16197,21374,21415,21927,23264],"accelerating":[14307,21973],"pin":[1602],"testconnection":[13351],"guids":[10925],"-importpackage":[6514],"since":[182,221,246,375,498,661,752,875,1004,1283,1469,1598,1878,2034,2121,2361,2367,2628,2634,2752,3133,3244,3405,3553,3617,3676,3759,3890,4444,4658,4714,4932,5288,5440,5495,5765,5792,6444,6661,6780,6860,7109,7136,7158,7712,7776,7825,7994,8074,8097,8149,8309,8377,9651,9727,9745,10021,10201,10484,10560,10978,11122,11138,11148,11198,11299,11356,11401,11619,11729,11750,12640,12733,12781,12808,12885,12916,13149,13158,13227,13287,13351,13445,13565,13712,13841,13918,13986,14066,14106,14147,14281,14464,14582,14719,14751,14830,14870,14927,15109,15342,15550,15560,15584,15659,15760,15853,15894,16164,16205,16268,16347,16564,16645,16834,17259,17338,17796,18033,18311,18380,19097,19220,19248,19617,19762,19944,20209,20507,20722,21420,21586,21897,21947,21957,21987,22023,22092,22113,22380,22444,22546,22606,22662,22738,22876,22906,23156,23249,23368,23374,23392,23865,23979,24558],"advantage":[2299,2617,3198,3676,3758,4470,4728,5440,7122,7329,9612,9848,10578,10778,11209,11790,12600,13291,15169,15456,15484,18030,19452,23266,23358,23978],"multiply":[4093,4909,7909,12395,14077,19281],"pinyin":[9948],"deployable":[11294],"createprimitive":[10122],"critical":[571,2810,9426,11763,13315,13887,16345,21562,21988,22548,23990],"fresnel":[9913,19174,21604],"projectors":[19783],"orthogonal":[1351,2843,2894,17393],"lan":[6410],"5f":[1226,6935,7170,10262,12848,13011],"compact":[690,17795],"rwtextures":[7129,19099,20454],"toggled":[1426,8232,23234],"decals":[8297,9266],"dive":[11979,13269],"drag-able":[8718],"run-":[10462],"prohibitive":[2282],"zfailback":[19564],"scan":[11235],"ledgedropheight":[24785],"stripped-down":[10925],"default-diffuse":[3639,8012,20810],"sub-functions":[15009],"artifact-free":[11346],"serializednodes":[16887],"skylight":[8195],"ever":[160,947,1605,11756,11925,12687,12937,13315,13766,14937,15200,22862],"selectiongrid":[8614],"sale":[1005,1548],"crates":[3867,13117,13177],"halolayer":[5963],"normally":[755,1051,4449,4656,5161,5202,5658,6443,6509,7987,9123,9683,9691,9966,10053,11223,11541,13725,13749,14494,14644,15202,15343,15433,19515,19588,20878,21597,21947,21960,22024,22139,22220,22644,23262,23461,23895,23984,24380,24398],"_scrollingspeed":[12061],"canusespriteatlas":[19784],"computationally":[13179,14597],"opencl":[6622],"namely":[14868,17902,18024,22095],"surroundings":[1458,2994,4983,5344,8251,11130,21652],"intact":[2672,5513],"onselect":[21766],"pandelay":[2411],"rectransform":[16719],"fusetime":[14119],"upper":[361,366,698,1668,2170,2619,2835,2911,3237,3499,4395,4522,4974,5342,5366,7834,8208,9686,9698,9725,11163,12685,13132,14047,14288,15092,15591,16243,16951,21835,22104,22655],"npc's":[13725],"parect":[22651],"sharpness":[12056,18884],"resembling":[2252,2268,5853,14302,21940],"iserializationcallbackreceiver":[16873],"assumptions":[185,579,22412],"stretchable":[187],"uimode":[14635,22313],"necessities":[8345],"literature":[12456],"compare":[72,875,5040,5167,7110,7582,9720,11925,12394,12588,13712,14829,14958,15251,16660,18333,19554,23623],"customskin":[3312],"checkboxes":[207,712,4814,5414,7376,14466,14980],"generator":[23364],"twigs":[22197,22250],"three-dimensional":[2121,11644],"arm-arm-unknown-nto-qnx8":[1577],"always":[78,168,234,249,313,485,601,622,659,752,825,1128,1204,1379,1431,1616,1683,1756,1850,2048,2076,2118,2130,2139,2150,2205,2423,2473,2752,2806,2977,3066,3098,3152,3200,3243,3251,3571,3592,3719,3839,3913,4225,4654,4927,4941,5008,5169,5215,5314,5417,5654,5773,5876,6457,6495,6793,6984,7153,7330,7355,7403,7899,8075,8554,8890,9091,9256,9715,9961,10020,10102,10417,10504,10578,10782,10917,11044,11135,11480,11525,11621,11711,12454,12636,12733,12889,13162,13203,13305,13351,13462,13640,13718,13773,13916,13985,14191,14550,14796,15329,15389,15475,15517,15607,15624,15853,15893,16199,16345,16799,17391,17523,17640,17802,18072,18301,18383,18619,18892,18998,19049,19207,19433,19545,19773,20747,21417,21544,21603,21637,21656,21715,21837,21920,22101,22179,22279,22339,22488,22895,23209,23270,23600,24046,24128,24327,24391],"toolbar1":[8603],"tone":[9202,16785,20308],"m_fogdensity":[24736],"freedom":[10970,23131],"properties":[304,314,382,461,581,629,677,683,1063,1112,1743,1767,1803,2143,2157,2195,2230,2241,2257,2273,2309,2317,2323,2330,2337,2349,2373,2381,2389,2397,2405,2414,2422,2434,2442,2452,2461,2480,2488,2495,2504,2512,2530,2550,2560,2648,2659,2666,2738,2759,2773,2779,2791,2824,2860,2868,2970,2984,3041,3051,3069,3126,3144,3270,3335,3382,3409,3438,3448,3488,3507,3536,3554,3594,3618,3630,3666,3679,3687,3749,3768,3819,3877,3894,4013,4031,4067,4105,4110,4135,4151,4159,4177,4834,4848,4866,4910,4969,4984,5097,5122,5270,5317,5347,5357,5399,5406,5421,5434,5452,5471,5512,5707,5717,5746,5768,5802,5821,5858,6434,6445,6742,6940,7109,7314,7338,7374,7582,7833,7896,7939,7978,8058,8112,8401,8775,9159,9221,9478,9569,9615,9684,9712,9904,9952,10032,10056,10166,10972,11127,11423,11546,11713,11788,12054,12897,12946,13114,13128,13145,13449,13704,13853,14015,14020,14042,14050,14056,14076,14103,14143,14150,14158,14166,14189,14208,14216,14223,14247,14255,14262,14269,14281,14295,14781,14888,15506,15580,15584,15918,15925,15940,15977,16010,16024,16034,16043,16063,16091,16140,16191,16230,16248,16262,16274,16283,16319,16359,16368,16393,16399,16408,16422,16447,16481,16496,16521,16540,16559,16582,16604,16616,16623,16628,16633,16638,16650,16662,16676,16693,16717,16792,16935,16942,16966,16997,17027,17052,17063,17083,17098,17112,17137,17145,17161,17179,17205,17453,17463,17515,17549,17557,17804,17821,17918,18041,18082,18211,18414,18493,18496,18579,18655,18712,18869,19124,19181,19209,19230,19268,19377,19457,19709,19808,20133,20170,20356,20466,20790,21385,21569,21790,21900,21953,21987,22023,22104,22130,22196,22211,22246,22389,22553,22572,22919,23270,23379,23381,23386,23589,24377,24656,24669],"lastly":[10167,13466,16136],"rasterization":[10767],"clearance":[3823,12811],"registerhost":[13327,13438],"r2":[10898],"tire":[5767],"instanced":[10109],"add-on":[1551,1632,7941,22970],"mainpage":[24034,24184,24315,24593,24707],"privileges":[22533],"lightmap_on":[12136],"scanning":[22368],"non-basic":[23803],"unable":[1016,1605,2615,4402,4530,6443,15235,22289,22491,22548,23979],"exerted":[5790],"acc":[11686],"reimport":[1830,2008,21930],"torque":[2837,2908,2974,2983,3130,3473,3487,5121,5368,17205],"encoders":[2286],"ms":[2247,2263,2312,2319,2339,2351,2409,11729,12493,13725,14462,15009],"bullets":[5872],"merges":[3062,21279],"zip-compressed":[21664],"playability":[13318],"exceeded":[582,2044,2962],"bloated":[23,9287],"integral":[5500,9615,21555],"easier":[15,470,1205,2020,3660,6858,9256,9357,9743,10045,10166,11752,12608,13134,13297,14469,14830,15693,18048,18600,19230,20353,21715,21937,22125,22521,23299,23623,24239],"radial":[16507,16995],"avaible":[4469,4727],"preferences-":[22479],"crash":[195,231,1104,4451,4600,6451,6516,10459,10575,11577,11858,12588,15670,22294,22351,22446,24128],"parses":[24091],"rt2":[15500],"vector2s":[23392],"actively":[3340,3426,3487,3832,15073],"imaging":[12182,24543],"concluded":[15018],"organised":[392,1002,1416,14015],"ktximporter":[6102],"noambient":[19440,20427],"proc":[1982],"teal":[21736],"'send'":[1167],"class-mesh":[9481],"obtain":[464,830,870,10412,11305,11496,12393,14501,15647,15703,15834,20845,21664,21847,22446,23176,23362],"exclusive":[3485,16082,17088,22692,22948],"xz":[1769,2179,11658,12957,14036,14191,14878,15596],"stream":[741,1348,2219,2282,2487,3087,3705,3919,7243,11283,11294,14184,14244,15001,16793,17326,23158,23995],"bladeslinger":[11868],"runleft":[2156],"sub-directory":[14689],"forks":[6710],"thread":[10463,11261,11597,12504,12732,16932,22406,24046,24182,24708],"declare":[3365,6776,8432,8799,8916,12633,14682,18342,19182,20143,20692,21104,23601],"myclassderivedfrommonobehaviour":[17252],"ready":[94,605,709,858,1049,3802,6703,7255,7962,8243,9229,10444,12645,13092,13430,13466,13871,15196,16199,17866,18565,22206,22551,22555,23416,24015,24383],"textureblock":[19260],"spare":[1674],"proceeding":[10561],"100mb":[10917],"kgfxdeviceeventbeforereset":[12729],"#976038":[22263],"_worldspacelightpos0":[20733],"slanted":[9863],"printf":[23869],"painting":[11923,14842,19257,21570,21831,21846,21899,21914,21940],"billow":[14072],"synthesis":[1324],"dope":[629,687],"generatemipmaps":[21481],"pools":[12229,15044,22435,22861],"i":[31,879,977,1071,1230,1534,2063,2202,3317,3375,3639,3983,5079,5505,5648,6716,6786,6915,6929,6973,7120,8697,8805,9005,9212,9300,9326,9345,9356,9364,9558,9567,9574,9866,9876,9887,10080,10254,10441,11209,11356,11529,11682,11826,11941,12026,12205,13022,13913,14559,14749,14985,15258,15852,16385,16429,16815,17971,18046,18303,18619,18745,18880,18949,19241,19437,19614,19763,20326,20510,20896,21102,21417,21698,22169,22267,22308,22473,22650,22751,22909,22947,23155,23219,23596,23622,23744,23829,24203,24343,24514,24587],"v2f":[12080,17962,18632,18730,19607,21092],"store":[75,154,187,242,299,394,728,834,930,962,976,987,990,992,1016,1028,1034,1043,1063,1327,1811,2026,2214,3062,3633,4173,4561,4671,5204,5459,5684,6563,6710,7258,7675,7941,9261,9355,9370,9628,10540,10916,11168,11209,11251,11401,12749,13158,13880,14381,14479,14736,14782,14800,14851,14928,15101,15139,15217,15343,15712,15808,16837,18294,18555,20845,21666,21924,22101,22433,22735,22959,23036,23147,23243,23299,23365,23432,24106,24111,24127,24160,24179,24187,24214,24236,24272,24298,24310,24323,24343,24361,24374,24515,24527,24538,24579,24601,24606,24669],"-force-free":[6513],"domestic":[13351],"implicitly":[2904,6780,6967,7243,10924,11228,18618],"sandy":[21897],"seeping":[5612],"tga":[5646,9260],"silhouettes":[16383,23704],"2x2":[3170,12525],"mylinearclampsampler":[6645],"1001freefonts":[3405,5495],"advantageous":[21644,22833],"768p":[4329,4618],"getpixel":[17378],"createassetbundles":[1856],"echoes":[1460],"tiny":[10035,12889,14110,14302,15532,18884,23997],"three-axis":[10636],"travel":[5739,5774,12887,12934,13293,14109,18035],"instanceidtoobject":[21465],"platformdefines":[14426],"m_aomaxdistance":[24773],"legal":[17045,17079,22951],"statue":[11903,11992],"boned":[9383],"myplugin":[23820,24277],"breakpoint":[1091,12647,24145,24559],"altogether":[7110],"parent-child":[22109],"level":[246,269,663,1166,1385,1600,2311,2487,2514,2533,2574,2693,3565,3616,3652,3771,3881,4200,4523,4619,4688,4764,4791,4932,5002,5111,5538,6443,6572,6866,6979,7152,7330,7900,8128,8335,8349,9092,9256,9410,9617,9848,10105,10417,10913,11118,11173,11296,11350,11437,11747,11947,12204,12644,12787,12800,12904,12934,13087,13118,13155,13264,13281,13454,13465,13630,13746,13770,13846,13933,14545,15012,15043,15137,15199,15388,15408,15447,15560,16143,16260,16284,16328,16391,16578,16799,16960,17195,17795,18294,18861,19097,19392,19417,19494,20353,20510,20722,21505,21634,21843,22244,22445,23189,23377,23774,23897,23997,24046,24121,24221,24595],"lastlevelprefix":[13474],"covered":[1349,1416,1751,4174,5627,6856,7142,10024,10482,11404,12640,13300,15045,15931,20928],"per-platform":[213,4183,4892,5625],"bb10":[6502],"foreground":[9050,16151,16286,16321],"attributes":[1095,3333,7318,7533,18687,19156,24413],"dissipates":[14102,14259],"octave":[2498],"'pixels":[16100],"_ramp":[20233],"localhost":[2022,6400,14345,17352,17391],"onlevelwasloaded":[15220],"pre-made":[14281],"mp4":[3767],"sideways":[166,1779,3478,5780,15865],"bounding":[3619,3759,5048,5280,11205,12600,13843],"+20db":[1153],"youngest":[14198],"executed":[6391,6508,6592,7446,7892,7894,8354,8524,10820,11535,11684,12496,12739,13183,13630,13743,16367,17239,17901,18180,19434,20841,22987],"heart's":[827],"spritepackingmode":[21429],"sidescrolling":[12283],"examplescript":[2081,3918,7163,12660,13338,13471,13581,13826,21998,22748],"effect'":[1161],"non-default":[17329],"areaeffector2d":[6060],"cmd+9":[23036],"getversion":[21427],"emitters":[654,3091,3711,4043,9575,14260],"screenshot":[1606,11925,14924,15009,16200,16211,16431,16661,18566,22048],"cycle'":[16851],"custombutton":[8802],"displaying":[1312,2693,3802,6665,7795,8511,8781,10802,11410,14817,15098,16286,16321,24021],"doubles":[10458,11852,12196,17660,17740,17759],"numelements":[22806],"a+-b":[19281],"redo":[11959,23043],"singular":[9121],"c+e":[18954],"non-important":[20735],"reflectionprobes":[6034],"networklevelload":[13745],"duck":[285,1172,10962],"perspective-free":[14005,15852],"triple":[3101,3297,3722],"pointonground":[22878],"gui":[131,1204,1907,2203,3183,3262,3266,3332,3379,3406,4231,5486,5524,6616,6618,7335,7443,7469,7535,7791,7920,8344,8510,8771,8887,8996,9176,9178,9983,10456,11252,11444,11596,11694,12182,12213,12467,14336,14872,16055,17026,18485,18495,21689,21970,22026,22716,23209,23653,24624,24675],"allusers":[22549],"vegetation":[11175,18105,18253,19061,19529,20436,22278],"corner":[179,359,408,619,996,1190,1661,2719,3397,4974,6647,7834,8208,9020,9686,9698,9725,10041,12680,13065,13162,13913,15116,15440,15851,15892,16243,16452,16646,18329,18566,21418,21907,22104,22247,22650,22872,22918,23393,24322],"normalization":[5309,12392],"outputdebugstring":[24206],"gl_qcom_extended_get":[1503],"cropped":[292,4441,4511,4711],"view-space":[20753],"orientation":[288,2170,2426,2786,3079,3243,3697,3805,4272,4498,4573,5586,7786,8138,9363,11556,11605,13021,14635,14761,15591,15851,15892,15960,22313,23266,24592],"complicated":[3665,8819,10106,11683,12280,12468,13309,14100,14281,22904],"api":[239,269,355,752,1191,1297,1398,1447,1467,1912,2466,3818,3875,4028,4258,4523,4605,4698,4791,5198,5876,6682,7091,7118,7308,7767,8128,8244,9593,9679,10414,10453,10476,10584,10770,10854,10947,11834,12504,12733,12790,12901,12947,13028,13115,13129,13146,13632,13775,15398,16792,17273,21354,22111,22453,23175,23301,23401,23893,24075,24107,24183,24274,24323,24363,24539,24651],"instantiated":[130,1068,2727,5169,7899,7994,9180,9681,10166,11044,12226,12617,13460,13571,13743,15170,16793,17090,21927,22193,22740,23262],"guidelines":[3634,9258,9312,9536,12344,13887,14827,22626,23375],"confirm":[966,1604,4429,4557,16042,17079],"self-explanatory":[24385],"oils":[17567],"slightly":[603,2294,2811,3636,4094,4948,5649,5774,6866,6887,7942,8376,8718,10022,10558,10970,12818,13975,14047,14066,14155,14304,15893,16164,16386,16611,17195,17259,18935,19440,19945,21410,21947,22024,22638,22829,23376],"empty":[291,684,847,1850,2130,2598,2625,2637,2700,3012,3089,3397,3534,3607,3620,3985,5018,5314,5415,5429,5731,6507,7276,7350,8113,8885,9360,10133,10336,10456,10900,10951,11058,11361,12212,12589,13274,13440,14036,14785,15224,16511,17326,17975,18561,19152,19516,20782,21413,21548,21834,21985,22052,22536,22558,22741,23188,23269,23444,24134,24209,24229],"bouncy":[6447],"joy":[3524,6831],"dontrequirereceiver":[13514],"customization":[228,3249,3302,8770,10572,10966],"qty":[939],"moveable":[3997],"first-person":[2693,2790,12657,15841],"concentrate":[9617],"other's":[499],"vec4":[18688],"impractical":[2801],"stopping":[2595,2876,3829,14037,15226],"unevenly":[15332],"lambright_01":[13324],"verifying":[23368],"equals":[649,6846,7987,17393,18070,19149,19572,23430],"dust":[3094,3437,3715,6866,14062,14184,16609],"reportprogress":[13663],"pvrtc_rgb4":[1817],"appdata_img":[18265],"longer":[291,828,1090,1843,2852,2974,3136,3995,4017,4222,4669,5711,6442,8306,9711,9990,10103,10160,10978,11390,11499,11837,11965,12801,12882,12941,13149,13916,14139,14609,16164,16571,16798,20606,21349,22024,22623,22735,22954,23220,23290,23895],"surprising":[16796],"slicing":[5000,21406],"multi-screen":[6404],"ymotion":[2872],"docs":[245,8234,10103,11555,11811,16801,17442,19123],"u3d":[254],"scores":[22093],"indicates":[1431,1737,1763,2386,2394,2401,2419,2439,2447,2456,4008,4154,6452,8058,11870,11972,12698,13356,13839,14283,14304,16297,16365,16708,18329,18373,19163,19787,22289,22355,22400,22879,22917,23006,23702],"calculations":[2890,3248,5142,5710,6458,7909,8106,9184,10776,11168,11793,11932,12035,12466,12504,13847,13938,16406,16668,16682,17520,17796,18860,19230,21576,22020,22615],"them":[75,160,276,386,588,603,605,625,637,713,744,752,863,957,1094,1125,1171,1212,1344,1393,1459,1612,1662,1736,1771,1845,1848,2074,2118,2160,2191,2223,2281,2633,2735,2759,2997,3028,3125,3244,3252,3303,3401,3430,3447,3545,3658,4030,4106,4142,4212,4544,4643,4701,4775,4798,4993,5096,5145,5242,5356,5375,5400,5654,5688,5714,5820,6443,6508,6594,6622,6672,6690,6694,6727,6740,6780,6806,6913,6940,6990,7156,7325,7341,7389,7463,7663,7901,7948,8082,8187,8338,8773,8890,9189,9223,9248,9354,9363,9386,9440,9480,9559,9593,9643,9688,9715,9726,9878,9905,9962,10045,10414,10449,10538,10846,10870,10907,10940,10970,11053,11130,11152,11198,11211,11223,11303,11350,11396,11745,11951,11981,12192,12454,12495,12620,12753,12818,12888,12904,12939,12958,13090,13134,13187,13285,13326,13464,13564,13576,13652,13749,13816,13841,13890,13974,14110,14184,14196,14332,14460,14464,14497,14603,14786,14836,14898,15104,15137,15192,15280,15340,15525,15658,15838,15869,16226,16420,16457,16489,16658,16798,17024,17082,17095,17153,17378,17537,17639,17901,17986,18035,18104,18185,18336,18375,18397,18607,18684,18940,18968,19065,19126,19220,19281,19419,19436,19756,20399,20692,21080,21364,21383,21407,21578,21655,21669,21772,21862,21906,21941,21953,21962,21991,22024,22114,22201,22253,22278,22322,22404,22571,22652,22669,22692,22845,22879,22970,23099,23155,23217,23276,23377,23382,23392,23398,23400,23452,23619,23657,23748,24019,24112,24134,24274,24346,24363,24525,24588,24642,24663,24669],"originally":[234,580,7091,12652],"optimal":[464,2221,5169,7973,9515,12597,18030,18336,21413,23264],"refered":[22906],"rightarrow":[15728],"0x3f800000":[8076],"natural-looking":[21921],"compelling":[13179],"hemisphere's":[14874],"delays":[1324,13717,13766],"shader_api_d3d11":[18289,19100],"expanding":[3814,7084,15014,22838],"limp":[24386],"fraudulent":[941],"repaint":[7920],"assemblypreprocessor":[4483,4739],"subtended":[22870],"fine-tune":[2296,3484,6986,8772,10167,22155],"nor":[2074,4434,4562,8004,10352,11175,13315,13896,14509,14697,16314,17349,17912,18048,18203,19241,23895,23911],"externalize":[24014],"system-":[17297],"anatomy":[178,6950,8129,8394,23395],"resending":[13713],"reworked":[10979],"access-control-allow-headers":[23883],"controllers":[623,1473,2137,2627,2815,10855,11503,22555,22571],"looks":[980,1861,3004,3254,3609,4966,5515,6593,6969,7530,7538,8776,9183,9301,9643,9725,9859,10020,10028,10338,10881,11226,11976,12482,12756,12889,13085,13791,14005,14073,14107,14844,15189,15915,16386,16392,16420,16648,17515,17802,17903,18384,18884,19207,19230,19286,19806,20184,21714,21833,22083,22638,22829,22866,23134,23436,24365],"footprint":[367,2293,2620,5684,7330,10774,11852,12588,13927],"billboarding":[21912],"libs":[1570,14512],"functioning":[13139,22928],"mistakes":[22743],"nsurlconnection":[10362],"exists":[72,398,877,1055,1294,2706,5417,6494,7258,7795,11541,13183,16793,21543,22052],"euler":[658,10885],"fantastical":[14054],"ve":[12968],"glyph":[3196],"tracked":[6780,8599,13989,15046,16965,22436],"7f":[13059],"screenmanager-":[9846],"joystickbutton0":[1476],"non-deformer":[9543],"pleasurable":[24391],"special-effect":[17796],"authenticated":[13651],"remote":[258,836,3053,3893,10444,13301,13563,13573,13734,13771,14968,15692,15716,15814,17298,21306,22493,22905,23133,23879,24147,24167,24212,24551],"bots":[24525],"challenge":[1315],"chromatic":[17158],"alt-control":[15880],"'save":[11412],"privacy":[1608,13287],"endif":[112,4479,4737,7306,12073,12771,14413,15698,18309,18525,19081,20090,24270,24341],"flavor":[24588],"quadragulate":[9542],"7ms":[10805,22833],"unityobjecturl":[7021,9928,23478,23920,24460],"converging":[22870],"mov":[3767],"revenue":[951,1002],"efforts":[12687],"explore":[6702,8375,9741,13026,13300,15060,21984,24024,24391],"leanright":[537],"stl100-2":[1525],"authenticate":[13644],"quickly":[231,863,1144,1360,1393,2565,3541,4141,5032,5371,5385,5855,6838,6981,7158,7997,8086,8198,10108,10782,11731,11889,11955,12042,12571,13164,13448,14038,14047,14102,14283,15191,15838,15863,16725,17558,22026,22655,22737,23398,23993,24377],"lights'":[23374],"sword":[9576],"marklayoutforrebuild":[22624],"otherwise":[571,902,1465,1577,2016,2293,3534,3587,3642,3843,3927,4017,4063,4339,4621,4713,5164,6462,6517,6672,6715,6839,7271,7400,7994,8060,8126,8511,9449,9571,9712,9745,9868,12934,13206,13309,13424,13959,14332,14496,15251,15457,15485,16197,16295,16347,17094,18033,18604,19448,21344,21360,21596,22326,22729,22904,22949,23262,23272,23464,23631,23726,23993,24453,24581,24669,24716],"x+35":[7599],"unity_pass_shadowcaster":[18357],"faked":[11903,12042],"initialize":[926,1507,6517,7896,12250,13576,18328,19092,23766,24068,24113],"platform-specific":[1203,4168,9612,9924,14496],"moverotation":[15237],"exclusion":[2624],"terminal":[916,1072,1558,2030,6484,9641,13758,14349,14990,15638,22244,23167,23404],"reveal":[326,370,439,685,1190,1659,8336,16261,18430,22412,22658,23312,24453],"shift+f":[15867,23025],"hierarchical":[436,684,737,1797,5282,15003,15098],"xdrive's":[2884],"'print":[18566],"desktops":[10903,12444,24374],"hence":[2765,9213,11454,13778,15905,16060,16384,16658,16673,18381,18383,19434,24525],"640x960":[4304,4594,11606],"trailrenderer":[5944],"terraindata":[5992],"on-demand":[21358],"ie7":[11321],"mybinaryastext":[1628,17249],"optimally":[16351,23995],"forwardadd":[18278,19051,19234,20729],"distancejoint2d":[6047],"served":[2005,17280],"confirms":[13310],"couldn't":[793,2020,10519,18035],"anywhere":[34,720,1165,1343,1423,3113,5330,5425,6793,9349,9963,11135,11985,12207,12889,14957,15276,17088,18428,20136,21364,22638,23374,24016],"flythrough":[15841,15884],"darkened":[14205,16168,16246,16351,16681],"exchanging":[13445],"getaxis":[424,473,2107,3920,6835,7190,7780,9597,10874,15739],"m_openparameterid":[9762],"lm":[12018,20287],"secure":[11722,15137,23407],"useless":[19433,22838],"id_database_query_request":[13440],"audiomixergroup":[6067],"irritating":[18443],"daylight":[9183,9889],"hitch":[12225],"enhances":[16196,16245,16272,16567],"transitioning":[1194,1450,2632,15606,16336,21636],"further":[194,229,242,314,319,439,462,582,591,603,607,661,764,1066,1109,1371,1431,1467,1762,2119,2132,2296,2364,2370,2581,2617,2645,2765,3062,3098,3156,3553,3659,3719,3763,3844,3872,4025,4132,4148,4443,4713,4757,4811,4949,5200,5263,5400,5414,5429,6442,6675,6681,6729,6740,6944,7774,7825,7941,8060,8085,8121,10025,10049,10556,10563,10972,11150,11329,11350,11405,11421,11465,11525,11696,11747,12332,12651,12782,12791,12810,12899,12921,12936,13085,13110,13126,13142,13150,13274,13294,13331,13462,13564,13613,13885,13935,13982,14011,14039,14097,14108,14313,14323,14325,14701,14748,14787,14936,15073,15108,15479,15586,15861,15923,15932,16088,16186,16246,16281,16317,16354,16389,16418,16512,16556,16671,16690,17022,17060,17347,18035,18077,18471,18695,18863,19071,21362,21384,21422,21623,21653,21675,21743,21752,21955,21967,22098,22249,22287,22322,22440,22863,22867,22906,22952,23268,23356,23726,23988,24012,24120],"preferable":[367,1194,2620,5298,7109],"plist":[9630,10556,21685,22930],"characters'":[12196],"finds":[9796,13923,23156],"fieldtype":[16807],"broadband":[13351],"change":[78,206,259,391,516,661,678,805,838,991,1053,1127,1150,1289,1381,1399,1458,1615,1687,1741,1766,1803,1926,2008,2138,2362,2368,2449,2549,2572,2641,2720,3091,3133,3186,3318,3529,3619,3717,3759,3849,4002,4043,4129,4279,4717,4882,4954,4983,5142,5210,5289,5356,5414,5430,5460,5492,5518,5712,5737,5818,6458,6603,6680,6719,6742,6814,6865,6990,7090,7158,7366,7397,8170,8335,8582,8774,9572,9593,9675,9725,9854,9868,9879,9894,9951,10033,10109,10341,10429,10504,10573,10835,10848,11198,11215,11239,11426,11477,11557,11619,11870,11978,12611,12695,12799,12937,12964,13267,13315,13424,13441,13448,13564,13718,13793,13839,14041,14139,14207,14246,14259,14294,14306,14332,14698,14749,14783,14795,14937,15585,15594,15897,16084,16167,16246,16518,16534,16709,16797,16953,17085,17095,17259,19096,20510,20786,21289,21431,21643,21670,21906,21937,22018,22116,22159,22247,22309,22444,22561,22583,22644,22669,22894,22906,23209,23270,23379,23605,23623,23762,24592,24656],"hh184840":[24046],"map-like":[21348],"rasterize":[13925],"mavericks":[15039],"culprit":[11970],"most-up-to-date":[23609],"natfacilitatorport":[13424],"ogles2":[11573],"imitate":[11923],"myeditorscript":[6525],"'somettype":[22455],"'editoronly'":[15218],"hand-positioning":[8997],"unity_matrix_v":[20699],"summary":[1001,13817,15343,15537,15539,17909,18029],"prototyping":[14,8772,9298,11944,14874,21916],"midi":[22093],"thirty":[10797,12604],"apk":[201,237,241,12185,22289],"crisp":[182,3196,3401,5678,5700,12182],"parent's":[6780,9046,9210,22111],"colormask":[18423,19015,19123,19455,19673],"realize":[16837],"python":[6362],"compares":[9735,10587,23642],"sizes":[652,3188,3428,4106,4237,4507,4589,4678,4792,4900,5101,5166,5647,8885,9706,9733,14204,14870,15673,16090,16241,16327,16460,16512,16551,20605,21689,22580,22644,23705,23785,23863,24015],"kinematics":[356,1470,2623,7968,10290,12607,21631],"decoding":[2285,20144,20272],"10kb":[9339],"simd":[10780,12490,23895],"bokeh":[16284,16320],"sold":[10477,22949],"expecting":[23613],"mali-t760":[15688],"puppets":[12227],"instability":[4141],"splash-screen":[10966],"sizeof":[1244],"_emission":[17842,18454,18919,19355],"step":[53,203,269,470,746,1471,1602,1618,2794,5164,6378,6436,6691,6697,6701,6718,6720,6725,6744,7419,7958,8082,9187,9352,9664,9677,10432,10467,11057,11158,11417,11952,12652,12913,12932,12965,13171,13274,15084,15237,15342,16132,16183,16661,17908,20784,22006,22088,22139,22220,22618,22928,23055,23313,23403,23626,24001,24387,24422],"titles":[11868],"player-":[1488],"re-assign":[3322],"infinity":[2852,3136,5125,11076],"specialised":[3631,8306,11442,21862,21962],"bass":[12041],"image-":[16212,16433],"implying":[3798],"activates":[1641,6521,15749,21842],"polygons":[3633,3712,9248,9321,9379,9394,9441,9542,11924,12606,12885,13158,18116,18383,23359],"skipped":[8241,9683,11511,22456],"slip-based":[5767],"typing":[234,285,1577,1741,1766,3590,4875,5429,6485,8148,8934,10578,10962,11711,14349,17263,22956],"unity_iphone":[10437,12762,14373],"tiler":[12516],"climactic":[12456],"considerations":[4,3569,9202,10454,13775,15460,15488,15531,16459,17517,23890],"mem":[23766],"spawn":[3113,3711,10199,13576,15296,16310,23769],"pro-only":[4303,4510,4593],"_lightcolor0":[20196,20732],"suites":[6484],"-force-feature-level-9-2":[6573,24122],"totalcolor":[20145,20289],"shadervariantcollection":[6024,13986],"objects":[51,188,356,358,382,439,585,648,673,680,749,752,826,1063,1351,1449,1458,1797,1905,2065,2121,2136,2140,2202,2465,2670,2748,2776,2803,2848,2969,2982,2994,3028,3125,3141,3241,3490,3573,3625,3659,3686,3985,4107,4112,4139,4150,4909,4983,5121,5178,5204,5268,5332,5354,5369,5375,5389,5429,5512,5716,5767,5860,6442,6643,6742,6856,6926,6962,6979,7090,7106,7136,7158,7271,7312,7376,7463,7778,7802,7825,7901,7981,8110,8126,8240,8274,9208,9241,9301,9316,9372,9387,9399,9427,9479,9518,9546,9621,9851,10116,10293,10484,10571,10696,10810,10907,10970,10978,11046,11060,11119,11127,11152,11193,11258,11290,11349,11435,11744,11912,12201,12465,12541,12904,12931,13117,13175,13189,13292,13448,13460,13498,13564,13727,13772,13841,13900,13998,14005,14017,14019,14184,14199,14213,14220,14266,14279,14325,14609,14746,14785,14829,14867,15024,15058,15075,15219,15427,15444,15456,15484,15526,15838,15938,15975,16007,16061,16134,16272,16284,16320,16421,16622,16627,16686,16793,16987,16999,17127,17199,17203,17234,17257,17470,17640,17732,17751,18033,18077,18179,18343,18383,18622,18696,19032,19248,19382,19434,19513,19588,19758,20209,20402,20508,20748,21385,21546,21579,21605,21643,21829,21868,21897,21912,21941,21949,21962,22023,22089,22109,22276,22434,22590,22637,22677,22737,23242,23268,23298,23373,23398,23419,23588,23704,24013],"unknown":[4634,13311,21289,24140],"manipulating":[712,2665,5141,15838,16175,23099,23398],"familiar":[156,187,1324,3196,5178,7384,12640,12930,12951,14004,16042,16692,16941,20782,21578,21910,21919,23388],"machine":[352,364,392,406,595,603,606,617,625,747,836,1071,1456,1603,2017,2224,2632,3194,3501,5256,5268,5405,6402,6513,8334,9415,9535,9627,9747,10405,11390,11412,11520,12537,13274,13284,13351,13573,13729,13773,14325,17384,19390,21368,21386,21616,21624,21633,21655,21677,22304,22362,22528,22914,22944,23145,24164,24198,24308],"serializednode":[16894],"traversing":[13182,14581],"rocketclone":[10175],"stagingarea":[22298],"musical":[1315],"runtimes":[23436],"order-independent":[5310],"parsing":[5457,17312,18978],"menu-":[23778],"capacity":[13924],"denote":[7390,13451,13575,21743],"disallows":[23880],"smoothness'":[21859],"flamethrowers":[14184],"marshaling":[14735],"hand":[521,1426,1675,1845,2047,2622,2719,2804,5289,6653,7328,10304,11656,13924,14072,14184,14837,15099,15760,15847,15870,15938,17260,17940,20353,21809,22109,22251,22902],"touchscreenkeyboardtype":[11702],"mixamo":[23364],"gained":[2074,6442,13922,16167],"which":[4,52,155,166,173,181,216,227,254,290,309,323,335,360,367,391,458,484,588,606,625,629,665,684,741,752,865,1103,1111,1127,1145,1203,1343,1418,1458,1516,1533,1554,1614,1699,1734,1799,1848,2005,2009,2076,2140,2191,2224,2286,2361,2367,2466,2498,2613,2620,2633,2668,2737,2801,2822,2882,3005,3120,3143,3189,3241,3248,3299,3360,3385,3451,3487,3503,3524,3619,3686,3818,3867,3955,4006,4012,4045,4082,4106,4125,4140,4154,4303,4521,4593,4689,4765,4816,4842,4879,4933,4977,4989,5135,5183,5204,5209,5248,5279,5320,5360,5382,5395,5405,5477,5513,5712,5750,5758,5779,5801,5863,6386,6428,6442,6484,6581,6591,6625,6653,6667,6681,6700,6709,6744,6883,6926,6960,6988,6994,7090,7141,7271,7309,7389,7445,7485,7704,7759,7766,7776,7806,7913,7970,7982,8039,8090,8113,8124,8198,8375,8510,8776,8890,9018,9187,9265,9312,9373,9415,9515,9536,9566,9597,9694,9731,9867,9897,9950,9962,10060,10151,10302,10341,10414,10431,10539,10571,10587,10810,10842,10873,10911,10917,10980,11046,11057,11117,11127,11195,11223,11263,11286,11307,11345,11349,11426,11549,11602,11630,11825,11925,11944,11985,12196,12481,12525,12685,12702,12751,12799,12820,12876,12904,12941,13020,13087,13125,13158,13195,13249,13263,13276,13287,13328,13429,13448,13462,13567,13576,13709,13727,13771,13816,13822,13843,13900,13989,14036,14045,14069,14102,14147,14162,14198,14211,14244,14250,14254,14304,14317,14334,14407,14466,14495,14525,14730,14782,14801,14876,14902,15001,15009,15041,15075,15092,15137,15196,15241,15342,15404,15440,15455,15483,15516,15553,15565,15585,15596,15617,15760,15811,15877,15905,15931,15954,15988,16068,16126,16136,16196,16246,16278,16284,16319,16367,16391,16406,16453,16498,16526,16556,16578,16646,16668,16682,16700,16794,16949,17000,17095,17182,17195,17201,17207,17327,17430,17444,17448,17452,17458,17462,17469,17498,17502,17506,17510,17514,17539,17543,17548,17556,17562,17566,17608,17612,17617,17622,17626,17630,17634,17638,17667,17671,17675,17679,17683,17687,17691,17696,17700,17705,17709,17714,17718,17722,17726,17731,17750,17777,17782,17800,17931,18041,18075,18161,18320,18388,18597,18618,18666,18880,18949,19045,19207,19233,19377,19471,19564,19738,19758,20019,20395,20462,20727,20822,21356,21372,21401,21420,21543,21573,21588,21631,21636,21644,21664,21672,21689,21772,21810,21839,21847,21856,21902,21919,21988,22006,22089,22097,22105,22143,22195,22224,22244,22296,22355,22396,22548,22554,22571,22659,22669,22684,22710,22718,22740,22895,22954,23156,23209,23270,23299,23360,23377,23393,23401,23446,23613,23623,23693,23764,23796,23814,23874,23894,23980,24016,24050,24128,24197,24219,24237,24282,24327,24345,24361,24382,24391,24516,24529,24538,24588,24603,24605,24642,24651,24675],"setparent":[9681],"loop":[329,451,470,2163,2286,2569,3773,4086,6898,7309,7776,8885,10848,11344,12367,13206,13448,13761,15612,17211,22760,24014,24070],"discreet":[5134],"csv":[5449],"finicky":[12456],"flow":[406,1165,2979,13203,16974,17116,21640],"stretches":[9158],"porting":[9592,11944,15677,24239],"openid":[6700],"avoiding":[3841,5206,7330,13163],"deactivation":[7090],"gl_angle_framebuffer_blit":[1505],"intimately":[12298],"evnt":[11687],"translate":[2108,3098,3719,4395,4522,7190,7781,9863,11668,14747,15856,22001,22106,22349],"oneminussrcalpha":[18134,18220,18469],"200k":[13953],"fences":[11175,11438,17732,22278],"adjust":[554,694,1695,1783,2694,2788,3039,3806,4049,4150,4846,5168,5761,6437,9054,9183,10161,10905,11423,11757,12446,12685,12802,12909,12967,13093,14749,14829,14854,15350,15600,15935,16136,16351,17516,20424,21936,22123,22140,22201,22221,22594,23296,23377,23636],"rangedrawer":[7707],"cached":[828,1334,2011,5259,7222,10556,10977,11833,15152,16986,17126,21436],"other_define":[6637],"myvalue":[8076,23442],"bitbucket":[6697,6702,6707,6719,6721,6725,6730,6740],"name-mangling":[14719],"divide":[1324,3209,5396,12368,21543],"slider's":[16949],"perforce":[893,7941,14308,21277,23619,23621],"twig":[22244],"meters":[1343,2806,4142,5167,9859,11665,20556],"found":[6,89,197,208,227,246,274,606,1292,1490,1543,1607,2021,2224,2430,2702,3003,3636,4174,4494,4569,4660,4750,4780,5627,5666,5691,6452,6988,7084,7160,7776,9189,9568,9625,9947,10422,11169,11296,11334,11569,12180,12698,13149,13426,13440,13565,13659,13802,13877,14612,14705,14740,14923,15082,15108,15251,15400,15600,15812,15858,17196,17347,17822,18254,18485,18547,19453,19520,21556,21759,21979,22281,22398,22551,22655,22864,23192,23305,23889,24158,24603],"color":[642,2131,2669,3017,3150,3229,3298,3338,3412,3441,3539,3559,3602,3802,4030,4201,4502,4584,4689,4765,5019,5319,5390,5484,5500,5523,5680,5702,5737,6742,6871,6995,7386,8193,8339,8816,8939,9213,9386,9396,9407,9435,9484,9525,9554,9679,9868,9909,10042,10773,11094,11126,11211,11224,11454,11923,12048,12310,12478,13576,13813,14040,14048,14072,14103,14177,14259,14290,14306,14798,14848,14888,15467,15493,15525,15944,15980,16080,16133,16187,16207,16246,16291,16356,16379,16412,16429,16499,16526,16591,16606,16618,16641,16760,16937,17006,17042,17092,17159,17496,17537,17828,17964,18057,18152,18183,18264,18315,18415,18609,18659,18861,19012,19055,19086,19138,19184,19243,19270,19388,19433,19710,19793,20133,20207,20356,20471,20732,20810,21083,21344,21401,21420,21589,21611,21706,21836,21858,21901,21921,22106,22721,22738,23378,23530,23702,24404],"struggling":[9966],"drive's":[2884],"m_subsetindices":[24898],"association":[1283,24106],"targets":[4263,4547,4647,4704,4800,4824,8087,9323,9508,9530,10336,10576,11148,11243,12408,13613,14896,15335,15487,18161,19478,21670,22418,22920,23770,24215,24364],"synchronisation":[13628],"ddr2":[10691],"enables":[462,1205,1614,1786,2691,2838,2967,3131,3474,4145,4443,4602,4713,4941,5605,7994,8125,9924,9947,11402,13352,13771,14660,15104,15211,15583,16154,16313,16319,16367,16578,16720,17095,17899,21619,21650,21831,21899,21914,21988,22954,23724,23980,24095,24399,24581],"cascade":[7155],"voxelsize":[12811,12934],"begintogglegroup":[7526],"instead":[45,236,248,283,364,527,658,772,1288,1437,1760,2804,2876,2969,2982,3198,3267,3334,3381,3408,3529,3645,3796,4441,4711,4814,4900,4916,5243,5486,6414,6707,7090,7279,7309,7776,7970,8012,8205,8301,8996,9206,9410,9545,9728,10014,10247,10539,10579,10770,10956,11089,11175,11205,11473,11518,11614,11726,11753,11896,11960,11992,12212,12453,12578,12633,13289,13439,13565,13729,13901,14191,14373,14479,14580,14689,14798,15087,15233,15332,15453,15575,15584,15615,15850,15874,16007,16021,16060,16126,16172,16188,16223,16313,16441,16457,16838,17915,18056,18140,18185,18311,18715,18860,19088,19179,19256,19437,20043,20185,20437,20506,20845,21429,21556,21607,21669,21859,22397,22602,22641,23002,23202,23638,23865,23899,23990,24044,24130,24237,24280,24319,24573,24601,24605,24651],"sort":[2003,4098,5310,5652,10417,12039,12347,12611,14198,19775,23401],"shouldn't":[1577,3542,5141,5874,9728,10928,11551,11939,13844,15584,22283,22366],"glsl_no_auto_normalization":[19484],"exposed":[193,1187,1339,2774,7804,10437,11239,14047,14545,14911,17821,21790,21981,23418,23889,24642],"wetdrymix":[2407],"wakeup":[15588],"accomplish":[988,3241,6591,8338,15297,22454],"adaptor":[6547],"0x5d10cb0":[22409],"pcm":[1111,2286,22093],"grading":[16137,16188],"bigger":[1843,2282,3615,5060,7449,7970,9715,9734,11152,12408,12589,12940,16036,16095,16295,16374,17093,17171,23782,23895,24528],"icons":[1438,2288,4193,8124,10040,15099,16495,16637,21683,22246,23658,23726],"android":[139,192,195,199,218,242,258,264,280,287,1069,1602,2286,2467,2606,3054,3807,4272,4493,4573,5664,6502,7223,9956,10007,10782,11186,11333,11557,11582,11614,11729,11733,11913,11947,12182,12521,12637,14374,14464,14498,14810,14896,14975,15371,15437,15541,18329,18613,19446,21662,22275,22280,22487,23134,23266,24601],"occludees":[13848],"pointers":[10416,13778],"former":[6592],"refracting":[3532],"shift-drag":[3047,4855],"studio":[3,297,585,4458,4716,5304,8096,9479,12748,13433,14495,17239,18554,19482,22267,23313,23735,24130,24163,24188,24214,24304,24311,24328,24361,24374,24534,24553,24570,24593,24601,24642,24652,24671,24706],"ask":[205,707,1018,6665,9743,15230,17374,21280,21615,22427,23083,23757,24432],"futdir":[13054],"baking":[175,663,3837,4794,4989,8164,9545,10449,11903,11961,12792,12812,12880,12904,12930,13151,13855,14944,15604,21570],"figs":[9328],"fire2":[6810],"cocoa":[14676,22489],"left-most":[3414,8401],"sharper":[5544,15915,21606],"agentheight":[24788],"secondly":[11232,12959],"appearing":[14037,14306,23902,24410],"texture3d":[5502,5955],"two-piece":[5791],"unhandledexception":[4603],"tilesize":[24793],"chugging":[14072],"colocated":[836],"controller":[315,346,359,367,392,406,465,601,604,609,624,696,1472,1876,2139,2156,2191,2222,2595,2620,2633,2788,2789,5406,6424,6614,9560,9696,9743,10029,10302,10853,11483,11504,12687,12952,13275,15219,15566,15721,15935,16241,16550,16762,16963,17215,21388,21622,22554,22579,22681],"_lod1":[11124],"_displacement":[20470],"accelerationevents":[11687],"'static'":[14543],"arithmetic":[19489,22873],"pure":[11527,18892],"outgoing":[6727,7365,13311,13756,23776],"asks":[16792],"propedit":[7960],"resimulate":[4107],"across":[182,219,1180,1428,1742,2017,2296,3082,3209,3246,3649,3700,3900,4084,4602,7154,7852,9093,9240,11198,12681,12876,12928,13174,13303,13457,13563,13614,13712,13732,13772,14917,16165,16260,16517,21546,21576,21594,21809],"client":[746,841,2062,4193,6702,7952,13284,13327,13439,13453,13457,13568,13575,13712,13727,13766,14315,14334,14742,15137,17347,17384,23626,24302],"tons":[1315,11955,12035,12283,12570],"command-e":[9223],"androidjni":[14542],"theoretical":[11169],"gl_qcom_tiled_rendering":[1504],"funds":[980],"-60db":[2311],"clear":[2131,2668,5018,5327,6679,8085,13867,13989,14786,16891,18194,19591,22479],"take":[174,316,352,465,666,908,1091,1171,1211,1353,1602,1667,1762,1843,2009,2160,2299,2549,2617,2634,2856,3269,3802,3839,4231,5003,5243,5275,5405,5649,6719,6962,7122,7329,7531,7675,8374,9224,9256,9346,9422,9539,9617,9714,9727,9743,10028,10198,10872,10951,11117,11202,11239,11411,11499,11603,11790,11939,11988,12194,12801,12883,12930,13141,13149,13164,13263,13273,13315,13445,13974,14266,14334,14550,14751,14885,14957,15060,15343,15935,15952,15986,16052,16200,16211,16431,16737,17375,18030,18163,18254,18694,19276,19457,19514,20019,20354,20748,21343,21439,21610,21984,21993,22198,22488,22598,22833,22969,22989,23254,23358,23409,23774,23863,23978,24015,24046,24389],"audible":[1421,2286,2421,2465],"numbering":[3203,11124],"headlights":[3571,11133,13924,23379],"articulate":[1471],"treeopaque":[19532],"csidl_local_appdata":[11314],"off-mesh":[3835,4011,12787,12812,12880,12925,13130,13181,13266,13269,13271,21651],"biped":[1632,14835],"loading":[28,749,763,1492,1617,1954,3254,3802,4292,4504,4586,5649,6991,7278,8075,8265,9263,10978,11258,11285,11351,11580,11855,12590,12786,13454,13465,13746,13974,15010,15199,16796,19390,22443,23790,24001,24070,24404],"icon_32x32":[9633],"activeobject":[42,1832,10492],"studio's":[23755,24207],"high-poly":[11877],"abref":[11002],"chaining":[1389],"minimize":[10942,10968,11932,12345,13968],"impossible":[11826,12342,12518,21987,24382],"occasions":[9111],"pvrt":[12182],"elegant":[22817],"'activating":[13882],"isspheremoving":[24684],"manipulated":[658,2156,5128,8769,12897,22103,22637],"credits":[1004],"linear":[391,585,629,1153,1757,2236,2494,2581,2645,2875,2983,3017,4117,4140,4203,4689,4765,4840,5181,5611,6645,7372,11221,11643,13175,15588,16170,18315,18604,18665,19142,20097,20763,20926,24022],"octopus":[587],"startactivityindicator":[11555],"irrespective":[2712],"books":[6945,12653,13294],"forum":[991,9651,15711,15804,18031,24234],"allow-access-from":[17314],"side2":[6652],"transfer":[977,1011,1247,1543,4461,4719,10505,12984,13315,13464],"licensing":[6713,6740,11399,11407,22944],"eventsystem":[7801,9784,10028,15335,16391,21752],"target_10_1_0_1020":[1566],"mercurial":[6702,6710,6730,21307],"collector":[10828,12207,12541,14603,15009,16798,22743],"deletion":[902,23667],"kernels":[6625],"buildflashpolicy":[17324],"visualisation":[7921,23726],"maintained":[1068,2072,5166,5424,5646,6452,6719,9020,9962],"warosu":[11585],"initialunityproject":[7948],"levelprefix":[13495],"baked":[2167,3587,4072,4987,8165,9408,9440,9545,11138,11200,11888,11960,11992,12608,13087,13188,13264,14945,15479,15596,16793,21555,23712],"defaulttexture":[19144],"debug-":[18565],"touchphase":[11634],"myvert":[20076],"wings":[5730,14278],"judgement":[9260],"cave":[1375,1458,2130,6405,6439],"audiomixers":[1336,1393],"archives":[237,10916],"turns":[532,2630,2801,6659,14191,15841,16136,17899,17939,18859,19008,19408,19474,19748,23716,24001],"capabilities":[1467,3893,4461,4719,8305,9922,10024,13366,14004,15692,15716,15923,16088,16186,16281,16317,16354,16389,16418,16671,16690,17022,17060,17821,18306,19391,20822,23889,24301,24539,24594],"read":[6,54,277,362,464,750,841,1283,1551,2723,2756,2823,3234,3271,3334,3381,3408,3580,3981,4460,4718,4901,5456,5602,6620,6740,6961,6977,6981,7994,8114,8253,8737,8817,9175,9213,9291,9422,9440,9539,9667,9983,10032,10105,10407,10774,10972,11249,11441,11945,12204,12504,13564,13710,13733,13769,13951,15209,15470,16197,16889,17079,17323,17442,17514,17817,17915,18053,18334,18394,19220,19589,20782,21344,21847,21982,21988,22006,22127,22335,22944,23082,23260,23268,24010,24046,24110,24208,24375],"utilised":[23131],"synced":[6391,11481],"cursormode":[15751],"surrounding":[184,2625,5282,10165,12284,12797,13923,14066,14109,15938,15975,16007,20185,23379],"cube":[182,693,1799,2991,3741,5153,5322,5660,7276,8052,9239,9877,9916,10122,13119,14010,14751,14829,14868,15329,17552,18383,18574,18723,19145,19188,19928,24713],"unity":[1,31,158,170,185,194,198,205,219,259,265,280,294,314,318,358,381,442,464,585,605,625,656,680,737,739,741,752,821,832,931,965,1047,1089,1103,1106,1108,1125,1147,1197,1352,1396,1456,1469,1488,1537,1551,1562,1597,1612,1618,1633,1694,1795,1848,1976,2005,2008,2076,2118,2121,2154,2156,2214,2223,2272,2426,2597,2617,2696,2748,2998,3053,3185,3241,3249,3381,3408,3533,3553,3621,3629,3633,3676,3683,3798,3890,3892,4006,4145,4168,4562,4602,4674,4797,4854,4932,4999,5096,5167,5205,5215,5268,5361,5396,5431,5440,5498,5500,5513,5714,5764,5834,6353,6404,6484,6584,6599,6618,6623,6677,6692,6702,6708,6719,6721,6736,6742,6804,6856,6876,6926,6940,6976,6991,7091,7117,7309,7337,7382,7445,7487,7761,7765,7776,7816,7825,7894,7939,7940,7968,7980,8075,8110,8161,8269,8276,8307,8338,8341,8772,8888,9181,9189,9210,9213,9233,9305,9312,9346,9357,9365,9373,9388,9400,9431,9480,9519,9547,9559,9568,9597,9643,9719,9871,9889,9923,9945,9959,10020,10024,10032,10058,10160,10341,10404,10438,10473,10482,10558,10780,10782,10848,10854,10903,10913,10954,10970,10974,11046,11117,11120,11126,11141,11148,11217,11230,11263,11287,11311,11354,11389,11406,11423,11474,11545,11580,11641,11694,11729,11744,11868,11891,11967,11978,12204,12490,12600,12612,12640,12655,12700,12751,12884,12905,12950,13153,13157,13185,13262,13285,13330,13427,13568,13702,13726,13769,13781,13842,13875,13913,13979,13996,14004,14013,14186,14280,14315,14323,14325,14334,14358,14464,14494,14506,14694,14723,14770,14782,14792,14827,14868,14882,14956,15043,15080,15113,15139,15196,15345,15404,15453,15487,15555,15617,15636,15677,15810,15838,15869,15973,15999,16019,16029,16040,16208,16254,16270,16319,16363,16404,16437,16600,16613,16645,16656,16687,16789,16791,17015,17040,17092,17143,17175,17185,17187,17199,17201,17235,17237,17257,17265,17384,17444,17448,17452,17458,17462,17469,17498,17502,17506,17510,17514,17539,17543,17548,17556,17562,17566,17608,17612,17617,17622,17626,17630,17634,17638,17667,17671,17675,17679,17683,17687,17691,17696,17700,17705,17709,17714,17718,17722,17726,17731,17750,17777,17782,17786,17793,17820,17915,18037,18141,18241,18286,18361,18485,18496,18555,18605,18678,18681,18712,18890,18936,19032,19045,19065,19149,19202,19230,19279,19376,19422,19458,19522,19732,19755,20134,20273,20353,20692,20780,21221,21275,21352,21372,21398,21413,21543,21573,21625,21644,21655,21665,21689,21796,21847,21859,21912,21957,21961,21981,21984,22020,22095,22103,22191,22258,22285,22320,22383,22524,22712,22714,22761,22870,22874,22905,22942,22977,23005,23081,23130,23133,23169,23207,23272,23298,23364,23373,23381,23398,23401,23446,23600,23609,23619,23620,23726,23743,23760,23795,23814,23875,23894,23900,23978,23987,24014,24024,24132,24180,24189,24215,24239,24274,24304,24311,24324,24343,24361,24377,24391,24514,24527,24556,24580,24583,24593,24603,24608,24651,24669,24671,24674,24716],"once":[53,314,422,440,450,466,637,666,709,749,984,995,1021,1166,1290,1355,1396,1535,1557,1609,1613,1618,1633,1692,1762,2018,2689,2887,3087,3503,3590,3705,3776,3849,4107,4902,4999,6666,6683,6693,6703,6750,6860,6958,6976,6981,7090,7133,7313,7344,7398,7776,7892,7898,8091,8996,9180,9537,9651,9706,9726,9978,10049,10054,10101,10161,10434,10505,10596,10840,11139,11155,11212,11261,11342,11346,11400,11414,11424,11477,11535,12282,12454,12542,12652,12684,13087,13171,13267,13284,13501,13761,13880,13916,13990,14107,14172,14339,14467,14506,14694,14749,14872,15018,15110,15137,15230,15296,15462,15490,15588,15613,16556,16687,17076,17260,17520,18035,18684,18696,18980,19240,19434,19707,19738,20209,20748,21342,21356,21414,21907,21952,21973,22024,22541,22638,22735,22879,22913,23312,23416,23450,23597,23625,23724,23887,24021,24431,24571,24656],"alterations":[10022,10136,22196],"cons":[11824],"translated":[5142,21679,23894],"paint":[1659,9571,11454,21841,21897,21919,21940],"ppi":[10599],"nre":[13781],"kgfxrendererd3d11":[12714],"tracking":[1798,8245,11613,13772,21560,22544,24019],"graph":[353,601,692,1351,2501,2579,2639,7393,11454,12884,14287,15095,16158,16822,21618],"options-":[22307],"0_arm_test":[24197],"window":[51,155,279,294,351,398,408,610,693,823,862,997,1126,1139,1334,1391,1558,1603,1686,1695,1800,1848,2030,2132,2225,2287,2637,2768,3202,3280,3522,4107,4228,4672,4863,5025,5415,6517,6677,6812,6856,6974,7082,7121,7380,7466,8084,8120,8184,8718,9268,9307,9365,9885,10053,10302,10431,10839,10916,11117,11309,11400,11409,11494,12649,12905,12931,12964,13149,13275,13816,13849,13879,13894,14281,14335,14406,14957,15060,15078,15079,15101,15190,15342,15439,15640,16174,16755,16792,18557,20809,21375,21400,21418,21622,21635,21714,21832,21900,21915,22446,22556,22919,23028,23153,23350,23651,23774,23796,23823,23993,24032,24145,24181,24205,24229,24306,24361,24534,24581,24671],"macbook":[9651],"strategy":[3302,11601,22833],"bracketed":[12695],"films":[2118,4923],"purpose":[487,3226,3430,5149,5204,5521,9719,10029,12030,13153,14013,17045,17187,19540,21398,22370,23732,24645],"loop_socketserver":[6373],"obstructed":[2140,14035],"analog":[3522,6825,10873,15735],"rollback":[839],"dy":[13003],"colorfunction":[20417],"expired":[913],"bestmethod":[24429],"#008000ff":[21724],"lingering":[14609],"scattered":[13180,18040],"_myfloat":[19186],"inherent":[14017,21571],"recap":[17916],"photographs":[9268],"sliderjoint2d":[6049],"accumulation":[15611],"contacted":[5196],"iconutil":[9642],"present":[586,963,1144,1341,1422,1471,1606,1613,3092,3199,3649,3684,3713,3909,4072,4459,4717,5417,6543,6931,7400,8029,8997,9184,10484,11527,13190,13341,13630,14475,14789,15013,15339,15551,16735,17375,18375,19241,19439,20822,21342,21607,22195,22374,22485,24134,24393,24530],"permitted-cross-domain-policies":[17295],"minimal":[1312,5198,5244,6495,6625,7825,9747,10456,11172,21920,22338,22833,23446],"exc":[22409],"floor":[2138,2634,2655,3771,5111,5538,9863,13263,14191,14830,14917,15588,23377],"intervention":[53,6495],"heavy":[3843,5173,6464,6710,10450,10849,11792,12504,14098,21927,22023,24282],"streamingassets":[134,3797,21367,21656],"fmod":[2282,14998,15049,20899],"pose":[343,481,1656,2151,2164,6669,11344,12454,15596,17211],"isolation":[5560,6763],"wherever":[2005,2776,6986,12695,15217,16356,19591,23600],"mediate":[13309],"lightingtonemapped":[20319],"m_open":[9760],"creases":[16658,16673],"decodefloatrg":[18274],"copies":[3806,5205,6981,11339,12301,14781],"reminiscent":[21846],"non-thumb":[22427],"programming":[387,606,625,2224,5456,6941,7778,17821,17942,19443,22981,23103,23607,23894],"panorama":[3001],"transactions":[1011],"barrels":[3867,13117,13177],"tortoisesvn":[890],"placeholder":[588,9934,14870,22838,24280],"spawnpoints":[15299],"administrate":[842],"draw":[290,1297,2668,3567,3592,7307,7587,7917,8082,8272,8727,9056,9303,9869,10801,11786,12518,13842,13904,15443,16687,17454,17524,18383,18702,19541,19779,20958,21360,21854,22255,22667,23692],"transformations":[3772,5107,5395,5534,10780,13921,16932,17939,19280,20693],"version":[61,219,276,833,994,1049,1286,1497,1556,1602,1786,1919,2014,3057,3649,3806,4317,4521,4615,6495,6692,6740,7251,7759,7940,7993,8199,8336,9332,9373,9414,9429,9496,9536,9547,9559,10103,10199,10412,10430,10473,10684,10923,10990,11816,12030,12322,13293,13330,13441,13877,14000,14311,14330,14384,14543,14689,15104,15211,15450,15477,15511,15938,16224,16246,16283,16319,16365,16429,16580,17272,17402,17464,17813,18904,19218,20807,21275,21427,21667,21925,21957,22283,22322,22427,22914,22950,23037,23134,23242,23436,23464,23609,23618,23620,23808,23978,24162,24209,24237,24277,24353,24391,24605],"#":[2319,9243,10791,21420],"common":[153,394,588,603,844,988,1057,1108,1142,1417,1517,1781,2064,2078,2131,2630,3001,3806,4021,4317,4521,4615,5198,5344,5522,5694,5876,6464,6683,6744,6926,7106,7399,7776,7818,7908,8338,8738,9593,9717,9741,9934,10030,10110,10439,10460,10575,11344,11349,11745,11925,12034,12225,12652,12877,12926,13110,13141,13153,13160,13273,13287,13575,13889,14013,14054,14870,15026,15052,15239,15838,15938,16060,16175,16260,16272,16283,16319,16563,16742,17088,17196,18224,19036,19091,19149,19432,19735,20067,21289,21613,21927,21961,21984,22095,22258,22384,22558,22655,22679,22683,22737,22891,23377,23401,23619,23792,23881,24139,24538],"idv":[21924],"health":[21836],"portray":[14017],"msaa-resolve":[10803],"exportassetpath2":[6509],"interacted":[9688,24708],"onscenegui":[7451],"noticeably":[22436],"repetitive":[20353],"'overlaps'":[16079],"paragraph":[880,17036],"driving":[1460,5396,9597,12680,13924],"flop":[12199],"restore":[882,1604,3028,7084,8335,17413,22256,22364,23168,23214,23984],"surfacefunction":[20393],"tried":[6740],"compass":[9616,10595,23143],"unity_xboxone":[14378],"enjoy":[18031],"comparing":[886,3159,3566,10810,12394,14870,19548,22436],"gradually":[2294,2372,2549,5062,5737,6742,6868,7389,12229,13292,14155,14306,14891,16256,16514,17464,20556,21994],"scriptable":[4008,16837,17201],"decompression":[2282,2604,23790],"multitouch":[17110],"ddr":[10681],"textasset":[75,1618,5462,5909,15139,17248],"spinning":[393,693,2974,3464],"endarea":[9099,13493],"general":[177,1047,1159,2294,2711,3425,4174,4494,4569,4660,4750,4780,4985,5115,5522,5666,5691,5730,5836,5867,6443,6582,7387,7986,8306,9224,9291,9536,10435,10798,11212,11472,11528,11763,11870,11963,11976,12460,12546,12781,13282,13719,13730,13770,14105,14281,14793,14842,15101,15137,16326,16587,17527,17916,18040,19436,19540,20165,21617,21935,21951,22193,22242,22320,22524,23774,23893],"maximum":[1230,1736,1763,1783,2006,2044,2320,2459,2492,2509,2875,2977,3035,3073,3470,3496,3586,3691,3826,4117,4259,4536,4618,4699,4792,4939,5276,5339,5629,5711,5773,5815,8633,9183,9623,9937,10797,10906,11122,11148,11578,12331,12967,13360,14182,14544,14846,15241,15869,15969,16001,16067,16266,16349,16525,16665,16678,16973,17017,17056,18040,18344,18400,20556,21420,21856,21910,22022,22232,22695],"appx":[24188,24370,24538],"decorations":[3407,6979],"noticed":[3617,11119,11154,12916,14098],"programfiles":[923,17410],"x11":[6712],"mechanisms":[24539],"-force-opengl":[6512],"thinner":[18047],"uv1":[7319,16631],"downsampling":[1280,16668,16682],"quiet":[329,2308],"gpgpu":[6622],"--port":[2039],"five":[1742,10107,11613,11948,14071,15297,22085,23609],"hard-edged":[21842],"resort":[6543,22933],"intrusion":[22831],"task":[917,2604,2630,3026,6868,7776,9924,10292,10870,13746,13772,14878,15051,15296,19230,21929,21994,22362,22549],"confusion":[16349,18104],"colliding":[3841,4116,4139,5159,5861,6466,11388,13175,14038,21868],"unity_custom_some_tag":[23465],"discovering":[13773],"powervr-sdk-docs":[11810],"walkable":[4012,12788,12800,12892,12904,13131,13148,13156,13264],"connection_type":[10856],"slowest":[13947],"ramp":[2655,14108,14252,14259,16207,16426,20228],"blindfold":[12194],"animatorstate":[6104],"reconnecting":[23168],"structuring":[13287,24001],"club":[2426],"'level":[24006],"destinationfile":[21334],"jelly":[276],"mhz":[10590],"defval":[1295],"prepared":[4173,10502,10810],"__internal":[12764,14712,22507,23845],"list":[75,461,628,683,872,1049,1087,1109,1133,1284,1334,1393,1607,1613,1736,1766,1786,1850,2146,2466,2485,3195,3252,3596,3753,3814,4071,4234,4739,5274,5413,5429,5654,7776,8085,8272,8338,9175,9509,9565,9846,9976,10048,10431,10442,10575,10587,10856,11172,11360,11429,12194,12581,12628,12645,13175,13185,13327,13440,13458,13748,13843,13988,14023,14315,14353,14858,14985,15066,15098,15190,15279,15649,15817,15923,16088,16186,16281,16317,16354,16389,16418,16671,16690,16793,17022,17060,17203,17284,17396,17865,18983,19125,19385,19732,20809,21104,21352,21375,21463,21684,21710,22389,22914,23393,23729,24173,24413],"developper":[24199],"out":[185,223,329,343,401,490,589,693,879,952,997,1079,1198,1460,1603,1651,1905,2078,2141,2152,2245,2261,2285,2386,2394,2401,2419,2439,2447,2456,2547,2559,2710,2737,2768,2801,2997,3154,3209,3244,3611,3636,3762,4037,4100,4353,4538,4635,4713,4963,5289,5612,5737,5790,5864,6390,6659,6693,6723,6913,7151,7158,7354,7774,7790,7818,7955,8190,8336,9113,9198,9651,9737,9871,10027,10112,10301,10444,10539,10565,10696,11003,11108,11129,11169,11226,11350,11578,11720,11840,11904,11947,11976,12196,12456,12544,12652,12819,12981,13149,13166,13237,13292,13421,13449,13466,13565,13699,13727,13763,13791,13846,13896,13980,14054,14066,14106,14279,14306,14331,14441,15043,15087,15137,15335,15342,15588,15673,15932,15969,16001,16027,16195,16243,16260,16284,16320,16392,16454,16485,16546,16658,16673,16792,17017,17069,17095,17149,17257,17348,17423,17528,17817,18033,18141,18412,18880,19073,19222,19434,19588,20019,20160,20185,20357,20784,21362,21409,21790,21844,21973,22023,22140,22221,22332,22394,22740,22874,23234,23295,23317,23376,23412,23630,23742,23780,23881,24001,24107,24370,24579,24589,24629],"processor":[3188,4451,4658,5190,6442,7124,10456,10591,14036,14733,15588,23249],"projected":[3578,4912,6860,11158,18324,20847],"sampler":[6644,16075,18341],"awaiting":[958,1037],"modified":[658,685,2008,2203,2361,2367,2547,2586,3365,6693,7279,8128,9612,9666,10029,10033,10373,11241,11770,13331,13439,14332,14790,14920,15477,15511,16170,16216,16437,17331,17402,21933,22097,22817,23670],"onpointerenter":[21754],"compete":[11923],"tell":[933,1458,2020,3371,3778,7704,7942,12518,12969,13183,13249,13291,13351,13565,13739,13777,14407,16869,18142,19040,19750,21383,23881,24138],"seem":[182,1845,3612,5173,5500,10448,11985,13822,14100,16796,21994,22444,22744,22904],"gamepadmode":[15789],"queue":[958,1037,2689,11175,11294,18236,18418,18703,19594,19757,22278,24243],"falls":[603,2122,6824,11126,11408,14259,14325,22871],"intersections":[4127,4144,4966],"lookatpointeditor":[7438],"stage":[699,960,1039,7766,8163,10766,10872,12227,12797,13170,13285,14072,14107,15018,18142,18215,19284,23322],"core":[294,833,1966,3113,3815,4465,4723,5256,6977,10925,12451,14100,14381,16791,17201,20847,24052,24288,24326,24364,24523],"m_isactive":[8057,24815],"massive":[9256,11877,12030],"'device":[1608],"onpostprocessmodel":[23247],"simplest":[2131,5614,6442,6744,7825,10449,11198,11769,14703,17234,18035,18080,19394,21374,22593,24264,24671],"premerge":[21279],"smallest":[2156,4958,12347,13860,13945,14252,17104,20824],"decelerate":[4053],"editor":[34,170,263,279,294,314,318,632,745,752,848,931,1094,1103,1205,1398,1488,1543,1595,1603,1613,1701,1794,1848,1968,2020,2475,3049,3662,4107,4204,4727,4896,4932,4989,5204,5247,5764,6354,6412,6429,6488,6665,6681,6742,6832,6858,6931,6951,7083,7120,7277,7330,7339,7396,7419,7464,7539,7758,7760,7762,7765,7845,7895,7938,7942,8118,8170,9179,9457,9888,9946,9999,10049,10056,10064,10150,10485,10575,10878,10960,11117,11199,11244,11290,11305,11398,11407,11435,11579,11792,11978,12292,12495,12640,13249,13274,13569,13761,13877,13989,14004,14281,14359,14467,14510,14689,14714,14792,14848,14900,14957,15066,15081,15139,15189,15342,15443,15596,15616,15699,16512,16692,16793,17004,17024,17192,17199,17237,17239,17265,17943,18496,18555,19385,20809,21277,21352,21397,21417,21565,21643,21746,21843,21940,21958,21965,21988,22085,22104,22243,22267,22319,22383,22632,22727,22906,22989,23091,23131,23134,23233,23279,23306,23452,23615,23628,23750,23776,24002,24181,24189,24274,24308,24327,24601,24653,24669,24673],"extremely":[2293,2868,3584,3892,3997,5456,11951,13769],"disconnecting":[22548],"cgprogram":[5949,12106,17947,18242,18512,18584,18628,18726,19379,19462,19601,19797,20174,20389,20476,20795,21088],"snippet":[5501,7014,17948,18684,18936,19463],"garbagecollected":[15047],"re-skinned":[3317],"canvasgroup":[6040],"categories":[156,1355,1403,11435,14550,17522,17685],"spending":[6590],"drab":[11923],"guis":[1287,3263,5486,8996,9180],"dihedral":[16284],"joystickbutton9":[1481],"pickers":[21569,21586],"afterwards":[9187,9422,11298,14480,22428,22621,22918],"cache":[72,2007,5261,7222,7943,8266,9770,10352,10538,10767,12369,12578,14566,14820,14938,16299,16981,17121,21438],"fully-":[17751],"fired":[10113,12454,13291],"enlarging":[16512],"taxing":[12282],"disconnect":[22326],"formatting":[3395,6716,23426],"non-interactable":[2769],"m_skylightintensity":[24765],"all-white":[3661,19808],"horizontally":[1416,3362,7359,9113,9897,16106,16178,16223,16441,16464,16712,16716,16751,22234,22661,22704],"latlong":[3001],"translator":[18329],"solving":[4117,9593],"subdivide":[8224,22249],"gzip":[23790],"textcolor":[6997,24406],"tweak":[1355,1431,2253,2269,2294,2426,2459,6976,6981,9701,9899,9993,10167,11424,11793,12182,12684,15580,15979,16329,17835,19436,21859,21926,22197,23605,23988],"strategies":[13889,22831],"expense":[2276,4545,4644,4702,4776,4932,5663,10848,10905,12446,16065],"in-built":[1160],"networked":[3877,3892,6548,6601,13300,13567,13729,13772],"acting":[5159,13284,21564,21846,22879],"social":[13632,24234],"raise":[603,21842,21940],"16x16":[11803],"joystickbutton5":[1486],"exhaustrate":[14083],"mirrored":[1615,1786],"permanence":[12617],"compoundcontrols":[8917],"8-bit":[17092,24416],"metering":[1154],"technicalities":[11976],"completely":[52,219,490,663,878,1179,2008,2130,2293,2632,2706,2895,3039,3066,3592,4004,4846,5005,5616,5788,6672,6866,6868,6990,7911,7943,8099,9098,9571,9848,9872,10166,10404,10451,11202,11263,11287,11482,11747,11925,12570,12733,13068,13276,13839,13945,14102,14535,14786,15073,16514,16692,17275,17398,17939,18078,18860,19256,19434,20067,22026,22274,22661,22831,23135,23242,24387,24441],"pixels'":[16260],"timestep":[5710,5798,10905,12446,22019],"look-at":[7451,13085,14767],"smoke4":[14070],"acid":[1324,14891],"short":[490,828,1110,1290,1465,2276,2386,2394,2401,2419,2439,2447,2456,3778,6856,6932,8075,9233,9422,9988,10021,13157,13264,14067,14103,14184,16661,16709,17046,17262,17859,21807,22250,22741,23464,23634,24013],"sv_dispatchthreadid":[6631],"2-tone":[11454],"been":[170,377,440,617,684,741,879,958,984,1037,1166,1547,1596,1609,1613,1637,1849,2044,2669,3776,3870,4059,4113,4138,5728,5876,6452,6508,6664,6686,6719,6761,6856,7091,7765,7786,7925,8023,8226,8738,8775,9164,9177,9179,9189,9233,9425,9702,9726,9983,10075,10321,10404,10707,10856,10974,11121,11174,11200,11212,11401,11417,11424,11861,11893,12378,12684,12837,13068,13171,13284,13510,13630,13715,13880,14332,14512,14786,15009,15562,15588,16201,16367,16420,16556,16762,17189,17209,17347,17396,18057,18180,19255,19922,21409,21560,22092,22339,22716,22740,22953,22996,23135,23209,23438,23464,23646,23981,24014,24427,24558],"unitysetgraphicsdevice":[12702],"lfo":[2252,2268],"requires":[219,841,1459,1533,2191,3663,3767,4132,4148,4200,4623,4688,4764,4961,5169,5400,6356,7121,7941,7994,8039,8886,9197,9559,9896,10451,10558,10597,10940,11205,11211,11464,11542,11978,12593,12887,13149,13285,14842,14933,15408,15459,15487,15922,16087,16185,16205,16280,16316,16340,16388,16417,16495,16670,16689,17021,17059,17349,17402,17940,18326,18497,18968,21426,21670,22404,22735,23148,23262,23439,23461,24326,24603],"getmonousedsize":[12563],"editoruserbuildsettings":[6099],"looking":[579,1198,1375,2097,3663,4002,6712,7403,7993,8088,8245,8786,9918,10022,10449,11247,11807,11870,11976,13027,13440,14138,15110,15350,15575,15852,15893,17201,17525,18400,20959,21611,21772,21991,22203,22412,22945,23715],"genuine":[11550],"_object2world":[12156,20704],"minus":[4872,9615,15241,15457,15485],"floats":[1212,5166,5759,7663,13448,14704,15251,22738],"paid":[952,9627,13985,14800,15101,22948],"icns":[9642],"announcement":[10407],"cmd+shift+c":[23038],"shaderlab":[5221,11464,13984,17518,17800,17818,17915,18052,18054,18138,18178,18382,18484,18644,18657,18691,18858,18960,18966,18979,19039,19124,19197,19207,19254,19375,19457,19539,19731,19749,20210,20768,20813],"insert":[1127,1165,3619,6851,14991,15643,15835,16528,17421,18568,22520],"gma950":[11183],"encode":[1111,5609],"rpcs":[3897,13303,13453,13573,13735],"movenext":[22399],"temporaryfolder":[4476,4734],"increment":[19541],"getdisplaylanguage":[14608],"converting":[3650,17204,19449],"moderately":[17450,17508,17546,17620,17632,17677,17694,17703,17712,17780],"unloaded":[10974,16798,21349],"asset":[28,154,250,299,348,372,394,605,615,700,738,742,752,820,829,831,930,937,976,987,990,992,1016,1029,1034,1043,1046,1128,1327,1329,1448,1613,1695,1790,1847,2008,2223,2272,2613,2620,3061,3202,3252,3305,3391,3621,3633,3665,4156,4796,4854,4860,5114,5166,5441,5602,6433,6447,6494,6580,6625,6951,7220,7378,7764,7941,7984,8022,9208,9232,9347,9559,9621,9959,10036,10056,10514,11261,11286,11348,11832,12548,12611,12918,13988,14000,14782,14800,14851,14882,15001,15052,15101,15343,15566,17257,17382,21358,21383,21906,21915,21939,22193,22242,22402,23036,23132,23148,23241,23299,23365,23633,23767,24380,24585],"unitydeferredlibrary":[20738],"dae":[6,3652,7992,9291],"name":[119,316,327,439,671,677,707,851,937,997,1025,1030,1065,1096,1142,1290,1339,1401,1475,1586,1694,1792,1850,2064,2131,2159,2858,3199,3322,3337,3501,3510,3636,4106,4178,4565,4876,4933,5562,6387,6452,6494,6644,6667,6760,6807,6948,7084,7384,7544,7766,7942,8014,8060,8124,8141,8432,8720,8781,9242,9349,9641,10034,10102,10155,10432,10492,10888,10970,10977,11124,11260,11293,11354,11483,12041,12688,12765,12918,13279,13312,13330,13613,13790,14010,14071,14107,14166,14454,14502,14677,14716,14786,15081,15107,15196,15617,16080,16319,16819,17214,17257,17391,17525,17858,17933,18328,18485,18497,18647,18695,18866,18960,18982,19132,19182,19384,19472,20137,20443,20696,20771,20786,21370,21394,21404,21422,21693,21792,21930,21985,22061,22924,22967,23175,23248,23274,23310,23406,23450,23596,23609,24277,24383,24651],"synchronization":[464,3893,12741,13301,13448,13563,13628,13700,13732,13772,22926],"door":[393,603,2449,3477,3501,4012,6462,12879,13131,13182,13266,13303],"sleeping":[5190,15072,15587],"learn":[239,465,735,750,3846,3874,3892,6976,6990,9211,10582,10782,11904,12457,12793,12922,12943,13113,13127,13143,13961,15226,17235,21988,22679,22910,23082,23400,24013],"jit":[22455],"logoimage":[6998,24407],"lzma-based":[24016],"dumpfolder":[24152],"winrtbridge":[24026],"compiles":[17943,19486,21981,22456,23865],"extensions":[931,3798,9181,12037,14730,21289],"raises":[219,5289,19391],"merges'":[14337],"autodiscover":[1606],"submitting":[196,4444,4714,10460,15712,16535,24128],"amiga":[22092],"maxrange":[7111],"paintbrush":[21899],"investigation":[22404],"onapplicationquit":[7934,15758],"footstep":[323],"transparency":[2762,4890,5530,5695,5725,6858,7001,7334,7391,8261,9224,11437,14049,14067,14103,14306,17493,17732,17753,18083,18412,19529,20401,21405,21588,21715,21897,24416],"caching":[93,2010,4809,7223,10341,12392,12473,14935,15169],"collides":[2803,3674,3842,5863,12482,14028],"naming":[1232,2856,3503,3640,7776,7989,11123,12688,14836,21394,21930,24389],"multi-threaded":[23895],"humans":[12879],"pecularities":[19231],"vectors":[181,5400,6647,11426,14036,17806,18281,19137,19211,19447,20273,21221,22876,23607],"offsetmin":[9686],"correction":[1127,4117,5500,11226,16133,16187,16207,16429],"manifest":[1861,4460,4718,7773,14513,24317],"skip":[78,269,878,6375,13979,20424,23615],"3dphysicsraycaster":[7822],"'rename'":[1191],"vizualizes":[21141],"dimmed":[15008],"require":[78,253,1288,1843,2855,2870,3139,3167,4403,4531,5598,5765,6543,6623,6977,7279,7316,8320,8693,9260,9461,9510,9531,9617,10170,10456,11251,11501,11978,12570,12606,13177,13426,14332,15551,16595,16645,17639,19513,21345,21354,21557,21792,21965,22273,22954,23209,23364,23652,23769,23812,24199,24382],"sides":[291,343,532,2619,4090,4163,5648,9878,11621,14870,15329,15936,18383,22651],"lessons":[20822],"flexiblespace":[13390,13491],"1136x640":[10618],"appdata_tan":[18263,21082],"mygame_standard_15":[15668],"substitute":[14880],"foliage":[5578,8205,9569],"requirement":[149,9848,23878],"'bloom":[9191],"alleyways":[21557],"_refltex":[12069],"triple-clicking":[3297],"contribution":[15008,15343],"publisher":[932,980,992,1019,1030,1035,1044,22524],"unity-technologies":[254,6698,6721],"spots":[3578,12810],"head":[366,573,685,1471,2622,5737,6547,7786,8023,9926,10331,11235,13034,14838,19900,21553,23642],"calculatelayoutinputvertical":[22619],"soft-null-check":[11598],"playbook":[1546,1551,1600],"debugger":[1069,8081,10461,11331,12640,18555,19482,22392,23355,24136,24170,24206,24561],"mesh's":[3706,3759,5289,7969,11205,21740,22118],"prefabs":[1063,4909,5096,6980,9208,9560,9681,9889,10038,10104,10502,12280,14266,14780,16793,23215],"anything":[168,828,929,1166,1280,1674,2065,2118,2595,2655,2706,3501,3592,4004,4267,4551,4651,4708,4804,5322,6548,6633,6961,6979,8112,9597,9841,9868,9951,10393,10945,11293,11530,11588,11614,11939,11961,12207,13312,13803,13841,14888,15230,15346,15553,16794,17188,17796,17879,18028,18035,18428,18860,19433,19484,19545,19763,21408,22043,22871,23803,24155,24205,24401],"adjustments-":[16212,16433],"sin":[8882,10256,11782,12391,13941],"burn":[14047,14054,14098],"emitting":[2252,2268,3116,3712,4043,8226,9582,11439,14172,17470,17640],"starting":[245,705,1208,2147,2595,2841,3078,3696,4224,4681,6388,9857,10439,10770,10854,12612,12645,12788,13576,14072,14105,14964,15453,16054,16524,17201,19484,19591,19775,20136,20747,20782,21701,22181,22338,23132],"docked":[23655],"javastring":[14557],"unity_uv_starts_at_top":[18322,19078],"latest":[204,263,267,863,994,6425,9333,9488,9536,10412,10430,10444,10473,10504,10916,11338,13877,14698,15211,19391,22271,22283,22338,22446,22529,22941,23436,23643,23978,24538],"noted":[5646,6969,10432,13278,13564,21846],"texture-based":[6590],"momentarily":[8375],"tos":[13110,22678],"pronto":[15196],"hexagon":[13275],"jerkiness":[5129],"slidermaxvalue":[8896],"horizontalscrollbar":[8661],"granted":[22488],"shop":[5206],"separator":[14564],"threaded":[6570,24117],"constrast":[16246,16268],"rear":[10603,12680,13924,18448],"8-10fps":[10906,12447],"around":[188,243,291,393,465,637,1178,1643,1763,2140,2202,2806,2827,2872,2974,3086,3134,3152,3353,3437,3451,3487,3604,3645,3686,3843,3849,4001,4023,4035,4977,5139,5280,5316,5491,5512,5749,6443,6653,6996,7344,7436,8148,9361,9539,9583,9868,10201,10293,10970,11182,11199,11302,11433,11592,11659,11825,11893,11947,12034,12223,12454,12695,12818,12962,13124,13180,13189,13267,13305,13462,13722,13822,14107,14155,14184,14204,14306,14748,14872,14892,15088,15101,15233,15526,15607,15727,15843,15863,15936,15938,16158,16242,16284,16320,16365,16518,16565,16643,16964,17135,17177,17205,18104,18410,20209,21403,21546,21606,21937,21941,22043,22107,22138,22219,22255,22470,22646,22760,23393,24001,24405],"tris":[10792,15446],"isinteractable":[9801],"binding":[341,1206,14842,22999],"mark":[314,444,1912,2612,3837,6663,7329,8187,10034,11522,12820,12894,13249,13847,14335,17263,22608,23645],"prerendered":[4300,4590],"years":[6976,10404,11861,15709],"loss":[941,2294,2386,2394,2401,2419,2439,2447,2456,2847,3898,4154,5169,5643,5861,14028,22097,22369],"filtering":[217,237,1456,3772,5108,5540,11573,11670,12185,13460,16031,16594,18044,18347,21344],"url":[60,997,1619,3060,6703,7231,10103,10341,10509,10990,11269,11286,11705,15140,15798,16645,17240,17282,23203,23462,24439],"brown":[5414,21551,21720],"getfloatparameterinfo":[1295],"incremental":[1937],"garbagecollectsharedassets":[16798],"self-overlaps":[12684],"wrappers":[12541],"z10":[1519,1521,1551],"principles":[21574,22579],"triple-core":[10620],"improvements":[8306,14958],"metals":[17567],"tweaking":[1315,2254,2270,5233,7155,13085,13867,16188,18048],"touching":[9614,11613,17110],"usemacappstorevalidation":[9662],"getadvertisingid":[24334],"hips":[14835],"browsers":[8661,8775,22526,23769,23796,23881,24400],"remain":[2206,3095,3716,7786,8597,9727,10925,11720,11856,14220,15936,16073,16167,16246,16722,22114,22817],"9xx":[9920],"audiosources":[1329,1403],"division":[1324,12391,15304,22723,22890],"assetpath":[84,1828,21470],"drop":[617,935,986,1168,1205,1686,1848,2907,5091,5169,5442,6390,6458,7382,8024,9447,9504,9588,9725,9846,10033,12927,14512,14903,14974,15087,15578,16991,17131,17216,19419,20809,21790,22733,23416,23809,24521],"defaults":[4436,5411,5431,5626,5665,5690,7985,9240,17168,18137],"quarter":[4940,11164,16646,24015],"getstaticobjectfield":[14571],"specifies":[52,4019,4286,4502,4582,4791,6424,7271,9685,9934,12893,14049,14275,16159,16504,17903,18145,19043,19382,19753,21289,22462,23310],"silverlight":[17375,24359,24538],"sine-wave":[1235],"informed":[878,13351],"xmlwriter":[24263],"onpointerexit":[21755],"highscore":[11286,17284],"fancy_stuff_off":[18939],"selection":[41,698,1416,1693,1797,2621,3300,5020,6502,7350,8124,9226,9807,10041,10054,10490,14236,14451,14467,14965,15325,15671,15842,16527,17024,21403,21838,21947,23050,23984,24947],"jni_version_1_6":[14534],"thru":[1830,10293],"outer-most":[3113,14750],"unconstrained":[16467],"upper-leftmost":[9092],"services":[10480,13329,21677,22461,24159],"paramers":[11345],"hand-waving":[521],"party":[250,391,4263,4547,4647,4704,4800,9334,9670,10412,12281,17348,21275,21362,21597,21895,21924,22098,22388,22951,23162,23299],"reflect-bumped":[20451],"tags":[216,3395,4778,5228,5426,11057,11520,12063,17295,18236,18418,18510,18582,18625,18697,18982,19039,19233,19525,19594,19734,19749,19796,20173,20474,20793,21689,21771,23451],"scripted":[2693],"dll":[1203,1509,1586,4263,4547,4647,4704,4800,4814,6944,10923,10968,14516,14681,15392,21677,22495,22546,23298,23412,24142,24181,24277,24311,24363,24653],"implies":[2858,3501,5417,22761],"demands":[1203,7134,16313,22021],"live":[4447,4654,5113,8172,10102,12229,12454,12526,13638,14609,17537,22741,23134,24020,24183],"internal-halo":[3445],"dot":[166,1762,8277,12021,13002,13942,19281,19869,20194,21945,22896,22918],"lee":[11235],"standard":[158,236,314,471,1315,1456,2005,2131,2140,2213,2286,2619,2776,3142,3352,3533,3676,4090,4233,4510,4593,4728,4909,5073,5096,5178,5216,5397,5440,5544,5764,5783,6356,6494,6634,6865,7310,7390,7506,8175,9183,9355,9357,9457,9513,9558,9568,9597,9889,10079,10405,10539,10854,11223,11306,11465,11641,12284,12647,12818,13434,13975,14007,14069,14105,14495,14611,14748,14829,14883,15196,15414,15453,15511,15681,15791,15917,15939,15976,16017,16023,16033,16062,16139,16190,16209,16247,16257,16273,16287,16323,16357,16366,16398,16407,16427,16569,16580,16603,16649,16659,16675,16787,16996,17051,17097,17136,17160,17178,17191,17199,17203,17444,17448,17452,17458,17462,17469,17498,17502,17506,17510,17539,17543,17548,17556,17562,17566,17608,17612,17617,17622,17626,17630,17634,17638,17667,17671,17675,17679,17682,17687,17691,17696,17700,17705,17709,17714,17718,17722,17726,17731,17750,17777,17782,17789,17837,17939,18075,18241,18505,18685,18859,19034,19707,20145,20274,20358,20504,20926,21282,21365,21550,21572,21582,21607,21610,21664,21691,21829,21847,21859,21897,21916,21947,21960,22191,22437,22987,23421,23635,23728,24326,24523],"freehand":[22255],"_reflectcolor":[12007],"omissions":[24716],"courses":[14913],"paste":[479,1595,1795,5232,8373,8873,14408,18424,23047,23293],"full-featured":[12482,23401],"overrideexamplenative":[14660],"community":[931,6738,15230],"pair":[8402,16692,18342,21691,23402],"consumption":[10767,13448,15352,22444],"self-sufficient":[13316],"tennis":[5354],"gl_backmaterial":[19115],"before":[9,196,221,247,265,386,485,591,836,1005,1181,1209,1342,1429,1665,1804,1918,2131,2579,2617,2962,3092,3619,3676,3713,3802,3892,4012,4121,4142,4444,4714,5143,5202,5322,5440,5739,5765,6502,6739,6868,6961,7330,7776,7899,7942,8112,8769,8816,9215,9294,9358,9412,9441,9559,9763,9872,9926,10075,10404,10427,10441,10460,10560,10767,10953,10979,11223,11350,11731,12035,12196,12617,12645,12702,13131,13266,13282,13333,13578,13645,13729,13769,13779,14037,14109,14172,14334,14403,14689,14920,14958,15090,15114,15199,15325,15344,15624,15655,15713,15917,15939,15976,16017,16023,16033,16052,16062,16139,16190,16247,16257,16273,16287,16323,16358,16366,16398,16407,16453,16524,16544,16581,16603,16649,16659,16675,16787,16840,16996,17051,17094,17136,17160,17178,17374,17387,17868,18312,18412,18557,18699,18712,18861,19177,19280,19541,19760,20603,21666,21860,22125,22201,22617,22913,22961,23190,23214,23268,23301,23359,23605,23785,24087,24113,24228,24441],"#160":[449,2150,2164,2201,2580,2672,2902,3147,3296,3355,3414,3457,3564,3598,3882,3897,3993,4076,4198,4528,4628,4686,4762,4792,4903,4975,5105,5130,5187,5522,5669,5694,5720,5777,5824,7970,13860,15928,16094,16233,16723,21692,21859],"0px":[23558],"success":[6664,13649,13724,13887],"fontscale":[14635,22313],"loudest":[2474,2577],"represents":[313,1418,2076,2131,2210,2427,2552,2737,2992,3208,4968,5207,5758,9183,9357,10805,11646,12800,12916,13280,14077,14272,14302,15852,16159,16195,16498,16640,17858,20824,21614,21834,22894,23376],"multitasking":[4341,4624],"copying":[11506,14781,22495],"overdraw":[10449,10767,11745,11879,13841,16309,23704],"linux64":[6502],"lt":[1072,1271,1724,5505,6377,6494,6915,6929,7024,7111,7121,8381,8898,9272,9926,10120,10840,10875,11074,12241,12848,14456,14535,15258,15396,15575,15639,15779,16814,17295,18304,19079,20137,20899,21516,21692,21946,22125,22343,22389,22544,22751,23340,23481,23923,24128,24202,24216,24413,24663,24693],"underscores":[17437,18943],"ninjas":[20353],"logs":[921,1533,4415,4543,4605,11305,11578,13997,15636,22348,22446,23444],"room":[2515,2534,5048,5457,8112,9183,13846,21557],"appearance":[3333,3538,4885,4963,5395,5739,6618,6742,6992,7582,8772,9301,11912,12408,15903,16558,20810,21564,21844,22105,22675,22731],"app_name":[14634,22312],"high":[693,1203,2293,2379,2387,2395,2449,2525,2543,2691,2833,2879,3095,3165,3716,3832,3995,4307,4597,4947,5016,5173,5641,5680,5702,5792,6447,7134,7909,7993,8164,9182,9253,9303,9575,9630,9875,10571,10908,11152,11234,11670,11729,11793,11860,11875,11950,12041,12449,12913,13197,13281,13724,13770,14045,14211,14250,14874,15012,15434,15942,16295,16347,16385,16391,16584,16801,17092,17567,18046,18603,19443,21580,21586,21973,22021,22093,22236,23780,24014],"availability":[13423],"customconnection":[10344],"stereowidener":[1281],"destroy":[3116,3745,4043,6932,7931,8377,10227,11263,11303,12206,12464,14116,16797,22370,22443,22862],"picture":[1675,1849,3867,4960,5160,7354,11581,12886,15524,22246,22867],"keyboard":[194,722,3298,3341,3519,6614,6804,7802,7920,9596,9745,9948,10024,10030,11195,11611,11693,14635,15116,15725,16746,16750,16965,21942,22289,22681,24099],"moods":[1133,1374],"first":[30,155,179,196,203,234,243,279,310,324,368,437,444,470,591,943,1200,1598,1613,1618,1637,1733,1753,1799,1962,2189,2245,2261,2361,2367,2522,2542,2801,3366,3397,3596,3636,3758,3887,4046,4208,4716,4771,4999,5096,5298,5393,5414,5431,5498,5500,5616,5790,5836,6394,6452,6653,6680,6692,6744,6961,7058,7276,7334,7382,7419,7712,7776,7826,7896,7942,8058,8120,8354,8693,8873,9054,9213,9422,9539,9560,9677,9701,9796,9857,9911,9934,10117,10441,10470,10482,10766,10953,10978,11057,11120,11152,11297,11350,11923,11951,11980,12226,12489,12652,12800,12885,12918,12931,13021,13088,13119,13133,13160,13309,13331,13460,13500,13613,13841,13889,13986,14100,14198,14343,14403,14501,14689,15084,15108,15169,15191,15243,15342,15885,16085,16452,16551,16981,16999,17121,17270,17389,17869,17932,18035,18104,18142,18428,18497,18696,18861,18940,19295,19390,19591,19732,20735,20772,20782,21107,21439,21614,21841,21910,21935,21994,22190,22244,22402,22548,22580,22668,22744,22877,22912,22963,23156,23176,23243,23301,23377,23393,23403,23519,23623,23693,23772,23816,23954,23998,24044,24168,24229,24427,24572,24609,24660],"cockpit":[6407],"scene":[243,393,588,622,678,682,741,764,823,1054,1112,1131,1351,1396,1460,1662,1957,2078,2118,2121,2136,2140,2191,2421,2459,2559,2665,2737,2820,3023,3047,3062,3091,3141,3264,3444,3532,3578,3589,3642,3684,3746,3794,3902,4001,4058,4072,4104,4884,4926,4966,4983,5134,5280,5316,5372,5402,5486,5716,5745,5825,5857,6412,6427,6443,6593,6665,6680,6770,6856,6926,6979,7087,7133,7158,7274,7381,7436,7465,7786,7814,7845,7897,8039,8082,8123,8170,8276,8306,9183,9208,9239,9316,9354,9375,9389,9401,9430,9489,9520,9548,9577,9677,9725,9757,9851,9883,9891,9978,10032,10108,10293,10765,10810,10909,10951,11044,11055,11119,11127,11155,11193,11211,11223,11286,11424,11516,11825,12511,12655,12788,12800,12906,12931,12968,13087,13140,13155,13269,13271,13504,13839,13842,13916,13998,14005,14019,14069,14244,14266,14281,14302,14665,14748,14781,14868,14996,15063,15071,15107,15191,15339,15350,15443,15456,15484,15564,15837,15862,15938,15975,16056,16135,16208,16256,16294,16335,16365,16431,16622,16627,16660,16686,16755,16794,16964,17088,17103,17111,17207,17258,17378,17522,18033,18384,18696,19074,19513,19589,20184,20780,21275,21360,21543,21576,21647,21772,21818,21839,21843,21927,21939,21951,21956,21967,21984,22086,22104,22193,22242,22279,22443,22606,22637,22665,23025,23238,23350,23373,23382,23397,23675,23690,23761,24001,24642,24676,24712],"globalgamemanager":[5884],"shader_feature":[13980,18514,18936],"candidate":[9619,10846,15599],"timescale":[2200,22027],"structure":[151,364,737,1128,1231,1403,1470,2130,2611,4447,4565,4654,6661,7275,7942,8039,8348,9463,9499,9593,11615,11978,12451,12684,13175,13264,13435,14828,15098,15562,16842,17802,17868,17916,19111,19207,19945,20356,20506,20820,21080,21665,22198,22243,23301,23448,24001,24365],"ps3-specific":[1279],"exponent":[16376,18358,19054,19246],"verticalscrollbar":[8676],"mdb":[23352],"movedestination":[13250]};
